/** @file     SchM_Can.h
  *
  * @brief    Basic Software Scheduler Module Interlink header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.8.0 
  */

#ifndef SchM_Can
#define SchM_Can

#include "SchM_Can_Type.h"
#include "Rte_Intl.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_BSWSE_MainFunction_BusOff)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_BSWSE_MainFunction_Read)
#elif defined(RTE_RUNNABLEAPI_BSWSE_MainFunction_Write)
#elif defined(RTE_RUNNABLEAPI_Can_Init)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/* API Mapping Macros */
#ifndef RTE_CORE
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_BSWSE_MainFunction_BusOff) || defined(RTE_RUNNABLEAPI_Can_Init)
/* Inline function call optimization; SchM_Enter_Can_CAN_EXCLUSIVE_AREA_0 to direct access */
#define SchM_Enter_Can_CAN_EXCLUSIVE_AREA_0()  ( GetResource(Rte_EA_BSWImpl5_BSWIMPL_Can_CAN_EXCLUSIVE_AREA_0) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_BSWSE_MainFunction_BusOff) || defined(RTE_RUNNABLEAPI_Can_Init)
/* Inline function call optimization; SchM_Exit_Can_CAN_EXCLUSIVE_AREA_0 to direct access */
#define SchM_Exit_Can_CAN_EXCLUSIVE_AREA_0()  ( ReleaseResource(Rte_EA_BSWImpl5_BSWIMPL_Can_CAN_EXCLUSIVE_AREA_0) )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Schedulable Entity Prototypes
 ***
 *******************************************************/

#define CAN_START_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, CAN_CODE) Can_MainFunction_BusOff(void);
#define CAN_STOP_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */
#define CAN_START_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, CAN_CODE) Can_MainFunction_Read(void);
#define CAN_STOP_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */
#define CAN_START_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, CAN_CODE) Can_MainFunction_Write(void);
#define CAN_STOP_SEC_CODE
#include "Can_MemMap.h" /*lint !e537 permit multiple inclusion */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !SchM_Can */
