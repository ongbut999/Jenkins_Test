/** @file     Rte_ASW_Diag.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.8.0 
  */

#ifndef RTE_ASW_DIAG_H
#define RTE_ASW_DIAG_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_ASW_Diag_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_Diag_IOControl_VacuumPumpPressure_ReadData)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_Diag_IOControl_VacuumPumpPressure_freezeCurrentState)
#elif defined(RTE_RUNNABLEAPI_Diag_IOControl_VacuumPumpPressure_resetToDefault)
#elif defined(RTE_RUNNABLEAPI_Diag_IOControl_VacuumPumpPressure_returnControlToECU)
#elif defined(RTE_RUNNABLEAPI_Diag_IOControl_VacuumPumpPressure_shortTermAdjustment)
#elif defined(RTE_RUNNABLEAPI_Diag_RoutineServices_DriveVacuumPump_RequestRoutineResults)
#elif defined(RTE_RUNNABLEAPI_Diag_RoutineServices_DriveVacuumPump_Start)
#elif defined(RTE_RUNNABLEAPI_Diag_RoutineServices_DriveVacuumPump_Stop)
#elif defined(RTE_RUNNABLEAPI_RE_Diag_SWC)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_DCMServices_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DCMServices_E_OK ((Std_ReturnType)0)
#define RTE_E_DataServices_DcmDspData_VacuumPumpPressure_1100_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_DataServices_DcmDspData_VacuumPumpPressure_1100_E_OK ((Std_ReturnType)0)
#define RTE_E_RoutineServices_DcmDspRoutine_DriveVacuumPump_DCM_E_FORCE_RCRRP ((Std_ReturnType)12)
#define RTE_E_RoutineServices_DcmDspRoutine_DriveVacuumPump_DCM_E_PENDING ((Std_ReturnType)10)
#define RTE_E_RoutineServices_DcmDspRoutine_DriveVacuumPump_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_RoutineServices_DcmDspRoutine_DriveVacuumPump_E_OK ((Std_ReturnType)0)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_ASW_Diag {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_ASW_Diag Rte_CDS_ASW_Diag;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_ASW_Diag, RTE_CONST) Rte_Inst_ASW_Diag;
#define RTE_STOP_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_ASW_Diag, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, RTE_DATA) Rte_Rx_000008;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, RTE_DATA) Rte_Rx_000009;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, RTE_DATA) Rte_Rx_000010;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, RTE_DATA) Rte_Rx_000011;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Diag_SWC)
/* Inline read optimization; Rte_Read_RPort_DataServices_DcmDspData_SystemFaultRank_Write_Data to direct access */
#define Rte_Read_RPort_DataServices_DcmDspData_SystemFaultRank_Write_Data( data )  ( RTE_ATOMIC8((*(data)) = Rte_Rx_000008),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Diag_SWC)
/* Inline read optimization; Rte_Read_RPort_DataServices_DcmDspData_VehicleSpeed_Write_Data to direct access */
#define Rte_Read_RPort_DataServices_DcmDspData_VehicleSpeed_Write_Data( data )  ( RTE_ATOMIC8((*(data)) = Rte_Rx_000009),((VAR(Std_ReturnType, AUTOMATIC))RTE_E_OK) )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Diag_SWC)
/* Inline Write optimization; Rte_Write_P_DataServices_DcmDspData_SystemFaultRank_Read_Data to direct write */
#define Rte_Write_P_DataServices_DcmDspData_SystemFaultRank_Read_Data( data ) ( RTE_ATOMIC8(Rte_Rx_000010 = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Diag_SWC)
/* Inline Write optimization; Rte_Write_P_DataServices_DcmDspData_VehicleSpeed_Read_Data to direct write */
#define Rte_Write_P_DataServices_DcmDspData_VehicleSpeed_Read_Data( data ) ( RTE_ATOMIC8(Rte_Rx_000011 = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define ASW_Diag_START_SEC_CODE
#include "ASW_Diag_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_IOControl_VacuumPumpPressure_ReadData_func(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_IOControl_VacuumPumpPressure_freezeCurrentState_func(CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_IOControl_VacuumPumpPressure_resetToDefault_func(CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_IOControl_VacuumPumpPressure_returnControlToECU_func(CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_IOControl_VacuumPumpPressure_shortTermAdjustment_func(P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) ControlStateInfo,
                                                                                               CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_RoutineServices_DriveVacuumPump_RequestRoutineResults_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                                    CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspRequestRoutineResultsOutSignal_0,
                                                                                                    CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_RoutineServices_DriveVacuumPump_Start_func(VAR(Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalType, AUTOMATIC) DataIn_DcmDspStartRoutineInSignal,
                                                                                    VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                    CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal,
                                                                                    CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(Std_ReturnType, ASW_Diag_CODE) Diag_RoutineServices_DriveVacuumPump_Stop_func(VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus,
                                                                                   CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStopRoutineOutSignal,
                                                                                   CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);
FUNC(void, ASW_Diag_CODE) RE_Diag_SWC_func(void);
#define ASW_Diag_STOP_SEC_CODE
#include "ASW_Diag_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ASW_DIAG_H */
