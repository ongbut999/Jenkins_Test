/** @file     Rte_ASW_NVM.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.8.0 
  */

#ifndef RTE_ASW_NVM_H
#define RTE_ASW_NVM_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_ASW_NVM_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_NvMService_E_NOT_OK ((Std_ReturnType)1)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_ASW_NVM {
   /* Per-Instance Memorys (sic) */
   P2VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type   , AUTOMATIC, RTE_DATA) Pim_ASW_NVM_BlockNative_1024_1;
   P2VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type, AUTOMATIC, RTE_DATA) Pim_ASW_NVM_BlockNative_1024_2;
};
typedef struct Rte_CDS_ASW_NVM Rte_CDS_ASW_NVM;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
#ifndef RTE_CORE
typedef Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type ASW_NVM_BlockNative_1024_Type;
typedef Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type ASW_NVM_BlockRedundant_1024_Type;
#endif /* RTE_CORE */

/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_ASW_NVM, RTE_CONST) Rte_Inst_ASW_NVM;
#define RTE_STOP_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_ASW_NVM, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define NvM_START_SEC_CODE
#include "NvM_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, NvM_CODE) NvM_EraseNvBlock(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0);

FUNC(Std_ReturnType, NvM_CODE) NvM_GetDataIndex(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                                CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataIndexPtr);

FUNC(Std_ReturnType, NvM_CODE) NvM_GetErrorStatus(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                                  CONSTP2VAR(NvM_RequestResultType, AUTOMATIC, RTE_APPL_DATA) RequestResultPtr);

FUNC(Std_ReturnType, NvM_CODE) NvM_InvalidateNvBlock(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0);

FUNC(Std_ReturnType, NvM_CODE) NvM_ReadBlock(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                             VAR(NvM_Rb_VoidPtr, AUTOMATIC) DstPtr);

FUNC(Std_ReturnType, NvM_CODE) NvM_RestoreBlockDefaults(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                                        VAR(NvM_Rb_VoidPtr, AUTOMATIC) DstPtr);

FUNC(Std_ReturnType, NvM_CODE) NvM_SetDataIndex(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                                VAR(uint8, AUTOMATIC) DataIndex);

FUNC(Std_ReturnType, NvM_CODE) NvM_SetRamBlockStatus(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                                     VAR(boolean, AUTOMATIC) BlockChanged);

FUNC(Std_ReturnType, NvM_CODE) NvM_WriteBlock(VAR(NvM_BlockIdType, AUTOMATIC) Rte_PDAV0,
                                              VAR(NvM_Rb_ConstVoidPtr, AUTOMATIC) SrcPtr);

#define NvM_STOP_SEC_CODE
#include "NvM_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_NvM, RTE_CONST) Rte_Self_CPT_NvM;
#define RTE_STOP_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type, RTE_APPL_DATA) Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_VAR_CLEARED_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type, RTE_APPL_DATA) Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2;
#define RTE_STOP_SEC_EcucPartition_Core0_VAR_CLEARED_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_EraseBlock to NvM_EraseNvBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_EraseBlock() NvM_EraseNvBlock(((VAR(NvM_BlockIdType, AUTOMATIC))12))

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetDataIndex to NvM_GetDataIndex */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetDataIndex( DataIndexPtr ) NvM_GetDataIndex(((VAR(NvM_BlockIdType, AUTOMATIC))12), DataIndexPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus to NvM_GetErrorStatus */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus( RequestResultPtr ) NvM_GetErrorStatus(((VAR(NvM_BlockIdType, AUTOMATIC))12), RequestResultPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_InvalidateNvBlock to NvM_InvalidateNvBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_InvalidateNvBlock() NvM_InvalidateNvBlock(((VAR(NvM_BlockIdType, AUTOMATIC))12))

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_ReadBlock to NvM_ReadBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_ReadBlock( DstPtr ) NvM_ReadBlock(((VAR(NvM_BlockIdType, AUTOMATIC))12), DstPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_RestoreBlockDefaults to NvM_RestoreBlockDefaults */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_RestoreBlockDefaults( DstPtr ) NvM_RestoreBlockDefaults(((VAR(NvM_BlockIdType, AUTOMATIC))12), DstPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_SetDataIndex to NvM_SetDataIndex */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_SetDataIndex( DataIndex ) NvM_SetDataIndex(((VAR(NvM_BlockIdType, AUTOMATIC))12), DataIndex)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_SetRamBlockStatus to NvM_SetRamBlockStatus */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_SetRamBlockStatus( BlockChanged ) NvM_SetRamBlockStatus(((VAR(NvM_BlockIdType, AUTOMATIC))12), BlockChanged)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock to NvM_WriteBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock( SrcPtr ) NvM_WriteBlock(((VAR(NvM_BlockIdType, AUTOMATIC))12), SrcPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_EraseBlock to NvM_EraseNvBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_EraseBlock() NvM_EraseNvBlock(((VAR(NvM_BlockIdType, AUTOMATIC))13))

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetDataIndex to NvM_GetDataIndex */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetDataIndex( DataIndexPtr ) NvM_GetDataIndex(((VAR(NvM_BlockIdType, AUTOMATIC))13), DataIndexPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetErrorStatus to NvM_GetErrorStatus */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetErrorStatus( RequestResultPtr ) NvM_GetErrorStatus(((VAR(NvM_BlockIdType, AUTOMATIC))13), RequestResultPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_InvalidateNvBlock to NvM_InvalidateNvBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_InvalidateNvBlock() NvM_InvalidateNvBlock(((VAR(NvM_BlockIdType, AUTOMATIC))13))

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_ReadBlock to NvM_ReadBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_ReadBlock( DstPtr ) NvM_ReadBlock(((VAR(NvM_BlockIdType, AUTOMATIC))13), DstPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_RestoreBlockDefaults to NvM_RestoreBlockDefaults */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_RestoreBlockDefaults( DstPtr ) NvM_RestoreBlockDefaults(((VAR(NvM_BlockIdType, AUTOMATIC))13), DstPtr)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_SetDataIndex to NvM_SetDataIndex */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_SetDataIndex( DataIndex ) NvM_SetDataIndex(((VAR(NvM_BlockIdType, AUTOMATIC))13), DataIndex)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_SetRamBlockStatus to NvM_SetRamBlockStatus */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_SetRamBlockStatus( BlockChanged ) NvM_SetRamBlockStatus(((VAR(NvM_BlockIdType, AUTOMATIC))13), BlockChanged)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NVM)
/* Inline function call optimization; Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_WriteBlock to NvM_WriteBlock */
#define Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_WriteBlock( SrcPtr ) NvM_WriteBlock(((VAR(NvM_BlockIdType, AUTOMATIC))13), SrcPtr)

#endif
/* Inline read optimization; Rte_Pim_ASW_NVM_BlockNative_1024_1 to direct read */
#define Rte_Pim_ASW_NVM_BlockNative_1024_1()  ( (P2VAR(ASW_NVM_BlockNative_1024_Type, AUTOMATIC, RTE_APPL_DATA)) &Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1 )
/* Inline read optimization; Rte_Pim_ASW_NVM_BlockNative_1024_2 to direct read */
#define Rte_Pim_ASW_NVM_BlockNative_1024_2()  ( (P2VAR(ASW_NVM_BlockRedundant_1024_Type, AUTOMATIC, RTE_APPL_DATA)) &Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2 )

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define ASW_NVM_START_SEC_CODE
#include "ASW_NVM_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, ASW_NVM_CODE) RE_ASW_NVM_func(void);
#define ASW_NVM_STOP_SEC_CODE
#include "ASW_NVM_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ASW_NVM_H */
