/** @file     Rte_ASW_NM.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.8.0 
  */

#ifndef RTE_ASW_NM_H
#define RTE_ASW_NM_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_ASW_NM_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_ASW_NM)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/

#ifndef RTE_CORE
#define RTE_E_ComM_ECUModeLimitation_E_NOT_OK ((Std_ReturnType)1)
#define RTE_E_ComM_UserRequest_E_MODE_LIMITATION ((Std_ReturnType)2)
#define RTE_E_ComM_UserRequest_E_NOT_OK ((Std_ReturnType)1)
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_ASW_NM {
   uint8 Rte_Dummy;
};
typedef struct Rte_CDS_ASW_NM Rte_CDS_ASW_NM;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_ASW_NM, RTE_CONST) Rte_Inst_ASW_NM;
#define RTE_STOP_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_ASW_NM, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define ComM_START_SEC_CODE
#include "ComM_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, ComM_CODE) ComM_GetCurrentComMode(VAR(ComM_UserHandleType, AUTOMATIC) Rte_PDAV0,
                                                       CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

FUNC(Std_ReturnType, ComM_CODE) ComM_GetMaxComMode(VAR(ComM_UserHandleType, AUTOMATIC) Rte_PDAV0,
                                                   CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

FUNC(Std_ReturnType, ComM_CODE) ComM_GetRequestedComMode(VAR(ComM_UserHandleType, AUTOMATIC) Rte_PDAV0,
                                                         CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

FUNC(Std_ReturnType, ComM_CODE) ComM_LimitECUToNoComMode(VAR(boolean, AUTOMATIC) Status);

FUNC(Std_ReturnType, ComM_CODE) ComM_ReadInhibitCounter(CONSTP2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) CounterValue);

FUNC(Std_ReturnType, ComM_CODE) ComM_RequestComMode(VAR(ComM_UserHandleType, AUTOMATIC) Rte_PDAV0,
                                                    VAR(ComM_ModeType, AUTOMATIC) ComMode);

FUNC(Std_ReturnType, ComM_CODE) ComM_ResetInhibitCounter(void);

FUNC(Std_ReturnType, ComM_CODE) ComM_SetECUGroupClassification(VAR(ComM_InhibitionStatusType, AUTOMATIC) Status);

#define ComM_STOP_SEC_CODE
#include "ComM_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(Rte_SelfType_ComM, RTE_CONST) Rte_Self_CPT_ComM;
#define RTE_STOP_SEC_EcucPartition_Core0_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_ASW_NM_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_ASW_NM_PP_BswMArbitration_BswM_MRP_Network_uint8(VAR(uint8, AUTOMATIC) data);
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_ASW_NM_PP_BswMArbitration_BswM_MRP_NmState_uint8(VAR(uint8, AUTOMATIC) data);
#define RTE_ASW_NM_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RP_ComM_UserRequest_CAN0_GetCurrentComMode to ComM_GetCurrentComMode */
#define Rte_Call_RP_ComM_UserRequest_CAN0_GetCurrentComMode( ComMode ) ComM_GetCurrentComMode(((VAR(ComM_UserHandleType, AUTOMATIC))0), ComMode)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RP_ComM_UserRequest_CAN0_GetMaxComMode to ComM_GetMaxComMode */
#define Rte_Call_RP_ComM_UserRequest_CAN0_GetMaxComMode( ComMode ) ComM_GetMaxComMode(((VAR(ComM_UserHandleType, AUTOMATIC))0), ComMode)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RP_ComM_UserRequest_CAN0_GetRequestedComMode to ComM_GetRequestedComMode */
#define Rte_Call_RP_ComM_UserRequest_CAN0_GetRequestedComMode( ComMode ) ComM_GetRequestedComMode(((VAR(ComM_UserHandleType, AUTOMATIC))0), ComMode)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RP_ComM_UserRequest_CAN0_RequestComMode to ComM_RequestComMode */
#define Rte_Call_RP_ComM_UserRequest_CAN0_RequestComMode( ComMode ) ComM_RequestComMode(((VAR(ComM_UserHandleType, AUTOMATIC))0), ComMode)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RPort_EcuModeLimitation_LimitECUToNoComMode to ComM_LimitECUToNoComMode */
#define Rte_Call_RPort_EcuModeLimitation_LimitECUToNoComMode( Status ) ComM_LimitECUToNoComMode(Status)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RPort_EcuModeLimitation_ReadInhibitCounter to ComM_ReadInhibitCounter */
#define Rte_Call_RPort_EcuModeLimitation_ReadInhibitCounter( CounterValue ) ComM_ReadInhibitCounter(CounterValue)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RPort_EcuModeLimitation_ResetInhibitCounter to ComM_ResetInhibitCounter */
#define Rte_Call_RPort_EcuModeLimitation_ResetInhibitCounter() ComM_ResetInhibitCounter()

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
/* Inline function call optimization; Rte_Call_RPort_EcuModeLimitation_SetECUGroupClassification to ComM_SetECUGroupClassification */
#define Rte_Call_RPort_EcuModeLimitation_SetECUGroupClassification( Status ) ComM_SetECUGroupClassification(Status)

#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
#define Rte_Write_PP_BswMArbitration_BswM_MRP_Network_uint8( data ) (Rte_Write_ASW_NM_PP_BswMArbitration_BswM_MRP_Network_uint8(data))
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_ASW_NM)
#define Rte_Write_PP_BswMArbitration_BswM_MRP_NmState_uint8( data ) (Rte_Write_ASW_NM_PP_BswMArbitration_BswM_MRP_NmState_uint8(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define ASW_NM_START_SEC_CODE
#include "ASW_NM_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, ASW_NM_CODE) RE_ASW_NM_func(void);
#define ASW_NM_STOP_SEC_CODE
#include "ASW_NM_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ASW_NM_H */
