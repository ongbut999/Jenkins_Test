/** @file     Rte_Type.h
  *
  * @brief    RTE type definitions
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 6.8.0 
  */

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

#include "Rte.h"
#include "Rte_Cfg.h"

/*******************************************************
 ***
 *** Forward Declarations
 ***
 *******************************************************/

struct Rte_CDS_ASW_BASE;
struct Rte_CDS_ASW_COM;
struct Rte_CDS_ASW_CORE1;
struct Rte_CDS_ASW_CORE2;
struct Rte_CDS_ASW_Dem;
struct Rte_CDS_ASW_Diag;
struct Rte_CDS_ASW_NM;
struct Rte_CDS_ASW_NVM;
struct Rte_CDS_ASW_WDG;
struct Rte_CDS_ASW_XCP;
struct Rte_CDS_BswM;
struct Rte_CDS_ComM;
struct Rte_CDS_Dcm;
struct Rte_CDS_Dem;
struct Rte_CDS_Det;
struct Rte_CDS_EcuM;
struct Rte_CDS_NvM;
struct Rte_CDS_WdgM;

/*******************************************************
 ***
 *** Types
 ***
 *******************************************************/

/* Information: No typedef for ImplementationDataType uint8 because typeEmitter is a value other than RTE */

typedef uint8 Impl_NVM_DstPtrType_1024[1024];
/* Information: No typedef for ImplementationDataType uint16 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Std_VersionInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType BswM_ConfigType because typeEmitter is a value other than RTE */

typedef uint16 BswM_ModeType;

typedef uint16 BswM_UserType;

/* Information: No typedef for ImplementationDataType Can_HwHandleType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Can_IdType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Can_HwType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint32 because typeEmitter is a value other than RTE */

typedef uint32 CanIf_u32_impl;

typedef uint16 CanIf_u16_impl;

typedef uint8 CanIf_u8_impl;

typedef struct {
   CanIf_u32_impl CanId;
   CanIf_u16_impl swPduHandle;
   CanIf_u8_impl  SduLength;
   CanIf_u8_impl  BufferIndex;
} CanIf_CanIdBuffer_struct_impl;

/* Information: No typedef for ImplementationDataType PduIdType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanIf_ConfigType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanIf_ControllerModeType because typeEmitter is a value other than RTE */

typedef uint8 CanIf_ControllerModeType_Enum_impl;

typedef uint8 CanIf_PduModeType_Enum_impl;

typedef struct {
   CanIf_ControllerModeType_Enum_impl DeviceMode;
   CanIf_PduModeType_Enum_impl        ChannelMode;
} CanIf_ControllerStateType_struct_impl;

typedef CanIf_ControllerStateType_struct_impl CanIf_ControllerState_Astruct_impl[2];
/* Information: No typedef for ImplementationDataType CanIf_NotifStatusType because typeEmitter is a value other than RTE */

typedef uint8 CanIf_NotifStatusType_Enum_impl;

typedef CanIf_NotifStatusType_Enum_impl CanIf_NotifStatusType_Aenum_impl[10];
/* Information: No typedef for ImplementationDataType CanIf_PduGetModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanIf_PduModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanIf_PduSetModeType because typeEmitter is a value other than RTE */

typedef uint8 CanIf_Prv_BuffStatus_ten_Enum_impl;

typedef struct {
   CanIf_u8_impl last_index;
   CanIf_u8_impl bufferstatus;
} CanIf_Prv_TxBufferStatus_tst_struct_impl;

typedef uint8 CanIf_boolean_impl;

/* Information: No typedef for ImplementationDataType CanNm_ConfigType because typeEmitter is a value other than RTE */

typedef uint8 CanSM_boolean_Impl;

typedef CanSM_boolean_Impl CanSM_Aboolean_impl[2];
typedef uint8 CanSM_u8_Impl;

typedef CanSM_u8_Impl CanSM_Au8_impl[2];
/* Information: No typedef for ImplementationDataType CanSM_BswMCurrentStateType because typeEmitter is a value other than RTE */

typedef uint8 CanSM_BusOffRecoveryStateType_Enum_impl;

/* Information: No typedef for ImplementationDataType CanSM_ConfigType because typeEmitter is a value other than RTE */

typedef uint8 CanSM_NetworkModeStateType_Enum_impl;

/* Information: No typedef for ImplementationDataType CanSM_StateType because typeEmitter is a value other than RTE */

typedef uint16 CanSM_u16_Impl;

typedef uint8 CanSM_TimerStateType_Enum_impl;

typedef struct {
   CanSM_u16_Impl                 cntTick_u16;
   CanSM_TimerStateType_Enum_impl stTimer;
} CanSM_TimerConfig_tst_struct_impl;

typedef CanSM_TimerConfig_tst_struct_impl CanSM_TimerConfig_ast_Astruct_impl[2];
typedef CanSM_BusOffRecoveryStateType_Enum_impl CanSM_currBOR_State_a_Aenum_impl[2];
typedef CanSM_NetworkModeStateType_Enum_impl CanSM_currComM_Mode_a_Aenum_impl[2];
/* Information: No typedef for ImplementationDataType CanTp_ConfigStructType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanTp_ConfigType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType CanTp_TickType because typeEmitter is a value other than RTE */

typedef uint16 Com_impl_u16;

typedef Com_impl_u16 Com_SigBuf_au16_impl[2];
typedef uint8 Com_impl_u8;

typedef Com_impl_u8 Com_SigBuf_au8_impl[11];
typedef Com_impl_u8 Com_implDataType_au8_Size1[1];
typedef Com_impl_u8 Com_implDataType_au8_Size7[7];
typedef Com_impl_u8 Com_implDataType_au8_Size8[8];
/* Information: No typedef for ImplementationDataType boolean because typeEmitter is a value other than RTE */

typedef boolean Com_impl_b;

typedef uint32 Com_impl_u32;

/* Information: No typedef for ImplementationDataType uint64 because typeEmitter is a value other than RTE */

typedef uint64 Com_impl_u64;

typedef uint32 ComM_uint32_Impl;

typedef uint16 ComM_uint16_Impl;

typedef uint8 ComM_uint8_Impl;

typedef uint8 ComM_bool_Impl;

typedef struct {
   ComM_uint32_Impl ChannelState_e;
   ComM_uint32_Impl LightTimeoutCtr_u32;
   ComM_uint16_Impl MinFullComTimeoutCtr_u16;
   ComM_uint8_Impl  ChannelMode_u8;
   ComM_uint8_Impl  BusSmMode_u8;
   ComM_uint8_Impl  UserRequestCtr_u8;
   ComM_uint8_Impl  PassiveRequestState_u8;
   ComM_uint8_Impl  PncRequestCtr_u8;
   ComM_uint8_Impl  InhibitionReqStatus_u8;
   ComM_bool_Impl   NmNetworkRequestStatus_b;
   ComM_bool_Impl   DiagnosticRequestState_b;
   ComM_bool_Impl   CommunicationAllowed_b;
   ComM_bool_Impl   NmBusSleepIndicationStatus_b;
   ComM_bool_Impl   NmPrepareBusSleepIndicationStatus_b;
   ComM_bool_Impl   NmNetworkModeStatus_b;
} ComM_ChannelStruct_Impl;

typedef ComM_ChannelStruct_Impl ComM_ChannelStruct_Array_Impl[2];
typedef uint8 ComM_InhibitionStatusType;

typedef uint8 ComM_ModeType;

typedef uint8 ComM_UserHandleType;

typedef struct {
   ComM_uint16_Impl WakeUpInhibitionCtr_u16;
   ComM_uint16_Impl LimitToNoComCtr_u16;
   ComM_uint8_Impl  RequestedUserMode_t;
   ComM_uint8_Impl  IndicatedUserMode_t;
   ComM_uint8_Impl  numChannelsInFullCom_u8;
   ComM_uint8_Impl  numChannelsInSilentCom_u8;
   ComM_uint8_Impl  numChannelsInNoCom_u8;
} ComM_UserStruct_Impl;

typedef ComM_UserStruct_Impl ComM_UserStruct_Array_Impl[2];
/* Information: No typedef for ImplementationDataType BufReq_ReturnType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType BusTrcvErrorType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType IcomConfigIdType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType IcomSwitch_ErrorType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NetworkHandleType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NotifResultType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PNCHandleType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PduLengthType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType PduInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TpDataStateType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType RetryInfoType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TPParameterType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Crc_DcrRegister_tst because typeEmitter is a value other than RTE */

typedef uint8 Dcm_ConfirmationStatusType;

typedef uint8 Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType;

typedef uint8 Dcm_DataArrayTypeUint8_DcmDspData_VacuumPumpPressure_1100Type[2];
typedef uint8 Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType;

typedef uint8 Dcm_DidSupportedType;

typedef uint8 Dcm_IOOperationResponseType;

typedef struct {
   Dcm_IOOperationResponseType IOOperationResponse;
} Dcm_IOControlResponseType;

typedef uint8 Dcm_InputOutputControlParameterType;

typedef uint8 Dcm_NegativeResponseCodeType;

typedef uint8 Dcm_OpStatusType;

typedef uint8 Dcm_ProtocolType;

typedef uint8 Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType;

typedef Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0Type;

typedef uint8 Dcm_SecLevelType;

typedef uint8 Dcm_SesCtrlType;

typedef uint8 Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType;

typedef Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalType;

typedef uint8 Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType;

typedef Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalType;

typedef uint8 Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType;

typedef Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalType;

typedef uint8 DemDataElememtDataSize_DemDataElementClass_SystemFaultRank[1];
typedef uint8 DemDataElememtDataSize_DemDataElementClass_VehicleSpeed[2];
typedef uint8 Dem_DTCFormatType;

typedef uint8 Dem_DTCOriginType;

typedef uint8 Dem_DebounceResetStatusType;

typedef uint8 Dem_DebouncingStateType;

typedef uint16 Dem_EventIdType;

typedef uint8 Dem_EventStatusType;

typedef uint8 Dem_IndicatorIdType;

typedef uint8 Dem_IndicatorStatusType;

typedef uint8 Dem_InitMonitorReasonType;

typedef uint8 Dem_MaxDataValueType[2];
typedef uint8 Dem_OperationCycleIdType;

typedef uint8 Dem_OperationCycleStateType;

typedef uint8 Dem_ReturnClearDTCType;

typedef uint8 Dem_UdsStatusByteType;

typedef uint8 EcuM_BootTargetType;

/* Information: No typedef for ImplementationDataType EcuM_RunStatusType because typeEmitter is a value other than RTE */

typedef uint8 EcuM_ShutdownCauseType;

/* Information: No typedef for ImplementationDataType EcuM_ShutdownInfoType because typeEmitter is a value other than RTE */

typedef uint16 EcuM_ShutdownModeType;

typedef uint8 EcuM_ShutdownTargetType;

/* Information: No typedef for ImplementationDataType EcuM_StateType because typeEmitter is a value other than RTE */

typedef uint32 EcuM_TimeType;

typedef uint16 EcuM_UserType;

/* Information: No typedef for ImplementationDataType EcuM_WakeupSourceType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType EcuM_WakeupStatusType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType MemIf_JobResultType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType MemIf_Rb_MigrationResult_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType MemIf_StatusType because typeEmitter is a value other than RTE */

typedef uint16 NvM_BlockIdType;

typedef const void * NvM_Rb_ConstVoidPtr;
/* Information: No typedef for ImplementationDataType NvM_Rb_MigrationResult_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NvM_Rb_RequestType_ten because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType NvM_Rb_StatusType because typeEmitter is a value other than RTE */

typedef void * NvM_Rb_VoidPtr;
typedef uint8 NvM_RequestResultType;

typedef uint8 PduR_uint8_impl;

/* Information: No typedef for ImplementationDataType float32 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType float64 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint16 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint32 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint64 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint8 because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint8_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint8_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Std_ReturnType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgIf_ModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType Rte_ModeType_WdgMSupervisionCycle because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType TickType because typeEmitter is a value other than RTE */

typedef uint8 WdgM_CheckpointIdType;

typedef uint8 WdgM_SupervisedEntityIdType;

/* Information: No typedef for ImplementationDataType WdgM_AliveSupervisionType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_ModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_DeadlineSupervisionType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_LocalStatusParamsType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_TriggerType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_PrvModeType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_ConfigType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_GlobalStatusType because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType WdgM_LocalStatusType because typeEmitter is a value other than RTE */

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_BootTarget_GetBootTarget) (CONSTP2VAR(EcuM_BootTargetType, AUTOMATIC, RTE_APPL_DATA) target);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_BootTarget_SelectBootTarget) (VAR(EcuM_BootTargetType, AUTOMATIC) target);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_ShutdownTarget_GetLastShutdownTarget) (CONSTP2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, CONSTP2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_ShutdownTarget_GetShutdownCause) (CONSTP2VAR(EcuM_ShutdownCauseType, AUTOMATIC, RTE_APPL_DATA) shutdownCause);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_ShutdownTarget_GetShutdownTarget) (CONSTP2VAR(EcuM_ShutdownTargetType, AUTOMATIC, RTE_APPL_DATA) shutdownTarget, CONSTP2VAR(EcuM_ShutdownModeType, AUTOMATIC, RTE_APPL_DATA) shutdownMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_ShutdownTarget_SelectShutdownCause) (VAR(EcuM_ShutdownCauseType, AUTOMATIC) shutdownCause);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_BASE_EcuM_ShutdownTarget_SelectShutdownTarget) (VAR(EcuM_ShutdownTargetType, AUTOMATIC) shutdownTarget, VAR(EcuM_ShutdownModeType, AUTOMATIC) shutdownMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_DiagnosticMonitor_ClearPrestoredFreezeFrame) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_DiagnosticMonitor_PrestoreFreezeFrame) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_DiagnosticMonitor_ResetEventDebounceStatus) (VAR(Dem_DebounceResetStatusType, AUTOMATIC) DebounceResetStatus);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_DiagnosticMonitor_ResetEventStatus) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_DiagnosticMonitor_SetEventStatus) (VAR(Dem_EventStatusType, AUTOMATIC) EventStatus);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_OperationCycle_GetOperationCycleState) (CONSTP2VAR(Dem_OperationCycleStateType, AUTOMATIC, RTE_APPL_DATA) CycleState);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_Dem_OperationCycle_SetOperationCycleState) (VAR(Dem_OperationCycleStateType, AUTOMATIC) CycleState);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_ECUModeLimitation_LimitECUToNoComMode) (VAR(boolean, AUTOMATIC) Status);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_ECUModeLimitation_ReadInhibitCounter) (CONSTP2VAR(uint16, AUTOMATIC, RTE_APPL_DATA) CounterValue);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_ECUModeLimitation_ResetInhibitCounter) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_ECUModeLimitation_SetECUGroupClassification) (VAR(ComM_InhibitionStatusType, AUTOMATIC) Status);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_UserRequest_GetCurrentComMode) (CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_UserRequest_GetMaxComMode) (CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_UserRequest_GetRequestedComMode) (CONSTP2VAR(ComM_ModeType, AUTOMATIC, RTE_APPL_DATA) ComMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NM_ComM_UserRequest_RequestComMode) (VAR(ComM_ModeType, AUTOMATIC) ComMode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_EraseBlock) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_GetDataIndex) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) DataIndexPtr);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_GetErrorStatus) (CONSTP2VAR(NvM_RequestResultType, AUTOMATIC, RTE_APPL_DATA) RequestResultPtr);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_InvalidateNvBlock) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_ReadBlock) (VAR(NvM_Rb_VoidPtr, AUTOMATIC) DstPtr);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_RestoreBlockDefaults) (VAR(NvM_Rb_VoidPtr, AUTOMATIC) DstPtr);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_SetDataIndex) (VAR(uint8, AUTOMATIC) DataIndex);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_SetRamBlockStatus) (VAR(boolean, AUTOMATIC) BlockChanged);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_NVM_NvMService_WriteBlock) (VAR(NvM_Rb_ConstVoidPtr, AUTOMATIC) SrcPtr);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ASW_WDG_WdgM_AliveSupervision_CheckpointReached) (VAR(WdgM_CheckpointIdType, AUTOMATIC) CheckpointID);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_DataServices_DcmDspData_VacuumPumpPressure_1100_FreezeCurrentState) (CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_DataServices_DcmDspData_VacuumPumpPressure_1100_ReadData) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_DataServices_DcmDspData_VacuumPumpPressure_1100_ResetToDefault) (CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_DataServices_DcmDspData_VacuumPumpPressure_1100_ReturnControlToECU) (CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_DataServices_DcmDspData_VacuumPumpPressure_1100_ShortTermAdjustment) (P2CONST(uint8, AUTOMATIC, RTE_APPL_DATA) ControlStateInfo, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_DriveVacuumPump_RequestResults) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0Type, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspRequestRoutineResultsOutSignal_0, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_DriveVacuumPump_Start) (VAR(Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalType, AUTOMATIC) DataIn_DcmDspStartRoutineInSignal, VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStartRoutineOutSignal, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dcm_RoutineServices_DcmDspRoutine_DriveVacuumPump_Stop) (VAR(Dcm_OpStatusType, AUTOMATIC) OpStatus, CONSTP2VAR(Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalType, AUTOMATIC, RTE_APPL_DATA) DataOut_DcmDspStopRoutineOutSignal, CONSTP2VAR(Dcm_NegativeResponseCodeType, AUTOMATIC, RTE_APPL_DATA) ErrorCode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dem_CallbackComponentStatusChanged_ComponentStatusChanged) (VAR(boolean, AUTOMATIC) ComponentFailedStatus);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dem_DataServices_DemDataElementClass_SystemFaultRank_ReadData) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Dem_DataServices_DemDataElementClass_VehicleSpeed_ReadData) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) Data);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_ModeFP_ASW_BASE_ComM_CurrentMode_currentMode) (void);

typedef Impl_NVM_DstPtrType_1024 Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type;
typedef P2FUNC(P2VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type, AUTOMATIC, RTE_APPL_DATA), RTE_CODE, Rte_PimFP_ASW_NVM_ASW_NVM_BlockNative_1024_1) (void);

typedef Impl_NVM_DstPtrType_1024 Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type;
typedef P2FUNC(P2VAR(Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type, AUTOMATIC, RTE_APPL_DATA), RTE_CODE, Rte_PimFP_ASW_NVM_ASW_NVM_BlockNative_1024_2) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU01_Shift_HCU01_Shift) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU01_TqCmd_HCU01_Tq_Cmd) (CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU02_Poweroff_HCU02_Poweroff) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU03_Poweroff_HCU03_Poweroff) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU04_Poweroff_HCU04_Poweroff) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_COM_SR_Interface_HCU05_Poweroff_HCU05_Poweroff) (CONSTP2VAR(boolean, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_Diag_DataServices_DcmDspData_SystemFaultRank_Data) (CONSTP2VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_ASW_Diag_DataServices_DcmDspData_VehicleSpeed_Data) (CONSTP2VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_BswM_ETAS_SenderReceiverInterface_uint8_uint8) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_BswM_ModeRequestInterface_AppMode) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Dcm_DataServices_DcmDspData_SystemFaultRank_Data) (CONSTP2VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Dcm_DataServices_DcmDspData_VehicleSpeed_Data) (CONSTP2VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2CONST(struct Rte_CDS_ASW_BASE,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_BASE;

typedef P2CONST(struct Rte_CDS_ASW_COM,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_COM;

typedef P2CONST(struct Rte_CDS_ASW_CORE1,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_CORE1;

typedef P2CONST(struct Rte_CDS_ASW_CORE2,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_CORE2;

typedef P2CONST(struct Rte_CDS_ASW_Dem,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_Dem;

typedef P2CONST(struct Rte_CDS_ASW_Diag,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_Diag;

typedef P2CONST(struct Rte_CDS_ASW_NM,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_NM;

typedef P2CONST(struct Rte_CDS_ASW_NVM,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_NVM;

typedef P2CONST(struct Rte_CDS_ASW_WDG,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_WDG;

typedef P2CONST(struct Rte_CDS_ASW_XCP,AUTOMATIC,RTE_CONST) Rte_SelfType_ASW_XCP;

typedef P2CONST(struct Rte_CDS_BswM,AUTOMATIC,RTE_CONST) Rte_SelfType_BswM;

typedef P2CONST(struct Rte_CDS_ComM,AUTOMATIC,RTE_CONST) Rte_SelfType_ComM;

typedef P2CONST(struct Rte_CDS_Dcm,AUTOMATIC,RTE_CONST) Rte_SelfType_Dcm;

typedef P2CONST(struct Rte_CDS_Dem,AUTOMATIC,RTE_CONST) Rte_SelfType_Dem;

typedef P2CONST(struct Rte_CDS_Det,AUTOMATIC,RTE_CONST) Rte_SelfType_Det;

typedef P2CONST(struct Rte_CDS_EcuM,AUTOMATIC,RTE_CONST) Rte_SelfType_EcuM;

typedef P2CONST(struct Rte_CDS_NvM,AUTOMATIC,RTE_CONST) Rte_SelfType_NvM;

typedef P2CONST(struct Rte_CDS_WdgM,AUTOMATIC,RTE_CONST) Rte_SelfType_WdgM;

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchAckFP_WdgM_WdgM_GlobalMode_currentMode) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchAckFP_WdgM_WdgM_IndividualMode_currentMode) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_ComM_ComM_CurrentMode_currentMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmCommunicationControl_ComMChannel_Can_Network_Channel_MDGP_DcmCommunicationControl_ComMChannel_Can_Network_Channel) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmControlDTCSetting_MDGP_DcmControlDTCSetting) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmDiagnosticSessionControl_MDGP_DcmDiagnosticSessionControl) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_Dcm_DcmEcuReset_MDGP_DcmEcuReset) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_WdgM_WdgM_GlobalMode_currentMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_SwitchFP_WdgM_WdgM_IndividualMode_currentMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_BASE_ModeRequestInterface_AppMode) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_COM_SR_Interface_MCU01_EmergShutDown_MCU01_EmergShutDown) (VAR(boolean, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_COM_SR_Interface_MCU02_MaxTor_MCU02_MaxTor) (VAR(uint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_COM_SR_Interface_MCU03_NRF_IdcSamp_MCU03_NRF_IdcSamp) (VAR(boolean, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_COM_SR_Interface_MCU04_Test_MCU04_Test) (VAR(boolean, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_Diag_DataServices_DcmDspData_SystemFaultRank_Data) (VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_Diag_DataServices_DcmDspData_VehicleSpeed_Data) (VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_ASW_NM_ETAS_SenderReceiverInterface_uint8_uint8) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Dcm_DataServices_DcmDspData_SystemFaultRank_Data) (VAR(Dcm_DataArrayTypeUint8_DcmDspData_SystemFaultRankType, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Dcm_DataServices_DcmDspData_VehicleSpeed_Data) (VAR(Dcm_DataArrayTypeUint8_DcmDspData_VehicleSpeedType, AUTOMATIC) data);


#endif /* !RTE_TYPE_H */
