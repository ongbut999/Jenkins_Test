	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15220a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\Fls_17_Pmu_ac.src Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c"
	.compiler_name		"ctc"
	;source	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c'

	
$TC16X
	
	.sdecl	'.text.FLS_AC_WRITE_SOURCE',code,cluster('Fls_WriteCmdCycles')
	.sect	'.text.FLS_AC_WRITE_SOURCE'
	.align	2
	
	.global	Fls_WriteCmdCycles

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     1  /******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     2  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     4  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     5  ** All rights reserved.                                                      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     6  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     7  ** This document contains proprietary information belonging to Infineon      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	     9  ** of its contents is not permitted without prior written authorization.     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    10  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    11  *******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    12  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    13  **  $FILENAME   : Fls_17_Pmu_ac.c $                                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    14  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    15  **  $CC VERSION : \main\41 $                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    16  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    17  **  $DATE       : 2016-04-28 $                                               **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    18  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    20  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    21  **  VENDOR      : Infineon Technologies                                      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    22  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    23  **  DESCRIPTION  : This file contains command sequences of Flash driver      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    24  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    26  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    27  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    28  /******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    29     Traceability   :
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    30                      [cover parentID=DS_AS_FLS137,DS_AS_FLS211]
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    31                      [/cover]
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    32  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    33  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    34  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    35  **                      Includes                                              **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    36  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    37  /* Inclusion of Tasking sfr file */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    38  #include "IfxFlash_reg.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    39  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    40  /* Inclusion of Flash header file */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    41  #include "Fls_17_Pmu.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    42  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    43  /* Include Flash Module access code File */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    44  #include "Fls_17_Pmu_ac.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    45  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    46  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    47  **                      Imported Compiler Switch Check                        **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    48  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    49  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    50  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    51  **                      Private Macro Definitions                             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    52  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    53  /* size of data loaded into page buffer at a time - 8bytes */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    54  #define FLS_LOAD_PAGE_SIZE   (8U)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    55  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    56  /* number of words per FLS_LOAD_PAGE_SIZE */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    57  #define FLS_17_TWO_WORDS     (2U)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    58  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    59  /* For internal debugging */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    60  #ifdef IFX_FLS_DEBUG01
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    61  #define VALUE_51  (((uint32)(0x00000051U)))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    62  #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    63  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    64  #ifdef IFX_FLS_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    65  #define VALUE_A1  (((uint32)(0x000000A1U)))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    66  #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    67  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    68  #ifdef IFX_FLS_DEBUG05
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    69  extern volatile uint32 TestFls_DebugMask05;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    70  #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    71  #ifdef IFX_FLS_DEBUG06
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    72  extern volatile uint32 TestFls_DebugMask06;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    73  #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    74  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    75  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    76  **                      Private Type Definitions                              **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    77  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    78  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    79  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    80  **                      Private Function Declarations                         **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    81  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    82  #define FLS_17_PMU_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    83  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    84   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    85  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    86  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    87  IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout05(uint32 InnerCount);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    88  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    89  IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout06(uint32 InnerCount);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    90  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    91  #define FLS_17_PMU_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    92  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    93   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    94  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    95  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    96  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    97  **                      Global Constant Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    98  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	    99  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   100  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   101  **                      Global Variable Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   102  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   103  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   104  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   105  **                      Private Constant Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   106  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   107  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   108  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   109  **                      Private Variable Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   110  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   111  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   112  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   113  **                      Global Function Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   114  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   115  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   116  ** Syntax : void Fls_WriteCmdCycles( volatile uint32 StartAddress,            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   117  **                                   uint32 PageAddress,                      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   118  **                                   const Fls_AddressType* ProgramDataPtr    **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   119  **                                   uint8 WriteMode                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   120  **                                )                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   121  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   122  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   123  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   124  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   125  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   126  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   127  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   128  ** Parameters (in) : StartAddress,PageAddress, ProgramDataPtr and WriteMode   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   129  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   130  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   131  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   132  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   133  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   134  ** Description : This routine contains flash write command cycles             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   135  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   136  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   137  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   138   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   139  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   140  void Fls_WriteCmdCycles( volatile uint32 StartAddress,
; Function Fls_WriteCmdCycles
.L53:
Fls_WriteCmdCycles:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   141                           uint32 PageAddress, 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   142                           const Fls_AddressType* ProgramDataPtr,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   143                           uint8 WriteMode
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   144                         )
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   145  {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   146    uint32 InnerCount;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   147    const Fls_AddressType* pdata;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   148  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   149    pdata = ProgramDataPtr;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   150  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   151    if(WriteMode == BURST_WRITE)
	eq	d15,d6,#1
.L309:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   152    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   153      InnerCount = (FLS_BURST_PAGE_SIZE / FLS_LOAD_PAGE_SIZE);
	mov	d0,#4
.L241:
	cmovn	d0,d15,#1
.L310:
	j	.L3
.L2:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   154    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   155    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   156    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   157      InnerCount = (FLS_PAGE_SIZE / FLS_LOAD_PAGE_SIZE);
	mov	d0,#1
.L3:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   158    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   159    while(InnerCount != 0U)
	j	.L4
.L5:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   222  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   223  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   224  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   225  ** _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   226  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   227  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   228  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   229  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   230  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   231  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   232  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   233  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   234  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   235  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   236  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   237  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   238  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   239  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   240  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   241  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   242    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   243  _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   244  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   245    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   246    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   247    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   248    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA58;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   249    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   250       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   251    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   252       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   253    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   254    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   255  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   256  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   257  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   258  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   259  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   260   _IFXEXTERN_ IFX_INLINE void EnterPageMode(volatile uint32 address,           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   261  **                                                  uint32 Data)              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   262  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   263  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   264  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   265  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   266  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   267  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   268  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   269  ** Parameters (in) : address , Data                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   270  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   271  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   272  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   273  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   274  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   275  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   276  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   277  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   278    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   279  _IFXEXTERN_ IFX_INLINE void EnterPageMode(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   280  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   281    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   282    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   283    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   284    
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   285    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   286    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   287       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   288    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   289       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   290    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   291   
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   292    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   293  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   294  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   295  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   296  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   297   _IFXEXTERN_ IFX_INLINE void LoadPage(volatile uint32 Address,                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   298  **                                    const Fls_AddressType* DataPtr)         **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   299  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   300  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   301  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   302  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   303  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   304  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   305  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   306  ** Parameters (in) : address                                                  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   307  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   308  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   309  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   310  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   311  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   312  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   313  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   314  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   315    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   316  _IFXEXTERN_ IFX_INLINE void LoadPage(volatile uint32 Address, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   317                                       const Fls_AddressType* DataPtr)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   318  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   319    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   320       files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   321    Fls_AddressType* StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   322    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   323       address comparison/calculation purpose.*/  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   324    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   325       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   326    StartAddress = (Fls_AddressType *)(((Address) & MASK_HIGHER4_NIBBLES)
	insert	d15,d4,#0,#0,#16
.L311:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   327                   + CYCLE_55F0);
	addi	d15,d15,#22000
.L243:
	mov.a	a15,d15
.L245:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   328  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   329    *StartAddress = *DataPtr;
	ld.w	d15,[a4]
.L244:
	st.w	[a15],d15
.L312:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   330    /* Page assembly buffer pointer gets incremented automatically */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   331    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used to load 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   332          data into address and is within allowed range*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   333    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used to load 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   334          data into address and is within allowed range*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   335    *(StartAddress + 1) = *(DataPtr + 1U);
	ld.w	d15,[a4]4
.L313:
	st.w	[a15]4,d15
.L314:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   337    return;      (inlined)
	j	.L6

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   338  }      (inlined)
.L6:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   160    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   161      /* Load the data */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   162      LoadPage(StartAddress, pdata);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   163      /* Page assembly buffer pointer gets incremented automatically */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   164      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to access
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   165        user buffer efficiently*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   166      pdata += FLS_17_TWO_WORDS;
	lea	a4,[a4]8
.L315:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   167      InnerCount--;
	add	d0,#-1
.L4:
	jne	d0,#0,.L5
.L125:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
	insert	d15,d4,#0,#0,#16
.L316:
	mov.u	d0,#43600
.L242:
	add	d15,d0
.L317:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L247:
	st.w	[a15],d5
.L318:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;      (inlined)
	j	.L7

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }      (inlined)
.L7:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   168    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   169    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   170    /* cycle 1 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   171    CycleAA50(StartAddress, PageAddress);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   172    /* cycle 2 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   173    CycleAA58(StartAddress, VALUE_00);
	mov	d0,#0
.L133:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   222  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   223  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   224  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   225  ** _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   226  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   227  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   228  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   229  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   230  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   231  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   232  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   233  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   234  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   235  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   236  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   237  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   238  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   239  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   240  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   241  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   242    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   243  _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   244  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   245    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   246    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   247    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   248    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA58;
	insert	d15,d4,#0,#0,#16
.L246:
	mov.u	d1,#43608
.L249:
	add	d15,d1
.L319:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   249    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   250       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   251    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   252       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   253    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L248:
	st.w	[a15],d0
.L320:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   254    return;      (inlined)
	j	.L8

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   255  }      (inlined)
.L8:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   174  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   175    #ifdef IFX_FLS_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   176    /* cycle 3 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   177    CycleAAA8(StartAddress, VALUE_A1);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   178    #else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   179    /* cycle 3 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   180    CycleAAA8(StartAddress, VALUE_A0);
	mov	d1,#160
.L141:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	mov.u	d15,#43688
.L250:
	insert	d0,d4,#0,#0,#16
.L252:
	add	d0,d15
.L321:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L251:
	st.w	[a15],d1
.L322:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L9

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L9:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   181    #endif   
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   182    /* cycle 4 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   183    if(WriteMode == BURST_WRITE)
	jne	d6,#1,.L10
.L323:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   184    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   185      CycleAAA8(StartAddress, VALUE_7A);
	mov	d1,#122
.L148:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	insert	d0,d4,#0,#0,#16
.L253:
	add	d0,d15
.L324:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L254:
	st.w	[a15],d1
.L325:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L11

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L11:
	j	.L12
.L10:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   186    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   187    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   188    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   189      CycleAAA8(StartAddress, VALUE_AA);
	mov	d1,#170
.L150:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	insert	d0,d4,#0,#0,#16
.L255:
	add	d0,d15
.L326:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L256:
	st.w	[a15],d1
.L327:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L13

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L13:
.L12:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   190    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   191  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   192  }
	ret
.L105:
	
__Fls_WriteCmdCycles_function_end:
	.size	Fls_WriteCmdCycles,__Fls_WriteCmdCycles_function_end-Fls_WriteCmdCycles
.L74:
	; End of function
	
	.sdecl	'.text.FLS_AC_ERASE_SOURCE',code,cluster('Fls_EraseCmdCycles')
	.sect	'.text.FLS_AC_ERASE_SOURCE'
	.align	2
	
	.global	Fls_EraseCmdCycles

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   193  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   194  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   195   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   196  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   197  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   198  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   199  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   200  ** Syntax : void Fls_EraseCmdCycles(volatile uint32 StartAddress)             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   201  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   202  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   203  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   204  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   205  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   206  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   207  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   208  ** Parameters (in) : StartAddress                                             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   209  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   210  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   211  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   212  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   213  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   214  ** Description : This routine contains flash Erase command cycles             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   215  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   216  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   217  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   218   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   219  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   220  void Fls_EraseCmdCycles(volatile uint32 StartAddress)
; Function Fls_EraseCmdCycles
.L55:
Fls_EraseCmdCycles:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   221  { 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   222  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   223    /* cycle 1 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   224  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   225    if( StartAddress == DFLASH_BANK0_PHYSICAL )
	movh	d15,#44800
.L332:
	jne	d15,d4,.L14
.L155:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
	insert	d0,d4,#0,#0,#16
.L333:
	mov.u	d1,#43600
.L257:
	add	d0,d1
.L334:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L258:
	st.w	[a15],d15
.L335:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;      (inlined)
	j	.L15

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }      (inlined)
.L15:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   226    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   227      CycleAA50(StartAddress, (uint32)DFLASH_BANK0_PHYSICAL);
	j	.L16
.L14:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   228    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   229    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   230    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   231      CycleAA50(StartAddress, (uint32)DFLASH_BANK1_PHYSICAL);
	mov	d0,#16384
	addih	d0,d0,#44800
.L159:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
	insert	d15,d4,#0,#0,#16
.L336:
	mov.u	d1,#43600
.L259:
	add	d15,d1
.L337:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L260:
	st.w	[a15],d0
.L338:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;      (inlined)
	j	.L17

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }      (inlined)
.L17:
.L16:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   232    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   233    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   234    /* cycle 2 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   235    CycleAA58(StartAddress, FLS_ERASE_SECTORS);
	mov	d0,#2
.L161:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   222  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   223  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   224  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   225  ** _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   226  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   227  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   228  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   229  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   230  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   231  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   232  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   233  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   234  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   235  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   236  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   237  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   238  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   239  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   240  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   241  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   242    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   243  _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   244  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   245    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   246    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   247    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   248    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA58;
	insert	d15,d4,#0,#0,#16
.L339:
	mov.u	d1,#43608
.L261:
	add	d15,d1
.L340:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   249    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   250       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   251    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   252       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   253    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L263:
	st.w	[a15],d0
.L341:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   254    return;      (inlined)
	j	.L18

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   255  }      (inlined)
.L18:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   236    /* cycle 3 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   237    CycleAAA8(StartAddress, VALUE_80);
	mov	d1,#128
.L165:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	mov.u	d15,#43688
.L262:
	insert	d0,d4,#0,#0,#16
.L265:
	add	d0,d15
.L342:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L264:
	st.w	[a15],d1
.L343:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L19

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L19:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   238  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   239    #ifdef IFX_FLS_DEBUG01
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   240    /* cycle 4 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   241    CycleAAA8(StartAddress, VALUE_51);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   242    #else  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   243    /* cycle 4 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   244    CycleAAA8(StartAddress, VALUE_50);
	mov	d1,#80
.L169:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	insert	d0,d4,#0,#0,#16
.L266:
	add	d0,d15
.L344:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L267:
	st.w	[a15],d1
.L345:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L20

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L20:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   245    #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   246  }
	ret
.L152:
	
__Fls_EraseCmdCycles_function_end:
	.size	Fls_EraseCmdCycles,__Fls_EraseCmdCycles_function_end-Fls_EraseCmdCycles
.L79:
	; End of function
	
	.sdecl	'.text.Fls_17_Pmu_ac.Fls_CallEraseCommand',code,cluster('Fls_CallEraseCommand')
	.sect	'.text.Fls_17_Pmu_ac.Fls_CallEraseCommand'
	.align	2
	
	.global	Fls_CallEraseCommand

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   247  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   248  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   249   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   250  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   251  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   252  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   253  #define FLS_17_PMU_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   254  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   255   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   256  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   257  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   258  ** Syntax : void Fls_CallEraseCommand(volatile uint32 PhysicalAddress)        **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   259  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   260  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   261  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   262  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   263  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   264  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   265  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   266  ** Parameters (in) : PhysicalAddress                                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   267  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   268  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   269  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   270  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   271  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   272  ** Description : This routine calls flash Erase command cycles                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   273  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   274  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress)
; Function Fls_CallEraseCommand
.L57:
Fls_CallEraseCommand:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   275  {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   276    uint32 InnerCount=0U;
	mov	d8,#0
.L269:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   277    Fls_17_Pmu_StateType* StatePtr;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   278    StatePtr = Fls_ConfigPtr->FlsStateVarPtr;
	movh.a	a15,#@his(Fls_ConfigPtr)
	lea	a15,[a15]@los(Fls_ConfigPtr)
	ld.a	a2,[a15]
.L364:
	ld.a	a12,[a2]
.L270:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   279    StatePtr->FlsTimeoutErr = 0U;
	mov	d15,#0
.L365:
	st.b	[a12]45,d15
.L366:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   280  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   281    (Fls_ConfigPtr->FlsAccessCodeErasePtr)(PhysicalAddress);
	ld.a	a15,[a15]
.L367:
	ld.a	a15,[a15]32
.L368:
	calli	a15
.L268:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   282    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   283    while((((FLS_SFR_RUNTIME_USER_MODE_READ32(FLASH0_FSR.U) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   284          FLS_FSR_ERASE_MASK) >> FLS_FSR_ERASE_BITPOS) != 1U) && \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   285                                             (InnerCount < FLS_CMDCYCLE_TIMEOUT))
	j	.L21
.L22:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   286    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   287      InnerCount++;
	add	d8,#1
.L21:
	movh.a	a15,#63488
	ld.w	d15,[a15]@los(0xf8002010)
.L369:
	jnz.t	d15:8,.L23
.L370:
	mov	d15,#25
.L371:
	jlt.u	d8,d15,.L22
.L23:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   288    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   289    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   290    /*return Error there is a Timeout has happened */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   291    if ((boolean)TRUE == Fls_lCmdCycleTimeout05(InnerCount))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   292    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   293      StatePtr->FlsTimeoutErr = FLS_ERASE;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   294    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   295    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   296  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   297  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   298  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   299  ** Syntax : void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   300                            const Fls_17_Pmu_StateType *s_ptr,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   301                            uint8 WriteMode)                                    **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   302  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   303  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   304  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   305  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   306  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   307  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   308  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   309  ** Parameters (in) : PhysicalAddress, s_ptr, WriteMode                        **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   310  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   311  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   312  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   313  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   314  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   315  ** Description : This routine calls flash write command cycles                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   316  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   317  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   318                            const Fls_17_Pmu_StateType *s_ptr,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   319                            uint8 WriteMode)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   320  {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   321    uint32 InnerCount;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   322  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   323    Fls_17_Pmu_StateType* StatePtr;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   324  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   325    StatePtr = Fls_ConfigPtr->FlsStateVarPtr;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   326    StatePtr->FlsTimeoutErr = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   327    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   328    /* Enter the Page Mode */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   329    EnterPageMode(PhysicalAddress, VALUE_5D);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   330  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   331    InnerCount = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   332  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   333    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   334    while((((FLS_SFR_RUNTIME_USER_MODE_READ32(FLASH0_FSR.U) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   335        FLS_FSR_DFPAGE_MASK) >> FLS_FSR_DFPAGE_BITPOS) != 1U) && \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   336                                             (InnerCount < FLS_CMDCYCLE_TIMEOUT))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   337    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   338      InnerCount++;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   339    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   340    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   341    /* Check for command cycle Timeout */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   342    if ((boolean)TRUE == Fls_lCmdCycleTimeout05(InnerCount))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   343    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   344      StatePtr->FlsTimeoutErr = FLS_WRITE;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   345    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   346    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   347    (Fls_ConfigPtr->FlsAccessCodeWritePtr)(PhysicalAddress,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   348                  s_ptr->FlsWriteAddress,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   349                  (const Fls_AddressType*)(const void *)s_ptr->FlsWriteBufferPtr,
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   350                  WriteMode);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   351    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   352    while((((FLS_SFR_RUNTIME_USER_MODE_READ32(FLASH0_FSR.U) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   353         FLS_FSR_PROG_MASK) >> FLS_FSR_PROG_BITPOS) != 1U) && \ 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   354                                          (InnerCount < FLS_CMDCYCLE_TIMEOUT))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   355    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   356      InnerCount++;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   357    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   358    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   359    if ((boolean)TRUE == Fls_lCmdCycleTimeout06(InnerCount))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   360    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   361      StatePtr->FlsTimeoutErr = FLS_WRITE;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   362    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   363    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   364  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   365  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   366  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   367  ** Syntax : void Fls_ResetReadCmdCycle(void)                                  **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   368  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   369  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   370  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   371  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   372  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   373  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   374  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   375  ** Parameters (in) : None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   376  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   377  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   378  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   379  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   380  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   381  ** Description : This routine contains flash Reset command cycles             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   382  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   383  void Fls_ResetReadCmdCycle(void)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   384  { 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   385    Cycle5554(FLS_BASE_ADDRESS, VALUE_F0);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   386  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   387  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   388  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   389  ** Syntax : void Fls_ClearStatusCmdCycle(void)                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   390  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   391  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   392  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   393  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   394  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   395  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   396  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   397  ** Parameters (in) : None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   398  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   399  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   400  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   401  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   402  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   403  ** Description : This routine contains flash clear status command cycles      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   404  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   405  void Fls_ClearStatusCmdCycle(void)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   406  { 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   407    Cycle5554(FLS_BASE_ADDRESS, VALUE_FA);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   408  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   409    #ifdef FLS_RAM_EMULATION_TEST
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   410    #if (FLS_RAM_EMULATION_TEST == 1U)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   411    FlsEmulation_ClearStatusCmdCycle();
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   412    #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   413    #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   414  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   415  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   416  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   417  ** Syntax : void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress)        **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   418  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   419  ** Service ID:                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   420  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   421  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   422  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   423  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   424  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   425  ** Parameters (in) : StartAddress                                             **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   426  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   427  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   428  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   429  ** Return value    : void                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   430  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   431  ** Description : This routine contains flash resume erase command cycles      **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   432  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   433  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   434  { 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   435    /* cycle 1 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   436  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   437    if( StartAddress == DFLASH_BANK0_PHYSICAL )
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   438    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   439      CycleAA50(StartAddress, DFLASH_BANK0_PHYSICAL);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   440    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   441    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   442    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   443      CycleAA50(StartAddress, DFLASH_BANK1_PHYSICAL);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   444    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   445    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   446    /* cycle 2 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   447    CycleAA58(StartAddress, FLS_ERASE_SECTORS);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   448    /* cycle 3 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   449    CycleAAA8(StartAddress, VALUE_70);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   450    /* cycle 4 */
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   451    CycleAAA8(StartAddress, VALUE_CC);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   452    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   453  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   454  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   455  **                      Private Function Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   456  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   457  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   458  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   459  ** Syntax: IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout05(uint32 InnerCount) **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   460  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   461  ** Service ID: None                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   462  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   463  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   464  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   465  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   466  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   467  ** Parameters (in) : InnerCount - Delay count                                 **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   468  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   469  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   470  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   471  ** Return value    : boolean                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   472  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   473  ** Description : This routine checks if command cycle timeout occured         **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   474  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   475  IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout05(uint32 InnerCount)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   476  {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   477    boolean RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   478    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   479    #ifdef IFX_FLS_DEBUG05
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   480    if ((InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT) || (TestFls_DebugMask05))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   481    #else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   482    if (InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT)
	mov	d15,#25
.L372:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   482    if (InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT)      (inlined)
	ge.u	d15,d8,d15
.L271:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   485      RetVal = (boolean)TRUE;       (inlined)
	j	.L25

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   482    if (InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT)      (inlined)
.L24:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   483    #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   484    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   485      RetVal = (boolean)TRUE; 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   486    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   487    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   488    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   489      RetVal = (boolean)FALSE; 
	mov	d15,#0

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   487    else      (inlined)
.L25:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   491    return (RetVal);      (inlined)
	j	.L26

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   492  }      (inlined)
.L26:
	jne	d15,#1,.L27
.L192:
	mov	d15,#2
.L272:
	st.b	[a12]45,d15
.L27:
	ret
.L185:
	
__Fls_CallEraseCommand_function_end:
	.size	Fls_CallEraseCommand,__Fls_CallEraseCommand_function_end-Fls_CallEraseCommand
.L94:
	; End of function
	
	.sdecl	'.text.Fls_17_Pmu_ac.Fls_CallWriteCommand',code,cluster('Fls_CallWriteCommand')
	.sect	'.text.Fls_17_Pmu_ac.Fls_CallWriteCommand'
	.align	2
	
	.global	Fls_CallWriteCommand
; Function Fls_CallWriteCommand
.L59:
Fls_CallWriteCommand:	.type	func
	mov	d6,d5
.L273:
	movh.a	a15,#@his(Fls_ConfigPtr)
	lea	a15,[a15]@los(Fls_ConfigPtr)
	ld.a	a2,[a15]
.L377:
	ld.a	a12,[a2]
.L274:
	mov	d15,#0
.L378:
	st.b	[a12]45,d15
.L379:
	mov	d15,#93
.L206:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   222  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   223  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   224  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   225  ** _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   226  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   227  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   228  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   229  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   230  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   231  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   232  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   233  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   234  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   235  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   236  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   237  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   238  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   239  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   240  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   241  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   242    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   243  _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   244  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   245    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   246    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   247    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   248    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA58;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   249    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   250       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   251    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   252       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   253    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   254    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   255  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   256  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   257  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   258  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   259  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   260   _IFXEXTERN_ IFX_INLINE void EnterPageMode(volatile uint32 address,           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   261  **                                                  uint32 Data)              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   262  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   263  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   264  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   265  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   266  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   267  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   268  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   269  ** Parameters (in) : address , Data                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   270  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   271  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   272  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   273  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   274  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   275  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   276  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   277  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   278    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   279  _IFXEXTERN_ IFX_INLINE void EnterPageMode(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   280  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   281    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   282    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   283    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   284    
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   285    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
	insert	d0,d4,#0,#0,#16
.L380:
	addi	d0,d0,#21844
.L275:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   286    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   287       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   288    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   289       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   290    *((uint32*)StartAddress) = Data;
	mov.a	a2,d0
.L276:
	st.w	[a2],d15
.L381:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   292    return;      (inlined)
	j	.L28

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   293  }      (inlined)
.L28:
	mov	d8,#0
.L277:
	movh.a	a13,#63488
	lea	a13,[a13]@los(0xf8002010)
.L382:
	j	.L29
.L30:
	add	d8,#1
.L29:
	ld.w	d15,[a13]
.L383:
	jnz.t	d15:10,.L31
.L384:
	mov	d15,#25
.L385:
	jlt.u	d8,d15,.L30
.L31:
	mov	d15,#25
.L386:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   482    if (InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT)      (inlined)
	ge.u	d15,d8,d15
.L278:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   485      RetVal = (boolean)TRUE;       (inlined)
	j	.L33

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   482    if (InnerCount >= (uint32)FLS_CMDCYCLE_TIMEOUT)      (inlined)
.L32:
	mov	d15,#0

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   487    else      (inlined)
.L33:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   491    return (RetVal);      (inlined)
	j	.L34

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   492  }      (inlined)
.L34:
	jne	d15,#1,.L35
.L213:
	mov	d15,#1
.L280:
	st.b	[a12]45,d15
.L35:
	ld.a	a15,[a15]
.L387:
	ld.a	a15,[a15]28
.L388:
	ld.w	d5,[a4]4
.L281:
	ld.a	a4,[a4]28
.L282:
	calli	a15
.L279:
	j	.L36
.L37:
	add	d8,#1
.L36:
	ld.w	d15,[a13]
.L389:
	jnz.t	d15:7,.L38
.L390:
	mov	d15,#25
.L391:
	jlt.u	d8,d15,.L37
.L38:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   490    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   491    return (RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   492  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   493  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   494  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   495  ** Syntax: IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout06(uint32 InnerCount) **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   496  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   497  ** Service ID: None                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   498  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   499  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   500  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   501  ** Reentrancy:  Non Re-entrant                                                **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   502  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   503  ** Parameters (in) : InnerCount - Delay count                                 **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   504  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   505  ** Parameters (out): None                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   506  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   507  ** Return value    : boolean                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   508  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   509  ** Description : This routine checks if command cycle timeout occured         **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   510  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   511  IFX_LOCAL_INLINE boolean Fls_lCmdCycleTimeout06(uint32 InnerCount)
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   512  {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   513    boolean RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   514    
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   515    #ifdef IFX_FLS_DEBUG06
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   516    if ((InnerCount >= FLS_CMDCYCLE_TIMEOUT) || (TestFls_DebugMask06))
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   517    #else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   518    if (InnerCount >= FLS_CMDCYCLE_TIMEOUT)
	mov	d15,#25
.L392:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   518    if (InnerCount >= FLS_CMDCYCLE_TIMEOUT)      (inlined)
	ge.u	d15,d8,d15
.L283:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   521      RetVal = (boolean)TRUE;       (inlined)
	j	.L40

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   518    if (InnerCount >= FLS_CMDCYCLE_TIMEOUT)      (inlined)
.L39:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   519    #endif
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   520    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   521      RetVal = (boolean)TRUE; 
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   522    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   523    else
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   524    {
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   525      RetVal = (boolean)FALSE; 
	mov	d15,#0

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   523    else      (inlined)
.L40:

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   527    return (RetVal);      (inlined)
	j	.L41

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   528  }      (inlined)
.L41:
	jne	d15,#1,.L42
.L217:
	mov	d15,#1
.L284:
	st.b	[a12]45,d15
.L42:
	ret
.L197:
	
__Fls_CallWriteCommand_function_end:
	.size	Fls_CallWriteCommand,__Fls_CallWriteCommand_function_end-Fls_CallWriteCommand
.L99:
	; End of function
	
	.sdecl	'.text.Fls_17_Pmu_ac.Fls_ResetReadCmdCycle',code,cluster('Fls_ResetReadCmdCycle')
	.sect	'.text.Fls_17_Pmu_ac.Fls_ResetReadCmdCycle'
	.align	2
	
	.global	Fls_ResetReadCmdCycle
; Function Fls_ResetReadCmdCycle
.L61:
Fls_ResetReadCmdCycle:	.type	func
	movh	d0,#44800
.L350:
	mov	d15,#240
.L173:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
	insert	d0,d0,#0,#0,#16
.L351:
	addi	d0,d0,#21844
.L285:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L286:
	st.w	[a15],d15
.L352:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;      (inlined)
	j	.L43

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }      (inlined)
.L43:
	ret
.L171:
	
__Fls_ResetReadCmdCycle_function_end:
	.size	Fls_ResetReadCmdCycle,__Fls_ResetReadCmdCycle_function_end-Fls_ResetReadCmdCycle
.L84:
	; End of function
	
	.sdecl	'.text.Fls_17_Pmu_ac.Fls_ClearStatusCmdCycle',code,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.text.Fls_17_Pmu_ac.Fls_ClearStatusCmdCycle'
	.align	2
	
	.global	Fls_ClearStatusCmdCycle
; Function Fls_ClearStatusCmdCycle
.L63:
Fls_ClearStatusCmdCycle:	.type	func
	movh	d0,#44800
.L357:
	mov	d15,#250
.L181:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
	insert	d0,d0,#0,#0,#16
.L358:
	addi	d0,d0,#21844
.L287:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L288:
	st.w	[a15],d15
.L359:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;      (inlined)
	j	.L44

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }      (inlined)
.L44:
	ret
.L180:
	
__Fls_ClearStatusCmdCycle_function_end:
	.size	Fls_ClearStatusCmdCycle,__Fls_ClearStatusCmdCycle_function_end-Fls_ClearStatusCmdCycle
.L89:
	; End of function
	
	.sdecl	'.text.Fls_17_Pmu_ac.Fls_ResumeEraseCmdCycle',code,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.text.Fls_17_Pmu_ac.Fls_ResumeEraseCmdCycle'
	.align	2
	
	.global	Fls_ResumeEraseCmdCycle
; Function Fls_ResumeEraseCmdCycle
.L65:
Fls_ResumeEraseCmdCycle:	.type	func
	movh	d15,#44800
.L397:
	jne	d15,d4,.L45
.L225:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
	insert	d0,d4,#0,#0,#16
.L398:
	mov.u	d1,#43600
.L289:
	add	d0,d1
.L399:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L290:
	st.w	[a15],d15
.L400:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;      (inlined)
	j	.L46

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }      (inlined)
.L46:
	j	.L47
.L45:
	mov	d0,#16384
	addih	d0,d0,#44800
.L229:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
	insert	d15,d4,#0,#0,#16
.L401:
	mov.u	d1,#43600
.L291:
	add	d15,d1
.L402:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L292:
	st.w	[a15],d0
.L403:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;      (inlined)
	j	.L48

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }      (inlined)
.L48:
.L47:
	mov	d0,#2
.L231:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   188  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   189  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   190  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   191  ** _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   192  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   193  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   194  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   195  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   196  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   197  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   198  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   199  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   200  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   201  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   202  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   203  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   204  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   205  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   206  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   207  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   208    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   209  _IFXEXTERN_ IFX_INLINE void CycleAA50(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   210  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   211    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   212    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   213    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   214    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA50;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   215    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   216       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   217    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   218       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   219    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   220    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   221  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   222  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   223  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   224  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   225  ** _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   226  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   227  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   228  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   229  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   230  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   231  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   232  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   233  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   234  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   235  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   236  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   237  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   238  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   239  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   240  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   241  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   242    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   243  _IFXEXTERN_ IFX_INLINE void CycleAA58(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   244  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   245    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   246    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   247    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   248    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AA58;
	insert	d15,d4,#0,#0,#16
.L404:
	mov.u	d1,#43608
.L293:
	add	d15,d1
.L405:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   249    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   250       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   251    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   252       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   253    *((uint32*)StartAddress) = Data;
	mov.a	a15,d15
.L295:
	st.w	[a15],d0
.L406:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   254    return;      (inlined)
	j	.L49

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   255  }      (inlined)
.L49:
	mov	d1,#112
.L235:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	mov.u	d15,#43688
.L294:
	insert	d0,d4,#0,#0,#16
.L297:
	add	d0,d15
.L407:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L296:
	st.w	[a15],d1
.L408:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L50

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L50:
	mov	d1,#204
.L239:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     1  /******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     2  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     3  ** Copyright (C) Infineon Technologies (2013)                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     4  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     5  ** All rights reserved.                                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     6  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     7  ** This document contains proprietary information belonging to Infineon      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     8  ** Technologies. Passing on and copying of this document, and communication  **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	     9  ** of its contents is not permitted without prior written authorization.     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    10  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    11  *******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    12  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    13  **  $FILENAME   : Fls_17_Pmu_ac.h $                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    14  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    15  **  $CC VERSION : \main\20 $                                                 **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    16  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    17  **  $DATE       : 2016-03-23 $                                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    18  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    20  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    21  **  VENDOR      : Infineon Technologies                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    22  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    23  **  DESCRIPTION  : This file exports command sequences of Flash driver       **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    24  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    26  **                                                                           **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    27  ******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    28  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    29  #ifndef  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    30  #define  FLS_17_PMU_AC_H
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    31  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    32  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    33  **                      Includes                                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    34  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    35  #include "Fls_17_Pmu_Cfg.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    36  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    37  #ifdef FLS_RAM_EMULATION_TEST
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    38  #if (FLS_RAM_EMULATION_TEST == 1U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    39  #include "FlsEmulation.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    40  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    41  #endif
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    42  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    43  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    44  **                      Global Macro Definitions                              **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    45  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    46  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    47  /*  The following macros are used in the command cycles.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    48  #define CYCLE_5554  ((uint32)(0x00005554U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    49  #define CYCLE_AAA8  ((uint32)(0x0000AAA8U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    50  #define CYCLE_55F0  ((uint32)(0x000055F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    51  #define CYCLE_AA50  ((uint32)(0x0000AA50U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    52  #define CYCLE_AA58  ((uint32)(0x0000AA58U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    53  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    54  #define MASK_HIGHER4_NIBBLES     ((uint32)0xFFFF0000U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    55  #define POSITION_0               ((uint32)0)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    56  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    57  /* The following values are used in the command cycles */
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    58  #define VALUE_80    ((uint32)(0x00000080U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    59  #define VALUE_F0    ((uint32)(0x000000F0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    60  #define VALUE_A0    ((uint32)(0x000000A0U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    61  #define VALUE_5D    ((uint32)(0x0000005DU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    62  #define VALUE_7A    ((uint32)(0x0000007AU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    63  #define VALUE_00    ((uint32)(0x00000000U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    64  #define VALUE_FA    ((uint32)(0x000000FAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    65  #define VALUE_50    ((uint32)(0x00000050U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    66  #define VALUE_70    ((uint32)(0x00000070U))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    67  #define VALUE_CC    ((uint32)(0x000000CCU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    68  #define VALUE_AA    ((uint32)(0x000000AAU))
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    69  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    70  #define USER_LEVEL0           (0U)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    71  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    72  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    73  **                      Global Type Definitions                               **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    74  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    75  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    76  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    77  **                      Global Constant Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    78  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    79  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    80  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    81  **                      Global Variable Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    82  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    83  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    84  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    85  **                      Global Function Declarations                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    86  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    87  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    88  #define FLS_17_PMU_START_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    89  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    90  void Fls_WriteCmdCycles(volatile uint32 StartAddress,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    91                          uint32 PageAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    92                          const Fls_AddressType* ProgramDataPtr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    93                          uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    94  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    95  #define FLS_17_PMU_STOP_SEC_SPL_CODE_WRITECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    96  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    97                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    98                     
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	    99  #define FLS_17_PMU_START_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   100  #include "MemMap.h"                               
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   101  void Fls_EraseCmdCycles(volatile uint32 StartAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   102  #define FLS_17_PMU_STOP_SEC_SPL_CODE_ERASECMD_BEGIN
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   103  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   104  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   105  #define FLS_17_PMU_START_SEC_CODE
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   106  #include "MemMap.h"
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   107  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   108  void Fls_ResetReadCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   109  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   110  void Fls_ClearStatusCmdCycle(void);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   111  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   112  void Fls_CallEraseCommand(volatile uint32 PhysicalAddress);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   113  void Fls_CallWriteCommand(volatile uint32 PhysicalAddress, 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   114                            const Fls_17_Pmu_StateType *s_ptr,
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   115                            uint8 WriteMode);
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   116  void Fls_ResumeEraseCmdCycle(volatile uint32 StartAddress); 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   117  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   118  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   119  **                      Global Inline Function Definitions                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   120  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   121  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   122  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   123  ** _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)**
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   124  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   125  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   126  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   127  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   128  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   129  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   130  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   131  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   132  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   133  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   134  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   135  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   136  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   137  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   138  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   139  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   140    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   141  _IFXEXTERN_ IFX_INLINE void Cycle5554(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   142  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   143    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   144    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   145    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   146    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_5554;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   147    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   148       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   149    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   150       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   151    *((uint32*)StartAddress) = Data;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   152    return;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   153  }
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   154  
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   155  /*******************************************************************************
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   156  ** Syntax:                                                                    **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   157  **_IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data) **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   158  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   159  ** Service ID:                                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   160  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   161  ** Sync/Async:  Synchronous                                                   **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   162  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   163  ** Reentrancy:  Non Re-entrant                                                **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   164  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   165  ** Parameters (in) : Address, Data                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   166  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   167  ** Parameters (out): None                                                     **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   168  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   169  ** Return value : None                                                        **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   170  **                                                                            **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   171  ** Description : cmd cycle formation                                          **
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   172  *******************************************************************************/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   173  /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   174    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   175  _IFXEXTERN_ IFX_INLINE void CycleAAA8(volatile uint32 Address, uint32 Data)
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   176  {
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   177    /*IFX_MISRA_RULE_08_05_STATUS=Allowed for inline functions defined in header 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   178    files*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   179    uint32 StartAddress;
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   180    StartAddress = ((Address) & MASK_HIGHER4_NIBBLES) + CYCLE_AAA8;
	insert	d0,d4,#0,#0,#16
.L298:
	add	d0,d15
.L409:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   181    /*IFX_MISRA_RULE_11_01_STATUS= The Pointers are type-cast to uint32 for 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   182       address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   183    /*IFX_MISRA_RULE_11_03_STATUS=The Pointers are type-cast to uint32 
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   184       for address comparison/calculation purpose.*/
; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   185    *((uint32*)StartAddress) = Data;
	mov.a	a15,d0
.L299:
	st.w	[a15],d1
.L410:

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   186    return;      (inlined)
	j	.L51

; .\Targets\TC275\MCAL\MCAL_Modules\Fls\inc\Fls_17_Pmu_ac.h	   187  }      (inlined)
.L51:
	ret
.L222:
	
__Fls_ResumeEraseCmdCycle_function_end:
	.size	Fls_ResumeEraseCmdCycle,__Fls_ResumeEraseCmdCycle_function_end-Fls_ResumeEraseCmdCycle
.L104:
	; End of function
	
	.calls	'Fls_CallEraseCommand','__INDIRECT__'
	.calls	'Fls_CallWriteCommand','__INDIRECT__'
	.calls	'Fls_WriteCmdCycles','',0
	.calls	'Fls_EraseCmdCycles','',0
	.calls	'Fls_CallEraseCommand','',0
	.calls	'Fls_CallWriteCommand','',0
	.calls	'Fls_ResetReadCmdCycle','',0
	.calls	'Fls_ClearStatusCmdCycle','',0
	.extern	Fls_ConfigPtr
	.extern	__INDIRECT__
	.calls	'Fls_ResumeEraseCmdCycle','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L67:
	.word	22211
	.half	3
	.word	.L68
	.byte	4
.L66:
	.byte	1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L69
.L108:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	155
.L172:
	.byte	4
	.byte	'Cycle5554',0,3,1,141,1,29,1,1
.L174:
	.byte	5
	.byte	'Address',0,1,141,1,55
	.word	171
.L176:
	.byte	5
	.byte	'Data',0,1,141,1,71
	.word	155
.L178:
	.byte	6,0,3
	.word	155
.L140:
	.byte	4
	.byte	'CycleAAA8',0,3,1,175,1,29,1,1
.L142:
	.byte	5
	.byte	'Address',0,1,175,1,55
	.word	227
.L144:
	.byte	5
	.byte	'Data',0,1,175,1,71
	.word	155
.L146:
	.byte	6,0,3
	.word	155
.L124:
	.byte	4
	.byte	'CycleAA50',0,3,1,209,1,29,1,1
.L126:
	.byte	5
	.byte	'Address',0,1,209,1,55
	.word	283
.L128:
	.byte	5
	.byte	'Data',0,1,209,1,71
	.word	155
.L130:
	.byte	6,0,3
	.word	155
.L132:
	.byte	4
	.byte	'CycleAA58',0,3,1,243,1,29,1,1
.L134:
	.byte	5
	.byte	'Address',0,1,243,1,55
	.word	339
.L136:
	.byte	5
	.byte	'Data',0,1,243,1,71
	.word	155
.L138:
	.byte	6,0,3
	.word	155
.L205:
	.byte	4
	.byte	'EnterPageMode',0,3,1,151,2,29,1,1
.L207:
	.byte	5
	.byte	'Address',0,1,151,2,59
	.word	395
.L209:
	.byte	5
	.byte	'Data',0,1,151,2,75
	.word	155
.L211:
	.byte	6,0,3
	.word	155
	.byte	7
	.word	155
.L110:
	.byte	8
	.word	460
.L116:
	.byte	4
	.byte	'LoadPage',0,3,1,188,2,29,1,1
.L117:
	.byte	5
	.byte	'Address',0,1,188,2,54
	.word	455
.L119:
	.byte	5
	.byte	'DataPtr',0,1,189,2,61
	.word	465
.L121:
	.byte	6,0
.L112:
	.byte	2
	.byte	'unsigned char',0,1,8
.L191:
	.byte	9
	.byte	'Fls_lCmdCycleTimeout05',0,3,2,219,3,26
	.word	523
	.byte	1,1
.L193:
	.byte	5
	.byte	'InnerCount',0,2,219,3,56
	.word	155
.L195:
	.byte	6,0
.L216:
	.byte	9
	.byte	'Fls_lCmdCycleTimeout06',0,3,2,255,3,26
	.word	523
	.byte	1,1
.L218:
	.byte	5
	.byte	'InnerCount',0,2,255,3,56
	.word	155
.L220:
	.byte	6,0
.L106:
	.byte	3
	.word	155
.L122:
	.byte	8
	.word	155
.L153:
	.byte	3
	.word	155
.L186:
	.byte	3
	.word	155
	.byte	8
	.word	523
	.byte	7
	.word	523
	.byte	8
	.word	679
	.byte	10,4,31,9,4,11
	.byte	'MEMIF_JOB_OK',0,0,11
	.byte	'MEMIF_JOB_FAILED',0,1,11
	.byte	'MEMIF_JOB_PENDING',0,2,11
	.byte	'MEMIF_JOB_CANCELED',0,3,11
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,11
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,10,4,41,9,4,11
	.byte	'MEMIF_MODE_SLOW',0,0,11
	.byte	'MEMIF_MODE_FAST',0,1,0,12
	.byte	'Fls_JobStartType',0,3,175,3,16,1,13
	.byte	'Reserved1',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'Write',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'Erase',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'Read',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'Compare',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'Reserved2',0,1
	.word	523
	.byte	3,0,2,35,0,0,14,2
	.word	523
	.byte	15,1,0,12
	.byte	'Fls_17_Pmu_StateType',0,3,198,3,16,48,16
	.byte	'FlsReadAddress',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'FlsWriteAddress',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	155
	.byte	4,2,35,8,16
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	155
	.byte	4,2,35,12,16
	.byte	'FlsReadLength',0
	.word	155
	.byte	4,2,35,16,16
	.byte	'FlsWriteLength',0
	.word	155
	.byte	4,2,35,20,16
	.byte	'FlsReadBufferPtr',0
	.word	674
	.byte	4,2,35,24,16
	.byte	'FlsWriteBufferPtr',0
	.word	684
	.byte	4,2,35,28,16
	.byte	'FlsJobResult',0
	.word	689
	.byte	4,2,35,32,16
	.byte	'FlsMode',0
	.word	819
	.byte	4,2,35,36,16
	.byte	'NotifCaller',0
	.word	523
	.byte	1,2,35,40,16
	.byte	'JobStarted',0
	.word	861
	.byte	1,2,35,41,16
	.byte	'FlsJobType',0
	.word	996
	.byte	2,2,35,42,16
	.byte	'FlsOper',0
	.word	523
	.byte	1,2,35,44,16
	.byte	'FlsTimeoutErr',0
	.word	523
	.byte	1,2,35,45,16
	.byte	'FlsTimeoutControl',0
	.word	523
	.byte	1,2,35,46,0
.L189:
	.byte	8
	.word	1005
.L198:
	.byte	3
	.word	155
	.byte	7
	.word	1005
.L200:
	.byte	8
	.word	1429
.L223:
	.byte	3
	.word	155
	.byte	17
	.word	176
	.byte	18
	.word	194
	.byte	18
	.word	211
	.byte	6,0,17
	.word	232
	.byte	18
	.word	250
	.byte	18
	.word	267
	.byte	6,0,17
	.word	288
	.byte	18
	.word	306
	.byte	18
	.word	323
	.byte	6,0,17
	.word	344
	.byte	18
	.word	362
	.byte	18
	.word	379
	.byte	6,0,17
	.word	400
	.byte	18
	.word	422
	.byte	18
	.word	439
	.byte	6,0,17
	.word	470
	.byte	18
	.word	487
	.byte	18
	.word	504
	.byte	6,0,17
	.word	540
	.byte	18
	.word	575
	.byte	6,0,17
	.word	597
	.byte	18
	.word	632
	.byte	6,0,19
	.byte	'__INDIRECT__',0,2,1,1,1,1,1,20,1,8
	.word	1590
	.byte	21
	.byte	'__codeptr',0,2,1,1
	.word	1592
	.byte	12
	.byte	'_Ifx_FLASH_ACCEN0_Bits',0,5,45,16,4,13
	.byte	'EN0',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'EN1',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'EN2',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'EN3',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'EN4',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'EN5',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'EN6',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'EN7',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'EN8',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'EN9',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'EN10',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'EN11',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'EN12',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'EN13',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'EN14',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'EN15',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'EN16',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'EN17',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'EN18',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'EN19',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'EN20',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'EN21',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'EN22',0,1
	.word	523
	.byte	1,1,2,35,2,13
	.byte	'EN23',0,1
	.word	523
	.byte	1,0,2,35,2,13
	.byte	'EN24',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'EN25',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'EN26',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'EN27',0,1
	.word	523
	.byte	1,4,2,35,3,13
	.byte	'EN28',0,1
	.word	523
	.byte	1,3,2,35,3,13
	.byte	'EN29',0,1
	.word	523
	.byte	1,2,2,35,3,13
	.byte	'EN30',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'EN31',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_ACCEN0_Bits',0,5,79,3
	.word	1615
	.byte	12
	.byte	'_Ifx_FLASH_ACCEN1_Bits',0,5,82,16,4,13
	.byte	'reserved_0',0,4
	.word	155
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_FLASH_ACCEN1_Bits',0,5,85,3
	.word	2176
	.byte	12
	.byte	'_Ifx_FLASH_CBAB_CFG_Bits',0,5,88,16,4,13
	.byte	'SEL',0,1
	.word	523
	.byte	6,2,2,35,0,13
	.byte	'reserved_6',0,1
	.word	523
	.byte	2,0,2,35,0,13
	.byte	'CLR',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'DIS',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'reserved_10',0,4
	.word	155
	.byte	22,0,2,35,0,0,21
	.byte	'Ifx_FLASH_CBAB_CFG_Bits',0,5,95,3
	.word	2257
	.byte	12
	.byte	'_Ifx_FLASH_CBAB_STAT_Bits',0,5,98,16,4,13
	.byte	'VLD0',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'VLD1',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'VLD2',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'VLD3',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'VLD4',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'VLD5',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'VLD6',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'VLD7',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'VLD8',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'VLD9',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'reserved_10',0,4
	.word	155
	.byte	22,0,2,35,0,0,21
	.byte	'Ifx_FLASH_CBAB_STAT_Bits',0,5,111,3
	.word	2410
	.byte	12
	.byte	'_Ifx_FLASH_CBAB_TOP_Bits',0,5,114,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	5,3,2,35,0,13
	.byte	'ADDR',0,4
	.word	155
	.byte	19,8,2,35,0,13
	.byte	'ERR',0,1
	.word	523
	.byte	6,2,2,35,3,13
	.byte	'VLD',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'CLR',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_CBAB_TOP_Bits',0,5,121,3
	.word	2658
	.byte	12
	.byte	'_Ifx_FLASH_COMM0_Bits',0,5,124,16,4,13
	.byte	'STATUS',0,1
	.word	523
	.byte	8,0,2,35,0,13
	.byte	'reserved_8',0,4
	.word	155
	.byte	24,0,2,35,0,0,21
	.byte	'Ifx_FLASH_COMM0_Bits',0,5,128,1,3
	.word	2804
	.byte	2
	.byte	'unsigned short int',0,2,7,12
	.byte	'_Ifx_FLASH_COMM1_Bits',0,5,131,1,16,4,13
	.byte	'STATUS',0,1
	.word	523
	.byte	8,0,2,35,0,13
	.byte	'DATA',0,1
	.word	523
	.byte	8,0,2,35,1,13
	.byte	'reserved_16',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_COMM1_Bits',0,5,136,1,3
	.word	2924
	.byte	12
	.byte	'_Ifx_FLASH_COMM2_Bits',0,5,139,1,16,4,13
	.byte	'STATUS',0,1
	.word	523
	.byte	8,0,2,35,0,13
	.byte	'DATA',0,1
	.word	523
	.byte	8,0,2,35,1,13
	.byte	'reserved_16',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_COMM2_Bits',0,5,144,1,3
	.word	3040
	.byte	12
	.byte	'_Ifx_FLASH_ECCRD_Bits',0,5,147,1,16,4,13
	.byte	'RCODE',0,4
	.word	155
	.byte	22,10,2,35,0,13
	.byte	'reserved_22',0,2
	.word	2902
	.byte	8,2,2,35,2,13
	.byte	'EDCERRINJ',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'ECCORDIS',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_ECCRD_Bits',0,5,153,1,3
	.word	3156
	.byte	12
	.byte	'_Ifx_FLASH_ECCRP_Bits',0,5,156,1,16,4,13
	.byte	'RCODE',0,4
	.word	155
	.byte	22,10,2,35,0,13
	.byte	'reserved_22',0,2
	.word	2902
	.byte	8,2,2,35,2,13
	.byte	'EDCERRINJ',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'ECCORDIS',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_ECCRP_Bits',0,5,162,1,3
	.word	3296
	.byte	12
	.byte	'_Ifx_FLASH_ECCW_Bits',0,5,165,1,16,4,13
	.byte	'WCODE',0,4
	.word	155
	.byte	22,10,2,35,0,13
	.byte	'reserved_22',0,2
	.word	2902
	.byte	8,2,2,35,2,13
	.byte	'DECENCDIS',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'PECENCDIS',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_ECCW_Bits',0,5,171,1,3
	.word	3436
	.byte	12
	.byte	'_Ifx_FLASH_FCON_Bits',0,5,174,1,16,4,13
	.byte	'WSPFLASH',0,1
	.word	523
	.byte	4,4,2,35,0,13
	.byte	'WSECPF',0,1
	.word	523
	.byte	2,2,2,35,0,13
	.byte	'WSDFLASH',0,2
	.word	2902
	.byte	6,4,2,35,0,13
	.byte	'WSECDF',0,1
	.word	523
	.byte	3,1,2,35,1,13
	.byte	'IDLE',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'ESLDIS',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'SLEEP',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'NSAFECC',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'STALL',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'RES21',0,1
	.word	523
	.byte	2,2,2,35,2,13
	.byte	'RES23',0,1
	.word	523
	.byte	2,0,2,35,2,13
	.byte	'VOPERM',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'SQERM',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'PROERM',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'reserved_27',0,1
	.word	523
	.byte	3,2,2,35,3,13
	.byte	'PR5V',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'EOBM',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_FCON_Bits',0,5,193,1,3
	.word	3575
	.byte	12
	.byte	'_Ifx_FLASH_FPRO_Bits',0,5,196,1,16,4,13
	.byte	'PROINP',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'PRODISP',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'PROIND',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'PRODISD',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'PROINHSMCOTP',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'RES5',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'PROINOTP',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'RES7',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'PROINDBG',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'PRODISDBG',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'PROINHSM',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'reserved_11',0,1
	.word	523
	.byte	5,0,2,35,1,13
	.byte	'DCFP',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'DDFP',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'DDFPX',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'reserved_19',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'DDFD',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'reserved_21',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'ENPE',0,1
	.word	523
	.byte	2,0,2,35,2,13
	.byte	'reserved_24',0,1
	.word	523
	.byte	8,0,2,35,3,0,21
	.byte	'Ifx_FLASH_FPRO_Bits',0,5,218,1,3
	.word	3937
	.byte	12
	.byte	'_Ifx_FLASH_FSR_Bits',0,5,221,1,16,4,13
	.byte	'FABUSY',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'D0BUSY',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'D1BUSY',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'P0BUSY',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'P1BUSY',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'RES5',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'RES6',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'PROG',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'ERASE',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'PFPAGE',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'DFPAGE',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'OPER',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'SQER',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'PROER',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'PFSBER',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'PFDBER',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'PFMBER',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'RES17',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'DFSBER',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'DFDBER',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'DFTBER',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'DFMBER',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'SRIADDERR',0,1
	.word	523
	.byte	1,1,2,35,2,13
	.byte	'reserved_23',0,2
	.word	2902
	.byte	2,7,2,35,2,13
	.byte	'PVER',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'EVER',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'SPND',0,1
	.word	523
	.byte	1,4,2,35,3,13
	.byte	'SLM',0,1
	.word	523
	.byte	1,3,2,35,3,13
	.byte	'reserved_29',0,1
	.word	523
	.byte	1,2,2,35,3,13
	.byte	'ORIER',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'reserved_31',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_FSR_Bits',0,5,254,1,3
	.word	4378
	.byte	12
	.byte	'_Ifx_FLASH_HSMFCON_Bits',0,5,129,2,16,4,13
	.byte	'LCKHSMUCB',0,1
	.word	523
	.byte	2,6,2,35,0,13
	.byte	'reserved_2',0,4
	.word	155
	.byte	22,8,2,35,0,13
	.byte	'VOPERM',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'SQERM',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'reserved_26',0,1
	.word	523
	.byte	5,1,2,35,3,13
	.byte	'EOBM',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_HSMFCON_Bits',0,5,137,2,3
	.word	4986
	.byte	12
	.byte	'_Ifx_FLASH_HSMFSR_Bits',0,5,140,2,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	2,6,2,35,0,13
	.byte	'D1BUSY',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'reserved_3',0,1
	.word	523
	.byte	4,1,2,35,0,13
	.byte	'PROG',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'ERASE',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'reserved_9',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'DFPAGE',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'OPER',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'SQER',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'reserved_13',0,4
	.word	155
	.byte	12,7,2,35,0,13
	.byte	'PVER',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'EVER',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'SPND',0,1
	.word	523
	.byte	1,4,2,35,3,13
	.byte	'reserved_28',0,1
	.word	523
	.byte	4,0,2,35,3,0,21
	.byte	'Ifx_FLASH_HSMFSR_Bits',0,5,156,2,3
	.word	5166
	.byte	12
	.byte	'_Ifx_FLASH_HSMMARD_Bits',0,5,159,2,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'SELD1',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'reserved_2',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'SPND',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'SPNDERR',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'reserved_5',0,4
	.word	155
	.byte	27,0,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMMARD_Bits',0,5,167,2,3
	.word	5488
	.byte	12
	.byte	'_Ifx_FLASH_HSMRRAD_Bits',0,5,170,2,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	3,5,2,35,0,13
	.byte	'ADD',0,4
	.word	155
	.byte	29,0,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRAD_Bits',0,5,174,2,3
	.word	5669
	.byte	12
	.byte	'_Ifx_FLASH_HSMRRCT_Bits',0,5,177,2,16,4,13
	.byte	'STRT',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'STP',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'BUSY',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'DONE',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'ERR',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'reserved_5',0,1
	.word	523
	.byte	3,0,2,35,0,13
	.byte	'EOBM',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'reserved_9',0,1
	.word	523
	.byte	7,0,2,35,1,13
	.byte	'CNT',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_HSMRRCT_Bits',0,5,188,2,3
	.word	5769
	.byte	12
	.byte	'_Ifx_FLASH_HSMRRD0_Bits',0,5,191,2,16,4,13
	.byte	'DATA',0,4
	.word	155
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRD0_Bits',0,5,194,2,3
	.word	5985
	.byte	12
	.byte	'_Ifx_FLASH_HSMRRD1_Bits',0,5,197,2,16,4,13
	.byte	'DATA',0,4
	.word	155
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRD1_Bits',0,5,200,2,3
	.word	6064
	.byte	12
	.byte	'_Ifx_FLASH_ID_Bits',0,5,203,2,16,4,13
	.byte	'MOD_REV',0,1
	.word	523
	.byte	8,0,2,35,0,13
	.byte	'MOD_TYPE',0,1
	.word	523
	.byte	8,0,2,35,1,13
	.byte	'MODNUMBER',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_ID_Bits',0,5,208,2,3
	.word	6143
	.byte	12
	.byte	'_Ifx_FLASH_MARD_Bits',0,5,211,2,16,4,13
	.byte	'HMARGIN',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'SELD0',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'reserved_2',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'SPND',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'SPNDERR',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'reserved_5',0,2
	.word	2902
	.byte	10,1,2,35,0,13
	.byte	'TRAPDIS',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'reserved_16',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_MARD_Bits',0,5,221,2,3
	.word	6256
	.byte	12
	.byte	'_Ifx_FLASH_MARP_Bits',0,5,224,2,16,4,13
	.byte	'SELP0',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'SELP1',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'RES2',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'RES3',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'reserved_4',0,2
	.word	2902
	.byte	11,1,2,35,0,13
	.byte	'TRAPDIS',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'reserved_16',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_MARP_Bits',0,5,233,2,3
	.word	6470
	.byte	12
	.byte	'_Ifx_FLASH_PROCOND_Bits',0,5,236,2,16,4,13
	.byte	'L',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'NSAFECC',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'RAMIN',0,1
	.word	523
	.byte	2,4,2,35,0,13
	.byte	'RAMINSEL',0,1
	.word	523
	.byte	4,0,2,35,0,13
	.byte	'OSCCFG',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'MODE',0,1
	.word	523
	.byte	2,5,2,35,1,13
	.byte	'APREN',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'CAP0EN',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'CAP1EN',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'CAP2EN',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'CAP3EN',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'ESR0CNT',0,2
	.word	2902
	.byte	12,4,2,35,2,13
	.byte	'RES29',0,1
	.word	523
	.byte	2,2,2,35,3,13
	.byte	'RES30',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'RPRO',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_PROCOND_Bits',0,5,253,2,3
	.word	6657
	.byte	12
	.byte	'_Ifx_FLASH_PROCONDBG_Bits',0,5,128,3,16,4,13
	.byte	'OCDSDIS',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'DBGIFLCK',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'EDM',0,1
	.word	523
	.byte	2,4,2,35,0,13
	.byte	'reserved_4',0,4
	.word	155
	.byte	28,0,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONDBG_Bits',0,5,134,3,3
	.word	6981
	.byte	12
	.byte	'_Ifx_FLASH_PROCONHSM_Bits',0,5,137,3,16,4,13
	.byte	'HSMDBGDIS',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'DBGIFLCK',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'TSTIFLCK',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'HSMTSTDIS',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'RES15',0,2
	.word	2902
	.byte	12,0,2,35,0,13
	.byte	'reserved_16',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_PROCONHSM_Bits',0,5,145,3,3
	.word	7124
	.byte	12
	.byte	'_Ifx_FLASH_PROCONHSMCOTP_Bits',0,5,148,3,16,4,13
	.byte	'HSMBOOTEN',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'SSWWAIT',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'HSMDX',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'HSM6X',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'HSM16X',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'HSM17X',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'S6ROM',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'HSMENPINS',0,2
	.word	2902
	.byte	2,7,2,35,0,13
	.byte	'HSMENRES',0,1
	.word	523
	.byte	2,5,2,35,1,13
	.byte	'DESTDBG',0,1
	.word	523
	.byte	2,3,2,35,1,13
	.byte	'BLKFLAN',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'reserved_14',0,1
	.word	523
	.byte	2,0,2,35,1,13
	.byte	'S16ROM',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'S17ROM',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'reserved_18',0,2
	.word	2902
	.byte	14,0,2,35,2,0,21
	.byte	'Ifx_FLASH_PROCONHSMCOTP_Bits',0,5,165,3,3
	.word	7313
	.byte	12
	.byte	'_Ifx_FLASH_PROCONOTP_Bits',0,5,168,3,16,4,13
	.byte	'S0ROM',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'S1ROM',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'S2ROM',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'S3ROM',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'S4ROM',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'S5ROM',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'S6ROM',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'S7ROM',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'S8ROM',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'S9ROM',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'S10ROM',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'S11ROM',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'S12ROM',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'S13ROM',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'S14ROM',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'S15ROM',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'S16ROM',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'S17ROM',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'S18ROM',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'S19ROM',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'S20ROM',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'S21ROM',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'S22ROM',0,1
	.word	523
	.byte	1,1,2,35,2,13
	.byte	'S23ROM',0,1
	.word	523
	.byte	1,0,2,35,2,13
	.byte	'S24ROM',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'S25ROM',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'S26ROM',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'reserved_27',0,1
	.word	523
	.byte	2,3,2,35,3,13
	.byte	'BML',0,1
	.word	523
	.byte	2,1,2,35,3,13
	.byte	'TP',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_PROCONOTP_Bits',0,5,200,3,3
	.word	7676
	.byte	12
	.byte	'_Ifx_FLASH_PROCONP_Bits',0,5,203,3,16,4,13
	.byte	'S0L',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'S1L',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'S2L',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'S3L',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'S4L',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'S5L',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'S6L',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'S7L',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'S8L',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'S9L',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'S10L',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'S11L',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'S12L',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'S13L',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'S14L',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'S15L',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'S16L',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'S17L',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'S18L',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'S19L',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'S20L',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'S21L',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'S22L',0,1
	.word	523
	.byte	1,1,2,35,2,13
	.byte	'S23L',0,1
	.word	523
	.byte	1,0,2,35,2,13
	.byte	'S24L',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'S25L',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'S26L',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'reserved_27',0,1
	.word	523
	.byte	4,1,2,35,3,13
	.byte	'RPRO',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_PROCONP_Bits',0,5,234,3,3
	.word	8271
	.byte	12
	.byte	'_Ifx_FLASH_PROCONWOP_Bits',0,5,237,3,16,4,13
	.byte	'S0WOP',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'S1WOP',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'S2WOP',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'S3WOP',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'S4WOP',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'S5WOP',0,1
	.word	523
	.byte	1,2,2,35,0,13
	.byte	'S6WOP',0,1
	.word	523
	.byte	1,1,2,35,0,13
	.byte	'S7WOP',0,1
	.word	523
	.byte	1,0,2,35,0,13
	.byte	'S8WOP',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'S9WOP',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'S10WOP',0,1
	.word	523
	.byte	1,5,2,35,1,13
	.byte	'S11WOP',0,1
	.word	523
	.byte	1,4,2,35,1,13
	.byte	'S12WOP',0,1
	.word	523
	.byte	1,3,2,35,1,13
	.byte	'S13WOP',0,1
	.word	523
	.byte	1,2,2,35,1,13
	.byte	'S14WOP',0,1
	.word	523
	.byte	1,1,2,35,1,13
	.byte	'S15WOP',0,1
	.word	523
	.byte	1,0,2,35,1,13
	.byte	'S16WOP',0,1
	.word	523
	.byte	1,7,2,35,2,13
	.byte	'S17WOP',0,1
	.word	523
	.byte	1,6,2,35,2,13
	.byte	'S18WOP',0,1
	.word	523
	.byte	1,5,2,35,2,13
	.byte	'S19WOP',0,1
	.word	523
	.byte	1,4,2,35,2,13
	.byte	'S20WOP',0,1
	.word	523
	.byte	1,3,2,35,2,13
	.byte	'S21WOP',0,1
	.word	523
	.byte	1,2,2,35,2,13
	.byte	'S22WOP',0,1
	.word	523
	.byte	1,1,2,35,2,13
	.byte	'S23WOP',0,1
	.word	523
	.byte	1,0,2,35,2,13
	.byte	'S24WOP',0,1
	.word	523
	.byte	1,7,2,35,3,13
	.byte	'S25WOP',0,1
	.word	523
	.byte	1,6,2,35,3,13
	.byte	'S26WOP',0,1
	.word	523
	.byte	1,5,2,35,3,13
	.byte	'reserved_27',0,1
	.word	523
	.byte	4,1,2,35,3,13
	.byte	'DATM',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_PROCONWOP_Bits',0,5,140,4,3
	.word	8795
	.byte	12
	.byte	'_Ifx_FLASH_RDB_CFG0_Bits',0,5,143,4,16,4,13
	.byte	'TAG',0,1
	.word	523
	.byte	6,2,2,35,0,13
	.byte	'reserved_6',0,4
	.word	155
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG0_Bits',0,5,147,4,3
	.word	9377
	.byte	12
	.byte	'_Ifx_FLASH_RDB_CFG1_Bits',0,5,150,4,16,4,13
	.byte	'TAG',0,1
	.word	523
	.byte	6,2,2,35,0,13
	.byte	'reserved_6',0,4
	.word	155
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG1_Bits',0,5,154,4,3
	.word	9479
	.byte	12
	.byte	'_Ifx_FLASH_RDB_CFG2_Bits',0,5,157,4,16,4,13
	.byte	'TAG',0,1
	.word	523
	.byte	6,2,2,35,0,13
	.byte	'reserved_6',0,4
	.word	155
	.byte	26,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG2_Bits',0,5,161,4,3
	.word	9581
	.byte	12
	.byte	'_Ifx_FLASH_RRAD_Bits',0,5,164,4,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	3,5,2,35,0,13
	.byte	'ADD',0,4
	.word	155
	.byte	29,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RRAD_Bits',0,5,168,4,3
	.word	9683
	.byte	12
	.byte	'_Ifx_FLASH_RRCT_Bits',0,5,171,4,16,4,13
	.byte	'STRT',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'STP',0,1
	.word	523
	.byte	1,6,2,35,0,13
	.byte	'BUSY',0,1
	.word	523
	.byte	1,5,2,35,0,13
	.byte	'DONE',0,1
	.word	523
	.byte	1,4,2,35,0,13
	.byte	'ERR',0,1
	.word	523
	.byte	1,3,2,35,0,13
	.byte	'reserved_5',0,1
	.word	523
	.byte	3,0,2,35,0,13
	.byte	'EOBM',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'reserved_9',0,1
	.word	523
	.byte	7,0,2,35,1,13
	.byte	'CNT',0,2
	.word	2902
	.byte	16,0,2,35,2,0,21
	.byte	'Ifx_FLASH_RRCT_Bits',0,5,182,4,3
	.word	9777
	.byte	12
	.byte	'_Ifx_FLASH_RRD0_Bits',0,5,185,4,16,4,13
	.byte	'DATA',0,4
	.word	155
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RRD0_Bits',0,5,188,4,3
	.word	9987
	.byte	12
	.byte	'_Ifx_FLASH_RRD1_Bits',0,5,191,4,16,4,13
	.byte	'DATA',0,4
	.word	155
	.byte	32,0,2,35,0,0,21
	.byte	'Ifx_FLASH_RRD1_Bits',0,5,194,4,3
	.word	10060
	.byte	12
	.byte	'_Ifx_FLASH_UBAB_CFG_Bits',0,5,197,4,16,4,13
	.byte	'SEL',0,1
	.word	523
	.byte	6,2,2,35,0,13
	.byte	'reserved_6',0,1
	.word	523
	.byte	2,0,2,35,0,13
	.byte	'CLR',0,1
	.word	523
	.byte	1,7,2,35,1,13
	.byte	'DIS',0,1
	.word	523
	.byte	1,6,2,35,1,13
	.byte	'reserved_10',0,4
	.word	155
	.byte	22,0,2,35,0,0,21
	.byte	'Ifx_FLASH_UBAB_CFG_Bits',0,5,204,4,3
	.word	10133
	.byte	12
	.byte	'_Ifx_FLASH_UBAB_STAT_Bits',0,5,207,4,16,4,13
	.byte	'VLD0',0,1
	.word	523
	.byte	1,7,2,35,0,13
	.byte	'reserved_1',0,4
	.word	155
	.byte	31,0,2,35,0,0,21
	.byte	'Ifx_FLASH_UBAB_STAT_Bits',0,5,211,4,3
	.word	10288
	.byte	12
	.byte	'_Ifx_FLASH_UBAB_TOP_Bits',0,5,214,4,16,4,13
	.byte	'reserved_0',0,1
	.word	523
	.byte	5,3,2,35,0,13
	.byte	'ADDR',0,4
	.word	155
	.byte	19,8,2,35,0,13
	.byte	'ERR',0,1
	.word	523
	.byte	6,2,2,35,3,13
	.byte	'VLD',0,1
	.word	523
	.byte	1,1,2,35,3,13
	.byte	'CLR',0,1
	.word	523
	.byte	1,0,2,35,3,0,21
	.byte	'Ifx_FLASH_UBAB_TOP_Bits',0,5,221,4,3
	.word	10393
	.byte	2
	.byte	'int',0,4,5,22,5,229,4,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	1615
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ACCEN0',0,5,234,4,3
	.word	10548
	.byte	22,5,237,4,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2176
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ACCEN1',0,5,242,4,3
	.word	10614
	.byte	22,5,245,4,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2257
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_CBAB_CFG',0,5,250,4,3
	.word	10680
	.byte	22,5,253,4,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2410
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_CBAB_STAT',0,5,130,5,3
	.word	10748
	.byte	22,5,133,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2658
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_CBAB_TOP',0,5,138,5,3
	.word	10817
	.byte	22,5,141,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2804
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_COMM0',0,5,146,5,3
	.word	10885
	.byte	22,5,149,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	2924
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_COMM1',0,5,154,5,3
	.word	10950
	.byte	22,5,157,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3040
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_COMM2',0,5,162,5,3
	.word	11015
	.byte	22,5,165,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3156
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ECCRD',0,5,170,5,3
	.word	11080
	.byte	22,5,173,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3296
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ECCRP',0,5,178,5,3
	.word	11145
	.byte	22,5,181,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3436
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ECCW',0,5,186,5,3
	.word	11210
	.byte	22,5,189,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3575
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_FCON',0,5,194,5,3
	.word	11274
	.byte	22,5,197,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	3937
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_FPRO',0,5,202,5,3
	.word	11338
	.byte	22,5,205,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	4378
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_FSR',0,5,210,5,3
	.word	11402
	.byte	22,5,213,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	4986
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMFCON',0,5,218,5,3
	.word	11465
	.byte	22,5,221,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	5166
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMFSR',0,5,226,5,3
	.word	11532
	.byte	22,5,229,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	5488
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMMARD',0,5,234,5,3
	.word	11598
	.byte	22,5,237,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	5669
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRAD',0,5,242,5,3
	.word	11665
	.byte	22,5,245,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	5769
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRCT',0,5,250,5,3
	.word	11732
	.byte	22,5,253,5,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	5985
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRD0',0,5,130,6,3
	.word	11799
	.byte	22,5,133,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6064
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_HSMRRD1',0,5,138,6,3
	.word	11866
	.byte	22,5,141,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6143
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_ID',0,5,146,6,3
	.word	11933
	.byte	22,5,149,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6256
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_MARD',0,5,154,6,3
	.word	11995
	.byte	22,5,157,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6470
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_MARP',0,5,162,6,3
	.word	12059
	.byte	22,5,165,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6657
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCOND',0,5,170,6,3
	.word	12123
	.byte	22,5,173,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	6981
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONDBG',0,5,178,6,3
	.word	12190
	.byte	22,5,181,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	7124
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONHSM',0,5,186,6,3
	.word	12259
	.byte	22,5,189,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	7313
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONHSMCOTP',0,5,194,6,3
	.word	12328
	.byte	22,5,197,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	7676
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONOTP',0,5,202,6,3
	.word	12401
	.byte	22,5,205,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	8271
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONP',0,5,210,6,3
	.word	12470
	.byte	22,5,213,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	8795
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_PROCONWOP',0,5,218,6,3
	.word	12537
	.byte	22,5,221,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9377
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG0',0,5,226,6,3
	.word	12606
	.byte	22,5,229,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9479
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG1',0,5,234,6,3
	.word	12674
	.byte	22,5,237,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9581
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RDB_CFG2',0,5,242,6,3
	.word	12742
	.byte	22,5,245,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9683
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RRAD',0,5,250,6,3
	.word	12810
	.byte	22,5,253,6,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9777
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RRCT',0,5,130,7,3
	.word	12874
	.byte	22,5,133,7,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	9987
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RRD0',0,5,138,7,3
	.word	12938
	.byte	22,5,141,7,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	10060
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_RRD1',0,5,146,7,3
	.word	13002
	.byte	22,5,149,7,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	10133
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_UBAB_CFG',0,5,154,7,3
	.word	13066
	.byte	22,5,157,7,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	10288
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_UBAB_STAT',0,5,162,7,3
	.word	13134
	.byte	22,5,165,7,9,4,16
	.byte	'U',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'I',0
	.word	10541
	.byte	4,2,35,0,16
	.byte	'B',0
	.word	10393
	.byte	4,2,35,0,0,21
	.byte	'Ifx_FLASH_UBAB_TOP',0,5,170,7,3
	.word	13203
	.byte	12
	.byte	'_Ifx_FLASH_CBAB',0,5,181,7,25,12,16
	.byte	'CFG',0
	.word	10680
	.byte	4,2,35,0,16
	.byte	'STAT',0
	.word	10748
	.byte	4,2,35,4,16
	.byte	'TOP',0
	.word	10817
	.byte	4,2,35,8,0,3
	.word	13271
	.byte	21
	.byte	'Ifx_FLASH_CBAB',0,5,186,7,3
	.word	13334
	.byte	12
	.byte	'_Ifx_FLASH_RDB',0,5,189,7,25,12,16
	.byte	'CFG0',0
	.word	12606
	.byte	4,2,35,0,16
	.byte	'CFG1',0
	.word	12674
	.byte	4,2,35,4,16
	.byte	'CFG2',0
	.word	12742
	.byte	4,2,35,8,0,3
	.word	13363
	.byte	21
	.byte	'Ifx_FLASH_RDB',0,5,194,7,3
	.word	13427
	.byte	12
	.byte	'_Ifx_FLASH_UBAB',0,5,197,7,25,12,16
	.byte	'CFG',0
	.word	13066
	.byte	4,2,35,0,16
	.byte	'STAT',0
	.word	13134
	.byte	4,2,35,4,16
	.byte	'TOP',0
	.word	13203
	.byte	4,2,35,8,0,3
	.word	13455
	.byte	21
	.byte	'Ifx_FLASH_UBAB',0,5,202,7,3
	.word	13518
	.byte	2
	.byte	'char',0,1,6,21
	.byte	'sint8',0,6,76,25
	.word	13547
	.byte	21
	.byte	'uint8',0,6,81,25
	.word	523
	.byte	21
	.byte	'uint16',0,6,91,25
	.word	2902
	.byte	21
	.byte	'uint32',0,6,106,24
	.word	155
	.byte	2
	.byte	'unsigned long long int',0,8,7,21
	.byte	'uint64',0,6,111,30
	.word	13613
	.byte	21
	.byte	'boolean',0,6,127,25
	.word	523
	.byte	21
	.byte	'StatusType',0,7,191,1,27
	.word	523
	.byte	21
	.byte	'Std_ReturnType',0,7,199,1,15
	.word	523
	.byte	23,7,206,1,9,8,16
	.byte	'vendorID',0
	.word	2902
	.byte	2,2,35,0,16
	.byte	'moduleID',0
	.word	2902
	.byte	2,2,35,2,16
	.byte	'sw_major_version',0
	.word	523
	.byte	1,2,35,4,16
	.byte	'sw_minor_version',0
	.word	523
	.byte	1,2,35,5,16
	.byte	'sw_patch_version',0
	.word	523
	.byte	1,2,35,6,0,21
	.byte	'Std_VersionInfoType',0,7,213,1,3
	.word	13714
	.byte	23,8,93,9,8,16
	.byte	'Class',0
	.word	523
	.byte	1,2,35,0,16
	.byte	'TIN',0
	.word	523
	.byte	1,2,35,1,16
	.byte	'ReturnAddress',0
	.word	155
	.byte	4,2,35,4,0,21
	.byte	'OsTrapInfoType',0,8,97,3
	.word	13864
	.byte	14,68
	.word	155
	.byte	15,16,0,23,8,154,1,9,68,16
	.byte	'store',0
	.word	13944
	.byte	68,2,35,0,0,14,68
	.word	13953
	.byte	15,0,0,21
	.byte	'Os_JumpBufType',0,8,156,1,3
	.word	13975
	.byte	21
	.byte	'Os_StackTraceType',0,8,174,1,18
	.word	155
	.byte	23,8,175,1,9,8,16
	.byte	'sp',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'ctx',0
	.word	155
	.byte	4,2,35,4,0,21
	.byte	'Os_StackValueType',0,8,175,1,63
	.word	14035
	.byte	21
	.byte	'Os_StackSizeType',0,8,176,1,27
	.word	14035
	.byte	24,1,1,8
	.word	14120
	.byte	21
	.byte	'Os_VoidVoidFunctionType',0,8,179,1,16
	.word	14123
	.byte	21
	.byte	'ApplicationType',0,8,193,1,23
	.word	523
	.byte	12
	.byte	'Os_ApplicationConfigurationType_s',0,8,198,1,16,2,16
	.byte	'app_id',0
	.word	523
	.byte	1,2,35,0,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,1,0,21
	.byte	'Os_ApplicationConfigurationType',0,8,201,1,3
	.word	14186
	.byte	21
	.byte	'Os_CoreStateType',0,8,203,1,16
	.word	155
	.byte	21
	.byte	'AreaIdType',0,8,204,1,16
	.word	2902
	.byte	21
	.byte	'Os_PeripheralAddressType',0,8,212,1,22
	.word	155
	.byte	21
	.byte	'TickType',0,8,221,1,22
	.word	155
	.byte	21
	.byte	'Os_StopwatchTickType',0,8,225,1,22
	.word	155
	.byte	8
	.word	155
	.byte	21
	.byte	'Os_Lockable',0,8,234,1,18
	.word	14428
	.byte	21
	.byte	'CoreIdType',0,8,236,1,16
	.word	2902
	.byte	21
	.byte	'SpinlockIdType',0,8,237,1,16
	.word	2902
	.byte	10,8,239,1,9,4,11
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,11
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,21
	.byte	'TryToGetSpinlockType',0,8,239,1,74
	.word	14498
	.byte	10,8,174,2,9,4,11
	.byte	'APPLICATION_ACCESSIBLE',0,0,11
	.byte	'APPLICATION_RESTARTING',0,1,11
	.byte	'APPLICATION_TERMINATED',0,2,0,21
	.byte	'ApplicationStateType',0,8,174,2,92
	.word	14591
	.byte	25
	.byte	'void',0,8
	.word	14703
	.byte	26,1,1,27
	.word	523
	.byte	27
	.word	14709
	.byte	0,8
	.word	14714
	.byte	21
	.byte	'Os_FunctionEntryType',0,8,183,2,16
	.word	14728
	.byte	12
	.byte	'Os_MeterInfoType_s',0,8,193,2,16,48,16
	.byte	'elapsed',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'previous',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'max',0
	.word	155
	.byte	4,2,35,8,16
	.byte	'cumulative',0
	.word	155
	.byte	4,2,35,12,16
	.byte	'stackbase',0
	.word	14035
	.byte	8,2,35,16,16
	.byte	'stackusage',0
	.word	14035
	.byte	8,2,35,24,16
	.byte	'stackmax',0
	.word	14035
	.byte	8,2,35,32,16
	.byte	'stackbudget',0
	.word	14035
	.byte	8,2,35,40,0,21
	.byte	'Os_MeterInfoType',0,8,202,2,3
	.word	14763
	.byte	8
	.word	14763
	.byte	21
	.byte	'Os_MeterInfoRefType',0,8,203,2,50
	.word	14961
	.byte	21
	.byte	'EventMaskType',0,8,206,2,15
	.word	523
	.byte	21
	.byte	'Os_imaskType',0,8,211,2,16
	.word	155
	.byte	12
	.byte	'Os_ISRDynType_s',0,8,213,2,16,48,16
	.byte	'meter',0
	.word	14763
	.byte	48,2,35,0,0,21
	.byte	'Os_ISRDynType',0,8,215,2,3
	.word	15040
	.byte	8
	.word	15040
	.byte	7
	.word	15101
	.byte	12
	.byte	'Os_ISRType_s',0,8,216,2,16,24,16
	.byte	'entry_function',0
	.word	14128
	.byte	4,2,35,0,16
	.byte	'dynamic',0
	.word	15106
	.byte	4,2,35,4,16
	.byte	'imask',0
	.word	155
	.byte	4,2,35,8,16
	.byte	'stackbudget',0
	.word	14035
	.byte	8,2,35,12,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,20,16
	.byte	'application',0
	.word	523
	.byte	1,2,35,21,0,21
	.byte	'Os_ISRType',0,8,223,2,3
	.word	15111
	.byte	8
	.word	14120
	.byte	7
	.word	15111
	.byte	8
	.word	15270
	.byte	21
	.byte	'ISRType',0,8,224,2,46
	.word	15275
	.byte	21
	.byte	'Os_bitmask',0,8,239,2,22
	.word	155
	.byte	21
	.byte	'Os_pset0Type',0,8,240,2,20
	.word	155
	.byte	21
	.byte	'Os_pset1Type',0,8,241,2,20
	.word	155
	.byte	21
	.byte	'Os_pset2Type',0,8,242,2,20
	.word	155
	.byte	22,8,243,2,9,4,16
	.byte	'p0',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'p1',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'p2',0
	.word	155
	.byte	4,2,35,0,0,21
	.byte	'Os_psetType',0,8,247,2,3
	.word	15383
	.byte	22,8,249,2,9,4,16
	.byte	't0',0
	.word	155
	.byte	4,2,35,0,16
	.byte	't1',0
	.word	155
	.byte	4,2,35,0,16
	.byte	't2',0
	.word	155
	.byte	4,2,35,0,0,21
	.byte	'Os_tpmaskType',0,8,253,2,3
	.word	15447
	.byte	21
	.byte	'Os_ActivationCountType',0,8,254,2,23
	.word	523
	.byte	12
	.byte	'Os_TaskDynType_s',0,8,128,3,16,120,16
	.byte	'terminate_jump_buf',0
	.word	13984
	.byte	68,2,35,0,16
	.byte	'meter',0
	.word	14763
	.byte	48,2,35,68,16
	.byte	'activation_count',0
	.word	523
	.byte	1,2,35,116,0,21
	.byte	'Os_TaskDynType',0,8,132,3,3
	.word	15545
	.byte	14,68
	.word	13953
	.byte	15,0,0,8
	.word	15545
	.byte	7
	.word	15671
	.byte	12
	.byte	'Os_TaskType_s',0,8,134,3,16,40,16
	.byte	'dynamic',0
	.word	15676
	.byte	4,2,35,0,16
	.byte	'entry_function',0
	.word	14128
	.byte	4,2,35,4,16
	.byte	'pset',0
	.word	15383
	.byte	4,2,35,8,16
	.byte	'base_tpmask',0
	.word	15447
	.byte	4,2,35,12,16
	.byte	'tpmask',0
	.word	15447
	.byte	4,2,35,16,16
	.byte	'core_id',0
	.word	2902
	.byte	2,2,35,20,16
	.byte	'index',0
	.word	155
	.byte	4,2,35,24,16
	.byte	'stackbudget',0
	.word	14035
	.byte	8,2,35,28,16
	.byte	'activation_count',0
	.word	523
	.byte	1,2,35,36,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,37,16
	.byte	'application',0
	.word	523
	.byte	1,2,35,38,0,21
	.byte	'Os_TaskType',0,8,146,3,3
	.word	15681
	.byte	7
	.word	15681
	.byte	8
	.word	15931
	.byte	21
	.byte	'TaskType',0,8,147,3,47
	.word	15936
	.byte	28
	.byte	'Os_TaskStateType',0,8,155,3,6,4,11
	.byte	'SUSPENDED',0,0,11
	.byte	'READY',0,1,11
	.byte	'WAITING',0,2,11
	.byte	'RUNNING',0,3,0,21
	.byte	'TaskStateType',0,8,156,3,31
	.word	15959
	.byte	22,8,167,3,3,4,16
	.byte	'tpmask',0
	.word	15447
	.byte	4,2,35,0,0,12
	.byte	'Os_ResourceDynType_s',0,8,166,3,16,4,16
	.byte	'saved_priority',0
	.word	16046
	.byte	4,2,35,0,0,21
	.byte	'Os_ResourceDynType',0,8,170,3,3
	.word	16069
	.byte	8
	.word	16069
	.byte	7
	.word	16149
	.byte	12
	.byte	'Os_ResourceType_s',0,8,171,3,16,12,16
	.byte	'dynamic',0
	.word	16154
	.byte	4,2,35,0,16
	.byte	'tpmask',0
	.word	15447
	.byte	4,2,35,4,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,8,0,21
	.byte	'Os_ResourceType',0,8,175,3,3
	.word	16159
	.byte	23,8,181,3,9,12,16
	.byte	'maxallowedvalue',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'ticksperbase',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'mincycle',0
	.word	155
	.byte	4,2,35,8,0,21
	.byte	'AlarmBaseType',0,8,185,3,3
	.word	16258
	.byte	23,8,206,3,9,8,16
	.byte	'Running',0
	.word	523
	.byte	1,2,35,0,16
	.byte	'Pending',0
	.word	523
	.byte	1,2,35,1,16
	.byte	'Delay',0
	.word	155
	.byte	4,2,35,4,0,21
	.byte	'Os_CounterStatusType',0,8,210,3,3
	.word	16353
	.byte	29
	.word	523
	.byte	1,1,8
	.word	16439
	.byte	21
	.byte	'Os_CounterIncrAdvType',0,8,217,3,22
	.word	16446
	.byte	12
	.byte	's_swd',0,8,222,3,12,4,16
	.byte	'count',0
	.word	155
	.byte	4,2,35,0,0,22,8,221,3,3,4,16
	.byte	'sw',0
	.word	16482
	.byte	4,2,35,0,0,12
	.byte	'Os_CounterDynType_s',0,8,220,3,16,4,16
	.byte	'type_dependent',0
	.word	16510
	.byte	4,2,35,0,0,21
	.byte	'Os_CounterDynType',0,8,226,3,3
	.word	16529
	.byte	8
	.word	16529
	.byte	7
	.word	16607
	.byte	12
	.byte	'Os_CounterType_s',0,8,227,3,16,28,16
	.byte	'dynamic',0
	.word	16612
	.byte	4,2,35,0,16
	.byte	'advincr',0
	.word	16451
	.byte	4,2,35,4,16
	.byte	'base',0
	.word	16258
	.byte	12,2,35,8,16
	.byte	'core',0
	.word	14709
	.byte	4,2,35,20,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,24,16
	.byte	'application',0
	.word	523
	.byte	1,2,35,25,0,21
	.byte	'Os_CounterType',0,8,234,3,3
	.word	16617
	.byte	8
	.word	16439
	.byte	7
	.word	16617
	.byte	8
	.word	16769
	.byte	21
	.byte	'CounterType',0,8,235,3,52
	.word	16774
	.byte	28
	.byte	'Os_ScheduleTableStatusType',0,8,240,3,6,4,11
	.byte	'SCHEDULETABLE_STOPPED',0,0,11
	.byte	'SCHEDULETABLE_NEXT',0,1,11
	.byte	'SCHEDULETABLE_WAITING',0,2,11
	.byte	'SCHEDULETABLE_RUNNING',0,3,11
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,21
	.byte	'ScheduleTableStatusType',0,8,241,3,41
	.word	16800
	.byte	7
	.word	.L300-.L67
	.byte	8
	.word	17000
	.byte	21
	.byte	'ScheduleTableType',0,8,128,4,58
	.word	17005
	.byte	12
	.byte	'Os_ScheduleTableDynType_s',0,8,130,4,16,16,16
	.byte	'match',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'next',0
	.word	17010
	.byte	4,2,35,4,16
	.byte	'state',0
	.word	16800
	.byte	4,2,35,8,16
	.byte	'config',0
	.word	2902
	.byte	2,2,35,12,0,8
	.word	17037
	.byte	7
	.word	17130
.L300:
	.byte	12
	.byte	'Os_ScheduleTableType_s',0,8,247,3,16,16,16
	.byte	'dynamic',0
	.word	17135
	.byte	4,2,35,0,16
	.byte	'counter',0
	.word	16779
	.byte	4,2,35,4,16
	.byte	'repeat',0
	.word	523
	.byte	1,2,35,8,16
	.byte	'config',0
	.word	2902
	.byte	2,2,35,10,16
	.byte	'initial',0
	.word	523
	.byte	1,2,35,12,16
	.byte	'access',0
	.word	523
	.byte	1,2,35,13,16
	.byte	'application',0
	.word	523
	.byte	1,2,35,14,0,21
	.byte	'Os_ScheduleTableType',0,8,255,3,3
	.word	17140
	.byte	7
	.word	17140
	.byte	8
	.word	17320
	.byte	7
	.word	16617
	.byte	8
	.word	17330
	.byte	3
	.word	14433
	.byte	3
	.word	15383
	.byte	3
	.word	15280
	.byte	3
	.word	15941
	.byte	3
	.word	15447
	.byte	3
	.word	523
	.byte	3
	.word	15941
	.byte	12
	.byte	'Os_ControlledCoreType_s',0,8,251,6,16,112,16
	.byte	'TrapInfo',0
	.word	13864
	.byte	8,2,35,0,16
	.byte	'lock_taskaccess',0
	.word	17340
	.byte	4,2,35,8,16
	.byte	'ReadyTasks',0
	.word	17345
	.byte	4,2,35,12,16
	.byte	'RunningISR',0
	.word	17350
	.byte	4,2,35,16,16
	.byte	'RunningTask',0
	.word	17355
	.byte	4,2,35,20,16
	.byte	'RunningTPMask',0
	.word	17360
	.byte	4,2,35,24,16
	.byte	'CurrentMeteredObject',0
	.word	14966
	.byte	4,2,35,28,16
	.byte	'IdleMeter',0
	.word	14763
	.byte	48,2,35,32,16
	.byte	'AppAccess',0
	.word	523
	.byte	1,2,35,80,16
	.byte	'AppOverride',0
	.word	17365
	.byte	1,2,35,81,16
	.byte	'GetStackValueAdjust',0
	.word	14035
	.byte	8,2,35,84,16
	.byte	'InErrorHook',0
	.word	523
	.byte	1,2,35,92,16
	.byte	'ChainTaskRef',0
	.word	17370
	.byte	4,2,35,96,16
	.byte	'GetStackUsageAdjust',0
	.word	14035
	.byte	8,2,35,100,16
	.byte	'InProtectionHook',0
	.word	523
	.byte	1,2,35,108,16
	.byte	'CoreIsActive',0
	.word	523
	.byte	1,2,35,109,16
	.byte	'InShutdownHook',0
	.word	523
	.byte	1,2,35,110,0,21
	.byte	'Os_ControlledCoreType',0,8,141,7,3
	.word	17375
	.byte	8
	.word	155
	.byte	7
	.word	15111
	.byte	8
	.word	17831
	.byte	7
	.word	15681
	.byte	8
	.word	17841
	.byte	8
	.word	14763
	.byte	12
	.byte	'Os_AnyCoreType_s',0,8,151,7,16,96,16
	.byte	'DisableAllImask',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'SuspendAllImask',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'SuspendOSImask',0
	.word	155
	.byte	4,2,35,8,16
	.byte	'DisableAllCount',0
	.word	155
	.byte	4,2,35,12,16
	.byte	'SuspendAllCount',0
	.word	155
	.byte	4,2,35,16,16
	.byte	'SuspendOSCount',0
	.word	155
	.byte	4,2,35,20,16
	.byte	'RestartJumpBuf',0
	.word	13984
	.byte	68,2,35,24,16
	.byte	'Restartable',0
	.word	523
	.byte	1,2,35,92,0,21
	.byte	'Os_AnyCoreType',0,8,160,7,3
	.word	17856
	.byte	21
	.byte	'unsigned_int',0,9,116,22
	.word	155
	.byte	21
	.byte	'MemIf_JobResultType',0,4,39,2
	.word	689
	.byte	21
	.byte	'MemIf_ModeType',0,4,45,2
	.word	819
	.byte	21
	.byte	'PduIdType',0,10,22,19
	.word	2902
	.byte	21
	.byte	'PduLengthType',0,10,26,19
	.word	2902
	.byte	10,11,113,9,4,11
	.byte	'TP_DATACONF',0,0,11
	.byte	'TP_DATARETRY',0,1,11
	.byte	'TP_CONFPENDING',0,2,0,21
	.byte	'TpDataStateType',0,11,118,3
	.word	18209
	.byte	21
	.byte	'Can_IdType',0,12,32,16
	.word	155
	.byte	21
	.byte	'Can_HwHandleType',0,12,43,16
	.word	2902
	.byte	21
	.byte	'Can_TxObjPriorityClassType',0,13,219,3,16
	.word	155
	.byte	12
	.byte	'Can_TxHwObjectConfigType',0,13,231,3,16,8,16
	.byte	'MsgObjId',0
	.word	523
	.byte	1,2,35,0,16
	.byte	'HwControllerId',0
	.word	523
	.byte	1,2,35,1,16
	.byte	'TxObjPriorityClass',0
	.word	155
	.byte	4,2,35,4,0,21
	.byte	'Can_TxHwObjectConfigType',0,13,252,3,3
	.word	18365
	.byte	12
	.byte	'Can_RxHwObjectConfigType',0,13,129,4,16,12,16
	.byte	'MaskRef',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'MsgId',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'MsgObjId',0
	.word	523
	.byte	1,2,35,8,16
	.byte	'HwControllerId',0
	.word	523
	.byte	1,2,35,9,0,21
	.byte	'Can_RxHwObjectConfigType',0,13,147,4,3
	.word	18501
	.byte	14,4
	.word	523
	.byte	15,3,0,12
	.byte	'Can_ControllerMOMapConfigType',0,13,181,4,16,4,16
	.byte	'ControllerMOMap',0
	.word	18641
	.byte	4,2,35,0,0,21
	.byte	'Can_ControllerMOMapConfigType',0,13,184,4,3
	.word	18650
	.byte	12
	.byte	'Can_NPCRValueType',0,13,188,4,16,2,16
	.byte	'Can_NPCRValue',0
	.word	2902
	.byte	2,2,35,0,0,21
	.byte	'Can_NPCRValueType',0,13,191,4,3
	.word	18751
	.byte	12
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,194,4,16,8,16
	.byte	'CanControllerBaudrate',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'CanControllerBaudrateCfg',0
	.word	2902
	.byte	2,2,35,4,0,21
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,198,4,3
	.word	18826
	.byte	7
	.word	18826
	.byte	8
	.word	18991
	.byte	12
	.byte	'Can_BaudrateConfigPtrType',0,13,201,4,16,4,16
	.byte	'Can_kBaudrateConfigPtr',0
	.word	18996
	.byte	4,2,35,0,0,21
	.byte	'Can_BaudrateConfigPtrType',0,13,204,4,3
	.word	19001
	.byte	12
	.byte	'Can_EventHandlingType',0,13,226,4,16,4,16
	.byte	'CanEventType',0
	.word	18641
	.byte	4,2,35,0,0,21
	.byte	'Can_EventHandlingType',0,13,229,4,3
	.word	19101
	.byte	21
	.byte	'Rte_TransformerErrorCode',0,14,130,1,15
	.word	523
	.byte	21
	.byte	'Rte_TransformerClass',0,14,131,1,15
	.word	523
	.byte	23,14,168,1,9,12,16
	.byte	'in',0
	.word	14709
	.byte	4,2,35,0,16
	.byte	'out',0
	.word	14709
	.byte	4,2,35,4,16
	.byte	'used',0
	.word	2902
	.byte	2,2,35,8,16
	.byte	'lost_data',0
	.word	523
	.byte	1,2,35,10,0,21
	.byte	'Rte_QDynType',0,14,173,1,3
	.word	19247
	.byte	10,14,175,1,9,4,11
	.byte	'RTE_DRA',0,0,11
	.byte	'RTE_WOWP',0,1,11
	.byte	'RTE_TASK',0,2,11
	.byte	'RTE_ARE',0,3,11
	.byte	'RTE_EV',0,4,11
	.byte	'RTE_MSI',0,5,0,21
	.byte	'Rte_NotificationType',0,14,182,1,3
	.word	19334
	.byte	14,128,8
	.word	523
	.byte	15,255,7,0,21
	.byte	'Impl_NVM_DstPtrType_1024',0,15,50,15
	.word	19432
	.byte	21
	.byte	'CanIf_u32_impl',0,15,69,16
	.word	155
	.byte	21
	.byte	'CanIf_u16_impl',0,15,71,16
	.word	2902
	.byte	21
	.byte	'CanIf_u8_impl',0,15,73,15
	.word	523
	.byte	21
	.byte	'CanIf_ControllerModeType_Enum_impl',0,15,88,15
	.word	523
	.byte	21
	.byte	'CanIf_PduModeType_Enum_impl',0,15,90,15
	.word	523
	.byte	23,15,92,9,2,16
	.byte	'DeviceMode',0
	.word	523
	.byte	1,2,35,0,16
	.byte	'ChannelMode',0
	.word	523
	.byte	1,2,35,1,0,21
	.byte	'CanIf_ControllerStateType_struct_impl',0,15,95,3
	.word	19623
	.byte	21
	.byte	'CanIf_NotifStatusType_Enum_impl',0,15,100,15
	.word	523
	.byte	21
	.byte	'CanSM_boolean_Impl',0,15,120,15
	.word	523
	.byte	21
	.byte	'CanSM_u8_Impl',0,15,123,15
	.word	523
	.byte	21
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,15,128,1,15
	.word	523
	.byte	21
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,15,132,1,15
	.word	523
	.byte	21
	.byte	'CanSM_u16_Impl',0,15,136,1,16
	.word	2902
	.byte	21
	.byte	'CanSM_TimerStateType_Enum_impl',0,15,138,1,15
	.word	523
	.byte	23,15,140,1,9,4,16
	.byte	'cntTick_u16',0
	.word	2902
	.byte	2,2,35,0,16
	.byte	'stTimer',0
	.word	523
	.byte	1,2,35,2,0,21
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,15,143,1,3
	.word	19964
	.byte	21
	.byte	'Com_impl_u16',0,15,154,1,16
	.word	2902
	.byte	21
	.byte	'Com_impl_u8',0,15,157,1,15
	.word	523
	.byte	21
	.byte	'ComM_uint32_Impl',0,15,173,1,16
	.word	155
	.byte	21
	.byte	'ComM_uint16_Impl',0,15,175,1,16
	.word	2902
	.byte	21
	.byte	'ComM_uint8_Impl',0,15,177,1,15
	.word	523
	.byte	21
	.byte	'ComM_bool_Impl',0,15,179,1,15
	.word	523
	.byte	23,15,181,1,9,24,16
	.byte	'ChannelState_e',0
	.word	155
	.byte	4,2,35,0,16
	.byte	'LightTimeoutCtr_u32',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	2902
	.byte	2,2,35,8,16
	.byte	'ChannelMode_u8',0
	.word	523
	.byte	1,2,35,10,16
	.byte	'BusSmMode_u8',0
	.word	523
	.byte	1,2,35,11,16
	.byte	'UserRequestCtr_u8',0
	.word	523
	.byte	1,2,35,12,16
	.byte	'PassiveRequestState_u8',0
	.word	523
	.byte	1,2,35,13,16
	.byte	'PncRequestCtr_u8',0
	.word	523
	.byte	1,2,35,14,16
	.byte	'InhibitionReqStatus_u8',0
	.word	523
	.byte	1,2,35,15,16
	.byte	'NmNetworkRequestStatus_b',0
	.word	523
	.byte	1,2,35,16,16
	.byte	'DiagnosticRequestState_b',0
	.word	523
	.byte	1,2,35,17,16
	.byte	'CommunicationAllowed_b',0
	.word	523
	.byte	1,2,35,18,16
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	523
	.byte	1,2,35,19,16
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	523
	.byte	1,2,35,20,16
	.byte	'NmNetworkModeStatus_b',0
	.word	523
	.byte	1,2,35,21,0,21
	.byte	'ComM_ChannelStruct_Impl',0,15,197,1,3
	.word	20196
	.byte	23,15,206,1,9,10,16
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	2902
	.byte	2,2,35,0,16
	.byte	'LimitToNoComCtr_u16',0
	.word	2902
	.byte	2,2,35,2,16
	.byte	'RequestedUserMode_t',0
	.word	523
	.byte	1,2,35,4,16
	.byte	'IndicatedUserMode_t',0
	.word	523
	.byte	1,2,35,5,16
	.byte	'numChannelsInFullCom_u8',0
	.word	523
	.byte	1,2,35,6,16
	.byte	'numChannelsInSilentCom_u8',0
	.word	523
	.byte	1,2,35,7,16
	.byte	'numChannelsInNoCom_u8',0
	.word	523
	.byte	1,2,35,8,0,21
	.byte	'ComM_UserStruct_Impl',0,15,214,1,3
	.word	20700
	.byte	21
	.byte	'Dcm_IOOperationResponseType',0,15,252,1,15
	.word	523
	.byte	21
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	15,138,2,15
	.word	523
	.byte	21
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,15,146,2,15
	.word	523
	.byte	21
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,15,150,2,15
	.word	523
	.byte	21
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,15,154,2,15
	.word	523
	.byte	21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,15,243,3,34
	.word	19443
	.byte	14,128,8
	.word	523
	.byte	15,255,7,0,21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,15,246,3,34
	.word	19443
	.byte	21
	.byte	'Fls_AddressType',0,3,171,3,16
	.word	155
	.byte	21
	.byte	'Fls_LengthType',0,3,173,3,16
	.word	155
	.byte	21
	.byte	'Fls_JobStartType',0,3,183,3,3
	.word	861
	.byte	21
	.byte	'Fls_17_Pmu_Job_Type',0,3,187,3,15
	.word	523
	.byte	21
	.byte	'Fls_17_Pmu_StateType',0,3,130,4,3
	.word	1005
	.byte	21
	.byte	'Fls_NotifFunctionPtrType',0,3,137,4,16
	.word	14123
	.byte	7
	.word	155
	.byte	8
	.word	21686
	.byte	26,1,1,27
	.word	155
	.byte	27
	.word	155
	.byte	27
	.word	21691
	.byte	27
	.word	523
	.byte	0,8
	.word	21696
	.byte	21
	.byte	'Fls_WriteCmdPtrType',0,3,139,4,16
	.word	21720
	.byte	26,1,1,27
	.word	155
	.byte	0,8
	.word	21754
	.byte	21
	.byte	'Fls_EraseCmdPtrType',0,3,144,4,16
	.word	21763
	.byte	12
	.byte	'Fls_17_Pmu_ConfigType',0,3,149,4,16,44,16
	.byte	'FlsStateVarPtr',0
	.word	1419
	.byte	4,2,35,0,16
	.byte	'FlsFastRead',0
	.word	155
	.byte	4,2,35,4,16
	.byte	'FlsSlowRead',0
	.word	155
	.byte	4,2,35,8,16
	.byte	'FlsJobEndNotificationPtr',0
	.word	21652
	.byte	4,2,35,12,16
	.byte	'FlsJobErrorNotificationPtr',0
	.word	21652
	.byte	4,2,35,16,16
	.byte	'FlsIllegalStateNotificationPtr',0
	.word	21652
	.byte	4,2,35,20,16
	.byte	'FlsWaitStates',0
	.word	155
	.byte	4,2,35,24,16
	.byte	'FlsAccessCodeWritePtr',0
	.word	21725
	.byte	4,2,35,28,16
	.byte	'FlsAccessCodeErasePtr',0
	.word	21768
	.byte	4,2,35,32,16
	.byte	'FlsCallCycle',0
	.word	155
	.byte	4,2,35,36,16
	.byte	'FlsDefaultMode',0
	.word	819
	.byte	4,2,35,40,0,21
	.byte	'Fls_17_Pmu_ConfigType',0,3,218,4,3
	.word	21797
	.byte	8
	.word	14120
	.byte	8
	.word	21696
	.byte	8
	.word	21754
	.byte	7
	.word	21797
	.byte	8
	.word	22179
	.byte	30
	.byte	'Fls_ConfigPtr',0,3,237,4,37
	.word	22184
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,53,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,38,0,73,19,0,0
	.byte	8,15,0,73,19,0,0,9,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,10,4,1,58,15,59,15,57,15,11
	.byte	15,0,0,11,40,0,3,8,28,13,0,0,12,19,1,3,8,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,11,15,73,19,13,15,12
	.byte	15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,13,0,3,8,73,19,11,15,56,9,0,0,17,46,1,49,19,0
	.byte	0,18,5,0,49,19,0,0,19,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,20,21,0,54,15,0,0,21,22,0,3,8,58
	.byte	15,59,15,57,15,73,19,0,0,22,23,1,58,15,59,15,57,15,11,15,0,0,23,19,1,58,15,59,15,57,15,11,15,0,0,24,21
	.byte	0,54,15,39,12,0,0,25,59,0,3,8,0,0,26,21,1,54,15,39,12,0,0,27,5,0,73,19,0,0,28,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,29,21,0,73,19,54,15,39,12,0,0,30,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L69:
	.word	.L302-.L301
.L301:
	.half	3
	.word	.L304-.L303
.L303:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxFlash_regdef.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0,0
.L304:
.L302:
	.sdecl	'.debug_info',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_info'
.L70:
	.word	788
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_WriteCmdCycles',0,1,140,1,6,1,1,1
	.word	.L53,.L105,.L52
	.byte	4
	.byte	'StartAddress',0,1,140,1,42
	.word	.L106,.L107
	.byte	4
	.byte	'PageAddress',0,1,141,1,33
	.word	.L108,.L109
	.byte	4
	.byte	'ProgramDataPtr',0,1,142,1,49
	.word	.L110,.L111
	.byte	4
	.byte	'WriteMode',0,1,143,1,32
	.word	.L112,.L113
	.byte	5
	.word	.L53,.L105
	.byte	6
	.byte	'InnerCount',0,1,146,1,10
	.word	.L108,.L114
	.byte	6
	.byte	'pdata',0,1,147,1,26
	.word	.L110,.L115
	.byte	7
	.word	.L116,.L5,.L6
	.byte	8
	.word	.L117,.L118
	.byte	8
	.word	.L119,.L120
	.byte	9
	.word	.L121,.L5,.L6
	.byte	6
	.byte	'StartAddress',0,2,193,2,20
	.word	.L122,.L123
	.byte	0,0,7
	.word	.L124,.L125,.L7
	.byte	8
	.word	.L126,.L127
	.byte	8
	.word	.L128,.L129
	.byte	9
	.word	.L130,.L125,.L7
	.byte	6
	.byte	'StartAddress',0,2,213,1,10
	.word	.L108,.L131
	.byte	0,0,7
	.word	.L132,.L133,.L8
	.byte	8
	.word	.L134,.L135
	.byte	8
	.word	.L136,.L137
	.byte	9
	.word	.L138,.L133,.L8
	.byte	6
	.byte	'StartAddress',0,2,247,1,10
	.word	.L108,.L139
	.byte	0,0,7
	.word	.L140,.L141,.L9
	.byte	8
	.word	.L142,.L143
	.byte	8
	.word	.L144,.L145
	.byte	9
	.word	.L146,.L141,.L9
	.byte	6
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L147
	.byte	0,0,7
	.word	.L140,.L148,.L11
	.byte	8
	.word	.L142,.L143
	.byte	8
	.word	.L144,.L145
	.byte	9
	.word	.L146,.L148,.L11
	.byte	6
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L149
	.byte	0,0,7
	.word	.L140,.L150,.L12
	.byte	8
	.word	.L142,.L143
	.byte	8
	.word	.L144,.L145
	.byte	9
	.word	.L146,.L150,.L12
	.byte	6
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L151
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_line'
.L72:
	.word	.L306-.L305
.L305:
	.half	3
	.word	.L308-.L307
.L307:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L308:
	.byte	5,3,7,0,5,2
	.word	.L53
	.byte	3,150,1,1,5,16,9
	.half	.L309-.L53
	.byte	3,2,1,5,60,9
	.half	.L310-.L309
	.byte	1,5,16,9
	.half	.L2-.L310
	.byte	3,4,1,5,25,9
	.half	.L3-.L2
	.byte	3,2,1,4,2,5,49,9
	.half	.L5-.L3
	.byte	3,167,1,1,5,18,9
	.half	.L311-.L5
	.byte	3,1,1,5,16,9
	.half	.L243-.L311
	.byte	3,127,1,5,19,9
	.half	.L245-.L243
	.byte	3,3,1,5,17,9
	.half	.L244-.L245
	.byte	1,5,25,9
	.half	.L312-.L244
	.byte	3,6,1,5,23,9
	.half	.L313-.L312
	.byte	1,5,3,9
	.half	.L314-.L313
	.byte	3,2,1,4,1,5,11,9
	.half	.L6-.L314
	.byte	3,213,126,1,5,15,9
	.half	.L315-.L6
	.byte	3,1,1,5,25,9
	.half	.L4-.L315
	.byte	3,120,1,4,2,5,29,7,9
	.half	.L125-.L4
	.byte	3,55,1,5,55,9
	.half	.L316-.L125
	.byte	1,5,53,9
	.half	.L242-.L316
	.byte	1,5,5,9
	.half	.L317-.L242
	.byte	3,5,1,5,28,9
	.half	.L247-.L317
	.byte	1,5,3,9
	.half	.L318-.L247
	.byte	3,1,1,4,1,5,27,9
	.half	.L7-.L318
	.byte	3,81,1,4,2,5,29,9
	.half	.L133-.L7
	.byte	3,203,0,1,5,55,9
	.half	.L246-.L133
	.byte	1,5,53,9
	.half	.L249-.L246
	.byte	1,5,5,9
	.half	.L319-.L249
	.byte	3,5,1,5,28,9
	.half	.L248-.L319
	.byte	1,5,3,9
	.half	.L320-.L248
	.byte	3,1,1,4,1,5,27,9
	.half	.L8-.L320
	.byte	3,182,127,1,4,2,5,55,9
	.half	.L141-.L8
	.byte	1,5,29,9
	.half	.L250-.L141
	.byte	1,5,53,9
	.half	.L252-.L250
	.byte	1,5,5,9
	.half	.L321-.L252
	.byte	3,5,1,5,28,9
	.half	.L251-.L321
	.byte	1,5,3,9
	.half	.L322-.L251
	.byte	3,1,1,4,1,9
	.half	.L9-.L322
	.byte	3,125,1,5,29,7,9
	.half	.L323-.L9
	.byte	3,2,1,4,2,9
	.half	.L148-.L323
	.byte	3,123,1,5,53,9
	.half	.L253-.L148
	.byte	1,5,5,9
	.half	.L324-.L253
	.byte	3,5,1,5,28,9
	.half	.L254-.L324
	.byte	1,5,3,9
	.half	.L325-.L254
	.byte	3,1,1,4,1,5,15,9
	.half	.L11-.L325
	.byte	3,127,1,5,29,9
	.half	.L10-.L11
	.byte	3,4,1,4,2,9
	.half	.L150-.L10
	.byte	3,119,1,5,53,9
	.half	.L255-.L150
	.byte	1,5,5,9
	.half	.L326-.L255
	.byte	3,5,1,5,28,9
	.half	.L256-.L326
	.byte	1,5,3,9
	.half	.L327-.L256
	.byte	3,1,1,4,1,5,1,9
	.half	.L12-.L327
	.byte	3,6,1,7,9
	.half	.L74-.L12
	.byte	0,1,1
.L306:
	.sdecl	'.debug_ranges',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L53,0,.L74-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_info'
.L75:
	.word	597
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_EraseCmdCycles',0,1,220,1,6,1,1,1
	.word	.L55,.L152,.L54
	.byte	4
	.byte	'StartAddress',0,1,220,1,41
	.word	.L153,.L154
	.byte	5
	.word	.L55,.L152
	.byte	6
	.word	.L124,.L155,.L15
	.byte	7
	.word	.L126,.L156
	.byte	7
	.word	.L128,.L157
	.byte	8
	.word	.L130,.L155,.L15
	.byte	9
	.byte	'StartAddress',0,2,213,1,10
	.word	.L108,.L158
	.byte	0,0,6
	.word	.L124,.L159,.L16
	.byte	7
	.word	.L126,.L156
	.byte	7
	.word	.L128,.L157
	.byte	8
	.word	.L130,.L159,.L16
	.byte	9
	.byte	'StartAddress',0,2,213,1,10
	.word	.L108,.L160
	.byte	0,0,6
	.word	.L132,.L161,.L18
	.byte	7
	.word	.L134,.L162
	.byte	7
	.word	.L136,.L163
	.byte	8
	.word	.L138,.L161,.L18
	.byte	9
	.byte	'StartAddress',0,2,247,1,10
	.word	.L108,.L164
	.byte	0,0,6
	.word	.L140,.L165,.L19
	.byte	7
	.word	.L142,.L166
	.byte	7
	.word	.L144,.L167
	.byte	8
	.word	.L146,.L165,.L19
	.byte	9
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L168
	.byte	0,0,6
	.word	.L140,.L169,.L20
	.byte	7
	.word	.L142,.L166
	.byte	7
	.word	.L144,.L167
	.byte	8
	.word	.L146,.L169,.L20
	.byte	9
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L170
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_line'
.L77:
	.word	.L329-.L328
.L328:
	.half	3
	.word	.L331-.L330
.L330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L331:
	.byte	5,23,7,0,5,2
	.word	.L55
	.byte	3,224,1,1,5,3,9
	.half	.L332-.L55
	.byte	1,4,2,5,29,7,9
	.half	.L155-.L332
	.byte	3,117,1,5,55,9
	.half	.L333-.L155
	.byte	1,5,53,9
	.half	.L257-.L333
	.byte	1,5,5,9
	.half	.L334-.L257
	.byte	3,5,1,5,28,9
	.half	.L258-.L334
	.byte	1,5,3,9
	.half	.L335-.L258
	.byte	3,1,1,4,1,5,15,9
	.half	.L15-.L335
	.byte	3,7,1,5,37,9
	.half	.L14-.L15
	.byte	3,4,1,4,2,5,29,9
	.half	.L159-.L14
	.byte	3,111,1,5,55,9
	.half	.L336-.L159
	.byte	1,5,53,9
	.half	.L259-.L336
	.byte	1,5,5,9
	.half	.L337-.L259
	.byte	3,5,1,5,28,9
	.half	.L260-.L337
	.byte	1,5,3,9
	.half	.L338-.L260
	.byte	3,1,1,4,1,5,27,9
	.half	.L16-.L338
	.byte	3,15,1,4,2,5,29,9
	.half	.L161-.L16
	.byte	3,13,1,5,55,9
	.half	.L339-.L161
	.byte	1,5,53,9
	.half	.L261-.L339
	.byte	1,5,5,9
	.half	.L340-.L261
	.byte	3,5,1,5,28,9
	.half	.L263-.L340
	.byte	1,5,3,9
	.half	.L341-.L263
	.byte	3,1,1,4,1,5,27,9
	.half	.L18-.L341
	.byte	3,111,1,4,2,5,55,9
	.half	.L165-.L18
	.byte	3,71,1,5,29,9
	.half	.L262-.L165
	.byte	1,5,53,9
	.half	.L265-.L262
	.byte	1,5,5,9
	.half	.L342-.L265
	.byte	3,5,1,5,28,9
	.half	.L264-.L342
	.byte	1,5,3,9
	.half	.L343-.L264
	.byte	3,1,1,4,1,5,27,9
	.half	.L19-.L343
	.byte	3,58,1,4,2,5,29,9
	.half	.L169-.L19
	.byte	3,64,1,5,53,9
	.half	.L266-.L169
	.byte	1,5,5,9
	.half	.L344-.L266
	.byte	3,5,1,5,28,9
	.half	.L267-.L344
	.byte	1,5,3,9
	.half	.L345-.L267
	.byte	3,1,1,4,1,5,1,9
	.half	.L20-.L345
	.byte	3,60,1,7,9
	.half	.L79-.L20
	.byte	0,1,1
.L329:
	.sdecl	'.debug_ranges',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L55,0,.L79-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_info'
.L80:
	.word	286
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_ResetReadCmdCycle',0,1,255,2,6,1,1,1
	.word	.L61,.L171,.L60
	.byte	4
	.word	.L61,.L171
	.byte	5
	.word	.L172,.L173,.L43
	.byte	6
	.word	.L174,.L175
	.byte	6
	.word	.L176,.L177
	.byte	7
	.word	.L178,.L173,.L43
	.byte	8
	.byte	'StartAddress',0,2,145,1,10
	.word	.L108,.L179
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_line'
.L82:
	.word	.L347-.L346
.L346:
	.half	3
	.word	.L349-.L348
.L348:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L349:
	.byte	5,13,7,0,5,2
	.word	.L61
	.byte	3,128,3,1,5,31,9
	.half	.L350-.L61
	.byte	1,4,2,5,29,9
	.half	.L173-.L350
	.byte	3,145,126,1,5,53,9
	.half	.L351-.L173
	.byte	1,5,5,9
	.half	.L285-.L351
	.byte	3,5,1,5,28,9
	.half	.L286-.L285
	.byte	1,5,3,9
	.half	.L352-.L286
	.byte	3,1,1,4,1,5,1,9
	.half	.L43-.L352
	.byte	3,234,1,1,7,9
	.half	.L84-.L43
	.byte	0,1,1
.L347:
	.sdecl	'.debug_ranges',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L61,0,.L84-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_info'
.L85:
	.word	288
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_ClearStatusCmdCycle',0,1,149,3,6,1,1,1
	.word	.L63,.L180,.L62
	.byte	4
	.word	.L63,.L180
	.byte	5
	.word	.L172,.L181,.L44
	.byte	6
	.word	.L174,.L182
	.byte	6
	.word	.L176,.L183
	.byte	7
	.word	.L178,.L181,.L44
	.byte	8
	.byte	'StartAddress',0,2,145,1,10
	.word	.L108,.L184
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_line'
.L87:
	.word	.L354-.L353
.L353:
	.half	3
	.word	.L356-.L355
.L355:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L356:
	.byte	5,13,7,0,5,2
	.word	.L63
	.byte	3,150,3,1,5,31,9
	.half	.L357-.L63
	.byte	1,4,2,5,29,9
	.half	.L181-.L357
	.byte	3,251,125,1,5,53,9
	.half	.L358-.L181
	.byte	1,5,5,9
	.half	.L287-.L358
	.byte	3,5,1,5,28,9
	.half	.L288-.L287
	.byte	1,5,3,9
	.half	.L359-.L288
	.byte	3,1,1,4,1,5,1,9
	.half	.L44-.L359
	.byte	3,134,2,1,7,9
	.half	.L89-.L44
	.byte	0,1,1
.L354:
	.sdecl	'.debug_ranges',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L63,0,.L89-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_info'
.L90:
	.word	345
	.half	3
	.word	.L91
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L93,.L92
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_CallEraseCommand',0,1,146,2,6,1,1,1
	.word	.L57,.L185,.L56
	.byte	4
	.byte	'PhysicalAddress',0,1,146,2,43
	.word	.L186,.L187
	.byte	5
	.word	.L57,.L185
	.byte	6
	.byte	'InnerCount',0,1,148,2,10
	.word	.L108,.L188
	.byte	6
	.byte	'StatePtr',0,1,149,2,25
	.word	.L189,.L190
	.byte	7
	.word	.L191,.L23,.L192
	.byte	8
	.word	.L193,.L194
	.byte	9
	.word	.L195,.L23,.L192
	.byte	6
	.byte	'RetVal',0,1,221,3,11
	.word	.L112,.L196
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_line'
.L92:
	.word	.L361-.L360
.L360:
	.half	3
	.word	.L363-.L362
.L362:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0,0
.L363:
	.byte	5,20,7,0,5,2
	.word	.L57
	.byte	3,147,2,1,5,14,9
	.half	.L269-.L57
	.byte	3,2,1,5,27,9
	.half	.L364-.L269
	.byte	1,5,29,9
	.half	.L270-.L364
	.byte	3,1,1,5,27,9
	.half	.L365-.L270
	.byte	1,5,4,9
	.half	.L366-.L365
	.byte	3,2,1,5,17,9
	.half	.L367-.L366
	.byte	1,5,42,9
	.half	.L368-.L367
	.byte	1,5,79,9
	.half	.L268-.L368
	.byte	3,4,1,5,15,9
	.half	.L22-.L268
	.byte	3,2,1,5,12,9
	.half	.L21-.L22
	.byte	3,124,1,5,9,9
	.half	.L369-.L21
	.byte	1,5,58,7,9
	.half	.L370-.L369
	.byte	3,2,1,5,56,9
	.half	.L371-.L370
	.byte	1,5,29,7,9
	.half	.L23-.L371
	.byte	3,197,1,1,5,3,9
	.half	.L372-.L23
	.byte	1,5,27,9
	.half	.L271-.L372
	.byte	3,3,1,5,12,9
	.half	.L24-.L271
	.byte	3,4,1,5,3,9
	.half	.L25-.L24
	.byte	3,2,1,9
	.half	.L26-.L25
	.byte	3,184,126,1,5,31,7,9
	.half	.L192-.L26
	.byte	3,2,1,5,29,9
	.half	.L272-.L192
	.byte	1,5,1,9
	.half	.L27-.L272
	.byte	3,3,1,7,9
	.half	.L94-.L27
	.byte	0,1,1
.L361:
	.sdecl	'.debug_ranges',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_ranges'
.L93:
	.word	-1,.L57,0,.L94-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_info'
.L95:
	.word	516
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L98,.L97
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_CallWriteCommand',0,1,189,2,6,1,1,1
	.word	.L59,.L197,.L58
	.byte	4
	.byte	'PhysicalAddress',0,1,189,2,43
	.word	.L198,.L199
	.byte	4
	.byte	's_ptr',0,1,190,2,55
	.word	.L200,.L201
	.byte	4
	.byte	'WriteMode',0,1,191,2,33
	.word	.L112,.L202
	.byte	5
	.word	.L59,.L197
	.byte	6
	.byte	'InnerCount',0,1,193,2,10
	.word	.L108,.L203
	.byte	6
	.byte	'StatePtr',0,1,195,2,25
	.word	.L189,.L204
	.byte	7
	.word	.L205,.L206,.L28
	.byte	8
	.word	.L207,.L208
	.byte	8
	.word	.L209,.L210
	.byte	9
	.word	.L211,.L206,.L28
	.byte	6
	.byte	'StartAddress',0,2,155,2,10
	.word	.L108,.L212
	.byte	0,0,7
	.word	.L191,.L31,.L213
	.byte	8
	.word	.L193,.L214
	.byte	9
	.word	.L195,.L31,.L213
	.byte	6
	.byte	'RetVal',0,1,221,3,11
	.word	.L112,.L215
	.byte	0,0,7
	.word	.L216,.L38,.L217
	.byte	8
	.word	.L218,.L219
	.byte	9
	.word	.L220,.L38,.L217
	.byte	6
	.byte	'RetVal',0,1,129,4,11
	.word	.L112,.L221
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_line'
.L97:
	.word	.L374-.L373
.L373:
	.half	3
	.word	.L376-.L375
.L375:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L376:
	.byte	5,6,7,0,5,2
	.word	.L59
	.byte	3,188,2,1,5,14,9
	.half	.L273-.L59
	.byte	3,8,1,5,27,9
	.half	.L377-.L273
	.byte	1,5,29,9
	.half	.L274-.L377
	.byte	3,1,1,5,27,9
	.half	.L378-.L274
	.byte	1,5,34,9
	.half	.L379-.L378
	.byte	3,3,1,4,2,5,29,9
	.half	.L206-.L379
	.byte	3,84,1,5,53,9
	.half	.L380-.L206
	.byte	1,5,5,9
	.half	.L275-.L380
	.byte	3,5,1,5,28,9
	.half	.L276-.L275
	.byte	1,5,3,9
	.half	.L381-.L276
	.byte	3,2,1,4,1,5,14,9
	.half	.L28-.L381
	.byte	3,39,1,5,12,9
	.half	.L277-.L28
	.byte	3,3,1,5,79,9
	.half	.L382-.L277
	.byte	3,2,1,5,15,9
	.half	.L30-.L382
	.byte	3,2,1,5,12,9
	.half	.L29-.L30
	.byte	3,124,1,5,9,9
	.half	.L383-.L29
	.byte	1,5,58,7,9
	.half	.L384-.L383
	.byte	3,2,1,5,56,9
	.half	.L385-.L384
	.byte	1,5,29,7,9
	.half	.L31-.L385
	.byte	3,146,1,1,5,3,9
	.half	.L386-.L31
	.byte	1,5,27,9
	.half	.L278-.L386
	.byte	3,3,1,5,12,9
	.half	.L32-.L278
	.byte	3,4,1,5,3,9
	.half	.L33-.L32
	.byte	3,2,1,9
	.half	.L34-.L33
	.byte	3,235,126,1,5,31,7,9
	.half	.L213-.L34
	.byte	3,2,1,5,29,9
	.half	.L280-.L213
	.byte	1,5,4,9
	.half	.L35-.L280
	.byte	3,3,1,5,17,9
	.half	.L387-.L35
	.byte	1,5,22,9
	.half	.L388-.L387
	.byte	3,1,1,5,60,9
	.half	.L281-.L388
	.byte	3,1,1,5,17,9
	.half	.L282-.L281
	.byte	3,1,1,5,76,9
	.half	.L279-.L282
	.byte	3,4,1,5,15,9
	.half	.L37-.L279
	.byte	3,2,1,5,12,9
	.half	.L36-.L37
	.byte	3,124,1,5,9,9
	.half	.L389-.L36
	.byte	1,5,55,7,9
	.half	.L390-.L389
	.byte	3,2,1,5,53,9
	.half	.L391-.L390
	.byte	1,5,21,7,9
	.half	.L38-.L391
	.byte	3,164,1,1,5,3,9
	.half	.L392-.L38
	.byte	1,5,27,9
	.half	.L283-.L392
	.byte	3,3,1,5,12,9
	.half	.L39-.L283
	.byte	3,4,1,5,3,9
	.half	.L40-.L39
	.byte	3,2,1,9
	.half	.L41-.L40
	.byte	3,216,126,1,5,31,7,9
	.half	.L217-.L41
	.byte	3,2,1,5,29,9
	.half	.L284-.L217
	.byte	1,5,1,9
	.half	.L42-.L284
	.byte	3,3,1,7,9
	.half	.L99-.L42
	.byte	0,1,1
.L374:
	.sdecl	'.debug_ranges',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_ranges'
.L98:
	.word	-1,.L59,0,.L99-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_info'
.L100:
	.word	602
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Fls_ResumeEraseCmdCycle',0,1,177,3,6,1,1,1
	.word	.L65,.L222,.L64
	.byte	4
	.byte	'StartAddress',0,1,177,3,46
	.word	.L223,.L224
	.byte	5
	.word	.L65,.L222
	.byte	6
	.word	.L124,.L225,.L46
	.byte	7
	.word	.L126,.L226
	.byte	7
	.word	.L128,.L227
	.byte	8
	.word	.L130,.L225,.L46
	.byte	9
	.byte	'StartAddress',0,2,213,1,10
	.word	.L108,.L228
	.byte	0,0,6
	.word	.L124,.L229,.L47
	.byte	7
	.word	.L126,.L226
	.byte	7
	.word	.L128,.L227
	.byte	8
	.word	.L130,.L229,.L47
	.byte	9
	.byte	'StartAddress',0,2,213,1,10
	.word	.L108,.L230
	.byte	0,0,6
	.word	.L132,.L231,.L49
	.byte	7
	.word	.L134,.L232
	.byte	7
	.word	.L136,.L233
	.byte	8
	.word	.L138,.L231,.L49
	.byte	9
	.byte	'StartAddress',0,2,247,1,10
	.word	.L108,.L234
	.byte	0,0,6
	.word	.L140,.L235,.L50
	.byte	7
	.word	.L142,.L236
	.byte	7
	.word	.L144,.L237
	.byte	8
	.word	.L146,.L235,.L50
	.byte	9
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L238
	.byte	0,0,6
	.word	.L140,.L239,.L51
	.byte	7
	.word	.L142,.L236
	.byte	7
	.word	.L144,.L237
	.byte	8
	.word	.L146,.L239,.L51
	.byte	9
	.byte	'StartAddress',0,2,179,1,10
	.word	.L108,.L240
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_line'
.L102:
	.word	.L394-.L393
.L393:
	.half	3
	.word	.L396-.L395
.L395:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\src\\Fls_17_Pmu_ac.c',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu_ac.h',0,0,0,0,0
.L396:
	.byte	5,23,7,0,5,2
	.word	.L65
	.byte	3,180,3,1,5,3,9
	.half	.L397-.L65
	.byte	1,4,2,5,29,7,9
	.half	.L225-.L397
	.byte	3,161,126,1,5,55,9
	.half	.L398-.L225
	.byte	1,5,53,9
	.half	.L289-.L398
	.byte	1,5,5,9
	.half	.L399-.L289
	.byte	3,5,1,5,28,9
	.half	.L290-.L399
	.byte	1,5,3,9
	.half	.L400-.L290
	.byte	3,1,1,4,1,5,15,9
	.half	.L46-.L400
	.byte	3,219,1,1,5,29,9
	.half	.L45-.L46
	.byte	3,4,1,4,2,9
	.half	.L229-.L45
	.byte	3,155,126,1,5,55,9
	.half	.L401-.L229
	.byte	1,5,53,9
	.half	.L291-.L401
	.byte	1,5,5,9
	.half	.L402-.L291
	.byte	3,5,1,5,28,9
	.half	.L292-.L402
	.byte	1,5,3,9
	.half	.L403-.L292
	.byte	3,1,1,4,1,5,27,9
	.half	.L47-.L403
	.byte	3,227,1,1,4,2,5,29,9
	.half	.L231-.L47
	.byte	3,185,126,1,5,55,9
	.half	.L404-.L231
	.byte	1,5,53,9
	.half	.L293-.L404
	.byte	1,5,5,9
	.half	.L405-.L293
	.byte	3,5,1,5,28,9
	.half	.L295-.L405
	.byte	1,5,3,9
	.half	.L406-.L295
	.byte	3,1,1,4,1,5,27,9
	.half	.L49-.L406
	.byte	3,195,1,1,4,2,5,55,9
	.half	.L235-.L49
	.byte	3,243,125,1,5,29,9
	.half	.L294-.L235
	.byte	1,5,53,9
	.half	.L297-.L294
	.byte	1,5,5,9
	.half	.L407-.L297
	.byte	3,5,1,5,28,9
	.half	.L296-.L407
	.byte	1,5,3,9
	.half	.L408-.L296
	.byte	3,1,1,4,1,5,27,9
	.half	.L50-.L408
	.byte	3,137,2,1,4,2,5,29,9
	.half	.L239-.L50
	.byte	3,241,125,1,5,53,9
	.half	.L298-.L239
	.byte	1,5,5,9
	.half	.L409-.L298
	.byte	3,5,1,5,28,9
	.half	.L299-.L409
	.byte	1,5,3,9
	.half	.L410-.L299
	.byte	3,1,1,4,1,5,1,9
	.half	.L51-.L410
	.byte	3,139,2,1,7,9
	.half	.L104-.L51
	.byte	0,1,1
.L394:
	.sdecl	'.debug_ranges',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L65,0,.L104-.L65,0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_loc'
.L56:
	.word	-1,.L57,0,.L185-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L188:
	.word	-1,.L57,.L269-.L57,.L24-.L57
	.half	1
	.byte	88
	.word	.L25-.L57,.L185-.L57
	.half	1
	.byte	88
	.word	0,0
.L194:
	.word	0,0
.L187:
	.word	-1,.L57,0,.L268-.L57
	.half	1
	.byte	84
	.word	0,0
.L196:
	.word	-1,.L57,.L271-.L57,.L24-.L57
	.half	1
	.byte	95
	.word	.L25-.L57,.L272-.L57
	.half	1
	.byte	95
	.word	0,0
.L190:
	.word	-1,.L57,.L270-.L57,.L24-.L57
	.half	1
	.byte	108
	.word	.L25-.L57,.L185-.L57
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_loc'
.L208:
	.word	0,0
.L210:
	.word	0,0
.L58:
	.word	-1,.L59,0,.L197-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L203:
	.word	-1,.L59,.L277-.L59,.L32-.L59
	.half	1
	.byte	88
	.word	.L33-.L59,.L39-.L59
	.half	1
	.byte	88
	.word	.L40-.L59,.L197-.L59
	.half	1
	.byte	88
	.word	0,0
.L214:
	.word	0,0
.L219:
	.word	0,0
.L199:
	.word	-1,.L59,0,.L32-.L59
	.half	1
	.byte	84
	.word	.L33-.L59,.L279-.L59
	.half	1
	.byte	84
	.word	0,0
.L215:
	.word	-1,.L59,.L278-.L59,.L32-.L59
	.half	1
	.byte	95
	.word	.L33-.L59,.L280-.L59
	.half	1
	.byte	95
	.word	0,0
.L221:
	.word	-1,.L59,.L283-.L59,.L39-.L59
	.half	1
	.byte	95
	.word	.L40-.L59,.L284-.L59
	.half	1
	.byte	95
	.word	0,0
.L212:
	.word	-1,.L59,.L275-.L59,.L32-.L59
	.half	5
	.byte	144,32,157,32,0
	.word	.L276-.L59,.L32-.L59
	.half	1
	.byte	98
	.word	.L33-.L59,.L279-.L59
	.half	5
	.byte	144,32,157,32,0
	.word	.L33-.L59,.L279-.L59
	.half	1
	.byte	98
	.word	0,0
.L204:
	.word	-1,.L59,.L274-.L59,.L32-.L59
	.half	1
	.byte	108
	.word	.L33-.L59,.L39-.L59
	.half	1
	.byte	108
	.word	.L40-.L59,.L197-.L59
	.half	1
	.byte	108
	.word	0,0
.L202:
	.word	-1,.L59,0,.L32-.L59
	.half	1
	.byte	85
	.word	.L273-.L59,.L32-.L59
	.half	1
	.byte	86
	.word	.L33-.L59,.L281-.L59
	.half	1
	.byte	85
	.word	.L33-.L59,.L279-.L59
	.half	1
	.byte	86
	.word	0,0
.L201:
	.word	-1,.L59,0,.L32-.L59
	.half	1
	.byte	100
	.word	.L33-.L59,.L282-.L59
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_loc'
.L182:
	.word	0,0
.L183:
	.word	0,0
.L62:
	.word	-1,.L63,0,.L180-.L63
	.half	2
	.byte	138,0
	.word	0,0
.L184:
	.word	-1,.L63,.L287-.L63,.L180-.L63
	.half	5
	.byte	144,32,157,32,0
	.word	.L288-.L63,.L180-.L63
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_loc'
.L166:
	.word	0,0
.L156:
	.word	0,0
.L162:
	.word	0,0
.L167:
	.word	0,0
.L157:
	.word	0,0
.L163:
	.word	0,0
.L54:
	.word	-1,.L55,0,.L152-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L170:
	.word	-1,.L55,.L266-.L55,.L152-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	.L267-.L55,.L152-.L55
	.half	1
	.byte	111
	.word	0,0
.L168:
	.word	-1,.L55,.L265-.L55,.L266-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	.L264-.L55,.L267-.L55
	.half	1
	.byte	111
	.word	0,0
.L158:
	.word	-1,.L55,.L257-.L55,.L14-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	.L258-.L55,.L14-.L55
	.half	1
	.byte	111
	.word	0,0
.L160:
	.word	-1,.L55,.L259-.L55,.L16-.L55
	.half	1
	.byte	95
	.word	.L260-.L55,.L16-.L55
	.half	1
	.byte	111
	.word	0,0
.L154:
	.word	-1,.L55,0,.L152-.L55
	.half	1
	.byte	84
	.word	0,0
.L164:
	.word	-1,.L55,.L261-.L55,.L262-.L55
	.half	1
	.byte	95
	.word	.L263-.L55,.L264-.L55
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_loc'
.L175:
	.word	0,0
.L177:
	.word	0,0
.L60:
	.word	-1,.L61,0,.L171-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L179:
	.word	-1,.L61,.L285-.L61,.L171-.L61
	.half	5
	.byte	144,32,157,32,0
	.word	.L286-.L61,.L171-.L61
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_loc'
.L236:
	.word	0,0
.L226:
	.word	0,0
.L232:
	.word	0,0
.L237:
	.word	0,0
.L227:
	.word	0,0
.L233:
	.word	0,0
.L64:
	.word	-1,.L65,0,.L222-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	-1,.L65,.L297-.L65,.L298-.L65
	.half	5
	.byte	144,32,157,32,0
	.word	.L296-.L65,.L299-.L65
	.half	1
	.byte	111
	.word	0,0
.L240:
	.word	-1,.L65,.L298-.L65,.L222-.L65
	.half	5
	.byte	144,32,157,32,0
	.word	.L299-.L65,.L222-.L65
	.half	1
	.byte	111
	.word	0,0
.L228:
	.word	-1,.L65,.L289-.L65,.L45-.L65
	.half	5
	.byte	144,32,157,32,0
	.word	.L290-.L65,.L45-.L65
	.half	1
	.byte	111
	.word	0,0
.L230:
	.word	-1,.L65,.L291-.L65,.L47-.L65
	.half	1
	.byte	95
	.word	.L292-.L65,.L47-.L65
	.half	1
	.byte	111
	.word	0,0
.L234:
	.word	-1,.L65,.L293-.L65,.L294-.L65
	.half	1
	.byte	95
	.word	.L295-.L65,.L296-.L65
	.half	1
	.byte	111
	.word	0,0
.L224:
	.word	-1,.L65,0,.L222-.L65
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_loc'
.L143:
	.word	0,0
.L127:
	.word	0,0
.L135:
	.word	0,0
.L118:
	.word	0,0
.L145:
	.word	0,0
.L129:
	.word	0,0
.L137:
	.word	0,0
.L120:
	.word	0,0
.L52:
	.word	-1,.L53,0,.L105-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L114:
	.word	-1,.L53,.L241-.L53,.L2-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	.L3-.L53,.L242-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L109:
	.word	-1,.L53,0,.L2-.L53
	.half	1
	.byte	85
	.word	.L3-.L53,.L105-.L53
	.half	1
	.byte	85
	.word	0,0
.L111:
	.word	-1,.L53,0,.L2-.L53
	.half	1
	.byte	100
	.word	.L3-.L53,.L105-.L53
	.half	1
	.byte	100
	.word	0,0
.L107:
	.word	-1,.L53,0,.L2-.L53
	.half	1
	.byte	84
	.word	.L3-.L53,.L105-.L53
	.half	1
	.byte	84
	.word	0,0
.L149:
	.word	-1,.L53,.L253-.L53,.L10-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	.L254-.L53,.L10-.L53
	.half	1
	.byte	111
	.word	0,0
.L151:
	.word	-1,.L53,.L255-.L53,.L12-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	.L256-.L53,.L12-.L53
	.half	1
	.byte	111
	.word	0,0
.L147:
	.word	-1,.L53,.L252-.L53,.L253-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	.L251-.L53,.L254-.L53
	.half	1
	.byte	111
	.word	.L10-.L53,.L255-.L53
	.half	5
	.byte	144,32,157,32,0
	.word	.L10-.L53,.L256-.L53
	.half	1
	.byte	111
	.word	0,0
.L131:
	.word	-1,.L53,.L242-.L53,.L246-.L53
	.half	1
	.byte	95
	.word	.L247-.L53,.L248-.L53
	.half	1
	.byte	111
	.word	0,0
.L139:
	.word	-1,.L53,.L249-.L53,.L250-.L53
	.half	1
	.byte	95
	.word	.L248-.L53,.L251-.L53
	.half	1
	.byte	111
	.word	0,0
.L123:
	.word	-1,.L53,.L243-.L53,.L244-.L53
	.half	1
	.byte	95
	.word	.L245-.L53,.L4-.L53
	.half	1
	.byte	111
	.word	0,0
.L113:
	.word	-1,.L53,0,.L2-.L53
	.half	1
	.byte	86
	.word	.L3-.L53,.L105-.L53
	.half	1
	.byte	86
	.word	0,0
.L115:
	.word	-1,.L53,0,.L2-.L53
	.half	1
	.byte	100
	.word	.L3-.L53,.L105-.L53
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L411:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fls_WriteCmdCycles')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L53,.L105-.L53
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fls_EraseCmdCycles')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L55,.L152-.L55
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fls_CallEraseCommand')
	.sect	'.debug_frame'
	.word	12
	.word	.L411,.L57,.L185-.L57
	.sdecl	'.debug_frame',debug,cluster('Fls_CallWriteCommand')
	.sect	'.debug_frame'
	.word	12
	.word	.L411,.L59,.L197-.L59
	.sdecl	'.debug_frame',debug,cluster('Fls_ResetReadCmdCycle')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L61,.L171-.L61
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fls_ClearStatusCmdCycle')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L63,.L180-.L63
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fls_ResumeEraseCmdCycle')
	.sect	'.debug_frame'
	.word	24
	.word	.L411,.L65,.L222-.L65
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   526    }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   527    return (RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   528  }
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   529  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   530  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   531  **                      End of File                                           **
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   532  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   533  
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   534  #define FLS_17_PMU_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   535  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives is
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   536   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   537  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Fls\src\Fls_17_Pmu_ac.c	   538  

	; Module end
