	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc18512a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\Can_17_MCanP.src Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c"
	.compiler_name		"ctc"
	;source	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c'

	
$TC16X
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_Init',code,cluster('Can_17_MCanP_Init')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_Init'
	.align	2
	
	.global	Can_17_MCanP_Init

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     1  /******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     2  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     3  ** Copyright (C) Infineon Technologies (2018)                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     4  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     5  ** All rights reserved.                                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     6  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     7  ** This document contains proprietary information belonging to Infineon      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	     9  ** of its contents is not permitted without prior written authorization.     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    10  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    11  *******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    12  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    13  **  $FILENAME   : Can_17_MCanP.c $                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    14  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    15  **  $CC VERSION : \main\dev_tc23x_as4.0.3\122 $                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    16  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    17  **  $DATE       : 2018-03-22 $                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    18  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    19  **  AUTHOR    : DL-AUTOSAR-Engineering                                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    20  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    21  **  VENDOR    : Infineon Technologies                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    22  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    23  **  DESCRIPTION  : This file contains                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    24  **                - CAN driver API implementation                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    25  **                - implementation of the interrupt service routines         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    26  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    27  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    28  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    29  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    30  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    31  /**  TRACEABILITY: [cover parentID=DS_NAS_CAN_PR912,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    32  DS_NAS_CAN_PR228_1,DS_AS403_CAN365,DS_AS_CAN079
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    33  DS_NAS_CAN_PR843,DS_AS_CAN027_CAN028_CAN082_CAN083_CAN424,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    34  SAS_NAS_ALL_PR749,SAS_NAS_ALL_PR102,SAS_NAS_ALL_PR470,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    35  SAS_NAS_ALL_PR128,SAS_NAS_ALL_PR70,SAS_NAS_ALL_PR1652,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    36  SAS_NAS_ALL_PR630_PR631,DS_NAS_CAN_PR1650_PR1654,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    37  DS_NAS_CAN_PR131,DS_NAS_CAN_PR115,DS_NAS_CAN_PR1651_PR235_PR236_PR628]
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    38  [/cover]                                                                 **/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    39  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    40  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    41  **                      Includes                                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    42  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    43  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    44  /* Register definition file for Aurix target */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    45  #include "IfxCan_reg.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    46  #include "IfxSrc_reg.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    47  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    48  /* Include services for suspend/resume interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    49  #include "SchM_17_McalCfg.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    50  #include SCHM_CAN_17_MCANP_HEADER
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    51  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    52  /* CAN module header file, this includes CAN Module configuration header file */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    53  #include "Can_17_MCanP.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    54  #include "Can_17_MCanP_Platform.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    55  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    56  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    57  /* Include the declarations of CAN callback functions and types */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    58  #include "CanIf_Cbk.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    59  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    60  /* Include Diagnostic Event Manager header file */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    61  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    62  #include "Dem.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    63  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    64  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    65  /* Include the declarations of EcuM callback functions and types */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    66  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    67  #include "EcuM_Cbk.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    68  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    69  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    70  /* Inclusion of CAN Test Stubs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    71  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    72  #include "Test_CanDebug.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    73  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    74  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    75  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    76  ** TRACEABILITY: [cover parentID=DS_AS403_CAN111,DS_NAS_CAN_PR730]            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    77  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    78  **               Imported Compiler Switch Check - Version check               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    79  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    80  **               [/cover]                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    81  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    82  /* Version check */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    83  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    84  /* Check if the correct version of Can_17_MCanP.h is included */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    85  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    86  #ifndef CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    87  #error "CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    88  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    89  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    90  #ifndef CAN_17_MCANP_AR_RELEASE_MINOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    91  #error "CAN_17_MCANP_AR_RELEASE_MINOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    92  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    93  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    94  #ifndef CAN_17_MCANP_AR_RELEASE_REVISION_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    95  #error "CAN_17_MCANP_AR_RELEASE_REVISION_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    96  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    97  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    98  #if ( CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION != 4U )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	    99  #error "CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   100  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   101  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   102  /*#if ( CAN_17_MCANP_AR_RELEASE_MINOR_VERSION != 0U )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   103  #error "CAN_17_MCANP_AR_RELEASE_MINOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   104  #endif*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   105  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   106  /* Check for definition of SW version Information */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   107  #ifndef CAN_17_MCANP_SW_MAJOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   108  #error "CAN_17_MCANP_SW_MAJOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   109  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   110  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   111  #ifndef CAN_17_MCANP_SW_MINOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   112  #error "CAN_17_MCANP_SW_MINOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   113  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   114  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   115  #ifndef CAN_17_MCANP_SW_PATCH_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   116  #error "CAN_17_MCANP_SW_PATCH_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   117  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   118  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   119  /* Check for Correct inclusion of headers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   120  #if ( CAN_17_MCANP_SW_MAJOR_VERSION != 3U )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   121  #error "CAN_17_MCANP_SW_MAJOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   122  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   123  #if ( CAN_17_MCANP_SW_MINOR_VERSION != 1U )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   124  #error "CAN_17_MCANP_SW_MINOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   125  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   126  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   127  /* Inter Module Check */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   128  /* Check for the correct version usage in the used modules */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   129  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   130  /* Det AUTOSAR Version Info Check */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   131  #if ( CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   132  #ifndef DET_AR_RELEASE_MAJOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   133  #error "DET_AR_RELEASE_MAJOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   134  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   135  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   136  #ifndef DET_AR_RELEASE_MINOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   137  #error "DET_AR_RELEASE_MINOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   138  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   139  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   140  #if (IFX_DET_VERSION_CHECK == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   141  #if ( DET_AR_RELEASE_MAJOR_VERSION != CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   142  #error "DET_AR_RELEASE_MAJOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   143  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   144  #if ( DET_AR_RELEASE_MINOR_VERSION != CAN_17_MCANP_AR_RELEASE_MINOR_VERSION )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   145  #error "DET_AR_RELEASE_MINOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   146  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   147  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   148  #endif /* #if (IFX_DET_VERSION_CHECK == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   149  #endif /* #if ( CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   150  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   151  /* Dem AUTOSAR Version Info Check */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   152  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   153  #ifndef DEM_AR_RELEASE_MAJOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   154  #error "DEM_AR_RELEASE_MAJOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   155  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   156  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   157  #ifndef DEM_AR_RELEASE_MINOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   158  #error "DEM_AR_RELEASE_MINOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   159  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   160  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   161  #if (IFX_DEM_VERSION_CHECK == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   162  #if ( DEM_AR_RELEASE_MAJOR_VERSION != CAN_17_MCANP_AR_RELEASE_MAJOR_VERSION )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   163  #error "DEM_AR_RELEASE_MAJOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   164  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   165  #if ( DEM_AR_RELEASE_MINOR_VERSION != CAN_17_MCANP_AR_RELEASE_MINOR_VERSION )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   166  #error "DEM_AR_RELEASE_MINOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   167  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   168  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   169  #endif /* #if (IFX_DEM_VERSION_CHECK == STD_ON)  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   170  #endif /* #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   171  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   172  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   173  **                      Private Macro Definitions                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   174  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   175  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   176  /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   177  For internal debugging only;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   178  To simulate timeout error;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   179  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   180  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   181  #ifdef IFX_CAN_DEBUG
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   182  extern volatile uint32 TestCan_DebugMask;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   183  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   184  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   185  #ifdef IFX_CAN_DEBUG01
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   186  extern volatile uint32 TestCan_DebugMask01;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   187  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   188  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   189  #ifdef IFX_CAN_DEBUG03
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   190  extern volatile uint32 TestCan_DebugMask03;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   191  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   192  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   193  #ifdef IFX_CAN_DEBUG04
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   194  extern volatile uint32 TestCan_DebugMask04;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   195  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   196  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   197  #ifdef IFX_CAN_DEBUG05
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   198  extern volatile uint32 TestCan_DebugMask05;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   199  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   200  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   201  #ifdef IFX_CAN_DEBUG06
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   202  extern volatile uint8 TestCan_DebugMask06;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   203  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   204  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   205  /* Panel commands for static allocation */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   206  #define CAN_PANCMD_STATIC_ALLOCATE      ((uint8)2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   207  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   208  /* Bit field positions of message object control/status register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   209  #define CAN_MOCTR_RXPND_CLR             (0x00000001U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   210  #define CAN_MOCTR_TXPND_CLR             (0x00000002U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   211  #define CAN_MOCTR_RXUPD_CLR             (0x00000004U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   212  #define CAN_MOCTR_RXUPD_CLR1            (0xF000F004U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   213  #define CAN_MOCTR_NEWDAT_CLR            (0x00000008U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   214  #define CAN_MOSTAT_MSGLST_CLR           (0x00000010U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   215  #define CAN_MOCTR_MSGVAL_CLR            (0x00000020U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   216  #define CAN_MOCTR_RXEN_CLR              (0x00000080U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   217  #define CAN_MOCTR_TXRQ_CLR              (0x00000100U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   218  #define CAN_MOCTR_TXEN1_CLR             (0xF000F400U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   219  #define CAN_MOCTR_DIR_CLR               (0x00000800U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   220  #define CAN_MOCTR_MSGVAL_MASK           (0x0FFF0FFFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   221  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   222  #define CAN_MOSTAT_TXPND_MASK           (0x00000002U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   223  #define CAN_MOSTAT_RXPND_MASK           (0x00000001U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   224  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   225  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   226  /* To clear MOSTAT bits - TXEN0, TXRQ and NEWDAT */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   227  #define CAN_MOCTR_WRITE_REQ_CLR         (0x00000308U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   228  #define CAN_MOCTR_WRITE_REQ_CLR1        (0xF000F308U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   229  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   230  /* To Enable/Disable CAN Node via NCRx.INIT */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   231  #define CAN_NODE_ENABLE                 (0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   232  #define CAN_NODE_DISABLE                (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   233  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   234  /* To Enable/Disable Transmission via NCRx.TXDIS */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   235  #define CAN_NODE_TX_ENABLE              (0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   236  #define CAN_NODE_TX_DISABLE             (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   237  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   238  /* Invalid CAN controller Id. Used for mapping non-activated CAN Controllers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   239  #define CAN_INVALID_HW_CONTROLLER_ID    ((uint8)255)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   240  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   241  /* Bit field position of ALERT bit in Node Status Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   242  #define CAN_NSR_ALERT                   (0x00000020U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   243  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   244  /* Node status register: Mask value for writable bits */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   245  #define CAN_NSR_WRITABLE_VALUE_MASK     (0x3FFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   246  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   247  /* Bit field positions of Node Control Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   248  #define CAN_NCR_ALIE                    (0x00000008U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   249  #define CAN_NCR_CCE                     (0x00000040U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   250  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   251  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   252  #define CAN_FCR_FDF_MASK                (0x00000040U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   253  #define CAN_MSGID_MASK                  (0x40000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   254  #define CAN_MSGID_MASK1                 (0x00004000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   255  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   256  /* CLKSEL values for selecting clock source via MCR register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   257  #define CAN_MCR_CLKSEL_NO_CLOCK         (0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   258  #define CAN_MCR_CLKSEL_FASYN_CAN        (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   259  #define CAN_MCR_CLKSEL_FERAY_PLL        (4U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   260  #define CAN_MCR_CLKSEL_EXTOSCLTR        (2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   261  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   262  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   263  /* Bit field positions of MO FIFO function control Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   264  #define CAN_FIFO_MOFCR                  (0x00040001U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   265  #define CAN_FIFO_MOFCR_MMC_BIT          (0x01U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   266  #define CAN_FD64BYTES_MOFCR_MMC_BIT     (0x05U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   267  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   268  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   269  /* Bit field positions of MO FIFO pointer Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   270  #define CAN_MOFGPR_SEL_SHIFT            (24U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   271  #define CAN_MOFGPR_TOP_SHIFT            (8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   272  #define CAN_MOFGPR_CUR_SHIFT            (16U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   273  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   274  /* Macro for MOCTR Setting of Rx FIFO slave objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   275  #define CAN_MOCTR_RX_FIFO_SLAVE         (0x00200080U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   276  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   277  /* Macro for MASK */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   278  #define CAN_8BIT_MASK                   (0x000000FFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   279  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   280  /* Bit field positions of CAN Service Request Control Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   281  #define CAN_SRC_CLRR                    (0x02000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   282  #define CAN_SRE_BIT_POS                 (10U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   283  #define CAN_SRC_MASK_NOCLR              (0x80000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   284  #define CAN_SRC_MASK_NOSET              (0x00000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   285  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   286  /* Values */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   287  #define CAN_ZERO                        (0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   288  #define CAN_ONE                         (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   289  #define CAN_TWO                         (2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   290  #define CAN_THREE                       (3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   291  #define CAN_FOUR                        (4U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   292  #define CAN_SIX                         (6U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   293  #define CAN_SEVEN                       (7U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   294  #define CAN_EIGHT                       (8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   295  #define CAN_NINE                        (9U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   296  #define CAN_ELEVEN                      (11U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   297  #define CAN_FIFTEEN                     (15U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   298  #define CAN_TWENTY_FOUR                 (24U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   299  #define CAN_THIRTY_TWO                  (32U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   300  #define CAN_THIRTY_SIX                  (36U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   301  #define CAN_SIXTY_FOUR                  (64U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   302  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   303  #define CAN_8BITDIV3FACTOR              (0xABU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   304  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   305  #define EVENTTYPE_ZERO                  (0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   306  #define EVENTTYPE_ONE                   (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   307  #define EVENTTYPE_TWO                   (2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   308  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   309  /* Values used to calculate Kernel Count and Controller's ID w.r.t Kernel */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   310  #define CAN_KERCNT                      (CAN_NUM_CONTROLLERS_IN_KERNEL1)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   311  #define CAN_NODNKER                     (3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   312  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   313  /* Positions */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   314  #define CAN_POS_5                       (5U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   315  #define CAN_POS_18                      (18U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   316  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   317  /* Bus-off error limit value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   318  #define CAN_BUSOFF_LIMIT                (0xFFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   319  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   320  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   321  #define CAN_KERNEL_RESET_TIMEOUT        (0x40U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   322  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   323  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   324  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   325  /* Shift values for bit fields of Message Object Arbitration Register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   326  #define CAN_PRI_CLASS_ID_BASED          (2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   327  #define CAN_MOAR_ID_STD_SHIFT           (18U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   328  #define CAN_PRIORITY_ID_BASED           ((uint32)0x80000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   329  #define CAN_USE_EXTENDED_ID             ((uint32)0x20000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   330  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   331  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   332  #define CAN_FD_INDICATOR_BIT        ((uint32)0x40000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   333  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   334  #define CAN_FD_INDICATOR_BIT            ((uint16)0x4000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   335  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)        */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   336  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   337  /* Maximum size of the CAN Data */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   338  #define CAN_MAX_DATA_LENGTH          (8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   339  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   340  /* Maximum size of the CAN FD  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   341  #define CAN_MAX_FD_LENGTH            (64U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   342  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   343  /* Shift values for storing interrupt enabled status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   344  #define CAN_RX_INT_SHIFT                (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   345  #define CAN_TX_INT_SHIFT                (2U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   346  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   347  /* Mask for maximum hardware objects per message pending register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   348  #define CAN_MAX_HWOBJ_PER_MSPND_REG_1   (0x1FU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   349  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   350  /* Number of message pending registers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   351  #define CAN_NUM_MSPND_REGS              (8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   352  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   353  /* MSID register value if there is no message pending bit set. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   354  #define CAN_MSID_NO_MSG_PND_VALUE       (0x00000020U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   355  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   356  /* Macro for shift count of MPN[7:5] bits (indicate MSPND register used) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   357  #define CAN_MOIPR_MPN_MSPND_SHIFT       (5U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   358  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   359  /* Macro to set MSB for Extended messages */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   360  #define CAN_EXTENDED_MSB_SET            (0x80000000U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   361  #define CAN_PDUINFO_ID_MASK             (0x1FFFFFFFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   362  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   363  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   364  #define CAN_RXSize                        (64U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   365  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   366  #define CAN_RXSize                        (8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   367  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   368  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   369  #define CAN_MOSize_FD                     (3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   370  #define CAN_MOSize_STD                    (1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   371  /*Max counter to exit from the loop(inside Can_lRxIsrExtractData() function),
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   372    to avoid indefinite looping*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   373  #define CAN_EXTRACTDATA_LOOP_CNT          (6U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   374  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   375  #if (CAN_BR_ERAY_PLL_CLKSEL == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   376  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   377  /* Select fERAY as the input source */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   378  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_FERAY_PLL)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   379  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   380  #elif (CAN_BR_EXT_OSLTR_CLKSEL == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   381      /* Select fOSL as the input source */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   382  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_EXTOSCLTR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   383  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   384  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   385      /* Select fASYN as the input source */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   386  #define CAN_MCR_CLKSEL         (CAN_MCR_CLKSEL_FASYN_CAN)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   387  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   388  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   389  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   390  #define CAN_NUM_FOUR                     (0x4U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   391  #define CAN_NUM_EIGHT                    (0x8U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   392  /* Mask for valid bits */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   393  #define CAN_MO_PIN_SHIFT_MASK             (0x000000FFU)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   394  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   395  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   396    calls definition, it is declared as a function like macro*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   397  #define CAN_MO_BIT_SHIFT_COUNT(index)       (CAN_NUM_EIGHT * \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   398                                                ((index) % (CAN_NUM_FOUR)))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   399  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   400  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   401    calls definition, it is declared as a function like macro*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   402  #define CAN_MO_SETMASK(index)      ((uint32)CAN_MO_PIN_SHIFT_MASK << \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   403                                                 CAN_MO_BIT_SHIFT_COUNT(index))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   404  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   405  /*IFX_MISRA_RULE_19_07_STATUS=To support user modification of OS protected
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   406    calls definition, it is declared as a function like macro*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   407  #define CAN_MO_CLEARMASK(index)         (~CAN_MO_SETMASK(index))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   408  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   409  /*----------------------------------------------------------------------------*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   410  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   411  /*----------------------------------------------------------------------------*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   412  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   413  /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   414  Values for CAN Driver states.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   415  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   416  /* CAN Driver is NOT initialized. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   417  #define  CAN_DS_UNINIT                  ((Can_17_MCanP_DriverStateType)0)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   418  /* CAN Driver is initialized. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   419  #define  CAN_DS_READY                   ((Can_17_MCanP_DriverStateType)1)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   420  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   421  /*----------------------Register Address Translation--------------------------*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   422  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   423  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   424  /* CAN Service Request Control Registers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   425  #define CAN_SRC                  ((volatile Ifx_SRC_SRCR*)(void *)&SRC_CANINT0)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   426  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   427  /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   428  Service Request Node Allocation/Mapping:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   429  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   430  N : Number of CAN Controller in the device
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   431  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   432  Node X --> Transmit SRN = X
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   433  --> Receive SRN = N + X
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   434  --> BusOff SRN = (2 * N) + X*Y ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   435  Y = 0 for all EP devices, Y = 1 for all HE devices
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   436  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   437  For Example,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   438  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   439  Mapping for TC27x --> N = 4, i.e., 4 CAN Controllers(Nodes):
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   440  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   441  |------------------|--------------|--------------|--------------|--------------|
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   442  |       TC27xCA    | Controller 0 | Controller 1 | Controller 2 | Controller 3 |
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   443  |------------------|--------------|--------------|--------------|--------------|
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   444  |Transmit interrupt|     SRN0     |      SRN1    |     SRN2     |     SRN3     |
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   445  |------------------|--------------|--------------|--------------|--------------|
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   446  | Receive interrupt|     SRN4     |      SRN5    |     SRN6     |     SRN7     |
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   447  |------------------|--------------|--------------|--------------|--------------|
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   448  |BusOff interrupt  |     SRN8     |      SRN9    |     SRN10    |     SRN11    |
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   449  *------------------*--------------*--------------*--------------*--------------*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   450  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   451  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   452  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   453  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   454  **                      Private Type Definitions                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   455  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   456  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   457  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   458  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   459  **                      Private Function Declarations                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   460  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   461  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   462  #define CAN_17_MCANP_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   463  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   464  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   465  /* Function to initialize CAN Module global variables */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   466  IFX_LOCAL_INLINE void Can_lInitGlobalVar(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   467  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   468  /* Function to initialize CAN Module clock/timing registers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   469  IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   470  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   471  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   472  /* Initializes the Kernel registers to default value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   473  static void Can_lResetSFR(uint8 KerIdx,uint8 ApiAccesId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   474  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   475  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   476  /* Function to check for CAN module hardware failure */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   477  IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   478  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   479  /* Function to initialize CAN controllers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   480  IFX_LOCAL_INLINE void Can_lInitializeController(uint8 ControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   481                                              uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   482  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   483  /* Function to initialize CAN controller status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   484  IFX_LOCAL_INLINE void Can_lInitControllerStatus(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   485  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   486  /* Function to initialize message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   487  IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   488  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   489  /* Function to initialize transmit message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   490  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   491  IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   492  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   493  IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   494                                        (uint8 HwControllerId,uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   495  #endif /*#if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   496  #endif /*#if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   497  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   498  /* Function to initialize receive message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   499  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   500  IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   501  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   502  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   503  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   504  /* checks if the baudrate is configured or not */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   505  static uint8 Can_lSearchBaudrate(uint8 Controller, const uint16 Baudrate);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   506  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   507  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   508  /* Function to disable CAN module interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   509  IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   510  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   511  /* Function to enable CAN module interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   512  IFX_LOCAL_INLINE void Can_lEnableInterrupts (uint8 Controller);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   513  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   514  /* Function to check DET for Can_17_MCanP_Write API  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   515  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   516  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   517  IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck(Can_HwHandleType Hth,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   518                                                 const Can_PduType *PduInfo);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   519  #endif /* (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   520  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   521  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   522  /* Function to clear and enable interrupt service request */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   523  IFX_LOCAL_INLINE void
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   524    Can_lClearAndEnableInterrupt(uint8 ServiceRequestNumber);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   525  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   526  /* Function to program message object for transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   527  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   528  IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj(uint16 HthIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   529                                               uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   530                                               const Can_PduType *PduInfo);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   531  IFX_LOCAL_INLINE uint8 Can_lindexcheck(uint8 index,uint8 locindex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   532  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   533  IFX_LOCAL_INLINE void Can_lFDFset(uint8 KerIdx,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   534                                             uint8 HwCtrlIDKer,uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   535  #endif/*#if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   536  #endif/*#if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   537  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   538  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   539  /* Function for handling message reception */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   540  static void Can_lReceiveHandler(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   541  /* Function to clear a receive message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   542  static void Can_lClearReceivedMsg(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   543  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   544  IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping(uint8 MoDataIndex,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   545                                                            uint8 locMoDataIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   546  IFX_LOCAL_INLINE uint16 Can_lCalculateHrhId(uint8 KerIdx,uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   547  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   548  /* Function to handle wakeup event */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   549  static void Can_lWakeupHandler(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   550  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   551  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   552  /* Function to extract data from message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   553  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   554  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   555                                                    uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   556                                                    uint8 MsgIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   557                                                    uint8 PndBitPosition
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   558                                                    );
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   559  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   560  IFX_LOCAL_INLINE void Can_lRxIsrExtractData(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   561                                          uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   562                                          uint8 MsgIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   563                                          uint8 PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   564  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   565  /* Read messages received from message buffer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   566  IFX_LOCAL_INLINE void Can_lReadMsgObject(uint8 HwControllerId,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   567                                           uint16 HwObjectId,uint8 MessageLength);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   568  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   569  #endif /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   570  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   571  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   572  /* Function for handling message reception */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   573  static void Can_lReceiveHandlerRuntime(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   574  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   575  /* Function to extract data from message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   576  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   577  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   578                                                 (uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   579                                                    uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   580  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   581  IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   582                                          uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   583  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   584  /* Read messages received from message buffer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   585  IFX_LOCAL_INLINE void Can_lReadMsgObjectRuntime(uint8 HwControllerId,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   586                                           uint16 HwObjectId,uint8 MessageLength);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   587  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   588  static void Can_lClearReceivedMsgRuntime(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   589  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   590  /* Function to handle wakeup event */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   591  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   592  static void Can_lWakeupHandlerRuntime(uint8 HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   593  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   594  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   595  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   596  /* Function to allocate hardware objects to CAN controllers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   597  static Std_ReturnType Can_lAllocateHwObject(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   598                                              uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   599  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   600  /* Function to handle CAN Controller state transitions if wakeup is supported */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   601  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   602  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   603                                            uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   604                                            Can_StateTransitionType Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   605  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   606  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   607  /* Function to handle CAN Controller state transitions,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   608  if wakeup is not supported */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   609  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   610                                             uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   611                                             Can_StateTransitionType Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   612  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   613  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   614  /* Function for checking wrong parameter (Controller) to an API.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   615  Used in APIs affecting single CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   616  static Std_ReturnType Can_lReportDetParamController(uint8 ControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   617                                                      uint8 ServiceId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   618  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   619  /* Function to check for CAN driver initialization status for DET checking */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   620  static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   621  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   622  /* Function to check for invalid CAN controller state transitions */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   623  IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   624                                              Can_StateTransitionType Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   625  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   626  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   627  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   628  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   629  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   630  /* Function to Initialize Rx FIFO Message Objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   631  IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   632  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   633  /* Function to Initialize Rx FIFO Base Message Object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   634  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   635  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   636    const Can_RxFifoConfigType* RxFifoCfgPtr,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   637    uint16 FifoIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   638    uint8 FrameType);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   639  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   640  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   641    const Can_RxFifoConfigType* RxFifoCfgPtr,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   642    uint16 FifoIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   643  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)        */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   644  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   645  /* Function to handle FIFO reception event */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   646  IFX_LOCAL_INLINE void Can_lRxFifoHandler(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   647                                       uint16 HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   648  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   649  /* Function to extract data from receive FIFO */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   650  IFX_LOCAL_INLINE void Can_lRxFifoExtractData(uint16 FifoTopBot,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   651                                           uint8 CurrentMo,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   652                                           uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   653                                           uint16 Hfh,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   654                                           uint8 Threshold);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   655  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   656  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   657  #define CAN_17_MCANP_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   658  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   659   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   660  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   661  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   662  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   663  **                      Global Constant Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   664  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   665  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   666  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   667  **                      Global Variable Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   668  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   669  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   670  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   671  **                      Private Constant Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   672  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   673  /* The addresses of registers are derived from SFR file included in mcureg.h */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   674  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   675  #define CAN_17_MCANP_START_SEC_CONST_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   676  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   677   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   678  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   679  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   680  #ifdef CAN_MOD_R_AVAILABLE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   681  /*Number of CAN Controllers per Kernel */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   682  static const uint8 CAN_NUM_CONTROLLERS_IN_KERNEL[] =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   683  { CAN_NUM_CONTROLLERS_IN_KERNEL1,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   684  CAN_NUM_CONTROLLERS_IN_DEVICE - CAN_NUM_CONTROLLERS_IN_KERNEL1};
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   685  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   686  /*Number of CAN Controllers per Kernel */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   687  static const uint8 CAN_NUM_CONTROLLERS_IN_KERNEL[] =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   688  { CAN_NUM_CONTROLLERS_IN_KERNEL1 };
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   689  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   690  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   691  #define CAN_17_MCANP_STOP_SEC_CONST_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   692  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   693   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   694  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   695  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   696  #define CAN_17_MCANP_START_SEC_CONST_32BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   697  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   698   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   699  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   700  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   701  #if(CAN_PB_FIXEDADDR == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   702  /* The config pointer is initialised to first instance of configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   703  const Can_17_MCanP_ConfigType* const Can_kConfigPtr =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   704    &Can_17_MCanP_ConfigRoot[0];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   705  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   706  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   707  #define CAN_17_MCANP_STOP_SEC_CONST_32BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   708  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   709   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   710  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   711  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   712  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   713  /******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   714  **                      Private Variable Definitions                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   715  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   716  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   717  #define CAN_17_MCANP_START_SEC_VAR_16BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   718  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   719   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   720  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   721  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   722  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   723  /* SW Handle passed by CAN Interface to Can_17_MCanP_Write API. This will
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   724  identify the request in the confirmation callback function,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   725  CanIf_TxConfirmation(). */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   726  static PduIdType
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   727    Can_SwObjectHandle[CAN_NUM_KERNELS_IN_DEVICE][CAN_TX_HARDWARE_OBJECTS_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   728  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   729  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   730  #define CAN_17_MCANP_STOP_SEC_VAR_16BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   731  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   732   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   733  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   734  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   735  #define CAN_17_MCANP_START_SEC_VAR_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   736  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   737   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   738  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   739  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   740  /* This variable keeps track of number of calls to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   741  Can_17_MCanP_DisableControllerInterrupts API. It is used to implement
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   742  incremental disable functionality. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   743  #if (CAN_DEBUG_SUPPORT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   744  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_InterruptDisableCount variable is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   745  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   746  application for debugging*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   747  uint8 Can_17_MCanP_InterruptDisableCount[CAN_NUM_CONTROLLER_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   748  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   749  static uint8 Can_17_MCanP_InterruptDisableCount[CAN_NUM_CONTROLLER_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   750  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   751  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   752  /* This variable stores status of whether interrupts are enabled */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   753  static uint8 Can_InterruptsEnabledStatus[CAN_NUM_CONTROLLER_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   754  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   755  /* This variable stores CanControllerId corresponding to the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   756  CAN Controller Id in hardware */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   757  static uint8 Can_NodeIdMap[CAN_NUM_CONTROLLERS_IN_DEVICE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   758  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   759  /* This variable stores the wakeup event status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   760  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   761  #if (CAN_DEBUG_SUPPORT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   762  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_ControllerWakeupStatus variable is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   763  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   764  application for debugging*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   765  uint8 Can_17_MCanP_ControllerWakeupStatus[CAN_NUM_CONTROLLER_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   766  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   767  static uint8 Can_17_MCanP_ControllerWakeupStatus[CAN_NUM_CONTROLLER_MAX];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   768  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   769  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   770  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   771  /* This flag stores the CAN driver state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   772  #if (CAN_DEBUG_SUPPORT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   773  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_DriverState variable is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   774  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   775  application for debugging*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   776  Can_17_MCanP_DriverStateType Can_17_MCanP_DriverState;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   777  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   778  static Can_17_MCanP_DriverStateType Can_17_MCanP_DriverState;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   779  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   780  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   781  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   782  /* Buffer for copying the received data and pass to CanIf */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   783  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   784  static uint8 Can_RxMessageData
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   785    [CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_SIXTY_FOUR];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   786  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   787  static uint8 Can_RxMessageData
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   788    [CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_EIGHT];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   789  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   790  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   791  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   792  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   793  /* Buffer for copying the received FIFO data and pass to CanIf */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   794  static uint8 Can_RxFifoMessageData[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_EIGHT];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   795  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   796  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   797  #define CAN_17_MCANP_STOP_SEC_VAR_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   798  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   799   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   800  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   801  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   802  #define CAN_17_MCANP_START_SEC_VAR_32BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   803  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   804   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   805  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   806  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   807  #if(CAN_PB_FIXEDADDR == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   808  /* Pointer to store config pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   809  const Can_17_MCanP_ConfigType* Can_kConfigPtr = NULL_PTR;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   810  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   811  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   812  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   813  /* MSIMASK register values for Rx Message Objects; They indicate Rx hardware
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   814  object numbers assigned to a CAN controller. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   815  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   816  /*IFX_MISRA_RULE_08_07_STATUS=Can_RxMsiMask is accessed in Multiple functions*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   817  static uint32 Can_RxMsiMask[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_NUM_MSPND_REGS];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   818  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   819  /* MSIMASK register values for Tx Message Objects; They indicate Tx hardware
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   820  object numbers assigned to a CAN controller. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   821  /*IFX_MISRA_RULE_08_07_STATUS=Can_TxMsiMask is accessed in Multiple functions*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   822  static uint32 Can_TxMsiMask[CAN_NUM_CONTROLLERS_IN_DEVICE][CAN_NUM_MSPND_REGS];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   823  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   824  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   825  #define CAN_17_MCANP_STOP_SEC_VAR_32BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   826  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   827   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   828  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   829  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   830  #define CAN_17_MCANP_START_SEC_VAR_INIT_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   831  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   832   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   833  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   834  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   835  /* This variable stores the current state of a CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   836  #if (CAN_DEBUG_SUPPORT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   837  /*IFX_MISRA_RULE_08_10_STATUS=Can_17_MCanP_ControllerMode[]array variable is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   838  declared as extern in Can_17_MCanP_Dbg.h, which will be included by
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   839  application for debugging*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   840  CanIf_ControllerModeType Can_17_MCanP_ControllerMode[CAN_NUM_CONTROLLER_MAX] \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   841                                               = { CAN_CONTROLLER_MODE_INIT };
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   842  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   843  static CanIf_ControllerModeType
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   844    Can_17_MCanP_ControllerMode[CAN_NUM_CONTROLLER_MAX] \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   845                                               = { CAN_CONTROLLER_MODE_INIT };
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   846  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   847  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   848  #define CAN_17_MCANP_STOP_SEC_VAR_INIT_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   849  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   850   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   851  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   852  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   853  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   854  **                      Global Function Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   855  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   856  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   857  /* Memory map of the CAN driver code */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   858  #define CAN_17_MCANP_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   859  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   860   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   861  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   862  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   863  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   864  ** TRACEABILITY: [cover parentID=DS_AS_CAN223,DS_AS_CAN240,DS_AS_CAN174_CAN175,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   865  DS_AS_CAN407_CAN420_CAN053_CAN091_CAN103_CAN238_CAN239_CAN245_CAN246_CAN250_CAN259_CAN196_CAN197_CAN425_CAN426,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   866  DS_AS403_CAN408,DS_NAS_HE2_CAN_PR2892,DS_NAS_EP_CAN_PR2892,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   867  DS_NAS_HE2_CAN_PR2937,DS_NAS_EP_CAN_PR2937,DS_NAS_HE2_CAN_PR3018,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   868  DS_NAS_EP_CAN_PR3018]                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   869  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   870  ** Syntax           : void Can_17_MCanP_Init(const Can_17_MCanP_ConfigType*   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   871  **                                                 Config)                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   872  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   873  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   874  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   875  ** Service ID       : 0x00                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   876  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   877  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   878  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   879  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   880  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   881  ** Parameters (in)  : Config - Pointer to CAN driver configuration            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   882  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   883  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   884  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   885  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   886  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   887  ** Description      : Driver Module Initialization function                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   888  **                    - This function initializes:                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   889  **                    * Static variables, including flags                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   890  **                    * CAN HW Unit global hardware settings                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   891  **                    * Controller specific settings for each CAN Controller  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   892  **  All CAN Controllers will be in state CANIF_CS_STOPPED after initialization**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   893  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   894  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   895  void Can_17_MCanP_Init(const Can_17_MCanP_ConfigType* Config)
; Function Can_17_MCanP_Init
.L160:
Can_17_MCanP_Init:	.type	func
	sub.a	a10,#8
.L808:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   896  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   897  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   898    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   899  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   900    volatile uint8 SizeOfCanIdType;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   901  #endif /*#if (CAN_STANDARD_ID_ONLY != STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   902    uint8 CtrlIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   903  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   904    Status = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   905  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   906  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   907  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   908  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   909  #if(CAN_PB_FIXEDADDR == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   910  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   911    if (NULL_PTR == Config)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   912    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   913     /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   914     Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   915      CAN_SID_INIT, CAN_E_PARAM_POINTER);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   916  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   917     Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   918    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   919  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   920    /* Check if the config pointer is initialized to the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   921    first instance of the configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   922    if (Can_kConfigPtr != Config)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   923    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   924     /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   925     Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   926      CAN_SID_INIT, CAN_E_PARAM_POINTER);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   927  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   928     Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   929    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   930  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   931  #endif /* #if(CAN_PB_FIXEDADDR == STD_OFF) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   932  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   933    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   934    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   935     /* CAN driver is not in state UNINIT */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   936     if (CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   937     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   938      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   939      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   940       CAN_SID_INIT, CAN_E_TRANSITION);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   941      Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   942     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   943     else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   944     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   945      /* CAN Controller is not in state UNINIT */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   946      for(CtrlIndex=CAN_ZERO;CtrlIndex<(Config->CanNumController);CtrlIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   947      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   948       if(CANIF_CS_UNINIT != Can_17_MCanP_ControllerMode[CtrlIndex])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   949       {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   950        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   951        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   952         CAN_SID_INIT, CAN_E_TRANSITION);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   953        Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   954       }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   955      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   956     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   957    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   958  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   959  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   960    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   961    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   962     SizeOfCanIdType = (uint8)sizeof(Can_IdType);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   963  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   964     if(SizeOfCanIdType == CAN_TWO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   965     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   966      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   967       CAN_SID_INIT, CAN_E_CAN_IDTYPE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   968      Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   969     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   970    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   971  #endif /* #if (CAN_STANDARD_ID_ONLY != STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   972  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   973    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   974  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   975    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   976     /* Store config pointer, such that it can be used throughout CAN driver */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   977  #if(CAN_PB_FIXEDADDR == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   978     Can_kConfigPtr = Config;
	movh.a	a12,#@his(Can_kConfigPtr)
	lea	a12,[a12]@los(Can_kConfigPtr)
.L1116:
	st.a	[a12],a4
.L336:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   979  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   980  #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   981     /* To avoid compiler warning */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   982     UNUSED_PARAMETER (Config)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   983  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_OFF) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   984  #endif /*#if(CAN_PB_FIXEDADDR == STD_OFF)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   985  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   986      /* Initialize CAN Module's private variables */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   987      Can_lInitGlobalVar();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   988  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   989     /* Initialize clock/timing registers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   990     if(E_OK == Can_lInitClkSetting())
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   991     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   992  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   993      /* Check for hardware failure */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   994      if(E_OK == Can_lInitDemCheck())
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   995      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   996  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   997       /* Initialize CAN controller status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   998       Can_lInitControllerStatus();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	   999  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1000  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1001       /* Initialize message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1002       if(E_OK == Can_lInitMsgObj())
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1003       {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1004  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1005        /* Change the driver state to initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1006        Can_17_MCanP_DriverState = CAN_DS_READY;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1007       }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1008      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1009     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1010    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1011  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1012  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1013  #if (CAN_DEINIT_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1014  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1015  ** TRACEABILITY: [cover parentID=DS_NAS_CAN_PR3027,DS_NAS_CAN_PR3025]         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1016  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1017  ** Syntax         : void Can_17_MCanP_DeInit(void)                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1018  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1019  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1020  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1021  ** Service ID       : 0x0f                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1022  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1023  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1024  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1025  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1026  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1027  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1028  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1029  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1030  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1031  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1032  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1033  ** Description      : This function De-initializes the CAN Driver.            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1034  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1035  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1036  void Can_17_MCanP_DeInit (void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1037  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1038   uint32 CLCReadback;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1039   uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1040   uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1041   uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1042   uint8 BOSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1043   uint8 RxSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1044   uint8 IntSrcOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1045   volatile uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1046  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1047  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1048   Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1049  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1050  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1051  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1052  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1053   /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1054   Status = Can_lReportDetUninit(CAN_SID_DEINIT);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1055  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1056   if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1057  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1058   {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1059  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1060    /* Reset the CAN SRC registers for all configured CAN controllers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1061    for(ControllerId=CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1062     ControllerId<(Can_kConfigPtr->CanNumController);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1063     ControllerId++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1064    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1065     /* check if the CAN controller is activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1066     if(CAN_INVALID_HW_CONTROLLER_ID !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1067      Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1068     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1069      /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1070      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[ControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1071      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1072      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1073  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1074      /* Calculate the CAN SRC Register Index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1075      IntSrcOffset = (KerIdx << CAN_FOUR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1076      BOSrcNum =  (uint8)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1077       ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1078       + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1079      RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1080       + HwCtrlIDKer + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1081  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1082      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1083      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1084      if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1085       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1086                                                CanEventType[EVENTTYPE_TWO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1087      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1088       /* Clear interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1089       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1090       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1091       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[HwCtrlIDKer + IntSrcOffset].U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1092                                                  CAN_SRC_CLEARMASK,CAN_SRC_CLRR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1093      /* Disable Interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1094       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1095       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1096       CAN_SFR_DEINIT_WRITE32(CAN_SRC[HwCtrlIDKer + IntSrcOffset].U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1097                                                                        CAN_ZERO);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1098      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1099  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1100      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1101      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1102      if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1103       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1104                                                    CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1105      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1106       /* Clear interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1107       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1108       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1109       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[RxSrcNum].U,CAN_SRC_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1110                                                                    CAN_SRC_CLRR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1111       /* Disable Interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1112       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1113       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1114       CAN_SFR_DEINIT_WRITE32(CAN_SRC[RxSrcNum].U,CAN_ZERO);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1115      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1116  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1117      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1118      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1119      if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1120       Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1121                                                  CanEventType[EVENTTYPE_ZERO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1122      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1123       /* Clear interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1124       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1125       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1126       CAN_SFR_DEINIT_MODIFY32(CAN_SRC[BOSrcNum].U,CAN_SRC_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1127                                                                    CAN_SRC_CLRR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1128       /* Disable Interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1129       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1130       efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1131       CAN_SFR_DEINIT_WRITE32(CAN_SRC[BOSrcNum].U,CAN_ZERO);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1132     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1133     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1134    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1135    /* Initialize CAN Module's private variables */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1136    Can_lInitGlobalVar();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1137    /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1138  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1139    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1140    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1141  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1142     /* Reset the Kernel registers to default value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1143     Can_lResetSFR(KerIdx,CAN_DEINIT_ACCESS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1144  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1145     CAN_SFR_DEINIT_RESETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1146  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1147     /* Disable the CAN hardware unit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1148     CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_DISR_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1149                                                                         CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1150  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1151     /* Read back the CLC register to ensure the CLC register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1152     CLCReadback = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1153  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1154     /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1155     CAN_SFR_DEINIT_SETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1156  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1157     UNUSED_PARAMETER(CLCReadback)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1158  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1159    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1160  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1161    /* Change the driver state to Uninitialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1162    Can_17_MCanP_DriverState = CAN_DS_UNINIT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1163   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1164  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1165  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1166  #endif /*#if (CAN_DEINIT_API == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1167  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1168  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1169  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1170  ** TRACEABILITY: [cover parentID=DS_AS403_CAN454,DS_AS403_CAN459_CAN460,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1171  DS_AS403_CAN456_CAN457_CAN458]                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1172  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1173  ** Syntax           : Std_ReturnType Can_17_MCanP_CheckBaudrate               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1174  **                          (                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1175  **                            uint8 Controller,                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1176  **                            const uint16 Baudrate                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1177  **                          )                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1178  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1179  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1180  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1181  ** Service ID       : 0x0e                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1182  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1183  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1184  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1185  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1186  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1187  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1188  **                    Baudrate -  Baudrate to be checked                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1189  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1190  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1191  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1192  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1193  **                    - E_OK: Baudrate is supported by the CAN Controller     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1194  **                    - E_NOT_OK: Baudrate is not supported / invalid CAN     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1195  **                                controller                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1196  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1197  ** Description      : Checks CAN Controller Baudrate                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1198  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1199  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1200  Std_ReturnType Can_17_MCanP_CheckBaudrate(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1201                                            const uint16 Baudrate)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1202  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1203    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1204    uint8 BaudrateCfgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1205  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1206  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1207  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1208    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1209    Status = Can_lReportDetUninit(CAN_SID_CHECK_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1210  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1211    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1212    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1213      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1214      Status = Can_lReportDetParamController(Controller, CAN_SID_CHECK_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1215    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1216  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1217    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1218  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1219    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1220      /* Check if baudrate is supported/configured */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1221      BaudrateCfgIndex = Can_lSearchBaudrate(Controller, Baudrate);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1222  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1223      /* check if baudrate is invalid/unsupported */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1224      if(BaudrateCfgIndex >= Can_kConfigPtr->CanNumBaudrateCfgs[Controller])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1225      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1226  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1227        /* Report invalid baudrate to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1228        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1229          CAN_SID_CHECK_BAUDRATE, CAN_E_PARAM_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1230  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1231        Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1232      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1233      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1234      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1235        Status = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1236      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1237    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1238    return (Status);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1239  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1240  #endif /*#if (CAN_CHANGE_BAUDRATE_API == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1241  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1242  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1243  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1244  ** TRACEABILITY: [cover parentID=DS_AS403_CAN449,DS_AS403_CAN422,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1245  DS_AS403_CAN461_CAN450_CAN451_CAN452_CAN453]                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1246  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1247  ** Syntax           : Std_ReturnType Can_17_MCanP_ChangeBaudrate              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1248  **                          (                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1249  **                            uint8 Controller,                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1250  **                            const uint16 Baudrate                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1251  **                          )                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1252  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1253  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1254  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1255  ** Service ID       : 0x0d                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1256  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1257  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1258  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1259  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1260  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1261  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1262  **                    Baudrate -  Baudrate to be checked                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1263  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1264  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1265  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1266  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1267  **                    - E_OK: Baudrate change accepted                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1268  **                    - E_NOT_OK: Baudrate is not accepted                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1269  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1270  ** Description      : Changes the CAN Controller Baudrate                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1271  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1272  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1273  Std_ReturnType Can_17_MCanP_ChangeBaudrate (uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1274                                              const uint16 Baudrate)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1275  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1276    const Can_17_MCanP_ControllerBaudrateConfigType *BaudrateCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1277    const Can_BaudrateConfigPtrType *CanBaudrateCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1278    uint8 BaudrateCfgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1279    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1280    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1281  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1282  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1283    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1284    Status = Can_lReportDetUninit(CAN_SID_CHANGE_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1285  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1286    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1287    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1288      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1289      Status = Can_lReportDetParamController(Controller, CAN_SID_CHANGE_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1290  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1291      /* Controller 'might' be invalid. So shouldn't proceed with checking
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1292      controller state. So do not check for it's state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1293      if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1294      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1295        /* The CAN controller is not in "stopped" state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1296        if (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1297        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1298          /* Report invalid state to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1299          Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1300            CAN_SID_CHANGE_BAUDRATE, CAN_E_TRANSITION);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1301          Status = E_NOT_OK ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1302        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1303      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1304    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1305  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1306    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1307  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1308    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1309      /* Check if baudrate is supported/configured */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1310      BaudrateCfgIndex = Can_lSearchBaudrate(Controller, Baudrate);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1311  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1312  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1313      /* check if baudrate is invalid/unsupported */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1314      if(BaudrateCfgIndex >= Can_kConfigPtr->CanNumBaudrateCfgs[Controller])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1315      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1316        /* Report invalid baudrate to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1317        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1318          CAN_SID_CHANGE_BAUDRATE, CAN_E_PARAM_BAUDRATE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1319        Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1320      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1321      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1322  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1323      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1324        Status = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1325  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1326  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1327        /* Check if wakeup was detected */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1328        if(CAN_ONE == Can_17_MCanP_ControllerWakeupStatus[Controller])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1329        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1330          /* Clear wakeup status and report to EcuM */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1331          Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1332          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1333          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1334          EcuM_SetWakeupEvent((EcuM_WakeupSourceType)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1335            Can_kConfigPtr->CanWakeupSourceIdPtr[Controller]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1336        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1337  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1338  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1339        HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1340        CanBaudrateCfgPtr = Can_kConfigPtr->CanBaudrateConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1341        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1342          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1343        CanBaudrateCfgPtr += Controller;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1344        BaudrateCfgPtr = CanBaudrateCfgPtr->Can_kBaudrateConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1345        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1346          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1347        BaudrateCfgPtr += BaudrateCfgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1348        /* Set CAN controller baudrate */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1349        Can_lSetBaudrate(HwControllerId, BaudrateCfgPtr->CanControllerBaudrate,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1350                                                     CAN_RUNTIME_ACCESS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1351      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1352    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1353    return (Status);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1354  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1355  #endif /*#if (CAN_CHANGE_BAUDRATE_API == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1356  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1357  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1358  ** TRACEABILITY: [cover parentID=DS_AS_CAN230,DS_AS_CAN017,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1359  DS_AS_CAN198_CAN199_CAN200,DS_AS403_CAN370,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1360  DS_NAS_CAN_PR764]                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1361  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1362  ** Syntax           : Can_ReturnType Can_17_MCanP_SetControllerMode           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1363  **                                   (                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1364  **                                     uint8 Controller,                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1365  **                                     Can_StateTransitionType Transition     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1366  **                                   )                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1367  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1368  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1369  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1370  ** Service ID       : 0x03                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1371  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1372  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1373  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1374  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1375  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1376  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1377  **                    Transition - Requested transition                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1378  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1379  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1380  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1381  ** Return value     : CAN_OK - Valid transition                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1382  **                    CAN_NOT_OK - Invalid transition                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1383  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1384  ** Description      : Performs software triggered state transitions of the    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1385  **                    CAN Controller State machine                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1386  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1387  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1388  Can_ReturnType Can_17_MCanP_SetControllerMode(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1389                                               Can_StateTransitionType Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1390  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1391  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1392    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1393  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1394  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1395    Can_ReturnType RetValue;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1396    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1397  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1398  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1399  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1400    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1401    Status = Can_lReportDetUninit(CAN_SID_SETCONTROLLERMODE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1402  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1403    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1404    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1405      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1406      Status = Can_lReportDetParamController(Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1407        CAN_SID_SETCONTROLLERMODE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1408      if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1409      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1410        /* Check if requested state transition is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1411        Status = Can_lModeDetCheck(Controller, Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1412        if (E_NOT_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1413        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1414          /* Report invalid transition request to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1415          Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1416            CAN_SID_SETCONTROLLERMODE, CAN_E_TRANSITION);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1417        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1418      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1419    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1420    if (E_NOT_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1421    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1422      RetValue = CAN_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1423    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1424    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1425  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1426    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1427      RetValue = CAN_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1428  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1429      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1430  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1431  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1432      /* Check if wakeup is enabled */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1433      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1434          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1435      if(CAN_ZERO != Can_kConfigPtr->CanWakeupSourceIdPtr[Controller])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1436      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1437        /* perform state transition */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1438        Can_lSetModeWuSupportOn(Controller,HwControllerId,Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1439      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1440      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1441  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1442      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1443        /* perform state transition */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1444        Can_lSetModeWuSupportOff(Controller,HwControllerId,Transition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1445      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1446  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1447      /* Notify successful state transition to upper layer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1448      CanIf_ControllerModeIndication(Controller,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1449      Can_17_MCanP_ControllerMode[Controller]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1450    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1451    return(RetValue);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1452  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1453  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1454  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1455  ** TRACEABILITY: [cover parentID=DS_AS_CAN231,DS_AS_CAN205_CAN206]            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1456  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1457  ** Syntax         : void Can_17_MCanP_DisableControllerInterrupts             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1458  **                                                         (uint8 Controller) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1459  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1460  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1461  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1462  ** Service ID       : 0x04                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1463  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1464  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1465  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1466  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1467  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1468  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1469  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1470  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1471  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1472  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1473  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1474  ** Description      : Disables CAN Controller Interrupts                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1475  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1476  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1477  void Can_17_MCanP_DisableControllerInterrupts (uint8 Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1478  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1479  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1480  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1481    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1482  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1483    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1484    Status = Can_lReportDetUninit(CAN_SID_DISABLECONTROLLERINTERRUPTS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1485  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1486    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1487    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1488      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1489      Status = Can_lReportDetParamController(Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1490        CAN_SID_DISABLECONTROLLERINTERRUPTS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1491    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1492  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1493    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1494  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1495  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1496    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1497      /* Disable controller interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1498      Can_lDisableInterrupts(Controller);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1499    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1500  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1501  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1502  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1503  ** TRACEABILITY: [cover parentID=DS_AS_CAN232,DS_AS_CAN209_CAN210]            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1504  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1505  ** Syntax          : void Can_17_MCanP_EnableControllerInterrupts             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1506  **                                                         (uint8 Controller) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1507  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1508  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1509  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1510  ** Service ID       : 0x05                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1511  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1512  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1513  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1514  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1515  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1516  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1517  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1518  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1519  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1520  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1521  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1522  ** Description      : Enables CAN Controller Interrupts                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1523  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1524  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1525  void Can_17_MCanP_EnableControllerInterrupts (uint8 Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1526  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1527  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1528  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1529    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1530  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1531    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1532    Status = Can_lReportDetUninit(CAN_SID_ENABLECONTROLLERINTERRUPTS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1533  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1534    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1535    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1536      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1537      Status = Can_lReportDetParamController(Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1538        CAN_SID_ENABLECONTROLLERINTERRUPTS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1539    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1540  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1541    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1542  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1543  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1544    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1545      /* Enable Controller Interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1546      Can_lEnableInterrupts(Controller);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1547    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1548  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1549  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1550  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1551  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR765_1,DS_AS_CAN233,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1552  DS_AS_CAN100,DS_AS_CAN216,DS_NAS_HE2_CAN_PR2891,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1553  DS_NAS_EP_CAN_PR2891]                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1554  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1555  ** Syntax           : Can_ReturnType Can_17_MCanP_Write                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1556  **                                            (                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1557  **                                              Can_HwHandleType Hth,         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1558  **                                              const Can_PduType *PduInfo    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1559  **                                            )                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1560  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1561  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1562  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1563  ** Service ID       : 0x06                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1564  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1565  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1566  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1567  ** Reentrancy       : Reentrant(thread-safe)                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1568  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1569  ** Parameters (in)  : Hth - Hardware Transmit Handler                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1570  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1571  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1572  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1573  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1574  ** Return value     : CAN_OK - Write command has been accepted                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1575  **                    CAN_BUSY - No message object available or pre-emptive   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1576  **                               call of Can_17_MCanP_Write that can't be     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1577  **                               implemented re-entrant                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1578  **                    CAN_NOT_OK - development error occured                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1579  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1580  ** Description      : Service to transmit CAN frame                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1581  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1582  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1583  Can_ReturnType Can_17_MCanP_Write (Can_HwHandleType Hth,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1584                                     const Can_PduType *PduInfo)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1585  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1586  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1587    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1588    uint16 HthIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1589  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1590  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1591  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1592    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1593  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1594  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1595    Can_ReturnType RetValue;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1596  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1597  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1598  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1599    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1600    Status = Can_lReportDetUninit(CAN_SID_WRITE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1601  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1602    if (E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1603    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1604      /* Check for DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1605      #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1606      Status = Can_lWriteDetCheck(Hth, PduInfo);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1607      #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1608      /* Since there is no TX objects are configured, passed Hth would be of
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1609      type RX. Hence the DET is reported. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1610      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1611        CAN_SID_WRITE, CAN_E_PARAM_HANDLE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1612      /* Status is not initialised with E_NOT_OK here, since there is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1613      no functional code available in the else part of below if condition,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1614      incase of no TX objects. Return value also set in below else condition */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1615      #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1616  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1617    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1618    if (E_NOT_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1619    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1620      RetValue = CAN_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1621    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1622    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1623  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON)  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1624    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1625  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1626  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1627      /* Extract HTH index for accessing corresponding configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1628  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1629      HthIndex = (uint16)(Hth - Can_kConfigPtr->CanNumRxHwObj);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1630  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1631      HthIndex = (uint16)Hth;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1632  #endif /* #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1633  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1634      /* Extract message object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1635      /* Update message object with the transmit request */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1636      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1637          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1638      HwObjectId = Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].MsgObjId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1639      RetValue = Can_lWriteMsgObj(HthIndex, HwObjectId, PduInfo);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1640  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1641  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1642  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1643      /* If no hardware object is configured for tranmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1644      RetValue = CAN_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1645      /* to avoid compiler warnings*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1646      UNUSED_PARAMETER (Hth)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1647      UNUSED_PARAMETER (PduInfo)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1648  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1649  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1650    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1651    return(RetValue);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1652  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1653  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1654  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1655  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1656  ** TRACEABILITY     : [cover parentID=DS_AS_CAN225,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1657  DS_AS_CAN110_CAN431_CAN031_CAN178_CAN179]              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1658  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1659  ** Syntax           : void Can_17_MCanP_MainFunction_Write(void)              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1660  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1661  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1662  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1663  ** Service ID       : 0x01                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1664  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1665  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1666  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1667  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1668  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1669  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1670  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1671  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1672  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1673  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1674  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1675  ** Timing           : Variable Cyclic                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1676  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1677  ** Description      : This function performs the polling of TX confirmation   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1678  **                    when CAN_TX_PROCESSING is set to POLLING                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1679  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1680  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1681  void Can_17_MCanP_MainFunction_Write(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1682  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1683  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1684    uint8 CtrlIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1685  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1686  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1687  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1688    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1689  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1690    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1691    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_WRITE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1692  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1693    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1694  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1695    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1696  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1697    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1698  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1699  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1700      /* Call transmit handler function for each of the CAN controllers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1701      configured as POLLING mode for transmission successful event handling */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1702      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1703      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1704        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1705          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1706        if(CAN_POLLING ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1707          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1708                                                    CanEventType[EVENTTYPE_TWO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1709        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1710          Can_17_MCanP_IsrTransmitRuntime
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1711            (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1712        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1713      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1714  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1715  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1716    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1717  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1718  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1719  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1720  ** TRACEABILITY     : [cover parentID=DS_AS_CAN226,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1721  DS_AS_CAN108_CAN180_CAN181]                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1722  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1723  ** Syntax           : void Can_17_MCanP_MainFunction_Read(void)               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1724  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1725  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1726  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1727  ** Service ID       : 0x08                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1728  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1729  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1730  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1731  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1732  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1733  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1734  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1735  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1736  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1737  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1738  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1739  ** Timing           : Variable Cyclic                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1740  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1741  ** Description      : This function performs the polling of RX indication     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1742  **                    when CAN_RX_PROCESSING is set to POLLING                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1743  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1744  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1745  void Can_17_MCanP_MainFunction_Read(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1746  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1747  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1748    uint8 CtrlIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1749  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1750  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1751  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1752    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1753  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1754    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1755    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_READ);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1756  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1757    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1758  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1759    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1760  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1761    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1762  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1763  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1764      /* Call receive handler function for each of the CAN controllers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1765      configured as POLLING mode for reception successful event handling */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1766  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1767      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1768      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1769        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1770          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1771        if(CAN_POLLING ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1772          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1773                                              CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1774        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1775          if(CANIF_CS_STARTED ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1776            Can_17_MCanP_ControllerMode[CtrlIndex])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1777          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1778            Can_lReceiveHandlerRuntime(Can_kConfigPtr->CanHwControllerIdMap\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1779                                                                    [CtrlIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1780          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1781        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1782      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1783  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1784  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1785      /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1786    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1787  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1788  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1789  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1790  ** TRACEABILITY     : [cover parentID=DS_AS_CAN109_CAN183_CAN184,DS_AS_CAN227]**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1791  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1792  ** Syntax           : void Can_17_MCanP_MainFunction_BusOff(void)             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1793  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1794  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1795  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1796  ** Service ID       : 0x09                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1797  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1798  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1799  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1800  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1801  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1802  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1803  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1804  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1805  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1806  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1807  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1808  ** Timing           : Variable Cyclic                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1809  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1810  ** Description      : This function performs the polling of bus-off events    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1811  **                    that are configured statically as 'to be polled'        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1812  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1813  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1814  void Can_17_MCanP_MainFunction_BusOff(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1815  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1816    uint8 CtrlIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1817  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1818  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1819    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1820  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1821    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1822    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_BUSOFF);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1823  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1824    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1825  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1826    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1827  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1828    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1829      /* Call busoff handler function for each of the CAN controllers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1830      configured as POLLING mode for busoff event handling */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1831      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1832      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1833        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1834          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1835        if(CAN_POLLING ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1836          Can_kConfigPtr->CanEventHandlingConfigPtr[CtrlIndex].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1837                                                  CanEventType[EVENTTYPE_ZERO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1838        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1839          Can_17_MCanP_IsrBusOffRuntime
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1840            (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1841        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1842      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1843    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1844  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1845  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1846  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1847  ** TRACEABILITY     : [cover parentID=DS_AS_CAN228,DS_AS_CAN112_CAN185_CAN186]**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1848  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1849  ** Syntax           : void Can_17_MCanP_MainFunction_Wakeup(void)             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1850  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1851  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1852  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1853  ** Service ID       : 0x0A                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1854  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1855  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1856  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1857  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1858  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1859  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1860  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1861  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1862  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1863  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1864  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1865  ** Timing           : Variable Cyclic                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1866  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1867  ** Description      : This function performs the polling of wake-up events    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1868  **                    that are configured statically as 'to be polled'        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1869  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1870  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1871  void Can_17_MCanP_MainFunction_Wakeup(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1872  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1873  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1874  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1875    uint8 CtrlIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1876  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1877  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1878  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1879  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1880    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1881  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1882    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1883    Status = Can_lReportDetUninit(CAN_SID_MAINFUNCTION_WAKEUP);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1884  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1885    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1886  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1887    if(CAN_DS_UNINIT != Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1888  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1889    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1890  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1891  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1892      /* Call wakeup handler function for each of the CAN controllers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1893      configured as POLLING mode for wakeup event handling */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1894  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1895  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1896      for(CtrlIndex=CAN_ZERO;CtrlIndex< (uint8)CAN_NUM_CONTROLLER_MAX;CtrlIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1897      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1898        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1899          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1900        if(CAN_POLLING ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1901          Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1902          CanEventHandlingConfigPtr[CtrlIndex].CanEventType[CAN_THREE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1903        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1904          if(CANIF_CS_SLEEP ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1905            Can_17_MCanP_ControllerMode[CtrlIndex])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1906          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1907            Can_lWakeupHandlerRuntime\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1908                     (Can_kConfigPtr->CanHwControllerIdMap[CtrlIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1909          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1910        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1911      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1912  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1913  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1914  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1915      /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1916    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1917  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1918  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1919  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1920  ** TRACEABILITY     : [cover parentID=DS_AS403_CAN368,DS_AS_CAN033_CAN035]    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1921  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1922  ** Syntax           : void Can_17_MCanP_MainFunction_Mode(void)               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1923  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1924  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1925  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1926  ** Service ID       : 0x0C                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1927  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1928  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1929  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1930  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1931  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1932  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1933  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1934  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1935  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1936  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1937  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1938  ** Timing           : Variable Cyclic                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1939  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1940  ** Description      : This function performs the polling of CAN Controller    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1941  **                    mode transitions                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1942  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1943  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1944  void Can_17_MCanP_MainFunction_Mode(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1945  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1946    /* As all the CAN controller state transitions happens synchronously,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1947    callback function CanIf_ControllerModeIndication is called in the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1948    context of the API Can_17_MCanP_SetControllerMode itself. Hence this API
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1949    is implemented as an empty function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1950  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1951  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1952  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1953  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR765_2,DS_AS403_CAN360,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1954  DS_AS403_CAN361,DS_AS_CAN362_CAN363]                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1955  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1956  ** Syntax           : Can_ReturnType Can_17_MCanP_CheckWakeup                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1957  **                                                         (uint8 Controller) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1958  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1959  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1960  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1961  ** Service ID       : 0x0B                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1962  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1963  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1964  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1965  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1966  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1967  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1968  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1969  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1970  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1971  ** Return value     : CAN_OK - Wakeup was detected for the given controller   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1972  **                    CAN_NOT_OK - No wakeup was detected for the given       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1973  **                                 CAN Controller                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1974  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1975  ** Description      : This function checks if a wakeup has occurred for the   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1976  **                    given CAN Controller                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1977  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1978  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1979  Can_ReturnType Can_17_MCanP_CheckWakeup(uint8 Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1980  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1981  #if ((CAN_DEV_ERROR_DETECT == STD_ON) && (CAN_WAKEUP_CONFIGURED == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1982    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1983  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1984    Can_ReturnType RetValue;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1985  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1986    RetValue = CAN_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1987  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1988  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1989  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1990    /* Check if CAN driver is initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1991    Status = Can_lReportDetUninit(CAN_SID_CHECKWAKEUP);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1992  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1993    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1994    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1995      /* Check if Controller is valid */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1996      Status = Can_lReportDetParamController(Controller, CAN_SID_CHECKWAKEUP);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1997    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1998    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  1999  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2000    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2001      /* Check if wakeup was detected */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2002      if(CAN_ONE == Can_17_MCanP_ControllerWakeupStatus[Controller])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2003      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2004        /* Clear wakeup status and return CAN_OK */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2005        Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2006        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2007          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2008        EcuM_SetWakeupEvent((EcuM_WakeupSourceType)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2009          Can_kConfigPtr->CanWakeupSourceIdPtr[Controller]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2010        RetValue = CAN_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2011      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2012    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2013  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2014    UNUSED_PARAMETER (Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2015  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2016      return(RetValue);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2017  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2018  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2019  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2020  **                      Interrupt Service Routines                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2021  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2022  /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2023  The CAN Driver modules implement the interrupt service routines for all
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2024  CAN Hardware Unit interrupts that are needed.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2025  The module Can_Irq.c contains the implementation of interrupt frames.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2026  The implementation of the interrupt service routine are in this file.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2027  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2028  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2029  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2030  ** TRACEABILITY     : [cover parentID=DS_AS403_CAN418]                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2031  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2032  ** Syntax           : void Can_17_MCanP_IsrReceiveHandler                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2033  **                                                     (uint8 HwControllerId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2034  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2035  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2036  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2037  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2038  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2039  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2040  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2041  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2042  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2043  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2044  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2045  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2046  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2047  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2048  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2049  ** Description      : - This is the interrupt service routine for Receive     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2050  **                    Interrupt                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2051  **                    - This function checks the CAN Controller status and    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2052  **                    calls appropriate handler function                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2053  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2054  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2055  void Can_17_MCanP_IsrReceiveHandler(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2056  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2057  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2058  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2059    /* In STARTED state, upon message reception call receive handler function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2060    if(CANIF_CS_STARTED ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2061      Can_17_MCanP_ControllerMode[Can_NodeIdMap[HwControllerId]])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2062    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2063      Can_lReceiveHandler(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2064    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2065  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2066  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2067    /* In SLEEP state, upon message reception call wakeup handler function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2068    if(CANIF_CS_SLEEP ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2069      Can_17_MCanP_ControllerMode[Can_NodeIdMap[HwControllerId]])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2070    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2071      Can_lWakeupHandler(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2072    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2073  #endif /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2074  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2075  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2076    UNUSED_PARAMETER (HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2077  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2078      /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2079  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2080  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2081  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2082  ** TRACEABILITY: [cover parentID=DS_AS_CAN016]                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2083  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2084  ** Syntax           : void Can_17_MCanP_IsrTransmitHandler                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2085  **                                                     (uint8 HwControllerId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2086  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2087  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2088  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2089  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2090  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2091  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2092  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2093  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2094  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2095  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2096  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2097  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2098  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2099  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2100  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2101  ** Description      : - This is the interrupt service routine for Transmit    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2102  **                    Interrupt                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2103  **                    - In case of successful transmission event, this        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2104  **                    funciton notifies the upper layer                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2105  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2106  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2107  void Can_17_MCanP_IsrTransmitHandler(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2108  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2109  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2110  volatile uint32 MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2111    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2112    uint16 TxHandleIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2113    uint16 TxMOIdx = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2114    uint8 PndBitPosition;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2115    uint8 MsgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2116    uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2117    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2118  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2119  #ifdef IFX_CAN_DEBUG06
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2120    HwControllerId = TestCan_DebugMask06;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2121  #endif/*#ifdef IFX_CAN_DEBUG06*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2122  if(HwControllerId <= CAN_NUM_CONTROLLERS_IN_DEVICE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2123  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2124  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2125  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2126    /* Calculate to which kernel the Controller belongs to */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2127    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2128  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2129    /* Save current MSIMASK - which needs to be restored back at the end */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2130    /* to avoid re-entrancy issue */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2131    MsiMaskCopy = CAN_KER[KerIdx]->MSIMASK.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2132    LoopBreak = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2133  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2134    /* Loop through all the MSPND registers configured for transmit MOs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2135    for (MsgIndex = Can_kConfigPtr->CanTxFirstMspndIdx;\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2136      MsgIndex <= Can_kConfigPtr->CanTxLastMspndIdx;\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2137      MsgIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2138    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2139      /* Load MSIMASK corresponding to the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2140      CAN_KER[KerIdx]->MSIMASK.U = Can_TxMsiMask[HwControllerId][MsgIndex];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2141  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2142      /* Check for any pending notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2143      /* To avoid infinite loop in case of hardware error, LoopBreak is used
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2144      with worst case of 32 iterations to process 32 message objects pointed
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2145      by the given MSIMASK */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2146      while((((CAN_KER[KerIdx]->MSID[MsgIndex].U)& CAN_MSID_INDEX) !=\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2147                      CAN_MSID_NO_MSG_PND_VALUE) && (LoopBreak < CAN_THIRTY_TWO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2148     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2149        /* Count the iterations */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2150        LoopBreak++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2151  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2152        /* Get the pending bit position */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2153  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2154        PndBitPosition =(uint8)((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2155                                              MSID[MsgIndex].U) & CAN_MSID_INDEX);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2156        /* Calculate the message object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2157        HwObjectId =  ((uint16)PndBitPosition + \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2158                   (uint16)((uint16)MsgIndex << CAN_MOIPR_MPN_MSPND_SHIFT ));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2159  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2160        /* Calculate the starting value of HW Object Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2161        TxMOIdx = HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2162        TxHandleIdx = Can_lGetHthIndex(KerIdx,TxMOIdx);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2163  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2164        /* Clear NEWDAT and TXPND */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2165        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2166          (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_TXPND_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2167  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2168        /* Clear MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2169        CAN_KER[KerIdx]->MSPND[MsgIndex].U = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2170          ~((unsigned_int)CAN_ONE << PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2171  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2172        /* Call notification function indicating successful transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2173        CanIf_TxConfirmation((PduIdType)Can_SwObjectHandle[KerIdx][TxHandleIdx]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2174  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2175      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2176    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2177  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2178    /* Restore the MSIMASK value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2179    CAN_KER[KerIdx]->MSIMASK.U  = MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2180  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2181  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2182    UNUSED_PARAMETER (HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2183  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2184  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2185  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2186  ** TRACEABILITY: [cover parentID=DS_AS_CAN016]                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2187  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2188  ** Syntax           : void Can_17_MCanP_IsrTransmitRuntime                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2189  **                                                     (uint8 HwControllerId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2190  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2191  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2192  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2193  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2194  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2195  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2196  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2197  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2198  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2199  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2200  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2201  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2202  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2203  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2204  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2205  ** Description      :- In case of successful transmission event, this         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2206  **                    function notifies the upper layer                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2207  **                    - This function is called by the polling function       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2208  **                    Can_17_MCanP_MainFunction_Write for controllers         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2209  **                    configured with CanTxProcessing as POLLING              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2210  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2211  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2212  void Can_17_MCanP_IsrTransmitRuntime(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2213  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2214  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2215  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2216    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2217    uint16 TxMOIdx = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2218    uint16 TxHandleIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2219    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2220    uint8 TxObjectStart = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2221    uint8 TxObjectcount = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2222    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2223    uint8 LoopIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2224    uint8 MOIncCntr = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2225  #ifdef IFX_CAN_DEBUG06
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2226    HwControllerId = TestCan_DebugMask06;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2227  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2228   if(HwControllerId <= CAN_NUM_CONTROLLERS_IN_DEVICE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2229   {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2230  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2231  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2232     /* Calculate to which kernel the Controller belongs to */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2233     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2234  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2235     /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2236     ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2237     /* Calculate Tx MO start */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2238     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2239       PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2240     TxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2241                                     [ControllerId].ControllerMOMap[CAN_TWO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2242     /* Calculate Tx MO Count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2243     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2244       PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2245     TxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2246                                     [ControllerId].ControllerMOMap[CAN_THREE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2247     #if(CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2248     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2249      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2250     if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2251     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2252     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2253        MOIncCntr = CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2254     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2255     else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2256     #endif/*#if(CAN_FD_ENABLE == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2257     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2258       MOIncCntr = CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2259     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2260     for(LoopIndex = CAN_ZERO; LoopIndex < TxObjectcount; LoopIndex+=MOIncCntr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2261     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2262        /* Calculate Tx Hardware object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2263        HwObjectId = (uint16)((uint16)TxObjectStart + LoopIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2264        if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2265                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_TXPND_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2266        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2267          /* Calculate the starting value of HW Object Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2268          TxMOIdx = HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2269          TxHandleIdx = Can_lGetHthIndex(KerIdx, TxMOIdx);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2270  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2271          /* Clear NEWDAT and TXPND */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2272         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2273                                    (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_TXPND_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2274          /* Call notification function indicating successful transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2275         CanIf_TxConfirmation((PduIdType)Can_SwObjectHandle[KerIdx][TxHandleIdx]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2276  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2277        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2278     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2279   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2280  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2281   UNUSED_PARAMETER(HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2282  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2283  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2284  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2285  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2286  ** TRACEABILITY     : [cover parentID=DS_AS_CAN020_CAN272_CAN274]             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2287  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2288  ** Syntax           : void Can_17_MCanP_IsrBusOffHandler(uint8 HwControllerId)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2289  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2290  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2291  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2292  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2293  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2294  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2295  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2296  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2297  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2298  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2299  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2300  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2301  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2302  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2303  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2304  ** Description      : - This function is the core part of the interrupt       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2305  **                    service routine for handling and reporting bus-off event**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2306  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2307  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2308  void Can_17_MCanP_IsrBusOffHandler(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2309  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2310    uint8 BoffStatus;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2311    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2312    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2313    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2314  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2315    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2316    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2317    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2318    /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2319    Bus-off error check:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2320    ---------------------
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2321    The ALERT bit is set upon the occurrence of one of the following events
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2322    (the same events which also trigger an alert interrupt if ALIE is set):
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2323    1. A change of bit NSRx.BOFF
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2324    2. A change of bit NSRx.EWRN
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2325    3. A List Length Error, which also sets bit NSRx.LLE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2326    4. A List Object Error, which also sets bit NSRx.LOE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2327    5. Bit INIT has been set by hardware
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2328  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2329    Note:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2330    - List error occurance is ruled out because list is not changed at run
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2331    time by the driver. So LOE and LLE bits need not be checked.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2332  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2333    - Points 1,2 and 5 constitute BusOff condition
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2334    In the driver EWRN level is set to be equal to BOFF error level.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2335    So when EWRN triggers ALERT bit, it also means bus-off.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2336    When bus-off happens, INIT is set by "hardware".
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2337  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2338    So is it enough to check ALERT bit alone to see if there was bus-off
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2339    event triggered? No. Resetting of EWRN and/or BOFF also triggers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2340    ALERT bit to be set. To differentiate this scenario, both ALERT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2341    and INIT bit should be checked.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2342    */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2343  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2344    /* Extract the INIT bit status of the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2345    BoffStatus = (uint8)((CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)&CAN_NCR_INIT);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2346    /* Controller moved to bus-off state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2347    if ((((CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U) \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2348           & CAN_NSR_ALERT) == CAN_NSR_ALERT) && (BoffStatus == CAN_ONE))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2349    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2350      /* Reset ALERT bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2351      CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2352        (~((uint32)CAN_NSR_ALERT)) & CAN_NSR_WRITABLE_VALUE_MASK ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2353      /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2354      ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2355  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2356      /* Avoid un-intended bus-off notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2357      /* Notify busoff only if it occured in STARTED state of the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2358      if(CANIF_CS_STARTED == Can_17_MCanP_ControllerMode[ControllerId])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2359      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2360        /* Set current controller state to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2361        Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2362  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2363        /* Notify the bus-off event to upper layer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2364        CanIf_ControllerBusOff(ControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2365      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2366  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2367    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2368  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2369  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2370  ** TRACEABILITY     : [cover parentID=DS_AS_CAN020_CAN272_CAN274]             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2371  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2372  ** Syntax           : void Can_17_MCanP_IsrBusOffRuntime\                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2373  **                                                      (uint8 HwControllerId)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2374  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2375  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2376  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2377  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2378  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2379  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2380  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2381  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2382  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2383  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2384  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2385  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2386  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2387  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2388  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2389  ** Description      : - This function is called by the polling function       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2390  **                      Can_17_MCanP_MainFunction_BusOff for controllers      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2391  **                      configured with CanBusoffProcessing as POLLING        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2392  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2393  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2394  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2395  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2396  void Can_17_MCanP_IsrBusOffRuntime(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2397  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2398    uint8 BoffStatus;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2399    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2400    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2401    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2402  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2403    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2404    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2405    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2406    /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2407    Bus-off error check:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2408    ---------------------
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2409    The ALERT bit is set upon the occurrence of one of the following events
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2410    (the same events which also trigger an alert interrupt if ALIE is set):
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2411    1. A change of bit NSRx.BOFF
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2412    2. A change of bit NSRx.EWRN
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2413    3. A List Length Error, which also sets bit NSRx.LLE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2414    4. A List Object Error, which also sets bit NSRx.LOE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2415    5. Bit INIT has been set by hardware
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2416  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2417    Note:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2418    - List error occurance is ruled out because list is not changed at run
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2419    time by the driver. So LOE and LLE bits need not be checked.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2420  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2421    - Points 1,2 and 5 constitute BusOff condition
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2422    In the driver EWRN level is set to be equal to BOFF error level.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2423    So when EWRN triggers ALERT bit, it also means bus-off.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2424    When bus-off happens, INIT is set by "hardware".
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2425  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2426    So is it enough to check ALERT bit alone to see if there was bus-off
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2427    event triggered? No. Resetting of EWRN and/or BOFF also triggers
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2428    ALERT bit to be set. To differentiate this scenario, both ALERT
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2429    and INIT bit should be checked.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2430    */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2431  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2432    /* Extract the INIT bit status of the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2433    BoffStatus = (uint8)(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2434                            (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)&CAN_NCR_INIT);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2435    /* Controller moved to bus-off state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2436    if (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2437                   & CAN_NSR_ALERT) == CAN_NSR_ALERT) && (BoffStatus == CAN_ONE))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2438    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2439      /* Reset ALERT bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2440      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->N[HwCtrlIDKer].SR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2441                        (~((uint32)CAN_NSR_ALERT)) & CAN_NSR_WRITABLE_VALUE_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2442      /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2443      ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2444  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2445      /* Avoid un-intended bus-off notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2446      /* Notify busoff only if it occured in STARTED state of the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2447      if(CANIF_CS_STARTED == Can_17_MCanP_ControllerMode[ControllerId])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2448      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2449        /* Set current controller state to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2450        Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2451  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2452        /* Notify the bus-off event to upper layer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2453        CanIf_ControllerBusOff(ControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2454      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2455  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2456    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2457  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2458  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2459  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2460  **                      Private Function Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2461  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2462  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2463  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2464  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitGlobalVar(void)          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2465  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2466  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2467  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2468  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2469  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2470  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2471  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2472  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2473  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2474  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2475  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2476  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2477  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2478  ** Description      : Initializes global variables of CAN driver              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2479  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2480  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2481  IFX_LOCAL_INLINE void Can_lInitGlobalVar(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2482  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2483    uint16 Index;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2484  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2485    uint8 HwIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2486  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2487  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2488    volatile uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2489  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2490    uint8 MspndIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2491  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2492    /* Clear interrupt status and disable count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2493    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)
	mov	d15,#0
.L809:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2493    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
	j	.L2
.L3:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2494    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2495      Can_17_MCanP_InterruptDisableCount[Index] = CAN_ZERO;
	movh.a	a15,#@his(Can_17_MCanP_InterruptDisableCount)
	lea	a15,[a15]@los(Can_17_MCanP_InterruptDisableCount)
.L1117:
	addsc.a	a15,a15,d15,#0
.L1118:
	mov	d0,#0
.L1119:
	st.b	[a15],d0
.L1120:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2496      Can_InterruptsEnabledStatus[Index] = CAN_ZERO;
	movh.a	a15,#@his(Can_InterruptsEnabledStatus)
	lea	a15,[a15]@los(Can_InterruptsEnabledStatus)
.L1121:
	addsc.a	a15,a15,d15,#0
.L1122:
	mov	d0,#0
.L1123:
	st.b	[a15],d0
.L1124:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2497      /* Initialize the CAN controller status to Uninitialised state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2498      Can_17_MCanP_ControllerMode[Index] = CANIF_CS_UNINIT;
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1125:
	addsc.a	a15,a15,d15,#2
.L1126:
	mov	d0,#0
.L1127:
	st.w	[a15],d0
.L1128:
	add	d15,#1
.L810:
	extr.u	d15,d15,#0,#16

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2493    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
.L2:
	ld.a	a15,[a12]
.L1129:
	ld.bu	d0,[a15]38
.L1130:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2493    for (Index = CAN_ZERO; Index < (Can_kConfigPtr->CanNumController); Index++)      (inlined)
	jlt.u	d15,d0,.L3
.L1131:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2499  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2500  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2501      /* Clear wakeup status flag */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2502      Can_17_MCanP_ControllerWakeupStatus[Index] = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2503  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2504  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2505    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2506  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2507    #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2508    /* Clear software pdu handle array */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2509    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
	mov	d15,#0
.L811:
	st.b	[a10],d15
.L1132:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2509    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	j	.L4
.L5:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2510    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2511     #if (CAN_TX_HARDWARE_OBJECTS_MAX > 1U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2512     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTS_MAX; Index++)
	mov	d0,#0
.L812:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2512     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTS_MAX; Index++)      (inlined)
	j	.L6
.L7:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2513     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2514       Can_SwObjectHandle[KerIdx][Index] = CAN_ZERO;
	ld.bu	d15,[a10]
.L1133:
	mul	d15,d15,#20
.L1134:
	movh.a	a15,#@his(Can_SwObjectHandle)
	lea	a15,[a15]@los(Can_SwObjectHandle)
.L1135:
	addsc.a	a15,a15,d15,#0
.L1136:
	addsc.a	a15,a15,d0,#1
.L1137:
	mov	d15,#0
.L1138:
	st.h	[a15],d15
.L1139:
	add	d0,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2512     for (Index = CAN_ZERO; Index < CAN_TX_HARDWARE_OBJECTS_MAX; Index++)      (inlined)
.L6:
	jlt.u	d0,#10,.L7
.L1140:
	ld.bu	d15,[a10]
.L1141:
	add	d15,#1
	st.b	[a10],d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2509    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
.L4:
	ld.bu	d15,[a10]
.L1142:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2509    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	jeq	d15,#0,.L5
.L1143:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2515     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2516     #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2517       Can_SwObjectHandle[KerIdx][0] = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2518     #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 1U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2519    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2520    #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2521  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2522    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)
	mov	d0,#0
.L813:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2522    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)      (inlined)
	j	.L8
.L9:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2523    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2524      /* Initialize controllelr mapping array to Invalid Controller Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2525      Can_NodeIdMap[Index] = CAN_INVALID_HW_CONTROLLER_ID;
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1144:
	addsc.a	a15,a15,d0,#0
.L1145:
	mov	d15,#255
.L1146:
	st.b	[a15],d15
.L1147:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2526  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2527      /* Initialize MSIMASK arrays */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2528      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)
	mov	d15,#0
.L814:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2528      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)      (inlined)
	j	.L10
.L11:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2529      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2530        Can_TxMsiMask[Index][MspndIndex]=(uint32)CAN_ZERO;
	sha	d1,d0,#5
.L1148:
	movh.a	a15,#@his(Can_TxMsiMask)
	lea	a15,[a15]@los(Can_TxMsiMask)
.L1149:
	addsc.a	a15,a15,d1,#0
.L1150:
	addsc.a	a15,a15,d15,#2
.L1151:
	mov	d2,#0
.L1152:
	st.w	[a15],d2
.L1153:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2531        Can_RxMsiMask[Index][MspndIndex]=(uint32)CAN_ZERO;
	movh.a	a15,#@his(Can_RxMsiMask)
	lea	a15,[a15]@los(Can_RxMsiMask)
.L1154:
	addsc.a	a15,a15,d1,#0
.L1155:
	addsc.a	a15,a15,d15,#2
.L1156:
	mov	d1,#0
.L1157:
	st.w	[a15],d1
.L1158:
	add	d15,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2528      for (MspndIndex = CAN_ZERO; MspndIndex < CAN_NUM_MSPND_REGS; MspndIndex++)      (inlined)
.L10:
	jlt.u	d15,#8,.L11
.L1159:
	add	d0,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2522    for (Index = CAN_ZERO; Index < CAN_NUM_CONTROLLERS_IN_DEVICE; Index++)      (inlined)
.L8:
	jlt.u	d0,#4,.L9
.L1160:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2532      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2533    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2534  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2535  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2536    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)
	mov	d15,#0
.L815:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2536    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)      (inlined)
	j	.L12
.L13:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2537    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2538      for (Index = CAN_ZERO; Index < CAN_RXSize; Index++)
	mov	d0,#0
.L817:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2538      for (Index = CAN_ZERO; Index < CAN_RXSize; Index++)      (inlined)
	j	.L14
.L15:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2539      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2540        Can_RxMessageData[HwIndex][Index] = CAN_ZERO ;
	movh.a	a15,#@his(Can_RxMessageData)
	lea	a15,[a15]@los(Can_RxMessageData)
.L1161:
	addsc.a	a15,a15,d15,#3
.L1162:
	addsc.a	a15,a15,d0,#0
.L1163:
	mov	d1,#0
.L1164:
	st.b	[a15],d1
.L1165:
	add	d0,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2538      for (Index = CAN_ZERO; Index < CAN_RXSize; Index++)      (inlined)
.L14:
	jlt.u	d0,#8,.L15
.L1166:
	add	d15,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2536    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)      (inlined)
.L12:
	jlt.u	d15,#4,.L13
.L337:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2541      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2542    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2543  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2544  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2545  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2546    for (HwIndex = CAN_ZERO; HwIndex < CAN_NUM_CONTROLLERS_IN_DEVICE; HwIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2547    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2548      for (Index = CAN_ZERO; Index < CAN_EIGHT; Index++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2549      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2550        Can_RxFifoMessageData[HwIndex][Index] = CAN_ZERO ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2551      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2552    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2553  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2554  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2555  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2556  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2557  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void)*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2558  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2559  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2560  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2561  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2562  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2563  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2564  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2565  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2566  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2567  ** Parameters (out) : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2568  **                    - E_OK: Clock initialisation successful                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2569  **                    - E_NOT_OK: Clock initialisation failed                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2570  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2571  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2572  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2573  ** Description      : Initializes clock control register, fractional divider  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2574  **                    register and module control register                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2575  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2576  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2577  IFX_LOCAL_INLINE Std_ReturnType Can_lInitClkSetting(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2578  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2579    volatile uint32 ReadBack; /* For readback of CLC register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2580    volatile uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2581    uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2582    volatile uint8 DissChk;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2583    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2584    ReadBack = CAN_ZERO;
	mov	d15,#0
.L816:
	st.w	[a10],d15
.L1167:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2585    LoopBreak = CAN_ZERO;
	mov	d8,#0
.L818:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2586    RetVal = E_OK;
	mov	d9,#0
.L820:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2587  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2588    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&
	mov	d15,#0
.L1168:
	st.b	[a10]4,d15
.L1169:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2589     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
	j	.L16
.L17:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2589     (LoopBreak == CAN_ZERO)); KerIdx++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2590    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2591  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2592     /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2593     CAN_SFR_INIT_RESETENDINIT();
	call	Mcal_ResetENDINIT
.L361:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2594  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2595     /* Enable the CAN hardware unit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2596     CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_DISR_CLEARMASK,\ 
	movh.a	a13,#@his(CAN_KER)
	lea	a13,[a13]@los(CAN_KER)
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	ld.w	d0,[a15]
.L821:
	insert	d0,d0,#0,#0,#1
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	st.w	[a15],d0
.L362:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2597                                                                        CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2598  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2599     /* Read back the CLC register to ensure the CLC register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2600     ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	ld.w	d15,[a15]
.L1170:
	st.w	[a10],d15
.L1171:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2601  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2602     /* Enable/Disable sleep mode based on the need for wakeup detection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2603   #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2604     /* MultiCAN+ Module should be able to receive frames to detect wakeup */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2605     CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->CLC.U,CAN_CLC_EDIS_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2606                                                 (CAN_ONE << CAN_CLC_EDIS_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2607     /* Read back the CLC register to ensure the CLC register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2608     ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2609     #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2610     /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2611     CAN_SFR_INIT_SETENDINIT();
	call	Mcal_SetENDINIT
.L822:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2612  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2613   #ifdef IFX_CAN_DEBUG05
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2614     DissChk = (((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U)) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2615              CAN_CLC_DISS)>> CAN_CLC_DISS_BITPOS) | (uint8)(TestCan_DebugMask05);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2616   #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2617     DissChk = (uint8)(CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->CLC.U) &\ 
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	ld.w	d15,[a15]
.L1172:
	and	d15,#2
.L1173:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2618                                              CAN_CLC_DISS)>> CAN_CLC_DISS_BITPOS;
	sha	d15,#-1
.L1174:
	st.b	[a10]5,d15
.L1175:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2619   #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2620     if (CAN_ZERO != DissChk )
	ld.bu	d15,[a10]5
.L1176:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2620     if (CAN_ZERO != DissChk )      (inlined)
	jeq	d15,#0,.L18
.L1177:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2621     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2622      /* Report hardware errors and failures to DEM */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2623   #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2624      Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2625       DEM_EVENT_STATUS_FAILED);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2626   #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2627      RetVal = E_NOT_OK;
	mov	d9,#1
.L1178:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2628      LoopBreak = CAN_ONE;
	mov	d8,#1
.L1179:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2627      RetVal = E_NOT_OK;      (inlined)
	j	.L19

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2620     if (CAN_ZERO != DissChk )      (inlined)
.L18:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2629     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2630     else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2631     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2632  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2633   #if (CAN_RESET_SFR_AT_INIT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2634      /* Reset the Kernel registers to default value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2635      Can_lResetSFR(KerIdx,CAN_INIT_ACCESS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2636   #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2637  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2638      /* Select fASYN_CAN or fERAY or External oscillator as the input source */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2639      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->MCR.U,\ 
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	ld.w	d15,[a15]456
.L823:
	insert	d15,d15,#0,#0,#4
	or	d0,d15,#1
.L824:
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	lea	a15,[a15]456
	st.w	[a15],d0
.L366:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2640                                         CAN_MCR_CLKSEL_CLEARMASK,CAN_MCR_CLKSEL)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2641  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2642      /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2643      CAN_SFR_INIT_RESETENDINIT();
	call	Mcal_ResetENDINIT
.L825:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2644  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2645      /* Setup CAN module timer clock */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2646      /* CAN_CLC should be written before writing to CAN_FDR */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2647      CAN_SFR_INIT_WRITE32(CAN_KER[KerIdx]->FDR.U,\ 
	ld.bu	d15,[a10]4
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	lea	a15,[a15]12
	ld.a	a2,[a12]
	ld.hu	d15,[a2]36
	st.w	[a15],d15
.L1180:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2648                                           (uint32)Can_kConfigPtr->CanFdrSetting);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2649  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2650      /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2651      CAN_SFR_INIT_SETENDINIT();
	call	Mcal_SetENDINIT

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2630     else      (inlined)
.L19:
	ld.bu	d15,[a10]4
.L1181:
	add	d15,#1
	st.b	[a10]4,d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2589     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
.L16:
	ld.bu	d15,[a10]4
.L1182:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2588    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&      (inlined)
	jne	d15,#0,.L20
.L1183:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2589     (LoopBreak == CAN_ZERO)); KerIdx++)      (inlined)
	jeq	d8,#0,.L17

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2588    for (KerIdx = CAN_ZERO; ((KerIdx < CAN_NUM_KERNELS_IN_DEVICE)&&      (inlined)
.L20:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2652     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2653    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2654    UNUSED_PARAMETER(ReadBack)
	ld.w	d15,[a10]

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2654    UNUSED_PARAMETER(ReadBack)      (inlined)
	jeq	d15,#0,.L21
.L21:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2655    return(RetVal);      (inlined)
	j	.L22

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2656  }      (inlined)
.L22:
	jne	d9,#0,.L23
.L369:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2655    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2656  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2657  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2658  #if ((CAN_RESET_SFR_AT_INIT == STD_ON)||(CAN_DEINIT_API == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2659  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2660  ** Syntax           : static void Can_lResetSFR(uint8 KerIdx uint8
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2661                                                              ApiAccesId)       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2662                                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2663  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2664  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2665  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2666  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2667  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2668  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2669  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2670  ** Parameters (in)  : uint8 KerIdx                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2671  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2672  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2673  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2674  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2675  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2676  ** Description      : Initializes the Kernel registers to default value       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2677  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2678  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2679  static void Can_lResetSFR(uint8 KerIdx,uint8 ApiAccesId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2680  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2681    volatile uint32 ReadBack; /* Readback of KRST register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2682    uint32 TimeOutVal; /* Time out value for Kernel Reset to happen */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2683    uint32 KerRstStat; /* Kernel Reset Status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2684    ReadBack = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2685  #if(CAN_RESET_SFR_AT_INIT == STD_ON) && (CAN_DEINIT_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2686    if (CAN_INIT_ACCESS == ApiAccesId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2687  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2688  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2689  #if(CAN_RESET_SFR_AT_INIT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2690    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2691     /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2692      CAN_SFR_INIT_RESETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2693  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2694      /* Request a Kernel Reset */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2695      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRST0.U,CAN_KRST0_RST_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2696                                                                         CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2697  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2698      /* Read back to ensure the KRST0 register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2699      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2700  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2701      /* Request a Kernel Reset */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2702      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRST1.U,CAN_KRST1_RST_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2703                                                                         CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2704  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2705      /* Read back to ensure the KRST1 register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2706      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST1.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2707  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2708      /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2709      CAN_SFR_INIT_SETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2710  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2711      /* Time out value for Kernel Reset is loaded */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2712      TimeOutVal = CAN_KERNEL_RESET_TIMEOUT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2713      do
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2714      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2715        TimeOutVal--;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2716  #ifdef IFX_CAN_DEBUG04
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2717        KerRstStat = TestCan_DebugMask04;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2718  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2719        KerRstStat = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2720           ((uint32)(CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2721                                                        CAN_KRST0_RSTSTAT_BITPOS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2722  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2723      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2724      while ((KerRstStat == CAN_ZERO) && (TimeOutVal > CAN_ZERO));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2725  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2726      /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2727      CAN_SFR_INIT_RESETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2728      /* Clear the Kernel Reset Status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2729      CAN_SFR_INIT_MODIFY32(CAN_KER[KerIdx]->KRSTCLR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2730                                               CAN_KRSTCLR_CLR_CLEARMASK,CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2731      /* Read back to ensure the KRSCLR register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2732      ReadBack = CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRSTCLR.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2733  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2734      /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2735      CAN_SFR_INIT_SETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2736    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2737  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2738  #if(CAN_RESET_SFR_AT_INIT == STD_ON) && (CAN_DEINIT_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2739    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2740  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2741  #if(CAN_DEINIT_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2742     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2743      /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2744      CAN_SFR_DEINIT_RESETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2745  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2746      /* Request a Kernel Reset */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2747      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRST0.U,CAN_KRST0_RST_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2748                                                                         CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2749  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2750      /* Read back to ensure the KRST0 register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2751      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2752  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2753      /* Request a Kernel Reset */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2754      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRST1.U,CAN_KRST1_RST_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2755                                                                         CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2756  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2757      /* Read back to ensure the KRST1 register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2758      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST1.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2759  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2760      /* Enable write-protection of registers with EndINIT protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2761      CAN_SFR_DEINIT_SETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2762  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2763      /* Time out value for Kernel Reset is loaded */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2764      TimeOutVal = CAN_KERNEL_RESET_TIMEOUT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2765      do
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2766      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2767        TimeOutVal--;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2768  #ifdef IFX_CAN_DEBUG04
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2769        KerRstStat = TestCan_DebugMask04;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2770  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2771        KerRstStat = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2772           ((uint32)(CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRST0.U))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2773                                                        CAN_KRST0_RSTSTAT_BITPOS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2774  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2775      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2776      while ((KerRstStat == CAN_ZERO) && (TimeOutVal > CAN_ZERO));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2777  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2778      /* Disable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2779      CAN_SFR_DEINIT_RESETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2780      /* Clear the Kernel Reset Status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2781      CAN_SFR_DEINIT_MODIFY32(CAN_KER[KerIdx]->KRSTCLR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2782                                               CAN_KRSTCLR_CLR_CLEARMASK,CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2783      /* Read back to ensure the KRSCLR register modifications */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2784      ReadBack = CAN_SFR_DEINIT_USER_MODE_READ32(CAN_KER[KerIdx]->KRSTCLR.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2785  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2786      /* Enable write-protection of registers with EndInit protection */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2787      CAN_SFR_DEINIT_SETENDINIT();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2788    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2789  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2790    UNUSED_PARAMETER(ReadBack)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2791  #if(CAN_RESET_SFR_AT_INIT == STD_OFF) || (CAN_DEINIT_API == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2792    UNUSED_PARAMETER(ApiAccesId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2793  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2794  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2795  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2796  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2797  ** TRACEABILITY     : [cover parentID=DS_AS_CAN176,DS_AS403_CAN371_CAN281,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2798  DS_AS_CAN029_CAN092_CAN295_CAN296_CAN297,DS_AS_CAN084,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2799  DS_NAS_CAN_PR919]                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2800  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2801  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2802  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2803  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2804  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2805  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2806  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2807  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2808  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2809  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2810  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2811  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2812  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2813  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2814  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2815  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2816  **                    - E_OK: CAN RAM initialization completed before timeout **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2817  **                    - E_NOT_OK: CAN RAM initialization did not complete     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2818  **                                before timeout                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2819  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2820  ** Description      : Checks for completion of CAN RAM initialization.        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2821  **                    In case of hardware failure, reports to DEM.            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2822  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2823  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2824  IFX_LOCAL_INLINE Std_ReturnType Can_lInitDemCheck(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2825  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2826    uint32 TimeOutIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2827    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2828    volatile uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2829  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2830    RetVal = E_OK;
	mov	d0,#0
.L826:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2831  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2832    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)
	mov	d15,#0
.L1184:
	st.b	[a10],d15
.L1185:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2832    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	j	.L24
.L25:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2833    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2834  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2835      /* The CAN RAM is automatically initialized after reset by the list
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2836      controller in order to ensure correct list pointers in each message object.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2837      End of the CAN RAM initialization is indicated by bit PANCTR.BUSY
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2838      becoming inactive */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2839      TimeOutIndex = CAN_TIMEOUT_DURATION;
	mov	d15,#400
.L349:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
.L350:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2848                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
	j	.L26
.L27:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2840  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2841  #ifdef IFX_CAN_DEBUG01
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2842      while (((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2843        CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS) | TestCan_DebugMask01) ==\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2844                          CAN_ONE) && (TimeOutIndex != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2845  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2846      while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2847                   CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) &&\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2848                                                       (TimeOutIndex != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2849  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2850      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2851        TimeOutIndex--;
	add	d15,#-1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2848                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
.L26:
	ld.bu	d1,[a10]
	addsc.a	a2,a15,d1,#2
	ld.a	a2,[a2]
	ld.w	d1,[a2]452
.L1186:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2846      while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\       (inlined)
	jz.t	d1:8,.L28
.L1187:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2848                                                       (TimeOutIndex != CAN_ZERO))      (inlined)
	jne	d15,#0,.L27

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2847                   CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) &&\       (inlined)
.L28:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2852      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2853      if (TimeOutIndex == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2854      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2855        /* The detection of production code errors cannot be switched off.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2856        This requirement will be violated as per HIS requirements */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2857  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2858        /* Report hardware errors and failures to DEM */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2859  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2860        Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2861          DEM_EVENT_STATUS_FAILED);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2862  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2863  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2864        RetVal = E_NOT_OK;
	cmovn	d0,d15,#1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2853      if (TimeOutIndex == CAN_ZERO)      (inlined)
.L29:
	ld.bu	d15,[a10]
.L827:
	add	d15,#1
	st.b	[a10],d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2832    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
.L24:
	ld.bu	d15,[a10]
.L1188:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2832    for (KerIdx = CAN_ZERO; KerIdx < CAN_NUM_KERNELS_IN_DEVICE; KerIdx++)      (inlined)
	jeq	d15,#0,.L25
.L1189:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2868    return(RetVal);      (inlined)
	j	.L30

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2869  }      (inlined)
.L30:
	jne	d0,#0,.L31
.L372:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2865      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2866    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2867  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2868    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2869  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2870  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2871  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2872  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitializeController         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2873  **                                             (                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2874  **                                               uint8 ControllerId,          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2875  **                                               uint8 HwControllerId         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2876  **                                             )                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2877  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2878  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2879  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2880  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2881  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2882  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2883  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2884  ** Parameters (in)  : ControllerId - CAN Controller Id as per configuration   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2885  **                    HwControllerId - Corresponding CAN Controller Id in     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2886  **                                     hardware                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2887  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2888  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2889  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2890  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2891  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2892  ** Description      : Initializes CAN Controller Registers and Enables CAN    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2893  **                    Controller Interrupts                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2894  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2895  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2896  IFX_LOCAL_INLINE void Can_lInitializeController(uint8 ControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2897                                              uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2898  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2899    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2900    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2901    uint8 BOSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2902    uint8 RxSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2903    uint8 IntSrcOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2904  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2905    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2906    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2907    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2908    IntSrcOffset = (KerIdx << CAN_FOUR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2909    BOSrcNum =  (uint8)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2910      ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2911      + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2912    RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2913      + HwCtrlIDKer + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2914  /* Check whether controller is in Interrupt mode */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2915  /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2916          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2917    if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2918      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2919                                                  CanEventType[EVENTTYPE_ZERO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2920    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2921    /*
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2922    - Enable Configuration Change - NBTR, NPCR, NECNT can be written
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2923    - Take controller out of CAN traffic i.e put it in "stopped" state
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2924    - Enable Alert Interrupt. Used to detect bus off
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2925    */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2926    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2927                  CAN_NCR_CLEARMASK,( CAN_NCR_INIT | CAN_NCR_ALIE |CAN_NCR_CCE ))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2928    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2929    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2930    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2931      /* - Enable Configuration Change - NBTR, NPCR, NECNT can be written
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2932         - Take controller out of CAN traffic i.e put it in "stopped" state
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2933         - Disable Alert Interrupt
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2934      */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2935      CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2936                  CAN_NCR_CLEARMASK,(CAN_NCR_INIT |CAN_NCR_CCE ))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2937    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2938  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2939  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2940    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2941          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2942    if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2943      Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2944    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2945      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2946      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2947      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2948      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2949      Can_lFrameInitialise(KerIdx,HwCtrlIDKer,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2950              Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2951                                  Can_kFDConfigParamPtr->CanControllerFDBaudrate,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2952                  Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2953                                 Can_kFDConfigParamPtr->CanControllerTxDelayComp);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2954    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2955  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2956  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2957  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2958    /* Loopback and receive input pin selection setting */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2959    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2960          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2961    CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->N[HwCtrlIDKer].PCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2962                  (uint32)Can_kConfigPtr->CanNpcrPtr[ControllerId].Can_NPCRValue);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2963  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2964    /* Assign alert interrupt (for bus-off indication) to an SRN */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2965    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2966                                        CAN_IPR_ALINP_CLEARMASK,(uint32)BOSrcNum)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2967  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2968    /* Set error warning limit to 255 so that no warning interrupt is generated
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2969    Only bus-off error is of interest */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2970    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].ECNT.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2971                      CAN_NECNT_EWRNLVL_CLEARMASK,(uint32)CAN_BUSOFF_LIMIT << \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2972                                              CAN_NECNT_EWRNLVL_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2973  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2974    /* Disable Configuration Change - NBTR, NPCR, NECNT can only be read */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2975    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2976                     CAN_NCR_CCE_CLEARMASK,(uint32)CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2977  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2978    /* For hardware controller Id, map the corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2979    Can_NodeIdMap[HwControllerId]=ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2980  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2981  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2982    /* Initialize default controller baudrate */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2983    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2984          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2985    Can_lSetBaudrate(HwControllerId, Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2986      CanDefaultBaudrateConfigPtr[ControllerId].CanControllerBaudrate,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2987                                                         CAN_INIT_ACCESS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2988  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2989    /* Enable the CAN controller interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2990    /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2991  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2992    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2993          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2994    if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2995      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2996                                                   CanEventType[EVENTTYPE_TWO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2997    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2998      Can_lClearAndEnableInterrupt((uint8)(HwCtrlIDKer + IntSrcOffset));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2999    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3000  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3001    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3002          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3003    if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3004      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3005                                                 CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3006    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3007      Can_lClearAndEnableInterrupt((uint8)RxSrcNum);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3008    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3009  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3010    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3011          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3012    if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3013      Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3014                                                  CanEventType[EVENTTYPE_ZERO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3015    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3016      Can_lClearAndEnableInterrupt((uint8)BOSrcNum);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3017    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3018  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3019  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3020  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3021  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3022  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3023  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void)   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3024  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3025  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3026  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3027  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3028  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3029  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3030  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3031  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3032  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3033  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3034  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3035  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3036  **                    - E_OK: Message object allocation successful            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3037  **                    - E_NOT_OK: Message object allocation failed            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3038  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3039  ** Description      : Calls local functions to initialize transmit, receive   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3040  **                    and FIFO message objects                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3041  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3042  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3043  IFX_LOCAL_INLINE Std_ReturnType Can_lInitMsgObj(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3044  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3045    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3046  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3047  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3048    /* Initialize transmit message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3049    RetVal = Can_lInitTxMsgObj();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3050    if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3051  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3052    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3053  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3054      /* Initialize receive message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3055      RetVal = Can_lInitRxMsgObj();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3056      if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3057  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3058      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3059  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3060        /* Initialize the Rx FIFO message objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3061        RetVal = Can_lRxFifoInit();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3062  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3063      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3064    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3065    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3066  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3067  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3068  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3069  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3070  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3071  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3072  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3073  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3074  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3075  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3076  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3077  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3078  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3079  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3080  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3081  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3082  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3083  **                    - E_OK: Message object allocation successful            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3084  **                    - E_NOT_OK: Message object allocation failed            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3085  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3086  ** Description      : Initializes transmit message objects                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3087  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3088  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3089  IFX_LOCAL_INLINE Std_ReturnType Can_lInitTxMsgObj(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3090  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3091    const Can_TxHwObjectConfigType *TxHwObjCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3092    uint16 HwObjIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3093    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3094    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3095    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3096    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3097    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3098  /*#if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3099    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3100  /*#endif*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3101    TxHwObjCfgPtr = Can_kConfigPtr->CanTxHwObjectConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3102    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3103  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3104    /* Loop through all the transmit hardware object configurations */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3105    for (
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3106      HwObjIndex=CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3107      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3108    HwObjIndex++
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3109      )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3110    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3111      /* Extract HwControllerId from the configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3112      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3113          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3114      HwControllerId = TxHwObjCfgPtr[HwObjIndex].HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3115      /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3116      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3117  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3118  /*#if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3119      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3120  /*#endif*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3121  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3122  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3123      /* only if associated controller is activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3124      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3125      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3126  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3127        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3128          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3129        HwObjectId = TxHwObjCfgPtr[HwObjIndex].MsgObjId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3130  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3131        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3132          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3133        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3134          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3135        HwObjectId = TxHwObjCfgPtr[HwObjIndex].MsgObjId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3136        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3137      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3138        while((HwObjectId <= TxHwObjCfgPtr[HwObjIndex].MsgObjIdLast)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3139                                                                &&(E_OK==RetVal))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3140  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3141        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3142  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3143          TestCan_SetMOAllocationErrorType(TESTCAN_TX_MO_ERROR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3144  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3145  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3146          /* allocate message object to the associated controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3147          RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3148  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3149          if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3150          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3151  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3152  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3153  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3154            if(CAN_ONE == (((CAN_SFR_INIT_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3155                    (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U)) & CAN_NCR_FDEN) >> \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3156                                                             CAN_NCR_FDEN_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3157            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3158              /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3159          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3160              if(CAN_ONE ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3161                Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3162                CanFDConfigParamPtr[Can_NodeIdMap[HwControllerId]].
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3163                Can_kFDConfigParamPtr->CanControllerTxBRS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3164              {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3165                CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3166                      (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3167                  CAN_MOFCR_BRS_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_BRS_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3168              }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3169  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3170              /* In order to support higher than 8 data bytes payload
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3171              (e.g 64bytes data payload),
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3172               CAN FD 64 bytes message mode is selected */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3173  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3174              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3175                      (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3176                             CAN_MOFCR_MMC_CLEARMASK,CAN_FD64BYTES_MOFCR_MMC_BIT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3177  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3178              /* When CAN FD 64 bytes message mode is selected, additional
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3179              message objects would be used to store the extra data bytes.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3180              The additional message objects used are specified by the pointer
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3181              on MOFGPR.BOT and MOFGPR.TOP register bits */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3182  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3183              /* The additional message objects chosen to store the extra data
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3184              bytes must not take part in CAN communication i.e they are allocated
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3185              to a list that does not belong to an active CAN node */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3186  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3187              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3188                  (CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3189                      CAN_MOFGPR_BOT_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3190                          (uint32)((uint32)HwObjectId +(uint32)CAN_ONE))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3191              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3192                  (CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3193                      CAN_MOFGPR_TOP_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3194                   (uint32)((uint32)((uint32)HwObjectId + (uint32)CAN_TWO) << \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3195                                                          CAN_MOFGPR_TOP_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3196  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3197            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3198  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3199  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3200            /* Set message pending number field (MPN) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3201            CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3202              (CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3203                  CAN_MOIPR_MPN_CLEARMASK,(uint32)((uint32)HwObjectId << \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3204                                                            CAN_MOIPR_MPN_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3205  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3206            /* Set the corresponding bit in MSIMASK array */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3207            Can_TxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3208              ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3209  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3210            /* Set interrupt service node */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3211            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3212                                                      CAN_MOIPR_TXINP_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3213                          (uint32)((uint32)HwCtrlIDKer << CAN_MOIPR_TXINP_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3214  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3215            /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3216            ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3217            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3218            PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3219            if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3220             Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3221                                                  CanEventType[EVENTTYPE_TWO])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3222            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3223              /* Enable transmit interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3224              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3225                                        (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3226                CAN_MOFCR_TXIE_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_TXIE_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3227            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3228            else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3229            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3230              /* Disable transmit interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3231              CAN_SFR_INIT_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3232                                         (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3233                                       CAN_MOFCR_TXIE_CLEARMASK,CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3234            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3235  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3236            /* Set message priority class */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3237            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3238              PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3239            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3240                           TxHwObjCfgPtr[HwObjIndex].TxObjPriorityClass);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3241  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3242            /* - Enable hardware object
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3243            - Set the direction of hardware object to transmit.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3244            - FIFO not used. So set TXEN1 bit permanently.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3245            */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3246            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3247                  ~((uint32)(CAN_MOCTR_DIR_CLR | CAN_MOCTR_TXEN1_CLR |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3248                      CAN_MOCTR_MSGVAL_CLR)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3249        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3250          #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3251          HwObjectId = Can_lCalculateLoopIndex(HwControllerId,HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3252          #endif /*#if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3253        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3254      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3255    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3256    return (RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3257  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3258  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3259  ** Syntax           : IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3260  **                                 (uint8 HwControllerId,uint16 HwObjectId)   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3261  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3262  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3263  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3264  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3265  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3266  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3267  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3268  ** Parameters (in)  : HwControllerId,HwObjectId                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3269  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3270  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3271  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3272  ** Return value     : uint16  HwObjectId                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3273  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3274  ** Description      : Calculatinh the Hw objectid                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3275  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3276  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3277  #if (CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3278  IFX_LOCAL_INLINE uint16 Can_lCalculateLoopIndex\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3279                                        (uint8 HwControllerId,uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3280  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3281  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3282  uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3283  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3284  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3285  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3286  /* Extract the coreesponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3287  ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3288  /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3289      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3290  if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3291  Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3292   {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3293     HwObjectId+= CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3294   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3295   else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3296   #endif /* End of #if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3297   {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3298     HwObjectId+= CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3299   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3300   #if (CAN_FD_ENABLE== STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3301   UNUSED_PARAMETER(HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3302   #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3303  return(HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3304  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3305  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3306  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3307  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3308  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3309  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3310  ** TRACEABILITY: [cover parentID=DS_AS_CAN236_CAN237]                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3311  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3312  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3313  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3314  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3315  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3316  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3317  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3318  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3319  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3320  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3321  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3322  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3323  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3324  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3325  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3326  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3327  **                    - E_OK: Message object allocation successful            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3328  **                    - E_NOT_OK: Message object allocation failed            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3329  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3330  ** Description      : Initializes receive message objects                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3331  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3332  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3333  IFX_LOCAL_INLINE Std_ReturnType Can_lInitRxMsgObj(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3334  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3335    const Can_RxHwObjectConfigType *RxHwObjCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3336    uint16 HwObjIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3337    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3338    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3339    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3340    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3341    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3342    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3343  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3344    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3345    RxHwObjCfgPtr = Can_kConfigPtr->CanRxHwObjectConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3346  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3347    /* Loop through all the receive hardware object configurations */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3348    for (HwObjIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3349      (HwObjIndex < Can_kConfigPtr->CanNumRxHwObj)&&(E_OK==RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3350      HwObjIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3351    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3352      /* extract associated controller from the configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3353      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3354          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3355      HwControllerId = RxHwObjCfgPtr[HwObjIndex].HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3356      /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3357      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3358      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3359  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3360      /* only if the associated ocntroller is activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3361      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3362      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3363        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3364          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3365        HwObjectId = RxHwObjCfgPtr[HwObjIndex].MsgObjId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3366  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3367        TestCan_SetMOAllocationErrorType(TESTCAN_RX_MO_ERROR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3368  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3369  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3370        /* allocate the message object to the associated controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3371        RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3372  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3373        /* Allocate hardware object from list */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3374        if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3375        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3376  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3377  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3378  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3379          if(CAN_ONE == ((CAN_SFR_INIT_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3380                    (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U) & CAN_NCR_FDEN) >> \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3381                                                             CAN_NCR_FDEN_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3382          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3383            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3384                  CAN_MOFCR_FDF_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_FDF_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3385            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3386                  CAN_MOFCR_BRS_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_BRS_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3387  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3388  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3389          /* In order to support higher than 8 data bytes payload
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3390          (e.g 64bytes data payload), CAN FD 64 bytes message mode is selected */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3391  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3392          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3393                             CAN_MOFCR_MMC_CLEARMASK,CAN_FD64BYTES_MOFCR_MMC_BIT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3394  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3395          /* When CAN FD 64 bytes message mode is selected, additional
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3396          message objects would be used to store the extra data bytes.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3397          The additional message objects used are specified by the pointer
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3398          on MOFGPR.BOT and MOFGPR.TOP register bits */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3399  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3400          /* The additional message objects chosen to store the extra data bytes
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3401          must not take part in CAN communication i.e they are allocated
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3402          to a list that does not belong to an active CAN node */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3403  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3404          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3405              CAN_MOFGPR_BOT_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3406                  ((uint32)HwObjectId + (uint32)CAN_ONE))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3407          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3408              CAN_MOFGPR_TOP_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3409               (((uint32)HwObjectId +  (uint32)CAN_TWO) << CAN_MOFGPR_TOP_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3410          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3411  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3412  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3413  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3414          /* Set message pending number field (MPN) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3415          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3416             CAN_MOIPR_MPN_CLEARMASK,((uint32)HwObjectId )<< CAN_MOIPR_MPN_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3417  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3418  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3419          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3420          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3421          if (RxHwObjCfgPtr[HwObjIndex].FrameType != CAN_ID_STANDARD)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3422          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3423            /* Set ID value, ID type and message priority class (to acceptance
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3424            filtering based on CAN identifier) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3425            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3426          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3427            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3428                  (unsigned_int)(CAN_PRIORITY_ID_BASED |CAN_USE_EXTENDED_ID |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3429                      (RxHwObjCfgPtr[HwObjIndex].MsgId)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3430  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3431            /* Set filter mask value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3432            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3433          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3434            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3435                      CAN_MOAMR_AM_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3436                          (uint32)RxHwObjCfgPtr[HwObjIndex].MaskRef)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3437  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3438            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3439          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3440            if (RxHwObjCfgPtr[HwObjIndex].FrameType == CAN_ID_MIXED)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3441            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3442              /* Receive both standard and extended IDs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3443              CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3444                      AMR.U,CAN_MOAMR_MIDE_CLEARMASK, (uint32)CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3445            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3446          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3447          else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3448  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3449          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3450            /* Set ID value, ID type and message priority class (to acceptance
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3451            filtering based on CAN identifier) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3452            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3453          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3454            CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3455                      (unsigned_int)(CAN_PRIORITY_ID_BASED |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3456                          ((uint32)RxHwObjCfgPtr[HwObjIndex].MsgId <<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3457                                                         CAN_MOAR_ID_STD_SHIFT)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3458  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3459            /* Set filter mask value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3460            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3461          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3462            CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3463                  CAN_MOAMR_AM_CLEARMASK,(uint32)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3464                      (RxHwObjCfgPtr[HwObjIndex].MaskRef << CAN_POS_18))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3465          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3466          /* Set interrupt service node */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3467          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3468              CAN_MOIPR_RXINP_CLEARMASK,(uint32)((uint32)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3469                          CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx] +\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3470                                             (uint32)HwCtrlIDKer))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3471  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3472          /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3473          ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3474          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3475          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3476          if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3477          Can_kConfigPtr->CanEventHandlingConfigPtr[ControllerId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3478                                                     CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3479          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3480            /* Enable receive interrupt for this hardware object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3481           CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3482                CAN_MOFCR_RXIE_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_RXIE_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3483          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3484          else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3485          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3486            /* Disable receive interrupt for this hardware object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3487           CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3488                   CAN_MOFCR_RXIE_CLEARMASK,CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3489          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3490  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3491          /*  Set the direction of hardware object to Receive. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3492          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3493                                                               CAN_MOCTR_DIR_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3494  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3495          /* Set the corresponding bit in MSIMASK array */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3496          Can_RxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3497            ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3498  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3499          /* Enable hardware object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3500          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3501             (~((uint32)(CAN_MOCTR_RXEN_CLR)| CAN_MOCTR_MSGVAL_CLR))&\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3502                                                         CAN_MOCTR_MSGVAL_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3503        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3504      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3505    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3506    return (RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3507  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3508  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3509  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3510  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3511  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3512  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void)   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3513  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3514  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3515  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3516  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3517  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3518  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3519  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3520  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3521  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3522  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3523  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3524  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3525  **                    - E_OK: Message object allocation successful            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3526  **                    - E_NOT_OK: Message object allocation failed            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3527  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3528  ** Description      : Initializes receive FIFO structure                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3529  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3530  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3531  IFX_LOCAL_INLINE Std_ReturnType Can_lRxFifoInit(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3532  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3533    const Can_RxFifoConfigType *RxFifoCfgPtr ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3534    uint16 FifoIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3535    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3536    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3537    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3538    uint8 FifoThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3539    uint8 FifoSize;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3540    uint8 FifoTop;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3541    uint16 SlaveIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3542    uint8 FifoBottom;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3543    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3544    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3545  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3546    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3547  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3548    /* Copy receive FIFO configuration pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3549    RxFifoCfgPtr = Can_kConfigPtr->RxFifoConfigPtr ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3550  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3551    /* configure all Receive FIFO Haraware objects */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3552    for (FifoIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3553      (FifoIndex < Can_kConfigPtr->CanNumRxFifo)&&(E_OK==RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3554      FifoIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3555    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3556      /* Extract associated CAN controller Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3557      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3558          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3559      HwControllerId = RxFifoCfgPtr[FifoIndex].HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3560      /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3561      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3562  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3563      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3564  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3565      /* Check if associated CAN controller is activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3566      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3567      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3568        /* Extract message object mapped for FIFO base object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3569        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3570          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3571        HwObjectId = RxFifoCfgPtr[FifoIndex].HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3572  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3573  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3574        TestCan_SetMOAllocationErrorType(TESTCAN_RXFIFO_BASE_MO_ERROR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3575  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3576  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3577        /* Allocate the message object to assocaited controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3578        RetVal = Can_lAllocateHwObject(HwControllerId, HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3579  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3580        if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3581        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3582          /* Set MSIMASK bit corresponding to the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3583          Can_RxMsiMask[HwControllerId][(HwObjectId >> CAN_POS_5)] |=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3584            ((uint32)1 << (HwObjectId & CAN_MAX_HWOBJ_PER_MSPND_REG_1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3585  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3586          /* Initialize receive FIFO base message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3587  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3588          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3589          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3590          Can_lRxFifoBaseMOInit(RxFifoCfgPtr, FifoIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3591            RxFifoCfgPtr[FifoIndex].FrameType);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3592  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3593          Can_lRxFifoBaseMOInit(RxFifoCfgPtr, FifoIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3594  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3595  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3596          /* Calculate Threshold, TOP and BOT values based on configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3597          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3598          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3599          FifoThreshold = RxFifoCfgPtr[FifoIndex].RxFifoThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3600          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3601          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3602          FifoSize      = RxFifoCfgPtr[FifoIndex].RxFifoSize ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3603          FifoBottom    = (uint8)HwObjectId ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3604          FifoTop      = (uint8)((uint8)HwObjectId + (uint8)(FifoSize - CAN_ONE));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3605          FifoThreshold = FifoBottom + FifoThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3606  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3607          /* If Size and Threshold is same Set BOT as SEL */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3608          if(FifoThreshold > FifoTop)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3609          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3610            FifoThreshold = FifoBottom ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3611          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3612  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3613          /* Update SEL, TOP, CUR and BOT to the message object MOFGPR */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3614          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3615              (unsigned_int)(((uint32)FifoThreshold << CAN_MOFGPR_SEL_SHIFT) |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3616                  ((uint32)FifoBottom << CAN_MOFGPR_CUR_SHIFT) |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3617                      ((uint32)FifoTop << CAN_MOFGPR_TOP_SHIFT) |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3618                          ((uint32)FifoBottom)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3619  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3620          /* Set MMC and OVIE bits in MOFCR */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3621          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3622                                                                  CAN_FIFO_MOFCR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3623  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3624          /* Set interrupt service node --> Refer section "Service Request Node
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3625          Allocation/Mapping" for SRN mapping */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3626          /* Receive FIFO interrupt request is generated on interrupt node TXINP
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3627          of the receive FIFO base MO */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3628          /* Assigned SRN is the receive SRN of the corresponding CAN controller*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3629          CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3630              CAN_MOIPR_TXINP_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3631              (uint32)((uint32)((uint32)CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx] +\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3632                        (uint32)HwCtrlIDKer) << CAN_MOIPR_TXINP_BITPOS))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3633  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3634          /*  Set the direction of hardware object to Receive. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3635          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3636                                                               CAN_MOCTR_DIR_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3637  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3638          /* Enable hardware object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3639          CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3640           (~((uint32)(CAN_MOCTR_RXEN_CLR | CAN_MOCTR_MSGVAL_CLR)))&\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3641                                                        CAN_MOCTR_MSGVAL_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3642  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3643          /* Loop through all the slave objects of this receive FIFO structure */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3644          for (SlaveIndex = (HwObjectId+1U);\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3645            (SlaveIndex<=FifoTop)&&(E_OK==RetVal);\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3646            SlaveIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3647          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3648  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3649            TestCan_SetMOAllocationErrorType(TESTCAN_RXFIFO_SLAVE_MO_ERROR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3650  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3651  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3652            /* Allocate the slave objects to associated controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3653            RetVal = Can_lAllocateHwObject(HwControllerId,(uint16)SlaveIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3654  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3655            if(E_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3656            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3657              /* Set MSGVAL and Clear RXEN bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3658              CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3659                            MO[SlaveIndex].CTR.U,(uint32)CAN_MOCTR_RX_FIFO_SLAVE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3660            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3661          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3662        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3663      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3664    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3665    return (RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3666  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3667  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3668  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3669  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3670  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3671  ** Syntax           : #if (CAN_STANDARD_ID_ONLY == STD_OFF)                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3672  **                      IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3673  **                           (                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3674  **                             const Can_RxFifoConfigType* RxFifoCfgPtr,      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3675  **                             uint16 FifoIndex,                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3676  **                             uint8 FrameType                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3677  **                           )                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3678  **                    #else                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3679  **                      IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3680  **                           (                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3681  **                             const Can_RxFifoConfigType* RxFifoCfgPtr,      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3682  **                             uint8 FifoIndex                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3683  **                           )                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3684  **                    #endif                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3685  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3686  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3687  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3688  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3689  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3690  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3691  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3692  ** Parameters (in)  : RxFifoCfgPtr - Pointer to Receive FIFO Configuration    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3693  **                    HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3694  **                    FrameType - Message Id Type (CAN_ID_MIXED not supported **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3695  **                                for Fifo hardware objects)                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3696  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3697  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3698  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3699  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3700  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3701  ** Description      : Initializes receive FIFO base message object            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3702  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3703  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3704  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3705  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3706    const Can_RxFifoConfigType* RxFifoCfgPtr,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3707    uint16 FifoIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3708    uint8 FrameType)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3709  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3710  IFX_LOCAL_INLINE void Can_lRxFifoBaseMOInit(
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3711    const Can_RxFifoConfigType* RxFifoCfgPtr,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3712    uint16 FifoIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3713  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3714  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3715    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3716    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3717  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3718    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3719    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3720          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3721    KerIdx =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3722      CAN_CALC_KERIDX(Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3723  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3724    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3725          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3726    HwObjectId = RxFifoCfgPtr[FifoIndex].HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3727    /* Set message pending number field (MPN) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3728    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].IPR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3729              CAN_MOIPR_MPN_CLEARMASK,(uint32)HwObjectId << CAN_MOIPR_MPN_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3730  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3731  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3732    /* Check if FIFO is of type EXTENDED or MIXED Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3733    if (FrameType != CAN_ID_STANDARD)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3734    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3735      /* Set ID value, ID type and message priority class (to acceptance
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3736      filtering based on CAN identifier) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3737      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3738          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3739      CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3740              (unsigned_int)(CAN_PRIORITY_ID_BASED | CAN_USE_EXTENDED_ID |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3741                                        (uint32)(RxFifoCfgPtr[FifoIndex].MsgId)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3742  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3743      /* Set filter mask value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3744      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3745          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3746      CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3747                  CAN_MOAMR_AM_CLEARMASK,(uint32)RxFifoCfgPtr[FifoIndex].MaskRef)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3748    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3749    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3750  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3751    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3752      /* If FIFO is of type STANDARD id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3753      /* Set ID value, ID type and message priority class (to acceptance
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3754      filtering based on CAN identifier) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3755      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3756          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3757      CAN_SFR_INIT_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3758              (unsigned_int)(CAN_PRIORITY_ID_BASED |((uint32)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3759                    ((RxFifoCfgPtr[FifoIndex].MsgId) <<CAN_MOAR_ID_STD_SHIFT ))));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3760      /* Set filter mask value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3761      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3762          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3763      CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AMR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3764              CAN_MOAMR_AM_CLEARMASK,(uint32)RxFifoCfgPtr[FifoIndex].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3765                                                           MaskRef << CAN_POS_18)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3766    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3767  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3768  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3769  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3770  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3771  ** Syntax           : IFX_LOCAL_INLINE void Can_lInitControllerStatus(void)   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3772  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3773  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3774  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3775  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3776  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3777  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3778  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3779  ** Parameters (in)  : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3780  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3781  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3782  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3783  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3784  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3785  ** Description      : Calls function to initialize CAN controllers            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3786  **                    Initializes CAN controller state and wakeup status      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3787  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3788  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3789  IFX_LOCAL_INLINE void Can_lInitControllerStatus(void)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3790  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3791    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3792  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3793    /* for all configured CAN controllers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3794    for(ControllerId=CAN_ZERO;
	mov	d8,#0
.L819:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3795      ControllerId<(Can_kConfigPtr->CanNumController);      (inlined)
	j	.L32

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3796      ControllerId++)      (inlined)
.L33:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3795      ControllerId<(Can_kConfigPtr->CanNumController);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3796      ControllerId++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3797    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3798      /* check if the CAN controller is activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3799      if(CAN_INVALID_HW_CONTROLLER_ID !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3800        Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
	ld.a	a15,[a12]
.L1190:
	addsc.a	a2,a15,d8,#0
	ld.bu	d4,[a2]39
.L1191:
	mov	d15,#255
.L1192:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3799      if(CAN_INVALID_HW_CONTROLLER_ID !=      (inlined)
	jeq	d15,d4,.L34
.L382:
	sha	d0,d4,#-2
.L829:
	and	d9,d4,#3
.L831:
	sha	d1,d0,#4
	extr.u	d10,d1,#0,#8
.L833:
	movh.a	a2,#@his(CAN_NUM_CONTROLLERS_IN_KERNEL)
	lea	a2,[a2]@los(CAN_NUM_CONTROLLERS_IN_KERNEL)
.L1193:
	addsc.a	a2,a2,d0,#0
	ld.bu	d1,[a2]
.L1194:
	sha	d2,d1,#1
.L1195:
	extr.u	d2,d2,#0,#8
.L1196:
	add	d2,d9
.L1197:
	add	d2,d10
.L1198:
	extr.u	d11,d2,#0,#8
.L834:
	add	d1,d9
.L1199:
	add	d1,d10
.L1200:
	extr.u	d12,d1,#0,#8
.L395:
	sha	d15,d9,#8
	movh.a	a2,#@his(CAN_KER)
	lea	a2,[a2]@los(CAN_KER)
	addsc.a	a4,a2,d0,#2
	ld.a	a2,[a4]
	addsc.a	a2,a2,d15,#0
	lea	a2,[a2]512
.L396:
	ld.a	a15,[a15]8
.L1201:
	addsc.a	a15,a15,d8,#2
.L1202:
	ld.bu	d0,[a15]
.L830:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2917    if (CAN_INTERRUPT ==      (inlined)
	jne	d0,#1,.L35
.L397:
	ld.w	d0,[a2]
.L835:
	or	d0,d0,#73
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]512,d0
.L398:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2926    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\       (inlined)
	j	.L36

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2917    if (CAN_INTERRUPT ==      (inlined)
.L35:
	ld.w	d0,[a2]
.L836:
	or	d0,d0,#65
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]512,d0

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2929    else      (inlined)
.L36:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	ld.a	a2,[a12]
	ld.a	a2,[a2]
	addsc.a	a2,a2,d8,#1
	ld.hu	d0,[a2]0
	st.w	[a15]524,d0
.L403:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]520
.L837:
	insert	d0,d0,#0,#0,#4
	or	d0,d11
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]520,d0
.L404:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]532
.L838:
	insert	d0,d0,#0,#16,#8
	movh	d1,#255
	or	d0,d1
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]532,d0
.L407:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]512
.L839:
	insert	d0,d0,#0,#6,#1
	ld.a	a15,[a4]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]512,d0
.L410:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1203:
	addsc.a	a15,a15,d4,#0
.L1204:
	st.b	[a15],d8
.L1205:
	ld.a	a15,[a12]
.L1206:
	ld.a	a15,[a15]16
.L1207:
	addsc.a	a15,a15,d8,#3
.L1208:
	ld.w	d5,[a15]
.L1209:
	mov	d6,#3
	call	Can_lSetBaudrate
.L840:
	ld.a	a15,[a12]
.L1210:
	ld.a	a15,[a15]8
.L1211:
	addsc.a	a15,a15,d8,#2
.L1212:
	ld.bu	d15,[a15]2
.L1213:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2994    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L37
.L1214:
	add	d9,d10
.L832:
	extr.u	d15,d9,#0,#8
.L413:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3801      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3802        /* Initialize the CAN controller registers */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3803        Can_lInitializeController(ControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3804          Can_kConfigPtr->CanHwControllerIdMap[ControllerId]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3805      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3806  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3807      /* Initialize the CAN controller status to STOPPED state */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3808      Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3809  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3810  #if (CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3811      /* Clear wakeup status flag */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3812      Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ZERO ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3813  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3814    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3815  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3816  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3817  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3818  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3819  ** TRACEABILITY: [cover parentID=DS_AS403_CAN384_CAN262,DS_AS403_CAN257_CAN266,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3820  DS_AS403_CAN264,DS_AS403_CAN268]                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3821  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3822  ** Syntax           : IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3823  **                                   (                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3824  **                                       uint8 Controller,                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3825  **                                       uint8 HwControllerId,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3826  **                                     Can_StateTransitionType Transition     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3827  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3828  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3829  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3830  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3831  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3832  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3833  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3834  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3835  ** Reentrancy       : Reentrant (for different controllers)                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3836  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3837  ** Parameters (in)  : Controller - Associated CAN Controller (CanControllerId)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3838  **                    HwControllerId - Associated hardware CAN Controller Id  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3839  **                    Transition - Requested transition                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3840  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3841  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3842  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3843  ** Return value     : void                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3844  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3845  ** Description      : Performs software triggered state transitions of the    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3846  **                    CAN Controller State machine when wakeup support is     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3847  **                    enabled                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3848  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3849  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3850  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOn(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3851                                            uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3852                                            Can_StateTransitionType Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3853  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3854  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3855    uint8 HohIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3856    uint8 FirstTxMo;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3857    uint8 NumTxMo;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3858  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3859    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3860    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3861  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3862    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3863    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3864    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3865  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3866    switch (Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3867    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3868    case CAN_T_START :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3869      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3870        /* Clear old transmit requests, if any */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3871  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3872        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3873          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3874        FirstTxMo = Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3875          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[2];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3876        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3877          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3878        NumTxMo = Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3879          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[3];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3880        for(HohIndex=0U; HohIndex<NumTxMo; HohIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3881        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3882          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[FirstTxMo].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3883                                               (uint32)(CAN_MOCTR_WRITE_REQ_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3884          FirstTxMo++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3885        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3886  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3887  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3888        /* Enable transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3889        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3890       CAN_NCR_TXDIS_CLEARMASK,(uint32)CAN_NODE_TX_ENABLE << CAN_NCR_TXDIS_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3891  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3892        /* Clear receive message object to avoid old (unintended) notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3893  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3894        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3895          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3896        if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3897        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3898                                                     CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3899        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3900          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3901            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3902          Can_lClearReceivedMsg(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3903        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3904        else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3905        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3906  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3907          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3908            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3909          Can_lClearReceivedMsgRuntime(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3910  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3911        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3912  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3913  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3914        /* Enable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3915        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3916                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3917  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3918        /* Set current mode to STARTED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3919        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STARTED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3920  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3921      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3922    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3923    case CAN_T_SLEEP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3924      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3925        /* Clear receive message object to avoid old (unintended) notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3926  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3927        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3928          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3929        if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3930        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3931                                                     CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3932        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3933          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3934            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3935          Can_lClearReceivedMsg(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3936        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3937        else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3938        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3939  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3940          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3941            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3942          Can_lClearReceivedMsgRuntime(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3943  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3944        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3945  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3946  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3947        /* Enable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3948        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3949                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3950  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3951        /* Clear wakeup status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3952        Can_17_MCanP_ControllerWakeupStatus[Controller] = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3953  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3954        /* Set current mode to SLEEP */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3955        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_SLEEP;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3956  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3957      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3958    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3959    case CAN_T_STOP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3960      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3961        /* Disable transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3962        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3963                        CAN_NCR_TXDIS_CLEARMASK,(uint32)CAN_NODE_TX_DISABLE << \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3964                                                             CAN_NCR_TXDIS_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3965  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3966        /* Disable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3967        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3968                                         CAN_NCR_INIT_CLEARMASK,CAN_NODE_DISABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3969  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3970        /* Set current mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3971        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3972  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3973      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3974    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3975    default:    /* case CAN_T_WAKEUP */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3976      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3977        /* Disable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3978        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3979                                         CAN_NCR_INIT_CLEARMASK,CAN_NODE_DISABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3980  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3981        /* Set current mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3982        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3983  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3984      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3985    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3986    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3987  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3988  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3989  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3990  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3991  ** TRACEABILITY: [cover parentID=DS_AS_CAN261_CAN273_CAN282,DS_AS_CAN265,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3992  DS_AS_CAN263_CAN283]                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3993  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3994  ** Syntax           : IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3995  **                                   (                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3996  **                                       uint8 Controller,                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3997  **                                       uint8 HwControllerId,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3998  **                                     Can_StateTransitionType Transition     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3999  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4000  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4001  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4002  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4003  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4004  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4005  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4006  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4007  ** Reentrancy       : Reentrant (for different controllers)                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4008  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4009  ** Parameters (in)  : Controller - Associated CAN Controller (CanControllerId)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4010  **                    HwControllerId - Associated hardware CAN Controller Id  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4011  **                    Transition - Requested transition                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4012  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4013  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4014  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4015  ** Return value     : void                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4016  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4017  ** Description      : Performs software triggered state transitions of the    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4018  **                    CAN Controller State machine when wakeup support is     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4019  **                    Disabled                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4020  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4021  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4022  IFX_LOCAL_INLINE void Can_lSetModeWuSupportOff(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4023                                             uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4024                                             Can_StateTransitionType Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4025  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4026  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4027    uint8 HohIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4028    uint8 FirstTxMo;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4029    uint8 NumTxMo;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4030  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4031    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4032    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4033  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4034    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4035    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4036    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4037  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4038    switch (Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4039    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4040    case CAN_T_START :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4041      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4042        /* Clear old transmit requests, if any */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4043  #if(CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4044        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4045          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4046        FirstTxMo = Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4047          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[2];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4048        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4049          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4050        NumTxMo = Can_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4051          CanControllerMOMapConfigPtr[Controller].ControllerMOMap[3];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4052  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4053        for(HohIndex = CAN_ZERO; HohIndex < NumTxMo; HohIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4054        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4055          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[FirstTxMo].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4056                                               (uint32)(CAN_MOCTR_WRITE_REQ_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4057          FirstTxMo++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4058        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4059  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4060  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4061        /* Clear receive message object to avoid old (unintended) notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4062  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4063        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4064          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4065        if (CAN_INTERRUPT ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4066        Can_kConfigPtr->CanEventHandlingConfigPtr[Controller].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4067                                                     CanEventType[EVENTTYPE_ONE])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4068        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4069          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4070            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4071          Can_lClearReceivedMsg(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4072        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4073        else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4074        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4075  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4076          /* Clear receive message object to avoid old (unintended)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4077            notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4078          Can_lClearReceivedMsgRuntime(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4079  #endif/*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4080        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4081  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4082  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4083        /* Enable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4084        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4085                                          CAN_NCR_INIT_CLEARMASK,CAN_NODE_ENABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4086  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4087        /* Set current mode to STARTED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4088        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STARTED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4089      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4090    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4091    case CAN_T_SLEEP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4092      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4093        /* Set current mode to SLEEP */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4094        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_SLEEP;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4095      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4096    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4097    case CAN_T_STOP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4098      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4099        /* Disable CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4100        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4101                                 CAN_NCR_INIT_CLEARMASK,(uint32)CAN_NODE_DISABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4102       /* Set current mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4103        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4104      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4105    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4106    default:  /* case CAN_T_WAKEUP */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4107      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4108        /* Set current mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4109        Can_17_MCanP_ControllerMode[Controller] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4110      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4111    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4112    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4113  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4114  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4115  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4116  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4117  ** Syntax           : void Can_lClearReceivedMsg(uint8 HwControllerId)        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4118  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4119  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4120  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4121  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4122  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4123  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4124  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4125  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4126  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4127  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4128  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4129  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4130  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4131  ** Description      : Clears receive message objects to avoid any unintended  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4132  **                    notification                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4133  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4134  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4135  static void Can_lClearReceivedMsg(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4136  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4137    volatile uint32 MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4138    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4139    uint8 PndBitPosition;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4140    uint8 MsgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4141    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4142    uint8 LoopBreak32;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4143  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4144    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4145    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4146  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4147    /* Save current MSIMASK - which needs to be restored back at the end */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4148    /* to avoid re-entrancy issue */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4149    MsiMaskCopy = CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MSIMASK.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4150  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4151    /* Loop through each of the MSPND register to check for pending notification*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4152    for (MsgIndex = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4153      MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4154      MsgIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4155    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4156      LoopBreak32 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4157      /* Load corresponding MSIMASK to register */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4158      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSIMASK.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4159                                         Can_RxMsiMask[HwControllerId][MsgIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4160  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4161      /* Check for any pending notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4162      /* To avoid infinite loop in case of hardware error, LoopBreak is used
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4163      with worst case of 32 iterations to process 32 message objects pointed
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4164      by the given MSIMASK */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4165      while (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4166              MSID[MsgIndex].U) & CAN_MSID_INDEX) !=\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4167                      CAN_MSID_NO_MSG_PND_VALUE)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4168                      && (LoopBreak32 < CAN_THIRTY_TWO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4169      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4170        /* Count the iterations */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4171        LoopBreak32++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4172        /* Get the pending bit position */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4173        PndBitPosition = (uint8)(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4174                            (CAN_KER[KerIdx]->MSID[MsgIndex].U) & CAN_MSID_INDEX);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4175  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4176        /* Calculate the message object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4177        HwObjectId = ((uint16)PndBitPosition + \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4178          (uint16)((uint16)(MsgIndex) << CAN_MOIPR_MPN_MSPND_SHIFT));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4179  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4180        /* Clear NEWDAT, RXPND and MSGLST bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4181        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4182              CAN_MOSTAT_MSGLST_CLR | CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4183  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4184        /* Clear MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4185        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSPND[MsgIndex].U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4186                                      ~((unsigned_int)CAN_ONE << PndBitPosition));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4187      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4188    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4189    /* Restore the MSIMASK value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4190    CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MSIMASK.U,MsiMaskCopy);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4191  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4192  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4193  /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4194  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4195  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4196  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4197  ** Syntax           : void Can_lClearReceivedMsgRuntime(uint8 HwControllerId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4198  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4199  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4200  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4201  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4202  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4203  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4204  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4205  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4206  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4207  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4208  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4209  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4210  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4211  ** Description      : Clears receive message objects to avoid any unintended  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4212  **                    notification                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4213  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4214  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4215  static void Can_lClearReceivedMsgRuntime(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4216  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4217    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4218    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4219    uint8 RxObjectStart = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4220    uint8 RxObjectcount = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4221    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4222    uint8 LoopIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4223    uint8 MOIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4224    uint8 MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4225  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4226     /* Calculate to which kernel the Controller belongs to */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4227     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4228  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4229     /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4230     ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4231     /* Calculate Rx MO start */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4232     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4233         PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4234     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4235                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4236     /* Calculate Rx MO Count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4237     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4238         PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4239     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4240                                     [ControllerId].ControllerMOMap[CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4241  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4242    #if(CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4243    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4244     PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4245    if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4246    Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4247    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4248      RxObjectcount = (RxObjectcount/CAN_THREE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4249      /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4250      MOIndexIncrement = CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4251    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4252    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4253    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4254    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4255      /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4256      MOIndexIncrement = CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4257    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4258  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4259    for(LoopIndex = CAN_ZERO;LoopIndex < RxObjectcount;LoopIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4260    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4261      HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4262      if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4263                (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4264      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4265         /* Clear NEWDAT, RXPND and MSGLST bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4266         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4267            (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4268      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4269  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4270      /* Increment MO Index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4271      MOIndex = MOIndex + MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4272    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4273  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4274  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4275  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4276  /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4277  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4278  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4279  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4280  ** TRACEABILITY: [cover parentID=DS_AS403_CAN409_CAN410_CAN411_CAN412]        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4281  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4282  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4283  **                                   (                                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4284  **                                       uint8 Controller,                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4285  **                                     Can_StateTransitionType Transition     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4286  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4287  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4288  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4289  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4290  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4291  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4292  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4293  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4294  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4295  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4296  ** Parameters (in)  : Controller - Associated CAN Controller Id               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4297  **                    Transition - Requested transition                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4298  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4299  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4300  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4301  ** Return value     : E_OK - Valid transition                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4302  **                    E_NOT_OK - Invalid transition                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4303  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4304  ** Description      : Checks the validity of software triggered CAN           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4305  **                    Controller state transition                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4306  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4307  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4308  IFX_LOCAL_INLINE Std_ReturnType Can_lModeDetCheck(uint8 Controller,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4309                                               Can_StateTransitionType Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4310  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4311    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4312  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4313    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4314  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4315    switch (Transition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4316    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4317    case CAN_T_START :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4318      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4319        /* if current mode is not STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4320        if (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4321        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4322          RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4323        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4324      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4325    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4326    case CAN_T_SLEEP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4327      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4328        /* if current mode is neither SLEEP nor STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4329        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_SLEEP) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4330          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4331        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4332          RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4333        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4334      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4335    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4336    case CAN_T_STOP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4337      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4338        /* if current mode is neither STARTED nor STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4339        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STARTED) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4340          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4341        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4342          RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4343        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4344      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4345    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4346    case CAN_T_WAKEUP :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4347      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4348        /* if current mode is neither SLEEP nor STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4349        if((Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_SLEEP) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4350          (Can_17_MCanP_ControllerMode[Controller] != CANIF_CS_STOPPED))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4351        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4352          RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4353        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4354      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4355    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4356    default:
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4357      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4358        /* Invalid state is requested */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4359        RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4360      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4361    break;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4362    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4363    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4364  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4365  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4366  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4367  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4368  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4369  DS_AS_CAN202_CAN049]                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4370  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4371  ** Syntax     :IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4372  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4373  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4374  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4375  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4376  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4377  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4378  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4379  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4380  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4381  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4382  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4383  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4384  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4385  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4386  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4387  ** Description      : Disables CAN Controller Interrupts                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4388  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4389  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4390  IFX_LOCAL_INLINE void Can_lDisableInterrupts (uint8 Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4391  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4392    volatile uint32 * RegAddress;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4393    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4394    uint8 BOSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4395    uint8 RxSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4396    uint32 TxSreVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4397    uint32 RxSreVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4398    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4399    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4400    uint8 IntSrcOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4401  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4402  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4403    /* Enter Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4404    SchM_Enter_Can_17_MCanP_CanDisInt();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4405  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4406    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4407    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4408      HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4409      /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4410      KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4411      HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4412      IntSrcOffset = (KerIdx << CAN_FOUR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4413  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4414      /* Store the interrupt enable/disable status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4415      /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4416      BOSrcNum =  (uint8)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4417        ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4418        + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4419      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4420  efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4421      TxSreVal = (uint32)((CAN_SFR_RUNTIME_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4422    (CAN_SRC[HwCtrlIDKer + IntSrcOffset].U) & CAN_SRC_SRE) >> CAN_SRC_SRE_BITPOS)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4423                  << CAN_TX_INT_SHIFT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4424  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4425      RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) +
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4426        HwCtrlIDKer + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4427      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4428  efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4429      RxSreVal = (uint32)((CAN_SFR_RUNTIME_READ32(CAN_SRC[RxSrcNum].U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4430                       & CAN_SRC_SRE) >> CAN_SRC_SRE_BITPOS) << CAN_RX_INT_SHIFT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4431  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4432      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4433  efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4434      Can_InterruptsEnabledStatus[Controller] = (uint8) (TxSreVal | RxSreVal |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4435                  (uint32)((CAN_SFR_RUNTIME_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4436                      (CAN_SRC[BOSrcNum].U) & CAN_SRC_SRE)>> CAN_SRC_SRE_BITPOS));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4437  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4438      /* Disable the interrupts relatd to this controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4439      /* Refer section "Service Request Node Allocation/Mapping" for SRN mapping*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4440  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4441      /* Clear transmit interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4442      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4443      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4444      RegAddress = (volatile uint32 *)(void *)&CAN_SRC[BOSrcNum];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4445      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4446                                                              CAN_SRC_MASK_NOSET)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4447      /* Clear receive interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4448      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4449      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4450      RegAddress = (volatile uint32 *)(void *)&CAN_SRC[RxSrcNum];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4451      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4452                                                              CAN_SRC_MASK_NOSET)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4453      /* Clear busoff interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4454      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4455      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4456      RegAddress =(volatile uint32 *)(void *)&CAN_SRC[HwCtrlIDKer + IntSrcOffset];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4457      CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_SRE_CLEARMASK),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4458                                                              CAN_SRC_MASK_NOSET)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4459   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4460  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4461    /* Count the number of times Can_17_MCanP_DiableControllerInterrupts API
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4462    is called */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4463    Can_17_MCanP_InterruptDisableCount[Controller]++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4464  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4465    /* Exit Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4466    SchM_Exit_Can_17_MCanP_CanDisInt();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4467  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4468  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4469  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4470  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4471  DS_AS_CAN204_CAN208_CAN050]                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4472  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4473  ** Syntax       :IFX_LOCAL_INLINE void Can_lEnableInterrupts(uint8 Controller)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4474  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4475  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4476  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4477  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4478  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4479  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4480  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4481  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4482  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4483  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4484  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4485  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4486  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4487  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4488  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4489  ** Description      : Disables CAN Controller Interrupts                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4490  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4491  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4492  IFX_LOCAL_INLINE void Can_lEnableInterrupts(uint8 Controller)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4493  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4494    volatile uint32 * RegAddress;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4495    uint32 RegSetMask;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4496    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4497    uint8 BOSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4498    uint8 RxSrcNum;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4499    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4500    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4501    uint8 IntSrcOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4502  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4503    /* Enter Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4504    SchM_Enter_Can_17_MCanP_CanEnInt();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4505  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4506    /* No action shall be performed when Can_17_MCanP_DisableControllerInterrupts
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4507    has not been called before. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4508    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4509    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4510  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4511      /* Incremental disable/enable count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4512      Can_17_MCanP_InterruptDisableCount[Controller]-- ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4513  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4514      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4515      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4516        HwControllerId = Can_kConfigPtr->CanHwControllerIdMap[Controller];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4517  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4518        /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4519        KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4520        HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4521        IntSrcOffset = (KerIdx << CAN_FOUR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4522  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4523        /* Restore the status of interrupts */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4524        /* Refer section "Service Request Node Allocation/Mapping" for
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4525        SRN mapping*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4526        BOSrcNum =  (uint8)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4527          ((uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx]) << CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4528          + (HwCtrlIDKer * CAN_HEDEVICE) + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4529        RxSrcNum =  (uint8)((CAN_NUM_CONTROLLERS_IN_KERNEL[KerIdx])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4530          + HwCtrlIDKer + IntSrcOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4531  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4532        /* Restore transmit interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4533        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4534      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4535        RegAddress = (volatile uint32 *)(void *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4536         &CAN_SRC[HwCtrlIDKer + IntSrcOffset];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4537        RegSetMask = ((((uint32)Can_InterruptsEnabledStatus[Controller] >>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4538         CAN_TX_INT_SHIFT ) & CAN_ONE)<< CAN_SRE_BIT_POS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4539        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4540                                                                      RegSetMask)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4541        /* Restore receive interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4542        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4543      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4544        RegAddress = (volatile uint32 *)(void *)&CAN_SRC[RxSrcNum];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4545        RegSetMask = ((((uint32)Can_InterruptsEnabledStatus[Controller] >>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4546         CAN_RX_INT_SHIFT ) & CAN_ONE)<< CAN_SRE_BIT_POS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4547        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4548                                                                      RegSetMask)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4549  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4550        /* Restore busoff interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4551        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4552      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4553        RegAddress = (volatile uint32 *)(void *)&CAN_SRC[BOSrcNum];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4554        RegSetMask =(((uint32)Can_InterruptsEnabledStatus[Controller] &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4555                                             CAN_ONE)<<CAN_SRE_BIT_POS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4556        CAN_SFR_RUNTIME_MODIFY32((*RegAddress),(~CAN_SRC_MASK_NOCLR),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4557                                                                      RegSetMask)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4558      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4559    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4560    /* Exit Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4561    SchM_Exit_Can_17_MCanP_CanEnInt();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4562  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4563  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4564  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4565  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4566  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4567  ** TRACEABILITY: [cover parentID=DS_AS_CAN217_CAN218_CAN219]                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4568  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4569  ** Syntax           : IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4570  **                                            (                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4571  **                                              Can_HwHandleType Hth,         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4572  **                                              const Can_PduType *PduInfo    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4573  **                                            )                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4574  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4575  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4576  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4577  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4578  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4579  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4580  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4581  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4582  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4583  ** Parameters (in)  : Hth - Hardware Transmit Handler                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4584  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4585  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4586  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4587  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4588  ** Return value     : E_OK - No Development Error                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4589  **                    E_NOT_OK - Development Error detected and reported      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4590  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4591  ** Description      : Handles DET checks for Can_17_MCanP_Write API           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4592  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4593  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4594  IFX_LOCAL_INLINE Std_ReturnType Can_lWriteDetCheck(Can_HwHandleType Hth,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4595                                                 const Can_PduType *PduInfo)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4596  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4597  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4598  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4599    const Can_TxHwObjectConfigType *TxHwObjCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4600    uint16 HthIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4601  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4602  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4603    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4604  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4605    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4606  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4607    /* Check if 'Hth' is a valid transmit handle */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4608  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4609    if((Hth < Can_kConfigPtr->CanNumRxHwObj) ||
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4610      (Hth >= (Can_kConfigPtr->CanNumRxHwObj +
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4611      Can_kConfigPtr->CanNumTxHwObj)))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4612  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4613    if (Hth >= Can_kConfigPtr->CanNumTxHwObj)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4614  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4615    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4616      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4617      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4618        CAN_SID_WRITE, CAN_E_PARAM_HANDLE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4619      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4620    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4621  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4622    /* Check if PduInfo is a null pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4623    else if (PduInfo == NULL_PTR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4624    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4625      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4626      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4627        CAN_SID_WRITE, CAN_E_PARAM_POINTER);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4628      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4629    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4630  #if (CAN_FD_ENABLE== STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4631    /* check if DLC is greater than 8 */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4632    else if (PduInfo->length > CAN_MAX_DATA_LENGTH )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4633    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4634      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4635      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4636        CAN_SID_WRITE, CAN_E_PARAM_DLC);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4637      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4638    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4639  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4640  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4641    /* Valid CAN FD lengths: 0-8,12,16,20,24,32,48,64 bytes */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4642    else if ((PduInfo->length > CAN_MAX_DATA_LENGTH)&&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4643      (PduInfo->length <= CAN_MAX_FD_LENGTH))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4644    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4645      if ((PduInfo->length > CAN_TWENTY_FOUR)?
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4646        (PduInfo->length & CAN_FIFTEEN):(PduInfo->length & CAN_THREE))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4647      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4648        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4649        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4650          CAN_SID_WRITE, CAN_E_PARAM_DLC);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4651        RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4652      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4653    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4654    else if (PduInfo->length > CAN_MAX_FD_LENGTH)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4655    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4656      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4657      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4658        CAN_SID_WRITE, CAN_E_PARAM_DLC);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4659      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4660    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4661  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4662    /* Check if sdu is a null pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4663    else if (PduInfo->sdu == NULL_PTR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4664    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4665      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4666      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4667        CAN_SID_WRITE, CAN_E_PARAM_POINTER);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4668      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4669    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4670    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4671    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4672  #if (CAN_STANDARD_ID_ONLY != STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4673      /* Extract HTH index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4674  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4675      HthIndex = (uint16)(Hth - Can_kConfigPtr->CanNumRxHwObj);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4676  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4677      HthIndex = (uint16)Hth;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4678  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4679  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4680      TxHwObjCfgPtr = Can_kConfigPtr->CanTxHwObjectConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4681  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4682      /* Check for invalid message type */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4683      /* [1] Standard id was configured for the hardware object,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4684      but extended id is requested for transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4685      /* [2] Extended id was configured for the hardware object,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4686      but standard id is requested for transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4687      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4688          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4689      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4690          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4691      if (((TxHwObjCfgPtr[HthIndex].FrameType == CAN_ID_EXTENDED) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4692        (((PduInfo->id) & CAN_EXTENDED_MSB_SET) == CAN_ZERO)) ||
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4693        ((TxHwObjCfgPtr[HthIndex].FrameType == CAN_ID_STANDARD) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4694        (((PduInfo->id) & CAN_EXTENDED_MSB_SET) != CAN_ZERO)))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4695      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4696        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4697        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4698          CAN_SID_WRITE, CAN_E_PARAM_MSGID);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4699        RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4700      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4701  #endif /* #if (CAN_STANDARD_ID_ONLY != STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4702    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4703  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4704      return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4705  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4706  #endif /* (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4707  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4708  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4709  #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4710  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4711  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR759_PR760_PR761,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4712  DS_AS_CAN011_CAN212_CAN213_CAN214_CAN275_CAN059_CAN076_CAN276]**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4713  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4714  ** Syntax           : IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4715  **                                            (                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4716  **                                              uint16 HthIndex,              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4717  **                                              uint16 HwObjectId,            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4718  **                                              const Can_PduType *PduInfo    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4719  **                                            )                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4720  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4721  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4722  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4723  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4724  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4725  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4726  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4727  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4728  ** Parameters (in)  : HthIndex - HTH index in the configuration structure     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4729  **                    HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4730  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4731  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4732  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4733  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4734  ** Return value     : CAN_OK - Write command has been accepted                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4735  **                    CAN_BUSY - No message object available or pre-emptive   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4736  **                               call of Can_17_MCanP_Write that can't be     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4737  **                               implemented re-entrant                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4738  **                    CAN_NOT_OK - development error occured                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4739  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4740  ** Description      : Programs Message Object for transmission                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4741  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4742  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4743  IFX_LOCAL_INLINE Can_ReturnType Can_lWriteMsgObj(uint16 HthIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4744                                               uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4745                                               const Can_PduType *PduInfo)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4746  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4747    volatile uint32 CanCtrStat;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4748    volatile uint32 *MoData0_3;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4749    volatile uint32 *MoData4_7;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4750  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4751    volatile uint32 *MoData8_35;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4752    volatile uint32 *MoData36_63;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4753    uint8 locindex0;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4754    uint8 locindex1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4755    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4756  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4757    uint8 Index;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4758    uint8 Index1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4759    uint16 TxMOIdx = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4760    uint16 TxHandleIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4761  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4762    #if(CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4763    #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4764    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4765    uint8 HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4766    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4767    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4768  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4769    Can_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4770    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4771    uint8 MsgDLC;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4772    uint8 Loc_Sdu;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4773  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4774    RetVal = CAN_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4775    Index1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4776  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4777    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4778    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4779          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4780    KerIdx =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4781      CAN_CALC_KERIDX(Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4782      HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4783  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4784  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4785      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4786          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4787      HwCtrlIDKer =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4788      CAN_CALC_HWCTRLID(Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4789      HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4790  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4791    /* Enter Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4792    SchM_Enter_Can_17_MCanP_CanWrMO();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4793  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4794    /* Check for free message object confgiured for the HTH */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4795  #if(CAN_MULTIPLEXED_TRANSMISSION == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4796  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4797    while
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4798    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4799          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4800      ((((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].STAT.U\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4801      )) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4802      (CAN_MOCTR_RXUPD_CLR | CAN_MOCTR_TXRQ_CLR)) != CAN_ZERO) &&\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4803      (HwObjectId <\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4804      (Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].MsgObjIdLast)))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4805    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4806      #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4807      /* Extract HwControllerId from the configuration */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4808      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4809        PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4810      HwControllerId = Can_kConfigPtr->CanTxHwObjectConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4811                                                      [HthIndex].HwControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4812      /* Extract the corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4813      ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4814      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4815      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4816      if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4817         Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4818      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4819          HwObjectId+= CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4820      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4821      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4822      #endif /* End of #if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4823      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4824          HwObjectId+= CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4825      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4826    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4827  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4828  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4829  #ifdef IFX_CAN_DEBUG
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4830    CanCtrStat = TestCan_DebugMask;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4831  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4832    CanCtrStat = (uint32)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4833    (CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4834    [HwObjectId].STAT.U) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4835    (CAN_MOCTR_RXUPD_CLR | CAN_MOCTR_TXPND_CLR |CAN_MOCTR_TXRQ_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4836  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4837  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4838    /* Check if hardware transmit object is busy with another transmit request
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4839      and Check if a pre-emptive call of Can_Write has been issued, that cannot be
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4840      handled re-entrant (i.e. a Can_17_MCanP_Write call with the same HTH)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4841    if (CanCtrStat== CAN_ZERO )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4842    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4843      /* Signal mutex for Hth */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4844      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4845                                                 ~((uint32)CAN_MOCTR_RXUPD_CLR1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4846  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4847      /* Exit Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4848      SchM_Exit_Can_17_MCanP_CanWrMO();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4849  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4850      /* The CAN driver writes ID and DLC in the appropriate hardware
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4851      registers and triggers the transmission. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4852  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4853  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4854      /* Check if extended id is requested for transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4855      if (PduInfo->id & CAN_EXTENDED_MSB_SET)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4856      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4857        /* Set ID value, ID type and message priority class  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4858        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4859          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4860        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4861        (unsigned_int) \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4862        (Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].TxObjPriorityClass |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4863                                                        CAN_USE_EXTENDED_ID));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4864        CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4865              CAN_MOAR_ID_CLEARMASK,(uint32)(PduInfo->id & CAN_PDUINFO_ID_MASK))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4866      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4867      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4868  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4869      /* Standard id is requested for transmission */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4870      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4871       /* Set ID value, ID type and message priority class  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4872       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4873         PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4874       CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4875          Can_kConfigPtr->CanTxHwObjectConfigPtr[HthIndex].TxObjPriorityClass);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4876       CAN_SFR_RUNTIME_USER_MODE_MODIFY32((CAN_KER[KerIdx]->MO[HwObjectId].AR.U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4877              ,CAN_MOAR_ID_CLEARMASK,((uint32)PduInfo->id <<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4878                                  CAN_MOAR_ID_STD_SHIFT))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4879      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4880  #if (CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4881      if (PduInfo->id & CAN_FD_INDICATOR_BIT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4882      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4883        Can_lFDFset(KerIdx,HwCtrlIDKer,HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4884      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4885      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4886      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4887         CAN_SFR_RUNTIME_USER_MODE_MODIFY32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4888           ((CAN_KER[KerIdx]->MO[HwObjectId].FCR.U),\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4889                                          CAN_MOFCR_FDF_CLEARMASK,CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4890      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4891  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4892      MsgDLC = PduInfo->length;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4893        /*Message length varies from DLC when FD is enabled and
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4894        DLC is greater than 8.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4895        DLC of 9,10,11,12,13,14,15 corresponds to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4896        message length 12,16,20,24,32,48,64 respectively */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4897  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4898      if (PduInfo->length > CAN_EIGHT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4899      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4900        MsgDLC = (PduInfo->length > CAN_TWENTY_FOUR)?
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4901          ((PduInfo->length >> CAN_FOUR)+ CAN_ELEVEN):
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4902        ((PduInfo->length >> CAN_TWO) + CAN_SIX);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4903      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4904  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4905  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4906      /* Assign DLC */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4907      CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4908                                                MO[HwObjectId].FCR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4909                                                CAN_MOFCR_DLC_CLEARMASK,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4910                                                (uint32)MsgDLC <<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4911                                                CAN_MOFCR_DLC_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4912  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4913        /* Update data bytes */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4914        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4915        uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4916      MoData0_3=\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4917          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4918        /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4919        uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4920      MoData4_7 =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4921          (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4922  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4923  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4924  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4925        /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4926        similar to a standard message object, data bytes 8-35 are stored
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4927        in the message object to which MOFGPR.BOT refers to and
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4928        data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4929        refers to Data byte 0 refers to the first byte transferred within
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4930        a CAN frame. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4931  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4932      /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4933      uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4934      MoData8_35 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4935          (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4936      /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4937      uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4938      MoData36_63 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4939        (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4940  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4941      locindex0 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4942      locindex1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4943  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4944  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4945  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4946      for(Index=CAN_ZERO; Index < PduInfo->length; Index++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4947      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4948        if (CAN_FOUR > Index)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4949        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4950  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4951          /* copy data to local variable */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4952          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4953      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4954          Loc_Sdu= PduInfo->sdu[Index];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4955            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4956      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4957            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4958      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4959          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData0_3[0],\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4960                         CAN_MO_CLEARMASK(Index),(uint32)Loc_Sdu<<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4961                                              CAN_MO_BIT_SHIFT_COUNT(Index))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4962  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4963        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4964        if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4965        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4966            /* copy data to local variable */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4967            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4968      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4969          Loc_Sdu= PduInfo->sdu[Index];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4970            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4971      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4972            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4973      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4974          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData4_7[0],\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4975                         CAN_MO_CLEARMASK(Index1),(uint32)Loc_Sdu<<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4976                                             CAN_MO_BIT_SHIFT_COUNT(Index1))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4977          Index1++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4978        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4979  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4980  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4981        if ((CAN_EIGHT <= Index)&& (CAN_THIRTY_SIX > Index))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4982        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4983          /* copy data to local variable */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4984          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4985      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4986          Loc_Sdu= PduInfo->sdu[Index];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4987            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4988      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4989            /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4990      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4991          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData8_35[locindex0],\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4992                       CAN_MO_CLEARMASK((Index % CAN_FOUR)),(uint32)Loc_Sdu<<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4993                                   CAN_MO_BIT_SHIFT_COUNT(Index % CAN_FOUR))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4994         locindex0 = Can_lindexcheck(Index,locindex0);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4995  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4996        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4997        if (CAN_THIRTY_SIX <= Index)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4998        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4999  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5000          /* copy data to local variable */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5001          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5002      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5003          Loc_Sdu= PduInfo->sdu[Index];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5004          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5005        efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5006          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5007        efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5008          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(MoData36_63[locindex1],\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5009                      CAN_MO_CLEARMASK(Index % CAN_FOUR),(uint32)Loc_Sdu<<\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5010                                   CAN_MO_BIT_SHIFT_COUNT(Index % CAN_FOUR))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5011  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5012         locindex1 = Can_lindexcheck(Index,locindex1);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5013  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5014        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5015  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5016      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5017      /* Calculate the starting value of Hw Object Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5018    TxMOIdx = HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5019    /* Calculate the  value of Tx Handler index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5020    TxHandleIdx = Can_lGetHthIndex(KerIdx,TxMOIdx);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5021      /* Mark the hardware object for transmission. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5022      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5023                                           ~((uint32)CAN_MOCTR_WRITE_REQ_CLR1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5024  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5025      /* Store the software pdu handle number */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5026    Can_SwObjectHandle[KerIdx][TxHandleIdx] = PduInfo->swPduHandle;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5027  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5028  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5029      /* Release the mutex for Hth */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5030      CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5031                                                            CAN_MOCTR_RXUPD_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5032  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5033    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5034    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5035    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5036      /* hardware object busy with another transmit request */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5037      /* Exit Critical Section */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5038      SchM_Exit_Can_17_MCanP_CanWrMO();
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5039  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5040      RetVal = CAN_BUSY ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5041    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5042    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5043  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5044  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5045  ** TRACEABILITY     :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5046  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5047  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5048  ** Syntax           : IFX_LOCAL_INLINE int8 Can_lindexcheck                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5049  **                                            (                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5050  **                                              uint8 index,                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5051  **                                              uint8 locindex,               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5052  **                                            }                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5053  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5054  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5055  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5056  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5057  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5058  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5059  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5060  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5061  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5062  ** Parameters (in)  : index - HTH index in the configuration structure        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5063  **                    locindex - Message Object Id                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5064  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5065  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5066  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5067  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5068  ** Return value     : locindex                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5069  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5070  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5071  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5072  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5073  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5074  ** Description      : API for checkng index                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5075  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5076  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5077  IFX_LOCAL_INLINE uint8 Can_lindexcheck(uint8 index,uint8 locindex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5078  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5079  if((index % CAN_FOUR)==3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5080   {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5081    locindex++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5082   }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5083  else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5084  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5085  /*Do nothing*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5086  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5087  return(locindex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5088  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5089  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5090  ** TRACEABILITY     : [   ]                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5091  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5092  ** Syntax           : IFX_LOCAL_INLINE void Can_lFDFset                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5093  **                                            (                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5094  **                                              uint8 KerIdx,                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5095  **                                              uint8 HwCtrlIDKer,            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5096  **                                              uint16 HwObjectId             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5097  **                                            )                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5098  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5099  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5100  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5101  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5102  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5103  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5104  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5105  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5106  ** Parameters (in)  : HthIndex - HTH index in the configuration structure     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5107  **                    HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5108  **                    PduInfo - Pointer to SDU user memory, DLC and Identifier**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5109  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5110  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5111  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5112  ** Return value     : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5113  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5114  ** Description      : API for setting the FD frame transmission               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5115  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5116  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5117  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5118  IFX_LOCAL_INLINE void Can_lFDFset(uint8 KerIdx,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5119                                             uint8 HwCtrlIDKer,uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5120  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5121     if((CAN_ONE == ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5122                  (CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5123                                          CAN_NCR_FDEN) >> CAN_NCR_FDEN_BITPOS)))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5124       {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5125         CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5126            FCR.U,CAN_MOFCR_FDF_CLEARMASK,(uint32)CAN_ONE << CAN_MOFCR_FDF_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5127       }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5128  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5129  #endif /*#if (CAN_FD_ENABLE== STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5130  #endif /* #if (CAN_TX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5131  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5132  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5133  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5134  ** Syntax           : static void Can_lReceiveHandler(uint8 HwControllerId)   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5135  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5136  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5137  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5138  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5139  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5140  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5141  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5142  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5143  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5144  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5145  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5146  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5147  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5148  ** Description      : - This function is the core part of the interrupt       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5149  **                    service routine for Receive Interrupt                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5150  **                    - In case of successful reception event, this           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5151  **                    function calls the function Can_lRxIsrExtractData to    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5152  **                    extract data from the message object and notify upper   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5153  **                    layer                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5154  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5155  static void Can_lReceiveHandler(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5156  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5157    volatile uint32 MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5158    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5159    uint8 PndBitPosition;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5160    uint8 MsgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5161    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5162    uint8 LoopBreak32;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5163  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5164    uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5165    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5166    LoopBreak = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5167  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5168  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5169  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5170    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5171    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5172  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5173    /* Save current MSIMASK - which needs to be restored back at the end */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5174    /* to avoid re-entrancy issue */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5175    MsiMaskCopy = (CAN_KER[KerIdx]->MSIMASK.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5176  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5177  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5178    /* Loop for all the MSPND registers corresponding to recive MOs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5179    for (MsgIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5180      ((MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5181  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5182      && (LoopBreak == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5183  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5184      );
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5185    MsgIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5186    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5187        LoopBreak32 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5188        /* Load MSIMASK corresponding to the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5189        CAN_KER[KerIdx]->MSIMASK.U = Can_RxMsiMask[HwControllerId][MsgIndex];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5190  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5191        /* Check for any penidng notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5192        /* To avoid infinite loop in case of hardware error, LoopBreak is used
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5193        with worst case of 32 iterations to process 32 message objects pointed
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5194        by the given MSIMASK */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5195        while ((((((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5196              MSID[MsgIndex].U)) & CAN_MSID_INDEX) !=\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5197                      CAN_MSID_NO_MSG_PND_VALUE)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5198                      && (LoopBreak32 < CAN_THIRTY_TWO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5199  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5200                      && (LoopBreak == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5201  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5202              )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5203        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5204          /* Count the iterations */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5205          LoopBreak32++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5206          /* Get the pending bit position */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5207          PndBitPosition = (uint8)(CAN_KER[KerIdx]->MSID[MsgIndex].U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5208                                                      CAN_MSID_INDEX;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5209  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5210          /* Calculate the message object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5211          HwObjectId = ((uint16)PndBitPosition + \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5212                 (uint16)((uint16)MsgIndex << CAN_MOIPR_MPN_MSPND_SHIFT));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5213  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5214  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5215  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5216          /* Check whether received HwObjectId is Receive FIFO base object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5217          if ((((CAN_KER[KerIdx]->MO[HwObjectId].FCR.U)) & CAN_MOFCR_MMC) ==\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5218                                                           CAN_FIFO_MOFCR_MMC_BIT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5219          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5220            /* Call receive fifo handler */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5221            Can_lRxFifoHandler(HwControllerId,HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5222  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5223            /* Reset MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5224            (CAN_KER[KerIdx]->MSPND[MsgIndex].U =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5225                                      ~((unsigned_int)CAN_ONE << PndBitPosition));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5226          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5227          else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5228  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5229          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5230            /* Extract the required infomation from the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5231  #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5232            Can_lRxIsrExtractData(HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5233            HwObjectId,MsgIndex,PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5234  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5235            Status = Can_lRxIsrExtractData(HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5236            HwObjectId,MsgIndex,PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5237            if(E_NOT_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5238            {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5239              LoopBreak = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5240            }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5241  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_OFF)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5242          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5243        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5244  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5245    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5246      CAN_KER[KerIdx]->MSIMASK.U= MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5247  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5248  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5249  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5250   /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5251  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5252  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5253  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5254  ** Syntax           : static void Can_lReceiveHandlerRuntime\                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5255  **                                                     (uint8 HwControllerId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5256  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5257  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5258  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5259  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5260  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5261  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5262  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5263  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5264  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5265  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5266  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5267  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5268  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5269  ** Description      :
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5270  **                 - In case of successful reception event, this              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5271  **                function calls the function Can_lRxIsrExtractData_runtime to**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5272  **                extract data from the message object and notify upper       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5273  **                layer                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5274  **                - This function is called by the polling function           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5275  **                Can_17_MCanP_MainFunction_Read for controllers              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5276  **                configured with CanRxProcessing as POLLING                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5277  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5278  ******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5279  static void Can_lReceiveHandlerRuntime(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5280  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5281     uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5282     uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5283     uint8 RxObjectStart = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5284     uint8 RxObjectcount = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5285     uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5286     uint8 LoopIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5287     uint8 MOIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5288     uint8 MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5289  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5290     #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5291     uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5292     Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5293     LoopBreak = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5294     #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5295  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5296     /* Calculate to which kernel the Controller belongs to */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5297     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5298     /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5299     ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5300     /* Calculate Rx MO start */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5301     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5302       PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5303     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5304                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5305     /* Calculate Rx MO Count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5306     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5307      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5308     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5309                                     [ControllerId].ControllerMOMap[CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5310     #if(CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5311     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5312      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5313     if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5314     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5315     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5316       RxObjectcount = (RxObjectcount/CAN_THREE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5317       /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5318       MOIndexIncrement = CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5319     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5320     else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5321     #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5322     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5323       /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5324       MOIndexIncrement = CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5325     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5326  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5327     for(LoopIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5328     ((LoopIndex < RxObjectcount)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5329     #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5330      && (LoopBreak == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5331     #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5332     );LoopIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5333     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5334        /* Calculate Rx Hardware object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5335        HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5336        if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5337                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5338       {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5339         /* Extract the required infomation from the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5340         #if (CAN_DEV_ERROR_DETECT == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5341         Can_lRxIsrExtractDataRuntime(HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5342           HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5343         #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5344         Status = Can_lRxIsrExtractDataRuntime(HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5345             HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5346         if(E_NOT_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5347         {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5348           LoopBreak = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5349         }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5350         #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5351       }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5352  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5353       /* Increment MO Index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5354       MOIndex = MOIndex + MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5355     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5356  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5357  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5358  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5359  /* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5360  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5361  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5362  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5363  ** TRACEABILITY     : [cover parentID=DS_NAS_CAN_PR766_PR768_1,DS_NAS_CAN_PR97,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5364  DS_AS403_CAN395_1,DS_AS403_CAN423_1,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5365  DS_AS_CAN060_CAN299_CAN300_1,DS_AS_CAN012_1,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5366  DS_AS_CAN443_CAN444_CAN396_1,DS_AS403_CAN279]                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5367  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5368  ** Syntax           :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5369  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5370  **      #if (CAN_DEV_ERROR_DETECT == STD_ON)                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5371  **      IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5372  **                                     (                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5373  **                                       uint8 HwControllerId,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5374  **                                       uint16 HwObjectId,                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5375  **                                       uint8 MsgIndex,                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5376  **                                       uint8 PndBitPosition                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5377  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5378  **      #else                                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5379  **      IFX_LOCAL_INLINE void Can_lRxIsrExtractData                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5380  **                           (                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5381  **                             uint8 HwControllerId,                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5382  **                             uint16 HwObjectId,                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5383  **                             uint8 MsgIndex,                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5384  **                             uint8 PndBitPosition                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5385  **                           )                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5386  **      #endif                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5387  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5388  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5389  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5390  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5391  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5392  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5393  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5394  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5395  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5396  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5397  **                    MsgIndex - MSPND Register Index                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5398  **                    PndBitPosition - Bit Position within MSPND Register     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5399  **                    HwControllerId                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5400  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5401  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5402  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5403  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5404  ** Description      : This function extracts data from the message object     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5405  **                    and notifies upper layer                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5406  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5407  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5408  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5409  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractData(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5410                                                    uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5411                                                    uint8 MsgIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5412                                                    uint8 PndBitPosition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5413  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5414  IFX_LOCAL_INLINE void Can_lRxIsrExtractData(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5415                                          uint16 HwObjectId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5416                                          uint8 MsgIndex,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5417                                          uint8 PndBitPosition)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5418  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5419  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5420  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5421    const uint8 CAN_MAPPING_DLC_FD_LENGTH[]= {12U,16U,20U,24U,32U,48U,64U};
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5422  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5423  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5424    uint32 TempMoctr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5425    Can_IdType MessageId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5426    uint8 MessageDlc;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5427    uint8 MessageLength;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5428    uint8 LoopBreak2; /* To avoid infinte loop */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5429    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5430    uint16 Hrh = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5431  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U) &&  (CAN_STANDARD_ID_ONLY == STD_OFF))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5432    const Can_RxHwObjectConfigType *RxHwObjCfgPtr = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5433                                          Can_kConfigPtr->CanRxHwObjectConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5434    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5435  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5436  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5437    boolean RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5438  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5439  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5440    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5441  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5442    Status = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5443    MessageId = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5444  #if ((CAN_FD_MSG_BYTES_LEN_SUPPORT == STD_ON) && (CAN_FD_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5445    MessageLength = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5446  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5447    MessageDlc = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5448  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5449  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5450    LoopBreak2 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5451  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5452    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5453    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5454  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5455  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5456    Hrh = Can_lCalculateHrhId(KerIdx,HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5457  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5458    do
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5459    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5460  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5461      /*check for message object over-writing or data inconsistency.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5462        The condition (LoopBreak2 != CAN_ZERO) indicates data inconsistency, i.e.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5463        the message object is getting updated while the data is being copied to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5464        the user buffer. Since the data in the user buffer is inconsistent in
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5465        this case, CanIf_RxIndication and Receive L-PDU callout will not be
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5466        called, if DET enabled; The function is exited to avoid blocking.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5467        According to AUTOSAR: "The system designer shall assure that
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5468        the runtime for message reception (interrupt driven or polling)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5469        correlates with the fastest possible reception in the system."
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5470        This also implies the need for having correct interrupt priorities to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5471        ensure that the interrupt latency is within tolerable limits*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5472      if (((CAN_KER[KerIdx]->MO[HwObjectId].STAT.U & CAN_MOSTAT_MSGLST_CLR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5473           != CAN_ZERO) || (LoopBreak2 != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5474      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5475        /* Clear MSGLST, NEWDAT and RXPND */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5476  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5477        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U = (CAN_MOSTAT_MSGLST_CLR |
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5478          CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5479  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5480        /* Clear MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5481        CAN_KER[KerIdx]->MSPND[MsgIndex].U =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5482          ~((unsigned_int)CAN_ONE << PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5483  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5484        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5485        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5486          CAN_SID_RECEIVEISR, CAN_E_DATALOST);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5487        Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5488        /* set the loop break value to immediately exit from the loop */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5489        LoopBreak2 = CAN_EXTRACTDATA_LOOP_CNT + CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5490      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5491      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5492  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5493      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5494        /* Clear NEWDAT, RXPND and MSGLST */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5495        CAN_KER[KerIdx]->MO[HwObjectId].CTR.U =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5496          (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5497  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5498  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5499        /* Check if extended id is received */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5500        if ((((CAN_KER[KerIdx]->MO[HwObjectId].AR.U) & CAN_MOAR_IDE ) >> \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5501                                      CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5502        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5503          /* extract message Id and set MSBit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5504          MessageId = (Can_IdType)(((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5505                      MO[HwObjectId].AR.U) & CAN_MOAR_ID) | CAN_EXTENDED_MSB_SET);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5506        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5507        else /* Standard frame */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5508  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5509        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5510          /* extract message id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5511          MessageId =(Can_IdType)(uint32)((\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5512          (CAN_KER[KerIdx]->MO[HwObjectId].AR.U) & CAN_MOAR_ID) >>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5513              CAN_MOAR_ID_STD_SHIFT) ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5514        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5515  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U) &&  (CAN_STANDARD_ID_ONLY == STD_OFF))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5516        /* check whether MO is in mixed mode */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5517       /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5518       PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5519        if(RxHwObjCfgPtr[Hrh].FrameType == CAN_ID_MIXED)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5520        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5521          /* Re-initialize with the configured message id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5522          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5523          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5524          CAN_KER[KerIdx]->MO[HwObjectId].AR.U =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5525               (unsigned_int)((CAN_PRIORITY_ID_BASED |CAN_USE_EXTENDED_ID |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5526                   (RxHwObjCfgPtr[Hrh].MsgId)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5527        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5528  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5529  #if (CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5530        if(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U & CAN_FCR_FDF_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5531        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5532          MessageId |= CAN_FD_INDICATOR_BIT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5533        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5534  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5535        /* Extract DLC */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5536        MessageDlc = (uint8) (((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5537                  MO[HwObjectId].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5538        MessageLength = MessageDlc;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5539        /* Message length varies from DLC when FD is enabled and it can go
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5540        beyond 8. DLC of 9,10,11,12,13,14,15 corresponds to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5541        message length 12,16,20,24,32,48,64 respectively */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5542        if(MessageDlc > CAN_EIGHT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5543        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5544  #if (CAN_FD_ENABLE== STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5545          MessageLength = CAN_EIGHT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5546          MessageDlc = CAN_EIGHT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5547  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5548          MessageLength = CAN_MAPPING_DLC_FD_LENGTH[MessageDlc-CAN_NINE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5549  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5550        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5551        /* Read messages received from message buffer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5552        Can_lReadMsgObject(HwControllerId,HwObjectId,MessageLength);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5553        LoopBreak2++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5554  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5555        /* Clear MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5556        CAN_KER[KerIdx]->MSPND[MsgIndex].U =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5557          ~((unsigned_int)CAN_ONE << PndBitPosition);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5558      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5559  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5560      /* If NEWDAT or RXUPD bit is set --> Message object got/getting updated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5561      /* In such a case the extracted information will not be consistent */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5562      /* Hence, information needs to be re-extracted from the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5563  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5564  #ifdef IFX_CAN_DEBUG03
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5565      TempMoctr = CAN_KER[KerIdx]->MO[HwObjectId].STAT.U | TestCan_DebugMask03;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5566  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5567      TempMoctr = CAN_KER[KerIdx]->MO[HwObjectId].STAT.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5568  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5569    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5570      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5571      &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5572      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5573  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5574  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5575    /*If MSGLST or Data inconsistency happend, DET reported and exit from function
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5576      by discarding the data  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5577    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5578  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5579    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5580  #if ((CAN_FD_MSG_BYTES_LEN_SUPPORT == STD_ON) && (CAN_FD_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5581      /* message length passed to CanIf should be DLC if FD_MSG_LENGTH support
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5582      disabled  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5583      MessageDlc = MessageLength;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5584  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5585  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5586      /* Call receive L-PDU callout function if configured */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5587      RetVal = Can_kConfigPtr->Can_LPduRxCalloutFuncPtr((Can_HwHandleType)Hrh,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5588        MessageId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5589        MessageDlc,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5590        &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5591  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5592      /* Notification function CanIf_RxIndication should be called only if the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5593      callout function returns true */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5594      if(TRUE == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5595  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5596      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5597        /* Call the notification function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5598        CanIf_RxIndication((Can_HwHandleType)(Hrh),
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5599          MessageId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5600          MessageDlc,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5601          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5602      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5603    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5604  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5605    return (Status);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5606  #endif /*#if (CAN_DEV_ERROR_DETECT == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5607  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5608  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5609  ** TRACEABILITY     : [cover parentID=]                                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5610  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5611  ** Syntax           :IFX_LOCAL_INLINE void Can_lReadMsgObject\                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5612  **                          (uint8 HwControllerId,\                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5613  **                              uint16 HwObjectId,uint8 MessageLength)        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5614  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5615  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5616  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5617  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5618  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5619  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5620  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5621  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5622  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5623  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5624  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5625  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5626  **                    HwControllerId                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5627  **                    MessageLength
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5628  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5629  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5630  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5631  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5632  ** Description      : This function extracts data from the message object     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5633  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5634  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5635  IFX_LOCAL_INLINE void Can_lReadMsgObject(uint8 HwControllerId,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5636                                           uint16 HwObjectId,uint8 MessageLength)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5637  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5638  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5639    volatile uint32 *MoData0_3;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5640    volatile uint32 *MoData4_7;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5641    #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5642    volatile uint32 *MoData8_35;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5643    volatile uint32 *MoData36_63;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5644    uint8 locMoDataIndex0;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5645    uint8 locMoDataIndex1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5646    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5647    uint8 MoDataIndex1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5648    uint8 MoDataIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5649    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5650  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5651    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5652    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5653    /* Extract received data bytes */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5654    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5655    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5656    MoData0_3 =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5657      (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5658    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5659    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5660    MoData4_7 =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5661      (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5662  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5663    #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5664    /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5665    similar to a standard message object, data bytes 8-35 are stored
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5666    in the message object to which MOFGPR.BOT refers to and
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5667    data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5668    refers to Data byte 0 refers to the first byte transferred within a
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5669    CAN frame. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5670    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5671    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5672    MoData8_35 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5673      (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5674    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5675    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5676    MoData36_63 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5677      (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5678  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5679    locMoDataIndex0 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5680    locMoDataIndex1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5681    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5682  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5683    MoDataIndex1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5684    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5685    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5686      if (CAN_FOUR > MoDataIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5687      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5688        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5689        efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5690        Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5691                (uint8)(((MoData0_3[0])\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5692                              & CAN_MO_SETMASK(MoDataIndex))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5693                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5694      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5695      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5696        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5697          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5698          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5699          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5700                (uint8)(((MoData4_7[0])\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5701                              & CAN_MO_SETMASK(MoDataIndex1))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5702                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5703          MoDataIndex1++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5704        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5705      #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5706      if ((CAN_EIGHT <= MoDataIndex)&& (CAN_THIRTY_SIX > MoDataIndex))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5707        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5708          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5709          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5710          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5711                (uint8)(((MoData8_35[locMoDataIndex0])\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5712                              & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5713                                CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5714  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5715          locMoDataIndex0 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex0);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5716        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5717      if (CAN_THIRTY_SIX <= MoDataIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5718        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5719          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5720          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5721          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5722                     (uint8)(((MoData36_63[locMoDataIndex1])\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5723                          & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5724                          CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5725           locMoDataIndex1 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex1);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5726        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5727      #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5728    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5729  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5730  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5731   /* #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U)) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5732  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5733  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5734  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5735  ** TRACEABILITY     : [cover parentID= DS_AS403_CAN395_2,DS_AS403_CAN423_2,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5736  DS_NAS_CAN_PR766_PR768_2,DS_AS_CAN443_CAN444_CAN396_2,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5737  DS_AS_CAN060_CAN299_CAN300_2,DS_AS_CAN012_2]   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5738  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5739  ** Syntax           :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5740  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5741  **      #if (CAN_DEV_ERROR_DETECT == STD_ON)                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5742  **      IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5743  **                                     (                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5744  **                                       uint8 HwControllerId,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5745  **                                       uint16 HwObjectId
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5746  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5747  **      #else                                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5748  **      IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5749  **                           (                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5750  **                             uint8 HwControllerId,                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5751  **                             uint16 HwObjectId
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5752  **                           )                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5753  **      #endif                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5754  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5755  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5756  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5757  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5758  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5759  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5760  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5761  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5762  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5763  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5764  **                    HwControllerId                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5765  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5766  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5767  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5768  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5769  ** Description      : This function extracts data from the message object     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5770  **                    and notifies upper layer                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5771  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5772  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5773  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5774  IFX_LOCAL_INLINE Std_ReturnType Can_lRxIsrExtractDataRuntime
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5775                                                   (uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5776                                                    uint16 HwObjectId
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5777                                                    )
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5778  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5779  IFX_LOCAL_INLINE void Can_lRxIsrExtractDataRuntime(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5780                                          uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5781  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5782  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5783  #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5784    const uint8 CAN_MAPPING_DLC_FD_LENGTH[]= {12U,16U,20U,24U,32U,48U,64U};
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5785  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5786  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5787    uint32 TempMoctr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5788    Can_IdType MessageId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5789    uint8 MessageDlc;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5790    uint8 MessageLength;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5791    uint8 LoopBreak2; /* To avoid infinte loop */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5792    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5793    uint16 Hrh = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5794  #if(CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5795    const Can_RxHwObjectConfigType *RxHwObjCfgPtr = \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5796                                      Can_kConfigPtr->CanRxHwObjectConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5797  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5798  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5799    boolean RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5800  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5801  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5802    Std_ReturnType Status;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5803  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5804    Status = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5805    MessageId = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5806  #if ((CAN_FD_MSG_BYTES_LEN_SUPPORT == STD_ON) && (CAN_FD_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5807    MessageLength = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5808  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5809    MessageDlc = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5810  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5811  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5812    LoopBreak2 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5813  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5814    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5815    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5816  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5817    /* Find the Hrh ID mapped to Hw MO Buffer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5818    Hrh = Can_lCalculateHrhId(KerIdx,HwObjectId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5819    do
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5820    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5821  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5822      /*Check for message object over-writing or data inconsistency.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5823        The condition (LoopBreak2 != CAN_ZERO) indicates data inconsistency, i.e.,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5824        the message object is getting updated while the data is being copied to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5825        the user buffer. Since the data in the user buffer is inconsistent in
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5826        this case, CanIf_RxIndication and Receive L-PDU callout will not be
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5827        called, if DET enabled; The function is exited to avoid blocking.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5828        According to AUTOSAR: "The system designer shall assure that
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5829        the runtime for message reception (interrupt driven or polling)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5830        correlates with the fastest possible reception in the system."
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5831        This also implies the need for having correct interrupt priorities to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5832        ensure that the interrupt latency is within tolerable limits */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5833      if(((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5834                 MO[HwObjectId].STAT.U) & CAN_MOSTAT_MSGLST_CLR) != CAN_ZERO) ||
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5835        (LoopBreak2 != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5836      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5837        /* Clear MSGLST, NEWDAT and RXPND */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5838         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5839                               (CAN_MOSTAT_MSGLST_CLR |CAN_MOCTR_NEWDAT_CLR |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5840                                CAN_MOCTR_RXPND_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5841  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5842        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5843        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5844        CAN_SID_RECEIVEISR, CAN_E_DATALOST);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5845        Status = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5846        /* set the loop break value to immediately exit from the loop */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5847        LoopBreak2 = CAN_EXTRACTDATA_LOOP_CNT + CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5848      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5849      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5850  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5851      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5852        /* Clear NEWDAT, RXPND and MSGLST */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5853        CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5854            (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5855  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5856  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5857          /* Check if extended id is received */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5858          if (((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5859                                  MO[HwObjectId].AR.U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5860                            & CAN_MOAR_IDE ) >> CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5861          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5862            /* extract message Id and set MSBit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5863            MessageId =(Can_IdType)((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5864                                                     (CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5865                      MO[HwObjectId].AR.U) & CAN_MOAR_ID) | CAN_EXTENDED_MSB_SET);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5866          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5867          else /* Standard frame */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5868  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5869          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5870             /* extract message id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5871          MessageId =(Can_IdType)(uint32)((\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5872          CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5873                                          &CAN_MOAR_ID) >>CAN_MOAR_ID_STD_SHIFT);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5874          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5875  #if(CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5876          /* check whether MO is in mixed mode */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5877          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5878          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5879          if(RxHwObjCfgPtr[Hrh].FrameType == CAN_ID_MIXED)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5880          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5881             /* Re-initialize with the configured message id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5882             /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5883              PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5884          CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].AR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5885                 (unsigned_int)(CAN_PRIORITY_ID_BASED |CAN_USE_EXTENDED_ID |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5886                (RxHwObjCfgPtr[Hrh].MsgId)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5887          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5888  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5889  #if (CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5890          if(CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5891            (CAN_KER[KerIdx]->MO[HwObjectId].FCR.U) & CAN_FCR_FDF_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5892          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5893            MessageId |= CAN_FD_INDICATOR_BIT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5894          }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5895  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5896          /* Extract DLC */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5897          MessageDlc = (uint8)((CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5898               ->MO[HwObjectId].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5899          MessageLength = MessageDlc;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5900          /* Message length varies from DLC when FD is enabled and
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5901          DLC is greater than 8.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5902          DLC of 9,10,11,12,13,14,15 corresponds to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5903          message length 12,16,20,24,32,48,64 respectively */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5904          if(MessageDlc > CAN_EIGHT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5905          {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5906  #if (CAN_FD_ENABLE== STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5907            MessageLength = CAN_EIGHT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5908            MessageDlc = CAN_EIGHT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5909  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5910            MessageLength = CAN_MAPPING_DLC_FD_LENGTH[MessageDlc-CAN_NINE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5911  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5912           }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5913          /* Read messages received from message buffer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5914          Can_lReadMsgObjectRuntime(HwControllerId,HwObjectId,MessageLength);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5915          LoopBreak2++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5916  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5917      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5918      /* If NEWDAT or RXUPD bit is set --> Message object got/getting updated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5919      /* In such a case the extracted information will not be consistent */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5920      /* Hence, information needs to be re-extracted from the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5921  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5922  #ifdef IFX_CAN_DEBUG03
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5923      TempMoctr =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5924       (CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_KER[KerIdx]->MO[HwObjectId].STAT.U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5925                                                          | TestCan_DebugMask03);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5926  #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5927      TempMoctr = CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5928                                         (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5929  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5930  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5931    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5932      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5933      &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5934      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5935  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5936  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5937    /*If MSGLST or Data inconsistency happend, DET reported and exit from function
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5938      by discarding the data  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5939    if(E_OK == Status)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5940  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5941    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5942  #if ((CAN_FD_MSG_BYTES_LEN_SUPPORT == STD_ON) && (CAN_FD_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5943      /* message length passed to CanIf should be DLC if FD_MSG_LENGTH support
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5944      disabled  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5945      MessageDlc = MessageLength;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5946  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5947  #if (CAN_LPDU_RX_CALLOUT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5948      /* Call receive L-PDU callout function if configured */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5949      RetVal = Can_kConfigPtr->Can_LPduRxCalloutFuncPtr((Can_HwHandleType)Hrh,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5950        MessageId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5951        MessageDlc,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5952        &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5953  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5954      /* Notification function CanIf_RxIndication should be called only if the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5955      callout function returns true */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5956      if(TRUE == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5957  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5958      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5959        /* Call the notification function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5960        CanIf_RxIndication((Can_HwHandleType)(Hrh),
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5961          MessageId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5962          MessageDlc,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5963          &Can_RxMessageData[HwControllerId][CAN_ZERO]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5964  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5965      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5966    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5967  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5968  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5969    return (Status);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5970  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5971  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5972  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5973  ** TRACEABILITY     : [cover parentID=]                                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5974  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5975  ** Syntax           :IFX_LOCAL_INLINE void Can_lReadMsgObjectRuntime          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5976  **                          (uint8 HwControllerId,\                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5977  **                              uint16 HwObjectId,uint8 MessageLength)        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5978  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5979  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5980  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5981  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5982  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5983  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5984  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5985  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5986  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5987  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5988  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5989  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5990  **                    HwControllerId                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5991  **                    MessageLength
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5992  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5993  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5994  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5995  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5996  ** Description      : This function extracts data from the message object     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5997  **                    in polling mode                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5998  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5999  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6000  IFX_LOCAL_INLINE void Can_lReadMsgObjectRuntime(uint8 HwControllerId,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6001                                           uint16 HwObjectId,uint8 MessageLength)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6002  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6003  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6004    volatile uint32 *MoData0_3;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6005    volatile uint32 *MoData4_7;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6006    #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6007    volatile uint32 *MoData8_35;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6008    volatile uint32 *MoData36_63;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6009    uint8 locMoDataIndex0;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6010    uint8 locMoDataIndex1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6011    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6012    uint8 MoDataIndex1;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6013    uint8 MoDataIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6014    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6015  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6016    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6017    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6018    /* Extract received data bytes */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6019    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6020    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6021    MoData0_3 =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6022      (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAL.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6023    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6024    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6025    MoData4_7 =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6026      (volatile uint32 *)(void *)&CAN_KER[KerIdx]->MO[HwObjectId].DATAH.U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6027  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6028    #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6029    /* For a 64 byte message, data bytes 0-7 are stored in the message object,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6030    similar to a standard message object, data bytes 8-35 are stored
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6031    in the message object to which MOFGPR.BOT refers to and
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6032    data bytes 36-63 are stored in the message object to which MOFGPR.TOP
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6033    refers to Data byte 0 refers to the first byte transferred within a
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6034    CAN frame. */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6035    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6036    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6037    MoData8_35 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6038      (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6039    /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6040    uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6041    MoData36_63 = (volatile uint32 *)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6042      (void *)&CAN_KER[KerIdx]->MO[HwObjectId + CAN_TWO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6043  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6044    locMoDataIndex0 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6045    locMoDataIndex1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6046    #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6047  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6048    MoDataIndex1 = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6049    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6050    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6051      if (CAN_FOUR > MoDataIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6052      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6053        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6054        efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6055        Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6056             (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32(MoData0_3[0]))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6057                     & CAN_MO_SETMASK(MoDataIndex))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6058                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6059      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6060      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6061        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6062          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6063          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6064          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6065             (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32(MoData4_7[0]))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6066                     & CAN_MO_SETMASK(MoDataIndex1))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6067                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex1));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6068          MoDataIndex1++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6069        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6070      #if (CAN_FD_ENABLE== STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6071      if ((CAN_EIGHT <= MoDataIndex)&& (CAN_THIRTY_SIX > MoDataIndex))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6072        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6073          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6074          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6075          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6076           (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6077                          (MoData8_35[locMoDataIndex0]))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6078                        & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6079                        CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6080  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6081          locMoDataIndex0 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex0);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6082        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6083      if (CAN_THIRTY_SIX <= MoDataIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6084        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6085          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6086          efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6087          Can_RxMessageData[HwControllerId][MoDataIndex] =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6088                   (uint8)(((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6089                         (MoData36_63[locMoDataIndex1]))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6090                      & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6091                      CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6092           locMoDataIndex1 = Can_lDataIndexMapping(MoDataIndex,locMoDataIndex1);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6093        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6094      #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6095    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6096  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6097  #endif /*#if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6098  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6099  #if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6100  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6101  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6102  ** Syntax           :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6103  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6104  **      IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6105  **                                     (                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6106  **                                       uint8 MoDataIndex,                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6107  **                                       uint8 locMoDataIndex,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6108  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6109  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6110  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6111  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6112  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6113  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6114  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6115  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6116  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6117  ** Parameters (in)  : MoDataIndex                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6118  **                    locMoDataIndex                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6119  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6120  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6121  ** Return value     : locMoDataIndex                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6122  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6123  ** Description      : API for checking the index                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6124  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6125  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6126  IFX_LOCAL_INLINE uint8 Can_lDataIndexMapping(uint8 MoDataIndex,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6127                                                            uint8 locMoDataIndex)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6128  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6129    if((MoDataIndex % CAN_FOUR)==3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6130     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6131      locMoDataIndex++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6132     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6133    return(locMoDataIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6134  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6135  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6136  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6137  ** Syntax           :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6138  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6139  **      IFX_LOCAL_INLINE uint16 Can_lCalculateHrhId                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6140  **                                     (                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6141  **                                       uint8 KerIdx,                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6142  **                                       uint16 HwObjectId                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6143  **                                     )                                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6144  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6145  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6146  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6147  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6148  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6149  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6150  ** Reentrancy       : non Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6151  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6152  ** Parameters (in)  : KerIdx                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6153  **                    HwObjectId                                              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6154  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6155  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6156  ** Return value     : Hrh                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6157  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6158  ** Description      : This function used for calculating hrhid                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6159  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6160  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6161  IFX_LOCAL_INLINE uint16 Can_lCalculateHrhId(uint8 KerIdx, uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6162  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6163    uint16 Hrh = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6164  #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6165    uint16 HrhOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6166    uint16 RxObjOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6167  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6168  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6169  #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6170  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6171  #if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6172      RxObjOffset = Can_kConfigPtr->CanRxHwObjCntKer[KerIdx];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6173    #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6174      RxObjOffset = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6175    #endif /*#if (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6176    #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6177    UNUSED_PARAMETER(KerIdx)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6178    #endif /*#if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6179  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6180    /* Calculate the starting value of HW Object Id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6181  #if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6182    HrhOffset = HwObjectId - RxObjOffset;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6183    Hrh = Can_lGetHrhIndex(KerIdx,HrhOffset);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6184    #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6185    UNUSED_PARAMETER(HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6186    #endif /*#if ((CAN_RX_OBJECT_KER0 > 0U) || (CAN_RX_OBJECT_KER1 > 0U))*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6187    return(Hrh);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6188  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6189  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6190  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6191  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6192  ** TRACEABILITY: [cover parentID=DS_AS_CAN364_CAN269_CAN270_CAN271]           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6193  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6194  ** Syntax           : static void Can_lWakeupHandler(uint8 HwControllerId)    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6195  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6196  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6197  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6198  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6199  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6200  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6201  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6202  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6203  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6204  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6205  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6206  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6207  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6208  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6209  ** Description      : This function is the core part of the interrupt         **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6210  **                    service routine for Receive Interrupt used for detection**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6211  **                    and reporting of wakeup event                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6212  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6213  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6214  static void Can_lWakeupHandler(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6215  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6216    volatile uint32 MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6217    EcuM_WakeupSourceType WakeupSourceId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6218    uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6219    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6220    uint8 PndBitPosition;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6221    uint8 MsgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6222    uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6223    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6224    uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6225  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6226    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6227    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6228    HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6229  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6230    /* Save current MSIMASK - which needs to be restored back at the end */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6231    /* to avoid re-entrancy issue */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6232    MsiMaskCopy =CAN_SFR_RUNTIME_USER_MODE_READ32(CAN_MSIMASK.U) ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6233    LoopBreak = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6234  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6235    /* Extract the coreesponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6236    ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6237  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6238    /* Loop through all MSPND registers configured for receive message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6239    for (MsgIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6240      ((MsgIndex <= Can_kConfigPtr->CanRxLastMspndIdx) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6241      (LoopBreak == CAN_ZERO));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6242    MsgIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6243    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6244        /* Load the MSIMASK corresponding to the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6245        (CAN_KER[KerIdx]->MSIMASK.U = Can_RxMsiMask[HwControllerId][MsgIndex]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6246  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6247        /* Check for any pending notification */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6248        if ((((CAN_KER[KerIdx]->MSID[MsgIndex].U))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6249                                & CAN_MSID_INDEX) !=CAN_MSID_NO_MSG_PND_VALUE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6250        {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6251          /* Get the pending bit position */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6252          PndBitPosition = (uint8)(((CAN_KER[KerIdx]->MSID[MsgIndex].U))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6253                                & CAN_MSID_INDEX);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6254  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6255          /* Calculate the message object id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6256          HwObjectId = ((uint16)PndBitPosition + (uint16)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6257            ((uint16)(MsgIndex) << CAN_MOIPR_MPN_MSPND_SHIFT));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6258  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6259          /* Clear NEWDAT, RXPND and MSGLST bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6260          CAN_KER[KerIdx]->MO[HwObjectId].CTR.U =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6261             (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6262  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6263          /* Clear MSPND bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6264          CAN_KER[KerIdx]->MSPND[MsgIndex].U = (~((unsigned_int)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6265                                        CAN_ONE << PndBitPosition));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6266  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6267          /* Extract corresponding wakeup source id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6268          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6269            PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6270          WakeupSourceId = (EcuM_WakeupSourceType)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6271            Can_kConfigPtr->CanWakeupSourceIdPtr[ControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6272  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6273          /* Disable the CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6274          CAN_KER[KerIdx]->N[HwCtrlIDKer].CR.U = ((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6275                                     N[HwCtrlIDKer].CR.U &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6276                                     CAN_NCR_INIT_CLEARMASK) | CAN_NODE_DISABLE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6277  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6278          /* Set CAN controller mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6279          Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6280  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6281          /* Set CAN controller wakeup status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6282          Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6283  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6284          /* Call EcuM function to check for wakeup event */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6285          EcuM_CheckWakeup(WakeupSourceId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6286  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6287          /* Exit the loop to avoid multiple wakeup notifications for the same
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6288          CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6289          LoopBreak = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6290        }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6291    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6292    /* Restore the MSIMASK value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6293  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6294      CAN_KER[KerIdx]->MSIMASK.U = MsiMaskCopy;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6295  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6296  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6297  /*#if(CAN_WAKEUP_CONFIGURED == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6298  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6299  /*#if((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)||(CAN_NUM_RX_FIFO_MAX > 0U))*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6300  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6301  #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6302  #if(CAN_WAKEUP_CONFIGURED == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6303  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6304  ** TRACEABILITY: [cover parentID=]                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6305  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6306  ** Syntax           : static void Can_lWakeupHandlerRuntime\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6307                                                      (uint8 HwControllerId)    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6308  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6309  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6310  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6311  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6312  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6313  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6314  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6315  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6316  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6317  ** Parameters (in)  : HwControllerId - Associated CAN Controller              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6318  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6319  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6320  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6321  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6322  ** Description      : - This function is  called by the polling function      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6323  **                    Can_17_MCanP_MainFunction_Wakeup for controllers        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6324  **                    configured with CanWakeupProcessing as POLLING          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6325  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6326  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6327  static void Can_lWakeupHandlerRuntime(uint8 HwControllerId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6328  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6329    uint16 HwObjectId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6330   uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6331   uint8 RxObjectStart = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6332   uint8 RxObjectcount = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6333   uint8 ControllerId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6334   uint8 LoopIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6335   uint8 LoopBreak;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6336   uint8 MOIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6337   uint8 HwCtrlIDKer;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6338   uint8 MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6339   EcuM_WakeupSourceType WakeupSourceId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6340  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6341     /* Calculate to which kernel the Controller belongs to */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6342     KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6343     HwCtrlIDKer = CAN_CALC_HWCTRLID(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6344     /* Extract corresponding CanControllerId */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6345     ControllerId = Can_NodeIdMap[HwControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6346     /* Calculate Rx MO start */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6347     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6348         PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6349     RxObjectStart = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6350                                     [ControllerId].ControllerMOMap[CAN_ZERO];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6351     /* Calculate Rx MO Count */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6352     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6353         PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6354     RxObjectcount = Can_kConfigPtr->CanControllerMOMapConfigPtr\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6355                                     [ControllerId].ControllerMOMap[CAN_ONE];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6356  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6357     #if(CAN_FD_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6358     /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6359      PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6360     if(NULL_PTR !=
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6361     Can_kConfigPtr->CanFDConfigParamPtr[ControllerId].Can_kFDConfigParamPtr)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6362     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6363       RxObjectcount = (RxObjectcount/CAN_THREE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6364       /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6365       MOIndexIncrement = CAN_MOSize_FD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6366     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6367     else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6368     #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6369     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6370       /*Set the MO index increment value */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6371       MOIndexIncrement = CAN_MOSize_STD;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6372     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6373  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6374     /* Initialize loop break */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6375     LoopBreak = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6376  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6377     for(LoopIndex = CAN_ZERO;((LoopIndex < RxObjectcount)&&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6378      (LoopBreak == CAN_ZERO));LoopIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6379     {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6380       HwObjectId = (uint16)((uint16)RxObjectStart + MOIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6381       if ((CAN_SFR_RUNTIME_USER_MODE_READ32\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6382                 (CAN_KER[KerIdx]->MO[HwObjectId].STAT.U))& CAN_MOSTAT_RXPND_MASK)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6383       {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6384         /* Clear NEWDAT, RXPND and MSGLST bit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6385         CAN_SFR_RUNTIME_USER_MODE_WRITE32(CAN_KER[KerIdx]->MO[HwObjectId].CTR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6386            (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6387  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6388          /* Extract corresponding wakeup source id */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6389          /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6390            PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6391          WakeupSourceId = (EcuM_WakeupSourceType)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6392            Can_kConfigPtr->CanWakeupSourceIdPtr[ControllerId];
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6393  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6394          /* Disable the CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6395          CAN_SFR_RUNTIME_USER_MODE_MODIFY32(CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6396                                     N[HwCtrlIDKer].CR.U,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6397                                     CAN_NCR_INIT_CLEARMASK, CAN_NODE_DISABLE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6398  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6399          /* Set CAN controller mode to STOPPED */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6400          Can_17_MCanP_ControllerMode[ControllerId] = CANIF_CS_STOPPED;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6401  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6402          /* Set CAN controller wakeup status */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6403          Can_17_MCanP_ControllerWakeupStatus[ControllerId] = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6404  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6405         /* Call EcuM function to check for wakeup event */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6406         EcuM_CheckWakeup(WakeupSourceId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6407  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6408         /* Exit the loop to avoid multiple wakeup notifications for the same
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6409         CAN controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6410         LoopBreak = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6411       }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6412  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6413       /* Increment MO Index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6414       MOIndex = MOIndex + MOIndexIncrement;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6415  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6416     }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6417  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6418  #endif /* #if(CAN_WAKEUP_CONFIGURED == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6419  #endif/* #if(CAN_RX_HARDWARE_OBJECTS_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6420  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6421  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6422  ** Syntax           : IFX_LOCAL_INLINE void Can_lClearAndEnableInterrupt      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6423  **                                         (                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6424  **                                           uint8 ServiceRequestNumber       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6425  **                                         )                                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6426  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6427  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6428  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6429  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6430  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6431  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6432  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6433  ** Parameters (in)  : ServiceRequestNumber - Service Request Number           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6434  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6435  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6436  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6437  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6438  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6439  ** Description      : This function clears and enables interrupt              **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6440  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6441  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6442  IFX_LOCAL_INLINE void Can_lClearAndEnableInterrupt(uint8
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6443                                                 ServiceRequestNumber)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6444  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6445    /* It is not advisable to clear a pending service request flag SRR
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6446    (writing CLRR = 1) and enable the corresponding service request node
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6447    SRN (writing SRE = 1) simultaneously at the same write access to the
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6448    Service Request Control Register. If this should happen, an unintended
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6449    interrupt request may be generated.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6450    */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6451    /* Clear interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6452    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6453      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6454    CAN_SFR_INIT_MODIFY32(CAN_SRC[ServiceRequestNumber].U,\ 
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf0038900)
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
.L841:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L418:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6455                                                  CAN_SRC_CLEARMASK,CAN_SRC_CLRR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6456     /* Enable interrupt */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6457    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6458      efficiently access the SFRs */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6459    CAN_SFR_INIT_MODIFY32(CAN_SRC[ServiceRequestNumber].U,\ 
	ld.w	d15,[a15]
.L842:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  2994    if (CAN_INTERRUPT ==      (inlined)
.L37:
	ld.a	a15,[a12]
.L1215:
	ld.a	a15,[a15]8
.L1216:
	addsc.a	a15,a15,d8,#2
.L1217:
	ld.bu	d15,[a15]1
.L1218:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3003    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L38
.L422:
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf0038900)
	addsc.a	a15,a15,d12,#2
	ld.w	d15,[a15]
.L843:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L423:
	ld.w	d15,[a15]
.L844:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3003    if (CAN_INTERRUPT ==      (inlined)
.L38:
	ld.a	a15,[a12]
.L1219:
	ld.a	a15,[a15]8
.L1220:
	addsc.a	a15,a15,d8,#2
.L1221:
	ld.bu	d15,[a15]
.L1222:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3012    if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L39
.L426:
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf0038900)
	addsc.a	a15,a15,d11,#2
	ld.w	d15,[a15]
.L845:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#25,#1
	st.w	[a15],d15
.L427:
	ld.w	d15,[a15]
.L846:
	insert	d15,d15,#0,#31,#1
	insert	d15,d15,#1,#10,#1
	st.w	[a15],d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3012    if (CAN_INTERRUPT ==      (inlined)
.L39:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3799      if(CAN_INVALID_HW_CONTROLLER_ID !=      (inlined)
.L34:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1223:
	addsc.a	a15,a15,d8,#2
.L1224:
	mov	d15,#3
.L1225:
	st.w	[a15],d15
.L1226:
	add	d8,#1
.L828:
	extr.u	d8,d8,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3795      ControllerId<(Can_kConfigPtr->CanNumController);      (inlined)
.L32:
	ld.a	a15,[a12]
.L1227:
	ld.bu	d15,[a15]38
.L1228:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3795      ControllerId<(Can_kConfigPtr->CanNumController);      (inlined)
	jlt.u	d8,d15,.L33
.L378:
	ld.a	a15,[a12]
.L1229:
	ld.a	a13,[a15]20
.L847:
	mov	d2,#0
.L849:
	mov	d9,#0
.L851:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3107      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
	j	.L40

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3109      )      (inlined)
.L41:
	addsc.a	a14,a13,d9,#3
.L1230:
	ld.bu	d10,[a14]1
.L853:
	sha	d8,d10,#-2
.L854:
	and	d11,d10,#3
.L855:
	mov	d15,#255
.L1231:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3124      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
	jeq	d15,d10,.L42
.L1232:
	ld.bu	d12,[a14]
.L857:
	mov	e4,d12,d10
	call	Can_lAllocateHwObject
.L1233:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3149          if(E_OK == RetVal)      (inlined)
	jne	d2,#0,.L43
.L446:
	sha	d3,d12,#5
	movh.a	a2,#@his(CAN_KER)
	lea	a2,[a2]@los(CAN_KER)
	addsc.a	a2,a2,d8,#2
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	ld.w	d0,[a15]4104
.L858:
	insert	d0,d0,#0,#8,#8
	sh	d1,d12,#8
	or	d0,d1
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4104,d0
.L447:
	sha	d15,d10,#5
.L1234:
	movh.a	a15,#@his(Can_TxMsiMask)
	lea	a15,[a15]@los(Can_TxMsiMask)
.L1235:
	addsc.a	a15,a15,d15,#0
.L1236:
	sha	d15,d12,#-5
.L1237:
	addsc.a	a15,a15,d15,#2
	ld.w	d0,[a15]
.L859:
	mov	d1,#1
.L1238:
	and	d15,d12,#31
.L1239:
	sh	d1,d1,d15
.L1240:
	or	d0,d1
	st.w	[a15],d0
.L450:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	ld.w	d15,[a15]4104
.L860:
	insert	d15,d15,#0,#4,#4
	sh	d11,#4
.L856:
	or	d15,d11
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4104,d15
.L451:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1241:
	addsc.a	a15,a15,d10,#0
	ld.bu	d15,[a15]
.L455:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	lea	a4,[a15]4096
	mov	d0,#3967
	addih	d0,d0,#4085
.L456:
	ld.a	a15,[a12]
.L1242:
	ld.a	a15,[a15]8
.L1243:
	addsc.a	a15,a15,d15,#2
.L1244:
	ld.bu	d15,[a15]2
.L861:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3219            if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L44
.L457:
	ld.w	d15,[a4]
.L862:
	and	d0,d15
.L863:
	insert	d15,d0,#1,#17,#1
.L864:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4096,d15
.L458:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3224              CAN_SFR_INIT_USER_MODE_MODIFY32\       (inlined)
	j	.L45

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3219            if (CAN_INTERRUPT ==      (inlined)
.L44:
	ld.w	d15,[a4]
.L865:
	and	d15,d0
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4096,d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3228            else      (inlined)
.L45:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	ld.w	d15,[a14]4
	st.w	[a15]4120,d15
.L1245:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d3,#0
	mov	d15,#991
	addih	d15,d15,#4095
	st.w	[a15]4124,d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3149          if(E_OK == RetVal)      (inlined)
.L43:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3124      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
.L42:
	add	d9,#1
.L852:
	extr.u	d9,d9,#0,#16

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3107      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
.L40:
	ld.a	a15,[a12]
.L1246:
	ld.hu	d15,[a15]44
.L1247:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3107      (HwObjIndex < Can_kConfigPtr->CanNumTxHwObj)&&(E_OK==RetVal);      (inlined)
	jge.u	d9,d15,.L46
.L1248:
	jeq	d2,#0,.L41
.L46:
	mov	d15,d2
.L866:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3256    return (RetVal);      (inlined)
	j	.L47

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3257  }      (inlined)
.L47:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3050    if(E_OK == RetVal)      (inlined)
	jne	d15,#0,.L48
.L463:
	mov	d2,#0
.L850:
	ld.a	a15,[a12]
.L1249:
	ld.a	a13,[a15]24
.L848:
	mov	d10,#0
.L867:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3349      (HwObjIndex < Can_kConfigPtr->CanNumRxHwObj)&&(E_OK==RetVal);      (inlined)
	j	.L49

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3350      HwObjIndex++)      (inlined)
.L50:
	mul	d15,d10,#12
	addsc.a	a15,a13,d15,#0
.L1250:
	ld.bu	d8,[a15]9
.L869:
	sha	d9,d8,#-2
.L871:
	and	d11,d8,#3
.L872:
	mov	d15,#255
.L1251:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3361      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
	jeq	d15,d8,.L51
.L1252:
	ld.bu	d12,[a15]8
.L874:
	mov	e4,d12,d8
	call	Can_lAllocateHwObject
.L1253:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3374        if(E_OK == RetVal)      (inlined)
	jne	d2,#0,.L52
.L475:
	sha	d3,d12,#5
	movh.a	a2,#@his(CAN_KER)
	lea	a2,[a2]@los(CAN_KER)
	addsc.a	a4,a2,d9,#2
	ld.a	a2,[a4]
	addsc.a	a2,a2,d3,#0
	ld.w	d0,[a2]4104
.L875:
	insert	d0,d0,#0,#8,#8
	sh	d1,d12,#8
	or	d0,d1
	ld.a	a2,[a4]
	addsc.a	a2,a2,d3,#0
	st.w	[a2]4104,d0
.L476:
	ld.a	a2,[a4]
	addsc.a	a2,a2,d3,#0
	ld.w	d15,[a15]4
	sh	d0,d15,#18
.L876:
	insert	d0,d0,#1,#31,#1
	st.w	[a2]4120,d0
.L479:
	ld.a	a2,[a4]
	addsc.a	a2,a2,d3,#0
	ld.w	d0,[a2]4108
.L877:
	movh	d1,#8192
	and	d0,d1
	ld.w	d15,[a15]
	sh	d15,d15,#18
	or	d0,d15
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4108,d0
.L480:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	ld.w	d15,[a15]4104
.L879:
	insert	d0,d15,#0,#0,#4
.L878:
	movh.a	a15,#@his(CAN_NUM_CONTROLLERS_IN_KERNEL)
	lea	a15,[a15]@los(CAN_NUM_CONTROLLERS_IN_KERNEL)
	addsc.a	a15,a15,d9,#0
	ld.bu	d15,[a15]
	add	d11,d15
.L873:
	or	d0,d11
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4104,d0
.L483:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1254:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L487:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	lea	a2,[a15]4096
	mov	d0,#3967
.L880:
	addih	d0,d0,#4086
.L488:
	ld.a	a15,[a12]
.L1255:
	ld.a	a15,[a15]8
.L1256:
	addsc.a	a15,a15,d15,#2
.L1257:
	ld.bu	d15,[a15]1
.L881:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3476          if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L53
.L489:
	ld.w	d15,[a2]
.L882:
	and	d0,d15
.L883:
	insert	d15,d0,#1,#16,#1
.L884:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4096,d15
.L490:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3481           CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->MO[HwObjectId].FCR.U,\       (inlined)
	j	.L54

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3476          if (CAN_INTERRUPT ==      (inlined)
.L53:
	ld.w	d15,[a2]
.L885:
	and	d15,d0
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	st.w	[a15]4096,d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3484          else      (inlined)
.L54:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	mov	d15,#2048
	st.w	[a15]4124,d15
.L1258:
	sha	d8,#5
.L870:
	movh.a	a15,#@his(Can_RxMsiMask)
	lea	a15,[a15]@los(Can_RxMsiMask)
.L1259:
	addsc.a	a15,a15,d8,#0
.L1260:
	sha	d15,d12,#-5
.L1261:
	addsc.a	a15,a15,d15,#2
	ld.w	d0,[a15]
.L1262:
	mov	d1,#1
.L1263:
	and	d15,d12,#31
.L1264:
	sh	d1,d1,d15
.L1265:
	or	d0,d1
	st.w	[a15],d0
.L1266:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d3,#0
	mov	d15,#3935
	addih	d15,d15,#4095
	st.w	[a15]4124,d15

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3374        if(E_OK == RetVal)      (inlined)
.L52:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3361      if(CAN_INVALID_HW_CONTROLLER_ID != HwControllerId)      (inlined)
.L51:
	add	d10,#1
.L868:
	extr.u	d10,d10,#0,#16

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3349      (HwObjIndex < Can_kConfigPtr->CanNumRxHwObj)&&(E_OK==RetVal);      (inlined)
.L49:
	ld.a	a15,[a12]
.L1267:
	ld.hu	d15,[a15]46
.L1268:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3349      (HwObjIndex < Can_kConfigPtr->CanNumRxHwObj)&&(E_OK==RetVal);      (inlined)
	jge.u	d10,d15,.L55
.L1269:
	jeq	d2,#0,.L50
.L55:
	mov	d15,d2
.L886:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3506    return (RetVal);      (inlined)
	j	.L56

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3507  }      (inlined)
.L56:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3056      if(E_OK == RetVal)      (inlined)
	jne	d15,#0,.L57
.L57:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3050    if(E_OK == RetVal)      (inlined)
.L48:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3065    return(RetVal);      (inlined)
	j	.L58

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  3066  }      (inlined)
.L58:
	jne	d15,#0,.L59
.L431:
	movh.a	a15,#@his(Can_17_MCanP_DriverState)
	lea	a15,[a15]@los(Can_17_MCanP_DriverState)
.L1270:
	mov	d15,#1
.L887:
	st.b	[a15],d15
.L59:
.L31:
.L23:
	ret
.L332:
	
__Can_17_MCanP_Init_function_end:
	.size	Can_17_MCanP_Init,__Can_17_MCanP_Init_function_end-Can_17_MCanP_Init
.L209:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_SetControllerMode',code,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_SetControllerMode'
	.align	2
	
	.global	Can_17_MCanP_SetControllerMode
; Function Can_17_MCanP_SetControllerMode
.L162:
Can_17_MCanP_SetControllerMode:	.type	func
	mov	d8,d4
.L889:
	mov	d9,#0
.L890:
	movh.a	a2,#@his(Can_kConfigPtr)
	lea	a2,[a2]@los(Can_kConfigPtr)
	ld.a	a15,[a2]
.L1275:
	addsc.a	a4,a15,d8,#0
	ld.bu	d4,[a4]39
.L502:
	sha	d0,d4,#-2
.L891:
	and	d10,d4,#3
.L893:
	mov	d15,#0
	jeq	d15,d5,.L60
.L1276:
	mov	d1,#1
	jeq	d1,d5,.L61
.L1277:
	mov	d0,#2
.L892:
	jeq	d0,d5,.L62
	j	.L63

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4040    case CAN_T_START :      (inlined)
.L60:
	ld.a	a15,[a15]4
.L1278:
	addsc.a	a15,a15,d8,#2
.L1279:
	ld.bu	d1,[a15]2
.L894:
	ld.bu	d2,[a15]3
.L896:
	mov	d3,#0
.L897:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a12,a15,d0,#2
.L1280:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4053        for(HohIndex = CAN_ZERO; HohIndex < NumTxMo; HohIndex++)      (inlined)
	j	.L64
.L65:
	ld.a	a15,[a12]
	sha	d15,d1,#5
	addsc.a	a15,a15,d15,#0
	mov	d15,#776
	st.w	[a15]4124,d15
.L1281:
	add	d1,#1
.L895:
	extr.u	d1,d1,#0,#8
.L899:
	add	d3,#1
.L898:
	extr.u	d3,d3,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4053        for(HohIndex = CAN_ZERO; HohIndex < NumTxMo; HohIndex++)      (inlined)
.L64:
	jlt.u	d3,d2,.L65
.L1282:
	ld.a	a15,[a2]
.L1283:
	ld.a	a15,[a15]8
.L1284:
	addsc.a	a15,a15,d8,#2
.L1285:
	ld.bu	d15,[a15]1
.L1286:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4065        if (CAN_INTERRUPT ==      (inlined)
	jne	d15,#1,.L66
.L1287:
	call	Can_lClearReceivedMsg
.L888:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4071          Can_lClearReceivedMsg(HwControllerId);      (inlined)
	j	.L67

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4065        if (CAN_INTERRUPT ==      (inlined)
.L66:
	call	Can_lClearReceivedMsgRuntime

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4073        else      (inlined)
.L67:
	sha	d15,d10,#8
	ld.a	a15,[a12]
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]512
.L900:
	insert	d0,d0,#0,#0,#1
	ld.a	a15,[a12]
	addsc.a	a15,a15,d15,#0
	st.w	[a15]512,d0
.L516:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1288:
	addsc.a	a2,a15,d8,#2
.L1289:
	mov	d15,#2
.L1290:
	st.w	[a2],d15
.L1291:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4090    break;      (inlined)
	j	.L68

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4091    case CAN_T_SLEEP :      (inlined)
.L62:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1292:
	addsc.a	a2,a15,d8,#2
.L1293:
	mov	d15,#1
.L1294:
	st.w	[a2],d15
.L1295:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4096    break;      (inlined)
	j	.L69

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4097    case CAN_T_STOP :      (inlined)
.L61:
	sha	d1,d10,#8
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a15,a15,d0,#2
	ld.a	a2,[a15]
	addsc.a	a2,a2,d1,#0
	ld.w	d15,[a2]512
.L901:
	insert	d15,d15,#0,#0,#1
	or	d15,#1
	ld.a	a15,[a15]
	addsc.a	a15,a15,d1,#0
	st.w	[a15]512,d15
.L519:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1296:
	addsc.a	a2,a15,d8,#2
.L1297:
	mov	d15,#3
.L902:
	st.w	[a2],d15
.L1298:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4105    break;      (inlined)
	j	.L70

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4106    default:  /* case CAN_T_WAKEUP */      (inlined)
.L63:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1299:
	addsc.a	a2,a15,d8,#2
.L1300:
	mov	d15,#3
.L1301:
	st.w	[a2],d15
.L1302:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4111    break;      (inlined)
	j	.L71

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4113  }      (inlined)
.L71:
.L70:
.L69:
.L68:
	addsc.a	a15,a15,d8,#2
	ld.w	d5,[a15]
	mov	d4,d8
.L903:
	call	CanIf_ControllerModeIndication
.L904:
	mov	d2,d9
.L905:
	j	.L72
.L72:
	ret
.L495:
	
__Can_17_MCanP_SetControllerMode_function_end:
	.size	Can_17_MCanP_SetControllerMode,__Can_17_MCanP_SetControllerMode_function_end-Can_17_MCanP_SetControllerMode
.L214:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_DisableControllerInterrupts',code,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_DisableControllerInterrupts'
	.align	2
	
	.global	Can_17_MCanP_DisableControllerInterrupts
; Function Can_17_MCanP_DisableControllerInterrupts
.L164:
Can_17_MCanP_DisableControllerInterrupts:	.type	func
	mov	d8,d4
.L524:
	call	SchM_Enter_Can_17_MCanP_CanDisInt
.L906:
	movh.a	a15,#@his(Can_17_MCanP_InterruptDisableCount)
	lea	a15,[a15]@los(Can_17_MCanP_InterruptDisableCount)
.L1307:
	addsc.a	a5,a15,d8,#0
	ld.bu	d15,[a5]
.L1308:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4406    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
	jne	d15,#0,.L73
.L1309:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a15,[a15]
.L1310:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]39
.L907:
	sha	d0,d15,#-2
.L909:
	and	d15,#3
.L908:
	sha	d1,d0,#4
	extr.u	d1,d1,#0,#8
.L912:
	movh.a	a15,#@his(CAN_NUM_CONTROLLERS_IN_KERNEL)
	lea	a15,[a15]@los(CAN_NUM_CONTROLLERS_IN_KERNEL)
.L1311:
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L911:
	sha	d0,#1
.L1312:
	extr.u	d0,d0,#0,#8
.L1313:
	add	d0,d15
.L1314:
	add	d0,d1
.L1315:
	extr.u	d0,d0,#0,#8
.L914:
	add	d15,d1
.L910:
	movh.a	a2,#61444
	lea	a2,[a2]@los(0xf0038900)
	addsc.a	a4,a2,d15,#2
	ld.w	d1,[a4]
.L913:
	extr.u	d1,d1,#10,#1
.L916:
	sh	d1,#2
.L1316:
	ld.bu	d2,[a15]
	add	d2,d15
.L1317:
	extr.u	d15,d2,#0,#8
.L918:
	addsc.a	a15,a2,d15,#2
	ld.w	d15,[a15]
.L919:
	extr.u	d15,d15,#10,#1
.L920:
	sh	d15,#1
.L1318:
	addsc.a	a2,a2,d0,#2
.L1319:
	movh.a	a6,#@his(Can_InterruptsEnabledStatus)
	lea	a6,[a6]@los(Can_InterruptsEnabledStatus)
.L1320:
	addsc.a	a6,a6,d8,#0
.L1321:
	or	d1,d15
.L917:
	ld.w	d15,[a2]
.L921:
	sh	d15,d15,#-10
	extr.u	d15,d15,#0,#8
.L1322:
	and	d15,#1
.L1323:
	or	d1,d15
.L1324:
	st.b	[a6],d1
.L540:
	ld.w	d15,[a2]
.L922:
	mov.u	d0,#64511
.L915:
	addih	d0,d0,#32767
	and	d15,d0
	st.w	[a2],d15
.L541:
	ld.w	d15,[a15]
.L923:
	and	d15,d0
	st.w	[a15],d15
.L544:
	ld.w	d15,[a4]
.L924:
	and	d0,d15
.L925:
	st.w	[a4],d0

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4406    if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
.L73:
	ld.bu	d15,[a5]
.L1325:
	add	d15,#1
	st.b	[a5],d15
.L1326:
	call	SchM_Exit_Can_17_MCanP_CanDisInt
.L525:
	ret
.L521:
	
__Can_17_MCanP_DisableControllerInterrupts_function_end:
	.size	Can_17_MCanP_DisableControllerInterrupts,__Can_17_MCanP_DisableControllerInterrupts_function_end-Can_17_MCanP_DisableControllerInterrupts
.L219:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_EnableControllerInterrupts',code,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_EnableControllerInterrupts'
	.align	2
	
	.global	Can_17_MCanP_EnableControllerInterrupts
; Function Can_17_MCanP_EnableControllerInterrupts
.L166:
Can_17_MCanP_EnableControllerInterrupts:	.type	func
	mov	d8,d4
.L551:
	call	SchM_Enter_Can_17_MCanP_CanEnInt
.L926:
	movh.a	a15,#@his(Can_17_MCanP_InterruptDisableCount)
	lea	a15,[a15]@los(Can_17_MCanP_InterruptDisableCount)
.L1331:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L1332:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4508    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)      (inlined)
	jeq	d15,#0,.L74
.L1333:
	add	d0,d15,#-1
	st.b	[a15],d0
.L1334:
	ld.bu	d15,[a15]
.L1335:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4514      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
	jne	d15,#0,.L75
.L1336:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a15,[a15]
.L1337:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]39
.L927:
	sha	d0,d15,#-2
.L929:
	and	d15,#3
.L928:
	sha	d1,d0,#4
	extr.u	d1,d1,#0,#8
.L932:
	movh.a	a15,#@his(CAN_NUM_CONTROLLERS_IN_KERNEL)
	lea	a15,[a15]@los(CAN_NUM_CONTROLLERS_IN_KERNEL)
.L1338:
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L931:
	sha	d2,d0,#1
.L1339:
	extr.u	d2,d2,#0,#8
.L1340:
	add	d2,d15
.L1341:
	add	d2,d1
.L1342:
	extr.u	d3,d2,#0,#8
.L934:
	add	d0,d15
.L1343:
	add	d0,d1
.L1344:
	extr.u	d0,d0,#0,#8
.L935:
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf0038900)
.L1345:
	add	d1,d15
.L933:
	addsc.a	a2,a15,d1,#2
.L937:
	movh.a	a4,#@his(Can_InterruptsEnabledStatus)
	lea	a4,[a4]@los(Can_InterruptsEnabledStatus)
.L1346:
	addsc.a	a4,a4,d8,#0
	ld.bu	d1,[a4]
.L1347:
	extr.u	d1,d1,#2,#1
.L1348:
	sh	d1,d1,#10
.L565:
	ld.w	d2,[a2]
.L939:
	insert	d2,d2,#0,#31,#1
	or	d2,d1
	st.w	[a2],d2
.L566:
	addsc.a	a2,a15,d0,#2
.L1349:
	ld.bu	d0,[a4]
.L936:
	extr.u	d15,d0,#1,#1
.L930:
	sh	d15,d15,#10
.L569:
	ld.w	d0,[a2]
.L941:
	insert	d0,d0,#0,#31,#1
	or	d0,d15
	st.w	[a2],d0
.L570:
	addsc.a	a15,a15,d3,#2
.L938:
	ld.bu	d15,[a4]
.L940:
	and	d15,#1
.L1350:
	sh	d15,d15,#10
.L573:
	ld.w	d0,[a15]
.L942:
	insert	d0,d0,#0,#31,#1
	or	d0,d15
	st.w	[a15],d0

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4514      if (Can_17_MCanP_InterruptDisableCount[Controller] == CAN_ZERO)      (inlined)
.L75:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4508    if (Can_17_MCanP_InterruptDisableCount[Controller] > CAN_ZERO)      (inlined)
.L74:
	call	SchM_Exit_Can_17_MCanP_CanEnInt
.L552:
	ret
.L548:
	
__Can_17_MCanP_EnableControllerInterrupts_function_end:
	.size	Can_17_MCanP_EnableControllerInterrupts,__Can_17_MCanP_EnableControllerInterrupts_function_end-Can_17_MCanP_EnableControllerInterrupts
.L224:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_Write',code,cluster('Can_17_MCanP_Write')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_Write'
	.align	2
	
	.global	Can_17_MCanP_Write
; Function Can_17_MCanP_Write
.L168:
Can_17_MCanP_Write:	.type	func
	sub.a	a10,#8
.L943:
	mov.aa	a12,a4
.L946:
	movh.a	a13,#@his(Can_kConfigPtr)
	lea	a13,[a13]@los(Can_kConfigPtr)
	ld.a	a15,[a13]
.L1355:
	ld.hu	d15,[a15]46
.L1356:
	sub	d4,d15
.L944:
	extr.u	d9,d4,#0,#16
.L947:
	ld.a	a2,[a15]20
.L1357:
	addsc.a	a15,a2,d9,#3
.L1358:
	ld.bu	d10,[a15]
.L583:
	mov	d11,#0
.L949:
	mov	d12,#0
.L950:
	addsc.a	a15,a2,d9,#3
	ld.bu	d15,[a15]1
	sha	d8,d15,#-2
.L952:
	call	SchM_Enter_Can_17_MCanP_CanWrMO
.L945:
	sha	d13,d10,#5
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a14,a15,d8,#2
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	ld.w	d0,[a15]4124
.L1359:
	and	d0,d0,#262
.L1360:
	st.w	[a10],d0
.L1361:
	ld.w	d15,[a10]
.L1362:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4841    if (CanCtrStat== CAN_ZERO )      (inlined)
	jne	d15,#0,.L76
.L1363:
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	mov	d15,#4091
	addih	d15,d15,#4095
	st.w	[a15]4124,d15
.L1364:
	call	SchM_Exit_Can_17_MCanP_CanWrMO
.L1365:
	ld.a	a15,[a14]
	addsc.a	a2,a15,d13,#0
	ld.a	a15,[a13]
	ld.a	a15,[a15]20
	addsc.a	a15,a15,d9,#3
	ld.w	d15,[a15]4
	st.w	[a2]4120,d15
.L604:
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	ld.w	d15,[a15]4120
.L953:
	insert	d0,d15,#0,#0,#29
.L954:
	ld.w	d15,[a12]4
	sh	d15,d15,#18
	or	d0,d15
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	st.w	[a15]4120,d0
.L605:
	ld.bu	d15,[a12]10
.L608:
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	ld.w	d0,[a15]4096
.L955:
	mov	d1,#3967
	addih	d1,d1,#247
	and	d0,d1
	sh	d15,d15,#24
.L956:
	or	d0,d15
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	st.w	[a15]4096,d0
.L609:
	ld.a	a15,[a14]
.L1366:
	addsc.a	a15,a15,d13,#0
	lea	a15,[a15]4096
.L1367:
	lea	a2,[a15]16
.L957:
	lea	a15,[a15]20
.L959:
	mov	d5,#0
.L961:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4946      for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
	j	.L77
.L78:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4948        if (CAN_FOUR > Index)      (inlined)
	jge.u	d5,#4,.L79
.L1368:
	ld.a	a4,[a12]
.L1369:
	addsc.a	a4,a4,d5,#0
	ld.bu	d0,[a4]
.L612:
	ld.w	d1,[a2]
.L964:
	and	d15,d5,#3
	sh	d2,d15,#3
	mov	d15,#255
	sh	d3,d15,d2
	mov	d4,#-1
	xor	d3,d4
	and	d1,d3
	sh	d0,d0,d2
.L963:
	or	d1,d0
	st.w	[a2],d1

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4948        if (CAN_FOUR > Index)      (inlined)
.L79:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4964        if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))      (inlined)
	jlt.u	d5,#4,.L80
.L1370:
	jge.u	d5,#8,.L81
.L1371:
	ld.a	a4,[a12]
.L1372:
	addsc.a	a4,a4,d5,#0
	ld.bu	d0,[a4]
.L615:
	ld.w	d1,[a15]
.L966:
	and	d15,d12,#3
	sh	d2,d15,#3
	mov	d15,#255
	sh	d15,d15,d2
	mov	d3,#-1
	xor	d15,d3
	and	d1,d15
	sh	d0,d0,d2
.L965:
	or	d1,d0
	st.w	[a15],d1
.L616:
	add	d12,#1
.L951:
	extr.u	d12,d12,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4964        if ((CAN_FOUR <= Index)&& (CAN_EIGHT > Index))      (inlined)
.L81:
.L80:
	add	d5,#1
.L962:
	extr.u	d5,d5,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4946      for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
.L77:
	ld.bu	d15,[a12]10
.L1373:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4946      for(Index=CAN_ZERO; Index < PduInfo->length; Index++)      (inlined)
	jlt.u	d5,d15,.L78
.L1374:
	ld.a	a15,[a13]
.L960:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]48
.L1375:
	sub	d10,d15
.L948:
	extr.u	d5,d10,#0,#16
.L967:
	mov	d4,d8
.L968:
	call	Can_lGetHthIndex
.L958:
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	mov	d15,#3319
	addih	d15,d15,#4095
	st.w	[a15]4124,d15
.L1376:
	mul	d15,d8,#20
.L1377:
	movh.a	a15,#@his(Can_SwObjectHandle)
	lea	a15,[a15]@los(Can_SwObjectHandle)
.L1378:
	addsc.a	a15,a15,d15,#0
.L1379:
	addsc.a	a15,a15,d2,#1
.L1380:
	ld.hu	d15,[a12]8
.L1381:
	st.h	[a15],d15
.L1382:
	ld.a	a15,[a14]
	addsc.a	a15,a15,d13,#0
	mov	d15,#4
	st.w	[a15]4124,d15
.L1383:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5018    TxMOIdx = HwObjectId-(Can_kConfigPtr->CanTxHwObjCntKer[KerIdx]);      (inlined)
	j	.L82

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  4841    if (CanCtrStat== CAN_ZERO )      (inlined)
.L76:
	call	SchM_Exit_Can_17_MCanP_CanWrMO
.L1384:
	mov	d11,#2

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5034    else      (inlined)
.L82:
	mov	d2,d11

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5042    return(RetVal);      (inlined)
	j	.L83

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5043  }      (inlined)
.L83:
	j	.L84
.L84:
	ret
.L575:
	
__Can_17_MCanP_Write_function_end:
	.size	Can_17_MCanP_Write,__Can_17_MCanP_Write_function_end-Can_17_MCanP_Write
.L229:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Write',code,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Write'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Write
; Function Can_17_MCanP_MainFunction_Write
.L170:
Can_17_MCanP_MainFunction_Write:	.type	func
	movh.a	a15,#@his(Can_17_MCanP_DriverState)
	lea	a15,[a15]@los(Can_17_MCanP_DriverState)
	ld.bu	d15,[a15]
.L1389:
	jeq	d15,#0,.L85
.L1390:
	mov	d8,#0
.L969:
	j	.L86
.L87:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a2,[a15]
.L1391:
	ld.a	a15,[a2]8
.L1392:
	addsc.a	a15,a15,d8,#2
.L1393:
	ld.bu	d15,[a15]2
.L1394:
	jne	d15,#2,.L88
.L1395:
	addsc.a	a15,a2,d8,#0
	ld.bu	d4,[a15]39
	call	Can_17_MCanP_IsrTransmitRuntime
.L88:
	add	d8,#1
.L86:
	jlt.u	d8,#2,.L87
.L85:
	ret
.L618:
	
__Can_17_MCanP_MainFunction_Write_function_end:
	.size	Can_17_MCanP_MainFunction_Write,__Can_17_MCanP_MainFunction_Write_function_end-Can_17_MCanP_MainFunction_Write
.L234:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Read',code,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Read'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Read
; Function Can_17_MCanP_MainFunction_Read
.L172:
Can_17_MCanP_MainFunction_Read:	.type	func
	movh.a	a15,#@his(Can_17_MCanP_DriverState)
	lea	a15,[a15]@los(Can_17_MCanP_DriverState)
	ld.bu	d15,[a15]
.L1400:
	jeq	d15,#0,.L89
.L1401:
	mov	d8,#0
.L970:
	j	.L90
.L91:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a2,[a15]
.L1402:
	ld.a	a15,[a2]8
.L1403:
	addsc.a	a15,a15,d8,#2
.L1404:
	ld.bu	d15,[a15]1
.L1405:
	jne	d15,#2,.L92
.L1406:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1407:
	addsc.a	a15,a15,d8,#2
	ld.w	d15,[a15]
.L1408:
	jne	d15,#2,.L93
.L1409:
	addsc.a	a15,a2,d8,#0
	ld.bu	d4,[a15]39
	call	Can_lReceiveHandlerRuntime
.L93:
.L92:
	add	d8,#1
.L90:
	jlt.u	d8,#2,.L91
.L89:
	ret
.L620:
	
__Can_17_MCanP_MainFunction_Read_function_end:
	.size	Can_17_MCanP_MainFunction_Read,__Can_17_MCanP_MainFunction_Read_function_end-Can_17_MCanP_MainFunction_Read
.L239:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_BusOff',code,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_BusOff'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_BusOff
; Function Can_17_MCanP_MainFunction_BusOff
.L174:
Can_17_MCanP_MainFunction_BusOff:	.type	func
	movh.a	a15,#@his(Can_17_MCanP_DriverState)
	lea	a15,[a15]@los(Can_17_MCanP_DriverState)
	ld.bu	d15,[a15]
.L1414:
	jeq	d15,#0,.L94
.L1415:
	mov	d15,#0
.L971:
	j	.L95
.L96:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a15,[a15]
.L1416:
	ld.a	a2,[a15]8
.L1417:
	addsc.a	a2,a2,d15,#2
.L1418:
	ld.bu	d0,[a2]
.L1419:
	jne	d0,#2,.L97
.L1420:
	addsc.a	a15,a15,d15,#0
	ld.bu	d4,[a15]39
	call	Can_17_MCanP_IsrBusOffRuntime
.L97:
	add	d15,#1
.L95:
	jlt.u	d15,#2,.L96
.L94:
	ret
.L622:
	
__Can_17_MCanP_MainFunction_BusOff_function_end:
	.size	Can_17_MCanP_MainFunction_BusOff,__Can_17_MCanP_MainFunction_BusOff_function_end-Can_17_MCanP_MainFunction_BusOff
.L244:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Wakeup',code,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Wakeup'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Wakeup
; Function Can_17_MCanP_MainFunction_Wakeup
.L176:
Can_17_MCanP_MainFunction_Wakeup:	.type	func
	movh.a	a15,#@his(Can_17_MCanP_DriverState)
	lea	a15,[a15]@los(Can_17_MCanP_DriverState)
	ld.bu	d15,[a15]
.L1425:
	jeq	d15,#0,.L98
.L98:
	ret
.L624:
	
__Can_17_MCanP_MainFunction_Wakeup_function_end:
	.size	Can_17_MCanP_MainFunction_Wakeup,__Can_17_MCanP_MainFunction_Wakeup_function_end-Can_17_MCanP_MainFunction_Wakeup
.L249:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Mode',code,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_MainFunction_Mode'
	.align	2
	
	.global	Can_17_MCanP_MainFunction_Mode
; Function Can_17_MCanP_MainFunction_Mode
.L178:
Can_17_MCanP_MainFunction_Mode:	.type	func
	ret
.L625:
	
__Can_17_MCanP_MainFunction_Mode_function_end:
	.size	Can_17_MCanP_MainFunction_Mode,__Can_17_MCanP_MainFunction_Mode_function_end-Can_17_MCanP_MainFunction_Mode
.L254:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_CheckWakeup',code,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_CheckWakeup'
	.align	2
	
	.global	Can_17_MCanP_CheckWakeup
; Function Can_17_MCanP_CheckWakeup
.L180:
Can_17_MCanP_CheckWakeup:	.type	func
	mov	d2,#1
.L972:
	jeq	d4,#0,.L99
.L99:
	j	.L100
.L100:
	ret
.L626:
	
__Can_17_MCanP_CheckWakeup_function_end:
	.size	Can_17_MCanP_CheckWakeup,__Can_17_MCanP_CheckWakeup_function_end-Can_17_MCanP_CheckWakeup
.L259:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_IsrReceiveHandler',code,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_IsrReceiveHandler'
	.align	2
	
	.global	Can_17_MCanP_IsrReceiveHandler
; Function Can_17_MCanP_IsrReceiveHandler
.L182:
Can_17_MCanP_IsrReceiveHandler:	.type	func
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1474:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1475:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1476:
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
.L1477:
	jne	d15,#2,.L101
.L1478:
	call	Can_lReceiveHandler
.L101:
	ret
.L641:
	
__Can_17_MCanP_IsrReceiveHandler_function_end:
	.size	Can_17_MCanP_IsrReceiveHandler,__Can_17_MCanP_IsrReceiveHandler_function_end-Can_17_MCanP_IsrReceiveHandler
.L274:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_IsrTransmitHandler',code,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_IsrTransmitHandler'
	.align	2
	
	.global	Can_17_MCanP_IsrTransmitHandler
; Function Can_17_MCanP_IsrTransmitHandler
.L184:
Can_17_MCanP_IsrTransmitHandler:	.type	func
	sub.a	a10,#8
.L973:
	mov	d9,d4
.L974:
	jge.u	d9,#5,.L102
.L1483:
	sha	d10,d9,#-2
.L975:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
.L1484:
	addsc.a	a12,a15,d10,#2
	ld.a	a15,[a12]
.L1485:
	ld.w	d0,[a15]448
.L1486:
	st.w	[a10],d0
.L1487:
	mov	d8,#0
.L976:
	movh.a	a13,#@his(Can_kConfigPtr)
	lea	a13,[a13]@los(Can_kConfigPtr)
	ld.a	a15,[a13]
.L1488:
	ld.bu	d11,[a15]51
.L977:
	j	.L103
.L104:
	ld.a	a15,[a12]
.L1489:
	sha	d15,d9,#5
.L1490:
	movh.a	a2,#@his(Can_TxMsiMask)
	lea	a2,[a2]@los(Can_TxMsiMask)
.L1491:
	addsc.a	a2,a2,d15,#0
.L1492:
	addsc.a	a2,a2,d11,#2
	ld.w	d0,[a2]
.L1493:
	st.w	[a15]448,d0
.L1494:
	j	.L105
.L106:
	add	d8,#1
.L1495:
	ld.a	a15,[a12]
.L1496:
	addsc.a	a15,a15,d11,#2
.L1497:
	ld.w	d0,[a15]384
	extr.u	d15,d0,#0,#8
.L1498:
	and	d12,d15,#63
.L979:
	sha	d0,d11,#5
.L1499:
	add	d15,d12,d0
.L980:
	ld.a	a15,[a13]
.L1500:
	addsc.a	a15,a15,d10,#0
	ld.bu	d0,[a15]48
.L1501:
	sub	d0,d15,d0
	extr.u	d5,d0,#0,#16
.L982:
	mov	d4,d10
.L984:
	call	Can_lGetHthIndex
.L983:
	ld.a	a15,[a12]
.L1502:
	sha	d15,#5
.L981:
	addsc.a	a15,a15,d15,#0
.L1503:
	mov	d15,#10
.L1504:
	st.w	[a15]4124,d15
.L1505:
	ld.a	a15,[a12]
.L1506:
	addsc.a	a15,a15,d11,#2
.L1507:
	mov	d15,#1
.L1508:
	sh	d15,d15,d12
.L1509:
	mov	d0,#-1
	xor	d15,d0
.L1510:
	st.w	[a15]320,d15
.L1511:
	mul	d15,d10,#20
.L1512:
	movh.a	a15,#@his(Can_SwObjectHandle)
	lea	a15,[a15]@los(Can_SwObjectHandle)
.L1513:
	addsc.a	a15,a15,d15,#0
.L1514:
	addsc.a	a15,a15,d2,#1
	ld.hu	d4,[a15]0
	call	CanIf_TxConfirmation
.L105:
	ld.a	a15,[a12]
.L1515:
	addsc.a	a15,a15,d11,#2
.L1516:
	ld.w	d15,[a15]384
.L1517:
	and	d0,d15,#63
.L1518:
	mov	d15,#32
.L1519:
	jeq	d15,d0,.L107
.L1520:
	mov	d15,#32
.L1521:
	jlt.u	d8,d15,.L106
.L107:
	add	d11,#1
.L978:
	extr.u	d11,d11,#0,#8
.L103:
	ld.a	a15,[a13]
.L1522:
	ld.bu	d15,[a15]52
.L1523:
	jge.u	d15,d11,.L104
.L1524:
	ld.a	a15,[a12]
.L1525:
	ld.w	d15,[a10]
.L1526:
	st.w	[a15]448,d15
.L102:
	ret
.L643:
	
__Can_17_MCanP_IsrTransmitHandler_function_end:
	.size	Can_17_MCanP_IsrTransmitHandler,__Can_17_MCanP_IsrTransmitHandler_function_end-Can_17_MCanP_IsrTransmitHandler
.L279:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_IsrTransmitRuntime',code,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_IsrTransmitRuntime'
	.align	2
	
	.global	Can_17_MCanP_IsrTransmitRuntime
; Function Can_17_MCanP_IsrTransmitRuntime
.L186:
Can_17_MCanP_IsrTransmitRuntime:	.type	func
	jge.u	d4,#5,.L108
.L1531:
	sha	d11,d4,#-2
.L985:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1532:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L986:
	movh.a	a12,#@his(Can_kConfigPtr)
	lea	a12,[a12]@los(Can_kConfigPtr)
	ld.a	a15,[a12]
.L1533:
	ld.a	a15,[a15]4
.L1534:
	addsc.a	a15,a15,d15,#2
.L1535:
	ld.bu	d8,[a15]2
.L987:
	ld.bu	d9,[a15]3
.L988:
	mov	d10,#0
.L989:
	j	.L109
.L110:
	add	d15,d8,d10
.L991:
	sha	d12,d15,#5
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a13,a15,d11,#2
	ld.a	a15,[a13]
	addsc.a	a15,a15,d12,#0
	ld.w	d0,[a15]4124
.L1536:
	jz.t	d0:1,.L111
.L1537:
	ld.a	a15,[a12]
.L1538:
	addsc.a	a15,a15,d11,#0
	ld.bu	d0,[a15]48
.L1539:
	sub	d15,d0
.L992:
	extr.u	d5,d15,#0,#16
.L993:
	mov	d4,d11
.L995:
	call	Can_lGetHthIndex
.L994:
	ld.a	a15,[a13]
	addsc.a	a15,a15,d12,#0
	mov	d15,#10
	st.w	[a15]4124,d15
.L1540:
	mul	d15,d11,#20
.L1541:
	movh.a	a15,#@his(Can_SwObjectHandle)
	lea	a15,[a15]@los(Can_SwObjectHandle)
.L1542:
	addsc.a	a15,a15,d15,#0
.L1543:
	addsc.a	a15,a15,d2,#1
	ld.hu	d4,[a15]0
	call	CanIf_TxConfirmation
.L111:
	add	d10,#1
.L990:
	extr.u	d10,d10,#0,#8
.L109:
	jlt.u	d10,d9,.L110
.L108:
	ret
.L654:
	
__Can_17_MCanP_IsrTransmitRuntime_function_end:
	.size	Can_17_MCanP_IsrTransmitRuntime,__Can_17_MCanP_IsrTransmitRuntime_function_end-Can_17_MCanP_IsrTransmitRuntime
.L284:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_IsrBusOffHandler',code,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_IsrBusOffHandler'
	.align	2
	
	.global	Can_17_MCanP_IsrBusOffHandler
; Function Can_17_MCanP_IsrBusOffHandler
.L188:
Can_17_MCanP_IsrBusOffHandler:	.type	func
	sha	d0,d4,#-2
.L997:
	and	d15,d4,#3
.L999:
	sha	d1,d15,#8
.L1438:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
.L1439:
	addsc.a	a15,a15,d0,#2
	ld.a	a2,[a15]
.L1440:
	addsc.a	a2,a2,d1,#0
.L1441:
	ld.w	d15,[a2]512
.L1000:
	extr.u	d15,d15,#0,#8
.L1001:
	and	d15,#1
.L1442:
	ld.a	a2,[a15]
.L1443:
	addsc.a	a2,a2,d1,#0
.L1444:
	ld.w	d0,[a2]516
.L998:
	jz.t	d0:5,.L112
.L1445:
	jne	d15,#1,.L113
.L1446:
	ld.a	a15,[a15]
.L1447:
	addsc.a	a15,a15,d1,#0
.L1448:
	mov	d15,#991
.L1002:
	st.w	[a15]516,d15
.L1449:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1450:
	addsc.a	a15,a15,d4,#0
	ld.bu	d4,[a15]
.L996:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1451:
	addsc.a	a15,a15,d4,#2
	ld.w	d15,[a15]
.L1452:
	jne	d15,#2,.L114
.L1453:
	mov	d15,#3
.L1454:
	st.w	[a15],d15
.L1455:
	call	CanIf_ControllerBusOff
.L114:
.L113:
.L112:
	ret
.L629:
	
__Can_17_MCanP_IsrBusOffHandler_function_end:
	.size	Can_17_MCanP_IsrBusOffHandler,__Can_17_MCanP_IsrBusOffHandler_function_end-Can_17_MCanP_IsrBusOffHandler
.L264:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_17_MCanP_IsrBusOffRuntime',code,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.text.Can_17_MCanP.Can_17_MCanP_IsrBusOffRuntime'
	.align	2
	
	.global	Can_17_MCanP_IsrBusOffRuntime
; Function Can_17_MCanP_IsrBusOffRuntime
.L190:
Can_17_MCanP_IsrBusOffRuntime:	.type	func
	sha	d0,d4,#-2
.L1004:
	and	d15,d4,#3
.L1006:
	sha	d1,d15,#8
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a15,a15,d0,#2
	ld.a	a2,[a15]
	addsc.a	a2,a2,d1,#0
	ld.w	d15,[a2]512
.L1007:
	extr.u	d15,d15,#0,#8
.L1008:
	and	d15,#1
.L1460:
	ld.a	a2,[a15]
	addsc.a	a2,a2,d1,#0
	ld.w	d0,[a2]516
.L1005:
	jz.t	d0:5,.L115
.L1461:
	jne	d15,#1,.L116
.L1462:
	ld.a	a15,[a15]
	addsc.a	a15,a15,d1,#0
	mov	d15,#991
.L1009:
	st.w	[a15]516,d15
.L1463:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1464:
	addsc.a	a15,a15,d4,#0
	ld.bu	d4,[a15]
.L1003:
	movh.a	a15,#@his(Can_17_MCanP_ControllerMode)
	lea	a15,[a15]@los(Can_17_MCanP_ControllerMode)
.L1465:
	addsc.a	a15,a15,d4,#2
	ld.w	d15,[a15]
.L1466:
	jne	d15,#2,.L117
.L1467:
	mov	d15,#3
.L1468:
	st.w	[a15],d15
.L1469:
	call	CanIf_ControllerBusOff
.L117:
.L116:
.L115:
	ret
.L635:
	
__Can_17_MCanP_IsrBusOffRuntime_function_end:
	.size	Can_17_MCanP_IsrBusOffRuntime,__Can_17_MCanP_IsrBusOffRuntime_function_end-Can_17_MCanP_IsrBusOffRuntime
.L269:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_lClearReceivedMsg',code,cluster('Can_lClearReceivedMsg')
	.sect	'.text.Can_17_MCanP.Can_lClearReceivedMsg'
	.align	2
	
; Function Can_lClearReceivedMsg
.L192:
Can_lClearReceivedMsg:	.type	func
	sub.a	a10,#8
.L1010:
	sha	d15,d4,#-2
.L1011:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a4,a15,d15,#2
	ld.a	a15,[a4]
	ld.w	d15,[a15]448
.L1012:
	st.w	[a10],d15
.L1626:
	mov	d2,#0
.L1013:
	j	.L118
.L119:
	mov	d3,#0
.L1015:
	ld.a	a15,[a4]
	sha	d15,d4,#5
	movh.a	a2,#@his(Can_RxMsiMask)
	lea	a2,[a2]@los(Can_RxMsiMask)
	addsc.a	a2,a2,d15,#0
	addsc.a	a2,a2,d2,#2
	ld.w	d0,[a2]
	st.w	[a15]448,d0
.L1627:
	j	.L120
.L121:
	add	d3,#1
.L1628:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d2,#2
	ld.w	d0,[a15]384
	extr.u	d15,d0,#0,#8
.L1629:
	and	d0,d15,#63
.L1016:
	sha	d1,d2,#5
.L1018:
	add	d1,d0
.L1630:
	ld.a	a15,[a4]
	sha	d1,#5
.L1019:
	addsc.a	a15,a15,d1,#0
	mov	d15,#25
	st.w	[a15]4124,d15
.L1631:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d2,#2
	mov	d1,#1
	sh	d1,d1,d0
	mov	d0,#-1
.L1017:
	xor	d1,d0
	st.w	[a15]320,d1
.L120:
	ld.a	a15,[a4]
	addsc.a	a15,a15,d2,#2
	ld.w	d15,[a15]384
.L1632:
	and	d0,d15,#63
.L1633:
	mov	d15,#32
.L1634:
	jeq	d15,d0,.L122
.L1635:
	mov	d15,#32
.L1636:
	jlt.u	d3,d15,.L121
.L122:
	add	d2,#1
.L1014:
	extr.u	d2,d2,#0,#8
.L118:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a15,[a15]
.L1637:
	ld.bu	d15,[a15]50
.L1638:
	jge.u	d15,d2,.L119
.L1639:
	ld.a	a15,[a4]
	ld.w	d15,[a10]
	st.w	[a15]448,d15
.L1640:
	ret
.L722:
	
__Can_lClearReceivedMsg_function_end:
	.size	Can_lClearReceivedMsg,__Can_lClearReceivedMsg_function_end-Can_lClearReceivedMsg
.L294:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_lClearReceivedMsgRuntime',code,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.text.Can_17_MCanP.Can_lClearReceivedMsgRuntime'
	.align	2
	
; Function Can_lClearReceivedMsgRuntime
.L194:
Can_lClearReceivedMsgRuntime:	.type	func
	mov	d0,#0
.L1021:
	sha	d1,d4,#-2
.L1023:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1683:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1024:
	movh.a	a15,#@his(Can_kConfigPtr)
	lea	a15,[a15]@los(Can_kConfigPtr)
	ld.a	a15,[a15]
.L1684:
	ld.a	a15,[a15]4
.L1685:
	addsc.a	a15,a15,d15,#2
.L1686:
	ld.bu	d2,[a15]
.L1025:
	ld.bu	d3,[a15]1
.L1026:
	mov	d4,#0
.L1020:
	j	.L123
.L124:
	add	d5,d2,d0
.L1028:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a15,a15,d1,#2
	ld.a	a15,[a15]
	sha	d15,d5,#5
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]4124
.L1687:
	jz.t	d15:0,.L125
.L1688:
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a15,a15,d1,#2
	ld.a	a15,[a15]
	sha	d5,#5
.L1029:
	addsc.a	a15,a15,d5,#0
	mov	d15,#25
	st.w	[a15]4124,d15
.L125:
	add	d0,#1
.L1022:
	extr.u	d0,d0,#0,#8
.L1030:
	add	d4,#1
.L1027:
	extr.u	d4,d4,#0,#8
.L123:
	jlt.u	d4,d3,.L124
.L1689:
	ret
.L777:
	
__Can_lClearReceivedMsgRuntime_function_end:
	.size	Can_lClearReceivedMsgRuntime,__Can_lClearReceivedMsgRuntime_function_end-Can_lClearReceivedMsgRuntime
.L304:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_lReceiveHandler',code,cluster('Can_lReceiveHandler')
	.sect	'.text.Can_17_MCanP.Can_lReceiveHandler'
	.align	2
	
; Function Can_lReceiveHandler
.L196:
Can_lReceiveHandler:	.type	func
	sub.a	a10,#8
.L1031:
	mov	d8,d4
.L1032:
	sha	d15,d8,#-2
.L1033:
	movh.a	a12,#@his(CAN_KER)
	lea	a12,[a12]@los(CAN_KER)
.L1548:
	addsc.a	a13,a12,d15,#2
	ld.a	a15,[a13]
.L1549:
	ld.w	d0,[a15]448
.L1550:
	st.w	[a10],d0
.L1551:
	mov	d9,#0
.L675:
	movh.a	a14,#@his(Can_kConfigPtr)
	lea	a14,[a14]@los(Can_kConfigPtr)
.L676:
	j	.L126
.L127:
	mov	d10,#0
.L1035:
	ld.a	a15,[a13]
.L1552:
	sha	d15,d8,#5
.L1553:
	movh.a	a2,#@his(Can_RxMsiMask)
	lea	a2,[a2]@los(Can_RxMsiMask)
.L1554:
	addsc.a	a2,a2,d15,#0
.L1555:
	addsc.a	a2,a2,d9,#2
	ld.w	d0,[a2]
.L1556:
	st.w	[a15]448,d0
.L1557:
	j	.L128
.L129:
	add	d10,#1
.L1558:
	ld.a	a15,[a13]
.L1559:
	addsc.a	a15,a15,d9,#2
.L1560:
	ld.w	d0,[a15]384
.L1561:
	extr.u	d15,d0,#0,#8
.L1562:
	and	d13,d15,#63
.L1036:
	sha	d0,d9,#5
.L1563:
	add	d11,d13,d0
.L687:
	mov	d12,#0
.L1037:
	sha	d15,d8,#-2
.L702:
	ld.a	a15,[a14]
.L1564:
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]49
.L1039:
	sub	d0,d11,d0
.L1040:
	extr.u	d5,d0,#0,#16
.L1041:
	mov	d4,d15
.L1043:
	call	Can_lGetHrhIndex
.L1042:
	mov	d4,d2

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6187    return(Hrh);      (inlined)
	j	.L130

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6188  }      (inlined)
.L130:
	sha	d1,d11,#5
.L1565:
	addsc.a	a2,a12,d15,#2
.L707:
	movh.a	a4,#@his(Can_RxMessageData)
	lea	a4,[a4]@los(Can_RxMessageData)

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5572      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));      (inlined)
.L131:
	ld.a	a15,[a2]
.L1566:
	addsc.a	a15,a15,d1,#0
.L1567:
	mov	d15,#25
.L1568:
	st.w	[a15]4124,d15
.L1569:
	ld.a	a15,[a2]
.L1570:
	addsc.a	a15,a15,d1,#0
.L1571:
	ld.w	d0,[a15]4120
.L1572:
	extr.u	d5,d0,#18,#11
.L1044:
	ld.a	a15,[a2]
.L1573:
	addsc.a	a15,a15,d1,#0
.L1574:
	ld.w	d0,[a15]4096
.L1575:
	sh	d15,d0,#-24
.L1576:
	and	d6,d15,#15
.L1045:
	mov	d2,d6
.L1046:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5542        if(MessageDlc > CAN_EIGHT)      (inlined)
	jlt.u	d6,#9,.L132
.L1577:
	mov	d2,#8
.L1578:
	mov	d6,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5542        if(MessageDlc > CAN_EIGHT)      (inlined)
.L132:
	sha	d15,d8,#-2
.L1047:
	addsc.a	a15,a12,d15,#2
	ld.a	a15,[a15]
.L1579:
	sha	d15,d11,#5
.L1048:
	addsc.a	a15,a15,d15,#0
	lea	a15,[a15]4096
.L1580:
	lea	a5,[a15]16
.L1049:
	lea	a6,[a15]20
.L1050:
	mov	d3,#0
.L1051:
	mov	d7,#0
.L1053:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5684    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)      (inlined)
	j	.L133
.L134:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5686      if (CAN_FOUR > MoDataIndex)      (inlined)
	jge.u	d7,#4,.L135
.L1581:
	and	d15,d7,#3
	sh	d0,d15,#3
.L1582:
	addsc.a	a15,a4,d8,#3
.L1583:
	addsc.a	a15,a15,d7,#0
.L1584:
	ld.w	d14,[a5]
.L1585:
	mov	d15,#255
	sh	d15,d15,d0
.L1586:
	and	d14,d15
.L1587:
	rsub	d0,#0
	sh	d14,d14,d0
.L1588:
	st.b	[a15],d14

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5686      if (CAN_FOUR > MoDataIndex)      (inlined)
.L135:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5695      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))      (inlined)
	jlt.u	d7,#4,.L136
.L1589:
	jge.u	d7,#8,.L137
.L1590:
	and	d15,d3,#3
	sh	d0,d15,#3
.L1591:
	addsc.a	a15,a4,d8,#3
.L1592:
	addsc.a	a15,a15,d7,#0
.L1593:
	ld.w	d14,[a6]
.L1594:
	mov	d15,#255
	sh	d15,d15,d0
.L1595:
	and	d14,d15
.L1596:
	rsub	d0,#0
	sh	d14,d14,d0
.L1597:
	st.b	[a15],d14
.L1598:
	add	d3,#1
.L1052:
	extr.u	d3,d3,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5695      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))      (inlined)
.L137:
.L136:
	add	d7,#1
.L1054:
	extr.u	d7,d7,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5684    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)      (inlined)
.L133:
	jlt.u	d7,d2,.L134
.L716:
	add	d12,#1
.L1038:
	extr.u	d12,d12,#0,#8
.L1055:
	ld.a	a15,[a2]
.L1599:
	addsc.a	a15,a15,d9,#2
.L1600:
	mov	d15,#1
.L1601:
	sh	d15,d15,d13
.L1602:
	mov	d0,#-1
	xor	d15,d0
.L1603:
	st.w	[a15]320,d15
.L1604:
	ld.a	a15,[a2]
.L1605:
	addsc.a	a15,a15,d1,#0
.L1606:
	ld.w	d15,[a15]4124
.L1056:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5569    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||      (inlined)
	jnz.t	d15:3,.L138
.L1607:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5570      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))      (inlined)
	jz.t	d15:2,.L139

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5569    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||      (inlined)
.L138:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5572      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));      (inlined)
	jlt.u	d12,#7,.L131

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5571      &&      (inlined)
.L139:
	addsc.a	a4,a4,d8,#3
.L1608:
	call	CanIf_RxIndication
.L128:
	ld.a	a15,[a13]
.L1609:
	addsc.a	a15,a15,d9,#2
.L1610:
	ld.w	d15,[a15]384
.L1611:
	and	d0,d15,#63
.L1612:
	mov	d15,#32
.L1613:
	jeq	d15,d0,.L140
.L1614:
	mov	d15,#32
.L1615:
	jlt.u	d10,d15,.L129
.L140:
	add	d9,#1
.L1034:
	extr.u	d9,d9,#0,#8
.L126:
	ld.a	a15,[a14]
.L1616:
	ld.bu	d15,[a15]50
.L1617:
	jge.u	d15,d9,.L127
.L1618:
	ld.a	a15,[a13]
.L1619:
	ld.w	d15,[a10]
.L1620:
	st.w	[a15]448,d15
.L1621:
	ret
.L665:
	
__Can_lReceiveHandler_function_end:
	.size	Can_lReceiveHandler,__Can_lReceiveHandler_function_end-Can_lReceiveHandler
.L289:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_lReceiveHandlerRuntime',code,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.text.Can_17_MCanP.Can_lReceiveHandlerRuntime'
	.align	2
	
; Function Can_lReceiveHandlerRuntime
.L198:
Can_lReceiveHandlerRuntime:	.type	func
	sub.a	a10,#16
.L1057:
	mov	d8,d4
.L1058:
	mov	d9,#0
.L1059:
	sha	d15,d8,#-2
.L1061:
	st.w	[a10]8,d15
.L1063:
	movh.a	a15,#@his(Can_NodeIdMap)
	lea	a15,[a15]@los(Can_NodeIdMap)
.L1645:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L1062:
	movh.a	a12,#@his(Can_kConfigPtr)
	lea	a12,[a12]@los(Can_kConfigPtr)
	ld.a	a15,[a12]
.L1646:
	ld.a	a15,[a15]4
.L1647:
	addsc.a	a15,a15,d15,#2
.L1648:
	ld.bu	d15,[a15]
.L1064:
	st.w	[a10]4,d15
.L1065:
	ld.bu	d10,[a15]1
.L1066:
	mov	d12,#0
.L1067:
	j	.L141
.L142:
	ld.w	d15,[a10]4
.L1069:
	add	d11,d15,d9
.L1071:
	movh.a	a13,#@his(CAN_KER)
	lea	a13,[a13]@los(CAN_KER)
	ld.w	d15,[a10]8
.L1070:
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
	sha	d15,d11,#5
.L1072:
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]4124
.L1649:
	jz.t	d0:0,.L143
.L742:
	mov	d13,#0
.L1073:
	sha	d15,d8,#-2
.L755:
	ld.a	a15,[a12]
.L1650:
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]49
.L1075:
	sub	d0,d11,d0
.L1076:
	extr.u	d5,d0,#0,#16
.L1077:
	mov	d4,d15
.L1079:
	call	Can_lGetHrhIndex
.L1078:
	mov	d4,d2

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6187    return(Hrh);      (inlined)
	j	.L144

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6188  }      (inlined)
.L144:
	sha	d1,d11,#5
	addsc.a	a2,a13,d15,#2
.L762:
	movh.a	a4,#@his(Can_RxMessageData)
	lea	a4,[a4]@los(Can_RxMessageData)

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5934      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));      (inlined)
.L145:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d1,#0
	mov	d15,#25
	st.w	[a15]4124,d15
.L1651:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d1,#0
	ld.w	d0,[a15]4120
.L1652:
	extr.u	d0,d0,#18,#11
.L1080:
	st.w	[a10],d0
.L1082:
	ld.a	a15,[a2]
	addsc.a	a15,a15,d1,#0
	ld.w	d0,[a15]4096
.L1081:
	sh	d15,d0,#-24
.L1653:
	and	d6,d15,#15
.L1083:
	mov	d3,d6
.L1084:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5904          if(MessageDlc > CAN_EIGHT)      (inlined)
	jlt.u	d6,#9,.L146
.L1654:
	mov	d3,#8
.L1655:
	mov	d6,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5904          if(MessageDlc > CAN_EIGHT)      (inlined)
.L146:
	sha	d15,d8,#-2
.L1085:
	addsc.a	a15,a13,d15,#2
	ld.a	a15,[a15]
.L1656:
	sha	d15,d11,#5
.L1086:
	addsc.a	a15,a15,d15,#0
	lea	a15,[a15]4096
.L1657:
	lea	a6,[a15]16
.L1087:
	lea	a15,[a15]20
.L1088:
	mov	d5,#0
.L1090:
	mov	d7,#0
.L1092:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6049    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)      (inlined)
	j	.L147
.L148:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6051      if (CAN_FOUR > MoDataIndex)      (inlined)
	jge.u	d7,#4,.L149
.L1658:
	and	d15,d7,#3
	sh	d14,d15,#3
.L1659:
	addsc.a	a5,a4,d8,#3
.L1660:
	addsc.a	a5,a5,d7,#0
.L1661:
	ld.w	d0,[a6]
.L1662:
	mov	d15,#255
	sh	d2,d15,d14
.L1663:
	and	d0,d2
.L1664:
	rsub	d14,#0
	sh	d0,d0,d14
.L1665:
	st.b	[a5],d0

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6051      if (CAN_FOUR > MoDataIndex)      (inlined)
.L149:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6060      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))      (inlined)
	jlt.u	d7,#4,.L150
.L1666:
	jge.u	d7,#8,.L151
.L1667:
	and	d15,d5,#3
	sh	d14,d15,#3
.L1668:
	addsc.a	a5,a4,d8,#3
.L1669:
	addsc.a	a5,a5,d7,#0
.L1670:
	ld.w	d0,[a15]
.L1671:
	mov	d15,#255
	sh	d2,d15,d14
.L1672:
	and	d0,d2
.L1673:
	rsub	d14,#0
	sh	d0,d0,d14
.L1674:
	st.b	[a5],d0
.L1675:
	add	d5,#1
.L1091:
	extr.u	d5,d5,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6060      if ((CAN_FOUR <= MoDataIndex)&& (CAN_EIGHT > MoDataIndex))      (inlined)
.L151:
.L150:
	add	d7,#1
.L1093:
	extr.u	d7,d7,#0,#8

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6049    for(MoDataIndex=CAN_ZERO; MoDataIndex < MessageLength; MoDataIndex++)      (inlined)
.L147:
	jlt.u	d7,d3,.L148
.L771:
	add	d13,#1
.L1074:
	extr.u	d13,d13,#0,#8
.L1095:
	ld.a	a15,[a2]
.L1089:
	addsc.a	a15,a15,d1,#0
	ld.w	d15,[a15]4124
.L1096:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5931    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||      (inlined)
	jnz.t	d15:3,.L152
.L1676:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5932      ((TempMoctr & CAN_MOCTR_RXUPD_CLR)  != CAN_ZERO))      (inlined)
	jz.t	d15:2,.L153

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5931    }while(((((TempMoctr & CAN_MOCTR_NEWDAT_CLR) != CAN_ZERO) ||      (inlined)
.L152:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5934      (LoopBreak2 <= CAN_EXTRACTDATA_LOOP_CNT)));      (inlined)
	jlt.u	d13,#7,.L145

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  5933      &&      (inlined)
.L153:
	addsc.a	a4,a4,d8,#3
.L1677:
	ld.w	d5,[a10]
.L1094:
	call	CanIf_RxIndication
.L143:
	add	d9,#1
.L1060:
	extr.u	d9,d9,#0,#8
.L1097:
	add	d12,#1
.L1068:
	extr.u	d12,d12,#0,#8
.L141:
	jlt.u	d12,d10,.L142
.L1678:
	ret
.L731:
	
__Can_lReceiveHandlerRuntime_function_end:
	.size	Can_lReceiveHandlerRuntime,__Can_lReceiveHandlerRuntime_function_end-Can_lReceiveHandlerRuntime
.L299:
	; End of function
	
	.sdecl	'.text.Can_17_MCanP.Can_lAllocateHwObject',code,cluster('Can_lAllocateHwObject')
	.sect	'.text.Can_17_MCanP.Can_lAllocateHwObject'
	.align	2
	

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6460                                                   CAN_SRC_CLEARMASK,CAN_SRC_SRE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6461  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6462  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6463  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6464  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6465  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6466  ** Syntax         : IFX_LOCAL_INLINE void Can_lRxFifoHandler\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6467                                        (uint8 HwControllerId,uint16 HwObjectId)**
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6468  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6469  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6470  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6471  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6472  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6473  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6474  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6475  ** Parameters (in)  : HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6476  **                    HwControllerId                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6477  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6478  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6479  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6480  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6481  ** Description      : Recieve event handler for Receive FIFO                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6482  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6483  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6484  IFX_LOCAL_INLINE void Can_lRxFifoHandler(uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6485                                       uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6486  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6487    uint16 FifoIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6488    uint16 Hfh;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6489    uint8 CurrentHardwareObject;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6490    uint8 FifoTop;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6491    uint8 FifoBottom;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6492    uint8 Threshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6493    uint8 NewThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6494    uint8 Temp;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6495    uint8 CurrentThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6496    uint8 BreakLoop;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6497    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6498    uint16 FifoTopBot;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6499  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6500    Hfh = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6501    Threshold = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6502    BreakLoop = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6503  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6504    /* Extract threshold of the current FIFO based on HwObjectId  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6505    for(FifoIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6506      ((FifoIndex < Can_kConfigPtr->CanNumRxFifo) && (BreakLoop == CAN_ZERO));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6507      FifoIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6508    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6509      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6510          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6511      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6512          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6513      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6514          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6515      if((Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwObjectId == HwObjectId) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6516        (Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6517        HwControllerId) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6518        (Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].HwControllerId
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6519        != CAN_INVALID_HW_CONTROLLER_ID))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6520      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6521        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6522          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6523        Threshold = Can_kConfigPtr->RxFifoConfigPtr[FifoIndex].RxFifoThreshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6524        Hfh = FifoIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6525        BreakLoop = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6526      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6527    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6528  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6529    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6530    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6531  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6532  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6533    /* Calculate the hfh (hardware fifo handle) number */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6534  #if ((CAN_RX_HARDWARE_OBJECTS_MAX > 0U)&&(CAN_TX_HARDWARE_OBJECTS_MAX > 0U))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6535    Hfh = Hfh + Can_kConfigPtr->CanNumRxHwObj + Can_kConfigPtr->CanNumTxHwObj;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6536  #elif (CAN_RX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6537    Hfh = Hfh + Can_kConfigPtr->CanNumRxHwObj;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6538  #elif (CAN_TX_HARDWARE_OBJECTS_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6539    Hfh = Hfh + Can_kConfigPtr->CanNumTxHwObj;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6540  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6541  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6542    /* Extract the Current Hardwareobject number, TOP and BOT of the base FIFO */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6543      FifoTop = (uint8)(((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6544              MO[HwObjectId].FGPR.U) >> CAN_MOFGPR_TOP_SHIFT) & CAN_8BIT_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6545      FifoBottom = (uint8)((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6546                                      MO[HwObjectId].FGPR.U) & CAN_8BIT_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6547    /* extract CurrentThreshold */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6548      CurrentThreshold = (uint8)(((CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U) >>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6549                  CAN_MOFGPR_SEL_SHIFT) & CAN_8BIT_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6550    if((CurrentThreshold - FifoBottom ) < Threshold)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6551    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6552      Temp = Threshold -(CurrentThreshold - FifoBottom);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6553      CurrentHardwareObject = (FifoTop - Temp)+ CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6554    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6555    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6556    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6557      CurrentHardwareObject = CurrentThreshold - Threshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6558    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6559  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6560    /* FifoTop & FifoBottom values are stored in the FifoTopBot variable
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6561    to reduce the number of input parameters to the Can_lRxFifoExtractData
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6562    function */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6563  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6564    FifoTopBot =
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6565    (uint16)((uint16)((uint16)FifoTop << CAN_EIGHT)|(uint16)FifoBottom);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6566      /* Extract data from the message object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6567      Can_lRxFifoExtractData(FifoTopBot, CurrentHardwareObject,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6568      HwControllerId,Hfh, Threshold);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6569  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6570    /* Calculate new threshold */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6571    NewThreshold = CurrentThreshold + Threshold;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6572  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6573    /* If NewThreshold is beyond TOP, reset it as per circuler linked list */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6574    if(NewThreshold > FifoTop)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6575    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6576      Temp = FifoTop - CurrentThreshold ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6577      NewThreshold = FifoBottom + ((Threshold -Temp)-CAN_ONE);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6578    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6579  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6580    /* Update new threshold */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6581     CAN_KER[KerIdx]->MO[HwObjectId].FGPR.U =(unsigned_int)((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6582                                                    MO[HwObjectId].FGPR.U &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6583                                                 CAN_MOFGPR_SEL_CLEARMASK) |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6584            (unsigned_int)((unsigned_int)NewThreshold << CAN_MOFGPR_SEL_BITPOS));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6585  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6586  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6587  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6588  #if (CAN_NUM_RX_FIFO_MAX > 0U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6589  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6590  ** Syntax           : IFX_LOCAL_INLINE void Can_lRxFifoExtractData            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6591  **                                       (                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6592  **                                          uint16 FifoTopBot,                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6593  **                                          uint8 CurrentMo,                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6594  **                                          uint8 HwControllerId,             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6595  **                                          uint16 Hfh,                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6596  **                                          uint8 Threshold                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6597  **                                        )                                   **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6598  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6599  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6600  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6601  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6602  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6603  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6604  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6605  ** Parameters (in)  : FifoTopBot - FifoTop & FifoBottom values                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6606  **                    CurrentMo  - Associated Message Object                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6607  **                    HwControllerId - Hardware Controller ID                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6608  **                    Hfh - Hardware FIFO Handler                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6609  **                    Threshold - Receive FIFO Threshold                      **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6610  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6611  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6612  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6613  ** Return value     : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6614  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6615  ** Description      : This function extracts data from the message object     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6616  **                    and notifies upper layer                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6617  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6618  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6619  IFX_LOCAL_INLINE void Can_lRxFifoExtractData(uint16 FifoTopBot,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6620                                           uint8 CurrentMo,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6621                                           uint8 HwControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6622                                           uint16 Hfh,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6623                                           uint8 Threshold)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6624  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6625    volatile uint32 *MoData;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6626    Can_IdType MessageId;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6627    uint8 MoDataIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6628    uint8 MessageDlc;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6629    uint8 Count;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6630    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6631    uint8 FifoTop;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6632    uint8 FifoBottom;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6633    uint8 locMoDataIndex3;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6634  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6635    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6636    KerIdx = CAN_CALC_KERIDX(HwControllerId);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6637  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6638    /* Extract the FifoTop & FifoBottom values from FifoTopBot */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6639    FifoBottom = (uint8)(FifoTopBot & CAN_8BIT_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6640    FifoTop = (uint8)((uint8)(FifoTopBot >> CAN_EIGHT) & CAN_8BIT_MASK);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6641  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6642    for (Count = CAN_ZERO; Count < Threshold; Count++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6643    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6644      #if ( CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6645      if ((CAN_KER[KerIdx]->MO[CurrentMo].STAT.U)& CAN_MOSTAT_MSGLST_CLR)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6646      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6647        /*Clear MSGLOST*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6648        CAN_KER[KerIdx]->MO[CurrentMo].CTR.U = CAN_MOSTAT_MSGLST_CLR;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6649  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6650        /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6651        Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6652          CAN_SID_RECEIVEISR, CAN_E_RXFIFO_DATALOST);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6653      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6654      #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6655      locMoDataIndex3= CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6656  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6657      /* Clear NEWDAT, RXPND and MSGLST(should be cleared for DET OFF case) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6658      CAN_KER[KerIdx]->MO[CurrentMo].CTR.U =\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6659             (CAN_MOCTR_NEWDAT_CLR | CAN_MOCTR_RXPND_CLR | CAN_MOSTAT_MSGLST_CLR);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6660  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6661      /* Extract the Message Id of the Current Message Object */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6662  #if (CAN_STANDARD_ID_ONLY == STD_OFF)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6663  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6664      /*  Extended frame */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6665      if ((((CAN_KER[KerIdx]->MO[CurrentMo].AR.U)\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6666                            & CAN_MOAR_IDE) >> CAN_MOAR_IDE_BITPOS) == CAN_ONE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6667      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6668        /* Extract Message Id and set MSBit */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6669        MessageId = (Can_IdType)((
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6670                  (CAN_KER[KerIdx]->MO[CurrentMo].AR.U) & CAN_MOAR_ID))\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6671                          | CAN_EXTENDED_MSB_SET;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6672      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6673      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6674  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6675        /* Standard frame */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6676  #endif /* #if (CAN_STANDARD_ID_ONLY == STD_OFF)  */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6677      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6678        MessageId = (uint32)((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6679                     MO[CurrentMo].AR.U) & CAN_MOAR_ID) >> CAN_MOAR_ID_STD_SHIFT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6680      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6681  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6682      /* Extract DLC */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6683      MessageDlc = (uint8) (((CAN_KER[KerIdx]->\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6684                  MO[CurrentMo].FCR.U) & CAN_MOFCR_DLC) >> CAN_MOFCR_DLC_BITPOS);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6685  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6686      if(MessageDlc > CAN_EIGHT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6687      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6688        MessageDlc = CAN_EIGHT;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6689      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6690  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6691      /* Extract Recived message Data */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6692      /*IFX_MISRA_RULE_11_05_STATUS= To efficiently access the SFR's
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6693        uint32* is typecasted to unit8* via void pointer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6694      MoData = ((volatile uint32 *)(void *)&\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6695                                        CAN_KER[KerIdx]->MO[CurrentMo].DATAL.U);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6696  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6697      for(MoDataIndex=0U;MoDataIndex<MessageDlc;MoDataIndex++)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6698      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6699        /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6700          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6701        Can_RxFifoMessageData[HwControllerId][MoDataIndex]=\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6702            (uint8)(((MoData[locMoDataIndex3])\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6703                          & CAN_MO_SETMASK(MoDataIndex % CAN_FOUR))>>\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6704                          CAN_MO_BIT_SHIFT_COUNT(MoDataIndex % CAN_FOUR));
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6705  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6706          if((MoDataIndex % CAN_FOUR)==3U)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6707           {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6708            locMoDataIndex3++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6709           }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6710      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6711  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6712      /* Notify the upper layer */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6713      CanIf_RxIndication((Can_HwHandleType)Hfh,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6714        MessageId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6715        MessageDlc,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6716        &Can_RxFifoMessageData[HwControllerId][CAN_ZERO]);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6717  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6718      CurrentMo++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6719  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6720      /* If CurrentMo goes beyond TOP, Set CurrentMo to FifoBottom */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6721      if(CurrentMo > FifoTop)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6722      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6723        CurrentMo = FifoBottom;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6724      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6725    }/* End of for loop */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6726  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6727  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6728  #endif /* #if (CAN_NUM_RX_FIFO_MAX > 0U) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6729  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6730  #if (CAN_CHANGE_BAUDRATE_API == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6731  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6732  ** Syntax           : static uint8 Can_lSearchBaudrate                        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6733  **                          (                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6734  **                            uint8 Controller,                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6735  **                            const uint16 Baudrate                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6736  **                          )                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6737  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6738  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6739  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6740  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6741  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6742  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6743  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6744  ** Parameters (in)  : Controller - Associated CAN Controller                  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6745  **                    Baudrate - Baudrate to be checked                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6746  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6747  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6748  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6749  ** Return value     : uint8 : Baudrate configuration index                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6750  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6751  ** Description      : Checks if the CAN Controller Baudrate is configured or  **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6752  **                    not                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6753  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6754  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6755  static uint8 Can_lSearchBaudrate(uint8 Controller, const uint16 Baudrate)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6756  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6757    const Can_17_MCanP_ControllerBaudrateConfigType *BaudrateCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6758    const Can_BaudrateConfigPtrType *CanBaudrateCfgPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6759    uint8 BaudrateCfgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6760    uint8 BreakLoop;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6761  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6762    BaudrateCfgIndex = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6763    BreakLoop = CAN_ZERO;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6764  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6765    /* Get the baudrate configuration index */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6766    CanBaudrateCfgPtr = Can_kConfigPtr->CanBaudrateConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6767    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6768          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6769    CanBaudrateCfgPtr += Controller;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6770  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6771    while((BaudrateCfgIndex < Can_kConfigPtr->CanNumBaudrateCfgs[Controller]) &&
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6772      (BreakLoop == CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6773    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6774      BaudrateCfgPtr = CanBaudrateCfgPtr->Can_kBaudrateConfigPtr;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6775      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used due to
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6776          PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6777      BaudrateCfgPtr += BaudrateCfgIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6778  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6779      /* check if baudrate is configured */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6780      if(BaudrateCfgPtr->CanControllerBaudrateCfg == Baudrate)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6781      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6782        BreakLoop = CAN_ONE;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6783      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6784      else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6785      {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6786        BaudrateCfgIndex++;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6787      }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6788    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6789  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6790    return (BaudrateCfgIndex);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6791  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6792  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6793  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6794  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6795  ** TRACEABILITY: [cover parentID=DS_AS_CAN280]                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6796  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6797  ** Syntax           : static Std_ReturnType Can_lAllocateHwObject             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6798  **                                          (                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6799  **                                            uint8 AssociatedController,     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6800  **                                            uint16 HwObjectId               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6801  **                                          )                                 **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6802  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6803  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6804  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6805  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6806  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6807  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6808  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6809  ** Reentrancy       : Non-Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6810  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6811  ** Parameters (in)  : AssociatedController - CAN Controller Id                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6812  **                    HwObjectId - Message Object Id                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6813  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6814  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6815  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6816  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6817  **                    - E_OK: Message object allocation successful            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6818  **                    - E_NOT_OK: Message object allocation failed            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6819  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6820  ** Description      : Allocates the Message Object to corresponding CAN       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6821  **                    CAN Controller List                                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6822  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6823  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6824  static Std_ReturnType Can_lAllocateHwObject(uint8 HwControllerId,
; Function Can_lAllocateHwObject
.L200:
Can_lAllocateHwObject:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6825                                              uint16 HwObjectId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6826  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6827    uint32 TimeOutIndex;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6828    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6829    uint8 TempPanar2;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6830    uint8 KerIdx;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6831  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6832    RetVal = E_OK;
	mov	d2,#0
.L1098:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6833    /* Calculate to which kernel, the controller belongs to*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6834    KerIdx = CAN_CALC_KERIDX(HwControllerId);
	sha	d0,d4,#-2
.L1099:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6835  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6836    /* Give command to allocate the hardware object to its associated controller
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6837    Note: Controller 0 ==> List 1 and Controller 1 ==> List 2 */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6838    TempPanar2 = (CAN_CALC_HWCTRLID(HwControllerId)) + CAN_ONE;
	and	d15,d4,#3
.L1101:
	add	d15,#1
.L794:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6839    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	movh.a	a15,#@his(CAN_KER)
	lea	a15,[a15]@los(CAN_KER)
	addsc.a	a15,a15,d0,#2
	ld.a	a2,[a15]
	ld.w	d0,[a2]452
.L1100:
	insert	d0,d0,#0,#24,#8
	sh	d15,d15,#24
.L1102:
	or	d0,d15
	ld.a	a2,[a15]
	st.w	[a2]452,d0
.L795:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6840      CAN_PANCTR_PANAR2_CLEARMASK,(uint32)TempPanar2 << CAN_PANCTR_PANAR2_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6841    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	ld.a	a2,[a15]
	ld.w	d15,[a2]452
.L1104:
	insert	d15,d15,#0,#16,#8
	sh	d0,d5,#16
.L1103:
	or	d15,d0
	ld.a	a2,[a15]
	st.w	[a2]452,d15
.L797:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6842      CAN_PANCTR_PANAR1_CLEARMASK,(uint32)HwObjectId << CAN_PANCTR_PANAR1_BITPOS)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6843    CAN_SFR_INIT_USER_MODE_MODIFY32(CAN_KER[KerIdx]->PANCTR.U,\ 
	ld.a	a2,[a15]
	ld.w	d15,[a2]452
.L1105:
	insert	d15,d15,#0,#0,#8
	or	d15,#2
	ld.a	a2,[a15]
	st.w	[a2]452,d15
.L799:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6844                          CAN_PANCTR_PANCMD_CLEARMASK,CAN_PANCMD_STATIC_ALLOCATE)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6845  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6846    /* Wait until hardware object is allocated to the controller */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6847    TimeOutIndex = CAN_TIMEOUT_DURATION;
	mov	d15,#400
.L1106:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6848  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6849  #ifdef IFX_CAN_DEBUG02
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6850    while (((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6851          CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS) |\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6852          TestCan_lAllocateHwObject()) == CAN_ONE) && (TimeOutIndex != CAN_ZERO))
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6853   #else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6854    while ((((CAN_SFR_INIT_USER_MODE_READ32(CAN_KER[KerIdx]->PANCTR.U) &\ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6855                CAN_PANCTR_BUSY) >> CAN_PANCTR_BUSY_BITPOS)  == CAN_ONE) && \ 
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6856                                                      (TimeOutIndex != CAN_ZERO))
	j	.L154
.L155:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6857  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6858    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6859      TimeOutIndex-- ;
	add	d15,#-1
.L154:
	ld.a	a2,[a15]
	ld.w	d0,[a2]452
.L1694:
	jz.t	d0:8,.L156
.L1695:
	jne	d15,#0,.L155
.L156:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6860    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6861  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6862    /* The detection of production code errors cannot be switched off.
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6863    This requirement will be violated in case of HIS requirements */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6864    if (TimeOutIndex == CAN_ZERO)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6865    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6866      /* Report hardware errors and failures to DEM */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6867  #if (CAN_E_TIMEOUT_DEM_REPORT == CAN_ENABLE_DEM_REPORT)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6868      Dem_ReportErrorStatus((Dem_EventIdType)CAN_E_TIMEOUT,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6869        DEM_EVENT_STATUS_FAILED);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6870  #endif
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6871  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6872      RetVal = E_NOT_OK;
	cmovn	d2,d15,#1
.L157:

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6873    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6874    return(RetVal);
	j	.L158

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6875  }
.L158:
	ret
.L787:
	
__Can_lAllocateHwObject_function_end:
	.size	Can_lAllocateHwObject,__Can_lAllocateHwObject_function_end-Can_lAllocateHwObject
.L309:
	; End of function
	
	.sdecl	'.rodata.Can_17_MCanP.CAN_NUM_CONTROLLERS_IN_KERNEL',data,rom,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.rodata.Can_17_MCanP.CAN_NUM_CONTROLLERS_IN_KERNEL'
CAN_NUM_CONTROLLERS_IN_KERNEL:	.type	object
	.size	CAN_NUM_CONTROLLERS_IN_KERNEL,1
	.byte	4
	.sdecl	'.bss.Can_17_MCanP.Can_SwObjectHandle',data,cluster('Can_SwObjectHandle')
	.sect	'.bss.Can_17_MCanP.Can_SwObjectHandle'
	.align	2
Can_SwObjectHandle:	.type	object
	.size	Can_SwObjectHandle,20
	.space	20
	.sdecl	'.bss.MCANP_RAM_8BIT_ALIGN_2',data,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.bss.MCANP_RAM_8BIT_ALIGN_2'
	.align	2
Can_17_MCanP_InterruptDisableCount:	.type	object
	.size	Can_17_MCanP_InterruptDisableCount,2
	.space	2
	.sdecl	'.bss.MCANP_RAM_8BIT_ALIGN_2',data,cluster('Can_InterruptsEnabledStatus')
	.sect	'.bss.MCANP_RAM_8BIT_ALIGN_2'
	.align	2
Can_InterruptsEnabledStatus:	.type	object
	.size	Can_InterruptsEnabledStatus,2
	.space	2
	.sdecl	'.bss.MCANP_RAM_8BIT_ALIGN_2',data,cluster('Can_NodeIdMap')
	.sect	'.bss.MCANP_RAM_8BIT_ALIGN_2'
	.align	2
Can_NodeIdMap:	.type	object
	.size	Can_NodeIdMap,4
	.space	4
	.sdecl	'.bss.MCANP_RAM_8BIT_ALIGN_2',data,cluster('Can_17_MCanP_DriverState')
	.sect	'.bss.MCANP_RAM_8BIT_ALIGN_2'
	.align	2
Can_17_MCanP_DriverState:	.type	object
	.size	Can_17_MCanP_DriverState,1
	.space	1
	.sdecl	'.bss.MCANP_RAM_8BIT_ALIGN_2',data,cluster('Can_RxMessageData')
	.sect	'.bss.MCANP_RAM_8BIT_ALIGN_2'
	.align	2
Can_RxMessageData:	.type	object
	.size	Can_RxMessageData,32
	.space	32
	.sdecl	'.data.Can_17_MCanP.Can_kConfigPtr',data,cluster('Can_kConfigPtr')
	.sect	'.data.Can_17_MCanP.Can_kConfigPtr'
	.global	Can_kConfigPtr
	.align	4
Can_kConfigPtr:	.type	object
	.size	Can_kConfigPtr,4
	.space	4
	.sdecl	'.bss.Can_17_MCanP.Can_RxMsiMask',data,cluster('Can_RxMsiMask')
	.sect	'.bss.Can_17_MCanP.Can_RxMsiMask'
	.align	4
Can_RxMsiMask:	.type	object
	.size	Can_RxMsiMask,128
	.space	128
	.sdecl	'.bss.Can_17_MCanP.Can_TxMsiMask',data,cluster('Can_TxMsiMask')
	.sect	'.bss.Can_17_MCanP.Can_TxMsiMask'
	.align	4
Can_TxMsiMask:	.type	object
	.size	Can_TxMsiMask,128
	.space	128
	.sdecl	'.data.Can_17_MCanP.Can_17_MCanP_ControllerMode',data,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.data.Can_17_MCanP.Can_17_MCanP_ControllerMode'
	.align	4
Can_17_MCanP_ControllerMode:	.type	object
	.size	Can_17_MCanP_ControllerMode,8
	.space	8
	.calls	'Can_17_MCanP_Init','Mcal_ResetENDINIT'
	.calls	'Can_17_MCanP_Init','Mcal_SetENDINIT'
	.calls	'Can_17_MCanP_Init','Can_lSetBaudrate'
	.calls	'Can_17_MCanP_Init','Can_lAllocateHwObject'
	.calls	'Can_17_MCanP_SetControllerMode','Can_lClearReceivedMsg'
	.calls	'Can_17_MCanP_SetControllerMode','Can_lClearReceivedMsgRuntime'
	.calls	'Can_17_MCanP_SetControllerMode','CanIf_ControllerModeIndication'
	.calls	'Can_17_MCanP_DisableControllerInterrupts','SchM_Enter_Can_17_MCanP_CanDisInt'
	.calls	'Can_17_MCanP_DisableControllerInterrupts','SchM_Exit_Can_17_MCanP_CanDisInt'
	.calls	'Can_17_MCanP_EnableControllerInterrupts','SchM_Enter_Can_17_MCanP_CanEnInt'
	.calls	'Can_17_MCanP_EnableControllerInterrupts','SchM_Exit_Can_17_MCanP_CanEnInt'
	.calls	'Can_17_MCanP_Write','SchM_Enter_Can_17_MCanP_CanWrMO'
	.calls	'Can_17_MCanP_Write','SchM_Exit_Can_17_MCanP_CanWrMO'
	.calls	'Can_17_MCanP_Write','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_MainFunction_Write','Can_17_MCanP_IsrTransmitRuntime'
	.calls	'Can_17_MCanP_MainFunction_Read','Can_lReceiveHandlerRuntime'
	.calls	'Can_17_MCanP_MainFunction_BusOff','Can_17_MCanP_IsrBusOffRuntime'
	.calls	'Can_17_MCanP_IsrReceiveHandler','Can_lReceiveHandler'
	.calls	'Can_17_MCanP_IsrTransmitHandler','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_IsrTransmitHandler','CanIf_TxConfirmation'
	.calls	'Can_17_MCanP_IsrTransmitRuntime','Can_lGetHthIndex'
	.calls	'Can_17_MCanP_IsrTransmitRuntime','CanIf_TxConfirmation'
	.calls	'Can_17_MCanP_IsrBusOffHandler','CanIf_ControllerBusOff'
	.calls	'Can_17_MCanP_IsrBusOffRuntime','CanIf_ControllerBusOff'
	.calls	'Can_lReceiveHandler','Can_lGetHrhIndex'
	.calls	'Can_lReceiveHandler','CanIf_RxIndication'
	.calls	'Can_lReceiveHandlerRuntime','Can_lGetHrhIndex'
	.calls	'Can_lReceiveHandlerRuntime','CanIf_RxIndication'
	.calls	'Can_17_MCanP_Init','',8
	.calls	'Can_17_MCanP_SetControllerMode','',0
	.calls	'Can_17_MCanP_DisableControllerInterrupts','',0
	.calls	'Can_17_MCanP_EnableControllerInterrupts','',0
	.calls	'Can_17_MCanP_Write','',8
	.calls	'Can_17_MCanP_MainFunction_Write','',0
	.calls	'Can_17_MCanP_MainFunction_Read','',0
	.calls	'Can_17_MCanP_MainFunction_BusOff','',0
	.calls	'Can_17_MCanP_MainFunction_Wakeup','',0
	.calls	'Can_17_MCanP_MainFunction_Mode','',0
	.calls	'Can_17_MCanP_CheckWakeup','',0
	.calls	'Can_17_MCanP_IsrReceiveHandler','',0
	.calls	'Can_17_MCanP_IsrTransmitHandler','',8
	.calls	'Can_17_MCanP_IsrTransmitRuntime','',0
	.calls	'Can_17_MCanP_IsrBusOffHandler','',0
	.calls	'Can_17_MCanP_IsrBusOffRuntime','',0
	.calls	'Can_lClearReceivedMsg','',8
	.calls	'Can_lClearReceivedMsgRuntime','',0
	.calls	'Can_lReceiveHandler','',8
	.calls	'Can_lReceiveHandlerRuntime','',16
	.extern	SchM_Enter_Can_17_MCanP_CanDisInt
	.extern	SchM_Exit_Can_17_MCanP_CanDisInt
	.extern	SchM_Enter_Can_17_MCanP_CanEnInt
	.extern	SchM_Exit_Can_17_MCanP_CanEnInt
	.extern	SchM_Enter_Can_17_MCanP_CanWrMO
	.extern	SchM_Exit_Can_17_MCanP_CanWrMO
	.extern	Mcal_ResetENDINIT
	.extern	Mcal_SetENDINIT
	.extern	CAN_KER
	.extern	Can_lSetBaudrate
	.extern	Can_lGetHthIndex
	.extern	Can_lGetHrhIndex
	.extern	CanIf_RxIndication
	.extern	CanIf_TxConfirmation
	.extern	CanIf_ControllerBusOff
	.extern	CanIf_ControllerModeIndication
	.calls	'Can_lAllocateHwObject','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L202:
	.word	181365
	.half	3
	.word	.L203
	.byte	4
.L201:
	.byte	1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L204
.L341:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'Gtm_GetMcsRamRstStat',0,3,1,221,33,32
	.word	163
	.byte	1,1,4
	.byte	'McsModule',0,1,221,33,60
	.word	163
	.byte	5,0
.L335:
	.byte	6
	.byte	'Can_lInitGlobalVar',0,3,2,177,19,23,1,1
.L338:
	.byte	5,0
.L346:
	.byte	3
	.byte	'Can_lInitClkSetting',0,3,2,145,20,33
	.word	163
	.byte	1,1
.L347:
	.byte	7
.L359:
	.byte	5
.L365:
	.byte	5,0,0
.L368:
	.byte	3
	.byte	'Can_lInitDemCheck',0,3,2,136,22,33
	.word	163
	.byte	1,1
.L370:
	.byte	5,0
.L381:
	.byte	6
	.byte	'Can_lInitializeController',0,3,2,208,22,23,1,1
.L383:
	.byte	4
	.byte	'ControllerId',0,2,208,22,55
	.word	163
.L385:
	.byte	4
	.byte	'HwControllerId',0,2,209,22,51
	.word	163
.L387:
	.byte	7
.L393:
	.byte	5
.L400:
	.byte	5
.L402:
	.byte	5
.L406:
	.byte	5
.L409:
	.byte	5,5,5,5,0,0
.L377:
	.byte	6
	.byte	'Can_lInitControllerStatus',0,3,2,205,29,23,1,1
.L379:
	.byte	7,5,0,0
.L430:
	.byte	3
	.byte	'Can_lInitMsgObj',0,3,2,227,23,33
	.word	163
	.byte	1,1
.L432:
	.byte	7,5,5,0,0
.L434:
	.byte	3
	.byte	'Can_lInitTxMsgObj',0,3,2,145,24,33
	.word	163
	.byte	1,1
.L435:
	.byte	7
.L445:
	.byte	5
.L449:
	.byte	5
.L453:
	.byte	5
.L460:
	.byte	5,0,0
.L462:
	.byte	3
	.byte	'Can_lInitRxMsgObj',0,3,2,133,26,33
	.word	163
	.byte	1,1
.L464:
	.byte	7
.L474:
	.byte	5
.L478:
	.byte	5
.L482:
	.byte	5
.L485:
	.byte	5
.L492:
	.byte	5,0,0
.L523:
	.byte	6
	.byte	'Can_lDisableInterrupts',0,3,2,166,34,23,1,1
.L526:
	.byte	4
	.byte	'Controller',0,2,166,34,53
	.word	163
.L528:
	.byte	7
.L539:
	.byte	5
.L543:
	.byte	5
.L546:
	.byte	5,0,0
.L550:
	.byte	6
	.byte	'Can_lEnableInterrupts',0,3,2,140,35,23,1,1
.L553:
	.byte	4
	.byte	'Controller',0,2,140,35,51
	.word	163
.L555:
	.byte	7
.L564:
	.byte	5
.L568:
	.byte	5
.L572:
	.byte	5,0,0
.L412:
	.byte	6
	.byte	'Can_lClearAndEnableInterrupt',0,3,2,170,50,23,1,1
.L414:
	.byte	4
	.byte	'ServiceRequestNumber',0,2,171,50,48
	.word	163
.L416:
	.byte	7
.L417:
	.byte	5
.L420:
	.byte	5,0,0
.L494:
	.byte	8,3,117,9,4,9
	.byte	'CAN_OK',0,0,9
	.byte	'CAN_NOT_OK',0,1,9
	.byte	'CAN_BUSY',0,2,0
.L339:
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.word	163
.L363:
	.byte	2
	.byte	'unsigned int',0,4,7,11,3,75,9,12,12
	.byte	'sdu',0
	.word	815
	.byte	4,2,35,0,12
	.byte	'id',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'swPduHandle',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'length',0
	.word	163
	.byte	1,2,35,10,0,13
	.word	836
.L577:
	.byte	10
	.word	904
.L582:
	.byte	3
	.byte	'Can_lWriteMsgObj',0,3,2,135,37,33
	.word	754
	.byte	1,1
.L584:
	.byte	4
	.byte	'HthIndex',0,2,135,37,57
	.word	793
.L586:
	.byte	4
	.byte	'HwObjectId',0,2,136,37,53
	.word	793
.L588:
	.byte	4
	.byte	'PduInfo',0,2,137,37,65
	.word	909
.L590:
	.byte	7
.L603:
	.byte	5
.L607:
	.byte	5
.L611:
	.byte	5
.L614:
	.byte	5,0,0
.L695:
	.byte	3
	.byte	'Can_lCalculateHrhId',0,3,2,145,48,25
	.word	793
	.byte	1,1
.L696:
	.byte	4
	.byte	'KerIdx',0,2,145,48,51
	.word	163
.L698:
	.byte	4
	.byte	'HwObjectId',0,2,145,48,66
	.word	793
.L700:
	.byte	5,0
.L674:
	.byte	6
	.byte	'Can_lRxIsrExtractData',0,3,2,166,42,23,1,1
.L677:
	.byte	4
	.byte	'HwControllerId',0,2,166,42,51
	.word	163
.L679:
	.byte	4
	.byte	'HwObjectId',0,2,167,42,48
	.word	793
.L681:
	.byte	4
	.byte	'MsgIndex',0,2,168,42,47
	.word	163
.L683:
	.byte	4
	.byte	'PndBitPosition',0,2,169,42,47
	.word	163
.L685:
	.byte	7,5,5,0,0
.L706:
	.byte	6
	.byte	'Can_lReadMsgObject',0,3,2,131,44,23,1,1
.L708:
	.byte	4
	.byte	'HwControllerId',0,2,131,44,48
	.word	163
.L710:
	.byte	4
	.byte	'HwObjectId',0,2,132,44,49
	.word	793
.L712:
	.byte	4
	.byte	'MessageLength',0,2,132,44,66
	.word	163
.L714:
	.byte	5,0
.L741:
	.byte	6
	.byte	'Can_lRxIsrExtractDataRuntime',0,3,2,147,45,23,1,1
.L743:
	.byte	4
	.byte	'HwControllerId',0,2,147,45,58
	.word	163
.L745:
	.byte	4
	.byte	'HwObjectId',0,2,148,45,48
	.word	793
.L747:
	.byte	7,5,5,0,0
.L761:
	.byte	6
	.byte	'Can_lReadMsgObjectRuntime',0,3,2,240,46,23,1,1
.L763:
	.byte	4
	.byte	'HwControllerId',0,2,240,46,55
	.word	163
.L765:
	.byte	4
	.byte	'HwObjectId',0,2,241,46,49
	.word	793
.L767:
	.byte	4
	.byte	'MessageLength',0,2,241,46,66
	.word	163
.L769:
	.byte	5,0
.L497:
	.byte	8,3,96,9,4,9
	.byte	'CAN_T_START',0,0,9
	.byte	'CAN_T_STOP',0,1,9
	.byte	'CAN_T_SLEEP',0,2,9
	.byte	'CAN_T_WAKEUP',0,3,9
	.byte	'CAN_T_MAXTRANSITION',0,4,0
.L501:
	.byte	6
	.byte	'Can_lSetModeWuSupportOff',0,3,2,182,31,23,1,1
.L503:
	.byte	4
	.byte	'Controller',0,2,182,31,54
	.word	163
.L505:
	.byte	4
	.byte	'HwControllerId',0,2,183,31,50
	.word	163
.L507:
	.byte	4
	.byte	'Transition',0,2,184,31,68
	.word	1481
.L509:
	.byte	7
.L515:
	.byte	5
.L518:
	.byte	5,0,0,14
	.byte	'SchM_Enter_Can_17_MCanP_CanDisInt',0,4,72,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanDisInt',0,4,92,13,1,1,1,1,14
	.byte	'SchM_Enter_Can_17_MCanP_CanEnInt',0,4,112,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanEnInt',0,4,132,1,13,1,1,1,1,14
	.byte	'SchM_Enter_Can_17_MCanP_CanWrMO',0,4,152,1,13,1,1,1,1,14
	.byte	'SchM_Exit_Can_17_MCanP_CanWrMO',0,4,172,1,13,1,1,1,1,14
	.byte	'Mcal_ResetENDINIT',0,5,115,13,1,1,1,1,14
	.byte	'Mcal_SetENDINIT',0,5,142,1,13,1,1,1,1,15
	.byte	'Can_NPCRValueType',0,6,188,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	793
	.byte	2,2,35,0,0,13
	.word	1964
	.byte	10
	.word	2012
.L804:
	.byte	16,4
	.word	163
	.byte	17,3,0,15
	.byte	'Can_ControllerMOMapConfigType',0,6,181,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	2022
	.byte	4,2,35,0,0,13
	.word	2031
	.byte	10
	.word	2093
	.byte	15
	.byte	'Can_EventHandlingType',0,6,226,4,16,4,12
	.byte	'CanEventType',0
	.word	2022
	.byte	4,2,35,0,0,13
	.word	2103
	.byte	10
	.word	2154
	.byte	15
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,6,194,4,16,8,12
	.byte	'CanControllerBaudrate',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	793
	.byte	2,2,35,4,0,13
	.word	2164
	.byte	10
	.word	2278
	.byte	15
	.byte	'Can_BaudrateConfigPtrType',0,6,201,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	2283
	.byte	4,2,35,0,0,13
	.word	2288
	.byte	10
	.word	2353
	.byte	15
	.byte	'Can_TxHwObjectConfigType',0,6,231,3,16,8,12
	.byte	'MsgObjId',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'TxObjPriorityClass',0
	.word	820
	.byte	4,2,35,4,0,13
	.word	2363
.L436:
	.byte	10
	.word	2465
	.byte	15
	.byte	'Can_RxHwObjectConfigType',0,6,129,4,16,12,12
	.byte	'MaskRef',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'MsgId',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'MsgObjId',0
	.word	163
	.byte	1,2,35,8,12
	.byte	'HwControllerId',0
	.word	163
	.byte	1,2,35,9,0,13
	.word	2475
.L465:
	.byte	10
	.word	2581
	.byte	13
	.word	163
	.byte	10
	.word	2591
	.byte	13
	.word	793
	.byte	10
	.word	2601
.L803:
	.byte	16,2
	.word	163
	.byte	17,1,0,16,1
	.word	163
	.byte	17,0,0,15
	.byte	'Can_17_MCanP_ConfigType',0,6,236,4,16,56,12
	.byte	'CanNpcrPtr',0
	.word	2017
	.byte	4,2,35,0,12
	.byte	'CanControllerMOMapConfigPtr',0
	.word	2098
	.byte	4,2,35,4,12
	.byte	'CanEventHandlingConfigPtr',0
	.word	2159
	.byte	4,2,35,8,12
	.byte	'CanBaudrateConfigPtr',0
	.word	2358
	.byte	4,2,35,12,12
	.byte	'CanDefaultBaudrateConfigPtr',0
	.word	2283
	.byte	4,2,35,16,12
	.byte	'CanTxHwObjectConfigPtr',0
	.word	2470
	.byte	4,2,35,20,12
	.byte	'CanRxHwObjectConfigPtr',0
	.word	2586
	.byte	4,2,35,24,12
	.byte	'CanTxObjectHthKer0MapPtr',0
	.word	2596
	.byte	4,2,35,28,12
	.byte	'CanRxObjectHrhKer0MapPtr',0
	.word	2606
	.byte	4,2,35,32,12
	.byte	'CanFdrSetting',0
	.word	793
	.byte	2,2,35,36,12
	.byte	'CanNumController',0
	.word	163
	.byte	1,2,35,38,12
	.byte	'CanHwControllerIdMap',0
	.word	2611
	.byte	2,2,35,39,12
	.byte	'CanNumBaudrateCfgs',0
	.word	2611
	.byte	2,2,35,41,12
	.byte	'CanNumTxHwObj',0
	.word	793
	.byte	2,2,35,44,12
	.byte	'CanNumRxHwObj',0
	.word	793
	.byte	2,2,35,46,12
	.byte	'CanTxHwObjCntKer',0
	.word	2620
	.byte	1,2,35,48,12
	.byte	'CanRxHwObjCntKer',0
	.word	2620
	.byte	1,2,35,49,12
	.byte	'CanRxLastMspndIdx',0
	.word	163
	.byte	1,2,35,50,12
	.byte	'CanTxFirstMspndIdx',0
	.word	163
	.byte	1,2,35,51,12
	.byte	'CanTxLastMspndIdx',0
	.word	163
	.byte	1,2,35,52,0,13
	.word	2629
.L333:
	.byte	10
	.word	3238
.L343:
	.byte	18
	.word	163
.L351:
	.byte	18
	.word	820
.L353:
	.byte	18
	.word	163
.L356:
	.byte	18
	.word	163
.L375:
	.byte	18
	.word	163
	.byte	18
	.word	820
.L529:
	.byte	10
	.word	3273
.L591:
	.byte	18
	.word	820
.L645:
	.byte	18
	.word	820
	.byte	19
	.byte	'Can_lSetBaudrate',0,7,145,1,13,1,1,1,1,4
	.byte	'HwControllerId',0,7,145,1,36
	.word	163
	.byte	4
	.byte	'ControllerBaudrate',0,7,146,1,37
	.word	820
	.byte	4
	.byte	'ApiAccesId',0,7,146,1,62
	.word	163
	.byte	0,20
	.byte	'Can_lGetHthIndex',0,7,148,1,15
	.word	793
	.byte	1,1,1,1,4
	.byte	'KerIdx',0,7,148,1,38
	.word	163
	.byte	4
	.byte	'TxMOIdx',0,7,148,1,53
	.word	793
	.byte	0,20
	.byte	'Can_lGetHrhIndex',0,7,149,1,15
	.word	793
	.byte	1,1,1,1,4
	.byte	'KerIdx',0,7,149,1,38
	.word	163
	.byte	4
	.byte	'HrhOffset',0,7,149,1,53
	.word	793
	.byte	0,21
	.word	180
	.byte	22
	.word	213
	.byte	5,0,19
	.byte	'CanIf_RxIndication',0,8,47,31,1,1,1,1,4
	.byte	'Hrh',0,8,48,83
	.word	793
	.byte	4
	.byte	'CanId',0,8,49,77
	.word	820
	.byte	4
	.byte	'CanDlc',0,8,50,72
	.word	163
	.byte	4
	.byte	'CanSduPtr',0,8,51,94
	.word	2596
	.byte	0,19
	.byte	'CanIf_TxConfirmation',0,9,67,31,1,1,1,1,4
	.byte	'CanTxPduId',0,9,67,77
	.word	793
	.byte	0,19
	.byte	'CanIf_ControllerBusOff',0,9,81,31,1,1,1,1,4
	.byte	'ControllerId',0,9,81,75
	.word	163
	.byte	0,8,10,72,9,4,9
	.byte	'CANIF_CS_UNINIT',0,0,9
	.byte	'CANIF_CS_SLEEP',0,1,9
	.byte	'CANIF_CS_STARTED',0,2,9
	.byte	'CANIF_CS_STOPPED',0,3,0,19
	.byte	'CanIf_ControllerModeIndication',0,9,88,31,1,1,1,1,4
	.byte	'ControllerId',0,9,88,84
	.word	163
	.byte	4
	.byte	'ControllerMode',0,9,89,50
	.word	3723
	.byte	0,21
	.word	234
	.byte	5,0,21
	.word	263
	.byte	7,5,5,0,0,21
	.word	300
	.byte	5,0,21
	.word	332
	.byte	22
	.word	366
	.byte	22
	.word	388
	.byte	7,5,5,5,5,5,23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,5,23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,5,23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,5,0,0,21
	.word	423
	.byte	7,23
	.word	332
	.byte	22
	.word	366
	.byte	22
	.word	388
	.byte	24
	.word	412
	.byte	25
	.word	413
	.byte	25
	.word	414
	.byte	25
	.word	415
	.byte	25
	.word	416
	.byte	25
	.word	417
	.byte	23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,25
	.word	418
	.byte	23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,25
	.word	419
	.byte	23
	.word	682
	.byte	22
	.word	719
	.byte	24
	.word	749
	.byte	25
	.word	750
	.byte	25
	.word	751
	.byte	0,0,25
	.word	420
	.byte	0,0,5,0,0,21
	.word	461
	.byte	7,23
	.word	494
	.byte	24
	.word	524
	.byte	25
	.word	525
	.byte	25
	.word	526
	.byte	25
	.word	527
	.byte	25
	.word	528
	.byte	0,0,5,23
	.word	531
	.byte	24
	.word	561
	.byte	25
	.word	562
	.byte	25
	.word	563
	.byte	25
	.word	564
	.byte	25
	.word	565
	.byte	25
	.word	566
	.byte	0,0,5,0,0,21
	.word	494
	.byte	7,5,5,5,5,0,0,21
	.word	531
	.byte	7,5,5,5,5,5,0,0,21
	.word	569
	.byte	22
	.word	600
	.byte	7,5,5,5,0,0,21
	.word	626
	.byte	22
	.word	656
	.byte	7,5,5,5,0,0,21
	.word	682
	.byte	22
	.word	719
	.byte	7,5,5,0,0,21
	.word	914
	.byte	22
	.word	943
	.byte	22
	.word	961
	.byte	22
	.word	981
	.byte	7,5,5,5,5,0,0
.L667:
	.byte	18
	.word	820
.L724:
	.byte	18
	.word	820
	.byte	21
	.word	1005
	.byte	22
	.word	1037
	.byte	22
	.word	1053
	.byte	5,0,21
	.word	1075
	.byte	22
	.word	1105
	.byte	22
	.word	1129
	.byte	22
	.word	1149
	.byte	22
	.word	1167
	.byte	7,23
	.word	1005
	.byte	22
	.word	1037
	.byte	22
	.word	1053
	.byte	25
	.word	1073
	.byte	0,5,23
	.word	1196
	.byte	22
	.word	1223
	.byte	22
	.word	1247
	.byte	22
	.word	1267
	.byte	25
	.word	1290
	.byte	0,5,0,0,21
	.word	1196
	.byte	22
	.word	1223
	.byte	22
	.word	1247
	.byte	22
	.word	1267
	.byte	5,0,21
	.word	1292
	.byte	22
	.word	1329
	.byte	22
	.word	1353
	.byte	7,23
	.word	1005
	.byte	22
	.word	1037
	.byte	22
	.word	1053
	.byte	25
	.word	1073
	.byte	0,5,23
	.word	1378
	.byte	22
	.word	1412
	.byte	22
	.word	1436
	.byte	22
	.word	1456
	.byte	25
	.word	1479
	.byte	0,5,0,0,21
	.word	1378
	.byte	22
	.word	1412
	.byte	22
	.word	1436
	.byte	22
	.word	1456
	.byte	5,0,21
	.word	1565
	.byte	22
	.word	1598
	.byte	22
	.word	1618
	.byte	22
	.word	1642
	.byte	7,5,5,0,0,26,1,10
	.word	4587
	.byte	27
	.byte	'__codeptr',0,2,1,1
	.word	4589
	.byte	15
	.byte	'_Ifx_CAN_ACCEN0_Bits',0,11,49,16,4,28
	.byte	'EN0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'EN1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'EN2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'EN3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'EN4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'EN5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'EN6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'EN7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'EN8',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'EN9',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'EN10',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'EN11',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'EN12',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'EN13',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'EN14',0,1
	.word	163
	.byte	1,1,2,35,1,28
	.byte	'EN15',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'EN16',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'EN17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'EN18',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'EN19',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'EN20',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'EN21',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'EN22',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'EN23',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'EN24',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'EN25',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'EN26',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'EN27',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'EN28',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'EN29',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'EN30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'EN31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_CAN_ACCEN0_Bits',0,11,83,3
	.word	4612
	.byte	15
	.byte	'_Ifx_CAN_ACCEN1_Bits',0,11,86,16,4,28
	.byte	'reserved_0',0,4
	.word	820
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CAN_ACCEN1_Bits',0,11,89,3
	.word	5169
	.byte	15
	.byte	'_Ifx_CAN_CLC_Bits',0,11,92,16,4,28
	.byte	'DISR',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'DISS',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'EDIS',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_CAN_CLC_Bits',0,11,99,3
	.word	5246
	.byte	15
	.byte	'_Ifx_CAN_FDR_Bits',0,11,102,16,4,28
	.byte	'STEP',0,2
	.word	793
	.byte	10,6,2,35,0,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	4,2,2,35,1,28
	.byte	'DM',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_FDR_Bits',0,11,108,3
	.word	5387
	.byte	15
	.byte	'_Ifx_CAN_ID_Bits',0,11,111,16,4,28
	.byte	'MOD_REV',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'MOD_TYPE',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'MODNUMBER',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_ID_Bits',0,11,116,3
	.word	5512
	.byte	15
	.byte	'_Ifx_CAN_KRST0_Bits',0,11,119,16,4,28
	.byte	'RST',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'RSTSTAT',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_CAN_KRST0_Bits',0,11,124,3
	.word	5619
	.byte	15
	.byte	'_Ifx_CAN_KRST1_Bits',0,11,127,16,4,28
	.byte	'RST',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,4
	.word	820
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CAN_KRST1_Bits',0,11,131,1,3
	.word	5728
	.byte	15
	.byte	'_Ifx_CAN_KRSTCLR_Bits',0,11,134,1,16,4,28
	.byte	'CLR',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,4
	.word	820
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_CAN_KRSTCLR_Bits',0,11,138,1,3
	.word	5819
	.byte	15
	.byte	'_Ifx_CAN_LIST_Bits',0,11,141,1,16,4,28
	.byte	'BEGIN',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'END',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SIZE',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'EMPTY',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'reserved_25',0,1
	.word	163
	.byte	7,0,2,35,3,0,27
	.byte	'Ifx_CAN_LIST_Bits',0,11,148,1,3
	.word	5915
	.byte	15
	.byte	'_Ifx_CAN_MCR_Bits',0,11,151,1,16,4,28
	.byte	'CLKSEL',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'reserved_4',0,2
	.word	793
	.byte	8,4,2,35,0,28
	.byte	'MPSEL',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_MCR_Bits',0,11,157,1,3
	.word	6056
	.byte	15
	.byte	'_Ifx_CAN_MECR_Bits',0,11,160,1,16,4,28
	.byte	'TH',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'INP',0,1
	.word	163
	.byte	4,4,2,35,2,28
	.byte	'NODE',0,1
	.word	163
	.byte	3,1,2,35,2,28
	.byte	'reserved_23',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'ANYED',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'CAPEIE',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'DEPTH',0,1
	.word	163
	.byte	3,2,2,35,3,28
	.byte	'SOF',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_CAN_MECR_Bits',0,11,172,1,3
	.word	6187
	.byte	15
	.byte	'_Ifx_CAN_MESTAT_Bits',0,11,175,1,16,4,28
	.byte	'CAPT',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'CAPRED',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'CAPE',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'reserved_18',0,2
	.word	793
	.byte	14,0,2,35,2,0,27
	.byte	'Ifx_CAN_MESTAT_Bits',0,11,181,1,3
	.word	6421
	.byte	15
	.byte	'_Ifx_CAN_MITR_Bits',0,11,184,1,16,4,28
	.byte	'IT',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_MITR_Bits',0,11,188,1,3
	.word	6551
	.byte	15
	.byte	'_Ifx_CAN_MO_AMR_Bits',0,11,191,1,16,4,28
	.byte	'AM',0,4
	.word	820
	.byte	29,3,2,35,0,28
	.byte	'MIDE',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_AMR_Bits',0,11,196,1,3
	.word	6641
	.byte	15
	.byte	'_Ifx_CAN_MO_AR_Bits',0,11,199,1,16,4,28
	.byte	'ID',0,4
	.word	820
	.byte	29,3,2,35,0,28
	.byte	'IDE',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'PRI',0,1
	.word	163
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_AR_Bits',0,11,204,1,3
	.word	6751
	.byte	15
	.byte	'_Ifx_CAN_MO_CTR_Bits',0,11,207,1,16,4,28
	.byte	'RESRXPND',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'RESTXPND',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'RESRXUPD',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'RESNEWDAT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'RESMSGLST',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'RESMSGVAL',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'RESRTSEL',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'RESRXEN',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'RESTXRQ',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'RESTXEN0',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'RESTXEN1',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'RESDIR',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'SETRXPND',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'SETTXPND',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'SETRXUPD',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'SETNEWDAT',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'SETMSGLST',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'SETMSGVAL',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'SETRTSEL',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'SETRXEN',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'SETTXRQ',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'SETTXEN0',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'SETTXEN1',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'SETDIR',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_CTR_Bits',0,11,235,1,3
	.word	6850
	.byte	15
	.byte	'_Ifx_CAN_MO_DATAH_Bits',0,11,238,1,16,4,28
	.byte	'DB4',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB5',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB6',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB7',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_DATAH_Bits',0,11,244,1,3
	.word	7431
	.byte	15
	.byte	'_Ifx_CAN_MO_DATAL_Bits',0,11,247,1,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_DATAL_Bits',0,11,253,1,3
	.word	7552
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA0_Bits',0,11,128,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA0_Bits',0,11,134,2,3
	.word	7673
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA1_Bits',0,11,137,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA1_Bits',0,11,143,2,3
	.word	7796
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA2_Bits',0,11,146,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA2_Bits',0,11,152,2,3
	.word	7919
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA3_Bits',0,11,155,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA3_Bits',0,11,161,2,3
	.word	8042
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA4_Bits',0,11,164,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA4_Bits',0,11,170,2,3
	.word	8165
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA5_Bits',0,11,173,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA5_Bits',0,11,179,2,3
	.word	8288
	.byte	15
	.byte	'_Ifx_CAN_MO_EDATA6_Bits',0,11,182,2,16,4,28
	.byte	'DB0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'DB1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DB2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'DB3',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_EDATA6_Bits',0,11,188,2,3
	.word	8411
	.byte	15
	.byte	'_Ifx_CAN_MO_FCR_Bits',0,11,191,2,16,4,28
	.byte	'MMC',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'RXTOE',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'BRS',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'FDF',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'reserved_7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'GDFS',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'IDC',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'DLCC',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'DATC',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'RXIE',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'TXIE',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'OVIE',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'reserved_19',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'FRREN',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'RMM',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'SDT',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'STT',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'DLC',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_FCR_Bits',0,11,213,2,3
	.word	8534
	.byte	15
	.byte	'_Ifx_CAN_MO_FGPR_Bits',0,11,216,2,16,4,28
	.byte	'BOT',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'TOP',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'CUR',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'SEL',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_FGPR_Bits',0,11,222,2,3
	.word	8932
	.byte	15
	.byte	'_Ifx_CAN_MO_IPR_Bits',0,11,225,2,16,4,28
	.byte	'RXINP',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'TXINP',0,1
	.word	163
	.byte	4,0,2,35,0,28
	.byte	'MPN',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'CFCVAL',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_MO_IPR_Bits',0,11,231,2,3
	.word	9051
	.byte	15
	.byte	'_Ifx_CAN_MO_STAT_Bits',0,11,234,2,16,4,28
	.byte	'RXPND',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'TXPND',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'RXUPD',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'NEWDAT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'MSGLST',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'MSGVAL',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'RTSEL',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'RXEN',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'TXRQ',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'TXEN0',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'TXEN1',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'DIR',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'LIST',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'PPREV',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'PNEXT',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_MO_STAT_Bits',0,11,251,2,3
	.word	9175
	.byte	15
	.byte	'_Ifx_CAN_MSID_Bits',0,11,254,2,16,4,28
	.byte	'INDEX',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'reserved_6',0,4
	.word	820
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_CAN_MSID_Bits',0,11,130,3,3
	.word	9487
	.byte	15
	.byte	'_Ifx_CAN_MSIMASK_Bits',0,11,133,3,16,4,28
	.byte	'IM',0,4
	.word	820
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CAN_MSIMASK_Bits',0,11,136,3,3
	.word	9579
	.byte	15
	.byte	'_Ifx_CAN_MSPND_Bits',0,11,139,3,16,4,28
	.byte	'PND',0,4
	.word	820
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_CAN_MSPND_Bits',0,11,142,3,3
	.word	9652
	.byte	15
	.byte	'_Ifx_CAN_N_BTEVR_Bits',0,11,145,3,16,4,28
	.byte	'BRP',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'reserved_6',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'SJW',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'DIV8',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'TSEG2',0,1
	.word	163
	.byte	5,3,2,35,2,28
	.byte	'reserved_21',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'TSEG1',0,2
	.word	793
	.byte	6,4,2,35,2,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_CAN_N_BTEVR_Bits',0,11,156,3,3
	.word	9722
	.byte	15
	.byte	'_Ifx_CAN_N_BTR_Bits',0,11,159,3,16,4,28
	.byte	'BRP',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'SJW',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'TSEG1',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'TSEG2',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'DIV8',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_N_BTR_Bits',0,11,167,3,3
	.word	9952
	.byte	15
	.byte	'_Ifx_CAN_N_CR_Bits',0,11,170,3,16,4,28
	.byte	'INIT',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'TRIE',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'LECIE',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'ALIE',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'CANDIS',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'TXDIS',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'CCE',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'CALM',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'SUSEN',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'FDEN',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'reserved_10',0,4
	.word	820
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_CAN_N_CR_Bits',0,11,183,3,3
	.word	10110
	.byte	15
	.byte	'_Ifx_CAN_N_ECNT_Bits',0,11,186,3,16,4,28
	.byte	'REC',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'TEC',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'EWRNLVL',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'LETD',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'LEINC',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	6,0,2,35,3,0,27
	.byte	'Ifx_CAN_N_ECNT_Bits',0,11,194,3,3
	.word	10350
	.byte	15
	.byte	'_Ifx_CAN_N_FBTR_Bits',0,11,197,3,16,4,28
	.byte	'FBRP',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'FSJW',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'FTSEG1',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'FTSEG2',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'reserved_15',0,4
	.word	820
	.byte	17,0,2,35,0,0,27
	.byte	'Ifx_CAN_N_FBTR_Bits',0,11,204,3,3
	.word	10512
	.byte	15
	.byte	'_Ifx_CAN_N_FCR_Bits',0,11,207,3,16,4,28
	.byte	'CFC',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'CFSEL',0,1
	.word	163
	.byte	3,5,2,35,2,28
	.byte	'CFMOD',0,1
	.word	163
	.byte	2,3,2,35,2,28
	.byte	'reserved_21',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'CFCIE',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'CFCOV',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_N_FCR_Bits',0,11,216,3,3
	.word	10660
	.byte	15
	.byte	'_Ifx_CAN_N_IPR_Bits',0,11,219,3,16,4,28
	.byte	'ALINP',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'LECINP',0,1
	.word	163
	.byte	4,0,2,35,0,28
	.byte	'TRINP',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'CFCINP',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'TEINP',0,1
	.word	163
	.byte	4,4,2,35,2,28
	.byte	'reserved_20',0,2
	.word	793
	.byte	12,0,2,35,2,0,27
	.byte	'Ifx_CAN_N_IPR_Bits',0,11,227,3,3
	.word	10844
	.byte	15
	.byte	'_Ifx_CAN_N_PCR_Bits',0,11,230,3,16,4,28
	.byte	'RXSEL',0,1
	.word	163
	.byte	3,5,2,35,0,28
	.byte	'reserved_3',0,1
	.word	163
	.byte	5,0,2,35,0,28
	.byte	'LBM',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'reserved_9',0,4
	.word	820
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_CAN_N_PCR_Bits',0,11,236,3,3
	.word	11009
	.byte	15
	.byte	'_Ifx_CAN_N_SR_Bits',0,11,239,3,16,4,28
	.byte	'LEC',0,1
	.word	163
	.byte	3,5,2,35,0,28
	.byte	'TXOK',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'RXOK',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'ALERT',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'EWRN',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'BOFF',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'LLE',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'LOE',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'SUSACK',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'RESI',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'FLEC',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'reserved_15',0,4
	.word	820
	.byte	17,0,2,35,0,0,27
	.byte	'Ifx_CAN_N_SR_Bits',0,11,253,3,3
	.word	11140
	.byte	15
	.byte	'_Ifx_CAN_N_TCCR_Bits',0,11,128,4,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'TPSC',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'reserved_12',0,4
	.word	820
	.byte	6,14,2,35,0,28
	.byte	'TRIGSRC',0,1
	.word	163
	.byte	3,3,2,35,2,28
	.byte	'reserved_21',0,2
	.word	793
	.byte	11,0,2,35,2,0,27
	.byte	'Ifx_CAN_N_TCCR_Bits',0,11,135,4,3
	.word	11392
	.byte	15
	.byte	'_Ifx_CAN_N_TDCR_Bits',0,11,138,4,16,4,28
	.byte	'TDCV',0,1
	.word	163
	.byte	5,3,2,35,0,28
	.byte	'reserved_5',0,1
	.word	163
	.byte	3,0,2,35,0,28
	.byte	'TDCO',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'TDC',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_CAN_N_TDCR_Bits',0,11,146,4,3
	.word	11552
	.byte	15
	.byte	'_Ifx_CAN_N_TRTR_Bits',0,11,149,4,16,4,28
	.byte	'RELOAD',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'reserved_16',0,1
	.word	163
	.byte	6,2,2,35,2,28
	.byte	'TEIE',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'TE',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_N_TRTR_Bits',0,11,156,4,3
	.word	11724
	.byte	15
	.byte	'_Ifx_CAN_N_TTTR_Bits',0,11,159,4,16,4,28
	.byte	'RELOAD',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'TXMO',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'STRT',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'reserved_25',0,1
	.word	163
	.byte	7,0,2,35,3,0,27
	.byte	'Ifx_CAN_N_TTTR_Bits',0,11,165,4,3
	.word	11875
	.byte	15
	.byte	'_Ifx_CAN_OCS_Bits',0,11,168,4,16,4,28
	.byte	'TGS',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'TGB',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'TG_P',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	20,8,2,35,0,28
	.byte	'SUS',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'SUS_P',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'SUSSTA',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_CAN_OCS_Bits',0,11,178,4,3
	.word	12005
	.byte	15
	.byte	'_Ifx_CAN_PANCTR_Bits',0,11,181,4,16,4,28
	.byte	'PANCMD',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'BUSY',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'RBUSY',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	6,0,2,35,1,28
	.byte	'PANAR1',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'PANAR2',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_CAN_PANCTR_Bits',0,11,189,4,3
	.word	12197
	.byte	2
	.byte	'int',0,4,5,29,11,197,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	4612
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_ACCEN0',0,11,202,4,3
	.word	12371
	.byte	29,11,205,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5169
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_ACCEN1',0,11,210,4,3
	.word	12435
	.byte	29,11,213,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5246
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_CLC',0,11,218,4,3
	.word	12499
	.byte	29,11,221,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5387
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_FDR',0,11,226,4,3
	.word	12560
	.byte	29,11,229,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5512
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_ID',0,11,234,4,3
	.word	12621
	.byte	29,11,237,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5619
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_KRST0',0,11,242,4,3
	.word	12681
	.byte	29,11,245,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5728
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_KRST1',0,11,250,4,3
	.word	12744
	.byte	29,11,253,4,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5819
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_KRSTCLR',0,11,130,5,3
	.word	12807
	.byte	29,11,133,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	5915
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_LIST',0,11,138,5,3
	.word	12872
	.byte	29,11,141,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6056
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MCR',0,11,146,5,3
	.word	12934
	.byte	29,11,149,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6187
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MECR',0,11,154,5,3
	.word	12995
	.byte	29,11,157,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6421
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MESTAT',0,11,162,5,3
	.word	13057
	.byte	29,11,165,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6551
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MITR',0,11,170,5,3
	.word	13121
	.byte	29,11,173,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6641
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_AMR',0,11,178,5,3
	.word	13183
	.byte	29,11,181,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6751
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_AR',0,11,186,5,3
	.word	13247
	.byte	29,11,189,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	6850
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_CTR',0,11,194,5,3
	.word	13310
	.byte	29,11,197,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7431
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_DATAH',0,11,202,5,3
	.word	13374
	.byte	29,11,205,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7552
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_DATAL',0,11,210,5,3
	.word	13440
	.byte	29,11,213,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7673
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA0',0,11,218,5,3
	.word	13506
	.byte	29,11,221,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7796
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA1',0,11,226,5,3
	.word	13573
	.byte	29,11,229,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	7919
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA2',0,11,234,5,3
	.word	13640
	.byte	29,11,237,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8042
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA3',0,11,242,5,3
	.word	13707
	.byte	29,11,245,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8165
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA4',0,11,250,5,3
	.word	13774
	.byte	29,11,253,5,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8288
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA5',0,11,130,6,3
	.word	13841
	.byte	29,11,133,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8411
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_EDATA6',0,11,138,6,3
	.word	13908
	.byte	29,11,141,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8534
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_FCR',0,11,146,6,3
	.word	13975
	.byte	29,11,149,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	8932
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_FGPR',0,11,154,6,3
	.word	14039
	.byte	29,11,157,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9051
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_IPR',0,11,162,6,3
	.word	14104
	.byte	29,11,165,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9175
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MO_STAT',0,11,170,6,3
	.word	14168
	.byte	29,11,173,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9487
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MSID',0,11,178,6,3
	.word	14233
	.byte	29,11,181,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9579
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MSIMASK',0,11,186,6,3
	.word	14295
	.byte	29,11,189,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9652
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_MSPND',0,11,194,6,3
	.word	14360
	.byte	29,11,197,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9722
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_BTEVR',0,11,202,6,3
	.word	14423
	.byte	29,11,205,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	9952
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_BTR',0,11,210,6,3
	.word	14488
	.byte	29,11,213,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10110
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_CR',0,11,218,6,3
	.word	14551
	.byte	29,11,221,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10350
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_ECNT',0,11,226,6,3
	.word	14613
	.byte	29,11,229,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10512
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_FBTR',0,11,234,6,3
	.word	14677
	.byte	29,11,237,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10660
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_FCR',0,11,242,6,3
	.word	14741
	.byte	29,11,245,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	10844
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_IPR',0,11,250,6,3
	.word	14804
	.byte	29,11,253,6,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11009
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_PCR',0,11,130,7,3
	.word	14867
	.byte	29,11,133,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11140
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_SR',0,11,138,7,3
	.word	14930
	.byte	29,11,141,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11392
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_TCCR',0,11,146,7,3
	.word	14992
	.byte	29,11,149,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11552
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_TDCR',0,11,154,7,3
	.word	15056
	.byte	29,11,157,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11724
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_TRTR',0,11,162,7,3
	.word	15120
	.byte	29,11,165,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	11875
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_N_TTTR',0,11,170,7,3
	.word	15184
	.byte	29,11,173,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12005
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_OCS',0,11,178,7,3
	.word	15248
	.byte	29,11,181,7,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	12197
	.byte	4,2,35,0,0,27
	.byte	'Ifx_CAN_PANCTR',0,11,186,7,3
	.word	15309
	.byte	29,11,199,7,5,4,12
	.byte	'EDATA0',0
	.word	13506
	.byte	4,2,35,0,12
	.byte	'FCR',0
	.word	13975
	.byte	4,2,35,0,0,29,11,205,7,5,4,12
	.byte	'EDATA1',0
	.word	13573
	.byte	4,2,35,0,12
	.byte	'FGPR',0
	.word	14039
	.byte	4,2,35,0,0,29,11,211,7,5,4,12
	.byte	'EDATA2',0
	.word	13640
	.byte	4,2,35,0,12
	.byte	'IPR',0
	.word	14104
	.byte	4,2,35,0,0,29,11,217,7,5,4,12
	.byte	'AMR',0
	.word	13183
	.byte	4,2,35,0,12
	.byte	'EDATA3',0
	.word	13707
	.byte	4,2,35,0,0,29,11,223,7,5,4,12
	.byte	'DATAL',0
	.word	13440
	.byte	4,2,35,0,12
	.byte	'EDATA4',0
	.word	13774
	.byte	4,2,35,0,0,29,11,229,7,5,4,12
	.byte	'DATAH',0
	.word	13374
	.byte	4,2,35,0,12
	.byte	'EDATA5',0
	.word	13841
	.byte	4,2,35,0,0,29,11,235,7,5,4,12
	.byte	'AR',0
	.word	13247
	.byte	4,2,35,0,12
	.byte	'EDATA6',0
	.word	13908
	.byte	4,2,35,0,0,29,11,241,7,5,4,12
	.byte	'CTR',0
	.word	13310
	.byte	4,2,35,0,12
	.byte	'STAT',0
	.word	14168
	.byte	4,2,35,0,0,15
	.byte	'_Ifx_CAN_MO',0,11,197,7,25,32,30
	.word	15373
	.byte	4,2,35,0,30
	.word	15409
	.byte	4,2,35,4,30
	.word	15446
	.byte	4,2,35,8,30
	.word	15482
	.byte	4,2,35,12,30
	.word	15518
	.byte	4,2,35,16,30
	.word	15556
	.byte	4,2,35,20,30
	.word	15594
	.byte	4,2,35,24,30
	.word	15629
	.byte	4,2,35,28,0,18
	.word	15663
	.byte	27
	.byte	'Ifx_CAN_MO',0,11,247,7,3
	.word	15754
	.byte	29,11,128,8,5,4,12
	.byte	'BTEVR',0
	.word	14423
	.byte	4,2,35,0,12
	.byte	'BTR',0
	.word	14488
	.byte	4,2,35,0,0,16,8
	.word	163
	.byte	17,7,0,16,192,1
	.word	163
	.byte	17,191,1,0,15
	.byte	'_Ifx_CAN_N',0,11,250,7,25,128,2,12
	.byte	'CR',0
	.word	14551
	.byte	4,2,35,0,12
	.byte	'SR',0
	.word	14930
	.byte	4,2,35,4,12
	.byte	'IPR',0
	.word	14804
	.byte	4,2,35,8,12
	.byte	'PCR',0
	.word	14867
	.byte	4,2,35,12,30
	.word	15779
	.byte	4,2,35,16,12
	.byte	'ECNT',0
	.word	14613
	.byte	4,2,35,20,12
	.byte	'FCR',0
	.word	14741
	.byte	4,2,35,24,12
	.byte	'TCCR',0
	.word	14992
	.byte	4,2,35,28,12
	.byte	'TRTR',0
	.word	15120
	.byte	4,2,35,32,12
	.byte	'TATTR',0
	.word	15184
	.byte	4,2,35,36,12
	.byte	'TBTTR',0
	.word	15184
	.byte	4,2,35,40,12
	.byte	'TCTTR',0
	.word	15184
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	15814
	.byte	8,2,35,48,12
	.byte	'FBTR',0
	.word	14677
	.byte	4,2,35,56,12
	.byte	'TDCR',0
	.word	15056
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	15823
	.byte	192,1,2,35,64,0,18
	.word	15834
	.byte	27
	.byte	'Ifx_CAN_N',0,11,145,8,3
	.word	16083
	.byte	16,4
	.word	163
	.byte	17,3,0,16,216,1
	.word	163
	.byte	17,215,1,0,16,64
	.word	12872
	.byte	17,15,0,16,32
	.word	14360
	.byte	17,7,0,16,32
	.word	163
	.byte	17,31,0,16,32
	.word	14233
	.byte	17,7,0,16,40
	.word	163
	.byte	17,39,0,16,128,8
	.word	15834
	.byte	17,3,0,18
	.word	16172
	.byte	16,128,20
	.word	163
	.byte	17,255,19,0,16,128,64
	.word	15663
	.byte	17,255,1,0,18
	.word	16198
	.byte	16,128,32
	.word	163
	.byte	17,255,31,0,15
	.byte	'_Ifx_CAN',0,11,158,8,25,128,128,1,12
	.byte	'CLC',0
	.word	12499
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	16107
	.byte	4,2,35,4,12
	.byte	'ID',0
	.word	12621
	.byte	4,2,35,8,12
	.byte	'FDR',0
	.word	12560
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	16116
	.byte	216,1,2,35,16,12
	.byte	'OCS',0
	.word	15248
	.byte	4,3,35,232,1,12
	.byte	'KRSTCLR',0
	.word	12807
	.byte	4,3,35,236,1,12
	.byte	'KRST1',0
	.word	12744
	.byte	4,3,35,240,1,12
	.byte	'KRST0',0
	.word	12681
	.byte	4,3,35,244,1,12
	.byte	'ACCEN1',0
	.word	12435
	.byte	4,3,35,248,1,12
	.byte	'ACCEN0',0
	.word	12371
	.byte	4,3,35,252,1,12
	.byte	'LIST',0
	.word	16127
	.byte	64,3,35,128,2,12
	.byte	'MSPND',0
	.word	16136
	.byte	32,3,35,192,2,12
	.byte	'reserved_160',0
	.word	16145
	.byte	32,3,35,224,2,12
	.byte	'MSID',0
	.word	16154
	.byte	32,3,35,128,3,12
	.byte	'reserved_1A0',0
	.word	16145
	.byte	32,3,35,160,3,12
	.byte	'MSIMASK',0
	.word	14295
	.byte	4,3,35,192,3,12
	.byte	'PANCTR',0
	.word	15309
	.byte	4,3,35,196,3,12
	.byte	'MCR',0
	.word	12934
	.byte	4,3,35,200,3,12
	.byte	'MITR',0
	.word	13121
	.byte	4,3,35,204,3,12
	.byte	'MECR',0
	.word	12995
	.byte	4,3,35,208,3,12
	.byte	'MESTAT',0
	.word	13057
	.byte	4,3,35,212,3,12
	.byte	'reserved_1D8',0
	.word	16163
	.byte	40,3,35,216,3,12
	.byte	'N',0
	.word	16182
	.byte	128,8,3,35,128,4,12
	.byte	'reserved_600',0
	.word	16187
	.byte	128,20,3,35,128,12,12
	.byte	'MO',0
	.word	16209
	.byte	128,64,3,35,128,32,12
	.byte	'reserved_3000',0
	.word	16214
	.byte	128,32,3,35,128,96,0,18
	.word	16225
	.byte	27
	.byte	'Ifx_CAN',0,11,187,8,3
	.word	16708
	.byte	15
	.byte	'_Ifx_SRC_SRCR_Bits',0,12,45,16,4,28
	.byte	'SRPN',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	2,6,2,35,1,28
	.byte	'SRE',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'TOS',0,1
	.word	163
	.byte	2,3,2,35,1,28
	.byte	'reserved_13',0,1
	.word	163
	.byte	3,0,2,35,1,28
	.byte	'ECC',0,1
	.word	163
	.byte	6,2,2,35,2,28
	.byte	'reserved_22',0,1
	.word	163
	.byte	2,0,2,35,2,28
	.byte	'SRR',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'CLRR',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'SETR',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'IOV',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'IOVCLR',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'SWS',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'SWSCLR',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SRC_SRCR_Bits',0,12,62,3
	.word	16730
	.byte	29,12,70,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	16730
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SRC_SRCR',0,12,75,3
	.word	17046
	.byte	15
	.byte	'_Ifx_SRC_AGBT',0,12,86,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	17106
	.byte	27
	.byte	'Ifx_SRC_AGBT',0,12,89,3
	.word	17138
	.byte	15
	.byte	'_Ifx_SRC_ASCLIN',0,12,92,25,12,12
	.byte	'TX',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	17046
	.byte	4,2,35,8,0,18
	.word	17164
	.byte	27
	.byte	'Ifx_SRC_ASCLIN',0,12,97,3
	.word	17223
	.byte	15
	.byte	'_Ifx_SRC_BCUSPB',0,12,100,25,4,12
	.byte	'SBSRC',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	17251
	.byte	27
	.byte	'Ifx_SRC_BCUSPB',0,12,103,3
	.word	17288
	.byte	16,64
	.word	17046
	.byte	17,15,0,15
	.byte	'_Ifx_SRC_CAN',0,12,106,25,64,12
	.byte	'INT',0
	.word	17316
	.byte	64,2,35,0,0,18
	.word	17325
	.byte	27
	.byte	'Ifx_SRC_CAN',0,12,109,3
	.word	17357
	.byte	15
	.byte	'_Ifx_SRC_CCU6',0,12,112,25,16,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	17046
	.byte	4,2,35,12,0,18
	.word	17382
	.byte	27
	.byte	'Ifx_SRC_CCU6',0,12,118,3
	.word	17454
	.byte	16,8
	.word	17046
	.byte	17,1,0,15
	.byte	'_Ifx_SRC_CERBERUS',0,12,121,25,8,12
	.byte	'SR',0
	.word	17480
	.byte	8,2,35,0,0,18
	.word	17489
	.byte	27
	.byte	'Ifx_SRC_CERBERUS',0,12,124,3
	.word	17525
	.byte	15
	.byte	'_Ifx_SRC_CIF',0,12,127,25,16,12
	.byte	'MI',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'MIEP',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'ISP',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'MJPEG',0
	.word	17046
	.byte	4,2,35,12,0,18
	.word	17555
	.byte	27
	.byte	'Ifx_SRC_CIF',0,12,133,1,3
	.word	17628
	.byte	15
	.byte	'_Ifx_SRC_CPU',0,12,136,1,25,4,12
	.byte	'SBSRC',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	17654
	.byte	27
	.byte	'Ifx_SRC_CPU',0,12,139,1,3
	.word	17689
	.byte	16,24
	.word	17046
	.byte	17,5,0,15
	.byte	'_Ifx_SRC_DAM',0,12,142,1,25,24,12
	.byte	'SR',0
	.word	17715
	.byte	24,2,35,0,0,18
	.word	17724
	.byte	27
	.byte	'Ifx_SRC_DAM',0,12,145,1,3
	.word	17756
	.byte	16,12
	.word	163
	.byte	17,11,0,16,128,2
	.word	17046
	.byte	17,63,0,15
	.byte	'_Ifx_SRC_DMA',0,12,148,1,25,144,2,12
	.byte	'ERR',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	17782
	.byte	12,2,35,4,12
	.byte	'CH',0
	.word	17791
	.byte	128,2,2,35,16,0,18
	.word	17801
	.byte	27
	.byte	'Ifx_SRC_DMA',0,12,153,1,3
	.word	17868
	.byte	15
	.byte	'_Ifx_SRC_DSADC',0,12,156,1,25,8,12
	.byte	'SRM',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SRA',0
	.word	17046
	.byte	4,2,35,4,0,18
	.word	17894
	.byte	27
	.byte	'Ifx_SRC_DSADC',0,12,160,1,3
	.word	17942
	.byte	15
	.byte	'_Ifx_SRC_EMEM',0,12,163,1,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	17970
	.byte	27
	.byte	'Ifx_SRC_EMEM',0,12,166,1,3
	.word	18003
	.byte	15
	.byte	'_Ifx_SRC_ERAY',0,12,169,1,25,80,12
	.byte	'INT',0
	.word	17480
	.byte	8,2,35,0,12
	.byte	'TINT',0
	.word	17480
	.byte	8,2,35,8,12
	.byte	'NDAT',0
	.word	17480
	.byte	8,2,35,16,12
	.byte	'MBSC',0
	.word	17480
	.byte	8,2,35,24,12
	.byte	'OBUSY',0
	.word	17046
	.byte	4,2,35,32,12
	.byte	'IBUSY',0
	.word	17046
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	16163
	.byte	40,2,35,40,0,18
	.word	18030
	.byte	27
	.byte	'Ifx_SRC_ERAY',0,12,178,1,3
	.word	18157
	.byte	15
	.byte	'_Ifx_SRC_ETH',0,12,181,1,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	18184
	.byte	27
	.byte	'Ifx_SRC_ETH',0,12,184,1,3
	.word	18216
	.byte	15
	.byte	'_Ifx_SRC_FCE',0,12,187,1,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	18242
	.byte	27
	.byte	'Ifx_SRC_FCE',0,12,190,1,3
	.word	18274
	.byte	16,16
	.word	163
	.byte	17,15,0,15
	.byte	'_Ifx_SRC_GPSR',0,12,193,1,25,32,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	17046
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	18300
	.byte	16,2,35,16,0,18
	.word	18309
	.byte	27
	.byte	'Ifx_SRC_GPSR',0,12,200,1,3
	.word	18403
	.byte	16,24
	.word	163
	.byte	17,23,0,15
	.byte	'_Ifx_SRC_GPT12',0,12,203,1,25,48,12
	.byte	'CIRQ',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'T2',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'T3',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'T4',0
	.word	17046
	.byte	4,2,35,12,12
	.byte	'T5',0
	.word	17046
	.byte	4,2,35,16,12
	.byte	'T6',0
	.word	17046
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	18430
	.byte	24,2,35,24,0,18
	.word	18439
	.byte	27
	.byte	'Ifx_SRC_GPT12',0,12,212,1,3
	.word	18556
	.byte	16,12
	.word	17046
	.byte	17,2,0,16,32
	.word	17046
	.byte	17,7,0,16,32
	.word	18593
	.byte	17,0,0,16,88
	.word	163
	.byte	17,87,0,16,108
	.word	17046
	.byte	17,26,0,16,96
	.word	163
	.byte	17,95,0,16,128,1
	.word	18593
	.byte	17,3,0,16,128,3
	.word	163
	.byte	17,255,2,0,16,96
	.word	18593
	.byte	17,2,0,16,160,3
	.word	163
	.byte	17,159,3,0,16,16
	.word	17046
	.byte	17,3,0,16,80
	.word	18679
	.byte	17,4,0,16,176,2
	.word	163
	.byte	17,175,2,0,16,48
	.word	163
	.byte	17,47,0,15
	.byte	'_Ifx_SRC_GTM',0,12,215,1,25,208,18,12
	.byte	'AEIIRQ',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'ARUIRQ',0
	.word	18584
	.byte	12,2,35,4,12
	.byte	'reserved_10',0
	.word	16107
	.byte	4,2,35,16,12
	.byte	'BRCIRQ',0
	.word	17046
	.byte	4,2,35,20,12
	.byte	'CMPIRQ',0
	.word	17046
	.byte	4,2,35,24,12
	.byte	'SPEIRQ',0
	.word	17480
	.byte	8,2,35,28,12
	.byte	'reserved_24',0
	.word	15814
	.byte	8,2,35,36,12
	.byte	'PSM',0
	.word	18602
	.byte	32,2,35,44,12
	.byte	'reserved_4C',0
	.word	18611
	.byte	88,2,35,76,12
	.byte	'DPLL',0
	.word	18620
	.byte	108,3,35,164,1,12
	.byte	'reserved_110',0
	.word	18629
	.byte	96,3,35,144,2,12
	.byte	'ERR',0
	.word	17046
	.byte	4,3,35,240,2,12
	.byte	'reserved_174',0
	.word	17782
	.byte	12,3,35,244,2,12
	.byte	'TIM',0
	.word	18638
	.byte	128,1,3,35,128,3,12
	.byte	'reserved_200',0
	.word	18648
	.byte	128,3,3,35,128,4,12
	.byte	'MCS',0
	.word	18638
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	18648
	.byte	128,3,3,35,128,8,12
	.byte	'TOM',0
	.word	18659
	.byte	96,3,35,128,11,12
	.byte	'reserved_5E0',0
	.word	18668
	.byte	160,3,3,35,224,11,12
	.byte	'ATOM',0
	.word	18688
	.byte	80,3,35,128,15,12
	.byte	'reserved_7D0',0
	.word	18697
	.byte	176,2,3,35,208,15,12
	.byte	'MCSW0',0
	.word	18679
	.byte	16,3,35,128,18,12
	.byte	'reserved_910',0
	.word	18708
	.byte	48,3,35,144,18,12
	.byte	'MCSW1',0
	.word	18679
	.byte	16,3,35,192,18,0,18
	.word	18717
	.byte	27
	.byte	'Ifx_SRC_GTM',0,12,241,1,3
	.word	19179
	.byte	15
	.byte	'_Ifx_SRC_HSCT',0,12,244,1,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	19205
	.byte	27
	.byte	'Ifx_SRC_HSCT',0,12,247,1,3
	.word	19238
	.byte	15
	.byte	'_Ifx_SRC_HSM',0,12,250,1,25,8,12
	.byte	'HSM',0
	.word	17480
	.byte	8,2,35,0,0,18
	.word	19265
	.byte	27
	.byte	'Ifx_SRC_HSM',0,12,253,1,3
	.word	19298
	.byte	15
	.byte	'_Ifx_SRC_HSSL',0,12,128,2,25,16,12
	.byte	'COK',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'RDI',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'TRG',0
	.word	17046
	.byte	4,2,35,12,0,18
	.word	19324
	.byte	27
	.byte	'Ifx_SRC_HSSL',0,12,134,2,3
	.word	19397
	.byte	16,56
	.word	163
	.byte	17,55,0,15
	.byte	'_Ifx_SRC_I2C',0,12,137,2,25,80,12
	.byte	'BREQ',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'LBREQ',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SREQ',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'LSREQ',0
	.word	17046
	.byte	4,2,35,12,12
	.byte	'ERR',0
	.word	17046
	.byte	4,2,35,16,12
	.byte	'P',0
	.word	17046
	.byte	4,2,35,20,12
	.byte	'reserved_18',0
	.word	19424
	.byte	56,2,35,24,0,18
	.word	19433
	.byte	27
	.byte	'Ifx_SRC_I2C',0,12,146,2,3
	.word	19556
	.byte	15
	.byte	'_Ifx_SRC_LMU',0,12,149,2,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	19582
	.byte	27
	.byte	'Ifx_SRC_LMU',0,12,152,2,3
	.word	19614
	.byte	15
	.byte	'_Ifx_SRC_MSC',0,12,155,2,25,20,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	17046
	.byte	4,2,35,12,12
	.byte	'SR4',0
	.word	17046
	.byte	4,2,35,16,0,18
	.word	19640
	.byte	27
	.byte	'Ifx_SRC_MSC',0,12,162,2,3
	.word	19725
	.byte	15
	.byte	'_Ifx_SRC_PMU',0,12,165,2,25,4,12
	.byte	'SR',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	19751
	.byte	27
	.byte	'Ifx_SRC_PMU',0,12,168,2,3
	.word	19783
	.byte	15
	.byte	'_Ifx_SRC_PSI5',0,12,171,2,25,32,12
	.byte	'SR',0
	.word	18593
	.byte	32,2,35,0,0,18
	.word	19809
	.byte	27
	.byte	'Ifx_SRC_PSI5',0,12,174,2,3
	.word	19842
	.byte	15
	.byte	'_Ifx_SRC_PSI5S',0,12,177,2,25,32,12
	.byte	'SR',0
	.word	18593
	.byte	32,2,35,0,0,18
	.word	19869
	.byte	27
	.byte	'Ifx_SRC_PSI5S',0,12,180,2,3
	.word	19903
	.byte	15
	.byte	'_Ifx_SRC_QSPI',0,12,183,2,25,24,12
	.byte	'TX',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'RX',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'ERR',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'PT',0
	.word	17046
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	16107
	.byte	4,2,35,16,12
	.byte	'U',0
	.word	17046
	.byte	4,2,35,20,0,18
	.word	19931
	.byte	27
	.byte	'Ifx_SRC_QSPI',0,12,191,2,3
	.word	20033
	.byte	15
	.byte	'_Ifx_SRC_SCU',0,12,194,2,25,20,12
	.byte	'DTS',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'ERU',0
	.word	18679
	.byte	16,2,35,4,0,18
	.word	20060
	.byte	27
	.byte	'Ifx_SRC_SCU',0,12,198,2,3
	.word	20106
	.byte	16,40
	.word	17046
	.byte	17,9,0,15
	.byte	'_Ifx_SRC_SENT',0,12,201,2,25,40,12
	.byte	'SR',0
	.word	20132
	.byte	40,2,35,0,0,18
	.word	20141
	.byte	27
	.byte	'Ifx_SRC_SENT',0,12,204,2,3
	.word	20174
	.byte	15
	.byte	'_Ifx_SRC_SMU',0,12,207,2,25,12,12
	.byte	'SR',0
	.word	18584
	.byte	12,2,35,0,0,18
	.word	20201
	.byte	27
	.byte	'Ifx_SRC_SMU',0,12,210,2,3
	.word	20233
	.byte	15
	.byte	'_Ifx_SRC_STM',0,12,213,2,25,8,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,0,18
	.word	20259
	.byte	27
	.byte	'Ifx_SRC_STM',0,12,217,2,3
	.word	20305
	.byte	15
	.byte	'_Ifx_SRC_VADCCG',0,12,220,2,25,16,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	17046
	.byte	4,2,35,12,0,18
	.word	20331
	.byte	27
	.byte	'Ifx_SRC_VADCCG',0,12,226,2,3
	.word	20406
	.byte	15
	.byte	'_Ifx_SRC_VADCG',0,12,229,2,25,16,12
	.byte	'SR0',0
	.word	17046
	.byte	4,2,35,0,12
	.byte	'SR1',0
	.word	17046
	.byte	4,2,35,4,12
	.byte	'SR2',0
	.word	17046
	.byte	4,2,35,8,12
	.byte	'SR3',0
	.word	17046
	.byte	4,2,35,12,0,18
	.word	20435
	.byte	27
	.byte	'Ifx_SRC_VADCG',0,12,235,2,3
	.word	20509
	.byte	15
	.byte	'_Ifx_SRC_XBAR',0,12,238,2,25,4,12
	.byte	'SRC',0
	.word	17046
	.byte	4,2,35,0,0,18
	.word	20537
	.byte	27
	.byte	'Ifx_SRC_XBAR',0,12,241,2,3
	.word	20571
	.byte	16,4
	.word	17106
	.byte	17,0,0,18
	.word	20598
	.byte	15
	.byte	'_Ifx_SRC_GAGBT',0,12,254,2,25,4,12
	.byte	'AGBT',0
	.word	20607
	.byte	4,2,35,0,0,18
	.word	20612
	.byte	27
	.byte	'Ifx_SRC_GAGBT',0,12,129,3,3
	.word	20648
	.byte	16,48
	.word	17164
	.byte	17,3,0,18
	.word	20676
	.byte	15
	.byte	'_Ifx_SRC_GASCLIN',0,12,132,3,25,48,12
	.byte	'ASCLIN',0
	.word	20685
	.byte	48,2,35,0,0,18
	.word	20690
	.byte	27
	.byte	'Ifx_SRC_GASCLIN',0,12,135,3,3
	.word	20730
	.byte	18
	.word	17251
	.byte	15
	.byte	'_Ifx_SRC_GBCU',0,12,138,3,25,4,12
	.byte	'SPB',0
	.word	20760
	.byte	4,2,35,0,0,18
	.word	20765
	.byte	27
	.byte	'Ifx_SRC_GBCU',0,12,141,3,3
	.word	20799
	.byte	16,64
	.word	17325
	.byte	17,0,0,18
	.word	20826
	.byte	15
	.byte	'_Ifx_SRC_GCAN',0,12,144,3,25,64,12
	.byte	'CAN',0
	.word	20835
	.byte	64,2,35,0,0,18
	.word	20840
	.byte	27
	.byte	'Ifx_SRC_GCAN',0,12,147,3,3
	.word	20874
	.byte	16,32
	.word	17382
	.byte	17,1,0,18
	.word	20901
	.byte	15
	.byte	'_Ifx_SRC_GCCU6',0,12,150,3,25,32,12
	.byte	'CCU6',0
	.word	20910
	.byte	32,2,35,0,0,18
	.word	20915
	.byte	27
	.byte	'Ifx_SRC_GCCU6',0,12,153,3,3
	.word	20951
	.byte	18
	.word	17489
	.byte	15
	.byte	'_Ifx_SRC_GCERBERUS',0,12,156,3,25,8,12
	.byte	'CERBERUS',0
	.word	20979
	.byte	8,2,35,0,0,18
	.word	20984
	.byte	27
	.byte	'Ifx_SRC_GCERBERUS',0,12,159,3,3
	.word	21028
	.byte	16,16
	.word	17555
	.byte	17,0,0,18
	.word	21060
	.byte	15
	.byte	'_Ifx_SRC_GCIF',0,12,162,3,25,16,12
	.byte	'CIF',0
	.word	21069
	.byte	16,2,35,0,0,18
	.word	21074
	.byte	27
	.byte	'Ifx_SRC_GCIF',0,12,165,3,3
	.word	21108
	.byte	16,12
	.word	17654
	.byte	17,2,0,18
	.word	21135
	.byte	15
	.byte	'_Ifx_SRC_GCPU',0,12,168,3,25,12,12
	.byte	'CPU',0
	.word	21144
	.byte	12,2,35,0,0,18
	.word	21149
	.byte	27
	.byte	'Ifx_SRC_GCPU',0,12,171,3,3
	.word	21183
	.byte	16,24
	.word	17724
	.byte	17,0,0,18
	.word	21210
	.byte	15
	.byte	'_Ifx_SRC_GDAM',0,12,174,3,25,24,12
	.byte	'DAM',0
	.word	21219
	.byte	24,2,35,0,0,18
	.word	21224
	.byte	27
	.byte	'Ifx_SRC_GDAM',0,12,177,3,3
	.word	21258
	.byte	16,144,2
	.word	17801
	.byte	17,0,0,18
	.word	21285
	.byte	15
	.byte	'_Ifx_SRC_GDMA',0,12,180,3,25,144,2,12
	.byte	'DMA',0
	.word	21295
	.byte	144,2,2,35,0,0,18
	.word	21300
	.byte	27
	.byte	'Ifx_SRC_GDMA',0,12,183,3,3
	.word	21336
	.byte	16,48
	.word	17894
	.byte	17,5,0,18
	.word	21363
	.byte	15
	.byte	'_Ifx_SRC_GDSADC',0,12,186,3,25,48,12
	.byte	'DSADC',0
	.word	21372
	.byte	48,2,35,0,0,18
	.word	21377
	.byte	27
	.byte	'Ifx_SRC_GDSADC',0,12,189,3,3
	.word	21415
	.byte	16,4
	.word	17970
	.byte	17,0,0,18
	.word	21444
	.byte	15
	.byte	'_Ifx_SRC_GEMEM',0,12,192,3,25,4,12
	.byte	'EMEM',0
	.word	21453
	.byte	4,2,35,0,0,18
	.word	21458
	.byte	27
	.byte	'Ifx_SRC_GEMEM',0,12,195,3,3
	.word	21494
	.byte	16,80
	.word	18030
	.byte	17,0,0,18
	.word	21522
	.byte	15
	.byte	'_Ifx_SRC_GERAY',0,12,198,3,25,80,12
	.byte	'ERAY',0
	.word	21531
	.byte	80,2,35,0,0,18
	.word	21536
	.byte	27
	.byte	'Ifx_SRC_GERAY',0,12,201,3,3
	.word	21572
	.byte	16,4
	.word	18184
	.byte	17,0,0,18
	.word	21600
	.byte	15
	.byte	'_Ifx_SRC_GETH',0,12,204,3,25,4,12
	.byte	'ETH',0
	.word	21609
	.byte	4,2,35,0,0,18
	.word	21614
	.byte	27
	.byte	'Ifx_SRC_GETH',0,12,207,3,3
	.word	21648
	.byte	16,4
	.word	18242
	.byte	17,0,0,18
	.word	21675
	.byte	15
	.byte	'_Ifx_SRC_GFCE',0,12,210,3,25,4,12
	.byte	'FCE',0
	.word	21684
	.byte	4,2,35,0,0,18
	.word	21689
	.byte	27
	.byte	'Ifx_SRC_GFCE',0,12,213,3,3
	.word	21723
	.byte	16,96
	.word	18309
	.byte	17,2,0,18
	.word	21750
	.byte	15
	.byte	'_Ifx_SRC_GGPSR',0,12,216,3,25,96,12
	.byte	'GPSR',0
	.word	21759
	.byte	96,2,35,0,0,18
	.word	21764
	.byte	27
	.byte	'Ifx_SRC_GGPSR',0,12,219,3,3
	.word	21800
	.byte	16,48
	.word	18439
	.byte	17,0,0,18
	.word	21828
	.byte	15
	.byte	'_Ifx_SRC_GGPT12',0,12,222,3,25,48,12
	.byte	'GPT12',0
	.word	21837
	.byte	48,2,35,0,0,18
	.word	21842
	.byte	27
	.byte	'Ifx_SRC_GGPT12',0,12,225,3,3
	.word	21880
	.byte	16,208,18
	.word	18717
	.byte	17,0,0,18
	.word	21909
	.byte	15
	.byte	'_Ifx_SRC_GGTM',0,12,228,3,25,208,18,12
	.byte	'GTM',0
	.word	21919
	.byte	208,18,2,35,0,0,18
	.word	21924
	.byte	27
	.byte	'Ifx_SRC_GGTM',0,12,231,3,3
	.word	21960
	.byte	16,4
	.word	19205
	.byte	17,0,0,18
	.word	21987
	.byte	15
	.byte	'_Ifx_SRC_GHSCT',0,12,234,3,25,4,12
	.byte	'HSCT',0
	.word	21996
	.byte	4,2,35,0,0,18
	.word	22001
	.byte	27
	.byte	'Ifx_SRC_GHSCT',0,12,237,3,3
	.word	22037
	.byte	16,8
	.word	19265
	.byte	17,0,0,18
	.word	22065
	.byte	15
	.byte	'_Ifx_SRC_GHSM',0,12,240,3,25,8,12
	.byte	'HSM',0
	.word	22074
	.byte	8,2,35,0,0,18
	.word	22079
	.byte	27
	.byte	'Ifx_SRC_GHSM',0,12,243,3,3
	.word	22113
	.byte	16,64
	.word	19324
	.byte	17,3,0,18
	.word	22140
	.byte	15
	.byte	'_Ifx_SRC_GHSSL',0,12,246,3,25,68,12
	.byte	'HSSL',0
	.word	22149
	.byte	64,2,35,0,12
	.byte	'EXI',0
	.word	17046
	.byte	4,2,35,64,0,18
	.word	22154
	.byte	27
	.byte	'Ifx_SRC_GHSSL',0,12,250,3,3
	.word	22203
	.byte	16,80
	.word	19433
	.byte	17,0,0,18
	.word	22231
	.byte	15
	.byte	'_Ifx_SRC_GI2C',0,12,253,3,25,80,12
	.byte	'I2C',0
	.word	22240
	.byte	80,2,35,0,0,18
	.word	22245
	.byte	27
	.byte	'Ifx_SRC_GI2C',0,12,128,4,3
	.word	22279
	.byte	16,4
	.word	19582
	.byte	17,0,0,18
	.word	22306
	.byte	15
	.byte	'_Ifx_SRC_GLMU',0,12,131,4,25,4,12
	.byte	'LMU',0
	.word	22315
	.byte	4,2,35,0,0,18
	.word	22320
	.byte	27
	.byte	'Ifx_SRC_GLMU',0,12,134,4,3
	.word	22354
	.byte	16,40
	.word	19640
	.byte	17,1,0,18
	.word	22381
	.byte	15
	.byte	'_Ifx_SRC_GMSC',0,12,137,4,25,40,12
	.byte	'MSC',0
	.word	22390
	.byte	40,2,35,0,0,18
	.word	22395
	.byte	27
	.byte	'Ifx_SRC_GMSC',0,12,140,4,3
	.word	22429
	.byte	16,8
	.word	19751
	.byte	17,1,0,18
	.word	22456
	.byte	15
	.byte	'_Ifx_SRC_GPMU',0,12,143,4,25,8,12
	.byte	'PMU',0
	.word	22465
	.byte	8,2,35,0,0,18
	.word	22470
	.byte	27
	.byte	'Ifx_SRC_GPMU',0,12,146,4,3
	.word	22504
	.byte	16,32
	.word	19809
	.byte	17,0,0,18
	.word	22531
	.byte	15
	.byte	'_Ifx_SRC_GPSI5',0,12,149,4,25,32,12
	.byte	'PSI5',0
	.word	22540
	.byte	32,2,35,0,0,18
	.word	22545
	.byte	27
	.byte	'Ifx_SRC_GPSI5',0,12,152,4,3
	.word	22581
	.byte	16,32
	.word	19869
	.byte	17,0,0,18
	.word	22609
	.byte	15
	.byte	'_Ifx_SRC_GPSI5S',0,12,155,4,25,32,12
	.byte	'PSI5S',0
	.word	22618
	.byte	32,2,35,0,0,18
	.word	22623
	.byte	27
	.byte	'Ifx_SRC_GPSI5S',0,12,158,4,3
	.word	22661
	.byte	16,96
	.word	19931
	.byte	17,3,0,18
	.word	22690
	.byte	15
	.byte	'_Ifx_SRC_GQSPI',0,12,161,4,25,96,12
	.byte	'QSPI',0
	.word	22699
	.byte	96,2,35,0,0,18
	.word	22704
	.byte	27
	.byte	'Ifx_SRC_GQSPI',0,12,164,4,3
	.word	22740
	.byte	18
	.word	20060
	.byte	15
	.byte	'_Ifx_SRC_GSCU',0,12,167,4,25,20,12
	.byte	'SCU',0
	.word	22768
	.byte	20,2,35,0,0,18
	.word	22773
	.byte	27
	.byte	'Ifx_SRC_GSCU',0,12,170,4,3
	.word	22807
	.byte	16,40
	.word	20141
	.byte	17,0,0,18
	.word	22834
	.byte	15
	.byte	'_Ifx_SRC_GSENT',0,12,173,4,25,40,12
	.byte	'SENT',0
	.word	22843
	.byte	40,2,35,0,0,18
	.word	22848
	.byte	27
	.byte	'Ifx_SRC_GSENT',0,12,176,4,3
	.word	22884
	.byte	16,12
	.word	20201
	.byte	17,0,0,18
	.word	22912
	.byte	15
	.byte	'_Ifx_SRC_GSMU',0,12,179,4,25,12,12
	.byte	'SMU',0
	.word	22921
	.byte	12,2,35,0,0,18
	.word	22926
	.byte	27
	.byte	'Ifx_SRC_GSMU',0,12,182,4,3
	.word	22960
	.byte	16,24
	.word	20259
	.byte	17,2,0,18
	.word	22987
	.byte	15
	.byte	'_Ifx_SRC_GSTM',0,12,185,4,25,24,12
	.byte	'STM',0
	.word	22996
	.byte	24,2,35,0,0,18
	.word	23001
	.byte	27
	.byte	'Ifx_SRC_GSTM',0,12,188,4,3
	.word	23035
	.byte	16,128,1
	.word	20435
	.byte	17,7,0,18
	.word	23062
	.byte	16,160,1
	.word	163
	.byte	17,159,1,0,16,32
	.word	20331
	.byte	17,1,0,18
	.word	23088
	.byte	15
	.byte	'_Ifx_SRC_GVADC',0,12,191,4,25,192,2,12
	.byte	'G',0
	.word	23072
	.byte	128,1,2,35,0,12
	.byte	'reserved_80',0
	.word	23077
	.byte	160,1,3,35,128,1,12
	.byte	'CG',0
	.word	23097
	.byte	32,3,35,160,2,0,18
	.word	23102
	.byte	27
	.byte	'Ifx_SRC_GVADC',0,12,196,4,3
	.word	23173
	.byte	18
	.word	20537
	.byte	15
	.byte	'_Ifx_SRC_GXBAR',0,12,199,4,25,4,12
	.byte	'XBAR',0
	.word	23201
	.byte	4,2,35,0,0,18
	.word	23206
	.byte	27
	.byte	'Ifx_SRC_GXBAR',0,12,202,4,3
	.word	23242
	.byte	2
	.byte	'char',0,1,6,27
	.byte	'sint8',0,13,76,25
	.word	23270
	.byte	27
	.byte	'uint8',0,13,81,25
	.word	163
	.byte	27
	.byte	'uint16',0,13,91,25
	.word	793
	.byte	27
	.byte	'uint32',0,13,106,24
	.word	820
	.byte	2
	.byte	'unsigned long long int',0,8,7,27
	.byte	'uint64',0,13,111,30
	.word	23336
	.byte	27
	.byte	'boolean',0,13,127,25
	.word	163
	.byte	2
	.byte	'unsigned long int',0,4,7,27
	.byte	'uint8_least',0,13,137,1,25
	.word	23393
	.byte	27
	.byte	'StatusType',0,14,191,1,27
	.word	163
	.byte	27
	.byte	'Std_ReturnType',0,14,199,1,15
	.word	163
	.byte	11,14,206,1,9,8,12
	.byte	'vendorID',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	163
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	163
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	163
	.byte	1,2,35,6,0,27
	.byte	'Std_VersionInfoType',0,14,213,1,3
	.word	23479
	.byte	27
	.byte	'PduIdType',0,15,22,19
	.word	793
	.byte	27
	.byte	'PduLengthType',0,15,26,19
	.word	793
	.byte	8,16,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,27
	.byte	'TpDataStateType',0,16,118,3
	.word	23669
	.byte	27
	.byte	'Can_IdType',0,3,32,16
	.word	820
	.byte	27
	.byte	'Can_HwHandleType',0,3,43,16
	.word	793
	.byte	27
	.byte	'Can_PduType',0,3,82,2
	.word	836
	.byte	27
	.byte	'Can_StateTransitionType',0,3,104,2
	.word	1481
	.byte	27
	.byte	'Can_ReturnType',0,3,123,2
	.word	754
	.byte	11,17,93,9,8,12
	.byte	'Class',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'TIN',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'ReturnAddress',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'OsTrapInfoType',0,17,97,3
	.word	23864
	.byte	16,68
	.word	820
	.byte	17,16,0,11,17,154,1,9,68,12
	.byte	'store',0
	.word	23944
	.byte	68,2,35,0,0,16,68
	.word	23953
	.byte	17,0,0,27
	.byte	'Os_JumpBufType',0,17,156,1,3
	.word	23975
	.byte	27
	.byte	'Os_StackTraceType',0,17,174,1,18
	.word	820
	.byte	11,17,175,1,9,8,12
	.byte	'sp',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'ctx',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Os_StackValueType',0,17,175,1,63
	.word	24035
	.byte	27
	.byte	'Os_StackSizeType',0,17,176,1,27
	.word	24035
	.byte	31,1,1,10
	.word	24120
	.byte	27
	.byte	'Os_VoidVoidFunctionType',0,17,179,1,16
	.word	24123
	.byte	27
	.byte	'ApplicationType',0,17,193,1,23
	.word	163
	.byte	15
	.byte	'Os_ApplicationConfigurationType_s',0,17,198,1,16,2,12
	.byte	'app_id',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,1,0,27
	.byte	'Os_ApplicationConfigurationType',0,17,201,1,3
	.word	24186
	.byte	27
	.byte	'Os_CoreStateType',0,17,203,1,16
	.word	820
	.byte	27
	.byte	'AreaIdType',0,17,204,1,16
	.word	793
	.byte	27
	.byte	'Os_PeripheralAddressType',0,17,212,1,22
	.word	820
	.byte	27
	.byte	'TickType',0,17,221,1,22
	.word	820
	.byte	27
	.byte	'Os_StopwatchTickType',0,17,225,1,22
	.word	820
	.byte	10
	.word	820
	.byte	27
	.byte	'Os_Lockable',0,17,234,1,18
	.word	24428
	.byte	27
	.byte	'CoreIdType',0,17,236,1,16
	.word	793
	.byte	27
	.byte	'SpinlockIdType',0,17,237,1,16
	.word	793
	.byte	8,17,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,27
	.byte	'TryToGetSpinlockType',0,17,239,1,74
	.word	24498
	.byte	8,17,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,27
	.byte	'ApplicationStateType',0,17,174,2,92
	.word	24591
	.byte	32
	.byte	'void',0,10
	.word	24703
	.byte	33,1,1,34
	.word	163
	.byte	34
	.word	24709
	.byte	0,10
	.word	24714
	.byte	27
	.byte	'Os_FunctionEntryType',0,17,183,2,16
	.word	24728
	.byte	15
	.byte	'Os_MeterInfoType_s',0,17,193,2,16,48,12
	.byte	'elapsed',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'previous',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'max',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'cumulative',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'stackbase',0
	.word	24035
	.byte	8,2,35,16,12
	.byte	'stackusage',0
	.word	24035
	.byte	8,2,35,24,12
	.byte	'stackmax',0
	.word	24035
	.byte	8,2,35,32,12
	.byte	'stackbudget',0
	.word	24035
	.byte	8,2,35,40,0,27
	.byte	'Os_MeterInfoType',0,17,202,2,3
	.word	24763
	.byte	10
	.word	24763
	.byte	27
	.byte	'Os_MeterInfoRefType',0,17,203,2,50
	.word	24961
	.byte	27
	.byte	'EventMaskType',0,17,206,2,15
	.word	163
	.byte	27
	.byte	'Os_imaskType',0,17,211,2,16
	.word	820
	.byte	15
	.byte	'Os_ISRDynType_s',0,17,213,2,16,48,12
	.byte	'meter',0
	.word	24763
	.byte	48,2,35,0,0,27
	.byte	'Os_ISRDynType',0,17,215,2,3
	.word	25040
	.byte	10
	.word	25040
	.byte	13
	.word	25101
	.byte	15
	.byte	'Os_ISRType_s',0,17,216,2,16,24,12
	.byte	'entry_function',0
	.word	24128
	.byte	4,2,35,0,12
	.byte	'dynamic',0
	.word	25106
	.byte	4,2,35,4,12
	.byte	'imask',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'stackbudget',0
	.word	24035
	.byte	8,2,35,12,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,20,12
	.byte	'application',0
	.word	163
	.byte	1,2,35,21,0,27
	.byte	'Os_ISRType',0,17,223,2,3
	.word	25111
	.byte	10
	.word	24120
	.byte	13
	.word	25111
	.byte	10
	.word	25270
	.byte	27
	.byte	'ISRType',0,17,224,2,46
	.word	25275
	.byte	27
	.byte	'Os_bitmask',0,17,239,2,22
	.word	820
	.byte	27
	.byte	'Os_pset0Type',0,17,240,2,20
	.word	820
	.byte	27
	.byte	'Os_pset1Type',0,17,241,2,20
	.word	820
	.byte	27
	.byte	'Os_pset2Type',0,17,242,2,20
	.word	820
	.byte	29,17,243,2,9,4,12
	.byte	'p0',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'p1',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'p2',0
	.word	820
	.byte	4,2,35,0,0,27
	.byte	'Os_psetType',0,17,247,2,3
	.word	25383
	.byte	29,17,249,2,9,4,12
	.byte	't0',0
	.word	820
	.byte	4,2,35,0,12
	.byte	't1',0
	.word	820
	.byte	4,2,35,0,12
	.byte	't2',0
	.word	820
	.byte	4,2,35,0,0,27
	.byte	'Os_tpmaskType',0,17,253,2,3
	.word	25447
	.byte	27
	.byte	'Os_ActivationCountType',0,17,254,2,23
	.word	163
	.byte	15
	.byte	'Os_TaskDynType_s',0,17,128,3,16,120,12
	.byte	'terminate_jump_buf',0
	.word	23984
	.byte	68,2,35,0,12
	.byte	'meter',0
	.word	24763
	.byte	48,2,35,68,12
	.byte	'activation_count',0
	.word	163
	.byte	1,2,35,116,0,27
	.byte	'Os_TaskDynType',0,17,132,3,3
	.word	25545
	.byte	16,68
	.word	23953
	.byte	17,0,0,10
	.word	25545
	.byte	13
	.word	25671
	.byte	15
	.byte	'Os_TaskType_s',0,17,134,3,16,40,12
	.byte	'dynamic',0
	.word	25676
	.byte	4,2,35,0,12
	.byte	'entry_function',0
	.word	24128
	.byte	4,2,35,4,12
	.byte	'pset',0
	.word	25383
	.byte	4,2,35,8,12
	.byte	'base_tpmask',0
	.word	25447
	.byte	4,2,35,12,12
	.byte	'tpmask',0
	.word	25447
	.byte	4,2,35,16,12
	.byte	'core_id',0
	.word	793
	.byte	2,2,35,20,12
	.byte	'index',0
	.word	820
	.byte	4,2,35,24,12
	.byte	'stackbudget',0
	.word	24035
	.byte	8,2,35,28,12
	.byte	'activation_count',0
	.word	163
	.byte	1,2,35,36,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,37,12
	.byte	'application',0
	.word	163
	.byte	1,2,35,38,0,27
	.byte	'Os_TaskType',0,17,146,3,3
	.word	25681
	.byte	13
	.word	25681
	.byte	10
	.word	25931
	.byte	27
	.byte	'TaskType',0,17,147,3,47
	.word	25936
	.byte	35
	.byte	'Os_TaskStateType',0,17,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,27
	.byte	'TaskStateType',0,17,156,3,31
	.word	25959
	.byte	29,17,167,3,3,4,12
	.byte	'tpmask',0
	.word	25447
	.byte	4,2,35,0,0,15
	.byte	'Os_ResourceDynType_s',0,17,166,3,16,4,12
	.byte	'saved_priority',0
	.word	26046
	.byte	4,2,35,0,0,27
	.byte	'Os_ResourceDynType',0,17,170,3,3
	.word	26069
	.byte	10
	.word	26069
	.byte	13
	.word	26149
	.byte	15
	.byte	'Os_ResourceType_s',0,17,171,3,16,12,12
	.byte	'dynamic',0
	.word	26154
	.byte	4,2,35,0,12
	.byte	'tpmask',0
	.word	25447
	.byte	4,2,35,4,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,8,0,27
	.byte	'Os_ResourceType',0,17,175,3,3
	.word	26159
	.byte	11,17,181,3,9,12,12
	.byte	'maxallowedvalue',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	820
	.byte	4,2,35,8,0,27
	.byte	'AlarmBaseType',0,17,185,3,3
	.word	26258
	.byte	11,17,206,3,9,8,12
	.byte	'Running',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'Pending',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'Delay',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Os_CounterStatusType',0,17,210,3,3
	.word	26353
	.byte	36
	.word	163
	.byte	1,1,10
	.word	26439
	.byte	27
	.byte	'Os_CounterIncrAdvType',0,17,217,3,22
	.word	26446
	.byte	15
	.byte	's_swd',0,17,222,3,12,4,12
	.byte	'count',0
	.word	820
	.byte	4,2,35,0,0,29,17,221,3,3,4,12
	.byte	'sw',0
	.word	26482
	.byte	4,2,35,0,0,15
	.byte	'Os_CounterDynType_s',0,17,220,3,16,4,12
	.byte	'type_dependent',0
	.word	26510
	.byte	4,2,35,0,0,27
	.byte	'Os_CounterDynType',0,17,226,3,3
	.word	26529
	.byte	10
	.word	26529
	.byte	13
	.word	26607
	.byte	15
	.byte	'Os_CounterType_s',0,17,227,3,16,28,12
	.byte	'dynamic',0
	.word	26612
	.byte	4,2,35,0,12
	.byte	'advincr',0
	.word	26451
	.byte	4,2,35,4,12
	.byte	'base',0
	.word	26258
	.byte	12,2,35,8,12
	.byte	'core',0
	.word	24709
	.byte	4,2,35,20,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,24,12
	.byte	'application',0
	.word	163
	.byte	1,2,35,25,0,27
	.byte	'Os_CounterType',0,17,234,3,3
	.word	26617
	.byte	10
	.word	26439
	.byte	13
	.word	26617
	.byte	10
	.word	26769
	.byte	27
	.byte	'CounterType',0,17,235,3,52
	.word	26774
	.byte	35
	.byte	'Os_ScheduleTableStatusType',0,17,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,27
	.byte	'ScheduleTableStatusType',0,17,241,3,41
	.word	26800
	.byte	13
	.word	.L1107-.L202
	.byte	10
	.word	27000
	.byte	27
	.byte	'ScheduleTableType',0,17,128,4,58
	.word	27005
	.byte	15
	.byte	'Os_ScheduleTableDynType_s',0,17,130,4,16,16,12
	.byte	'match',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'next',0
	.word	27010
	.byte	4,2,35,4,12
	.byte	'state',0
	.word	26800
	.byte	4,2,35,8,12
	.byte	'config',0
	.word	793
	.byte	2,2,35,12,0,10
	.word	27037
	.byte	13
	.word	27130
.L1107:
	.byte	15
	.byte	'Os_ScheduleTableType_s',0,17,247,3,16,16,12
	.byte	'dynamic',0
	.word	27135
	.byte	4,2,35,0,12
	.byte	'counter',0
	.word	26779
	.byte	4,2,35,4,12
	.byte	'repeat',0
	.word	163
	.byte	1,2,35,8,12
	.byte	'config',0
	.word	793
	.byte	2,2,35,10,12
	.byte	'initial',0
	.word	163
	.byte	1,2,35,12,12
	.byte	'access',0
	.word	163
	.byte	1,2,35,13,12
	.byte	'application',0
	.word	163
	.byte	1,2,35,14,0,27
	.byte	'Os_ScheduleTableType',0,17,255,3,3
	.word	27140
	.byte	13
	.word	27140
	.byte	10
	.word	27320
	.byte	13
	.word	26617
	.byte	10
	.word	27330
	.byte	18
	.word	24433
	.byte	18
	.word	25383
	.byte	18
	.word	25280
	.byte	18
	.word	25941
	.byte	18
	.word	25447
	.byte	18
	.word	163
	.byte	18
	.word	25941
	.byte	15
	.byte	'Os_ControlledCoreType_s',0,17,251,6,16,112,12
	.byte	'TrapInfo',0
	.word	23864
	.byte	8,2,35,0,12
	.byte	'lock_taskaccess',0
	.word	27340
	.byte	4,2,35,8,12
	.byte	'ReadyTasks',0
	.word	27345
	.byte	4,2,35,12,12
	.byte	'RunningISR',0
	.word	27350
	.byte	4,2,35,16,12
	.byte	'RunningTask',0
	.word	27355
	.byte	4,2,35,20,12
	.byte	'RunningTPMask',0
	.word	27360
	.byte	4,2,35,24,12
	.byte	'CurrentMeteredObject',0
	.word	24966
	.byte	4,2,35,28,12
	.byte	'IdleMeter',0
	.word	24763
	.byte	48,2,35,32,12
	.byte	'AppAccess',0
	.word	163
	.byte	1,2,35,80,12
	.byte	'AppOverride',0
	.word	27365
	.byte	1,2,35,81,12
	.byte	'GetStackValueAdjust',0
	.word	24035
	.byte	8,2,35,84,12
	.byte	'InErrorHook',0
	.word	163
	.byte	1,2,35,92,12
	.byte	'ChainTaskRef',0
	.word	27370
	.byte	4,2,35,96,12
	.byte	'GetStackUsageAdjust',0
	.word	24035
	.byte	8,2,35,100,12
	.byte	'InProtectionHook',0
	.word	163
	.byte	1,2,35,108,12
	.byte	'CoreIsActive',0
	.word	163
	.byte	1,2,35,109,12
	.byte	'InShutdownHook',0
	.word	163
	.byte	1,2,35,110,0,27
	.byte	'Os_ControlledCoreType',0,17,141,7,3
	.word	27375
	.byte	10
	.word	820
	.byte	13
	.word	25111
	.byte	10
	.word	27831
	.byte	13
	.word	25681
	.byte	10
	.word	27841
	.byte	10
	.word	24763
	.byte	15
	.byte	'Os_AnyCoreType_s',0,17,151,7,16,96,12
	.byte	'DisableAllImask',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'SuspendAllImask',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'SuspendOSImask',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'DisableAllCount',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'SuspendAllCount',0
	.word	820
	.byte	4,2,35,16,12
	.byte	'SuspendOSCount',0
	.word	820
	.byte	4,2,35,20,12
	.byte	'RestartJumpBuf',0
	.word	23984
	.byte	68,2,35,24,12
	.byte	'Restartable',0
	.word	163
	.byte	1,2,35,92,0,27
	.byte	'Os_AnyCoreType',0,17,160,7,3
	.word	27856
	.byte	27
	.byte	'signed_int',0,18,114,20
	.word	12364
	.byte	27
	.byte	'unsigned_int',0,18,116,22
	.word	820
	.byte	27
	.byte	'Can_17_MCanP_DriverStateType',0,6,213,3,15
	.word	163
	.byte	27
	.byte	'Can_TxObjPriorityClassType',0,6,219,3,16
	.word	820
	.byte	27
	.byte	'Can_TxHwObjectConfigType',0,6,252,3,3
	.word	2363
	.byte	27
	.byte	'Can_RxHwObjectConfigType',0,6,147,4,3
	.word	2475
	.byte	27
	.byte	'Can_ControllerMOMapConfigType',0,6,184,4,3
	.word	2031
	.byte	27
	.byte	'Can_NPCRValueType',0,6,191,4,3
	.word	1964
	.byte	27
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,6,198,4,3
	.word	2164
	.byte	27
	.byte	'Can_BaudrateConfigPtrType',0,6,204,4,3
	.word	2288
	.byte	27
	.byte	'Can_EventHandlingType',0,6,229,4,3
	.word	2103
	.byte	27
	.byte	'Can_17_MCanP_ConfigType',0,6,225,5,3
	.word	2629
	.byte	18
	.word	16225
	.byte	10
	.word	28495
	.byte	16,4
	.word	28500
	.byte	17,0,0,13
	.word	28505
	.byte	37
	.byte	'CAN_KER',0,7,56,23
	.word	28514
	.byte	1,1,27
	.byte	'CanIf_ControllerModeType',0,10,91,2
	.word	3723
	.byte	15
	.byte	'_Ifx_SCU_ACCEN0_Bits',0,19,45,16,4,28
	.byte	'EN0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'EN1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'EN2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'EN3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'EN4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'EN5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'EN6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'EN7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'EN8',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'EN9',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'EN10',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'EN11',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'EN12',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'EN13',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'EN14',0,1
	.word	163
	.byte	1,1,2,35,1,28
	.byte	'EN15',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'EN16',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'EN17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'EN18',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'EN19',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'EN20',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'EN21',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'EN22',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'EN23',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'EN24',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'EN25',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'EN26',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'EN27',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'EN28',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'EN29',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'EN30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'EN31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_ACCEN0_Bits',0,19,79,3
	.word	28570
	.byte	15
	.byte	'_Ifx_SCU_ACCEN1_Bits',0,19,82,16,4,28
	.byte	'reserved_0',0,4
	.word	820
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN1_Bits',0,19,85,3
	.word	29127
	.byte	15
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,19,88,16,4,28
	.byte	'STM0DIS',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'STM1DIS',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'STM2DIS',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'reserved_3',0,4
	.word	820
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,19,94,3
	.word	29204
	.byte	15
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,19,97,16,4,28
	.byte	'BAUD1DIV',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'BAUD2DIV',0,1
	.word	163
	.byte	4,0,2,35,0,28
	.byte	'SRIDIV',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'LPDIV',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'SPBDIV',0,1
	.word	163
	.byte	4,4,2,35,2,28
	.byte	'FSI2DIV',0,1
	.word	163
	.byte	2,2,2,35,2,28
	.byte	'reserved_22',0,1
	.word	163
	.byte	2,0,2,35,2,28
	.byte	'FSIDIV',0,1
	.word	163
	.byte	2,6,2,35,3,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	2,4,2,35,3,28
	.byte	'CLKSEL',0,1
	.word	163
	.byte	2,2,2,35,3,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON0_Bits',0,19,111,3
	.word	29340
	.byte	15
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,19,114,16,4,28
	.byte	'CANDIV',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'ERAYDIV',0,1
	.word	163
	.byte	4,0,2,35,0,28
	.byte	'STMDIV',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'GTMDIV',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'ETHDIV',0,1
	.word	163
	.byte	4,4,2,35,2,28
	.byte	'ASCLINFDIV',0,1
	.word	163
	.byte	4,0,2,35,2,28
	.byte	'ASCLINSDIV',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'INSEL',0,1
	.word	163
	.byte	2,2,2,35,3,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON1_Bits',0,19,126,3
	.word	29620
	.byte	15
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,19,129,1,16,4,28
	.byte	'BBBDIV',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	26,2,2,35,0,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON2_Bits',0,19,135,1,3
	.word	29858
	.byte	15
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,19,138,1,16,4,28
	.byte	'PLLDIV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'PLLSEL',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'PLLERAYDIV',0,1
	.word	163
	.byte	6,2,2,35,1,28
	.byte	'PLLERAYSEL',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'SRIDIV',0,1
	.word	163
	.byte	6,2,2,35,2,28
	.byte	'SRISEL',0,1
	.word	163
	.byte	2,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	5,3,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON3_Bits',0,19,150,1,3
	.word	29986
	.byte	15
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,19,153,1,16,4,28
	.byte	'SPBDIV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'SPBSEL',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'GTMDIV',0,1
	.word	163
	.byte	6,2,2,35,1,28
	.byte	'GTMSEL',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'STMDIV',0,1
	.word	163
	.byte	6,2,2,35,2,28
	.byte	'STMSEL',0,1
	.word	163
	.byte	2,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	5,3,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON4_Bits',0,19,165,1,3
	.word	30229
	.byte	15
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,19,168,1,16,4,28
	.byte	'MAXDIV',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	26,2,2,35,0,28
	.byte	'UP',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CCUCON5_Bits',0,19,174,1,3
	.word	30464
	.byte	15
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,19,177,1,16,4,28
	.byte	'CPU0DIV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'reserved_6',0,4
	.word	820
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON6_Bits',0,19,181,1,3
	.word	30592
	.byte	15
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,19,184,1,16,4,28
	.byte	'CPU1DIV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'reserved_6',0,4
	.word	820
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON7_Bits',0,19,188,1,3
	.word	30692
	.byte	15
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,19,191,1,16,4,28
	.byte	'CPU2DIV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'reserved_6',0,4
	.word	820
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON8_Bits',0,19,195,1,3
	.word	30792
	.byte	15
	.byte	'_Ifx_SCU_CHIPID_Bits',0,19,198,1,16,4,28
	.byte	'CHREV',0,1
	.word	163
	.byte	6,2,2,35,0,28
	.byte	'CHTEC',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'CHID',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'EEA',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'UCODE',0,1
	.word	163
	.byte	7,0,2,35,2,28
	.byte	'FSIZE',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'SP',0,1
	.word	163
	.byte	2,2,2,35,3,28
	.byte	'SEC',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_CHIPID_Bits',0,19,209,1,3
	.word	30892
	.byte	15
	.byte	'_Ifx_SCU_DTSCON_Bits',0,19,212,1,16,4,28
	.byte	'PWD',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'START',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	2,4,2,35,0,28
	.byte	'CAL',0,4
	.word	820
	.byte	22,6,2,35,0,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	5,1,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_DTSCON_Bits',0,19,220,1,3
	.word	31100
	.byte	15
	.byte	'_Ifx_SCU_DTSLIM_Bits',0,19,223,1,16,4,28
	.byte	'LOWER',0,2
	.word	793
	.byte	10,6,2,35,0,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	5,1,2,35,1,28
	.byte	'LLU',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'UPPER',0,2
	.word	793
	.byte	10,6,2,35,2,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	4,2,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'UOF',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_DTSLIM_Bits',0,19,232,1,3
	.word	31265
	.byte	15
	.byte	'_Ifx_SCU_DTSSTAT_Bits',0,19,235,1,16,4,28
	.byte	'RESULT',0,2
	.word	793
	.byte	10,6,2,35,0,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	4,2,2,35,1,28
	.byte	'RDY',0,1
	.word	163
	.byte	1,1,2,35,1,28
	.byte	'BUSY',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_DTSSTAT_Bits',0,19,242,1,3
	.word	31448
	.byte	15
	.byte	'_Ifx_SCU_EICR_Bits',0,19,245,1,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'EXIS0',0,1
	.word	163
	.byte	3,1,2,35,0,28
	.byte	'reserved_7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'FEN0',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'REN0',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'LDEN0',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'EIEN0',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'INP0',0,1
	.word	163
	.byte	3,1,2,35,1,28
	.byte	'reserved_15',0,4
	.word	820
	.byte	5,12,2,35,0,28
	.byte	'EXIS1',0,1
	.word	163
	.byte	3,1,2,35,2,28
	.byte	'reserved_23',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'FEN1',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'REN1',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'LDEN1',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'EIEN1',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'INP1',0,1
	.word	163
	.byte	3,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EICR_Bits',0,19,136,2,3
	.word	31602
	.byte	15
	.byte	'_Ifx_SCU_EIFR_Bits',0,19,139,2,16,4,28
	.byte	'INTF0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'INTF1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'INTF2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'INTF3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'INTF4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'INTF5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'INTF6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'INTF7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,4
	.word	820
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_EIFR_Bits',0,19,150,2,3
	.word	31966
	.byte	15
	.byte	'_Ifx_SCU_EMSR_Bits',0,19,153,2,16,4,28
	.byte	'POL',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'MODE',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'ENON',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'PSEL',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,2
	.word	793
	.byte	12,0,2,35,0,28
	.byte	'EMSF',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'SEMSF',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'reserved_18',0,1
	.word	163
	.byte	6,0,2,35,2,28
	.byte	'EMSFM',0,1
	.word	163
	.byte	2,6,2,35,3,28
	.byte	'SEMSFM',0,1
	.word	163
	.byte	2,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_EMSR_Bits',0,19,166,2,3
	.word	32177
	.byte	15
	.byte	'_Ifx_SCU_ESRCFG_Bits',0,19,169,2,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	7,1,2,35,0,28
	.byte	'EDCON',0,2
	.word	793
	.byte	2,7,2,35,0,28
	.byte	'reserved_9',0,4
	.word	820
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_SCU_ESRCFG_Bits',0,19,174,2,3
	.word	32429
	.byte	15
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,19,177,2,16,4,28
	.byte	'ARI',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ARC',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_ESROCFG_Bits',0,19,182,2,3
	.word	32547
	.byte	15
	.byte	'_Ifx_SCU_EVR13CON_Bits',0,19,185,2,16,4,28
	.byte	'reserved_0',0,4
	.word	820
	.byte	28,4,2,35,0,28
	.byte	'EVR13OFF',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'BPEVR13OFF',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVR13CON_Bits',0,19,192,2,3
	.word	32658
	.byte	15
	.byte	'_Ifx_SCU_EVR33CON_Bits',0,19,195,2,16,4,28
	.byte	'reserved_0',0,4
	.word	820
	.byte	28,4,2,35,0,28
	.byte	'EVR33OFF',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'BPEVR33OFF',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVR33CON_Bits',0,19,202,2,3
	.word	32821
	.byte	15
	.byte	'_Ifx_SCU_EVRADCSTAT_Bits',0,19,205,2,16,4,28
	.byte	'ADC13V',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'ADC33V',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'ADCSWDV',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'VAL',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRADCSTAT_Bits',0,19,212,2,3
	.word	32984
	.byte	15
	.byte	'_Ifx_SCU_EVRDVSTAT_Bits',0,19,215,2,16,4,28
	.byte	'DVS13TRIM',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DVS33TRIM',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'VAL',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRDVSTAT_Bits',0,19,222,2,3
	.word	33142
	.byte	15
	.byte	'_Ifx_SCU_EVRMONCTRL_Bits',0,19,225,2,16,4,28
	.byte	'EVR13OVMOD',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	2,4,2,35,0,28
	.byte	'EVR13UVMOD',0,1
	.word	163
	.byte	2,2,2,35,0,28
	.byte	'reserved_6',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'EVR33OVMOD',0,1
	.word	163
	.byte	2,6,2,35,1,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	2,4,2,35,1,28
	.byte	'EVR33UVMOD',0,1
	.word	163
	.byte	2,2,2,35,1,28
	.byte	'reserved_14',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'SWDOVMOD',0,1
	.word	163
	.byte	2,6,2,35,2,28
	.byte	'reserved_18',0,1
	.word	163
	.byte	2,4,2,35,2,28
	.byte	'SWDUVMOD',0,1
	.word	163
	.byte	2,2,2,35,2,28
	.byte	'reserved_22',0,2
	.word	793
	.byte	8,2,2,35,2,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRMONCTRL_Bits',0,19,241,2,3
	.word	33307
	.byte	15
	.byte	'_Ifx_SCU_EVROVMON_Bits',0,19,244,2,16,4,28
	.byte	'EVR13OVVAL',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'EVR33OVVAL',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SWDOVVAL',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	6,2,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVROVMON_Bits',0,19,252,2,3
	.word	33675
	.byte	15
	.byte	'_Ifx_SCU_EVRRSTCON_Bits',0,19,255,2,16,4,28
	.byte	'RST13TRIM',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'reserved_8',0,4
	.word	820
	.byte	16,8,2,35,0,28
	.byte	'RST13OFF',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'BPRST13OFF',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'RST33OFF',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'BPRST33OFF',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'RSTSWDOFF',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'BPRSTSWDOFF',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRRSTCON_Bits',0,19,139,3,3
	.word	33854
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF1_Bits',0,19,142,3,16,4,28
	.byte	'SD5P',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SD5I',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SD5D',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF1_Bits',0,19,149,3,3
	.word	34119
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF2_Bits',0,19,152,3,16,4,28
	.byte	'SD33P',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SD33I',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SD33D',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF2_Bits',0,19,159,3,3
	.word	34272
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF3_Bits',0,19,162,3,16,4,28
	.byte	'CT5REG0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'CT5REG1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'CT5REG2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF3_Bits',0,19,169,3,3
	.word	34428
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF4_Bits',0,19,172,3,16,4,28
	.byte	'CT5REG3',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'CT5REG4',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	15,1,2,35,2,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF4_Bits',0,19,178,3,3
	.word	34590
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF5_Bits',0,19,181,3,16,4,28
	.byte	'CT33REG0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'CT33REG1',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'CT33REG2',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF5_Bits',0,19,188,3,3
	.word	34733
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCOEFF6_Bits',0,19,191,3,16,4,28
	.byte	'CT33REG3',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'CT33REG4',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	15,1,2,35,2,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF6_Bits',0,19,197,3,3
	.word	34898
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCTRL1_Bits',0,19,200,3,16,4,28
	.byte	'SDFREQSPRD',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'SDFREQ',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'SDSTEP',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	2,2,2,35,3,28
	.byte	'SDSAMPLE',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL1_Bits',0,19,208,3,3
	.word	35043
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCTRL2_Bits',0,19,211,3,16,4,28
	.byte	'DRVP',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SDMINMAXDC',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'DRVN',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'SDLUT',0,1
	.word	163
	.byte	6,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL2_Bits',0,19,219,3,3
	.word	35224
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCTRL3_Bits',0,19,222,3,16,4,28
	.byte	'SDPWMPRE',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SDPID',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SDVOKLVL',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL3_Bits',0,19,229,3,3
	.word	35398
	.byte	15
	.byte	'_Ifx_SCU_EVRSDCTRL4_Bits',0,19,232,3,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SYNCDIV',0,1
	.word	163
	.byte	3,5,2,35,1,28
	.byte	'reserved_11',0,4
	.word	820
	.byte	20,1,2,35,0,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRSDCTRL4_Bits',0,19,238,3,3
	.word	35558
	.byte	15
	.byte	'_Ifx_SCU_EVRSTAT_Bits',0,19,241,3,16,4,28
	.byte	'EVR13',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'OV13',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'EVR33',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'OV33',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'OVSWD',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'UV13',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'UV33',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'UVSWD',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'EXTPASS13',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'EXTPASS33',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'BGPROK',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'reserved_11',0,4
	.word	820
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSTAT_Bits',0,19,255,3,3
	.word	35702
	.byte	15
	.byte	'_Ifx_SCU_EVRTRIM_Bits',0,19,130,4,16,4,28
	.byte	'EVR13TRIM',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'SDVOUTSEL',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	14,2,2,35,2,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRTRIM_Bits',0,19,137,4,3
	.word	35976
	.byte	15
	.byte	'_Ifx_SCU_EVRUVMON_Bits',0,19,140,4,16,4,28
	.byte	'EVR13UVVAL',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'EVR33UVVAL',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'SWDUVVAL',0,1
	.word	163
	.byte	8,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	6,2,2,35,3,28
	.byte	'SLCK',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_EVRUVMON_Bits',0,19,148,4,3
	.word	36131
	.byte	15
	.byte	'_Ifx_SCU_EXTCON_Bits',0,19,151,4,16,4,28
	.byte	'EN0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'SEL0',0,1
	.word	163
	.byte	4,2,2,35,0,28
	.byte	'reserved_6',0,2
	.word	793
	.byte	10,0,2,35,0,28
	.byte	'EN1',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'NSEL',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'SEL1',0,1
	.word	163
	.byte	4,2,2,35,2,28
	.byte	'reserved_22',0,1
	.word	163
	.byte	2,0,2,35,2,28
	.byte	'DIV1',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_SCU_EXTCON_Bits',0,19,162,4,3
	.word	36310
	.byte	15
	.byte	'_Ifx_SCU_FDR_Bits',0,19,165,4,16,4,28
	.byte	'STEP',0,2
	.word	793
	.byte	10,6,2,35,0,28
	.byte	'reserved_10',0,1
	.word	163
	.byte	4,2,2,35,1,28
	.byte	'DM',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'RESULT',0,2
	.word	793
	.byte	10,6,2,35,2,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	5,1,2,35,3,28
	.byte	'DISCLK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_FDR_Bits',0,19,173,4,3
	.word	36528
	.byte	15
	.byte	'_Ifx_SCU_FMR_Bits',0,19,176,4,16,4,28
	.byte	'FS0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'FS1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'FS2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'FS3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'FS4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'FS5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'FS6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'FS7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'FC0',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'FC1',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'FC2',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'FC3',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'FC4',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'FC5',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'FC6',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'FC7',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	8,0,2,35,3,0,27
	.byte	'Ifx_SCU_FMR_Bits',0,19,196,4,3
	.word	36691
	.byte	15
	.byte	'_Ifx_SCU_ID_Bits',0,19,199,4,16,4,28
	.byte	'MODREV',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'MODTYPE',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'MODNUMBER',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_ID_Bits',0,19,204,4,3
	.word	37027
	.byte	15
	.byte	'_Ifx_SCU_IGCR_Bits',0,19,207,4,16,4,28
	.byte	'IPEN00',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'IPEN01',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'IPEN02',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'IPEN03',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'IPEN04',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'IPEN05',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'IPEN06',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'IPEN07',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	5,3,2,35,1,28
	.byte	'GEEN0',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'IGP0',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'IPEN10',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'IPEN11',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'IPEN12',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'IPEN13',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'IPEN14',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'IPEN15',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'IPEN16',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'IPEN17',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	5,3,2,35,3,28
	.byte	'GEEN1',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'IGP1',0,1
	.word	163
	.byte	2,0,2,35,3,0,27
	.byte	'Ifx_SCU_IGCR_Bits',0,19,231,4,3
	.word	37134
	.byte	15
	.byte	'_Ifx_SCU_IN_Bits',0,19,234,4,16,4,28
	.byte	'P0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'P1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_IN_Bits',0,19,239,4,3
	.word	37586
	.byte	15
	.byte	'_Ifx_SCU_IOCR_Bits',0,19,242,4,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	4,4,2,35,0,28
	.byte	'PC0',0,1
	.word	163
	.byte	4,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'PC1',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_IOCR_Bits',0,19,249,4,3
	.word	37685
	.byte	15
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,19,252,4,16,4,28
	.byte	'LBISTREQ',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'LBISTREQP',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'PATTERNS',0,2
	.word	793
	.byte	14,0,2,35,0,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,19,130,5,3
	.word	37835
	.byte	15
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,19,133,5,16,4,28
	.byte	'SEED',0,4
	.word	820
	.byte	23,9,2,35,0,28
	.byte	'reserved_23',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'SPLITSH',0,1
	.word	163
	.byte	3,5,2,35,3,28
	.byte	'BODY',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'LBISTFREQU',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,19,140,5,3
	.word	37984
	.byte	15
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,19,143,5,16,4,28
	.byte	'SIGNATURE',0,4
	.word	820
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,1
	.word	163
	.byte	7,1,2,35,3,28
	.byte	'LBISTDONE',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,19,148,5,3
	.word	38145
	.byte	15
	.byte	'_Ifx_SCU_LCLCON_Bits',0,19,151,5,16,4,28
	.byte	'reserved_0',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'LS',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'reserved_17',0,2
	.word	793
	.byte	14,1,2,35,2,28
	.byte	'LSEN',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_LCLCON_Bits',0,19,157,5,3
	.word	38275
	.byte	15
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,19,160,5,16,4,28
	.byte	'LCLT0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'LCLT1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_LCLTEST_Bits',0,19,165,5,3
	.word	38407
	.byte	15
	.byte	'_Ifx_SCU_MANID_Bits',0,19,168,5,16,4,28
	.byte	'DEPT',0,1
	.word	163
	.byte	5,3,2,35,0,28
	.byte	'MANUF',0,2
	.word	793
	.byte	11,0,2,35,0,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_MANID_Bits',0,19,173,5,3
	.word	38522
	.byte	15
	.byte	'_Ifx_SCU_OMR_Bits',0,19,176,5,16,4,28
	.byte	'PS0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'PS1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,2
	.word	793
	.byte	14,0,2,35,0,28
	.byte	'PCL0',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'PCL1',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'reserved_18',0,2
	.word	793
	.byte	14,0,2,35,2,0,27
	.byte	'Ifx_SCU_OMR_Bits',0,19,184,5,3
	.word	38633
	.byte	15
	.byte	'_Ifx_SCU_OSCCON_Bits',0,19,187,5,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'PLLLV',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'OSCRES',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'GAINSEL',0,1
	.word	163
	.byte	2,3,2,35,0,28
	.byte	'MODE',0,1
	.word	163
	.byte	2,1,2,35,0,28
	.byte	'SHBY',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'PLLHV',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'reserved_9',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'X1D',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'X1DEN',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'OSCVAL',0,1
	.word	163
	.byte	5,3,2,35,2,28
	.byte	'reserved_21',0,1
	.word	163
	.byte	2,1,2,35,2,28
	.byte	'APREN',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'CAP0EN',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'CAP1EN',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'CAP2EN',0,1
	.word	163
	.byte	1,5,2,35,3,28
	.byte	'CAP3EN',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_OSCCON_Bits',0,19,208,5,3
	.word	38791
	.byte	15
	.byte	'_Ifx_SCU_OUT_Bits',0,19,211,5,16,4,28
	.byte	'P0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'P1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_OUT_Bits',0,19,216,5,3
	.word	39203
	.byte	15
	.byte	'_Ifx_SCU_OVCCON_Bits',0,19,219,5,16,4,28
	.byte	'CSEL0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'CSEL1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'CSEL2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'reserved_3',0,2
	.word	793
	.byte	13,0,2,35,0,28
	.byte	'OVSTRT',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'OVSTP',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'DCINVAL',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'reserved_19',0,1
	.word	163
	.byte	5,0,2,35,2,28
	.byte	'OVCONF',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'POVCONF',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	6,0,2,35,3,0,27
	.byte	'Ifx_SCU_OVCCON_Bits',0,19,232,5,3
	.word	39304
	.byte	15
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,19,235,5,16,4,28
	.byte	'OVEN0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'OVEN1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'OVEN2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'reserved_3',0,4
	.word	820
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,19,241,5,3
	.word	39571
	.byte	15
	.byte	'_Ifx_SCU_PDISC_Bits',0,19,244,5,16,4,28
	.byte	'PDIS0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'PDIS1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDISC_Bits',0,19,249,5,3
	.word	39707
	.byte	15
	.byte	'_Ifx_SCU_PDR_Bits',0,19,252,5,16,4,28
	.byte	'PD0',0,1
	.word	163
	.byte	3,5,2,35,0,28
	.byte	'PL0',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'PD1',0,1
	.word	163
	.byte	3,1,2,35,0,28
	.byte	'PL1',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,4
	.word	820
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDR_Bits',0,19,131,6,3
	.word	39818
	.byte	15
	.byte	'_Ifx_SCU_PDRR_Bits',0,19,134,6,16,4,28
	.byte	'PDR0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'PDR1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'PDR2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'PDR3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'PDR4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'PDR5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'PDR6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PDR7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,4
	.word	820
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PDRR_Bits',0,19,145,6,3
	.word	39951
	.byte	15
	.byte	'_Ifx_SCU_PLLCON0_Bits',0,19,148,6,16,4,28
	.byte	'VCOBYP',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'VCOPWD',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'MODEN',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'reserved_3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'SETFINDIS',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'CLRFINDIS',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'OSCDISCDIS',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'reserved_7',0,2
	.word	793
	.byte	2,7,2,35,0,28
	.byte	'NDIV',0,1
	.word	163
	.byte	7,0,2,35,1,28
	.byte	'PLLPWD',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'reserved_17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'RESLD',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'reserved_19',0,1
	.word	163
	.byte	5,0,2,35,2,28
	.byte	'PDIV',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_PLLCON0_Bits',0,19,165,6,3
	.word	40154
	.byte	15
	.byte	'_Ifx_SCU_PLLCON1_Bits',0,19,168,6,16,4,28
	.byte	'K2DIV',0,1
	.word	163
	.byte	7,1,2,35,0,28
	.byte	'reserved_7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'K3DIV',0,1
	.word	163
	.byte	7,1,2,35,1,28
	.byte	'reserved_15',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'K1DIV',0,1
	.word	163
	.byte	7,1,2,35,2,28
	.byte	'reserved_23',0,2
	.word	793
	.byte	9,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLCON1_Bits',0,19,176,6,3
	.word	40510
	.byte	15
	.byte	'_Ifx_SCU_PLLCON2_Bits',0,19,179,6,16,4,28
	.byte	'MODCFG',0,2
	.word	793
	.byte	16,0,2,35,0,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLCON2_Bits',0,19,183,6,3
	.word	40688
	.byte	15
	.byte	'_Ifx_SCU_PLLERAYCON0_Bits',0,19,186,6,16,4,28
	.byte	'VCOBYP',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'VCOPWD',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	2,4,2,35,0,28
	.byte	'SETFINDIS',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'CLRFINDIS',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'OSCDISCDIS',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'reserved_7',0,2
	.word	793
	.byte	2,7,2,35,0,28
	.byte	'NDIV',0,1
	.word	163
	.byte	5,2,2,35,1,28
	.byte	'reserved_14',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'PLLPWD',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'reserved_17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'RESLD',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'reserved_19',0,1
	.word	163
	.byte	5,0,2,35,2,28
	.byte	'PDIV',0,1
	.word	163
	.byte	4,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_PLLERAYCON0_Bits',0,19,203,6,3
	.word	40788
	.byte	15
	.byte	'_Ifx_SCU_PLLERAYCON1_Bits',0,19,206,6,16,4,28
	.byte	'K2DIV',0,1
	.word	163
	.byte	7,1,2,35,0,28
	.byte	'reserved_7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'K3DIV',0,1
	.word	163
	.byte	4,4,2,35,1,28
	.byte	'reserved_12',0,1
	.word	163
	.byte	4,0,2,35,1,28
	.byte	'K1DIV',0,1
	.word	163
	.byte	7,1,2,35,2,28
	.byte	'reserved_23',0,2
	.word	793
	.byte	9,0,2,35,2,0,27
	.byte	'Ifx_SCU_PLLERAYCON1_Bits',0,19,214,6,3
	.word	41158
	.byte	15
	.byte	'_Ifx_SCU_PLLERAYSTAT_Bits',0,19,217,6,16,4,28
	.byte	'VCOBYST',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'PWDSTAT',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'VCOLOCK',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'FINDIS',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'K1RDY',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'K2RDY',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'reserved_6',0,4
	.word	820
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYSTAT_Bits',0,19,226,6,3
	.word	41344
	.byte	15
	.byte	'_Ifx_SCU_PLLSTAT_Bits',0,19,229,6,16,4,28
	.byte	'VCOBYST',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'VCOLOCK',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'FINDIS',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'K1RDY',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'K2RDY',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'reserved_6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'MODRUN',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,4
	.word	820
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_SCU_PLLSTAT_Bits',0,19,240,6,3
	.word	41542
	.byte	15
	.byte	'_Ifx_SCU_PMCSR_Bits',0,19,243,6,16,4,28
	.byte	'REQSLP',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'SMUSLP',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'reserved_3',0,1
	.word	163
	.byte	5,0,2,35,0,28
	.byte	'PMST',0,1
	.word	163
	.byte	3,5,2,35,1,28
	.byte	'reserved_11',0,4
	.word	820
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_SCU_PMCSR_Bits',0,19,250,6,3
	.word	41775
	.byte	15
	.byte	'_Ifx_SCU_PMSWCR0_Bits',0,19,253,6,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1WKEN',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'PINAWKEN',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'PINBWKEN',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'ESR0DFEN',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'ESR0EDCON',0,1
	.word	163
	.byte	2,1,2,35,0,28
	.byte	'ESR1DFEN',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'ESR1EDCON',0,1
	.word	163
	.byte	2,6,2,35,1,28
	.byte	'PINADFEN',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'PINAEDCON',0,1
	.word	163
	.byte	2,3,2,35,1,28
	.byte	'PINBDFEN',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'PINBEDCON',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'reserved_16',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'STBYRAMSEL',0,1
	.word	163
	.byte	2,5,2,35,2,28
	.byte	'reserved_19',0,1
	.word	163
	.byte	2,3,2,35,2,28
	.byte	'TRISTEN',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'TRISTREQ',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'PORSTDF',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'PWRWKEN',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'DCDCSYNC',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'BLNKFIL',0,1
	.word	163
	.byte	3,3,2,35,3,28
	.byte	'ESR0TRIST',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'reserved_30',0,1
	.word	163
	.byte	1,1,2,35,3,28
	.byte	'LCK',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWCR0_Bits',0,19,151,7,3
	.word	41927
	.byte	15
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,19,154,7,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'CPUIDLSEL',0,1
	.word	163
	.byte	3,5,2,35,1,28
	.byte	'reserved_11',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'IRADIS',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'reserved_13',0,4
	.word	820
	.byte	11,8,2,35,0,28
	.byte	'CPUSEL',0,1
	.word	163
	.byte	3,5,2,35,3,28
	.byte	'STBYEVEN',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'STBYEV',0,1
	.word	163
	.byte	3,1,2,35,3,28
	.byte	'reserved_31',0,1
	.word	163
	.byte	1,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,19,165,7,3
	.word	42475
	.byte	15
	.byte	'_Ifx_SCU_PMSWSTAT_Bits',0,19,168,7,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'ESR1WKP',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'ESR1OVRUN',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'PINAWKP',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'PINAOVRUN',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'PINBWKP',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PINBOVRUN',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'PWRWKP',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'PORSTDF',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'HWCFGEVR',0,1
	.word	163
	.byte	3,3,2,35,1,28
	.byte	'STBYRAM',0,1
	.word	163
	.byte	2,1,2,35,1,28
	.byte	'TRIST',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'reserved_16',0,1
	.word	163
	.byte	4,4,2,35,2,28
	.byte	'ESR1WKEN',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'PINAWKEN',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'PINBWKEN',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'PWRWKEN',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'BLNKFIL',0,1
	.word	163
	.byte	3,5,2,35,3,28
	.byte	'ESR0TRIST',0,1
	.word	163
	.byte	1,4,2,35,3,28
	.byte	'reserved_28',0,1
	.word	163
	.byte	4,0,2,35,3,0,27
	.byte	'Ifx_SCU_PMSWSTAT_Bits',0,19,190,7,3
	.word	42720
	.byte	15
	.byte	'_Ifx_SCU_PMSWSTATCLR_Bits',0,19,193,7,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'ESR1WKPCLR',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'ESR1OVRUNCLR',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'PINAWKPCLR',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'PINAOVRUNCLR',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'PINBWKPCLR',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PINBOVRUNCLR',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'PWRWKPCLR',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'reserved_9',0,4
	.word	820
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWSTATCLR_Bits',0,19,204,7,3
	.word	43181
	.byte	15
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,19,207,7,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'CLRC',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,2
	.word	793
	.byte	10,4,2,35,0,28
	.byte	'CSS0',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'CSS1',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'CSS2',0,1
	.word	163
	.byte	1,1,2,35,1,28
	.byte	'reserved_15',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'USRINFO',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_RSTCON2_Bits',0,19,217,7,3
	.word	43451
	.byte	15
	.byte	'_Ifx_SCU_RSTCON_Bits',0,19,220,7,16,4,28
	.byte	'ESR0',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'ESR1',0,1
	.word	163
	.byte	2,4,2,35,0,28
	.byte	'reserved_4',0,1
	.word	163
	.byte	2,2,2,35,0,28
	.byte	'SMU',0,1
	.word	163
	.byte	2,0,2,35,0,28
	.byte	'SW',0,1
	.word	163
	.byte	2,6,2,35,1,28
	.byte	'STM0',0,1
	.word	163
	.byte	2,4,2,35,1,28
	.byte	'STM1',0,1
	.word	163
	.byte	2,2,2,35,1,28
	.byte	'STM2',0,1
	.word	163
	.byte	2,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_RSTCON_Bits',0,19,231,7,3
	.word	43660
	.byte	15
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,19,234,7,16,4,28
	.byte	'ESR0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'SMU',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'SW',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'STM0',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'STM1',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'STM2',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'reserved_8',0,1
	.word	163
	.byte	8,0,2,35,1,28
	.byte	'PORST',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'reserved_17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'CB0',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'CB1',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'CB3',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'reserved_21',0,1
	.word	163
	.byte	2,1,2,35,2,28
	.byte	'EVR13',0,1
	.word	163
	.byte	1,0,2,35,2,28
	.byte	'EVR33',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'SWD',0,1
	.word	163
	.byte	1,6,2,35,3,28
	.byte	'reserved_26',0,1
	.word	163
	.byte	2,4,2,35,3,28
	.byte	'STBYR',0,1
	.word	163
	.byte	1,3,2,35,3,28
	.byte	'reserved_29',0,1
	.word	163
	.byte	3,0,2,35,3,0,27
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,19,129,8,3
	.word	43871
	.byte	15
	.byte	'_Ifx_SCU_SAFECON_Bits',0,19,132,8,16,4,28
	.byte	'HBT',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,4
	.word	820
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_SCU_SAFECON_Bits',0,19,136,8,3
	.word	44303
	.byte	15
	.byte	'_Ifx_SCU_STSTAT_Bits',0,19,139,8,16,4,28
	.byte	'HWCFG',0,1
	.word	163
	.byte	8,0,2,35,0,28
	.byte	'FTM',0,1
	.word	163
	.byte	7,1,2,35,1,28
	.byte	'MODE',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'reserved_16',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'LUDIS',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'reserved_18',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'TRSTL',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'SPDEN',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'reserved_21',0,1
	.word	163
	.byte	3,0,2,35,2,28
	.byte	'RAMINT',0,1
	.word	163
	.byte	1,7,2,35,3,28
	.byte	'reserved_25',0,1
	.word	163
	.byte	7,0,2,35,3,0,27
	.byte	'Ifx_SCU_STSTAT_Bits',0,19,152,8,3
	.word	44399
	.byte	15
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,19,155,8,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'SWRSTREQ',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,4
	.word	820
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,19,160,8,3
	.word	44665
	.byte	15
	.byte	'_Ifx_SCU_SYSCON_Bits',0,19,163,8,16,4,28
	.byte	'CCTRIG0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'RAMINTM',0,1
	.word	163
	.byte	2,4,2,35,0,28
	.byte	'SETLUDIS',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'reserved_5',0,1
	.word	163
	.byte	3,0,2,35,0,28
	.byte	'DATM',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'reserved_9',0,4
	.word	820
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_SCU_SYSCON_Bits',0,19,172,8,3
	.word	44790
	.byte	15
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,19,175,8,16,4,28
	.byte	'ESR0T',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1T',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'SMUT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,19,182,8,3
	.word	44987
	.byte	15
	.byte	'_Ifx_SCU_TRAPDIS_Bits',0,19,185,8,16,4,28
	.byte	'ESR0T',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1T',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'SMUT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPDIS_Bits',0,19,192,8,3
	.word	45140
	.byte	15
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,19,195,8,16,4,28
	.byte	'ESR0T',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1T',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'SMUT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSET_Bits',0,19,202,8,3
	.word	45293
	.byte	15
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,19,205,8,16,4,28
	.byte	'ESR0T',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'ESR1T',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'reserved_2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'SMUT',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,4
	.word	820
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,19,212,8,3
	.word	45446
	.byte	2
	.byte	'unsigned int',0,4,7,15
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,19,215,8,16,4,28
	.byte	'ENDINIT',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'LCK',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'PW',0,4
	.word	45601
	.byte	14,16,2,35,0,28
	.byte	'REL',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,19,221,8,3
	.word	45617
	.byte	15
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,19,224,8,16,4,28
	.byte	'reserved_0',0,1
	.word	163
	.byte	2,6,2,35,0,28
	.byte	'IR0',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'DR',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'IR1',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'UR',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PAR',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'TCR',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'TCTR',0,1
	.word	163
	.byte	7,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,19,236,8,3
	.word	45747
	.byte	15
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,19,239,8,16,4,28
	.byte	'AE',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'OE',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'IS0',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'DS',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'TO',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'IS1',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'US',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PAS',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'TCS',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'TCT',0,1
	.word	163
	.byte	7,0,2,35,1,28
	.byte	'TIM',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,19,252,8,3
	.word	45985
	.byte	15
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,19,255,8,16,4,28
	.byte	'ENDINIT',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'LCK',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'PW',0,4
	.word	45601
	.byte	14,16,2,35,0,28
	.byte	'REL',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,19,133,9,3
	.word	46208
	.byte	15
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,19,136,9,16,4,28
	.byte	'CLRIRF',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'reserved_1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'IR0',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'DR',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'reserved_4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'IR1',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'UR',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PAR',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'TCR',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'TCTR',0,1
	.word	163
	.byte	7,0,2,35,1,28
	.byte	'reserved_16',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,19,149,9,3
	.word	46334
	.byte	15
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,19,152,9,16,4,28
	.byte	'AE',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'OE',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'IS0',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'DS',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'TO',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'IS1',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'US',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'PAS',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'TCS',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'TCT',0,1
	.word	163
	.byte	7,0,2,35,1,28
	.byte	'TIM',0,2
	.word	793
	.byte	16,0,2,35,2,0,27
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,19,165,9,3
	.word	46586
	.byte	29,19,173,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	28570
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN0',0,19,178,9,3
	.word	46805
	.byte	29,19,181,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29127
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ACCEN1',0,19,186,9,3
	.word	46869
	.byte	29,19,189,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29204
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ARSTDIS',0,19,194,9,3
	.word	46933
	.byte	29,19,197,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29340
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON0',0,19,202,9,3
	.word	46998
	.byte	29,19,205,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29620
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON1',0,19,210,9,3
	.word	47063
	.byte	29,19,213,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29858
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON2',0,19,218,9,3
	.word	47128
	.byte	29,19,221,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	29986
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON3',0,19,226,9,3
	.word	47193
	.byte	29,19,229,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30229
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON4',0,19,234,9,3
	.word	47258
	.byte	29,19,237,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30464
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON5',0,19,242,9,3
	.word	47323
	.byte	29,19,245,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30592
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON6',0,19,250,9,3
	.word	47388
	.byte	29,19,253,9,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30692
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON7',0,19,130,10,3
	.word	47453
	.byte	29,19,133,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30792
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CCUCON8',0,19,138,10,3
	.word	47518
	.byte	29,19,141,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	30892
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_CHIPID',0,19,146,10,3
	.word	47583
	.byte	29,19,149,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31100
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSCON',0,19,154,10,3
	.word	47647
	.byte	29,19,157,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31265
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSLIM',0,19,162,10,3
	.word	47711
	.byte	29,19,165,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31448
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_DTSSTAT',0,19,170,10,3
	.word	47775
	.byte	29,19,173,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31602
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EICR',0,19,178,10,3
	.word	47840
	.byte	29,19,181,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	31966
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EIFR',0,19,186,10,3
	.word	47902
	.byte	29,19,189,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32177
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EMSR',0,19,194,10,3
	.word	47964
	.byte	29,19,197,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32429
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ESRCFG',0,19,202,10,3
	.word	48026
	.byte	29,19,205,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32547
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ESROCFG',0,19,210,10,3
	.word	48090
	.byte	29,19,213,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32658
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVR13CON',0,19,218,10,3
	.word	48155
	.byte	29,19,221,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32821
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVR33CON',0,19,226,10,3
	.word	48221
	.byte	29,19,229,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	32984
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRADCSTAT',0,19,234,10,3
	.word	48287
	.byte	29,19,237,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33142
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRDVSTAT',0,19,242,10,3
	.word	48355
	.byte	29,19,245,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33307
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRMONCTRL',0,19,250,10,3
	.word	48422
	.byte	29,19,253,10,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33675
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVROVMON',0,19,130,11,3
	.word	48490
	.byte	29,19,133,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	33854
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRRSTCON',0,19,138,11,3
	.word	48556
	.byte	29,19,141,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34119
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF1',0,19,146,11,3
	.word	48623
	.byte	29,19,149,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34272
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF2',0,19,154,11,3
	.word	48692
	.byte	29,19,157,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34428
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF3',0,19,162,11,3
	.word	48761
	.byte	29,19,165,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34590
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF4',0,19,170,11,3
	.word	48830
	.byte	29,19,173,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34733
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF5',0,19,178,11,3
	.word	48899
	.byte	29,19,181,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	34898
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCOEFF6',0,19,186,11,3
	.word	48968
	.byte	29,19,189,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35043
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL1',0,19,194,11,3
	.word	49037
	.byte	29,19,197,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35224
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL2',0,19,202,11,3
	.word	49105
	.byte	29,19,205,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35398
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL3',0,19,210,11,3
	.word	49173
	.byte	29,19,213,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35558
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSDCTRL4',0,19,218,11,3
	.word	49241
	.byte	29,19,221,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35702
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRSTAT',0,19,226,11,3
	.word	49309
	.byte	29,19,229,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	35976
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRTRIM',0,19,234,11,3
	.word	49374
	.byte	29,19,237,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36131
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EVRUVMON',0,19,242,11,3
	.word	49439
	.byte	29,19,245,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36310
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_EXTCON',0,19,250,11,3
	.word	49505
	.byte	29,19,253,11,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36528
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_FDR',0,19,130,12,3
	.word	49569
	.byte	29,19,133,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	36691
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_FMR',0,19,138,12,3
	.word	49630
	.byte	29,19,141,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37027
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_ID',0,19,146,12,3
	.word	49691
	.byte	29,19,149,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37134
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IGCR',0,19,154,12,3
	.word	49751
	.byte	29,19,157,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37586
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IN',0,19,162,12,3
	.word	49813
	.byte	29,19,165,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37685
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_IOCR',0,19,170,12,3
	.word	49873
	.byte	29,19,173,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37835
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL0',0,19,178,12,3
	.word	49935
	.byte	29,19,181,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	37984
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL1',0,19,186,12,3
	.word	50003
	.byte	29,19,189,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38145
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LBISTCTRL2',0,19,194,12,3
	.word	50071
	.byte	29,19,197,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38275
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LCLCON',0,19,202,12,3
	.word	50139
	.byte	29,19,205,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38407
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_LCLTEST',0,19,210,12,3
	.word	50203
	.byte	29,19,213,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38522
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_MANID',0,19,218,12,3
	.word	50268
	.byte	29,19,221,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38633
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OMR',0,19,226,12,3
	.word	50331
	.byte	29,19,229,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	38791
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OSCCON',0,19,234,12,3
	.word	50392
	.byte	29,19,237,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39203
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OUT',0,19,242,12,3
	.word	50456
	.byte	29,19,245,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39304
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OVCCON',0,19,250,12,3
	.word	50517
	.byte	29,19,253,12,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39571
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_OVCENABLE',0,19,130,13,3
	.word	50581
	.byte	29,19,133,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39707
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDISC',0,19,138,13,3
	.word	50648
	.byte	29,19,141,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39818
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDR',0,19,146,13,3
	.word	50711
	.byte	29,19,149,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	39951
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PDRR',0,19,154,13,3
	.word	50772
	.byte	29,19,157,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40154
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON0',0,19,162,13,3
	.word	50834
	.byte	29,19,165,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40510
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON1',0,19,170,13,3
	.word	50899
	.byte	29,19,173,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40688
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLCON2',0,19,178,13,3
	.word	50964
	.byte	29,19,181,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	40788
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYCON0',0,19,186,13,3
	.word	51029
	.byte	29,19,189,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41158
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYCON1',0,19,194,13,3
	.word	51098
	.byte	29,19,197,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41344
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLERAYSTAT',0,19,202,13,3
	.word	51167
	.byte	29,19,205,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41542
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PLLSTAT',0,19,210,13,3
	.word	51236
	.byte	29,19,213,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41775
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMCSR',0,19,218,13,3
	.word	51301
	.byte	29,19,221,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	41927
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWCR0',0,19,226,13,3
	.word	51364
	.byte	29,19,229,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42475
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWCR1',0,19,234,13,3
	.word	51429
	.byte	29,19,237,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	42720
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWSTAT',0,19,242,13,3
	.word	51494
	.byte	29,19,245,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43181
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_PMSWSTATCLR',0,19,250,13,3
	.word	51560
	.byte	29,19,253,13,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43660
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTCON',0,19,130,14,3
	.word	51629
	.byte	29,19,133,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43451
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTCON2',0,19,138,14,3
	.word	51693
	.byte	29,19,141,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	43871
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_RSTSTAT',0,19,146,14,3
	.word	51758
	.byte	29,19,149,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44303
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SAFECON',0,19,154,14,3
	.word	51823
	.byte	29,19,157,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44399
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_STSTAT',0,19,162,14,3
	.word	51888
	.byte	29,19,165,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44665
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SWRSTCON',0,19,170,14,3
	.word	51952
	.byte	29,19,173,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44790
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_SYSCON',0,19,178,14,3
	.word	52018
	.byte	29,19,181,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	44987
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPCLR',0,19,186,14,3
	.word	52082
	.byte	29,19,189,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45140
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPDIS',0,19,194,14,3
	.word	52147
	.byte	29,19,197,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45293
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSET',0,19,202,14,3
	.word	52212
	.byte	29,19,205,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45446
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_TRAPSTAT',0,19,210,14,3
	.word	52277
	.byte	29,19,213,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45617
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTCPU_CON0',0,19,218,14,3
	.word	52343
	.byte	29,19,221,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45747
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTCPU_CON1',0,19,226,14,3
	.word	52412
	.byte	29,19,229,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	45985
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTCPU_SR',0,19,234,14,3
	.word	52481
	.byte	29,19,237,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46208
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON0',0,19,242,14,3
	.word	52548
	.byte	29,19,245,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46334
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_CON1',0,19,250,14,3
	.word	52615
	.byte	29,19,253,14,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	46586
	.byte	4,2,35,0,0,27
	.byte	'Ifx_SCU_WDTS_SR',0,19,130,15,3
	.word	52682
	.byte	15
	.byte	'_Ifx_SCU_WDTCPU',0,19,141,15,25,12,12
	.byte	'CON0',0
	.word	52343
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	52412
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	52481
	.byte	4,2,35,8,0,18
	.word	52747
	.byte	27
	.byte	'Ifx_SCU_WDTCPU',0,19,146,15,3
	.word	52810
	.byte	15
	.byte	'_Ifx_SCU_WDTS',0,19,149,15,25,12,12
	.byte	'CON0',0
	.word	52548
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	52615
	.byte	4,2,35,4,12
	.byte	'SR',0
	.word	52682
	.byte	4,2,35,8,0,18
	.word	52839
	.byte	27
	.byte	'Ifx_SCU_WDTS',0,19,154,15,3
	.word	52900
	.byte	15
	.byte	'_Ifx_GTM_ACCEN0_Bits',0,20,49,16,4,28
	.byte	'EN0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN22',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'EN23',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'EN24',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'EN25',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'EN26',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'EN27',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'EN28',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'EN29',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'EN30',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'EN31',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ACCEN0_Bits',0,20,83,3
	.word	52927
	.byte	15
	.byte	'_Ifx_GTM_ACCEN1_Bits',0,20,86,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_GTM_ACCEN1_Bits',0,20,89,3
	.word	53484
	.byte	15
	.byte	'_Ifx_GTM_ADCTRIG0OUT0_Bits',0,20,92,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG0OUT0_Bits',0,20,102,3
	.word	53561
	.byte	15
	.byte	'_Ifx_GTM_ADCTRIG0OUT1_Bits',0,20,105,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG0OUT1_Bits',0,20,109,3
	.word	53756
	.byte	15
	.byte	'_Ifx_GTM_ADCTRIG1OUT0_Bits',0,20,112,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG1OUT0_Bits',0,20,122,3
	.word	53861
	.byte	15
	.byte	'_Ifx_GTM_ADCTRIG1OUT1_Bits',0,20,125,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG1OUT1_Bits',0,20,129,1,3
	.word	54056
	.byte	15
	.byte	'_Ifx_GTM_AEI_ADDR_XPT_Bits',0,20,132,1,16,4,28
	.byte	'TO_ADDR',0,4
	.word	45601
	.byte	20,12,2,35,0,28
	.byte	'TO_W1R0',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	11,0,2,35,0,0,27
	.byte	'Ifx_GTM_AEI_ADDR_XPT_Bits',0,20,137,1,3
	.word	54162
	.byte	15
	.byte	'_Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,20,140,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC_Bits',0,20,144,1,3
	.word	54292
	.byte	15
	.byte	'_Ifx_GTM_ARU_ARU_ACCESS_Bits',0,20,147,1,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'RREQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'WREQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'reserved_14',0,4
	.word	45601
	.byte	18,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_ARU_ACCESS_Bits',0,20,154,1,3
	.word	54404
	.byte	15
	.byte	'_Ifx_GTM_ARU_DATA_H_Bits',0,20,157,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DATA_H_Bits',0,20,161,1,3
	.word	54570
	.byte	15
	.byte	'_Ifx_GTM_ARU_DATA_L_Bits',0,20,164,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DATA_L_Bits',0,20,168,1,3
	.word	54674
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,20,171,1,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0_Bits',0,20,175,1,3
	.word	54778
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,20,178,1,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1_Bits',0,20,182,1,3
	.word	54891
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,20,185,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H_Bits',0,20,189,1,3
	.word	55004
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,20,192,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L_Bits',0,20,196,1,3
	.word	55118
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,20,199,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H_Bits',0,20,203,1,3
	.word	55232
	.byte	15
	.byte	'_Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,20,206,1,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	29,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L_Bits',0,20,210,1,3
	.word	55346
	.byte	15
	.byte	'_Ifx_GTM_ARU_IRQ_EN_Bits',0,20,213,1,16,4,28
	.byte	'NEW_DATA0_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'NEW_DATA1_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ACC_ACK_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_EN_Bits',0,20,219,1,3
	.word	55460
	.byte	15
	.byte	'_Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,20,222,1,16,4,28
	.byte	'TRG_NEW_DATA0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_NEW_DATA',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_ACC_ACK',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT_Bits',0,20,228,1,3
	.word	55629
	.byte	15
	.byte	'_Ifx_GTM_ARU_IRQ_MODE_Bits',0,20,231,1,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_MODE_Bits',0,20,235,1,3
	.word	55798
	.byte	15
	.byte	'_Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,20,238,1,16,4,28
	.byte	'NEW_DATA0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'NEW_DATA1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ACC_ACK',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY_Bits',0,20,244,1,3
	.word	55909
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,20,247,1,16,4,28
	.byte	'ACT_TB',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'TB_TRIG',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TBU_SEL',0,4
	.word	45601
	.byte	2,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB_Bits',0,20,253,1,3
	.word	56065
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,20,128,2,16,4,28
	.byte	'ENDIS_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits',0,20,139,2,3
	.word	56219
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,20,142,2,16,4,28
	.byte	'ENDIS_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits',0,20,153,2,3
	.word	56509
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,20,156,2,16,4,28
	.byte	'FUPD_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'FUPD_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'FUPD_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'FUPD_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'FUPD_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'FUPD_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'FUPD_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'FUPD_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'RSTCN0_CH0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'RSTCN0_CH1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'RSTCN0_CH2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'RSTCN0_CH3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'RSTCN0_CH4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'RSTCN0_CH5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'RSTCN0_CH6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'RSTCN0_CH7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits',0,20,174,2,3
	.word	56799
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,20,177,2,16,4,28
	.byte	'HOST_TRIG',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	7,24,2,35,0,28
	.byte	'RST_CH0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'RST_CH1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'RST_CH2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'RST_CH3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'RST_CH4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'RST_CH5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'RST_CH6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'RST_CH7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'UPEN_CTRL0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'UPEN_CTRL1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'UPEN_CTRL2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'UPEN_CTRL3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'UPEN_CTRL4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'UPEN_CTRL5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'UPEN_CTRL6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'UPEN_CTRL7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits',0,20,197,2,3
	.word	57232
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,20,200,2,16,4,28
	.byte	'INT_TRIG0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'INT_TRIG1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'INT_TRIG2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'INT_TRIG3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'INT_TRIG4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'INT_TRIG5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'INT_TRIG6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'INT_TRIG7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG_Bits',0,20,211,2,3
	.word	57682
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,20,214,2,16,4,28
	.byte	'OUTEN_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits',0,20,225,2,3
	.word	57952
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,20,228,2,16,4,28
	.byte	'OUTEN_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits',0,20,239,2,3
	.word	58242
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_CM0_Bits',0,20,242,2,16,4,28
	.byte	'CM0',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CM0_Bits',0,20,246,2,3
	.word	58532
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_CM1_Bits',0,20,249,2,16,4,28
	.byte	'CM1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CM1_Bits',0,20,253,2,3
	.word	58637
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_CN0_Bits',0,20,128,3,16,4,28
	.byte	'CN0',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CN0_Bits',0,20,132,3,3
	.word	58742
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_CTRL_Bits',0,20,135,3,16,4,28
	.byte	'MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'TB12_SEL',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACB',0,4
	.word	45601
	.byte	5,23,2,35,0,28
	.byte	'CMP_CTRL',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'CLK_SRCCLK_SRC_SR',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'reserved_15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'WR_REQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'reserved_17',0,4
	.word	45601
	.byte	3,12,2,35,0,28
	.byte	'RST_CCU0',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'TRIGOUT',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'SLA',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'OSM',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'ABM',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CTRL_Bits',0,20,155,3,3
	.word	58847
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,20,158,3,16,4,28
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN_Bits',0,20,163,3,3
	.word	59265
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,20,166,3,16,4,28
	.byte	'TRG_CCU0TC',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_CCU1TC',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits',0,20,171,3,3
	.word	59410
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,20,174,3,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE_Bits',0,20,178,3,3
	.word	59559
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,20,181,3,16,4,28
	.byte	'CCU0TC',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CCU1TC',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits',0,20,186,3,3
	.word	59678
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_RDADDR_Bits',0,20,189,3,16,4,28
	.byte	'RDADDR0',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	7,16,2,35,0,28
	.byte	'RDADDR1',0,4
	.word	45601
	.byte	9,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	7,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_RDADDR_Bits',0,20,195,3,3
	.word	59817
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SOMC_Bits',0,20,198,3,16,4,28
	.byte	'MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'TB12_SEL',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACB10',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ACB42',0,4
	.word	45601
	.byte	3,23,2,35,0,28
	.byte	'CMP_CTRL',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'WR_REQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'reserved_17',0,4
	.word	45601
	.byte	7,8,2,35,0,28
	.byte	'TRIGOUT',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'SLA',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'reserved_26',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'ABM',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMC_Bits',0,20,216,3,3
	.word	59973
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SOMI_Bits',0,20,219,3,16,4,28
	.byte	'MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACB0',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	6,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	20,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMI_Bits',0,20,228,3,3
	.word	60346
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SOMP_Bits',0,20,231,3,16,4,28
	.byte	'MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ADL',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	5,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'CLK_SRC_SR',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'reserved_15',0,4
	.word	45601
	.byte	5,12,2,35,0,28
	.byte	'RST_CCU0',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'TRIGOUT',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'OSM',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMP_Bits',0,20,247,3,3
	.word	60546
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SOMS_Bits',0,20,250,3,16,4,28
	.byte	'MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACB0',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	6,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'CLK_SRC',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'reserved_15',0,4
	.word	45601
	.byte	11,6,2,35,0,28
	.byte	'OSM',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMS_Bits',0,20,134,4,3
	.word	60890
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SR0_Bits',0,20,137,4,16,4,28
	.byte	'SR0',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SR0_Bits',0,20,141,4,3
	.word	61147
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_SR1_Bits',0,20,144,4,16,4,28
	.byte	'SR1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SR1_Bits',0,20,148,4,3
	.word	61252
	.byte	15
	.byte	'_Ifx_GTM_ATOM_CH_STAT_Bits',0,20,151,4,16,4,28
	.byte	'OL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	15,16,2,35,0,28
	.byte	'ACBI',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'DV',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'WRF',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'ACBO',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_STAT_Bits',0,20,161,4,3
	.word	61357
	.byte	15
	.byte	'_Ifx_GTM_BRC_EIRQ_EN_Bits',0,20,164,4,16,4,28
	.byte	'DEST_ERR_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DID_EN0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'DID_EN1',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'DID_EN2',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'DID_EN3',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'DID_EN4',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DID_EN5',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'DID_EN6',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'DID_EN7',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DID_EN8',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'DID_EN9',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'DID_EN10',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'DID_EN11',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_EIRQ_EN_Bits',0,20,180,4,3
	.word	61569
	.byte	15
	.byte	'_Ifx_GTM_BRC_IRQ_EN_Bits',0,20,183,4,16,4,28
	.byte	'DEST_ERR_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DID_EN0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'DID_EN1',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'DID_EN2',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'DID_EN3',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'DID_EN4',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DID_EN5',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'DID_EN6',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'DID_EN7',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DID_EN8',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'DID_EN9',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'DID_EN10',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'DID_EN11',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_EN_Bits',0,20,199,4,3
	.word	61912
	.byte	15
	.byte	'_Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,20,202,4,16,4,28
	.byte	'TRG_DEST_ERR',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_DID0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_DID1',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_DID2',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG_DID3',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG_DID4',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TRG_DID5',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TRG_DID6',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TRG_DID7',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TRG_DID8',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TRG_DID9',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TRG_DID10',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TRG_DID11',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT_Bits',0,20,218,4,3
	.word	62253
	.byte	15
	.byte	'_Ifx_GTM_BRC_IRQ_MODE_Bits',0,20,221,4,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_MODE_Bits',0,20,225,4,3
	.word	62617
	.byte	15
	.byte	'_Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,20,228,4,16,4,28
	.byte	'DEST_ERR',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DID0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'DID1',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'DID2',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'DID3',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'DID4',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DID5',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'DID6',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'DID7',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DID8',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'DID9',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'DID10',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'DID11',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY_Bits',0,20,244,4,3
	.word	62728
	.byte	15
	.byte	'_Ifx_GTM_BRC_RST_Bits',0,20,247,4,16,4,28
	.byte	'RST',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_RST_Bits',0,20,251,4,3
	.word	63038
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC0_ADDR_Bits',0,20,254,4,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC0_ADDR_Bits',0,20,132,5,3
	.word	63134
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC0_DEST_Bits',0,20,135,5,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC0_DEST_Bits',0,20,161,5,3
	.word	63286
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC10_ADDR_Bits',0,20,164,5,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC10_ADDR_Bits',0,20,170,5,3
	.word	63855
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC10_DEST_Bits',0,20,173,5,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC10_DEST_Bits',0,20,199,5,3
	.word	64009
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC11_ADDR_Bits',0,20,202,5,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC11_ADDR_Bits',0,20,208,5,3
	.word	64580
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC11_DEST_Bits',0,20,211,5,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC11_DEST_Bits',0,20,237,5,3
	.word	64734
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC1_ADDR_Bits',0,20,240,5,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC1_ADDR_Bits',0,20,246,5,3
	.word	65305
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC1_DEST_Bits',0,20,249,5,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC1_DEST_Bits',0,20,147,6,3
	.word	65457
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC2_ADDR_Bits',0,20,150,6,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC2_ADDR_Bits',0,20,156,6,3
	.word	66026
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC2_DEST_Bits',0,20,159,6,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC2_DEST_Bits',0,20,185,6,3
	.word	66178
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC3_ADDR_Bits',0,20,188,6,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC3_ADDR_Bits',0,20,194,6,3
	.word	66747
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC3_DEST_Bits',0,20,197,6,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC3_DEST_Bits',0,20,223,6,3
	.word	66899
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC4_ADDR_Bits',0,20,226,6,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC4_ADDR_Bits',0,20,232,6,3
	.word	67468
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC4_DEST_Bits',0,20,235,6,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC4_DEST_Bits',0,20,133,7,3
	.word	67620
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC5_ADDR_Bits',0,20,136,7,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC5_ADDR_Bits',0,20,142,7,3
	.word	68189
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC5_DEST_Bits',0,20,145,7,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC5_DEST_Bits',0,20,171,7,3
	.word	68341
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC6_ADDR_Bits',0,20,174,7,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC6_ADDR_Bits',0,20,180,7,3
	.word	68910
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC6_DEST_Bits',0,20,183,7,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC6_DEST_Bits',0,20,209,7,3
	.word	69062
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC7_ADDR_Bits',0,20,212,7,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC7_ADDR_Bits',0,20,218,7,3
	.word	69631
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC7_DEST_Bits',0,20,221,7,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC7_DEST_Bits',0,20,247,7,3
	.word	69783
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC8_ADDR_Bits',0,20,250,7,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC8_ADDR_Bits',0,20,128,8,3
	.word	70352
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC8_DEST_Bits',0,20,131,8,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC8_DEST_Bits',0,20,157,8,3
	.word	70504
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC9_ADDR_Bits',0,20,160,8,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'BRC_MODE',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC9_ADDR_Bits',0,20,166,8,3
	.word	71073
	.byte	15
	.byte	'_Ifx_GTM_BRC_SRC9_DEST_Bits',0,20,169,8,16,4,28
	.byte	'EN_DEST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'EN_DEST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'EN_DEST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EN_DEST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'EN_DEST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'EN_DEST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'EN_DEST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'EN_DEST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'EN_DEST8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'EN_DEST9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'EN_DEST10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'EN_DEST11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'EN_DEST12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'EN_DEST13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'EN_DEST14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EN_DEST15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'EN_DEST16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'EN_DEST17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'EN_DEST18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'EN_DEST19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'EN_DEST20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'EN_DEST21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'EN_TRASHBIN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC9_DEST_Bits',0,20,195,8,3
	.word	71225
	.byte	15
	.byte	'_Ifx_GTM_BRIDGE_MODE_Bits',0,20,198,8,16,4,28
	.byte	'BRG_MODE',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MSK_WR_RSP',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	6,24,2,35,0,28
	.byte	'MODE_UP_PGR',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'BUFF_OVL',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'SYNC_INPUT_REG',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'BRG_RST',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'reserved_17',0,4
	.word	45601
	.byte	7,8,2,35,0,28
	.byte	'BUFF_DPT',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_MODE_Bits',0,20,211,8,3
	.word	71794
	.byte	15
	.byte	'_Ifx_GTM_BRIDGE_PTR1_Bits',0,20,214,8,16,4,28
	.byte	'NEW_TRAN_PTR',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'FIRST_RSP_PTR',0,4
	.word	45601
	.byte	5,22,2,35,0,28
	.byte	'TRAN_IN_PGR',0,4
	.word	45601
	.byte	5,17,2,35,0,28
	.byte	'ABT_TRAN_PGR',0,4
	.word	45601
	.byte	5,12,2,35,0,28
	.byte	'FBC',0,4
	.word	45601
	.byte	6,6,2,35,0,28
	.byte	'RSP_TRAN_RDY',0,4
	.word	45601
	.byte	6,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_PTR1_Bits',0,20,222,8,3
	.word	72102
	.byte	15
	.byte	'_Ifx_GTM_BRIDGE_PTR2_Bits',0,20,225,8,16,4,28
	.byte	'TRAN_IN_PGR2',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_PTR2_Bits',0,20,229,8,3
	.word	72304
	.byte	15
	.byte	'_Ifx_GTM_CLC_Bits',0,20,232,8,16,4,28
	.byte	'DISR',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DISS',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'EDIS',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_CLC_Bits',0,20,239,8,3
	.word	72417
	.byte	15
	.byte	'_Ifx_GTM_CMP_EIRQ_EN_Bits',0,20,242,8,16,4,28
	.byte	'ABWC0_EN_EIRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ABWC1_EN_EIRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ABWC2_EN_EIRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ABWC3_EN_EIRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ABWC4_EN_EIRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ABWC5_EN_EIRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ABWC6_EN_EIRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ABWC7_EN_EIRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ABWC8_EN_EIRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ABWC9_EN_EIRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ABWC10_EN_EIRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ABWC11_EN_EIRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TBWC0_EN_EIRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TBWC1_EN_EIRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TBWC2_EN_EIRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TBWC3_EN_EIRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TBWC4_EN_EIRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TBWC5_EN_EIRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TBWC6_EN_EIRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TBWC7_EN_EIRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TBWC8_EN_EIRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TBWC9_EN_EIRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TBWC10_EN_EIRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TBWC11_EN_EIRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_EIRQ_EN_Bits',0,20,141,9,3
	.word	72560
	.byte	15
	.byte	'_Ifx_GTM_CMP_EN_Bits',0,20,144,9,16,4,28
	.byte	'ABWC0_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ABWC1_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ABWC2_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ABWC3_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ABWC4_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ABWC5_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ABWC6_EN',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ABWC7_EN',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ABWC8_EN',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ABWC9_EN',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ABWC10_EN',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ABWC11_EN',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TBWC0_EN',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TBWC1_EN',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TBWC2_EN',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TBWC3_EN',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TBWC4_EN',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TBWC5_EN',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TBWC6_EN',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TBWC7_EN',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TBWC8_EN',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TBWC9_EN',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TBWC10_EN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TBWC11_EN',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_EN_Bits',0,20,171,9,3
	.word	73254
	.byte	15
	.byte	'_Ifx_GTM_CMP_IRQ_EN_Bits',0,20,174,9,16,4,28
	.byte	'ABWC0_EN_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ABWC1_EN_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ABWC2_EN_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ABWC3_EN_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ABWC4_EN_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ABWC5_EN_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ABWC6_EN_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ABWC7_EN_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ABWC8_EN_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ABWC9_EN_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ABWC10_EN_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ABWC11_EN_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TBWC0_EN_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TBWC1_EN_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TBWC2_EN_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TBWC3_EN_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TBWC4_EN_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TBWC5_EN_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TBWC6_EN_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TBWC7_EN_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TBWC8_EN_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TBWC9_EN_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TBWC10_EN_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TBWC11_EN_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_EN_Bits',0,20,201,9,3
	.word	73818
	.byte	15
	.byte	'_Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,20,204,9,16,4,28
	.byte	'TRG_ABWC0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_ABWC1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_ABWC2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_ABWC3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG_ABWC4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG_ABWC5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TRG_ABWC6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TRG_ABWC7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TRG_ABWC8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TRG_ABWC9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TRG_ABWC10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TRG_ABWC11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TRG_TBWC0',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TRG_TBWC1',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TRG_TBWC2',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TRG_TBWC3',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TRG_TBWC4',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TRG_TBWC5',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TRG_TBWC6',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TRG_TBWC7',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TRG_TBWC8',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TRG_TBWC9',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TRG_TBWC10',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TRG_TBWC11',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT_Bits',0,20,231,9,3
	.word	74486
	.byte	15
	.byte	'_Ifx_GTM_CMP_IRQ_MODE_Bits',0,20,234,9,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_MODE_Bits',0,20,238,9,3
	.word	75092
	.byte	15
	.byte	'_Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,20,241,9,16,4,28
	.byte	'ABWC0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ABWC1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ABWC2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ABWC3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ABWC4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ABWC5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ABWC6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ABWC7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ABWC8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ABWC9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ABWC10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ABWC11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TBWC0',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TBWC1',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TBWC2',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TBWC3',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TBWC4',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TBWC5',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TBWC6',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TBWC7',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TBWC8',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TBWC9',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TBWC10',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TBWC11',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY_Bits',0,20,140,10,3
	.word	75203
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,20,143,10,16,4,28
	.byte	'CLK_CNT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL_Bits',0,20,147,10,3
	.word	75711
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,20,150,10,16,4,28
	.byte	'CLK_CNT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'CLK6_SEL',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	7,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL_Bits',0,20,155,10,3
	.word	75828
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,20,158,10,16,4,28
	.byte	'CLK_CNT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'CLK7_SEL',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	7,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL_Bits',0,20,163,10,3
	.word	75963
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK_EN_Bits',0,20,166,10,16,4,28
	.byte	'EN_CLK0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'EN_CLK1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'EN_CLK2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'EN_CLK3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'EN_CLK4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'EN_CLK5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'EN_CLK6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'EN_CLK7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'EN_ECLK0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'EN_ECLK1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'EN_ECLK2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'EN_FXCLK',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_EN_Bits',0,20,181,10,3
	.word	76098
	.byte	15
	.byte	'_Ifx_GTM_CMU_ECLK_DEN_Bits',0,20,184,10,16,4,28
	.byte	'ECLK_DEN',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_ECLK_DEN_Bits',0,20,188,10,3
	.word	76418
	.byte	15
	.byte	'_Ifx_GTM_CMU_ECLK_NUM_Bits',0,20,191,10,16,4,28
	.byte	'ECLK_NUM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_ECLK_NUM_Bits',0,20,195,10,3
	.word	76530
	.byte	15
	.byte	'_Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,20,198,10,16,4,28
	.byte	'FXCLK_SEL',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL_Bits',0,20,202,10,3
	.word	76642
	.byte	15
	.byte	'_Ifx_GTM_CMU_GCLK_DEN_Bits',0,20,205,10,16,4,28
	.byte	'GCLK_DEN',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_GCLK_DEN_Bits',0,20,209,10,3
	.word	76758
	.byte	15
	.byte	'_Ifx_GTM_CMU_GCLK_NUM_Bits',0,20,212,10,16,4,28
	.byte	'GCLK_NUM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_GCLK_NUM_Bits',0,20,216,10,3
	.word	76870
	.byte	15
	.byte	'_Ifx_GTM_CTRL_Bits',0,20,219,10,16,4,28
	.byte	'RF_PROT',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TO_MODE',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'TO_VAL',0,4
	.word	45601
	.byte	5,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_GTM_CTRL_Bits',0,20,226,10,3
	.word	76982
	.byte	15
	.byte	'_Ifx_GTM_DATAIN_Bits',0,20,229,10,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	32,0,2,35,0,0,27
	.byte	'Ifx_GTM_DATAIN_Bits',0,20,232,10,3
	.word	77135
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ACB_Bits',0,20,235,10,16,4,28
	.byte	'ACB_0',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'ACB_1',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'ACB_2',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'ACB_3',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ACB_Bits',0,20,245,10,3
	.word	77208
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ACT_STA_Bits',0,20,248,10,16,4,28
	.byte	'ACT_Ni',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ACT_STA_Bits',0,20,252,10,3
	.word	77428
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,20,255,10,16,4,28
	.byte	'ADD_IN_CAL_1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1_Bits',0,20,131,11,3
	.word	77538
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,20,134,11,16,4,28
	.byte	'ADD_IN_CAL_2',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2_Bits',0,20,138,11,3
	.word	77662
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,20,141,11,16,4,28
	.byte	'ADD_IN_LD_1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1_Bits',0,20,145,11,3
	.word	77786
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,20,148,11,16,4,28
	.byte	'ADD_IN_LD_2',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2_Bits',0,20,152,11,3
	.word	77907
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ADT_S_Bits',0,20,155,11,16,4,28
	.byte	'PD_S',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'NS',0,4
	.word	45601
	.byte	6,10,2,35,0,28
	.byte	'reserved_22',0,4
	.word	45601
	.byte	10,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADT_S_Bits',0,20,160,11,3
	.word	78028
	.byte	15
	.byte	'_Ifx_GTM_DPLL_AOSV_2_Bits',0,20,163,11,16,4,28
	.byte	'AOSV_2A',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'AOSV_2B',0,4
	.word	45601
	.byte	8,16,2,35,0,28
	.byte	'AOSV_2C',0,4
	.word	45601
	.byte	8,8,2,35,0,28
	.byte	'AOSV_2D',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_AOSV_2_Bits',0,20,169,11,3
	.word	78146
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APS_1C3_Bits',0,20,172,11,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'APS_1C3',0,4
	.word	45601
	.byte	6,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS_1C3_Bits',0,20,177,11,3
	.word	78289
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APS_Bits',0,20,180,11,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'WAPS',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'APS',0,4
	.word	45601
	.byte	6,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'WAPS_1C2',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'APS_1C2',0,4
	.word	45601
	.byte	6,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS_Bits',0,20,189,11,3
	.word	78421
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APS_SYNC_Bits',0,20,192,11,16,4,28
	.byte	'APS_1C2_EXT',0,4
	.word	45601
	.byte	6,26,2,35,0,28
	.byte	'APS_1C2_STATUS',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'reserved_7',0,4
	.word	45601
	.byte	7,18,2,35,0,28
	.byte	'APS_1C2_OLD',0,4
	.word	45601
	.byte	6,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS_SYNC_Bits',0,20,199,11,3
	.word	78619
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APT_2C_Bits',0,20,202,11,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'APT_2C',0,4
	.word	45601
	.byte	10,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	20,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT_2C_Bits',0,20,207,11,3
	.word	78807
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APT_Bits',0,20,210,11,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'WAPT',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'APT',0,4
	.word	45601
	.byte	10,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'WAPT_2B',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'APT_2B',0,4
	.word	45601
	.byte	10,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT_Bits',0,20,219,11,3
	.word	78937
	.byte	15
	.byte	'_Ifx_GTM_DPLL_APT_SYNC_Bits',0,20,222,11,16,4,28
	.byte	'APT_2B_EXT',0,4
	.word	45601
	.byte	6,26,2,35,0,28
	.byte	'APT_2B_STATUS',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'reserved_7',0,4
	.word	45601
	.byte	7,18,2,35,0,28
	.byte	'APT_2B_OLD',0,4
	.word	45601
	.byte	10,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT_SYNC_Bits',0,20,229,11,3
	.word	79134
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CDT_SX_Bits',0,20,232,11,16,4,28
	.byte	'CDT_SX',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_SX_Bits',0,20,236,11,3
	.word	79319
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,20,239,11,16,4,28
	.byte	'CDT_SX_NOM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM_Bits',0,20,243,11,3
	.word	79427
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CDT_TX_Bits',0,20,246,11,16,4,28
	.byte	'CDT_TX',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_TX_Bits',0,20,250,11,3
	.word	79547
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,20,253,11,16,4,28
	.byte	'CDT_TX_NOM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM_Bits',0,20,129,12,3
	.word	79655
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CNT_NUM1_Bits',0,20,132,12,16,4,28
	.byte	'CNT_NUM_1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CNT_NUM1_Bits',0,20,136,12,3
	.word	79775
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CNT_NUM2_Bits',0,20,139,12,16,4,28
	.byte	'CNT_NUM_2',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CNT_NUM2_Bits',0,20,143,12,3
	.word	79890
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,20,146,12,16,4,28
	.byte	'DMO',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	2,29,2,35,0,28
	.byte	'COA',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'PIT',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'SGE1',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DLM1',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'PCM1',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SGE2',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DLM2',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'PCM2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'SYN_NS',0,4
	.word	45601
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits',0,20,159,12,3
	.word	80005
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_0_Bits',0,20,162,12,16,4,28
	.byte	'MLT',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'IFP',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'SNU',0,4
	.word	45601
	.byte	5,16,2,35,0,28
	.byte	'TNU',0,4
	.word	45601
	.byte	9,7,2,35,0,28
	.byte	'AMS',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'AMT',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'IDS',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'IDT',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'SEN',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TEN',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'RMO',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0_Bits',0,20,175,12,3
	.word	80279
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,20,178,12,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'IFP',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	14,7,2,35,0,28
	.byte	'AMS',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'reserved_26',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'IDS',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	3,1,2,35,0,28
	.byte	'RMO',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits',0,20,188,12,3
	.word	80511
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,20,191,12,16,4,28
	.byte	'MLT',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'IFP',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	15,6,2,35,0,28
	.byte	'AMT',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'IDS',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'IDT',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	2,1,2,35,0,28
	.byte	'RMO',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits',0,20,201,12,3
	.word	80755
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_1_Bits',0,20,204,12,16,4,28
	.byte	'DMO',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DEN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'IDDS',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'COA',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'PIT',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'SGE1',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DLM1',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'PCM1',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SGE2',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DLM2',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'PCM2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'SYN_NS',0,4
	.word	45601
	.byte	5,16,2,35,0,28
	.byte	'SYN_NT',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'LCD',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'SWR',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'SYSF',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TS0_HRS',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'TS0_HRT',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'SMC',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'SSL',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'TSL',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_1_Bits',0,20,228,12,3
	.word	80988
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,20,231,12,16,4,28
	.byte	'DMO',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	2,29,2,35,0,28
	.byte	'COA',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'PIT',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'SGE1',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DLM1',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'PCM1',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits',0,20,241,12,3
	.word	81415
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_2_Bits',0,20,244,12,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'AEN0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'AEN1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'AEN2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'AEN3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'AEN4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'AEN5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'AEN6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'AEN7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'WAD0',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'WAD1',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'WAD2',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'WAD3',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'WAD4',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'WAD5',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'WAD6',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'WAD7',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_2_Bits',0,20,136,13,3
	.word	81649
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_3_Bits',0,20,139,13,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'AEN8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'AEN9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'AEN10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'AEN11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'AEN12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'AEN13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'AEN14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'AEN15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'WAD8',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'WAD9',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'WAD10',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'WAD11',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'WAD12',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'WAD13',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'WAD14',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'WAD15',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_3_Bits',0,20,159,13,3
	.word	82017
	.byte	15
	.byte	'_Ifx_GTM_DPLL_CTRL_4_Bits',0,20,162,13,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'AEN16',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'AEN17',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'AEN18',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'AEN19',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'AEN20',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'AEN21',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'AEN22',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'AEN23',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'WAD16',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'WAD17',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'WAD18',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'WAD19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'WAD20',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'WAD21',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'WAD22',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'WAD23',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_4_Bits',0,20,182,13,3
	.word	82397
	.byte	15
	.byte	'_Ifx_GTM_DPLL_DLA_Bits',0,20,185,13,16,4,28
	.byte	'DLA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DLA_Bits',0,20,189,13,3
	.word	82781
	.byte	15
	.byte	'_Ifx_GTM_DPLL_DT_S_ACT_Bits',0,20,192,13,16,4,28
	.byte	'DT_S_ACT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_S_ACT_Bits',0,20,196,13,3
	.word	82880
	.byte	15
	.byte	'_Ifx_GTM_DPLL_DT_S_Bits',0,20,199,13,16,4,28
	.byte	'DT_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_S_Bits',0,20,203,13,3
	.word	82994
	.byte	15
	.byte	'_Ifx_GTM_DPLL_DT_T_ACT_Bits',0,20,206,13,16,4,28
	.byte	'DT_T_ACT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_T_ACT_Bits',0,20,210,13,3
	.word	83096
	.byte	15
	.byte	'_Ifx_GTM_DPLL_DTA_Bits',0,20,213,13,16,4,28
	.byte	'DTA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DTA_Bits',0,20,217,13,3
	.word	83210
	.byte	15
	.byte	'_Ifx_GTM_DPLL_EDT_S_Bits',0,20,221,13,16,4,28
	.byte	'EDT_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EDT_S_Bits',0,20,225,13,3
	.word	83309
	.byte	15
	.byte	'_Ifx_GTM_DPLL_EDT_T_Bits',0,20,229,13,16,4,28
	.byte	'EDT_T',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EDT_T_Bits',0,20,233,13,3
	.word	83414
	.byte	15
	.byte	'_Ifx_GTM_DPLL_EIRQ_EN_Bits',0,20,236,13,16,4,28
	.byte	'PDI_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'PEI_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TINI_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TAXI_EIRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SISI_EIRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TISI_EIRQ_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MSI_EIRQ_EN',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MTI_EIRQ_EN',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SASI_EIRQ_EN',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TASI_EIRQ_EN',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'PWI_EIRQ_EN',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'W2I_EIRQ_EN',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'W1I_EIRQ_EN',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'GL1I_EIRQ_EN',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'LL1I_EIRQ_EN',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EI_EIRQ_EN',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'GL2I_EIRQ_EN',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'LL2I_EIRQ_EN',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TE0I_EIRQ_EN',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TE1I_EIRQ_EN',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TE2I_EIRQ_EN',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TE3I_EIRQ_EN',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TE4I_EIRQ_EN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'CDTI_EIRQ_EN',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'CDSI_EIRQ_EN',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TORI',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'SORI',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'DCGI',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EIRQ_EN_Bits',0,20,139,14,3
	.word	83519
	.byte	15
	.byte	'_Ifx_GTM_DPLL_FTV_S_Bits',0,20,142,14,16,4,28
	.byte	'STATE_FT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_FTV_S_Bits',0,20,146,14,3
	.word	84250
	.byte	15
	.byte	'_Ifx_GTM_DPLL_FTV_T_Bits',0,20,149,14,16,4,28
	.byte	'TRIGGER_FT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_FTV_T_Bits',0,20,153,14,3
	.word	84358
	.byte	15
	.byte	'_Ifx_GTM_DPLL_ID_PMTR_Bits',0,20,156,14,16,4,28
	.byte	'ID_PMTR_x',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ID_PMTR_Bits',0,20,160,14,3
	.word	84468
	.byte	15
	.byte	'_Ifx_GTM_DPLL_INC_CNT1_Bits',0,20,163,14,16,4,28
	.byte	'INC_CNT1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_INC_CNT1_Bits',0,20,167,14,3
	.word	84580
	.byte	15
	.byte	'_Ifx_GTM_DPLL_INC_CNT2_Bits',0,20,171,14,16,4,28
	.byte	'INC_CNT2',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_INC_CNT2_Bits',0,20,175,14,3
	.word	84694
	.byte	15
	.byte	'_Ifx_GTM_DPLL_IRQ_EN_Bits',0,20,178,14,16,4,28
	.byte	'PDI_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'PEI_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TINI_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TAXI_IRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SISI_IRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TISI_IRQ_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MSI_IRQ_EN',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MTI_IRQ_EN',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SASI_IRQ_EN',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TASI_IRQ_EN',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'PWI_IRQ_EN',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'W2I_IRQ_EN',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'W1I_IRQ_EN',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'GL1I_IRQ_EN',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'LL1I_IRQ_EN',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EI_IRQ_EN',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'GL2I_IRQ_EN',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'LL2I_IRQ_EN',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TE0I_IRQ_EN',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TE1I_IRQ_EN',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TE2I_IRQ_EN',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TE3I_IRQ_EN',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TE4I_IRQ_EN',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'CDTI_IRQ_EN',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'CDSI_IRQ_EN',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TORI',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'SORI',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'DCGI',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_EN_Bits',0,20,209,14,3
	.word	84808
	.byte	15
	.byte	'_Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,20,212,14,16,4,28
	.byte	'TRG_PDI',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_PEI',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_TINI',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_TAXI',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG_SISI',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG_TISI',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TRG_MSI',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TRG_MTI',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TRG_SASI',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TRG_TASI',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TRG_PWI',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TRG_W2I',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TRG_W1I',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TRG_GL1I',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TRG_LL1I',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TRG_EI',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TRG_GL2I',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TRG_LL2I',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TRG_TE0I',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TRG_TE1I',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TRG_TE2I',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TRG_TE3I',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TRG_TE4I',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TRG_CDTI',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'TRG_CDSI',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TRG_TORI',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'TRG_SORI',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'TRG_DCGI',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT_Bits',0,20,243,14,3
	.word	85512
	.byte	15
	.byte	'_Ifx_GTM_DPLL_IRQ_MODE_Bits',0,20,246,14,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_MODE_Bits',0,20,250,14,3
	.word	86163
	.byte	15
	.byte	'_Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,20,253,14,16,4,28
	.byte	'PDI',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'PEI',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TINI',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TAXI',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SISI',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TISI',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MSI',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MTI',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SASI',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TASI',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'PWI',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'W2I',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'W1I',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'GL1I',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'LL1I',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'EI',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'GL2I',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'LL2I',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TE0I',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TE1I',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TE2I',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TE3I',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TE4I',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'CDTI',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'CDSI',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TORI',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'SORI',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'DCGI',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY_Bits',0,20,156,15,3
	.word	86276
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MEDT_S_Bits',0,20,160,15,16,4,28
	.byte	'MEDT_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MEDT_S_Bits',0,20,164,15,3
	.word	86813
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MEDT_T_Bits',0,20,168,15,16,4,28
	.byte	'MEDT_T',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MEDT_T_Bits',0,20,172,15,3
	.word	86921
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MLS1_Bits',0,20,175,15,16,4,28
	.byte	'MLS1',0,4
	.word	45601
	.byte	18,14,2,35,0,28
	.byte	'reserved_18',0,4
	.word	45601
	.byte	14,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MLS1_Bits',0,20,179,15,3
	.word	87029
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MLS2_Bits',0,20,182,15,16,4,28
	.byte	'MLS2',0,4
	.word	45601
	.byte	18,14,2,35,0,28
	.byte	'reserved_18',0,4
	.word	45601
	.byte	14,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MLS2_Bits',0,20,186,15,3
	.word	87131
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MPVAL1_Bits',0,20,190,15,16,4,28
	.byte	'MPVAL1',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'SIX1',0,4
	.word	45601
	.byte	8,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MPVAL1_Bits',0,20,195,15,3
	.word	87233
	.byte	15
	.byte	'_Ifx_GTM_DPLL_MPVAL2_Bits',0,20,199,15,16,4,28
	.byte	'MPVAL2',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'SIX2',0,4
	.word	45601
	.byte	8,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MPVAL2_Bits',0,20,204,15,3
	.word	87357
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NA_Bits',0,20,207,15,16,4,28
	.byte	'DB',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'DW',0,4
	.word	45601
	.byte	10,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NA_Bits',0,20,212,15,3
	.word	87481
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_S_Bits',0,20,215,15,16,4,28
	.byte	'NMB_S',0,4
	.word	45601
	.byte	20,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S_Bits',0,20,219,15,3
	.word	87591
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,20,222,15,16,4,28
	.byte	'NMB_S_TAR',0,4
	.word	45601
	.byte	20,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_Bits',0,20,226,15,3
	.word	87696
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,20,229,15,16,4,28
	.byte	'NMB_S_TAR_OLD',0,4
	.word	45601
	.byte	20,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits',0,20,233,15,3
	.word	87813
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_T_Bits',0,20,236,15,16,4,28
	.byte	'NMB_T',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T_Bits',0,20,240,15,3
	.word	87942
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,20,243,15,16,4,28
	.byte	'NMB_T_TAR',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_Bits',0,20,247,15,3
	.word	88047
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,20,250,15,16,4,28
	.byte	'NMB_T_TAR_OLD',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits',0,20,254,15,3
	.word	88164
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NTI_CNT_Bits',0,20,129,16,16,4,28
	.byte	'NTI_CNT',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NTI_CNT_Bits',0,20,133,16,3
	.word	88293
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NUSC_Bits',0,20,136,16,16,4,28
	.byte	'NUSE',0,4
	.word	45601
	.byte	6,26,2,35,0,28
	.byte	'FSS',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'SYN_S',0,4
	.word	45601
	.byte	6,19,2,35,0,28
	.byte	'SYN_S_OLD',0,4
	.word	45601
	.byte	6,13,2,35,0,28
	.byte	'VSN',0,4
	.word	45601
	.byte	6,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	4,3,2,35,0,28
	.byte	'WNUS',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'WSYN',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'WVSN',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NUSC_Bits',0,20,147,16,3
	.word	88404
	.byte	15
	.byte	'_Ifx_GTM_DPLL_NUTC_Bits',0,20,150,16,16,4,28
	.byte	'NUTE',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'FST',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	2,19,2,35,0,28
	.byte	'SYN_T',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'SYN_T_OLD',0,4
	.word	45601
	.byte	3,13,2,35,0,28
	.byte	'VTN',0,4
	.word	45601
	.byte	6,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	4,3,2,35,0,28
	.byte	'WNUT',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'WSYN',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'WVTN',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NUTC_Bits',0,20,162,16,3
	.word	88622
	.byte	15
	.byte	'_Ifx_GTM_DPLL_OSW_Bits',0,20,165,16,16,4,28
	.byte	'SWON_S',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SWON_T',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	6,24,2,35,0,28
	.byte	'OSS',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_OSW_Bits',0,20,172,16,3
	.word	88863
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PDT_T_Bits',0,20,175,16,16,4,28
	.byte	'DB',0,4
	.word	45601
	.byte	14,18,2,35,0,28
	.byte	'DW',0,4
	.word	45601
	.byte	10,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PDT_T_Bits',0,20,180,16,3
	.word	89020
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSA_Bits',0,20,183,16,16,4,28
	.byte	'PSA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSA_Bits',0,20,187,16,3
	.word	89136
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSAC_Bits',0,20,190,16,16,4,28
	.byte	'PSAC',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSAC_Bits',0,20,194,16,3
	.word	89235
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSSC_Bits',0,20,197,16,16,4,28
	.byte	'PSSC',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSC_Bits',0,20,201,16,3
	.word	89337
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSSM_0_Bits',0,20,204,16,16,4,28
	.byte	'PSSM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSM_0_Bits',0,20,208,16,3
	.word	89439
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSSM_1_Bits',0,20,211,16,16,4,28
	.byte	'PSSM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSM_1_Bits',0,20,215,16,3
	.word	89545
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSTC_Bits',0,20,218,16,16,4,28
	.byte	'PSTC',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTC_Bits',0,20,222,16,3
	.word	89651
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSTM_0_Bits',0,20,225,16,16,4,28
	.byte	'PSTM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTM_0_Bits',0,20,229,16,3
	.word	89753
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PSTM_1_Bits',0,20,232,16,16,4,28
	.byte	'PSTM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTM_1_Bits',0,20,236,16,3
	.word	89859
	.byte	15
	.byte	'_Ifx_GTM_DPLL_PVT_Bits',0,20,239,16,16,4,28
	.byte	'PVT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PVT_Bits',0,20,243,16,3
	.word	89965
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RAM_INI_Bits',0,20,246,16,16,4,28
	.byte	'INIT_1A',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'INIT_1B',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'INIT_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'INIT_RAM',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RAM_INI_Bits',0,20,254,16,3
	.word	90064
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_Bits',0,20,129,17,16,4,28
	.byte	'RCDT_SX',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_SX_Bits',0,20,133,17,3
	.word	90253
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,20,137,17,16,4,28
	.byte	'RCDT_SX_NOM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM_Bits',0,20,141,17,3
	.word	90364
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_Bits',0,20,144,17,16,4,28
	.byte	'RCDT_TX',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_TX_Bits',0,20,148,17,3
	.word	90487
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,20,152,17,16,4,28
	.byte	'RCDT_TX_NOM',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM_Bits',0,20,156,17,3
	.word	90598
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,20,159,17,16,4,28
	.byte	'RDT_S_ACT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT_Bits',0,20,163,17,3
	.word	90721
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RDT_S_Bits',0,20,166,17,16,4,28
	.byte	'RDT_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_S_Bits',0,20,170,17,3
	.word	90838
	.byte	15
	.byte	'_Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,20,173,17,16,4,28
	.byte	'RDT_T_ACT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT_Bits',0,20,177,17,3
	.word	90943
	.byte	15
	.byte	'_Ifx_GTM_DPLL_SLR_Bits',0,20,180,17,16,4,28
	.byte	'SLR',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_SLR_Bits',0,20,184,17,3
	.word	91060
	.byte	15
	.byte	'_Ifx_GTM_DPLL_STATUS_Bits',0,20,187,17,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CSO',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'CTO',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'CRO',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'RCS',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'RCT',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'PSE',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SOR',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MS',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TOR',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MT',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'RAM2_ERR',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	2,17,2,35,0,28
	.byte	'LOW_RES',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'CSVS',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'CSVT',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'CAIP2',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'CAIP1',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'ISN',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'ITN',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'BWD2',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'BWD1',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'LOCK2',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'SYS',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'SYT',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'FSD',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'FTD',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'LOCK1',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'ERR',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_STATUS_Bits',0,20,220,17,3
	.word	91158
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,20,223,17,16,4,28
	.byte	'TBU_TS0_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S_Bits',0,20,227,17,3
	.word	91739
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,20,230,17,16,4,28
	.byte	'TBU_TS0_T',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T_Bits',0,20,234,17,3
	.word	91856
	.byte	15
	.byte	'_Ifx_GTM_DPLL_THMA_Bits',0,20,237,17,16,4,28
	.byte	'THMA',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THMA_Bits',0,20,241,17,3
	.word	91973
	.byte	15
	.byte	'_Ifx_GTM_DPLL_THMI_Bits',0,20,244,17,16,4,28
	.byte	'THMI',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THMI_Bits',0,20,248,17,3
	.word	92075
	.byte	15
	.byte	'_Ifx_GTM_DPLL_THVAL_Bits',0,20,251,17,16,4,28
	.byte	'THVAL',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THVAL_Bits',0,20,255,17,3
	.word	92177
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TLR_Bits',0,20,130,18,16,4,28
	.byte	'TLR',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TLR_Bits',0,20,134,18,3
	.word	92282
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TOV_Bits',0,20,137,18,16,4,28
	.byte	'DB',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'DW',0,4
	.word	45601
	.byte	6,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TOV_Bits',0,20,142,18,3
	.word	92380
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TOV_S_Bits',0,20,145,18,16,4,28
	.byte	'DB',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'DW',0,4
	.word	45601
	.byte	6,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TOV_S_Bits',0,20,150,18,3
	.word	92492
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TS_S_0_Bits',0,20,153,18,16,4,28
	.byte	'STATE_TS',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_S_0_Bits',0,20,157,18,3
	.word	92608
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TS_S_1_Bits',0,20,160,18,16,4,28
	.byte	'STATE_TS',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_S_1_Bits',0,20,164,18,3
	.word	92718
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TS_T_0_Bits',0,20,167,18,16,4,28
	.byte	'TRIGGER_TS',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_T_0_Bits',0,20,171,18,3
	.word	92828
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TS_T_1_Bits',0,20,174,18,16,4,28
	.byte	'TRIGGER_TS',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_T_1_Bits',0,20,178,18,3
	.word	92940
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TSAC_Bits',0,20,181,18,16,4,28
	.byte	'TSAC',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TSAC_Bits',0,20,185,18,3
	.word	93052
	.byte	15
	.byte	'_Ifx_GTM_DPLL_TSF_S_Bits',0,20,188,18,16,4,28
	.byte	'TSF_S',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TSF_S_Bits',0,20,192,18,3
	.word	93154
	.byte	15
	.byte	'_Ifx_GTM_DXINCON_Bits',0,20,195,18,16,4,28
	.byte	'IN00',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'IN01',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'IN02',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'IN03',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'IN10',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'IN11',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'IN12',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'IN13',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'DSS00',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'DSS01',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'DSS02',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'DSS03',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'DSS10',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'DSS11',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'DSS12',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'DSS13',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'reserved_28',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_DXINCON_Bits',0,20,217,18,3
	.word	93259
	.byte	15
	.byte	'_Ifx_GTM_DXOUTCON_Bits',0,20,220,18,16,4,28
	.byte	'OUT00',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'OUT01',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'OUT02',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'OUT03',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'OUT10',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'OUT11',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'OUT12',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'OUT13',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	20,0,2,35,0,0,27
	.byte	'Ifx_GTM_DXOUTCON_Bits',0,20,232,18,3
	.word	93673
	.byte	15
	.byte	'_Ifx_GTM_EIRQ_EN_Bits',0,20,235,18,16,4,28
	.byte	'AEI_TO_XPT_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'AEI_USP_ADDR_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'AEI_IM_ADDR_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'AEI_USP_BE_EIRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_EIRQ_EN_Bits',0,20,242,18,3
	.word	93915
	.byte	15
	.byte	'_Ifx_GTM_F2A_ENABLE_Bits',0,20,245,18,16,4,28
	.byte	'STR0_EN',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'STR1_EN',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'STR2_EN',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'STR3_EN',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'STR4_EN',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'STR5_EN',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'STR6_EN',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'STR7_EN',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_ENABLE_Bits',0,20,128,19,3
	.word	94119
	.byte	15
	.byte	'_Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,20,131,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	9,23,2,35,0,28
	.byte	'reserved_9',0,4
	.word	45601
	.byte	23,0,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits',0,20,135,19,3
	.word	94359
	.byte	15
	.byte	'_Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,20,138,19,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'TMODE',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'DIR',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'reserved_19',0,4
	.word	45601
	.byte	13,0,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG_Bits',0,20,144,19,3
	.word	94484
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_CTRL_Bits',0,20,147,19,16,4,28
	.byte	'RBM',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'RAP',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FLUSH',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'WULOCK',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_CTRL_Bits',0,20,154,19,3
	.word	94642
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,20,157,19,16,4,28
	.byte	'FIFO_EMPTY_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'FIFO_FULL_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FIFO_LWM_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'FIFO_UWM_EIRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'Reserved',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN_Bits',0,20,164,19,3
	.word	94798
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,20,167,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR_Bits',0,20,171,19,3
	.word	95008
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,20,174,19,16,4,28
	.byte	'LEVEL',0,4
	.word	45601
	.byte	11,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	21,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits',0,20,178,19,3
	.word	95124
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,20,181,19,16,4,28
	.byte	'FIFO_EMPTY_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'FIFO_FULL_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FIFO_LWM_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'FIFO_UWM_IRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN_Bits',0,20,188,19,3
	.word	95245
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,20,191,19,16,4,28
	.byte	'TRG_FIFO_EMPTY',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_FIFO_FULL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_FIFO_LWM',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_FIFO_UWM',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits',0,20,198,19,3
	.word	95451
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,20,201,19,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'DMA_HYSTERESIS',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'DMA_HYST_DIR',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE_Bits',0,20,207,19,3
	.word	95655
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,20,210,19,16,4,28
	.byte	'FIFO_EMPTY',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'FIFO_FULL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FIFO_LWM',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'FIFO_UWM',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits',0,20,217,19,3
	.word	95824
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,20,220,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM_Bits',0,20,224,19,3
	.word	96010
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,20,227,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR_Bits',0,20,231,19,3
	.word	96126
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,20,234,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR_Bits',0,20,238,19,3
	.word	96238
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_STATUS_Bits',0,20,241,19,16,4,28
	.byte	'EMPTY',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'FULL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'LOW_WM',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'UP_WM',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_STATUS_Bits',0,20,248,19,3
	.word	96358
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,20,251,19,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM_Bits',0,20,255,19,3
	.word	96521
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,20,130,20,16,4,28
	.byte	'ADDR',0,4
	.word	45601
	.byte	10,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR_Bits',0,20,134,20,3
	.word	96637
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_0_Bits',0,20,137,20,16,4,28
	.byte	'ARU_NEW_DATA0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ARU_NEW_DATA1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ARU_ACC_ACK_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'BRC_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'AEI_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'CMP_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'SPE0_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'SPE1_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	8,16,2,35,0,28
	.byte	'PSM0_CH0_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'PSM0_CH1_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'PSM0_CH2_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'PSM0_CH3_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'PSM0_CH4_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'PSM0_CH5_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'PSM0_CH6_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'PSM0_CH7_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_0_Bits',0,20,157,20,3
	.word	96749
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_10_Bits',0,20,160,20,16,4,28
	.byte	'ATOM4_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ATOM4_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ATOM4_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ATOM4_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ATOM4_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ATOM4_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ATOM4_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ATOM4_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_10_Bits',0,20,171,20,3
	.word	97233
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_1_Bits',0,20,174,20,16,4,28
	.byte	'DPLL_DCG_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DPLL_EDI_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'DPLL_TIN_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'DPLL_TAX_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'DPLL_SIS_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'DPLL_TIS_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'DPLL_MSI_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'DPLL_MTI_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'DPLL_SAS_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'DPLL_TAS_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'DPLL_PWI_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'DPLL_W2I_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'DPLL_W1I_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'DPLL_GLI_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'DPLL_LLI_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'DPLL_EI_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'DPLL_GL2I_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'DPLL_LL2I_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'DPLL_TE0_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'DPLL_TE1_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'DPLL_TE2_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'DPLL_TE3_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'DPLL_TE4_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'DPLL_CDIT_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'DPLL_CDIS_IRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'DPLL_TORI_IRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'DPLL_SORI_IRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_1_Bits',0,20,204,20,3
	.word	97522
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_2_Bits',0,20,207,20,16,4,28
	.byte	'TIM0_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TIM0_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TIM0_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TIM0_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TIM0_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TIM0_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TIM0_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TIM0_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TIM1_CH0_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TIM1_CH1_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TIM1_CH2_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TIM1_CH3_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TIM1_CH4_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TIM1_CH5_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TIM1_CH6_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TIM1_CH7_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TIM2_CH0_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TIM2_CH1_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TIM2_CH2_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TIM2_CH3_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TIM2_CH4_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TIM2_CH5_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TIM2_CH6_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TIM2_CH7_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'TIM3_CH0_IRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TIM3_CH1_IRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'TIM3_CH2_IRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'TIM3_CH3_IRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'TIM3_CH4_IRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'TIM3_CH5_IRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TIM3_CH6_IRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'TIM3_CH7_IRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_2_Bits',0,20,241,20,3
	.word	98263
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_4_Bits',0,20,244,20,16,4,28
	.byte	'MCS0_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MCS0_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MCS0_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'MCS0_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'MCS0_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'MCS0_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MCS0_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MCS0_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'MCS1_CH0_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MCS1_CH1_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'MCS1_CH2_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MCS1_CH3_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'MCS1_CH4_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCS1_CH5_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCS1_CH6_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCS1_CH7_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'MCS2_CH0_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'MCS2_CH1_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'MCS2_CH2_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'MCS2_CH3_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'MCS2_CH4_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'MCS2_CH5_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'MCS2_CH6_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'MCS2_CH7_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'MCS3_CH0_IRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'MCS3_CH1_IRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'MCS3_CH2_IRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'MCS3_CH3_IRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'MCS3_CH4_IRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'MCS3_CH5_IRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'MCS3_CH6_IRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'MCS3_CH7_IRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_4_Bits',0,20,150,21,3
	.word	99096
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_6_Bits',0,20,153,21,16,4,28
	.byte	'TOM0_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TOM0_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TOM0_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TOM0_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TOM0_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TOM0_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TOM0_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TOM0_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TOM0_CH8_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TOM0_CH9_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TOM0_CH10_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TOM0_CH11_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TOM0_CH12_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TOM0_CH13_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TOM0_CH14_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TOM0_CH15_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TOM1_CH0_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TOM1_CH1_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TOM1_CH2_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TOM1_CH3_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TOM1_CH4_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TOM1_CH5_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TOM1_CH6_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TOM1_CH7_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'TOM1_CH8_IRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TOM1_CH9_IRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'TOM1_CH10_IRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'TOM1_CH11_IRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'TOM1_CH12_IRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'TOM1_CH13_IRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TOM1_CH14_IRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'TOM1_CH15_IRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_6_Bits',0,20,187,21,3
	.word	99929
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_7_Bits',0,20,190,21,16,4,28
	.byte	'TOM2_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TOM2_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TOM2_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TOM2_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TOM2_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TOM2_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TOM2_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TOM2_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TOM2_CH8_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TOM2_CH9_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TOM2_CH10_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TOM2_CH11_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TOM2_CH12_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TOM2_CH13_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TOM2_CH14_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TOM2_CH15_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_7_Bits',0,20,209,21,3
	.word	100774
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_9_Bits',0,20,212,21,16,4,28
	.byte	'ATOM0_CH0_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ATOM0_CH1_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ATOM0_CH2_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ATOM0_CH3_IRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ATOM0_CH4_IRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ATOM0_CH5_IRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ATOM0_CH6_IRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ATOM0_CH7_IRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ATOM1_CH0_IRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ATOM1_CH1_IRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ATOM1_CH2_IRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ATOM1_CH3_IRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'ATOM1_CH4_IRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'ATOM1_CH5_IRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'ATOM1_CH6_IRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'ATOM1_CH7_IRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'ATOM2_CH0_IRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'ATOM2_CH1_IRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'ATOM2_CH2_IRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'ATOM2_CH3_IRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'ATOM2_CH4_IRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'ATOM2_CH5_IRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'ATOM2_CH6_IRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'ATOM2_CH7_IRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'ATOM3_CH0_IRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'ATOM3_CH1_IRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'ATOM3_CH2_IRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'ATOM3_CH3_IRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'ATOM3_CH4_IRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'ATOM3_CH5_IRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'ATOM3_CH6_IRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'ATOM3_CH7_IRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_9_Bits',0,20,246,21,3
	.word	101252
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_CEI0_Bits',0,20,249,21,16,4,28
	.byte	'FIFO0_CH0_EIRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'FIFO0_CH1_EIRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FIFO0_CH2_EIRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'FIFO0_CH3_EIRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'FIFO0_CH4_EIRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'FIFO0_CH5_EIRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'FIFO0_CH6_EIRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'FIFO0_CH7_EIRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI0_Bits',0,20,132,22,3
	.word	102117
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_CEI1_Bits',0,20,135,22,16,4,28
	.byte	'TIM0_CH0_EIRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TIM0_CH1_EIRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TIM0_CH2_EIRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TIM0_CH3_EIRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TIM0_CH4_EIRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TIM0_CH5_EIRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TIM0_CH6_EIRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TIM0_CH7_EIRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TIM1_CH0_EIRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TIM1_CH1_EIRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TIM1_CH2_EIRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TIM1_CH3_EIRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TIM1_CH4_EIRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TIM1_CH5_EIRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TIM1_CH6_EIRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TIM1_CH7_EIRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'TIM2_CH0_EIRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TIM2_CH1_EIRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'TIM2_CH2_EIRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'TIM2_CH3_EIRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'TIM2_CH4_EIRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TIM2_CH5_EIRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TIM2_CH6_EIRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'TIM2_CH7_EIRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'TIM3_CH0_EIRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TIM3_CH1_EIRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'TIM3_CH2_EIRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'TIM3_CH3_EIRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'TIM3_CH4_EIRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'TIM3_CH5_IRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TIM3_CH6_EIRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'TIM3_CH7_EIRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI1_Bits',0,20,169,22,3
	.word	102418
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_CEI3_Bits',0,20,172,22,16,4,28
	.byte	'MCS0_CH0_EIRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MCS0_CH1_EIRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MCS0_CH2_EIRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'MCS0_CH3_EIRQ',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'MCS0_CH4_EIRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'MCS0_CH5_EIRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MCS0_CH6_EIRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MCS0_CH7_EIRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'MCS1_CH0_EIRQ',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MCS1_CH1_EIRQ',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'MCS1_CH2_EIRQ',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MCS1_CH3_EIRQ',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'MCS1_CH4_EIRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCS1_CH5_EIRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCS1_CH6_EIRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCS1_CH7_EIRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'MCS2_CH0_EIRQ',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'MCS2_CH1_EIRQ',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'MCS2_CH2_EIRQ',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'MCS2_CH3_EIRQ',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'MCS2_CH4_EIRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'MCS2_CH5_EIRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'MCS2_CH6_EIRQ',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'MCS2_CH7_EIRQ',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'MCS3_CH0_EIRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'MCS3_CH1_EIRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'MCS3_CH2_EIRQ',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'MCS3_CH3_EIRQ',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'MCS3_CH4_EIRQ',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'MCS3_CH5_EIRQ',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'MCS3_CH6_EIRQ',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'MCS3_CH7_EIRQ',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI3_Bits',0,20,206,22,3
	.word	103288
	.byte	15
	.byte	'_Ifx_GTM_ICM_IRQG_MEI_Bits',0,20,209,22,16,4,28
	.byte	'GTM_EIRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'BRC_EIRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'FIFO0_EIRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TIM0_EIRQ',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TIM1_EIRQ',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TIM2_EIRQ',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TIM3_EIRQ',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'MCS0_EIRQ',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCS1_EIRQ',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCS2_EIRQ',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCS3_EIRQ',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SPE0_EIRQ',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'SPE1_EIRQ',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'reserved_22',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'CMP_EIRQ',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'DPLL_EIRQ',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'reserved_26',0,4
	.word	45601
	.byte	6,0,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_MEI_Bits',0,20,231,22,3
	.word	104159
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,20,234,22,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits',0,20,244,22,3
	.word	104654
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,20,247,22,16,4,28
	.byte	'INSEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'INSEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'INSEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'INSEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'INSEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'INSEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'INSEL6',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'INSEL7',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits',0,20,129,23,3
	.word	104865
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_DSADC_OUTSEL0_Bits',0,20,132,23,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	3,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	3,25,2,35,0,28
	.byte	'reserved_7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	3,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'reserved_15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	3,13,2,35,0,28
	.byte	'reserved_19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	3,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	9,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL0_Bits',0,20,146,23,3
	.word	105094
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,20,149,23,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits',0,20,158,23,3
	.word	105415
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,20,161,23,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits',0,20,171,23,3
	.word	105621
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,20,174,23,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'SEL8',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'SEL9',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'SEL10',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'SEL11',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'SEL12',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'SEL13',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'SEL14',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'SEL15',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL_Bits',0,20,192,23,3
	.word	105836
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,20,195,23,16,4,28
	.byte	'CH0SEL',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'CH1SEL',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'CH2SEL',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'CH3SEL',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'CH4SEL',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'CH5SEL',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'CH6SEL',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'CH7SEL',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL_Bits',0,20,205,23,3
	.word	106177
	.byte	15
	.byte	'_Ifx_GTM_IRQ_EN_Bits',0,20,208,23,16,4,28
	.byte	'AEI_TO_XPT_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'AEI_USP_ADDR_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'AEI_IM_ADDR_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'AEI_USP_BE_IRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_EN_Bits',0,20,215,23,3
	.word	106402
	.byte	15
	.byte	'_Ifx_GTM_IRQ_FORCINT_Bits',0,20,218,23,16,4,28
	.byte	'TRG_AEI_TO_XPT',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_AEI_USP_ADDR',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_AEI_IM_ADDR',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_AEI_USP_BE',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_FORCINT_Bits',0,20,225,23,3
	.word	106600
	.byte	15
	.byte	'_Ifx_GTM_IRQ_MODE_Bits',0,20,228,23,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_MODE_Bits',0,20,232,23,3
	.word	106796
	.byte	15
	.byte	'_Ifx_GTM_IRQ_NOTIFY_Bits',0,20,235,23,16,4,28
	.byte	'AEI_TO_XPT',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'AEI_USP_ADDR',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'AEI_IM_ADDR',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'AEI_USP_BE',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_NOTIFY_Bits',0,20,242,23,3
	.word	106899
	.byte	15
	.byte	'_Ifx_GTM_KRST0_Bits',0,20,245,23,16,4,28
	.byte	'RST',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'RSTSTAT',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_KRST0_Bits',0,20,250,23,3
	.word	107077
	.byte	15
	.byte	'_Ifx_GTM_KRST1_Bits',0,20,253,23,16,4,28
	.byte	'RST',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_GTM_KRST1_Bits',0,20,129,24,3
	.word	107188
	.byte	15
	.byte	'_Ifx_GTM_KRSTCLR_Bits',0,20,132,24,16,4,28
	.byte	'CLR',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_GTM_KRSTCLR_Bits',0,20,136,24,3
	.word	107280
	.byte	15
	.byte	'_Ifx_GTM_MAP_CTRL_Bits',0,20,139,24,16,4,28
	.byte	'TSEL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SSL',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'LSEL',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	11,16,2,35,0,28
	.byte	'TSPP0_EN',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'TSPP0_DLD',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'reserved_18',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'TSPP0_I0V',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'TSPP0_I1V',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'TSPP0_I2V',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'TSPP1_EN',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TSPP1_DLD',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'reserved_26',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'TSPP1_I0V',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'TSPP1_I1V',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TSPP1_I2V',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'reserved_31',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_MAP_CTRL_Bits',0,20,159,24,3
	.word	107376
	.byte	15
	.byte	'_Ifx_GTM_MCFG_CTRL_Bits',0,20,162,24,16,4,28
	.byte	'MEM0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'MEM1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'MEM2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'MEM3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCFG_CTRL_Bits',0,20,169,24,3
	.word	107806
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH0_CTRG_Bits',0,20,172,24,16,4,28
	.byte	'TRG0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TRG6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TRG7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TRG8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TRG9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TRG10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TRG11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TRG12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TRG13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TRG14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TRG15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH0_CTRG_Bits',0,20,191,24,3
	.word	107955
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH0_STRG_Bits',0,20,194,24,16,4,28
	.byte	'TRG0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'TRG6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TRG7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'TRG8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'TRG9',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'TRG10',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'TRG11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'TRG12',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'TRG13',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'TRG14',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'TRG15',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH0_STRG_Bits',0,20,213,24,3
	.word	108309
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_ACB_Bits',0,20,216,24,16,4,28
	.byte	'ACB0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ACB1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ACB2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ACB3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACB4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_ACB_Bits',0,20,224,24,3
	.word	108663
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_CTRL_Bits',0,20,227,24,16,4,28
	.byte	'EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ERR',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'CY',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'Z',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'V',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'N',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'CAT',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'CWT',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	6,16,2,35,0,28
	.byte	'SP_CNT',0,4
	.word	45601
	.byte	3,13,2,35,0,28
	.byte	'reserved_19',0,4
	.word	45601
	.byte	13,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_CTRL_Bits',0,20,242,24,3
	.word	108830
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,20,245,24,16,4,28
	.byte	'MCS_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'STK_ERR_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MEM_ERR_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN_Bits',0,20,251,24,3
	.word	109110
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,20,254,24,16,4,28
	.byte	'MCS_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'STK_ERR_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MEM_ERR_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN_Bits',0,20,132,25,3
	.word	109282
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,20,135,25,16,4,28
	.byte	'TRG_MCS_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_STK_ERR_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_MEM_ERR_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits',0,20,141,25,3
	.word	109449
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,20,144,25,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE_Bits',0,20,148,25,3
	.word	109629
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,20,151,25,16,4,28
	.byte	'MCS_IRQ',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'STK_ERR_IRQ',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MEM_ERR_IRQ',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits',0,20,157,25,3
	.word	109746
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_PC_Bits',0,20,160,25,16,4,28
	.byte	'PC',0,4
	.word	45601
	.byte	14,18,2,35,0,28
	.byte	'reserved_14',0,4
	.word	45601
	.byte	18,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_PC_Bits',0,20,164,25,3
	.word	109912
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R0_Bits',0,20,167,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R0_Bits',0,20,171,25,3
	.word	110012
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R1_Bits',0,20,174,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R1_Bits',0,20,178,25,3
	.word	110114
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R2_Bits',0,20,181,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R2_Bits',0,20,185,25,3
	.word	110216
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R3_Bits',0,20,188,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R3_Bits',0,20,192,25,3
	.word	110318
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R4_Bits',0,20,195,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R4_Bits',0,20,199,25,3
	.word	110420
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R5_Bits',0,20,202,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R5_Bits',0,20,206,25,3
	.word	110522
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R6_Bits',0,20,209,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R6_Bits',0,20,213,25,3
	.word	110624
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH_R7_Bits',0,20,216,25,16,4,28
	.byte	'DATA',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R7_Bits',0,20,220,25,3
	.word	110726
	.byte	15
	.byte	'_Ifx_GTM_MCS_CTRL_Bits',0,20,223,25,16,4,28
	.byte	'SCHED',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'HLT_SP_OFL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	14,16,2,35,0,28
	.byte	'RAM_RST',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'reserved_17',0,4
	.word	45601
	.byte	15,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CTRL_Bits',0,20,230,25,3
	.word	110828
	.byte	15
	.byte	'_Ifx_GTM_MCS_ERR_Bits',0,20,233,25,16,4,28
	.byte	'ERR0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ERR1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ERR2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ERR3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ERR4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ERR5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ERR6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ERR7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_ERR_Bits',0,20,244,25,3
	.word	110992
	.byte	15
	.byte	'_Ifx_GTM_MCS_RST_Bits',0,20,247,25,16,4,28
	.byte	'RST0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'RST1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'RST2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'RST3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'RST4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'RST5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'RST6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'RST7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'CAT0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'CAT1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'CAT2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'CAT3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'CAT4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'CAT5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'CAT6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'CAT7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'CWT0',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'CWT1',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'CWT2',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'CWT3',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'CWT4',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'CWT5',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'CWT6',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'CWT7',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_RST_Bits',0,20,146,26,3
	.word	111201
	.byte	15
	.byte	'_Ifx_GTM_MCSINTCLR_Bits',0,20,149,26,16,4,28
	.byte	'MCS000',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MCS001',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MCS010',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'MCS011',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'MCS100',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'MCS101',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MCS110',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MCS111',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'MCS200',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MCS201',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'MCS210',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MCS211',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'MCS300',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCS301',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCS310',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCS311',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCSINTCLR_Bits',0,20,168,26,3
	.word	111667
	.byte	15
	.byte	'_Ifx_GTM_MCSINTSTAT_Bits',0,20,171,26,16,4,28
	.byte	'MCS000',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MCS001',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MCS010',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'MCS011',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'MCS100',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'MCS101',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MCS110',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MCS111',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'MCS200',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MCS201',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'MCS210',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MCS211',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'MCS300',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCS301',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCS310',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCS311',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_MCSINTSTAT_Bits',0,20,190,26,3
	.word	112041
	.byte	15
	.byte	'_Ifx_GTM_MON_ACTIVITY_0_Bits',0,20,193,26,16,4,28
	.byte	'MCA_0_0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'MCA_0_1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'MCA_0_2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'MCA_0_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'MCA_0_4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'MCA_0_5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'MCA_0_6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'MCA_0_7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'MCA_1_0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MCA_1_1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'MCA_1_2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'MCA_1_3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'MCA_1_4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'MCA_1_5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'MCA_1_6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'MCA_1_7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'MCA_2_0',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'MCA_2_1',0,4
	.word	45601
	.byte	1,14,2,35,0,28
	.byte	'MCA_2_2',0,4
	.word	45601
	.byte	1,13,2,35,0,28
	.byte	'MCA_2_3',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'MCA_2_4',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'MCA_2_5',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'MCA_2_6',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'MCA_2_7',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'MCA_3_0',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'MCA_3_1',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'MCA_3_2',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'MCA_3_3',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'MCA_3_4',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'MCA_3_5',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'MCA_3_6',0,4
	.word	45601
	.byte	1,1,2,35,0,28
	.byte	'MCA_3_7',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_MON_ACTIVITY_0_Bits',0,20,227,26,3
	.word	112417
	.byte	15
	.byte	'_Ifx_GTM_MON_STATUS_Bits',0,20,230,26,16,4,28
	.byte	'ACT_CMU0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ACT_CMU1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'ACT_CMU2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'ACT_CMU3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'ACT_CMU4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ACT_CMU5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'ACT_CMU6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'ACT_CMU7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'ACT_CMUFX0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'ACT_CMUFX1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'ACT_CMUFX2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'ACT_CMUFX3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'ACT_CMUFX4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'CMP_ERR',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'reserved_17',0,4
	.word	45601
	.byte	3,12,2,35,0,28
	.byte	'MCS0_ERR',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'MCS1_ERR',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'MCS2_ERR',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'MCS3_ERR',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_MON_STATUS_Bits',0,20,253,26,3
	.word	113098
	.byte	15
	.byte	'_Ifx_GTM_MSCIN_INHCON_Bits',0,20,128,27,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'SEL8',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'SEL9',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'SEL10',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'SEL11',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'SEL12',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'SEL13',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'SEL14',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'SEL15',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCIN_INHCON_Bits',0,20,146,27,3
	.word	113601
	.byte	15
	.byte	'_Ifx_GTM_MSCIN_INLCON_Bits',0,20,149,27,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'SEL8',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'SEL9',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'SEL10',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'SEL11',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'SEL12',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'SEL13',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'SEL14',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'SEL15',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCIN_INLCON_Bits',0,20,167,27,3
	.word	113932
	.byte	15
	.byte	'_Ifx_GTM_MSCSET_CON0_Bits',0,20,170,27,16,4,28
	.byte	'SEL0',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'SEL1',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'SEL2',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'SEL3',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON0_Bits',0,20,180,27,3
	.word	114263
	.byte	15
	.byte	'_Ifx_GTM_MSCSET_CON1_Bits',0,20,183,27,16,4,28
	.byte	'SEL4',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'SEL5',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'SEL6',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'SEL7',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON1_Bits',0,20,193,27,3
	.word	114485
	.byte	15
	.byte	'_Ifx_GTM_MSCSET_CON2_Bits',0,20,196,27,16,4,28
	.byte	'SEL8',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'SEL9',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'SEL10',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'SEL11',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON2_Bits',0,20,206,27,3
	.word	114707
	.byte	15
	.byte	'_Ifx_GTM_MSCSET_CON3_Bits',0,20,209,27,16,4,28
	.byte	'SEL12',0,4
	.word	45601
	.byte	5,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'SEL13',0,4
	.word	45601
	.byte	5,19,2,35,0,28
	.byte	'reserved_13',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'SEL14',0,4
	.word	45601
	.byte	5,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'SEL15',0,4
	.word	45601
	.byte	5,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON3_Bits',0,20,219,27,3
	.word	114931
	.byte	15
	.byte	'_Ifx_GTM_OCS_Bits',0,20,222,27,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'SUS',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'SUS_P',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'SUSSTA',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'reserved_30',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_OCS_Bits',0,20,229,27,3
	.word	115157
	.byte	15
	.byte	'_Ifx_GTM_ODA_Bits',0,20,232,27,16,4,28
	.byte	'DDREN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'DREN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_ODA_Bits',0,20,237,27,3
	.word	115303
	.byte	15
	.byte	'_Ifx_GTM_OTBU0T_Bits',0,20,240,27,16,4,28
	.byte	'CV',0,4
	.word	45601
	.byte	27,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'CM',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'reserved_30',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU0T_Bits',0,20,246,27,3
	.word	115409
	.byte	15
	.byte	'_Ifx_GTM_OTBU1T_Bits',0,20,249,27,16,4,28
	.byte	'CV',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'EN',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU1T_Bits',0,20,255,27,3
	.word	115540
	.byte	15
	.byte	'_Ifx_GTM_OTBU2T_Bits',0,20,130,28,16,4,28
	.byte	'CV',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'EN',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'reserved_29',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU2T_Bits',0,20,136,28,3
	.word	115671
	.byte	15
	.byte	'_Ifx_GTM_OTSC0_Bits',0,20,139,28,16,4,28
	.byte	'B0LMT',0,4
	.word	45601
	.byte	3,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'B0LMI',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'B0HMT',0,4
	.word	45601
	.byte	3,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'B0HMI',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'B1LMT',0,4
	.word	45601
	.byte	3,13,2,35,0,28
	.byte	'reserved_19',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'B1LMI',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'B1HMT',0,4
	.word	45601
	.byte	3,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'B1HMI',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTSC0_Bits',0,20,153,28,3
	.word	115802
	.byte	15
	.byte	'_Ifx_GTM_OTSC1_Bits',0,20,156,28,16,4,28
	.byte	'MCS',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'MI',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'MOE',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'reserved_10',0,4
	.word	45601
	.byte	22,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTSC1_Bits',0,20,163,28,3
	.word	116084
	.byte	15
	.byte	'_Ifx_GTM_OTSS_Bits',0,20,166,28,16,4,28
	.byte	'OTGB0',0,4
	.word	45601
	.byte	4,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	4,24,2,35,0,28
	.byte	'OTGB1',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'reserved_12',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'OTGB2',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'reserved_20',0,4
	.word	45601
	.byte	12,0,2,35,0,0,27
	.byte	'Ifx_GTM_OTSS_Bits',0,20,174,28,3
	.word	116228
	.byte	15
	.byte	'_Ifx_GTM_REV_Bits',0,20,177,28,16,4,28
	.byte	'STEP',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'NO',0,4
	.word	45601
	.byte	4,20,2,35,0,28
	.byte	'MINOR',0,4
	.word	45601
	.byte	4,16,2,35,0,28
	.byte	'MAJOR',0,4
	.word	45601
	.byte	4,12,2,35,0,28
	.byte	'DEV_CODE0',0,4
	.word	45601
	.byte	4,8,2,35,0,28
	.byte	'DEV_CODE1',0,4
	.word	45601
	.byte	4,4,2,35,0,28
	.byte	'DEV_CODE2',0,4
	.word	45601
	.byte	4,0,2,35,0,0,27
	.byte	'Ifx_GTM_REV_Bits',0,20,186,28,3
	.word	116400
	.byte	15
	.byte	'_Ifx_GTM_RST_Bits',0,20,189,28,16,4,28
	.byte	'RST',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_GTM_RST_Bits',0,20,193,28,3
	.word	116578
	.byte	15
	.byte	'_Ifx_GTM_SPE_CMP_Bits',0,20,196,28,16,4,28
	.byte	'CMP',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CMP_Bits',0,20,200,28,3
	.word	116666
	.byte	15
	.byte	'_Ifx_GTM_SPE_CNT_Bits',0,20,203,28,16,4,28
	.byte	'CNT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CNT_Bits',0,20,207,28,3
	.word	116763
	.byte	15
	.byte	'_Ifx_GTM_SPE_CTRL_STAT_Bits',0,20,210,28,16,4,28
	.byte	'SPE_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SIE0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'SIE1',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'SIE2',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRIG_SEL',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'TIM_SEL',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'FSOM',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'SPE_PAT_PTR',0,4
	.word	45601
	.byte	3,21,2,35,0,28
	.byte	'reserved_11',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'AIP',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'ADIR',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'PIP',0,4
	.word	45601
	.byte	3,13,2,35,0,28
	.byte	'PDIR',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'NIP',0,4
	.word	45601
	.byte	3,9,2,35,0,28
	.byte	'reserved_23',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'FSOL',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CTRL_STAT_Bits',0,20,228,28,3
	.word	116860
	.byte	15
	.byte	'_Ifx_GTM_SPE_EIRQ_EN_Bits',0,20,231,28,16,4,28
	.byte	'SPE_NIPD_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SPE_DCHG_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'SPE_PERR_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'SPE_BIS_EIRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SPE_RCMP_EIRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_EIRQ_EN_Bits',0,20,239,28,3
	.word	117214
	.byte	15
	.byte	'_Ifx_GTM_SPE_IRQ_EN_Bits',0,20,242,28,16,4,28
	.byte	'SPE_NIPD_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SPE_DCHG_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'SPE_PERR_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'SPE_BIS_IRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SPE_RCMP_IRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_EN_Bits',0,20,250,28,3
	.word	117442
	.byte	15
	.byte	'_Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,20,253,28,16,4,28
	.byte	'TRG_SPE_NIPD',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_SPE_DCHG',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_SPE_PERR',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_SPE_BIS',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG_SPE_RCMP',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT_Bits',0,20,133,29,3
	.word	117663
	.byte	15
	.byte	'_Ifx_GTM_SPE_IRQ_MODE_Bits',0,20,136,29,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_MODE_Bits',0,20,140,29,3
	.word	117879
	.byte	15
	.byte	'_Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,20,143,29,16,4,28
	.byte	'SPE_NIPD',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SPE_DCHG',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'SPE_PERR',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'SPE_BIS',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SPE_RCMP',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'reserved_5',0,4
	.word	45601
	.byte	27,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY_Bits',0,20,151,29,3
	.word	117990
	.byte	15
	.byte	'_Ifx_GTM_SPE_OUT_CTRL_Bits',0,20,154,29,16,4,28
	.byte	'SPE_OUT_CTRL',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_OUT_CTRL_Bits',0,20,158,29,3
	.word	118184
	.byte	15
	.byte	'_Ifx_GTM_SPE_OUT_PAT_Bits',0,20,161,29,16,4,28
	.byte	'SPE_OUT_PAT',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_OUT_PAT_Bits',0,20,165,29,3
	.word	118300
	.byte	15
	.byte	'_Ifx_GTM_SPE_PAT_Bits',0,20,168,29,16,4,28
	.byte	'IP0_VAL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'IP0_PAT',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'IP1_VAL',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'IP1_PAT',0,4
	.word	45601
	.byte	3,24,2,35,0,28
	.byte	'IP2_VAL',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'IP2_PAT',0,4
	.word	45601
	.byte	3,20,2,35,0,28
	.byte	'IP3_VAL',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'IP3_PAT',0,4
	.word	45601
	.byte	3,16,2,35,0,28
	.byte	'IP4_VAL',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'IP4_PAT',0,4
	.word	45601
	.byte	3,12,2,35,0,28
	.byte	'IP5_VAL',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'IP5_PAT',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'IP6_VAL',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'IP6_PAT',0,4
	.word	45601
	.byte	3,4,2,35,0,28
	.byte	'IP7_VAL',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'IP7_PAT',0,4
	.word	45601
	.byte	3,0,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_PAT_Bits',0,20,186,29,3
	.word	118413
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH0_BASE_Bits',0,20,189,29,16,4,28
	.byte	'BASE',0,4
	.word	45601
	.byte	27,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH0_BASE_Bits',0,20,193,29,3
	.word	118776
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH0_CTRL_Bits',0,20,196,29,16,4,28
	.byte	'LOW_RES',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CH_CLK_SRC',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH0_CTRL_Bits',0,20,201,29,3
	.word	118884
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH1_BASE_Bits',0,20,204,29,16,4,28
	.byte	'BASE',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH1_BASE_Bits',0,20,208,29,3
	.word	119016
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH1_CTRL_Bits',0,20,211,29,16,4,28
	.byte	'CH_MODE',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CH_CLK_SRC',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH1_CTRL_Bits',0,20,216,29,3
	.word	119124
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH2_BASE_Bits',0,20,219,29,16,4,28
	.byte	'BASE',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH2_BASE_Bits',0,20,223,29,3
	.word	119256
	.byte	15
	.byte	'_Ifx_GTM_TBU_CH2_CTRL_Bits',0,20,226,29,16,4,28
	.byte	'CH_MODE',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CH_CLK_SRC',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'reserved_4',0,4
	.word	45601
	.byte	28,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH2_CTRL_Bits',0,20,231,29,3
	.word	119364
	.byte	15
	.byte	'_Ifx_GTM_TBU_CHEN_Bits',0,20,234,29,16,4,28
	.byte	'ENDIS_CH0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_CH1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_CH2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CHEN_Bits',0,20,240,29,3
	.word	119496
	.byte	15
	.byte	'_Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,20,243,29,16,4,28
	.byte	'SRC_CH0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'SRC_CH1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'SRC_CH2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'SRC_CH3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'SRC_CH4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'SRC_CH5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'SRC_CH6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'SRC_CH7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC_Bits',0,20,254,29,3
	.word	119642
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_CNT_Bits',0,20,129,30,16,4,28
	.byte	'CNT',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CNT_Bits',0,20,133,30,3
	.word	119889
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_CNTS_Bits',0,20,136,30,16,4,28
	.byte	'CNTS',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'ECNT',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CNTS_Bits',0,20,140,30,3
	.word	119992
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_CTRL_Bits',0,20,143,30,16,4,28
	.byte	'TIM_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TIM_MODE',0,4
	.word	45601
	.byte	3,28,2,35,0,28
	.byte	'OSM',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'ARU_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'CICTRL',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'TBU0_SEL',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'GPR0_SEL',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'GPR1_SEL',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'CNTS_SEL',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'DSL',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'ISL',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'ECNT_RESET',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'FLT_EN',0,4
	.word	45601
	.byte	1,15,2,35,0,28
	.byte	'FLT_CNT_FRQ',0,4
	.word	45601
	.byte	2,13,2,35,0,28
	.byte	'EXT_CAP_EN',0,4
	.word	45601
	.byte	1,12,2,35,0,28
	.byte	'FLT_MODE_RE',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'FLT_CTR_RE',0,4
	.word	45601
	.byte	1,10,2,35,0,28
	.byte	'FLT_MODE_FE',0,4
	.word	45601
	.byte	1,9,2,35,0,28
	.byte	'FLT_CTR_FE',0,4
	.word	45601
	.byte	1,8,2,35,0,28
	.byte	'CLK_SEL',0,4
	.word	45601
	.byte	3,5,2,35,0,28
	.byte	'FR_ECNT_OFL',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'EGPR0_SEL',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'EGPR1_SEL',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'TOCTRL',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CTRL_Bits',0,20,169,30,3
	.word	120091
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_ECNT_Bits',0,20,172,30,16,4,28
	.byte	'ECNT',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_ECNT_Bits',0,20,176,30,3
	.word	120634
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_ECTRL_Bits',0,20,179,30,16,4,28
	.byte	'EXT_CAP_SRC',0,4
	.word	45601
	.byte	3,29,2,35,0,28
	.byte	'reserved_3',0,4
	.word	45601
	.byte	29,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_ECTRL_Bits',0,20,183,30,3
	.word	120740
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,20,186,30,16,4,28
	.byte	'NEWVAL_EIRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ECNTOFL_EIRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'CNTOFL_EIRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'GPROFL_EIRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TODET_EIRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'GLITCHDET_EIRQ_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN_Bits',0,20,195,30,3
	.word	120854
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_FLT_FE_Bits',0,20,198,30,16,4,28
	.byte	'FLT_FE',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_FLT_FE_Bits',0,20,202,30,3
	.word	121108
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_FLT_RE_Bits',0,20,205,30,16,4,28
	.byte	'FLT_RE',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'reserved_24',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_FLT_RE_Bits',0,20,209,30,3
	.word	121220
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_GPR0_Bits',0,20,212,30,16,4,28
	.byte	'GPR0',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'ECNT',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_GPR0_Bits',0,20,216,30,3
	.word	121332
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_GPR1_Bits',0,20,219,30,16,4,28
	.byte	'GPR1',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'ECNT',0,4
	.word	45601
	.byte	8,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_GPR1_Bits',0,20,223,30,3
	.word	121431
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,20,226,30,16,4,28
	.byte	'NEWVAL_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ECNTOFL_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'CNTOFL_IRQ_EN',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'GPROFL_IRQ_EN',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TODET_IRQ_EN',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'GLITCHDET_IRQ_EN',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN_Bits',0,20,235,30,3
	.word	121530
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,20,238,30,16,4,28
	.byte	'TRG_NEWVAL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_ECNTOFL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'TRG_CNTOFL',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'TRG_GPROFL',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TRG_TODET',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'TRG_GLITCHDET',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits',0,20,247,30,3
	.word	121776
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,20,250,30,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE_Bits',0,20,254,30,3
	.word	122014
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,20,129,31,16,4,28
	.byte	'NEWVAL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'ECNTOFL',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'CNTOFL',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'GPROFL',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'TODET',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'GLITCHDET',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'reserved_6',0,4
	.word	45601
	.byte	26,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits',0,20,138,31,3
	.word	122131
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_TDUC_Bits',0,20,141,31,16,4,28
	.byte	'TO_CNT',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_TDUC_Bits',0,20,145,31,3
	.word	122343
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH_TDUV_Bits',0,20,148,31,16,4,28
	.byte	'TOV',0,4
	.word	45601
	.byte	8,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	20,4,2,35,0,28
	.byte	'TCS',0,4
	.word	45601
	.byte	3,1,2,35,0,28
	.byte	'reserved_31',0,4
	.word	45601
	.byte	1,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_TDUV_Bits',0,20,154,31,3
	.word	122450
	.byte	15
	.byte	'_Ifx_GTM_TIM_IN_SRC_Bits',0,20,157,31,16,4,28
	.byte	'VAL_0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'MODE_0',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'VAL_1',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'MODE_1',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'VAL_2',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'MODE_2',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'VAL_3',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'MODE_3',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'VAL_4',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'MODE_4',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'VAL_5',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'MODE_5',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'VAL_6',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'MODE_6',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'VAL_7',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'MODE_7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_IN_SRC_Bits',0,20,175,31,3
	.word	122592
	.byte	15
	.byte	'_Ifx_GTM_TIM_RST_Bits',0,20,178,31,16,4,28
	.byte	'RST_CH0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'RST_CH1',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'RST_CH2',0,4
	.word	45601
	.byte	1,29,2,35,0,28
	.byte	'RST_CH3',0,4
	.word	45601
	.byte	1,28,2,35,0,28
	.byte	'RST_CH4',0,4
	.word	45601
	.byte	1,27,2,35,0,28
	.byte	'RST_CH5',0,4
	.word	45601
	.byte	1,26,2,35,0,28
	.byte	'RST_CH6',0,4
	.word	45601
	.byte	1,25,2,35,0,28
	.byte	'RST_CH7',0,4
	.word	45601
	.byte	1,24,2,35,0,28
	.byte	'reserved_8',0,4
	.word	45601
	.byte	24,0,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_RST_Bits',0,20,189,31,3
	.word	122937
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_CM0_Bits',0,20,192,31,16,4,28
	.byte	'CM0',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CM0_Bits',0,20,196,31,3
	.word	123170
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_CM1_Bits',0,20,199,31,16,4,28
	.byte	'CM1',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CM1_Bits',0,20,203,31,3
	.word	123273
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_CN0_Bits',0,20,206,31,16,4,28
	.byte	'CN0',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CN0_Bits',0,20,210,31,3
	.word	123376
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_CTRL_Bits',0,20,213,31,16,4,28
	.byte	'reserved_0',0,4
	.word	45601
	.byte	11,21,2,35,0,28
	.byte	'SL',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'CLK_SRC_SR',0,4
	.word	45601
	.byte	3,17,2,35,0,28
	.byte	'reserved_15',0,4
	.word	45601
	.byte	5,12,2,35,0,28
	.byte	'RST_CCU0',0,4
	.word	45601
	.byte	1,11,2,35,0,28
	.byte	'reserved_21',0,4
	.word	45601
	.byte	3,8,2,35,0,28
	.byte	'TRIGOUT',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'reserved_25',0,4
	.word	45601
	.byte	1,6,2,35,0,28
	.byte	'OSM',0,4
	.word	45601
	.byte	1,5,2,35,0,28
	.byte	'BITREV',0,4
	.word	45601
	.byte	1,4,2,35,0,28
	.byte	'SPEM',0,4
	.word	45601
	.byte	1,3,2,35,0,28
	.byte	'GCM',0,4
	.word	45601
	.byte	1,2,2,35,0,28
	.byte	'reserved_30',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CTRL_Bits',0,20,228,31,3
	.word	123479
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,20,231,31,16,4,28
	.byte	'CCU0TC_IRQ_EN',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CCU1TC_IRQ_EN',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN_Bits',0,20,236,31,3
	.word	123799
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,20,239,31,16,4,28
	.byte	'TRG_CCU0TC0',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'TRG_CCU1TC0',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits',0,20,244,31,3
	.word	123942
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,20,247,31,16,4,28
	.byte	'IRQ_MODE',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE_Bits',0,20,251,31,3
	.word	124091
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,20,254,31,16,4,28
	.byte	'CCU0TC',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'CCU1TC',0,4
	.word	45601
	.byte	1,30,2,35,0,28
	.byte	'reserved_2',0,4
	.word	45601
	.byte	30,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits',0,20,131,32,3
	.word	124208
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_SR0_Bits',0,20,134,32,16,4,28
	.byte	'SR0',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_SR0_Bits',0,20,138,32,3
	.word	124345
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_SR1_Bits',0,20,141,32,16,4,28
	.byte	'SR1',0,4
	.word	45601
	.byte	16,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_SR1_Bits',0,20,145,32,3
	.word	124448
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH_STAT_Bits',0,20,148,32,16,4,28
	.byte	'OL',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	31,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_STAT_Bits',0,20,152,32,3
	.word	124551
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,20,155,32,16,4,28
	.byte	'ACT_TB',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'TB_TRIG',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TBU_SEL',0,4
	.word	45601
	.byte	2,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB_Bits',0,20,161,32,3
	.word	124654
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,20,164,32,16,4,28
	.byte	'ENDIS_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits',0,20,175,32,3
	.word	124808
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,20,178,32,16,4,28
	.byte	'ENDIS_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits',0,20,189,32,3
	.word	125098
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,20,192,32,16,4,28
	.byte	'FUPD_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'FUPD_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'FUPD_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'FUPD_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'FUPD_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'FUPD_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'FUPD_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'FUPD_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'RSTCN0_CH0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'RSTCN0_CH1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'RSTCN0_CH2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'RSTCN0_CH3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'RSTCN0_CH4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'RSTCN0_CH5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'RSTCN0_CH6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'RSTCN0_CH7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits',0,20,210,32,3
	.word	125388
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,20,213,32,16,4,28
	.byte	'HOST_TRIG',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	7,24,2,35,0,28
	.byte	'RST_CH0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'RST_CH1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'RST_CH2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'RST_CH3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'RST_CH4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'RST_CH5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'RST_CH6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'RST_CH7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'UPEN_CTRL0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'UPEN_CTRL1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'UPEN_CTRL2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'UPEN_CTRL3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'UPEN_CTRL4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'UPEN_CTRL5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'UPEN_CTRL6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'UPEN_CTRL7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits',0,20,233,32,3
	.word	125821
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,20,236,32,16,4,28
	.byte	'INT_TRIG0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'INT_TRIG1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'INT_TRIG2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'INT_TRIG3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'INT_TRIG4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'INT_TRIG5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'INT_TRIG6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'INT_TRIG7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG_Bits',0,20,247,32,3
	.word	126271
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,20,250,32,16,4,28
	.byte	'OUTEN_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits',0,20,133,33,3
	.word	126541
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,20,136,33,16,4,28
	.byte	'OUTEN_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits',0,20,147,33,3
	.word	126831
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,20,150,33,16,4,28
	.byte	'ACT_TB',0,4
	.word	45601
	.byte	24,8,2,35,0,28
	.byte	'TB_TRIG',0,4
	.word	45601
	.byte	1,7,2,35,0,28
	.byte	'TBU_SEL',0,4
	.word	45601
	.byte	2,5,2,35,0,28
	.byte	'reserved_27',0,4
	.word	45601
	.byte	5,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB_Bits',0,20,156,33,3
	.word	127121
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,20,159,33,16,4,28
	.byte	'ENDIS_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits',0,20,170,33,3
	.word	127275
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,20,173,33,16,4,28
	.byte	'ENDIS_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'ENDIS_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'ENDIS_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'ENDIS_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'ENDIS_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'ENDIS_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'ENDIS_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'ENDIS_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits',0,20,184,33,3
	.word	127565
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,20,187,33,16,4,28
	.byte	'FUPD_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'FUPD_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'FUPD_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'FUPD_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'FUPD_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'FUPD_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'FUPD_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'FUPD_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'RSTCN0_CH0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'RSTCN0_CH1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'RSTCN0_CH2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'RSTCN0_CH3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'RSTCN0_CH4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'RSTCN0_CH5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'RSTCN0_CH6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'RSTCN0_CH7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits',0,20,205,33,3
	.word	127855
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,20,208,33,16,4,28
	.byte	'HOST_TRIG',0,4
	.word	45601
	.byte	1,31,2,35,0,28
	.byte	'reserved_1',0,4
	.word	45601
	.byte	7,24,2,35,0,28
	.byte	'RST_CH0',0,4
	.word	45601
	.byte	1,23,2,35,0,28
	.byte	'RST_CH1',0,4
	.word	45601
	.byte	1,22,2,35,0,28
	.byte	'RST_CH2',0,4
	.word	45601
	.byte	1,21,2,35,0,28
	.byte	'RST_CH3',0,4
	.word	45601
	.byte	1,20,2,35,0,28
	.byte	'RST_CH4',0,4
	.word	45601
	.byte	1,19,2,35,0,28
	.byte	'RST_CH5',0,4
	.word	45601
	.byte	1,18,2,35,0,28
	.byte	'RST_CH6',0,4
	.word	45601
	.byte	1,17,2,35,0,28
	.byte	'RST_CH7',0,4
	.word	45601
	.byte	1,16,2,35,0,28
	.byte	'UPEN_CTRL0',0,4
	.word	45601
	.byte	2,14,2,35,0,28
	.byte	'UPEN_CTRL1',0,4
	.word	45601
	.byte	2,12,2,35,0,28
	.byte	'UPEN_CTRL2',0,4
	.word	45601
	.byte	2,10,2,35,0,28
	.byte	'UPEN_CTRL3',0,4
	.word	45601
	.byte	2,8,2,35,0,28
	.byte	'UPEN_CTRL4',0,4
	.word	45601
	.byte	2,6,2,35,0,28
	.byte	'UPEN_CTRL5',0,4
	.word	45601
	.byte	2,4,2,35,0,28
	.byte	'UPEN_CTRL6',0,4
	.word	45601
	.byte	2,2,2,35,0,28
	.byte	'UPEN_CTRL7',0,4
	.word	45601
	.byte	2,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits',0,20,228,33,3
	.word	128288
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,20,231,33,16,4,28
	.byte	'INT_TRIG0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'INT_TRIG1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'INT_TRIG2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'INT_TRIG3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'INT_TRIG4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'INT_TRIG5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'INT_TRIG6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'INT_TRIG7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG_Bits',0,20,242,33,3
	.word	128738
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,20,245,33,16,4,28
	.byte	'OUTEN_CTRL0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_CTRL1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_CTRL2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_CTRL3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_CTRL4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_CTRL5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_CTRL6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_CTRL7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits',0,20,128,34,3
	.word	129008
	.byte	15
	.byte	'_Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,20,131,34,16,4,28
	.byte	'OUTEN_STAT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'OUTEN_STAT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'OUTEN_STAT2',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'OUTEN_STAT3',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'OUTEN_STAT4',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'OUTEN_STAT5',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'OUTEN_STAT6',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'OUTEN_STAT7',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits',0,20,142,34,3
	.word	129298
	.byte	15
	.byte	'_Ifx_GTM_TRIGOUT_Bits',0,20,145,34,16,4,28
	.byte	'INT0',0,4
	.word	45601
	.byte	2,30,2,35,0,28
	.byte	'INT1',0,4
	.word	45601
	.byte	2,28,2,35,0,28
	.byte	'TRIG0',0,4
	.word	45601
	.byte	2,26,2,35,0,28
	.byte	'TRIG1',0,4
	.word	45601
	.byte	2,24,2,35,0,28
	.byte	'TRIG2',0,4
	.word	45601
	.byte	2,22,2,35,0,28
	.byte	'TRIG3',0,4
	.word	45601
	.byte	2,20,2,35,0,28
	.byte	'TRIG4',0,4
	.word	45601
	.byte	2,18,2,35,0,28
	.byte	'TRIG5',0,4
	.word	45601
	.byte	2,16,2,35,0,28
	.byte	'reserved_16',0,4
	.word	45601
	.byte	16,0,2,35,0,0,27
	.byte	'Ifx_GTM_TRIGOUT_Bits',0,20,156,34,3
	.word	129588
	.byte	29,20,164,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	52927
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ACCEN0',0,20,169,34,3
	.word	129804
	.byte	29,20,172,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53484
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ACCEN1',0,20,177,34,3
	.word	129868
	.byte	29,20,180,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53561
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG0OUT0',0,20,185,34,3
	.word	129932
	.byte	29,20,188,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53756
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG0OUT1',0,20,193,34,3
	.word	130002
	.byte	29,20,196,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	53861
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG1OUT0',0,20,201,34,3
	.word	130072
	.byte	29,20,204,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54056
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ADCTRIG1OUT1',0,20,209,34,3
	.word	130142
	.byte	29,20,212,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54162
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_AEI_ADDR_XPT',0,20,217,34,3
	.word	130212
	.byte	29,20,220,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54292
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_AFD_CH_BUF_ACC',0,20,225,34,3
	.word	130282
	.byte	29,20,228,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54404
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_ARU_ACCESS',0,20,233,34,3
	.word	130354
	.byte	29,20,236,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54570
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DATA_H',0,20,241,34,3
	.word	130426
	.byte	29,20,244,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54674
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DATA_L',0,20,249,34,3
	.word	130494
	.byte	29,20,252,34,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54778
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_ACCESS0',0,20,129,35,3
	.word	130562
	.byte	29,20,132,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	54891
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_ACCESS1',0,20,137,35,3
	.word	130635
	.byte	29,20,140,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55004
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA0_H',0,20,145,35,3
	.word	130708
	.byte	29,20,148,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55118
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA0_L',0,20,153,35,3
	.word	130781
	.byte	29,20,156,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55232
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA1_H',0,20,161,35,3
	.word	130854
	.byte	29,20,164,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55346
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_DBG_DATA1_L',0,20,169,35,3
	.word	130927
	.byte	29,20,172,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55460
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_EN',0,20,177,35,3
	.word	131000
	.byte	29,20,180,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55629
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_FORCINT',0,20,185,35,3
	.word	131068
	.byte	29,20,188,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55798
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_MODE',0,20,193,35,3
	.word	131141
	.byte	29,20,196,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	55909
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ARU_IRQ_NOTIFY',0,20,201,35,3
	.word	131211
	.byte	29,20,204,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56065
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ACT_TB',0,20,209,35,3
	.word	131283
	.byte	29,20,212,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56219
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_CTRL',0,20,217,35,3
	.word	131356
	.byte	29,20,220,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56509
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_ENDIS_STAT',0,20,225,35,3
	.word	131433
	.byte	29,20,228,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	56799
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_FUPD_CTRL',0,20,233,35,3
	.word	131510
	.byte	29,20,236,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57232
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_GLB_CTRL',0,20,241,35,3
	.word	131586
	.byte	29,20,244,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57682
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_INT_TRIG',0,20,249,35,3
	.word	131661
	.byte	29,20,252,35,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	57952
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_CTRL',0,20,129,36,3
	.word	131736
	.byte	29,20,132,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58242
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_AGC_OUTEN_STAT',0,20,137,36,3
	.word	131813
	.byte	29,20,140,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58532
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CM0',0,20,145,36,3
	.word	131890
	.byte	29,20,148,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58637
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CM1',0,20,153,36,3
	.word	131959
	.byte	29,20,156,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58742
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CN0',0,20,161,36,3
	.word	132028
	.byte	29,20,164,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	58847
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_CTRL',0,20,169,36,3
	.word	132097
	.byte	29,20,172,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59265
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_EN',0,20,177,36,3
	.word	132167
	.byte	29,20,180,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59410
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_FORCINT',0,20,185,36,3
	.word	132239
	.byte	29,20,188,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59559
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_MODE',0,20,193,36,3
	.word	132316
	.byte	29,20,196,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59678
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_IRQ_NOTIFY',0,20,201,36,3
	.word	132390
	.byte	29,20,204,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59817
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_RDADDR',0,20,209,36,3
	.word	132466
	.byte	29,20,212,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	59973
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMC',0,20,217,36,3
	.word	132538
	.byte	29,20,220,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60346
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMI',0,20,225,36,3
	.word	132608
	.byte	29,20,228,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60546
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMP',0,20,233,36,3
	.word	132678
	.byte	29,20,236,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	60890
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SOMS',0,20,241,36,3
	.word	132748
	.byte	29,20,244,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61147
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SR0',0,20,249,36,3
	.word	132818
	.byte	29,20,252,36,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61252
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_SR1',0,20,129,37,3
	.word	132887
	.byte	29,20,132,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61357
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ATOM_CH_STAT',0,20,137,37,3
	.word	132956
	.byte	29,20,140,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61569
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_EIRQ_EN',0,20,145,37,3
	.word	133026
	.byte	29,20,148,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	61912
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_EN',0,20,153,37,3
	.word	133095
	.byte	29,20,156,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62253
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_FORCINT',0,20,161,37,3
	.word	133163
	.byte	29,20,164,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62617
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_MODE',0,20,169,37,3
	.word	133236
	.byte	29,20,172,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	62728
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_IRQ_NOTIFY',0,20,177,37,3
	.word	133306
	.byte	29,20,180,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63038
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_RST',0,20,185,37,3
	.word	133378
	.byte	29,20,188,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63134
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC0_ADDR',0,20,193,37,3
	.word	133443
	.byte	29,20,196,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63286
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC0_DEST',0,20,201,37,3
	.word	133514
	.byte	29,20,204,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	63855
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC10_ADDR',0,20,209,37,3
	.word	133585
	.byte	29,20,212,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64009
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC10_DEST',0,20,217,37,3
	.word	133657
	.byte	29,20,220,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64580
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC11_ADDR',0,20,225,37,3
	.word	133729
	.byte	29,20,228,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	64734
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC11_DEST',0,20,233,37,3
	.word	133801
	.byte	29,20,236,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65305
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC1_ADDR',0,20,241,37,3
	.word	133873
	.byte	29,20,244,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	65457
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC1_DEST',0,20,249,37,3
	.word	133944
	.byte	29,20,252,37,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66026
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC2_ADDR',0,20,129,38,3
	.word	134015
	.byte	29,20,132,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66178
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC2_DEST',0,20,137,38,3
	.word	134086
	.byte	29,20,140,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66747
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC3_ADDR',0,20,145,38,3
	.word	134157
	.byte	29,20,148,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	66899
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC3_DEST',0,20,153,38,3
	.word	134228
	.byte	29,20,156,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67468
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC4_ADDR',0,20,161,38,3
	.word	134299
	.byte	29,20,164,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	67620
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC4_DEST',0,20,169,38,3
	.word	134370
	.byte	29,20,172,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68189
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC5_ADDR',0,20,177,38,3
	.word	134441
	.byte	29,20,180,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68341
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC5_DEST',0,20,185,38,3
	.word	134512
	.byte	29,20,188,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	68910
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC6_ADDR',0,20,193,38,3
	.word	134583
	.byte	29,20,196,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69062
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC6_DEST',0,20,201,38,3
	.word	134654
	.byte	29,20,204,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69631
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC7_ADDR',0,20,209,38,3
	.word	134725
	.byte	29,20,212,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	69783
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC7_DEST',0,20,217,38,3
	.word	134796
	.byte	29,20,220,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70352
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC8_ADDR',0,20,225,38,3
	.word	134867
	.byte	29,20,228,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	70504
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC8_DEST',0,20,233,38,3
	.word	134938
	.byte	29,20,236,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71073
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC9_ADDR',0,20,241,38,3
	.word	135009
	.byte	29,20,244,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71225
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC9_DEST',0,20,249,38,3
	.word	135080
	.byte	29,20,252,38,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	71794
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_MODE',0,20,129,39,3
	.word	135151
	.byte	29,20,132,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72102
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_PTR1',0,20,137,39,3
	.word	135220
	.byte	29,20,140,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72304
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRIDGE_PTR2',0,20,145,39,3
	.word	135289
	.byte	29,20,148,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72417
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CLC',0,20,153,39,3
	.word	135358
	.byte	29,20,156,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	72560
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_EIRQ_EN',0,20,161,39,3
	.word	135419
	.byte	29,20,164,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73254
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_EN',0,20,169,39,3
	.word	135488
	.byte	29,20,172,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	73818
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_EN',0,20,177,39,3
	.word	135552
	.byte	29,20,180,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	74486
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_FORCINT',0,20,185,39,3
	.word	135620
	.byte	29,20,188,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75092
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_MODE',0,20,193,39,3
	.word	135693
	.byte	29,20,196,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75203
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMP_IRQ_NOTIFY',0,20,201,39,3
	.word	135763
	.byte	29,20,204,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75711
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK0_5_CTRL',0,20,209,39,3
	.word	135835
	.byte	29,20,212,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75828
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_6_CTRL',0,20,217,39,3
	.word	135908
	.byte	29,20,220,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	75963
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_7_CTRL',0,20,225,39,3
	.word	135980
	.byte	29,20,228,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76098
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_CLK_EN',0,20,233,39,3
	.word	136052
	.byte	29,20,236,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76418
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_ECLK_DEN',0,20,241,39,3
	.word	136120
	.byte	29,20,244,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76530
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_ECLK_NUM',0,20,249,39,3
	.word	136190
	.byte	29,20,252,39,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76642
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_FXCLK_CTRL',0,20,129,40,3
	.word	136260
	.byte	29,20,132,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76758
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_GCLK_DEN',0,20,137,40,3
	.word	136332
	.byte	29,20,140,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76870
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CMU_GCLK_NUM',0,20,145,40,3
	.word	136402
	.byte	29,20,148,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	76982
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_CTRL',0,20,153,40,3
	.word	136472
	.byte	29,20,156,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77135
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DATAIN',0,20,161,40,3
	.word	136534
	.byte	29,20,164,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77208
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ACB',0,20,169,40,3
	.word	136598
	.byte	29,20,172,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77428
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ACT_STA',0,20,177,40,3
	.word	136664
	.byte	29,20,180,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77538
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL1',0,20,185,40,3
	.word	136734
	.byte	29,20,188,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77662
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_CAL2',0,20,193,40,3
	.word	136808
	.byte	29,20,196,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77786
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD1',0,20,201,40,3
	.word	136882
	.byte	29,20,204,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	77907
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADD_IN_LD2',0,20,209,40,3
	.word	136955
	.byte	29,20,212,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78028
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ADT_S',0,20,217,40,3
	.word	137028
	.byte	29,20,220,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78146
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_AOSV_2',0,20,225,40,3
	.word	137096
	.byte	29,20,228,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78421
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS',0,20,233,40,3
	.word	137165
	.byte	29,20,236,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78289
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS_1C3',0,20,241,40,3
	.word	137231
	.byte	29,20,244,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78619
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APS_SYNC',0,20,249,40,3
	.word	137301
	.byte	29,20,252,40,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78937
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT',0,20,129,41,3
	.word	137372
	.byte	29,20,132,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	78807
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT_2C',0,20,137,41,3
	.word	137438
	.byte	29,20,140,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79134
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_APT_SYNC',0,20,145,41,3
	.word	137507
	.byte	29,20,148,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79319
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_SX',0,20,153,41,3
	.word	137578
	.byte	29,20,156,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79427
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_SX_NOM',0,20,161,41,3
	.word	137647
	.byte	29,20,164,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79547
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_TX',0,20,169,41,3
	.word	137720
	.byte	29,20,172,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79655
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CDT_TX_NOM',0,20,177,41,3
	.word	137789
	.byte	29,20,180,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79775
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CNT_NUM1',0,20,185,41,3
	.word	137862
	.byte	29,20,188,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	79890
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CNT_NUM2',0,20,193,41,3
	.word	137933
	.byte	29,20,196,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80005
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE',0,20,201,41,3
	.word	138004
	.byte	29,20,204,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80279
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0',0,20,209,41,3
	.word	138086
	.byte	29,20,212,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80511
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE',0,20,217,41,3
	.word	138155
	.byte	29,20,220,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80755
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER',0,20,225,41,3
	.word	138237
	.byte	29,20,228,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	80988
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_1',0,20,233,41,3
	.word	138321
	.byte	29,20,236,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81415
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER',0,20,241,41,3
	.word	138390
	.byte	29,20,244,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	81649
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_2',0,20,249,41,3
	.word	138474
	.byte	29,20,252,41,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82017
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_3',0,20,129,42,3
	.word	138543
	.byte	29,20,132,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82397
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_CTRL_4',0,20,137,42,3
	.word	138612
	.byte	29,20,140,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82781
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DLA',0,20,145,42,3
	.word	138681
	.byte	29,20,148,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82994
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_S',0,20,153,42,3
	.word	138747
	.byte	29,20,156,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	82880
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_S_ACT',0,20,161,42,3
	.word	138814
	.byte	29,20,164,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83096
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DT_T_ACT',0,20,169,42,3
	.word	138885
	.byte	29,20,172,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83210
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_DTA',0,20,177,42,3
	.word	138956
	.byte	29,20,181,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83309
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EDT_S',0,20,186,42,3
	.word	139022
	.byte	29,20,190,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83414
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EDT_T',0,20,195,42,3
	.word	139090
	.byte	29,20,198,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	83519
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_EIRQ_EN',0,20,203,42,3
	.word	139158
	.byte	29,20,206,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84250
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_FTV_S',0,20,211,42,3
	.word	139228
	.byte	29,20,214,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84358
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_FTV_T',0,20,219,42,3
	.word	139296
	.byte	29,20,222,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84468
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_ID_PMTR',0,20,227,42,3
	.word	139364
	.byte	29,20,230,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84580
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_INC_CNT1',0,20,235,42,3
	.word	139434
	.byte	29,20,239,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84694
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_INC_CNT2',0,20,244,42,3
	.word	139505
	.byte	29,20,247,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	84808
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_EN',0,20,252,42,3
	.word	139576
	.byte	29,20,255,42,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	85512
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_FORCINT',0,20,132,43,3
	.word	139645
	.byte	29,20,135,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86163
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_MODE',0,20,140,43,3
	.word	139719
	.byte	29,20,143,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86276
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_IRQ_NOTIFY',0,20,148,43,3
	.word	139790
	.byte	29,20,152,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86813
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MEDT_S',0,20,157,43,3
	.word	139863
	.byte	29,20,161,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	86921
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MEDT_T',0,20,166,43,3
	.word	139932
	.byte	29,20,169,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87029
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MLS1',0,20,174,43,3
	.word	140001
	.byte	29,20,177,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87131
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MLS2',0,20,182,43,3
	.word	140068
	.byte	29,20,186,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87233
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MPVAL1',0,20,191,43,3
	.word	140135
	.byte	29,20,195,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87357
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_MPVAL2',0,20,200,43,3
	.word	140204
	.byte	29,20,203,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87481
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NA',0,20,208,43,3
	.word	140273
	.byte	29,20,211,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87591
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S',0,20,216,43,3
	.word	140338
	.byte	29,20,219,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87696
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR',0,20,224,43,3
	.word	140406
	.byte	29,20,227,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87813
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_S_TAR_OLD',0,20,232,43,3
	.word	140478
	.byte	29,20,235,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	87942
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T',0,20,240,43,3
	.word	140554
	.byte	29,20,243,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88047
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR',0,20,248,43,3
	.word	140622
	.byte	29,20,251,43,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88164
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NMB_T_TAR_OLD',0,20,128,44,3
	.word	140694
	.byte	29,20,131,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88293
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NTI_CNT',0,20,136,44,3
	.word	140770
	.byte	29,20,139,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88404
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NUSC',0,20,144,44,3
	.word	140840
	.byte	29,20,147,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88622
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_NUTC',0,20,152,44,3
	.word	140907
	.byte	29,20,155,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	88863
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_OSW',0,20,160,44,3
	.word	140974
	.byte	29,20,163,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89020
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PDT_T',0,20,168,44,3
	.word	141040
	.byte	29,20,171,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89136
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSA',0,20,176,44,3
	.word	141108
	.byte	29,20,179,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89235
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSAC',0,20,184,44,3
	.word	141174
	.byte	29,20,187,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89337
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSC',0,20,192,44,3
	.word	141241
	.byte	29,20,195,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89439
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSM_0',0,20,200,44,3
	.word	141308
	.byte	29,20,203,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89545
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSSM_1',0,20,208,44,3
	.word	141377
	.byte	29,20,211,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89651
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTC',0,20,216,44,3
	.word	141446
	.byte	29,20,219,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89753
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTM_0',0,20,224,44,3
	.word	141513
	.byte	29,20,227,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89859
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PSTM_1',0,20,232,44,3
	.word	141582
	.byte	29,20,235,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	89965
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_PVT',0,20,240,44,3
	.word	141651
	.byte	29,20,243,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90064
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RAM_INI',0,20,248,44,3
	.word	141717
	.byte	29,20,251,44,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90253
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_SX',0,20,128,45,3
	.word	141787
	.byte	29,20,132,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90364
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_SX_NOM',0,20,137,45,3
	.word	141857
	.byte	29,20,140,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90487
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_TX',0,20,145,45,3
	.word	141931
	.byte	29,20,149,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90598
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RCDT_TX_NOM',0,20,154,45,3
	.word	142001
	.byte	29,20,157,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90838
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_S',0,20,162,45,3
	.word	142075
	.byte	29,20,165,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90721
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_S_ACT',0,20,170,45,3
	.word	142143
	.byte	29,20,173,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	90943
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_RDT_T_ACT',0,20,178,45,3
	.word	142215
	.byte	29,20,181,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91060
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_SLR',0,20,186,45,3
	.word	142287
	.byte	29,20,189,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91158
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_STATUS',0,20,194,45,3
	.word	142353
	.byte	29,20,197,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91739
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TBU_TS0_S',0,20,202,45,3
	.word	142422
	.byte	29,20,205,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91856
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TBU_TS0_T',0,20,210,45,3
	.word	142494
	.byte	29,20,213,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	91973
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THMA',0,20,218,45,3
	.word	142566
	.byte	29,20,221,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92075
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THMI',0,20,226,45,3
	.word	142633
	.byte	29,20,229,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92177
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_THVAL',0,20,234,45,3
	.word	142700
	.byte	29,20,237,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92282
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TLR',0,20,242,45,3
	.word	142768
	.byte	29,20,245,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92380
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TOV',0,20,250,45,3
	.word	142834
	.byte	29,20,253,45,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92492
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TOV_S',0,20,130,46,3
	.word	142900
	.byte	29,20,133,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92608
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_S_0',0,20,138,46,3
	.word	142968
	.byte	29,20,141,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92718
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_S_1',0,20,146,46,3
	.word	143037
	.byte	29,20,149,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92828
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_T_0',0,20,154,46,3
	.word	143106
	.byte	29,20,157,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	92940
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TS_T_1',0,20,162,46,3
	.word	143175
	.byte	29,20,165,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93052
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TSAC',0,20,170,46,3
	.word	143244
	.byte	29,20,173,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93154
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DPLL_TSF_S',0,20,178,46,3
	.word	143311
	.byte	29,20,181,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93259
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DXINCON',0,20,186,46,3
	.word	143379
	.byte	29,20,189,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93673
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_DXOUTCON',0,20,194,46,3
	.word	143444
	.byte	29,20,197,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	93915
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_EIRQ_EN',0,20,202,46,3
	.word	143510
	.byte	29,20,205,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94119
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_ENABLE',0,20,210,46,3
	.word	143575
	.byte	29,20,213,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94359
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO',0,20,218,46,3
	.word	143643
	.byte	29,20,221,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94484
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_F2A_STR_CH_STR_CFG',0,20,226,46,3
	.word	143722
	.byte	29,20,229,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94642
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_CTRL',0,20,234,46,3
	.word	143798
	.byte	29,20,237,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	94798
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_EIRQ_EN',0,20,242,46,3
	.word	143868
	.byte	29,20,245,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95008
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_END_ADDR',0,20,250,46,3
	.word	143941
	.byte	29,20,253,46,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95124
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_FILL_LEVEL',0,20,130,47,3
	.word	144015
	.byte	29,20,133,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95245
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_EN',0,20,138,47,3
	.word	144091
	.byte	29,20,141,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95451
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_FORCINT',0,20,146,47,3
	.word	144163
	.byte	29,20,149,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95655
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_MODE',0,20,154,47,3
	.word	144240
	.byte	29,20,157,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	95824
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_IRQ_NOTIFY',0,20,162,47,3
	.word	144314
	.byte	29,20,165,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96010
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_LOWER_WM',0,20,170,47,3
	.word	144390
	.byte	29,20,173,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96126
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_RD_PTR',0,20,178,47,3
	.word	144464
	.byte	29,20,181,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96238
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_START_ADDR',0,20,186,47,3
	.word	144536
	.byte	29,20,189,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96358
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_STATUS',0,20,194,47,3
	.word	144612
	.byte	29,20,197,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96521
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_UPPER_WM',0,20,202,47,3
	.word	144684
	.byte	29,20,205,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96637
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_FIFO_CH_WR_PTR',0,20,210,47,3
	.word	144758
	.byte	29,20,213,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	96749
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_0',0,20,218,47,3
	.word	144830
	.byte	29,20,221,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97522
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_1',0,20,226,47,3
	.word	144898
	.byte	29,20,229,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	97233
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_10',0,20,234,47,3
	.word	144966
	.byte	29,20,237,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	98263
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_2',0,20,242,47,3
	.word	145035
	.byte	29,20,245,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99096
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_4',0,20,250,47,3
	.word	145103
	.byte	29,20,253,47,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	99929
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_6',0,20,130,48,3
	.word	145171
	.byte	29,20,133,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	100774
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_7',0,20,138,48,3
	.word	145239
	.byte	29,20,141,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	101252
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_9',0,20,146,48,3
	.word	145307
	.byte	29,20,149,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102117
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI0',0,20,154,48,3
	.word	145375
	.byte	29,20,157,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	102418
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI1',0,20,162,48,3
	.word	145446
	.byte	29,20,165,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	103288
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_CEI3',0,20,170,48,3
	.word	145517
	.byte	29,20,173,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104159
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ICM_IRQG_MEI',0,20,178,48,3
	.word	145588
	.byte	29,20,181,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104654
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_CAN_OUTSEL',0,20,186,48,3
	.word	145658
	.byte	29,20,189,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	104865
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_DSADC_INSEL',0,20,194,48,3
	.word	145735
	.byte	29,20,197,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105094
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_DSADC_OUTSEL0',0,20,202,48,3
	.word	145813
	.byte	29,20,205,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105415
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_PSI5_OUTSEL0',0,20,210,48,3
	.word	145893
	.byte	29,20,213,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105621
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_PSI5S_OUTSEL',0,20,218,48,3
	.word	145972
	.byte	29,20,221,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	105836
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_T_OUTSEL',0,20,226,48,3
	.word	146051
	.byte	29,20,229,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106177
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_INOUTSEL_TIM_INSEL',0,20,234,48,3
	.word	146126
	.byte	29,20,237,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106402
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_EN',0,20,242,48,3
	.word	146202
	.byte	29,20,245,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106600
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_FORCINT',0,20,250,48,3
	.word	146266
	.byte	29,20,253,48,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106796
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_MODE',0,20,130,49,3
	.word	146335
	.byte	29,20,133,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	106899
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_IRQ_NOTIFY',0,20,138,49,3
	.word	146401
	.byte	29,20,141,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107077
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_KRST0',0,20,146,49,3
	.word	146469
	.byte	29,20,149,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107188
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_KRST1',0,20,154,49,3
	.word	146532
	.byte	29,20,157,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107280
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_KRSTCLR',0,20,162,49,3
	.word	146595
	.byte	29,20,165,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107376
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MAP_CTRL',0,20,170,49,3
	.word	146660
	.byte	29,20,173,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107806
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCFG_CTRL',0,20,178,49,3
	.word	146726
	.byte	29,20,181,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	107955
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH0_CTRG',0,20,186,49,3
	.word	146793
	.byte	29,20,189,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108309
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH0_STRG',0,20,194,49,3
	.word	146863
	.byte	29,20,197,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108663
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_ACB',0,20,202,49,3
	.word	146933
	.byte	29,20,205,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	108830
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_CTRL',0,20,210,49,3
	.word	147001
	.byte	29,20,213,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109110
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_EIRQ_EN',0,20,218,49,3
	.word	147070
	.byte	29,20,221,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109282
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_EN',0,20,226,49,3
	.word	147142
	.byte	29,20,229,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109449
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_FORCINT',0,20,234,49,3
	.word	147213
	.byte	29,20,237,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109629
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_MODE',0,20,242,49,3
	.word	147289
	.byte	29,20,245,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109746
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_IRQ_NOTIFY',0,20,250,49,3
	.word	147362
	.byte	29,20,253,49,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	109912
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_PC',0,20,130,50,3
	.word	147437
	.byte	29,20,133,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110012
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R0',0,20,138,50,3
	.word	147504
	.byte	29,20,141,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110114
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R1',0,20,146,50,3
	.word	147571
	.byte	29,20,149,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110216
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R2',0,20,154,50,3
	.word	147638
	.byte	29,20,157,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110318
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R3',0,20,162,50,3
	.word	147705
	.byte	29,20,165,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110420
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R4',0,20,170,50,3
	.word	147772
	.byte	29,20,173,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110522
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R5',0,20,178,50,3
	.word	147839
	.byte	29,20,181,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110624
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R6',0,20,186,50,3
	.word	147906
	.byte	29,20,189,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110726
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CH_R7',0,20,194,50,3
	.word	147973
	.byte	29,20,197,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110828
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_CTRL',0,20,202,50,3
	.word	148040
	.byte	29,20,205,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	110992
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_ERR',0,20,210,50,3
	.word	148106
	.byte	29,20,213,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111201
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCS_RST',0,20,218,50,3
	.word	148171
	.byte	29,20,221,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	111667
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCSINTCLR',0,20,226,50,3
	.word	148236
	.byte	29,20,229,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	112041
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MCSINTSTAT',0,20,234,50,3
	.word	148303
	.byte	29,20,237,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	112417
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MON_ACTIVITY_0',0,20,242,50,3
	.word	148371
	.byte	29,20,245,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113098
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MON_STATUS',0,20,250,50,3
	.word	148443
	.byte	29,20,253,50,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113601
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCIN_INHCON',0,20,130,51,3
	.word	148511
	.byte	29,20,133,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	113932
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCIN_INLCON',0,20,138,51,3
	.word	148581
	.byte	29,20,141,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114263
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON0',0,20,146,51,3
	.word	148651
	.byte	29,20,149,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114485
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON1',0,20,154,51,3
	.word	148720
	.byte	29,20,157,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114707
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON2',0,20,162,51,3
	.word	148789
	.byte	29,20,165,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	114931
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_MSCSET_CON3',0,20,170,51,3
	.word	148858
	.byte	29,20,173,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115157
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OCS',0,20,178,51,3
	.word	148927
	.byte	29,20,181,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115303
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_ODA',0,20,186,51,3
	.word	148988
	.byte	29,20,189,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115409
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU0T',0,20,194,51,3
	.word	149049
	.byte	29,20,197,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115540
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU1T',0,20,202,51,3
	.word	149113
	.byte	29,20,205,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115671
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTBU2T',0,20,210,51,3
	.word	149177
	.byte	29,20,213,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	115802
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTSC0',0,20,218,51,3
	.word	149241
	.byte	29,20,221,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116084
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTSC1',0,20,226,51,3
	.word	149304
	.byte	29,20,229,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116228
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_OTSS',0,20,234,51,3
	.word	149367
	.byte	29,20,237,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116400
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_REV',0,20,242,51,3
	.word	149429
	.byte	29,20,245,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116578
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_RST',0,20,250,51,3
	.word	149490
	.byte	29,20,253,51,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116666
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CMP',0,20,130,52,3
	.word	149551
	.byte	29,20,133,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116763
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CNT',0,20,138,52,3
	.word	149616
	.byte	29,20,141,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	116860
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_CTRL_STAT',0,20,146,52,3
	.word	149681
	.byte	29,20,149,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	117214
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_EIRQ_EN',0,20,154,52,3
	.word	149752
	.byte	29,20,157,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	117442
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_EN',0,20,162,52,3
	.word	149821
	.byte	29,20,165,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	117663
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_FORCINT',0,20,170,52,3
	.word	149889
	.byte	29,20,173,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	117879
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_MODE',0,20,178,52,3
	.word	149962
	.byte	29,20,181,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	117990
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_IRQ_NOTIFY',0,20,186,52,3
	.word	150032
	.byte	29,20,189,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	118184
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_OUT_CTRL',0,20,194,52,3
	.word	150104
	.byte	29,20,197,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	118300
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_OUT_PAT',0,20,202,52,3
	.word	150174
	.byte	29,20,205,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	118413
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_SPE_PAT',0,20,210,52,3
	.word	150243
	.byte	29,20,213,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	118776
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH0_BASE',0,20,218,52,3
	.word	150308
	.byte	29,20,221,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	118884
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH0_CTRL',0,20,226,52,3
	.word	150378
	.byte	29,20,229,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119016
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH1_BASE',0,20,234,52,3
	.word	150448
	.byte	29,20,237,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119124
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH1_CTRL',0,20,242,52,3
	.word	150518
	.byte	29,20,245,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119256
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH2_BASE',0,20,250,52,3
	.word	150588
	.byte	29,20,253,52,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119364
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CH2_CTRL',0,20,130,53,3
	.word	150658
	.byte	29,20,133,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119496
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TBU_CHEN',0,20,138,53,3
	.word	150728
	.byte	29,20,141,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119642
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_AUX_IN_SRC',0,20,146,53,3
	.word	150794
	.byte	29,20,149,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119889
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CNT',0,20,154,53,3
	.word	150866
	.byte	29,20,157,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	119992
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CNTS',0,20,162,53,3
	.word	150934
	.byte	29,20,165,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	120091
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_CTRL',0,20,170,53,3
	.word	151003
	.byte	29,20,173,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	120634
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_ECNT',0,20,178,53,3
	.word	151072
	.byte	29,20,181,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	120740
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_ECTRL',0,20,186,53,3
	.word	151141
	.byte	29,20,189,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	120854
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_EIRQ_EN',0,20,194,53,3
	.word	151211
	.byte	29,20,197,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121108
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_FLT_FE',0,20,202,53,3
	.word	151283
	.byte	29,20,205,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121220
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_FLT_RE',0,20,210,53,3
	.word	151354
	.byte	29,20,213,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121332
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_GPR0',0,20,218,53,3
	.word	151425
	.byte	29,20,221,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121431
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_GPR1',0,20,226,53,3
	.word	151494
	.byte	29,20,229,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121530
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_EN',0,20,234,53,3
	.word	151563
	.byte	29,20,237,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	121776
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_FORCINT',0,20,242,53,3
	.word	151634
	.byte	29,20,245,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122014
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_MODE',0,20,250,53,3
	.word	151710
	.byte	29,20,253,53,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122131
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_IRQ_NOTIFY',0,20,130,54,3
	.word	151783
	.byte	29,20,133,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122343
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_TDUC',0,20,138,54,3
	.word	151858
	.byte	29,20,141,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122450
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_CH_TDUV',0,20,146,54,3
	.word	151927
	.byte	29,20,149,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122592
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_IN_SRC',0,20,154,54,3
	.word	151996
	.byte	29,20,157,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	122937
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TIM_RST',0,20,162,54,3
	.word	152064
	.byte	29,20,165,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123170
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CM0',0,20,170,54,3
	.word	152129
	.byte	29,20,173,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123273
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CM1',0,20,178,54,3
	.word	152197
	.byte	29,20,181,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123376
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CN0',0,20,186,54,3
	.word	152265
	.byte	29,20,189,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123479
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_CTRL',0,20,194,54,3
	.word	152333
	.byte	29,20,197,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123799
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_EN',0,20,202,54,3
	.word	152402
	.byte	29,20,205,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	123942
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_FORCINT',0,20,210,54,3
	.word	152473
	.byte	29,20,213,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124091
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_MODE',0,20,218,54,3
	.word	152549
	.byte	29,20,221,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124208
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_IRQ_NOTIFY',0,20,226,54,3
	.word	152622
	.byte	29,20,229,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124345
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_SR0',0,20,234,54,3
	.word	152697
	.byte	29,20,237,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124448
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_SR1',0,20,242,54,3
	.word	152765
	.byte	29,20,245,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124551
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_CH_STAT',0,20,250,54,3
	.word	152833
	.byte	29,20,253,54,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124654
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ACT_TB',0,20,130,55,3
	.word	152902
	.byte	29,20,133,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	124808
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_CTRL',0,20,138,55,3
	.word	152975
	.byte	29,20,141,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125098
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_ENDIS_STAT',0,20,146,55,3
	.word	153052
	.byte	29,20,149,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125388
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_FUPD_CTRL',0,20,154,55,3
	.word	153129
	.byte	29,20,157,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	125821
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_GLB_CTRL',0,20,162,55,3
	.word	153205
	.byte	29,20,165,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	126271
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_INT_TRIG',0,20,170,55,3
	.word	153280
	.byte	29,20,173,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	126541
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_CTRL',0,20,178,55,3
	.word	153355
	.byte	29,20,181,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	126831
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC0_OUTEN_STAT',0,20,186,55,3
	.word	153432
	.byte	29,20,189,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127121
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ACT_TB',0,20,194,55,3
	.word	153509
	.byte	29,20,197,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127275
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_CTRL',0,20,202,55,3
	.word	153582
	.byte	29,20,205,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127565
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_ENDIS_STAT',0,20,210,55,3
	.word	153659
	.byte	29,20,213,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	127855
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_FUPD_CTRL',0,20,218,55,3
	.word	153736
	.byte	29,20,221,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128288
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_GLB_CTRL',0,20,226,55,3
	.word	153812
	.byte	29,20,229,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	128738
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_INT_TRIG',0,20,234,55,3
	.word	153887
	.byte	29,20,237,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129008
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_CTRL',0,20,242,55,3
	.word	153962
	.byte	29,20,245,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129298
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TOM_TGC1_OUTEN_STAT',0,20,250,55,3
	.word	154039
	.byte	29,20,253,55,9,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	129588
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_TRIGOUT',0,20,130,56,3
	.word	154116
	.byte	15
	.byte	'_Ifx_GTM_AFD_CH',0,20,141,56,25,16,12
	.byte	'BUF_ACC',0
	.word	130282
	.byte	4,2,35,0,12
	.byte	'reserved_4',0
	.word	17782
	.byte	12,2,35,4,0,18
	.word	154181
	.byte	27
	.byte	'Ifx_GTM_AFD_CH',0,20,145,56,3
	.word	154241
	.byte	15
	.byte	'_Ifx_GTM_ATOM_AGC',0,20,148,56,25,64,12
	.byte	'GLB_CTRL',0
	.word	131586
	.byte	4,2,35,0,12
	.byte	'ENDIS_CTRL',0
	.word	131356
	.byte	4,2,35,4,12
	.byte	'ENDIS_STAT',0
	.word	131433
	.byte	4,2,35,8,12
	.byte	'ACT_TB',0
	.word	131283
	.byte	4,2,35,12,12
	.byte	'OUTEN_CTRL',0
	.word	131736
	.byte	4,2,35,16,12
	.byte	'OUTEN_STAT',0
	.word	131813
	.byte	4,2,35,20,12
	.byte	'FUPD_CTRL',0
	.word	131510
	.byte	4,2,35,24,12
	.byte	'INT_TRIG',0
	.word	131661
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	16145
	.byte	32,2,35,32,0,18
	.word	154270
	.byte	27
	.byte	'Ifx_GTM_ATOM_AGC',0,20,159,56,3
	.word	154467
	.byte	29,20,165,56,5,4,12
	.byte	'CTRL',0
	.word	132097
	.byte	4,2,35,0,12
	.byte	'SOMC',0
	.word	132538
	.byte	4,2,35,0,12
	.byte	'SOMI',0
	.word	132608
	.byte	4,2,35,0,12
	.byte	'SOMP',0
	.word	132678
	.byte	4,2,35,0,12
	.byte	'SOMS',0
	.word	132748
	.byte	4,2,35,0,0,15
	.byte	'_Ifx_GTM_ATOM_CH',0,20,162,56,25,64,12
	.byte	'RDADDR',0
	.word	132466
	.byte	4,2,35,0,30
	.word	154498
	.byte	4,2,35,4,12
	.byte	'SR0',0
	.word	132818
	.byte	4,2,35,8,12
	.byte	'SR1',0
	.word	132887
	.byte	4,2,35,12,12
	.byte	'CM0',0
	.word	131890
	.byte	4,2,35,16,12
	.byte	'CM1',0
	.word	131959
	.byte	4,2,35,20,12
	.byte	'CN0',0
	.word	132028
	.byte	4,2,35,24,12
	.byte	'STAT',0
	.word	132956
	.byte	4,2,35,28,12
	.byte	'IRQ_NOTIFY',0
	.word	132390
	.byte	4,2,35,32,12
	.byte	'IRQ_EN',0
	.word	132167
	.byte	4,2,35,36,12
	.byte	'IRQ_FORCINT',0
	.word	132239
	.byte	4,2,35,40,12
	.byte	'IRQ_MODE',0
	.word	132316
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	18300
	.byte	16,2,35,48,0,18
	.word	154575
	.byte	27
	.byte	'Ifx_GTM_ATOM_CH',0,20,185,56,3
	.word	154799
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK0_5',0,20,188,56,25,4,12
	.byte	'CTRL',0
	.word	135835
	.byte	4,2,35,0,0,18
	.word	154829
	.byte	27
	.byte	'Ifx_GTM_CMU_CLK0_5',0,20,191,56,3
	.word	154870
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK_6',0,20,194,56,25,4,12
	.byte	'CTRL',0
	.word	135908
	.byte	4,2,35,0,0,18
	.word	154903
	.byte	27
	.byte	'Ifx_GTM_CMU_CLK_6',0,20,197,56,3
	.word	154943
	.byte	15
	.byte	'_Ifx_GTM_CMU_CLK_7',0,20,200,56,25,4,12
	.byte	'CTRL',0
	.word	135980
	.byte	4,2,35,0,0,18
	.word	154975
	.byte	27
	.byte	'Ifx_GTM_CMU_CLK_7',0,20,203,56,3
	.word	155015
	.byte	15
	.byte	'_Ifx_GTM_CMU_ECLK',0,20,206,56,25,8,12
	.byte	'NUM',0
	.word	136190
	.byte	4,2,35,0,12
	.byte	'DEN',0
	.word	136120
	.byte	4,2,35,4,0,18
	.word	155047
	.byte	27
	.byte	'Ifx_GTM_CMU_ECLK',0,20,210,56,3
	.word	155098
	.byte	15
	.byte	'_Ifx_GTM_CMU_FXCLK',0,20,213,56,25,4,12
	.byte	'CTRL',0
	.word	136260
	.byte	4,2,35,0,0,18
	.word	155129
	.byte	27
	.byte	'Ifx_GTM_CMU_FXCLK',0,20,216,56,3
	.word	155169
	.byte	15
	.byte	'_Ifx_GTM_F2A_RD_CH',0,20,219,56,25,4,12
	.byte	'ARU_RD_FIFO',0
	.word	143643
	.byte	4,2,35,0,0,18
	.word	155201
	.byte	27
	.byte	'Ifx_GTM_F2A_RD_CH',0,20,222,56,3
	.word	155248
	.byte	15
	.byte	'_Ifx_GTM_F2A_STR_CH',0,20,225,56,25,4,12
	.byte	'STR_CFG',0
	.word	143722
	.byte	4,2,35,0,0,18
	.word	155280
	.byte	27
	.byte	'Ifx_GTM_F2A_STR_CH',0,20,228,56,3
	.word	155324
	.byte	15
	.byte	'_Ifx_GTM_FIFO_CH',0,20,231,56,25,64,12
	.byte	'CTRL',0
	.word	143798
	.byte	4,2,35,0,12
	.byte	'END_ADDR',0
	.word	143941
	.byte	4,2,35,4,12
	.byte	'START_ADDR',0
	.word	144536
	.byte	4,2,35,8,12
	.byte	'UPPER_WM',0
	.word	144684
	.byte	4,2,35,12,12
	.byte	'LOWER_WM',0
	.word	144390
	.byte	4,2,35,16,12
	.byte	'STATUS',0
	.word	144612
	.byte	4,2,35,20,12
	.byte	'FILL_LEVEL',0
	.word	144015
	.byte	4,2,35,24,12
	.byte	'WR_PTR',0
	.word	144758
	.byte	4,2,35,28,12
	.byte	'RD_PTR',0
	.word	144464
	.byte	4,2,35,32,12
	.byte	'IRQ_NOTIFY',0
	.word	144314
	.byte	4,2,35,36,12
	.byte	'IRQ_EN',0
	.word	144091
	.byte	4,2,35,40,12
	.byte	'IRQ_FORCINT',0
	.word	144163
	.byte	4,2,35,44,12
	.byte	'IRQ_MODE',0
	.word	144240
	.byte	4,2,35,48,12
	.byte	'EIRQ_EN',0
	.word	143868
	.byte	4,2,35,52,12
	.byte	'reserved_38',0
	.word	15814
	.byte	8,2,35,56,0,18
	.word	155357
	.byte	27
	.byte	'Ifx_GTM_FIFO_CH',0,20,248,56,3
	.word	155650
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_CAN',0,20,251,56,25,4,12
	.byte	'OUTSEL',0
	.word	145658
	.byte	4,2,35,0,0,18
	.word	155680
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_CAN',0,20,254,56,3
	.word	155725
	.byte	16,12
	.word	145735
	.byte	17,2,0,15
	.byte	'_Ifx_GTM_INOUTSEL_DSADC',0,20,129,57,25,24,12
	.byte	'INSEL',0
	.word	155760
	.byte	12,2,35,0,12
	.byte	'OUTSEL00',0
	.word	145813
	.byte	4,2,35,12,12
	.byte	'reserved_10',0
	.word	16107
	.byte	4,2,35,16,12
	.byte	'OUTSEL10',0
	.word	145813
	.byte	4,2,35,20,0,18
	.word	155769
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_DSADC',0,20,135,57,3
	.word	155872
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_PSI5',0,20,138,57,25,4,12
	.byte	'OUTSEL0',0
	.word	145893
	.byte	4,2,35,0,0,18
	.word	155909
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_PSI5',0,20,141,57,3
	.word	155956
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_PSI5S',0,20,144,57,25,4,12
	.byte	'OUTSEL',0
	.word	145972
	.byte	4,2,35,0,0,18
	.word	155992
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_PSI5S',0,20,147,57,3
	.word	156039
	.byte	16,60
	.word	146051
	.byte	17,14,0,15
	.byte	'_Ifx_GTM_INOUTSEL_T',0,20,150,57,25,60,12
	.byte	'OUTSEL',0
	.word	156076
	.byte	60,2,35,0,0,18
	.word	156085
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_T',0,20,153,57,3
	.word	156128
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL_TIM',0,20,156,57,25,4,12
	.byte	'INSEL',0
	.word	146126
	.byte	4,2,35,0,0,18
	.word	156161
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL_TIM',0,20,159,57,3
	.word	156205
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH',0,20,162,57,25,128,1,12
	.byte	'R0',0
	.word	147504
	.byte	4,2,35,0,12
	.byte	'R1',0
	.word	147571
	.byte	4,2,35,4,12
	.byte	'R2',0
	.word	147638
	.byte	4,2,35,8,12
	.byte	'R3',0
	.word	147705
	.byte	4,2,35,12,12
	.byte	'R4',0
	.word	147772
	.byte	4,2,35,16,12
	.byte	'R5',0
	.word	147839
	.byte	4,2,35,20,12
	.byte	'R6',0
	.word	147906
	.byte	4,2,35,24,12
	.byte	'R7',0
	.word	147973
	.byte	4,2,35,28,12
	.byte	'CTRL',0
	.word	147001
	.byte	4,2,35,32,12
	.byte	'ACB',0
	.word	146933
	.byte	4,2,35,36,12
	.byte	'reserved_28',0
	.word	18430
	.byte	24,2,35,40,12
	.byte	'PC',0
	.word	147437
	.byte	4,2,35,64,12
	.byte	'IRQ_NOTIFY',0
	.word	147362
	.byte	4,2,35,68,12
	.byte	'IRQ_EN',0
	.word	147142
	.byte	4,2,35,72,12
	.byte	'IRQ_FORCINT',0
	.word	147213
	.byte	4,2,35,76,12
	.byte	'IRQ_MODE',0
	.word	147289
	.byte	4,2,35,80,12
	.byte	'EIRQ_EN',0
	.word	147070
	.byte	4,2,35,84,12
	.byte	'reserved_58',0
	.word	16163
	.byte	40,2,35,88,0,18
	.word	156240
	.byte	27
	.byte	'Ifx_GTM_MCS_CH',0,20,182,57,3
	.word	156533
	.byte	15
	.byte	'_Ifx_GTM_MCS_CH0',0,20,185,57,25,88,12
	.byte	'R0',0
	.word	147504
	.byte	4,2,35,0,12
	.byte	'R1',0
	.word	147571
	.byte	4,2,35,4,12
	.byte	'R2',0
	.word	147638
	.byte	4,2,35,8,12
	.byte	'R3',0
	.word	147705
	.byte	4,2,35,12,12
	.byte	'R4',0
	.word	147772
	.byte	4,2,35,16,12
	.byte	'R5',0
	.word	147839
	.byte	4,2,35,20,12
	.byte	'R6',0
	.word	147906
	.byte	4,2,35,24,12
	.byte	'R7',0
	.word	147973
	.byte	4,2,35,28,12
	.byte	'CTRL',0
	.word	147001
	.byte	4,2,35,32,12
	.byte	'ACB',0
	.word	146933
	.byte	4,2,35,36,12
	.byte	'CTRG',0
	.word	146793
	.byte	4,2,35,40,12
	.byte	'STRG',0
	.word	146863
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	18300
	.byte	16,2,35,48,12
	.byte	'PC',0
	.word	147437
	.byte	4,2,35,64,12
	.byte	'IRQ_NOTIFY',0
	.word	147362
	.byte	4,2,35,68,12
	.byte	'IRQ_EN',0
	.word	147142
	.byte	4,2,35,72,12
	.byte	'IRQ_FORCINT',0
	.word	147213
	.byte	4,2,35,76,12
	.byte	'IRQ_MODE',0
	.word	147289
	.byte	4,2,35,80,12
	.byte	'EIRQ_EN',0
	.word	147070
	.byte	4,2,35,84,0,18
	.word	156562
	.byte	27
	.byte	'Ifx_GTM_MCS_CH0',0,20,206,57,3
	.word	156862
	.byte	15
	.byte	'_Ifx_GTM_TIM_CH',0,20,209,57,25,120,12
	.byte	'GPR0',0
	.word	151425
	.byte	4,2,35,0,12
	.byte	'GPR1',0
	.word	151494
	.byte	4,2,35,4,12
	.byte	'CNT',0
	.word	150866
	.byte	4,2,35,8,12
	.byte	'ECNT',0
	.word	151072
	.byte	4,2,35,12,12
	.byte	'CNTS',0
	.word	150934
	.byte	4,2,35,16,12
	.byte	'TDUC',0
	.word	151858
	.byte	4,2,35,20,12
	.byte	'TDUV',0
	.word	151927
	.byte	4,2,35,24,12
	.byte	'FLT_RE',0
	.word	151354
	.byte	4,2,35,28,12
	.byte	'FLT_FE',0
	.word	151283
	.byte	4,2,35,32,12
	.byte	'CTRL',0
	.word	151003
	.byte	4,2,35,36,12
	.byte	'ECTRL',0
	.word	151141
	.byte	4,2,35,40,12
	.byte	'IRQ_NOTIFY',0
	.word	151783
	.byte	4,2,35,44,12
	.byte	'IRQ_EN',0
	.word	151563
	.byte	4,2,35,48,12
	.byte	'IRQ_FORCINT',0
	.word	151634
	.byte	4,2,35,52,12
	.byte	'IRQ_MODE',0
	.word	151710
	.byte	4,2,35,56,12
	.byte	'EIRQ_EN',0
	.word	151211
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	19424
	.byte	56,2,35,64,0,18
	.word	156892
	.byte	27
	.byte	'Ifx_GTM_TIM_CH',0,20,228,57,3
	.word	157186
	.byte	15
	.byte	'_Ifx_GTM_TOM_CH',0,20,231,57,25,48,12
	.byte	'CTRL',0
	.word	152333
	.byte	4,2,35,0,12
	.byte	'SR0',0
	.word	152697
	.byte	4,2,35,4,12
	.byte	'SR1',0
	.word	152765
	.byte	4,2,35,8,12
	.byte	'CM0',0
	.word	152129
	.byte	4,2,35,12,12
	.byte	'CM1',0
	.word	152197
	.byte	4,2,35,16,12
	.byte	'CN0',0
	.word	152265
	.byte	4,2,35,20,12
	.byte	'STAT',0
	.word	152833
	.byte	4,2,35,24,12
	.byte	'IRQ_NOTIFY',0
	.word	152622
	.byte	4,2,35,28,12
	.byte	'IRQ_EN',0
	.word	152402
	.byte	4,2,35,32,12
	.byte	'IRQ_FORCINT',0
	.word	152473
	.byte	4,2,35,36,12
	.byte	'IRQ_MODE',0
	.word	152549
	.byte	4,2,35,40,12
	.byte	'reserved_2C',0
	.word	16107
	.byte	4,2,35,44,0,18
	.word	157215
	.byte	27
	.byte	'Ifx_GTM_TOM_CH',0,20,245,57,3
	.word	157427
	.byte	16,128,1
	.word	154181
	.byte	17,7,0,18
	.word	157456
	.byte	15
	.byte	'_Ifx_GTM_AFD',0,20,130,58,25,128,1,12
	.byte	'CH',0
	.word	157466
	.byte	128,1,2,35,0,0,18
	.word	157471
	.byte	27
	.byte	'Ifx_GTM_AFD',0,20,133,58,3
	.word	157505
	.byte	15
	.byte	'_Ifx_GTM_ARU',0,20,136,58,25,52,12
	.byte	'ARU_ACCESS',0
	.word	130354
	.byte	4,2,35,0,12
	.byte	'DATA_H',0
	.word	130426
	.byte	4,2,35,4,12
	.byte	'DATA_L',0
	.word	130494
	.byte	4,2,35,8,12
	.byte	'DBG_ACCESS0',0
	.word	130562
	.byte	4,2,35,12,12
	.byte	'DBG_DATA0_H',0
	.word	130708
	.byte	4,2,35,16,12
	.byte	'DBG_DATA0_L',0
	.word	130781
	.byte	4,2,35,20,12
	.byte	'DBG_ACCESS1',0
	.word	130635
	.byte	4,2,35,24,12
	.byte	'DBG_DATA1_H',0
	.word	130854
	.byte	4,2,35,28,12
	.byte	'DBG_DATA1_L',0
	.word	130927
	.byte	4,2,35,32,12
	.byte	'IRQ_NOTIFY',0
	.word	131211
	.byte	4,2,35,36,12
	.byte	'IRQ_EN',0
	.word	131000
	.byte	4,2,35,40,12
	.byte	'IRQ_FORCINT',0
	.word	131068
	.byte	4,2,35,44,12
	.byte	'IRQ_MODE',0
	.word	131141
	.byte	4,2,35,48,0,18
	.word	157531
	.byte	27
	.byte	'Ifx_GTM_ARU',0,20,151,58,3
	.word	157804
	.byte	18
	.word	154575
	.byte	18
	.word	154270
	.byte	18
	.word	154575
	.byte	16,64
	.word	163
	.byte	17,63,0,18
	.word	154575
	.byte	18
	.word	154575
	.byte	18
	.word	154575
	.byte	18
	.word	154575
	.byte	18
	.word	154575
	.byte	18
	.word	154575
	.byte	16,192,8
	.word	163
	.byte	17,191,8,0,15
	.byte	'_Ifx_GTM_ATOM',0,20,154,58,25,128,16,12
	.byte	'CH0',0
	.word	157830
	.byte	64,2,35,0,12
	.byte	'AGC',0
	.word	157835
	.byte	64,2,35,64,12
	.byte	'CH1',0
	.word	157840
	.byte	64,3,35,128,1,12
	.byte	'reserved_C0',0
	.word	157845
	.byte	64,3,35,192,1,12
	.byte	'CH2',0
	.word	157854
	.byte	64,3,35,128,2,12
	.byte	'reserved_140',0
	.word	157845
	.byte	64,3,35,192,2,12
	.byte	'CH3',0
	.word	157859
	.byte	64,3,35,128,3,12
	.byte	'reserved_1C0',0
	.word	157845
	.byte	64,3,35,192,3,12
	.byte	'CH4',0
	.word	157864
	.byte	64,3,35,128,4,12
	.byte	'reserved_240',0
	.word	157845
	.byte	64,3,35,192,4,12
	.byte	'CH5',0
	.word	157869
	.byte	64,3,35,128,5,12
	.byte	'reserved_2C0',0
	.word	157845
	.byte	64,3,35,192,5,12
	.byte	'CH6',0
	.word	157874
	.byte	64,3,35,128,6,12
	.byte	'reserved_340',0
	.word	157845
	.byte	64,3,35,192,6,12
	.byte	'CH7',0
	.word	157879
	.byte	64,3,35,128,7,12
	.byte	'reserved_3C0',0
	.word	157884
	.byte	192,8,3,35,192,7,0,18
	.word	157895
	.byte	27
	.byte	'Ifx_GTM_ATOM',0,20,172,58,3
	.word	158202
	.byte	15
	.byte	'_Ifx_GTM_BRC',0,20,175,58,25,120,12
	.byte	'SRC0_ADDR',0
	.word	133443
	.byte	4,2,35,0,12
	.byte	'SRC0_DEST',0
	.word	133514
	.byte	4,2,35,4,12
	.byte	'SRC1_ADDR',0
	.word	133873
	.byte	4,2,35,8,12
	.byte	'SRC1_DEST',0
	.word	133944
	.byte	4,2,35,12,12
	.byte	'SRC2_ADDR',0
	.word	134015
	.byte	4,2,35,16,12
	.byte	'SRC2_DEST',0
	.word	134086
	.byte	4,2,35,20,12
	.byte	'SRC3_ADDR',0
	.word	134157
	.byte	4,2,35,24,12
	.byte	'SRC3_DEST',0
	.word	134228
	.byte	4,2,35,28,12
	.byte	'SRC4_ADDR',0
	.word	134299
	.byte	4,2,35,32,12
	.byte	'SRC4_DEST',0
	.word	134370
	.byte	4,2,35,36,12
	.byte	'SRC5_ADDR',0
	.word	134441
	.byte	4,2,35,40,12
	.byte	'SRC5_DEST',0
	.word	134512
	.byte	4,2,35,44,12
	.byte	'SRC6_ADDR',0
	.word	134583
	.byte	4,2,35,48,12
	.byte	'SRC6_DEST',0
	.word	134654
	.byte	4,2,35,52,12
	.byte	'SRC7_ADDR',0
	.word	134725
	.byte	4,2,35,56,12
	.byte	'SRC7_DEST',0
	.word	134796
	.byte	4,2,35,60,12
	.byte	'SRC8_ADDR',0
	.word	134867
	.byte	4,2,35,64,12
	.byte	'SRC8_DEST',0
	.word	134938
	.byte	4,2,35,68,12
	.byte	'SRC9_ADDR',0
	.word	135009
	.byte	4,2,35,72,12
	.byte	'SRC9_DEST',0
	.word	135080
	.byte	4,2,35,76,12
	.byte	'SRC10_ADDR',0
	.word	133585
	.byte	4,2,35,80,12
	.byte	'SRC10_DEST',0
	.word	133657
	.byte	4,2,35,84,12
	.byte	'SRC11_ADDR',0
	.word	133729
	.byte	4,2,35,88,12
	.byte	'SRC11_DEST',0
	.word	133801
	.byte	4,2,35,92,12
	.byte	'IRQ_NOTIFY',0
	.word	133306
	.byte	4,2,35,96,12
	.byte	'IRQ_EN',0
	.word	133095
	.byte	4,2,35,100,12
	.byte	'IRQ_FORCINT',0
	.word	133163
	.byte	4,2,35,104,12
	.byte	'IRQ_MODE',0
	.word	133236
	.byte	4,2,35,108,12
	.byte	'RST',0
	.word	133378
	.byte	4,2,35,112,12
	.byte	'EIRQ_EN',0
	.word	133026
	.byte	4,2,35,116,0,18
	.word	158229
	.byte	27
	.byte	'Ifx_GTM_BRC',0,20,207,58,3
	.word	158814
	.byte	15
	.byte	'_Ifx_GTM_BRIDGE',0,20,210,58,25,12,12
	.byte	'MODE',0
	.word	135151
	.byte	4,2,35,0,12
	.byte	'PTR1',0
	.word	135220
	.byte	4,2,35,4,12
	.byte	'PTR2',0
	.word	135289
	.byte	4,2,35,8,0,18
	.word	158840
	.byte	27
	.byte	'Ifx_GTM_BRIDGE',0,20,215,58,3
	.word	158905
	.byte	15
	.byte	'_Ifx_GTM_CMP',0,20,218,58,25,24,12
	.byte	'EN',0
	.word	135488
	.byte	4,2,35,0,12
	.byte	'IRQ_NOTIFY',0
	.word	135763
	.byte	4,2,35,4,12
	.byte	'IRQ_EN',0
	.word	135552
	.byte	4,2,35,8,12
	.byte	'IRQ_FORCINT',0
	.word	135620
	.byte	4,2,35,12,12
	.byte	'IRQ_MODE',0
	.word	135693
	.byte	4,2,35,16,12
	.byte	'EIRQ_EN',0
	.word	135419
	.byte	4,2,35,20,0,18
	.word	158934
	.byte	27
	.byte	'Ifx_GTM_CMP',0,20,226,58,3
	.word	159058
	.byte	16,24
	.word	154829
	.byte	17,5,0,18
	.word	159084
	.byte	18
	.word	154903
	.byte	18
	.word	154975
	.byte	16,24
	.word	155047
	.byte	17,2,0,18
	.word	159108
	.byte	18
	.word	155129
	.byte	15
	.byte	'_Ifx_GTM_CMU',0,20,229,58,25,72,12
	.byte	'CLK_EN',0
	.word	136052
	.byte	4,2,35,0,12
	.byte	'GCLK_NUM',0
	.word	136402
	.byte	4,2,35,4,12
	.byte	'GCLK_DEN',0
	.word	136332
	.byte	4,2,35,8,12
	.byte	'CLK0_5',0
	.word	159093
	.byte	24,2,35,12,12
	.byte	'CLK_6',0
	.word	159098
	.byte	4,2,35,36,12
	.byte	'CLK_7',0
	.word	159103
	.byte	4,2,35,40,12
	.byte	'ECLK',0
	.word	159117
	.byte	24,2,35,44,12
	.byte	'FXCLK',0
	.word	159122
	.byte	4,2,35,68,0,18
	.word	159127
	.byte	27
	.byte	'Ifx_GTM_CMU',0,20,239,58,3
	.word	159274
	.byte	16,92
	.word	163
	.byte	17,91,0,16,44
	.word	163
	.byte	17,43,0,16,96
	.word	139364
	.byte	17,23,0,16,128,1
	.word	163
	.byte	17,127,0,16,96
	.word	141108
	.byte	17,23,0,16,96
	.word	138681
	.byte	17,23,0,16,96
	.word	140273
	.byte	17,23,0,16,96
	.word	138956
	.byte	17,23,0,16,96
	.word	141040
	.byte	17,23,0,16,128,2
	.word	142075
	.byte	17,63,0,16,128,2
	.word	143311
	.byte	17,63,0,16,128,2
	.word	137028
	.byte	17,63,0,16,128,2
	.word	138747
	.byte	17,63,0,16,128,8
	.word	163
	.byte	17,255,7,0,16,96
	.word	143244
	.byte	17,23,0,16,96
	.word	141174
	.byte	17,23,0,16,24
	.word	136598
	.byte	17,5,0,15
	.byte	'_Ifx_GTM_DPLL',0,20,242,58,25,152,30,12
	.byte	'CTRL_0',0
	.word	138086
	.byte	4,2,35,0,12
	.byte	'CTRL_1',0
	.word	138321
	.byte	4,2,35,4,12
	.byte	'CTRL_2',0
	.word	138474
	.byte	4,2,35,8,12
	.byte	'CTRL_3',0
	.word	138543
	.byte	4,2,35,12,12
	.byte	'CTRL_4',0
	.word	138612
	.byte	4,2,35,16,12
	.byte	'reserved_14',0
	.word	16107
	.byte	4,2,35,20,12
	.byte	'ACT_STA',0
	.word	136664
	.byte	4,2,35,24,12
	.byte	'OSW',0
	.word	140974
	.byte	4,2,35,28,12
	.byte	'AOSV_2',0
	.word	137096
	.byte	4,2,35,32,12
	.byte	'APT',0
	.word	137372
	.byte	4,2,35,36,12
	.byte	'APS',0
	.word	137165
	.byte	4,2,35,40,12
	.byte	'APT_2C',0
	.word	137438
	.byte	4,2,35,44,12
	.byte	'APS_1C3',0
	.word	137231
	.byte	4,2,35,48,12
	.byte	'NUTC',0
	.word	140907
	.byte	4,2,35,52,12
	.byte	'NUSC',0
	.word	140840
	.byte	4,2,35,56,12
	.byte	'NTI_CNT',0
	.word	140770
	.byte	4,2,35,60,12
	.byte	'IRQ_NOTIFY',0
	.word	139790
	.byte	4,2,35,64,12
	.byte	'IRQ_EN',0
	.word	139576
	.byte	4,2,35,68,12
	.byte	'IRQ_FORCINT',0
	.word	139645
	.byte	4,2,35,72,12
	.byte	'IRQ_MODE',0
	.word	139719
	.byte	4,2,35,76,12
	.byte	'EIRQ_EN',0
	.word	139158
	.byte	4,2,35,80,12
	.byte	'reserved_54',0
	.word	159300
	.byte	92,2,35,84,12
	.byte	'INC_CNT1',0
	.word	139434
	.byte	4,3,35,176,1,12
	.byte	'INC_CNT2',0
	.word	139505
	.byte	4,3,35,180,1,12
	.byte	'APT_SYNC',0
	.word	137507
	.byte	4,3,35,184,1,12
	.byte	'APS_SYNC',0
	.word	137301
	.byte	4,3,35,188,1,12
	.byte	'TBU_TS0_T',0
	.word	142494
	.byte	4,3,35,192,1,12
	.byte	'TBU_TS0_S',0
	.word	142422
	.byte	4,3,35,196,1,12
	.byte	'ADD_IN_LD1',0
	.word	136882
	.byte	4,3,35,200,1,12
	.byte	'ADD_IN_LD2',0
	.word	136955
	.byte	4,3,35,204,1,12
	.byte	'reserved_D0',0
	.word	159309
	.byte	44,3,35,208,1,12
	.byte	'STATUS',0
	.word	142353
	.byte	4,3,35,252,1,12
	.byte	'ID_PMTR',0
	.word	159318
	.byte	96,3,35,128,2,12
	.byte	'reserved_160',0
	.word	159327
	.byte	128,1,3,35,224,2,12
	.byte	'CTRL_0_SHADOW_TRIGGER',0
	.word	138237
	.byte	4,3,35,224,3,12
	.byte	'CTRL_0_SHADOW_STATE',0
	.word	138155
	.byte	4,3,35,228,3,12
	.byte	'CTRL_1_SHADOW_TRIGGER',0
	.word	138390
	.byte	4,3,35,232,3,12
	.byte	'CRTL_1_SHADOW_STATE',0
	.word	138004
	.byte	4,3,35,236,3,12
	.byte	'reserved_1F0',0
	.word	17782
	.byte	12,3,35,240,3,12
	.byte	'RAM_INI',0
	.word	141717
	.byte	4,3,35,252,3,12
	.byte	'PSA',0
	.word	159337
	.byte	96,3,35,128,4,12
	.byte	'reserved_260',0
	.word	16145
	.byte	32,3,35,224,4,12
	.byte	'DLA',0
	.word	159346
	.byte	96,3,35,128,5,12
	.byte	'reserved_2E0',0
	.word	16145
	.byte	32,3,35,224,5,12
	.byte	'NA',0
	.word	159355
	.byte	96,3,35,128,6,12
	.byte	'reserved_360',0
	.word	16145
	.byte	32,3,35,224,6,12
	.byte	'DTA',0
	.word	159364
	.byte	96,3,35,128,7,12
	.byte	'reserved_3E0',0
	.word	16145
	.byte	32,3,35,224,7,12
	.byte	'TS_T_0',0
	.word	143106
	.byte	4,3,35,128,8,12
	.byte	'TS_T_1',0
	.word	143175
	.byte	4,3,35,132,8,12
	.byte	'FTV_T',0
	.word	139296
	.byte	4,3,35,136,8,12
	.byte	'reserved_40C',0
	.word	16107
	.byte	4,3,35,140,8,12
	.byte	'TS_S_0',0
	.word	142968
	.byte	4,3,35,144,8,12
	.byte	'TS_S_1',0
	.word	143037
	.byte	4,3,35,148,8,12
	.byte	'FTV_S',0
	.word	139228
	.byte	4,3,35,152,8,12
	.byte	'reserved_41C',0
	.word	16107
	.byte	4,3,35,156,8,12
	.byte	'THMI',0
	.word	142633
	.byte	4,3,35,160,8,12
	.byte	'THMA',0
	.word	142566
	.byte	4,3,35,164,8,12
	.byte	'THVAL',0
	.word	142700
	.byte	4,3,35,168,8,12
	.byte	'reserved_42C',0
	.word	16107
	.byte	4,3,35,172,8,12
	.byte	'TOV',0
	.word	142834
	.byte	4,3,35,176,8,12
	.byte	'TOV_S',0
	.word	142900
	.byte	4,3,35,180,8,12
	.byte	'ADD_IN_CAL1',0
	.word	136734
	.byte	4,3,35,184,8,12
	.byte	'ADD_IN_CAL2',0
	.word	136808
	.byte	4,3,35,188,8,12
	.byte	'MPVAL1',0
	.word	140135
	.byte	4,3,35,192,8,12
	.byte	'MPVAL2',0
	.word	140204
	.byte	4,3,35,196,8,12
	.byte	'NMB_T_TAR',0
	.word	140622
	.byte	4,3,35,200,8,12
	.byte	'NMB_T_TAR_OLD',0
	.word	140694
	.byte	4,3,35,204,8,12
	.byte	'NMB_S_TAR',0
	.word	140406
	.byte	4,3,35,208,8,12
	.byte	'NMB_S_TAR_OLD',0
	.word	140478
	.byte	4,3,35,212,8,12
	.byte	'reserved_458',0
	.word	15814
	.byte	8,3,35,216,8,12
	.byte	'RCDT_TX',0
	.word	141931
	.byte	4,3,35,224,8,12
	.byte	'RCDT_SX',0
	.word	141787
	.byte	4,3,35,228,8,12
	.byte	'RCDT_TX_NOM',0
	.word	142001
	.byte	4,3,35,232,8,12
	.byte	'RCDT_SX_NOM',0
	.word	141857
	.byte	4,3,35,236,8,12
	.byte	'RDT_T_ACT',0
	.word	142215
	.byte	4,3,35,240,8,12
	.byte	'RDT_S_ACT',0
	.word	142143
	.byte	4,3,35,244,8,12
	.byte	'DT_T_ACT',0
	.word	138885
	.byte	4,3,35,248,8,12
	.byte	'DT_S_ACT',0
	.word	138814
	.byte	4,3,35,252,8,12
	.byte	'EDT_T',0
	.word	139090
	.byte	4,3,35,128,9,12
	.byte	'MEDT_T',0
	.word	139932
	.byte	4,3,35,132,9,12
	.byte	'EDT_S',0
	.word	139022
	.byte	4,3,35,136,9,12
	.byte	'MEDT_S',0
	.word	139863
	.byte	4,3,35,140,9,12
	.byte	'CDT_TX',0
	.word	137720
	.byte	4,3,35,144,9,12
	.byte	'CDT_SX',0
	.word	137578
	.byte	4,3,35,148,9,12
	.byte	'CDT_TX_NOM',0
	.word	137789
	.byte	4,3,35,152,9,12
	.byte	'CDT_SX_NOM',0
	.word	137647
	.byte	4,3,35,156,9,12
	.byte	'TLR',0
	.word	142768
	.byte	4,3,35,160,9,12
	.byte	'SLR',0
	.word	142287
	.byte	4,3,35,164,9,12
	.byte	'reserved_4A8',0
	.word	18611
	.byte	88,3,35,168,9,12
	.byte	'PDT_T',0
	.word	159373
	.byte	96,3,35,128,10,12
	.byte	'reserved_560',0
	.word	18629
	.byte	96,3,35,224,10,12
	.byte	'MLS1',0
	.word	140001
	.byte	4,3,35,192,11,12
	.byte	'MLS2',0
	.word	140068
	.byte	4,3,35,196,11,12
	.byte	'CNT_NUM1',0
	.word	137862
	.byte	4,3,35,200,11,12
	.byte	'CNT_NUM2',0
	.word	137933
	.byte	4,3,35,204,11,12
	.byte	'PVT',0
	.word	141651
	.byte	4,3,35,208,11,12
	.byte	'reserved_5D4',0
	.word	17782
	.byte	12,3,35,212,11,12
	.byte	'PSTC',0
	.word	141446
	.byte	4,3,35,224,11,12
	.byte	'PSSC',0
	.word	141241
	.byte	4,3,35,228,11,12
	.byte	'PSTM_0',0
	.word	141513
	.byte	4,3,35,232,11,12
	.byte	'PSTM_1',0
	.word	141582
	.byte	4,3,35,236,11,12
	.byte	'PSSM_0',0
	.word	141308
	.byte	4,3,35,240,11,12
	.byte	'PSSM_1',0
	.word	141377
	.byte	4,3,35,244,11,12
	.byte	'NMB_T',0
	.word	140554
	.byte	4,3,35,248,11,12
	.byte	'NMB_S',0
	.word	140338
	.byte	4,3,35,252,11,12
	.byte	'RDT_S',0
	.word	159382
	.byte	128,2,3,35,128,12,12
	.byte	'TSF_S',0
	.word	159392
	.byte	128,2,3,35,128,14,12
	.byte	'ADT_S',0
	.word	159402
	.byte	128,2,3,35,128,16,12
	.byte	'DT_S',0
	.word	159412
	.byte	128,2,3,35,128,18,12
	.byte	'reserved_A00',0
	.word	159422
	.byte	128,8,3,35,128,20,12
	.byte	'TSAC',0
	.word	159433
	.byte	96,3,35,128,28,12
	.byte	'reserved_E60',0
	.word	16145
	.byte	32,3,35,224,28,12
	.byte	'PSAC',0
	.word	159442
	.byte	96,3,35,128,29,12
	.byte	'reserved_EE0',0
	.word	16145
	.byte	32,3,35,224,29,12
	.byte	'ACB',0
	.word	159451
	.byte	24,3,35,128,30,0,18
	.word	159460
	.byte	27
	.byte	'Ifx_GTM_DPLL',0,20,232,59,3
	.word	161637
	.byte	16,32
	.word	155201
	.byte	17,7,0,18
	.word	161664
	.byte	16,32
	.word	155280
	.byte	17,7,0,18
	.word	161678
	.byte	15
	.byte	'_Ifx_GTM_F2A',0,20,235,59,25,68,12
	.byte	'RD_CH',0
	.word	161673
	.byte	32,2,35,0,12
	.byte	'STR_CH',0
	.word	161687
	.byte	32,2,35,32,12
	.byte	'ENABLE',0
	.word	143575
	.byte	4,2,35,64,0,18
	.word	161692
	.byte	27
	.byte	'Ifx_GTM_F2A',0,20,240,59,3
	.word	161759
	.byte	16,128,4
	.word	155357
	.byte	17,7,0,18
	.word	161785
	.byte	15
	.byte	'_Ifx_GTM_FIFO',0,20,243,59,25,128,4,12
	.byte	'CH',0
	.word	161795
	.byte	128,4,2,35,0,0,18
	.word	161800
	.byte	27
	.byte	'Ifx_GTM_FIFO',0,20,246,59,3
	.word	161835
	.byte	15
	.byte	'_Ifx_GTM_ICM',0,20,249,59,25,68,12
	.byte	'IRQG_0',0
	.word	144830
	.byte	4,2,35,0,12
	.byte	'IRQG_1',0
	.word	144898
	.byte	4,2,35,4,12
	.byte	'IRQG_2',0
	.word	145035
	.byte	4,2,35,8,12
	.byte	'reserved_C',0
	.word	16107
	.byte	4,2,35,12,12
	.byte	'IRQG_4',0
	.word	145103
	.byte	4,2,35,16,12
	.byte	'reserved_14',0
	.word	16107
	.byte	4,2,35,20,12
	.byte	'IRQG_6',0
	.word	145171
	.byte	4,2,35,24,12
	.byte	'IRQG_7',0
	.word	145239
	.byte	4,2,35,28,12
	.byte	'reserved_20',0
	.word	16107
	.byte	4,2,35,32,12
	.byte	'IRQG_9',0
	.word	145307
	.byte	4,2,35,36,12
	.byte	'IRQG_10',0
	.word	144966
	.byte	4,2,35,40,12
	.byte	'reserved_2C',0
	.word	16107
	.byte	4,2,35,44,12
	.byte	'IRQG_MEI',0
	.word	145588
	.byte	4,2,35,48,12
	.byte	'IRQG_CEI0',0
	.word	145375
	.byte	4,2,35,52,12
	.byte	'IRQG_CEI1',0
	.word	145446
	.byte	4,2,35,56,12
	.byte	'reserved_3C',0
	.word	16107
	.byte	4,2,35,60,12
	.byte	'IRQG_CEI3',0
	.word	145517
	.byte	4,2,35,64,0,18
	.word	161862
	.byte	27
	.byte	'Ifx_GTM_ICM',0,20,140,60,3
	.word	162190
	.byte	16,16
	.word	156161
	.byte	17,3,0,18
	.word	162216
	.byte	18
	.word	156085
	.byte	18
	.word	155769
	.byte	18
	.word	155680
	.byte	18
	.word	155909
	.byte	18
	.word	155992
	.byte	15
	.byte	'_Ifx_GTM_INOUTSEL',0,20,143,60,25,156,1,12
	.byte	'TIM',0
	.word	162225
	.byte	16,2,35,0,12
	.byte	'reserved_10',0
	.word	18300
	.byte	16,2,35,16,12
	.byte	'T',0
	.word	162230
	.byte	60,2,35,32,12
	.byte	'reserved_5C',0
	.word	18300
	.byte	16,2,35,92,12
	.byte	'DSADC',0
	.word	162235
	.byte	24,2,35,108,12
	.byte	'reserved_84',0
	.word	17782
	.byte	12,3,35,132,1,12
	.byte	'CAN',0
	.word	162240
	.byte	4,3,35,144,1,12
	.byte	'PSI5',0
	.word	162245
	.byte	4,3,35,148,1,12
	.byte	'PSI5S',0
	.word	162250
	.byte	4,3,35,152,1,0,18
	.word	162255
	.byte	27
	.byte	'Ifx_GTM_INOUTSEL',0,20,154,60,3
	.word	162429
	.byte	18
	.word	156562
	.byte	16,28
	.word	163
	.byte	17,27,0,18
	.word	156240
	.byte	18
	.word	156240
	.byte	18
	.word	156240
	.byte	18
	.word	156240
	.byte	18
	.word	156240
	.byte	18
	.word	156240
	.byte	18
	.word	156240
	.byte	16,128,24
	.word	163
	.byte	17,255,23,0,15
	.byte	'_Ifx_GTM_MCS',0,20,157,60,25,128,32,12
	.byte	'CH0',0
	.word	162460
	.byte	88,2,35,0,12
	.byte	'reserved_58',0
	.word	162465
	.byte	28,2,35,88,12
	.byte	'CTRL',0
	.word	148040
	.byte	4,2,35,116,12
	.byte	'RST',0
	.word	148171
	.byte	4,2,35,120,12
	.byte	'ERR',0
	.word	148106
	.byte	4,2,35,124,12
	.byte	'CH1',0
	.word	162474
	.byte	128,1,3,35,128,1,12
	.byte	'CH2',0
	.word	162479
	.byte	128,1,3,35,128,2,12
	.byte	'CH3',0
	.word	162484
	.byte	128,1,3,35,128,3,12
	.byte	'CH4',0
	.word	162489
	.byte	128,1,3,35,128,4,12
	.byte	'CH5',0
	.word	162494
	.byte	128,1,3,35,128,5,12
	.byte	'CH6',0
	.word	162499
	.byte	128,1,3,35,128,6,12
	.byte	'CH7',0
	.word	162504
	.byte	128,1,3,35,128,7,12
	.byte	'reserved_400',0
	.word	162509
	.byte	128,24,3,35,128,8,0,18
	.word	162520
	.byte	27
	.byte	'Ifx_GTM_MCS',0,20,172,60,3
	.word	162744
	.byte	15
	.byte	'_Ifx_GTM_MON',0,20,175,60,25,8,12
	.byte	'STATUS',0
	.word	148443
	.byte	4,2,35,0,12
	.byte	'ACTIVITY_0',0
	.word	148371
	.byte	4,2,35,4,0,18
	.word	162770
	.byte	27
	.byte	'Ifx_GTM_MON',0,20,179,60,3
	.word	162826
	.byte	15
	.byte	'_Ifx_GTM_MSCIN',0,20,182,60,25,8,12
	.byte	'INLCON',0
	.word	148581
	.byte	4,2,35,0,12
	.byte	'INHCON',0
	.word	148511
	.byte	4,2,35,4,0,18
	.word	162852
	.byte	27
	.byte	'Ifx_GTM_MSCIN',0,20,186,60,3
	.word	162906
	.byte	15
	.byte	'_Ifx_GTM_MSCSET',0,20,189,60,25,16,12
	.byte	'CON0',0
	.word	148651
	.byte	4,2,35,0,12
	.byte	'CON1',0
	.word	148720
	.byte	4,2,35,4,12
	.byte	'CON2',0
	.word	148789
	.byte	4,2,35,8,12
	.byte	'CON3',0
	.word	148858
	.byte	4,2,35,12,0,18
	.word	162934
	.byte	27
	.byte	'Ifx_GTM_MSCSET',0,20,195,60,3
	.word	163013
	.byte	16,32
	.word	150174
	.byte	17,7,0,15
	.byte	'_Ifx_GTM_SPE',0,20,198,60,25,128,1,12
	.byte	'CTRL_STAT',0
	.word	149681
	.byte	4,2,35,0,12
	.byte	'PAT',0
	.word	150243
	.byte	4,2,35,4,12
	.byte	'OUT_PAT',0
	.word	163042
	.byte	32,2,35,8,12
	.byte	'OUT_CTRL',0
	.word	150104
	.byte	4,2,35,40,12
	.byte	'IRQ_NOTIFY',0
	.word	150032
	.byte	4,2,35,44,12
	.byte	'IRQ_EN',0
	.word	149821
	.byte	4,2,35,48,12
	.byte	'IRQ_FORCINT',0
	.word	149889
	.byte	4,2,35,52,12
	.byte	'IRQ_MODE',0
	.word	149962
	.byte	4,2,35,56,12
	.byte	'EIRQ_EN',0
	.word	149752
	.byte	4,2,35,60,12
	.byte	'CNT',0
	.word	149616
	.byte	4,2,35,64,12
	.byte	'CMP',0
	.word	149551
	.byte	4,2,35,68,12
	.byte	'reserved_48',0
	.word	19424
	.byte	56,2,35,72,0,18
	.word	163051
	.byte	27
	.byte	'Ifx_GTM_SPE',0,20,212,60,3
	.word	163278
	.byte	15
	.byte	'_Ifx_GTM_TBU',0,20,215,60,25,28,12
	.byte	'CHEN',0
	.word	150728
	.byte	4,2,35,0,12
	.byte	'CH0_CTRL',0
	.word	150378
	.byte	4,2,35,4,12
	.byte	'CH0_BASE',0
	.word	150308
	.byte	4,2,35,8,12
	.byte	'CH1_CTRL',0
	.word	150518
	.byte	4,2,35,12,12
	.byte	'CH1_BASE',0
	.word	150448
	.byte	4,2,35,16,12
	.byte	'CH2_CTRL',0
	.word	150658
	.byte	4,2,35,20,12
	.byte	'CH2_BASE',0
	.word	150588
	.byte	4,2,35,24,0,18
	.word	163304
	.byte	27
	.byte	'Ifx_GTM_TBU',0,20,224,60,3
	.word	163446
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	18
	.word	156892
	.byte	16,136,8
	.word	163
	.byte	17,135,8,0,15
	.byte	'_Ifx_GTM_TIM',0,20,227,60,25,128,16,12
	.byte	'CH0',0
	.word	163472
	.byte	120,2,35,0,12
	.byte	'IN_SRC',0
	.word	151996
	.byte	4,2,35,120,12
	.byte	'RST',0
	.word	152064
	.byte	4,2,35,124,12
	.byte	'CH1',0
	.word	163477
	.byte	120,3,35,128,1,12
	.byte	'reserved_F8',0
	.word	15814
	.byte	8,3,35,248,1,12
	.byte	'CH2',0
	.word	163482
	.byte	120,3,35,128,2,12
	.byte	'reserved_178',0
	.word	15814
	.byte	8,3,35,248,2,12
	.byte	'CH3',0
	.word	163487
	.byte	120,3,35,128,3,12
	.byte	'reserved_1F8',0
	.word	15814
	.byte	8,3,35,248,3,12
	.byte	'CH4',0
	.word	163492
	.byte	120,3,35,128,4,12
	.byte	'reserved_278',0
	.word	15814
	.byte	8,3,35,248,4,12
	.byte	'CH5',0
	.word	163497
	.byte	120,3,35,128,5,12
	.byte	'reserved_2F8',0
	.word	15814
	.byte	8,3,35,248,5,12
	.byte	'CH6',0
	.word	163502
	.byte	120,3,35,128,6,12
	.byte	'reserved_378',0
	.word	15814
	.byte	8,3,35,248,6,12
	.byte	'CH7',0
	.word	163507
	.byte	120,3,35,128,7,12
	.byte	'reserved_3F8',0
	.word	163512
	.byte	136,8,3,35,248,7,0,18
	.word	163523
	.byte	27
	.byte	'Ifx_GTM_TIM',0,20,246,60,3
	.word	163845
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	18
	.word	157215
	.byte	16,144,8
	.word	163
	.byte	17,143,8,0,15
	.byte	'_Ifx_GTM_TOM',0,20,249,60,25,128,16,12
	.byte	'CH0',0
	.word	163871
	.byte	48,2,35,0,12
	.byte	'TGC0_GLB_CTRL',0
	.word	153205
	.byte	4,2,35,48,12
	.byte	'TGC0_ACT_TB',0
	.word	152902
	.byte	4,2,35,52,12
	.byte	'TGC0_FUPD_CTRL',0
	.word	153129
	.byte	4,2,35,56,12
	.byte	'TGC0_INT_TRIG',0
	.word	153280
	.byte	4,2,35,60,12
	.byte	'CH1',0
	.word	163876
	.byte	48,2,35,64,12
	.byte	'TGC0_ENDIS_CTRL',0
	.word	152975
	.byte	4,2,35,112,12
	.byte	'TGC0_ENDIS_STAT',0
	.word	153052
	.byte	4,2,35,116,12
	.byte	'TGC0_OUTEN_CTRL',0
	.word	153355
	.byte	4,2,35,120,12
	.byte	'TGC0_OUTEN_STAT',0
	.word	153432
	.byte	4,2,35,124,12
	.byte	'CH2',0
	.word	163881
	.byte	48,3,35,128,1,12
	.byte	'reserved_B0',0
	.word	18300
	.byte	16,3,35,176,1,12
	.byte	'CH3',0
	.word	163886
	.byte	48,3,35,192,1,12
	.byte	'reserved_F0',0
	.word	18300
	.byte	16,3,35,240,1,12
	.byte	'CH4',0
	.word	163891
	.byte	48,3,35,128,2,12
	.byte	'reserved_130',0
	.word	18300
	.byte	16,3,35,176,2,12
	.byte	'CH5',0
	.word	163896
	.byte	48,3,35,192,2,12
	.byte	'reserved_170',0
	.word	18300
	.byte	16,3,35,240,2,12
	.byte	'CH6',0
	.word	163901
	.byte	48,3,35,128,3,12
	.byte	'reserved_1B0',0
	.word	18300
	.byte	16,3,35,176,3,12
	.byte	'CH7',0
	.word	163906
	.byte	48,3,35,192,3,12
	.byte	'reserved_1F0',0
	.word	18300
	.byte	16,3,35,240,3,12
	.byte	'CH8',0
	.word	163911
	.byte	48,3,35,128,4,12
	.byte	'TGC1_GLB_CTRL',0
	.word	153812
	.byte	4,3,35,176,4,12
	.byte	'TGC1_ACT_TB',0
	.word	153509
	.byte	4,3,35,180,4,12
	.byte	'TGC1_FUPD_CTRL',0
	.word	153736
	.byte	4,3,35,184,4,12
	.byte	'TGC1_INT_TRIG',0
	.word	153887
	.byte	4,3,35,188,4,12
	.byte	'CH9',0
	.word	163916
	.byte	48,3,35,192,4,12
	.byte	'TGC1_ENDIS_CTRL',0
	.word	153582
	.byte	4,3,35,240,4,12
	.byte	'TGC1_ENDIS_STAT',0
	.word	153659
	.byte	4,3,35,244,4,12
	.byte	'TGC1_OUTEN_CTRL',0
	.word	153962
	.byte	4,3,35,248,4,12
	.byte	'TGC1_OUTEN_STAT',0
	.word	154039
	.byte	4,3,35,252,4,12
	.byte	'CH10',0
	.word	163921
	.byte	48,3,35,128,5,12
	.byte	'reserved_2B0',0
	.word	18300
	.byte	16,3,35,176,5,12
	.byte	'CH11',0
	.word	163926
	.byte	48,3,35,192,5,12
	.byte	'reserved_2F0',0
	.word	18300
	.byte	16,3,35,240,5,12
	.byte	'CH12',0
	.word	163931
	.byte	48,3,35,128,6,12
	.byte	'reserved_330',0
	.word	18300
	.byte	16,3,35,176,6,12
	.byte	'CH13',0
	.word	163936
	.byte	48,3,35,192,6,12
	.byte	'reserved_370',0
	.word	18300
	.byte	16,3,35,240,6,12
	.byte	'CH14',0
	.word	163941
	.byte	48,3,35,128,7,12
	.byte	'reserved_3B0',0
	.word	18300
	.byte	16,3,35,176,7,12
	.byte	'CH15',0
	.word	163946
	.byte	48,3,35,192,7,12
	.byte	'reserved_3F0',0
	.word	163951
	.byte	144,8,3,35,240,7,0,18
	.word	163962
	.byte	27
	.byte	'Ifx_GTM_TOM',0,20,167,61,3
	.word	164876
	.byte	16,20
	.word	163
	.byte	17,19,0,11,1,192,4,20,64,12
	.byte	'CTRL',0
	.word	152333
	.byte	4,2,35,0,12
	.byte	'SR0',0
	.word	152697
	.byte	4,2,35,4,12
	.byte	'SR1',0
	.word	152765
	.byte	4,2,35,8,12
	.byte	'CM0',0
	.word	152129
	.byte	4,2,35,12,12
	.byte	'CM1',0
	.word	152197
	.byte	4,2,35,16,12
	.byte	'CN0',0
	.word	152265
	.byte	4,2,35,20,12
	.byte	'STAT',0
	.word	152833
	.byte	4,2,35,24,12
	.byte	'IRQ_NOTIFY',0
	.word	152622
	.byte	4,2,35,28,12
	.byte	'IRQ_EN',0
	.word	152402
	.byte	4,2,35,32,12
	.byte	'IRQ_FORCINT',0
	.word	152473
	.byte	4,2,35,36,12
	.byte	'IRQ_MODE',0
	.word	152549
	.byte	4,2,35,40,12
	.byte	'reserved_2C',0
	.word	164902
	.byte	20,2,35,44,0,18
	.word	164911
	.byte	27
	.byte	'Ifx_GTM_TOM_CH_TYPE',0,1,217,4,4
	.word	165107
	.byte	16,48
	.word	163
	.byte	17,47,0,16,176,3
	.word	163
	.byte	17,175,3,0,11,1,219,4,20,128,4,12
	.byte	'GLB_CTRL',0
	.word	153205
	.byte	4,2,35,0,12
	.byte	'ACT_TB',0
	.word	152902
	.byte	4,2,35,4,12
	.byte	'FUPD_CTRL',0
	.word	153129
	.byte	4,2,35,8,12
	.byte	'INT_TRIG',0
	.word	153280
	.byte	4,2,35,12,12
	.byte	'reserved_tgc0',0
	.word	165141
	.byte	48,2,35,16,12
	.byte	'ENDIS_CTRL',0
	.word	152975
	.byte	4,2,35,64,12
	.byte	'ENDIS_STAT',0
	.word	153052
	.byte	4,2,35,68,12
	.byte	'OUTEN_CTRL',0
	.word	153355
	.byte	4,2,35,72,12
	.byte	'OUTEN_STAT',0
	.word	153432
	.byte	4,2,35,76,12
	.byte	'reserved_tgc1',0
	.word	165150
	.byte	176,3,2,35,80,0,18
	.word	165161
	.byte	27
	.byte	'Ifx_GTM_TOM_TGC_TYPE',0,1,239,4,5
	.word	165367
	.byte	16,128,8
	.word	165161
	.byte	17,1,0,18
	.word	165402
	.byte	16,208,7
	.word	163
	.byte	17,207,7,0,11,1,241,4,20,128,16,12
	.byte	'reserved_tom0',0
	.word	165141
	.byte	48,2,35,0,12
	.byte	'TGC',0
	.word	165412
	.byte	128,8,2,35,48,12
	.byte	'reserved_tgc2',0
	.word	165417
	.byte	208,7,3,35,176,8,0,18
	.word	165428
	.byte	27
	.byte	'Ifx_GTM_TOM_TGCx',0,1,246,4,5
	.word	165498
	.byte	16,128,8
	.word	164911
	.byte	17,15,0,18
	.word	165529
	.byte	16,128,8
	.word	163
	.byte	17,255,7,0,11,1,249,4,20,128,16,12
	.byte	'CH',0
	.word	165539
	.byte	128,8,2,35,0,12
	.byte	'reserved_tom1',0
	.word	165544
	.byte	128,8,3,35,128,8,0,18
	.word	165555
	.byte	27
	.byte	'Ifx_GTM_TOM_CHx',0,1,253,4,5
	.word	165601
	.byte	18
	.word	161800
	.byte	16,128,124
	.word	163
	.byte	17,255,123,0,11,1,142,5,20,128,128,1,12
	.byte	'FIFO',0
	.word	165631
	.byte	128,4,2,35,0,12
	.byte	'reserved_Fifo1',0
	.word	165636
	.byte	128,124,3,35,128,4,0,18
	.word	165647
	.byte	27
	.byte	'Ifx_GTM_FIFOx_MOD',0,1,146,5,5
	.word	165697
	.byte	18
	.word	161692
	.byte	16,188,127
	.word	163
	.byte	17,187,127,0,11,1,157,5,20,128,128,1,12
	.byte	'F2A',0
	.word	165729
	.byte	68,2,35,0,12
	.byte	'reserved_F2A1',0
	.word	165734
	.byte	188,127,2,35,68,0,18
	.word	165745
	.byte	27
	.byte	'Ifx_GTM_F2Ax_MOD',0,1,161,5,5
	.word	165791
	.byte	18
	.word	157471
	.byte	16,128,127
	.word	163
	.byte	17,255,126,0,11,1,173,5,20,128,128,1,12
	.byte	'AFD',0
	.word	165822
	.byte	128,1,2,35,0,12
	.byte	'reserved_AFD1',0
	.word	165827
	.byte	128,127,3,35,128,1,0,18
	.word	165838
	.byte	27
	.byte	'Ifx_GTM_AFDx_MOD',0,1,177,5,5
	.word	165886
	.byte	16,80
	.word	163
	.byte	17,79,0,11,1,192,5,20,128,1,12
	.byte	'RDADDR',0
	.word	132466
	.byte	4,2,35,0,12
	.byte	'CTRL',0
	.word	132097
	.byte	4,2,35,4,12
	.byte	'SR0',0
	.word	132818
	.byte	4,2,35,8,12
	.byte	'SR1',0
	.word	132887
	.byte	4,2,35,12,12
	.byte	'CM0',0
	.word	131890
	.byte	4,2,35,16,12
	.byte	'CM1',0
	.word	131959
	.byte	4,2,35,20,12
	.byte	'CN0',0
	.word	132028
	.byte	4,2,35,24,12
	.byte	'STAT',0
	.word	132956
	.byte	4,2,35,28,12
	.byte	'IRQ_NOTIFY',0
	.word	132390
	.byte	4,2,35,32,12
	.byte	'IRQ_EN',0
	.word	132167
	.byte	4,2,35,36,12
	.byte	'IRQ_FORCINT',0
	.word	132239
	.byte	4,2,35,40,12
	.byte	'IRQ_MODE',0
	.word	132316
	.byte	4,2,35,44,12
	.byte	'reserved_30',0
	.word	165917
	.byte	80,2,35,48,0,18
	.word	165926
	.byte	27
	.byte	'Ifx_GTM_ATOM_CH_TYPE',0,1,219,5,4
	.word	166139
	.byte	16,128,8
	.word	165926
	.byte	17,7,0,18
	.word	166174
	.byte	11,1,223,5,20,128,16,12
	.byte	'CH',0
	.word	166184
	.byte	128,8,2,35,0,12
	.byte	'reserved_chx',0
	.word	165544
	.byte	128,8,3,35,128,8,0,18
	.word	166189
	.byte	27
	.byte	'Ifx_GTM_ATOM_CHx',0,1,227,5,4
	.word	166234
	.byte	16,64
	.word	163
	.byte	17,63,0,16,160,15
	.word	163
	.byte	17,159,15,0,11,1,230,5,20,128,16,12
	.byte	'reserved_30',0
	.word	166265
	.byte	64,2,35,0,12
	.byte	'AGC_GLB_CTRL',0
	.word	131586
	.byte	4,2,35,64,12
	.byte	'AGC_ENDIS_CTRL',0
	.word	131356
	.byte	4,2,35,68,12
	.byte	'AGC_ENDIS_STAT',0
	.word	131433
	.byte	4,2,35,72,12
	.byte	'AGC_ACT_TB',0
	.word	131283
	.byte	4,2,35,76,12
	.byte	'AGC_OUTEN_CTRL',0
	.word	131736
	.byte	4,2,35,80,12
	.byte	'AGC_OUTEN_STAT',0
	.word	131813
	.byte	4,2,35,84,12
	.byte	'AGC_FUPD_CTRL',0
	.word	131510
	.byte	4,2,35,88,12
	.byte	'AGC_INT_TRIG',0
	.word	131661
	.byte	4,2,35,92,12
	.byte	'reserved_chx',0
	.word	166274
	.byte	160,15,2,35,96,0,18
	.word	166285
	.byte	27
	.byte	'Ifx_GTM_ATOM_AGCx',0,1,249,5,4
	.word	166520
	.byte	11,1,141,6,20,128,1,12
	.byte	'CH_GPR0',0
	.word	151425
	.byte	4,2,35,0,12
	.byte	'CH_GPR1',0
	.word	151494
	.byte	4,2,35,4,12
	.byte	'CH_CNT',0
	.word	150866
	.byte	4,2,35,8,12
	.byte	'CH_ECNT',0
	.word	151072
	.byte	4,2,35,12,12
	.byte	'CH_CNTS',0
	.word	150934
	.byte	4,2,35,16,12
	.byte	'CH_TDUC',0
	.word	151858
	.byte	4,2,35,20,12
	.byte	'CH_TDUV',0
	.word	151927
	.byte	4,2,35,24,12
	.byte	'CH_FLT_RE',0
	.word	151354
	.byte	4,2,35,28,12
	.byte	'CH_FLT_FE',0
	.word	151283
	.byte	4,2,35,32,12
	.byte	'CH_CTRL',0
	.word	151003
	.byte	4,2,35,36,12
	.byte	'CH_ECTRL',0
	.word	151141
	.byte	4,2,35,40,12
	.byte	'CH_IRQ_NOTIFY',0
	.word	151783
	.byte	4,2,35,44,12
	.byte	'CH_IRQ_EN',0
	.word	151563
	.byte	4,2,35,48,12
	.byte	'CH_IRQ_FORCINT',0
	.word	151634
	.byte	4,2,35,52,12
	.byte	'CH_IRQ_MODE',0
	.word	151710
	.byte	4,2,35,56,12
	.byte	'CH_EIRQ_EN',0
	.word	151211
	.byte	4,2,35,60,12
	.byte	'reserved_40',0
	.word	166265
	.byte	64,2,35,64,0,18
	.word	166552
	.byte	27
	.byte	'Ifx_GTM_TIM_CH_TYPE',0,1,177,6,4
	.word	166879
	.byte	11,1,179,6,20,8,12
	.byte	'IN_SRC',0
	.word	151996
	.byte	4,2,35,0,12
	.byte	'RST',0
	.word	152064
	.byte	4,2,35,4,0,18
	.word	166913
	.byte	27
	.byte	'Ifx_GTM_TIM_IN_SRC_RESET_TYPE',0,1,184,6,4
	.word	166949
	.byte	16,128,8
	.word	166552
	.byte	17,7,0,18
	.word	166993
	.byte	11,1,186,6,21,128,16,12
	.byte	'CH',0
	.word	167003
	.byte	128,8,2,35,0,12
	.byte	'reserved_tim1',0
	.word	165544
	.byte	128,8,3,35,128,8,0,18
	.word	167008
	.byte	27
	.byte	'Ifx_GTM_TIM_CHx',0,1,190,6,4
	.word	167054
	.byte	16,120
	.word	163
	.byte	17,119,0,18
	.word	166913
	.byte	16,128,15
	.word	163
	.byte	17,255,14,0,11,1,192,6,20,128,16,12
	.byte	'reserved_tim2',0
	.word	167084
	.byte	120,2,35,0,12
	.byte	'IN_SRC_RESET',0
	.word	167093
	.byte	8,2,35,120,12
	.byte	'reserved_tim3',0
	.word	167098
	.byte	128,15,3,35,128,1,0,18
	.word	167109
	.byte	27
	.byte	'Ifx_GTM_TIM_IN_SRC_RSTx',0,1,197,6,4
	.word	167187
	.byte	16,24
	.word	163
	.byte	17,23,0,16,40
	.word	163
	.byte	17,39,0,11,1,214,6,20,128,1,12
	.byte	'CH_R0',0
	.word	147504
	.byte	4,2,35,0,12
	.byte	'CH_R1',0
	.word	147571
	.byte	4,2,35,4,12
	.byte	'CH_R2',0
	.word	147638
	.byte	4,2,35,8,12
	.byte	'CH_R3',0
	.word	147705
	.byte	4,2,35,12,12
	.byte	'CH_R4',0
	.word	147772
	.byte	4,2,35,16,12
	.byte	'CH_R5',0
	.word	147839
	.byte	4,2,35,20,12
	.byte	'CH_R6',0
	.word	147906
	.byte	4,2,35,24,12
	.byte	'CH_R7',0
	.word	147973
	.byte	4,2,35,28,12
	.byte	'CH_CTRL',0
	.word	147001
	.byte	4,2,35,32,12
	.byte	'CH_ACB',0
	.word	146933
	.byte	4,2,35,36,12
	.byte	'reserved_A8',0
	.word	167225
	.byte	24,2,35,40,12
	.byte	'CH_PC',0
	.word	147437
	.byte	4,2,35,64,12
	.byte	'CH_IRQ_NOTIFY',0
	.word	147362
	.byte	4,2,35,68,12
	.byte	'CH_IRQ_EN',0
	.word	147142
	.byte	4,2,35,72,12
	.byte	'CH_IRQ_FORCINT',0
	.word	147213
	.byte	4,2,35,76,12
	.byte	'CH_IRQ_MODE',0
	.word	147289
	.byte	4,2,35,80,12
	.byte	'CH_EIRQ_EN',0
	.word	147070
	.byte	4,2,35,84,12
	.byte	'reserved_D8',0
	.word	167234
	.byte	40,2,35,88,0,18
	.word	167243
	.byte	27
	.byte	'Ifx_GTM_MCS_CH_TYPE',0,1,250,6,4
	.word	167568
	.byte	16,128,8
	.word	167243
	.byte	17,7,0,18
	.word	167602
	.byte	16,128,24
	.word	163
	.byte	17,255,23,0,11,1,252,6,20,128,32,12
	.byte	'CH',0
	.word	167612
	.byte	128,8,2,35,0,12
	.byte	'reserved_tim1',0
	.word	167617
	.byte	128,24,3,35,128,8,0,18
	.word	167628
	.byte	27
	.byte	'Ifx_GTM_MCS_CHx',0,1,128,7,4
	.word	167674
	.byte	16,68
	.word	163
	.byte	17,67,0,16,128,31
	.word	163
	.byte	17,255,30,0,11,1,130,7,20,128,32,12
	.byte	'reserved_tim4',0
	.word	167234
	.byte	40,2,35,0,12
	.byte	'CTRG',0
	.word	146793
	.byte	4,2,35,40,12
	.byte	'STRG',0
	.word	146863
	.byte	4,2,35,44,12
	.byte	'reserved_tim5',0
	.word	167704
	.byte	68,2,35,48,12
	.byte	'CTRL',0
	.word	148040
	.byte	4,2,35,116,12
	.byte	'RST',0
	.word	148171
	.byte	4,2,35,120,12
	.byte	'ERR',0
	.word	148106
	.byte	4,2,35,124,12
	.byte	'reserved_tim6',0
	.word	167713
	.byte	128,31,3,35,128,1,0,18
	.word	167724
	.byte	27
	.byte	'Ifx_GTM_MCS_TGR_MOD_CTRLx',0,1,143,7,4
	.word	167871
	.byte	11,1,162,7,11,4,28
	.byte	'EN_DEST0',0,1
	.word	163
	.byte	1,7,2,35,0,28
	.byte	'EN_DEST1',0,1
	.word	163
	.byte	1,6,2,35,0,28
	.byte	'EN_DEST2',0,1
	.word	163
	.byte	1,5,2,35,0,28
	.byte	'EN_DEST3',0,1
	.word	163
	.byte	1,4,2,35,0,28
	.byte	'EN_DEST4',0,1
	.word	163
	.byte	1,3,2,35,0,28
	.byte	'EN_DEST5',0,1
	.word	163
	.byte	1,2,2,35,0,28
	.byte	'EN_DEST6',0,1
	.word	163
	.byte	1,1,2,35,0,28
	.byte	'EN_DEST7',0,1
	.word	163
	.byte	1,0,2,35,0,28
	.byte	'EN_DEST8',0,1
	.word	163
	.byte	1,7,2,35,1,28
	.byte	'EN_DEST9',0,1
	.word	163
	.byte	1,6,2,35,1,28
	.byte	'EN_DEST10',0,1
	.word	163
	.byte	1,5,2,35,1,28
	.byte	'EN_DEST11',0,1
	.word	163
	.byte	1,4,2,35,1,28
	.byte	'EN_DEST12',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'EN_DEST13',0,1
	.word	163
	.byte	1,2,2,35,1,28
	.byte	'EN_DEST14',0,1
	.word	163
	.byte	1,1,2,35,1,28
	.byte	'EN_DEST15',0,1
	.word	163
	.byte	1,0,2,35,1,28
	.byte	'EN_DEST16',0,1
	.word	163
	.byte	1,7,2,35,2,28
	.byte	'EN_DEST17',0,1
	.word	163
	.byte	1,6,2,35,2,28
	.byte	'EN_DEST18',0,1
	.word	163
	.byte	1,5,2,35,2,28
	.byte	'EN_DEST19',0,1
	.word	163
	.byte	1,4,2,35,2,28
	.byte	'EN_DEST20',0,1
	.word	163
	.byte	1,3,2,35,2,28
	.byte	'EN_DEST21',0,1
	.word	163
	.byte	1,2,2,35,2,28
	.byte	'EN_TRASHBIN',0,1
	.word	163
	.byte	1,1,2,35,2,28
	.byte	'reserved_23',0,2
	.word	793
	.byte	9,0,2,35,2,0,27
	.byte	'Ifx_GTM_BRC_SRC_DEST_Bits',0,1,211,7,5
	.word	167911
	.byte	29,1,214,7,11,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	167911
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC_DEST',0,1,221,7,5
	.word	168451
	.byte	11,1,224,7,11,4,28
	.byte	'ADDR',0,2
	.word	793
	.byte	9,7,2,35,0,28
	.byte	'reserved_9',0,1
	.word	163
	.byte	3,4,2,35,1,28
	.byte	'BRC_MODE',0,1
	.word	163
	.byte	1,3,2,35,1,28
	.byte	'reserved_13',0,4
	.word	820
	.byte	19,0,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC_ADDR_Bits',0,1,231,7,5
	.word	168521
	.byte	29,1,233,7,11,4,12
	.byte	'U',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'I',0
	.word	12364
	.byte	4,2,35,0,12
	.byte	'B',0
	.word	168521
	.byte	4,2,35,0,0,27
	.byte	'Ifx_GTM_BRC_SRC_ADDR',0,1,240,7,5
	.word	168644
	.byte	11,1,242,7,20,8,12
	.byte	'SRC_ADDR',0
	.word	168644
	.byte	4,2,35,0,12
	.byte	'SRC_DEST',0
	.word	168451
	.byte	4,2,35,4,0,18
	.word	168714
	.byte	27
	.byte	'Ifx_GTM_BRC_SRC_ADDRx',0,1,247,7,4
	.word	168757
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	18
	.word	168714
	.byte	11,1,250,7,20,120,12
	.byte	'SRC0',0
	.word	168793
	.byte	8,2,35,0,12
	.byte	'SRC1',0
	.word	168798
	.byte	8,2,35,8,12
	.byte	'SRC2',0
	.word	168803
	.byte	8,2,35,16,12
	.byte	'SRC3',0
	.word	168808
	.byte	8,2,35,24,12
	.byte	'SRC4',0
	.word	168813
	.byte	8,2,35,32,12
	.byte	'SRC5',0
	.word	168818
	.byte	8,2,35,40,12
	.byte	'SRC6',0
	.word	168823
	.byte	8,2,35,48,12
	.byte	'SRC7',0
	.word	168828
	.byte	8,2,35,56,12
	.byte	'SRC8',0
	.word	168833
	.byte	8,2,35,64,12
	.byte	'SRC9',0
	.word	168838
	.byte	8,2,35,72,12
	.byte	'SRC10',0
	.word	168843
	.byte	8,2,35,80,12
	.byte	'SRC11',0
	.word	168848
	.byte	8,2,35,88,12
	.byte	'IRQ_NOTIFY',0
	.word	133306
	.byte	4,2,35,96,12
	.byte	'IRQ_EN',0
	.word	133095
	.byte	4,2,35,100,12
	.byte	'IRQ_FORCINT',0
	.word	133163
	.byte	4,2,35,104,12
	.byte	'IRQ_MODE',0
	.word	133236
	.byte	4,2,35,108,12
	.byte	'RST',0
	.word	133378
	.byte	4,2,35,112,12
	.byte	'EIRQ_EN',0
	.word	133026
	.byte	4,2,35,116,0,18
	.word	168853
	.byte	27
	.byte	'Ifx_GTM_BRC_SRCx',0,1,148,8,4
	.word	169135
	.byte	8,1,197,8,11,4,9
	.byte	'GTM_CONFIGURABLE_CLK0',0,0,9
	.byte	'GTM_CONFIGURABLE_CLK1',0,1,9
	.byte	'GTM_CONFIGURABLE_CLK2',0,2,9
	.byte	'GTM_CONFIGURABLE_CLK3',0,3,9
	.byte	'GTM_CONFIGURABLE_CLK4',0,4,9
	.byte	'GTM_CONFIGURABLE_CLK5',0,5,9
	.byte	'GTM_CONFIGURABLE_CLK6',0,6,9
	.byte	'GTM_CONFIGURABLE_CLK7',0,7,0,27
	.byte	'Gtm_ConfigurableClockType',0,1,207,8,4
	.word	169166
	.byte	8,1,211,8,11,4,9
	.byte	'GTM_LOW',0,0,9
	.byte	'GTM_HIGH',0,1,0,27
	.byte	'Gtm_OutputLevelType',0,1,215,8,4
	.word	169400
	.byte	8,1,218,8,11,4,9
	.byte	'GTM_ARU_WRITE_FAILED',0,0,9
	.byte	'GTM_ARU_WRITE_SUCCESSFUL',0,1,9
	.byte	'GTM_ARU_RD_ISSUED_BUT_NOT_CMPLT',0,2,9
	.byte	'GTM_ARU_RD_ISSUED_AND_COMPLETED',0,3,9
	.byte	'GTM_ARU_READ_NOT_ISSUED',0,4,9
	.byte	'GTM_ARU_READ_FAILED',0,5,9
	.byte	'GTM_ARU_READ_SUCCESSFUL',0,6,9
	.byte	'GTM_INCORRECT_REQUEST',0,7,0,27
	.byte	'Gtm_AruReqStatusType',0,1,228,8,4
	.word	169457
	.byte	8,1,230,8,11,4,9
	.byte	'TOM_GLB_CTRL',0,0,9
	.byte	'TOM_ACT_TB',0,1,9
	.byte	'TOM_FUPD_CTRL',0,2,9
	.byte	'TOM_INT_TRIG',0,3,9
	.byte	'TOM_RESERVED_0',0,4,9
	.byte	'TOM_RESERVED_1',0,5,9
	.byte	'TOM_RESERVED_2',0,6,9
	.byte	'TOM_RESERVED_3',0,7,9
	.byte	'TOM_RESERVED_4',0,8,9
	.byte	'TOM_RESERVED_5',0,9,9
	.byte	'TOM_RESERVED_6',0,10,9
	.byte	'TOM_RESERVED_7',0,11,9
	.byte	'TOM_RESERVED_8',0,12,9
	.byte	'TOM_RESERVED_9',0,13,9
	.byte	'TOM_RESERVED_10',0,14,9
	.byte	'TOM_RESERVED_11',0,15,9
	.byte	'TOM_ENDIS_CTRL',0,16,9
	.byte	'TOM_ENDIS_STAT',0,17,9
	.byte	'TOM_OUTEN_CTRL',0,18,9
	.byte	'TOM_OUTEN_STAT',0,19,0,27
	.byte	'Gtm_TomTimerRegistersType',0,1,252,8,4
	.word	169710
	.byte	8,1,255,8,11,4,9
	.byte	'ATOM_GLB_CTRL',0,0,9
	.byte	'ATOM_ENDIS_CTRL',0,1,9
	.byte	'ATOM_ENDIS_STAT',0,2,9
	.byte	'ATOM_ACT_TB',0,3,9
	.byte	'ATOM_OUTEN_CTRL',0,4,9
	.byte	'ATOM_OUTEN_STAT',0,5,9
	.byte	'ATOM_FUPD_CTRL',0,6,9
	.byte	'ATOM_INT_TRIG',0,7,0,27
	.byte	'Gtm_AtomTimerRegistersType',0,1,137,9,4
	.word	170085
	.byte	11,1,141,9,11,8,12
	.byte	'FltRisingEdge',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'FltFallingEdge',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_TimFilterType',0,1,145,9,4
	.word	170263
	.byte	27
	.byte	'Gtm_TbuChCtrlType',0,1,150,9,32
	.word	150378
	.byte	27
	.byte	'Gtm_TbuChBaseType',0,1,151,9,32
	.word	150308
	.byte	11,1,153,9,11,8,12
	.byte	'CH_CTRL',0
	.word	150378
	.byte	4,2,35,0,12
	.byte	'CH_BASE',0
	.word	150308
	.byte	4,2,35,4,0,27
	.byte	'Gtm_TbuChType',0,1,157,9,4
	.word	170398
	.byte	11,1,171,9,9,8,12
	.byte	'DpllStatus',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'IntStatus',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_DpllStatType',0,1,175,9,2
	.word	170462
	.byte	16,16
	.word	820
	.byte	17,3,0,16,60
	.word	820
	.byte	17,14,0,11,1,178,9,9,76,12
	.byte	'TimInSel',0
	.word	170534
	.byte	16,2,35,0,12
	.byte	'ToutSel',0
	.word	170543
	.byte	60,2,35,16,0,27
	.byte	'Gtm_PortConfigType',0,1,182,9,2
	.word	170552
	.byte	11,1,186,9,9,8,12
	.byte	'TimRisingEdgeFilter',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'TimFallingEdgeFilter',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_TimFltType',0,1,191,9,2
	.word	170622
	.byte	13
	.word	170622
	.byte	10
	.word	170712
	.byte	11,1,195,9,11,28,12
	.byte	'TimUsage',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'TimIrqEn',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'TimErrIrqEn',0
	.word	163
	.byte	1,2,35,2,12
	.byte	'TimAuxInSrcSel',0
	.word	163
	.byte	1,2,35,3,12
	.byte	'TimExtCapSrc',0
	.word	163
	.byte	1,2,35,4,12
	.byte	'TimCtrlValue',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'GtmTimFltPtr',0
	.word	170717
	.byte	4,2,35,12,12
	.byte	'TimCntsValue',0
	.word	820
	.byte	4,2,35,16,12
	.byte	'TimTduValue',0
	.word	820
	.byte	4,2,35,20,12
	.byte	'TimInSrcSel',0
	.word	820
	.byte	4,2,35,24,0,27
	.byte	'Gtm_TimConfigType',0,1,210,9,4
	.word	170722
	.byte	16,8
	.word	163
	.byte	17,7,0
.L805:
	.byte	16,32
	.word	170967
	.byte	17,3,0,16,16
	.word	163
	.byte	17,15,0,16,48
	.word	170985
	.byte	17,2,0,16,40
	.word	170967
	.byte	17,4,0,11,1,213,9,11,120,12
	.byte	'Gtm_TimUsage',0
	.word	170976
	.byte	32,2,35,0,12
	.byte	'Gtm_TomUsage',0
	.word	170994
	.byte	48,2,35,32,12
	.byte	'Gtm_AtomUsage',0
	.word	171003
	.byte	40,2,35,80,0,27
	.byte	'Gtm_ModUsageConfigType',0,1,225,9,4
	.word	171012
	.byte	11,1,228,9,11,16,12
	.byte	'GtmAtomUpdateEn',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmAtomEndisCtrl',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'GtmAtomEndisStat',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'GtmAtomOutenCtrl',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'GtmAtomOutenStat',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'GtmAtomFupd',0
	.word	820
	.byte	4,2,35,12,0,27
	.byte	'Gtm_AtomAgcConfigGroupType',0,1,236,9,4
	.word	171118
	.byte	13
	.word	171118
	.byte	10
	.word	171311
	.byte	11,1,240,9,9,12,12
	.byte	'GtmAtomIntTrig',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmAtomActTb',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmAtomAgcConfigGrpPtr',0
	.word	171316
	.byte	4,2,35,8,0,27
	.byte	'Gtm_AtomAgcConfigType',0,1,247,9,2
	.word	171321
	.byte	11,1,250,9,9,28,12
	.byte	'GtmAtomIrqEn',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmAtomRdAddrValue',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmAtomCn0Value',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'GtmAtomCm0Value',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'GtmAtomCm1Value',0
	.word	820
	.byte	4,2,35,16,12
	.byte	'GtmAtomSr0Value',0
	.word	820
	.byte	4,2,35,20,12
	.byte	'GtmAtomSr1Value',0
	.word	820
	.byte	4,2,35,24,0,27
	.byte	'Gtm_AtomChannelConfigType',0,1,131,10,2
	.word	171437
	.byte	13
	.word	171437
	.byte	10
	.word	171654
	.byte	11,1,134,10,9,12,12
	.byte	'GtmAtomUsage',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'GtmAtomIrqMode',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'GtmAtomControlWord',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmAtomChannelCfgPtr',0
	.word	171659
	.byte	4,2,35,8,0,27
	.byte	'Gtm_AtomConfigType',0,1,141,10,2
	.word	171664
	.byte	11,1,154,10,9,16,12
	.byte	'GtmTomUpdateEn',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmTomEndisCtrl',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'GtmTomEndisStat',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'GtmTomOutenCtrl',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'GtmTomOutenStat',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'GtmTomFupd',0
	.word	820
	.byte	4,2,35,12,0,27
	.byte	'Gtm_TomTgcConfigGroupType',0,1,162,10,2
	.word	171803
	.byte	13
	.word	171803
	.byte	10
	.word	171989
	.byte	11,1,166,10,9,12,12
	.byte	'GtmTomIntTrig',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmTomActTb',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmTomTgcConfigGrpPtr',0
	.word	171994
	.byte	4,2,35,8,0,27
	.byte	'Gtm_TomTgcConfigType',0,1,173,10,2
	.word	171999
	.byte	11,1,176,10,9,12,12
	.byte	'GtmTomIrqEn',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'GtmTomCn0Value',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'GtmTomCm0Value',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'GtmTomCm1Value',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'GtmTomSr0Value',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'GtmTomSr1Value',0
	.word	793
	.byte	2,2,35,10,0,27
	.byte	'Gtm_TomChannelConfigType',0,1,184,10,2
	.word	172111
	.byte	13
	.word	172111
	.byte	10
	.word	172293
	.byte	11,1,188,10,9,12,12
	.byte	'TomUsage',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'GtmTomIrqMode',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'GtmTomControlWord',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmTomChannelCfgPtr',0
	.word	172298
	.byte	4,2,35,8,0,27
	.byte	'Gtm_TomConfigType',0,1,196,10,2
	.word	172303
	.byte	11,1,200,10,9,8,12
	.byte	'CmuEclkNum',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'CmuEclkDen',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_ExtClkType',0,1,204,10,2
	.word	172434
	.byte	16,32
	.word	820
	.byte	17,7,0,16,24
	.word	172434
	.byte	17,2,0,11,1,207,10,9,64,12
	.byte	'GtmClockEnable',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'GtmCmuClkCnt',0
	.word	172505
	.byte	32,2,35,4,12
	.byte	'GtmFxdClkControl',0
	.word	820
	.byte	4,2,35,36,12
	.byte	'GtmEclk',0
	.word	172514
	.byte	24,2,35,40,0,27
	.byte	'Gtm_ClockSettingType',0,1,213,10,2
	.word	172523
	.byte	11,1,217,10,9,4,12
	.byte	'GtmCtrlValue',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'GtmIrqEnable',0
	.word	793
	.byte	2,2,35,2,0,27
	.byte	'Gtm_GeneralConfigType',0,1,222,10,2
	.word	172649
	.byte	11,1,226,10,9,8,12
	.byte	'TbuChannelCtrl',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'TbuBaseValue',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_TbuConfigType',0,1,230,10,2
	.word	172731
	.byte	11,1,234,10,9,8,12
	.byte	'BrcChannelCtrl',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'BrcDestination',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_BrcChannelType',0,1,238,10,2
	.word	172811
	.byte	13
	.word	172811
	.byte	10
	.word	172894
	.byte	11,1,242,10,9,8,12
	.byte	'BrcIrqEnable',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'BrcErrIrqEnable',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'BrcChannelPtr',0
	.word	172899
	.byte	4,2,35,4,0,27
	.byte	'Gtm_BrcConfigType',0,1,248,10,2
	.word	172904
	.byte	11,1,252,10,9,12,12
	.byte	'FifoCtrl',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'FifoIrqEnable',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'FifoErrIrqEnable',0
	.word	163
	.byte	1,2,35,2,12
	.byte	'FifoStartAddress',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'FifoEndAddress',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'FifoUpperWatermark',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'FifoLowerWatermark',0
	.word	793
	.byte	2,2,35,10,0,27
	.byte	'Gtm_FifoConfigType',0,1,139,11,2
	.word	173008
	.byte	11,1,143,11,9,4,12
	.byte	'F2aChannelConfig',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'F2aAruAddress',0
	.word	793
	.byte	2,2,35,2,0,27
	.byte	'Gtm_F2aConfigType',0,1,147,11,2
	.word	173216
	.byte	11,1,151,11,9,18,12
	.byte	'McsControl',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'McsChannelConfig',0
	.word	170967
	.byte	8,2,35,1,12
	.byte	'McsErrIrqEnable',0
	.word	170967
	.byte	8,2,35,9,0,27
	.byte	'Gtm_McsConfigType',0,1,160,11,2
	.word	173299
	.byte	16,48
	.word	793
	.byte	17,23,0,11,1,164,11,9,96,12
	.byte	'DpllAps1c3',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'DpllNtiCnt',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'DpllApt2c',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'DpllCtrl2',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'DpllCtrl3',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'DpllCtrl4',0
	.word	793
	.byte	2,2,35,10,12
	.byte	'DpllPmtr',0
	.word	173404
	.byte	48,2,35,12,12
	.byte	'DpllCtrl0',0
	.word	820
	.byte	4,2,35,60,12
	.byte	'DpllCtrl1',0
	.word	820
	.byte	4,2,35,64,12
	.byte	'DpllApt',0
	.word	820
	.byte	4,2,35,68,12
	.byte	'DpllAps',0
	.word	820
	.byte	4,2,35,72,12
	.byte	'DpllAssort0',0
	.word	820
	.byte	4,2,35,76,12
	.byte	'DpllIrqEnable',0
	.word	820
	.byte	4,2,35,80,12
	.byte	'DpllErrIntEnable',0
	.word	820
	.byte	4,2,35,84,12
	.byte	'DpllAddInLoad1',0
	.word	820
	.byte	4,2,35,88,12
	.byte	'DpllAddInLoad2',0
	.word	820
	.byte	4,2,35,92,0,27
	.byte	'Gtm_DpllConfigType',0,1,188,11,2
	.word	173413
	.byte	16,16
	.word	793
	.byte	17,7,0,11,1,192,11,9,36,12
	.byte	'SpeIrq',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'SpeErrIrq',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'SpeOutput',0
	.word	173772
	.byte	16,2,35,2,12
	.byte	'SpeCtrlStat',0
	.word	820
	.byte	4,2,35,20,12
	.byte	'SpePattern',0
	.word	820
	.byte	4,2,35,24,12
	.byte	'SpeRevCntr',0
	.word	820
	.byte	4,2,35,28,12
	.byte	'SpeRevCmp',0
	.word	820
	.byte	4,2,35,32,0,27
	.byte	'Gtm_SpeConfigType',0,1,205,11,2
	.word	173781
	.byte	11,1,208,11,9,12,12
	.byte	'CmpEnable',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'CmpIntEnable',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'CmpErrIntEnable',0
	.word	820
	.byte	4,2,35,8,0,27
	.byte	'Gtm_CmpConfigType',0,1,215,11,2
	.word	173949
	.byte	11,1,220,11,9,16,12
	.byte	'MscConnection',0
	.word	170534
	.byte	16,2,35,0,0,27
	.byte	'Gtm_MscSetType',0,1,223,11,2
	.word	174049
	.byte	11,1,226,11,9,8,12
	.byte	'MscLowControl',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'MscHighControl',0
	.word	820
	.byte	4,2,35,4,0,27
	.byte	'Gtm_MscInputCtrlType',0,1,230,11,2
	.word	174103
	.byte	13
	.word	174049
	.byte	10
	.word	174187
	.byte	13
	.word	174103
	.byte	10
	.word	174197
	.byte	11,1,233,11,9,8,12
	.byte	'MscSets',0
	.word	174192
	.byte	4,2,35,0,12
	.byte	'MscInputCtrlPtr',0
	.word	174202
	.byte	4,2,35,4,0,27
	.byte	'Gtm_MscConnectionsType',0,1,237,11,2
	.word	174207
	.byte	11,1,241,11,9,20,12
	.byte	'DsadcInsel0',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'DsadcInsel1',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'DsadcInsel2',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'DsadcOutsel00',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'DsadcOutsel10',0
	.word	820
	.byte	4,2,35,16,0,27
	.byte	'Gtm_DsadcConnectionsType',0,1,248,11,2
	.word	174288
	.byte	16,8
	.word	820
	.byte	17,1,0,16,4
	.word	820
	.byte	17,0,0,13
	.word	170722
	.byte	10
	.word	174456
	.byte	13
	.word	171999
	.byte	10
	.word	174466
	.byte	16,12
	.word	820
	.byte	17,2,0,13
	.word	172303
	.byte	10
	.word	174485
	.byte	13
	.word	171321
	.byte	10
	.word	174495
	.byte	13
	.word	171664
	.byte	10
	.word	174505
	.byte	13
	.word	171012
	.byte	10
	.word	174515
	.byte	13
	.word	172649
	.byte	10
	.word	174525
	.byte	13
	.word	172731
	.byte	10
	.word	174535
	.byte	13
	.word	172904
	.byte	10
	.word	174545
	.byte	13
	.word	173008
	.byte	10
	.word	174555
	.byte	13
	.word	174560
	.byte	10
	.word	174565
	.byte	13
	.word	173216
	.byte	10
	.word	174575
	.byte	13
	.word	173299
	.byte	10
	.word	174585
	.byte	13
	.word	173413
	.byte	10
	.word	174595
	.byte	13
	.word	173781
	.byte	10
	.word	174605
	.byte	16,8
	.word	174610
	.byte	17,1,0,13
	.word	173949
	.byte	10
	.word	174624
	.byte	13
	.word	174207
	.byte	10
	.word	174634
	.byte	13
	.word	174288
	.byte	10
	.word	174644
	.byte	11,1,251,11,9,172,1,12
	.byte	'GtmAruConfig',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'GtmMcfgConfig',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'GtmModuleSleepEnable',0
	.word	163
	.byte	1,2,35,2,12
	.byte	'GtmGclkNum',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'GtmGclkDen',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'GtmAccessEnable0',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'GtmAccessEnable1',0
	.word	820
	.byte	4,2,35,16,12
	.byte	'GtmTimModuleUsage',0
	.word	174438
	.byte	8,2,35,20,12
	.byte	'GtmTimUsage',0
	.word	174447
	.byte	4,2,35,28,12
	.byte	'GtmTimConfigPtr',0
	.word	174461
	.byte	4,2,35,32,12
	.byte	'GtmTomTgcUsage',0
	.word	174447
	.byte	4,2,35,36,12
	.byte	'GtmTomTgcConfigPtr',0
	.word	174471
	.byte	4,2,35,40,12
	.byte	'GtmTomModuleUsage',0
	.word	174476
	.byte	12,2,35,44,12
	.byte	'GtmTomUsage',0
	.word	174438
	.byte	8,2,35,56,12
	.byte	'GtmTomConfigPtr',0
	.word	174490
	.byte	4,2,35,64,12
	.byte	'GtmAtomAgcUsage',0
	.word	174447
	.byte	4,2,35,68,12
	.byte	'GtmAtomAgcConfigPtr',0
	.word	174500
	.byte	4,2,35,72,12
	.byte	'GtmAtomModuleUsage',0
	.word	174476
	.byte	12,2,35,76,12
	.byte	'GtmAtomUsage',0
	.word	174438
	.byte	8,2,35,88,12
	.byte	'GtmAtomConfigPtr',0
	.word	174510
	.byte	4,2,35,96,12
	.byte	'GtmModUsageConfigPtr',0
	.word	174520
	.byte	4,2,35,100,12
	.byte	'GtmGeneralConfigPtr',0
	.word	174530
	.byte	4,2,35,104,12
	.byte	'GtmTbuConfigPtr',0
	.word	174540
	.byte	4,2,35,108,12
	.byte	'GtmBrcConfigPtr',0
	.word	174550
	.byte	4,2,35,112,12
	.byte	'GtmFifoConfigPtr',0
	.word	174570
	.byte	4,2,35,116,12
	.byte	'GtmF2aConfigPtr',0
	.word	174580
	.byte	4,2,35,120,12
	.byte	'GtmMcsConfigPtr',0
	.word	174590
	.byte	4,2,35,124,12
	.byte	'GtmMapConfig',0
	.word	820
	.byte	4,3,35,128,1,12
	.byte	'GtmDpllConfigPtr',0
	.word	174600
	.byte	4,3,35,132,1,12
	.byte	'GtmSpeConfigPtr',0
	.word	174615
	.byte	8,3,35,136,1,12
	.byte	'GtmCmpConfigPtr',0
	.word	174629
	.byte	4,3,35,144,1,12
	.byte	'GtmMscConnectionsPtr',0
	.word	174639
	.byte	4,3,35,148,1,12
	.byte	'GtmDsadcConnectionsPtr',0
	.word	174649
	.byte	4,3,35,152,1,12
	.byte	'GtmAdcConnectionsPtr',0
	.word	2596
	.byte	4,3,35,156,1,12
	.byte	'GtmTtcanTriggers',0
	.word	174447
	.byte	4,3,35,160,1,12
	.byte	'GtmPsi5OutSelect',0
	.word	820
	.byte	4,3,35,164,1,12
	.byte	'GtmPsi5SOutSelect',0
	.word	820
	.byte	4,3,35,168,1,0,27
	.byte	'Gtm_ModuleConfigType',0,1,188,12,2
	.word	174654
	.byte	13
	.word	172523
	.byte	10
	.word	175651
	.byte	13
	.word	170552
	.byte	10
	.word	175661
	.byte	13
	.word	174654
	.byte	10
	.word	175671
	.byte	15
	.byte	'Gtm_ConfigType',0,1,224,12,16,12,12
	.byte	'GtmClockSettingPtr',0
	.word	175656
	.byte	4,2,35,0,12
	.byte	'GtmPortConfigPtr',0
	.word	175666
	.byte	4,2,35,4,12
	.byte	'GtmModuleConfigPtr',0
	.word	175676
	.byte	4,2,35,8,0,27
	.byte	'Gtm_ConfigType',0,1,229,12,2
	.word	175681
	.byte	27
	.byte	'Mcu_ClockType',0,21,156,3,18
	.word	820
	.byte	27
	.byte	'Mcu_ModeType',0,21,162,3,18
	.word	820
	.byte	27
	.byte	'Mcu_RamSectionType',0,21,168,3,18
	.word	820
	.byte	27
	.byte	'Mcu_RamBaseAdrType',0,21,178,3,18
	.word	24709
	.byte	27
	.byte	'Mcu_RamSizeType',0,21,181,3,17
	.word	820
	.byte	27
	.byte	'Mcu_RamPrstDatType',0,21,184,3,16
	.word	163
	.byte	35
	.byte	'Mcu_ResetType',0,21,212,3,14,4,9
	.byte	'MCU_ESR0_RESET',0,0,9
	.byte	'MCU_ESR1_RESET',0,1,9
	.byte	'MCU_SMU_RESET',0,2,9
	.byte	'MCU_SW_RESET',0,3,9
	.byte	'MCU_STM0_RESET',0,4,9
	.byte	'MCU_STM1_RESET',0,5,9
	.byte	'MCU_STM2_RESET',0,6,9
	.byte	'MCU_POWER_ON_RESET',0,7,9
	.byte	'MCU_CB0_RESET',0,8,9
	.byte	'MCU_CB1_RESET',0,9,9
	.byte	'MCU_CB3_RESET',0,10,9
	.byte	'MCU_TP_RESET',0,11,9
	.byte	'MCU_EVR13_RESET',0,12,9
	.byte	'MCU_EVR33_RESET',0,13,9
	.byte	'MCU_SUPPLY_WDOG_RESET',0,14,9
	.byte	'MCU_STBYR_RESET',0,15,9
	.byte	'MCU_RESET_MULTIPLE',0,254,1,9
	.byte	'MCU_RESET_UNDEFINED',0,255,1,0,27
	.byte	'Mcu_ResetType',0,21,232,3,2
	.word	175963
	.byte	11,21,247,3,3,4,28
	.byte	'K1div',0,1
	.word	163
	.byte	7,1,2,35,0,28
	.byte	'K3div',0,2
	.word	793
	.byte	7,2,2,35,0,28
	.byte	'Ndiv',0,4
	.word	820
	.byte	7,11,2,35,0,28
	.byte	'Pdiv',0,2
	.word	793
	.byte	4,7,2,35,2,28
	.byte	'K2steps',0,1
	.word	163
	.byte	4,3,2,35,3,28
	.byte	'PllMode',0,1
	.word	163
	.byte	1,2,2,35,3,28
	.byte	'Reserved',0,1
	.word	163
	.byte	2,0,2,35,3,0,11,21,132,4,3,4,28
	.byte	'McuErayNDivider',0,1
	.word	163
	.byte	5,3,2,35,0,28
	.byte	'McuErayK2Divider',0,2
	.word	793
	.byte	7,4,2,35,0,28
	.byte	'McuErayK3Divider',0,4
	.word	820
	.byte	7,13,2,35,0,28
	.byte	'McuErayPDivider',0,1
	.word	163
	.byte	4,1,2,35,2,28
	.byte	'Reserved',0,2
	.word	793
	.byte	9,0,2,35,2,0,15
	.byte	'Mcu_ClockCfgType',0,21,236,3,16,80,12
	.byte	'K2div',0
	.word	170967
	.byte	8,2,35,0,12
	.byte	'K2RampToPllDelayTicks',0
	.word	172505
	.byte	32,2,35,8,12
	.byte	'Mcu_ClockDivValues',0
	.word	176330
	.byte	4,2,35,40,12
	.byte	'MCU_ErayPllDivValues',0
	.word	176461
	.byte	4,2,35,44,12
	.byte	'Ccucon0',0
	.word	820
	.byte	4,2,35,48,12
	.byte	'Ccucon1',0
	.word	820
	.byte	4,2,35,52,12
	.byte	'Ccucon2',0
	.word	820
	.byte	4,2,35,56,12
	.byte	'Ccucon5',0
	.word	820
	.byte	4,2,35,60,12
	.byte	'Ccucon6',0
	.word	820
	.byte	4,2,35,64,12
	.byte	'Ccucon7',0
	.word	820
	.byte	4,2,35,68,12
	.byte	'Ccucon8',0
	.word	820
	.byte	4,2,35,72,12
	.byte	'K2RampToPllDelayConf',0
	.word	163
	.byte	1,2,35,76,0,27
	.byte	'Mcu_ClockCfgType',0,21,162,4,2
	.word	176598
	.byte	15
	.byte	'Mcu_RamCfgType',0,21,164,4,16,12,12
	.byte	'RamBaseAdrPtr',0
	.word	175882
	.byte	4,2,35,0,12
	.byte	'RamSize',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'RamPrstData',0
	.word	163
	.byte	1,2,35,8,0,27
	.byte	'Mcu_RamCfgType',0,21,169,4,2
	.word	176901
	.byte	10
	.word	24703
	.byte	15
	.byte	'Mcu_StandbyModeType',0,21,171,4,16,8,12
	.byte	'PMSWCR0',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'CrcCheckEnable',0
	.word	163
	.byte	1,2,35,4,0,27
	.byte	'Mcu_StandbyModeType',0,21,175,4,2
	.word	177013
	.byte	27
	.byte	'rba_BswSrv_uint64',0,22,66,28
	.word	23336
	.byte	27
	.byte	'Rte_TransformerErrorCode',0,23,130,1,15
	.word	163
	.byte	27
	.byte	'Rte_TransformerClass',0,23,131,1,15
	.word	163
	.byte	11,23,168,1,9,12,12
	.byte	'in',0
	.word	24709
	.byte	4,2,35,0,12
	.byte	'out',0
	.word	24709
	.byte	4,2,35,4,12
	.byte	'used',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'lost_data',0
	.word	163
	.byte	1,2,35,10,0,27
	.byte	'Rte_QDynType',0,23,173,1,3
	.word	177200
	.byte	8,23,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,27
	.byte	'Rte_NotificationType',0,23,182,1,3
	.word	177287
	.byte	27
	.byte	'Impl_NVM_DstPtrType_1024',0,24,50,15
	.word	165544
	.byte	27
	.byte	'CanIf_u32_impl',0,24,69,16
	.word	820
	.byte	27
	.byte	'CanIf_u16_impl',0,24,71,16
	.word	793
	.byte	27
	.byte	'CanIf_u8_impl',0,24,73,15
	.word	163
	.byte	27
	.byte	'CanIf_ControllerModeType_Enum_impl',0,24,88,15
	.word	163
	.byte	27
	.byte	'CanIf_PduModeType_Enum_impl',0,24,90,15
	.word	163
	.byte	11,24,92,9,2,12
	.byte	'DeviceMode',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'ChannelMode',0
	.word	163
	.byte	1,2,35,1,0,27
	.byte	'CanIf_ControllerStateType_struct_impl',0,24,95,3
	.word	177565
	.byte	27
	.byte	'CanIf_NotifStatusType_Enum_impl',0,24,100,15
	.word	163
	.byte	27
	.byte	'CanSM_boolean_Impl',0,24,120,15
	.word	163
	.byte	27
	.byte	'CanSM_u8_Impl',0,24,123,15
	.word	163
	.byte	27
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,24,128,1,15
	.word	163
	.byte	27
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,24,132,1,15
	.word	163
	.byte	27
	.byte	'CanSM_u16_Impl',0,24,136,1,16
	.word	793
	.byte	27
	.byte	'CanSM_TimerStateType_Enum_impl',0,24,138,1,15
	.word	163
	.byte	11,24,140,1,9,4,12
	.byte	'cntTick_u16',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'stTimer',0
	.word	163
	.byte	1,2,35,2,0,27
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,24,143,1,3
	.word	177906
	.byte	27
	.byte	'Com_impl_u16',0,24,154,1,16
	.word	793
	.byte	27
	.byte	'Com_impl_u8',0,24,157,1,15
	.word	163
	.byte	27
	.byte	'ComM_uint32_Impl',0,24,173,1,16
	.word	820
	.byte	27
	.byte	'ComM_uint16_Impl',0,24,175,1,16
	.word	793
	.byte	27
	.byte	'ComM_uint8_Impl',0,24,177,1,15
	.word	163
	.byte	27
	.byte	'ComM_bool_Impl',0,24,179,1,15
	.word	163
	.byte	11,24,181,1,9,24,12
	.byte	'ChannelState_e',0
	.word	820
	.byte	4,2,35,0,12
	.byte	'LightTimeoutCtr_u32',0
	.word	820
	.byte	4,2,35,4,12
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'ChannelMode_u8',0
	.word	163
	.byte	1,2,35,10,12
	.byte	'BusSmMode_u8',0
	.word	163
	.byte	1,2,35,11,12
	.byte	'UserRequestCtr_u8',0
	.word	163
	.byte	1,2,35,12,12
	.byte	'PassiveRequestState_u8',0
	.word	163
	.byte	1,2,35,13,12
	.byte	'PncRequestCtr_u8',0
	.word	163
	.byte	1,2,35,14,12
	.byte	'InhibitionReqStatus_u8',0
	.word	163
	.byte	1,2,35,15,12
	.byte	'NmNetworkRequestStatus_b',0
	.word	163
	.byte	1,2,35,16,12
	.byte	'DiagnosticRequestState_b',0
	.word	163
	.byte	1,2,35,17,12
	.byte	'CommunicationAllowed_b',0
	.word	163
	.byte	1,2,35,18,12
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	163
	.byte	1,2,35,19,12
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	163
	.byte	1,2,35,20,12
	.byte	'NmNetworkModeStatus_b',0
	.word	163
	.byte	1,2,35,21,0,27
	.byte	'ComM_ChannelStruct_Impl',0,24,197,1,3
	.word	178138
	.byte	11,24,206,1,9,10,12
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	793
	.byte	2,2,35,0,12
	.byte	'LimitToNoComCtr_u16',0
	.word	793
	.byte	2,2,35,2,12
	.byte	'RequestedUserMode_t',0
	.word	163
	.byte	1,2,35,4,12
	.byte	'IndicatedUserMode_t',0
	.word	163
	.byte	1,2,35,5,12
	.byte	'numChannelsInFullCom_u8',0
	.word	163
	.byte	1,2,35,6,12
	.byte	'numChannelsInSilentCom_u8',0
	.word	163
	.byte	1,2,35,7,12
	.byte	'numChannelsInNoCom_u8',0
	.word	163
	.byte	1,2,35,8,0,27
	.byte	'ComM_UserStruct_Impl',0,24,214,1,3
	.word	178642
	.byte	27
	.byte	'Dcm_IOOperationResponseType',0,24,252,1,15
	.word	163
	.byte	27
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	24,138,2,15
	.word	163
	.byte	27
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,24,146,2,15
	.word	163
	.byte	27
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,24,150,2,15
	.word	163
	.byte	27
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,24,154,2,15
	.word	163
	.byte	27
	.byte	'EcuM_ShutdownCauseType',0,24,191,2,15
	.word	163
	.byte	27
	.byte	'EcuM_ShutdownModeType',0,24,195,2,16
	.word	793
	.byte	27
	.byte	'EcuM_ShutdownTargetType',0,24,197,2,15
	.word	163
	.byte	27
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,24,243,3,34
	.word	177385
	.byte	16,128,8
	.word	163
	.byte	17,255,7,0,27
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,24,246,3,34
	.word	177385
	.byte	8,25,176,6,9,4,9
	.byte	'STANDARD_CAN',0,0,9
	.byte	'STANDARD_FD_CAN',0,1,9
	.byte	'EXTENDED_CAN',0,2,9
	.byte	'EXTENDED_FD_CAN',0,3,0,27
	.byte	'CanIf_Cfg_TxPduCanIdType_ten',0,25,182,6,2
	.word	179556
	.byte	8,25,244,6,9,4,9
	.byte	'CANIF_NO_UL',0,0,9
	.byte	'CAN_NM',0,1,9
	.byte	'CAN_TP',0,2,9
	.byte	'CAN_TSYN',0,3,9
	.byte	'J1939NM',0,4,9
	.byte	'J1939TP',0,5,9
	.byte	'PDUR',0,6,9
	.byte	'XCP',0,7,9
	.byte	'CDD',0,8,9
	.byte	'USER',0,9,9
	.byte	'MAX_USER_TYPE',0,10,0,27
	.byte	'CanIf_Cfg_UserType_ten',0,25,130,7,2
	.word	179667
	.byte	8,25,133,7,9,4,9
	.byte	'CANIF_BASIC',0,0,9
	.byte	'CANIF_FULL',0,1,0,27
	.byte	'CanIf_Cfg_CanHandleType_ten',0,25,138,7,2
	.word	179811
	.byte	8,25,141,7,9,4,9
	.byte	'CANIF_PRV_FULL_E',0,0,9
	.byte	'CANIF_PRV_BASIC_RANGE_E',0,1,9
	.byte	'CANIF_PRV_BASIC_LIST_E',0,2,0,27
	.byte	'CanIf_Prv_HrhType_ten',0,25,148,7,2
	.word	179882
	.byte	8,25,151,7,9,4,9
	.byte	'CANIF_DLC_OK',0,0,9
	.byte	'CANIF_DLC_E_FAILED',0,1,0,27
	.byte	'CanIf_DlcErrorReturnType',0,25,156,7,2
	.word	179990
	.byte	11,25,220,7,9,20,12
	.byte	'HrhInfo_e',0
	.word	179882
	.byte	4,2,35,0,12
	.byte	'PduIdx_t',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'NumRxPdus_u32',0
	.word	820
	.byte	4,2,35,8,12
	.byte	'HrhRangeMask_b',0
	.word	163
	.byte	1,2,35,12,12
	.byte	'ControllerId_u8',0
	.word	163
	.byte	1,2,35,13,12
	.byte	'CanId_t',0
	.word	820
	.byte	4,2,35,16,0,27
	.byte	'CanIf_Cfg_Hrhtype_tst',0,25,255,7,2
	.word	180067
	.byte	11,25,134,8,9,20,12
	.byte	'RxPduReadNotifyReadDataStatus_u8',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'IndexForUL_u8',0
	.word	23393
	.byte	4,2,35,4,12
	.byte	'CanIdtype_u8',0
	.word	163
	.byte	1,2,35,8,12
	.byte	'RxPduDlc_u8',0
	.word	163
	.byte	1,2,35,9,12
	.byte	'RxPduCanId',0
	.word	820
	.byte	4,2,35,12,12
	.byte	'Hrhref_t',0
	.word	793
	.byte	2,2,35,16,12
	.byte	'RxPduTargetId_t',0
	.word	793
	.byte	2,2,35,18,0,27
	.byte	'CanIf_Cfg_RxPduType_tst',0,25,230,8,2
	.word	180231
	.byte	11,16,71,9,8,12
	.byte	'SduDataPtr',0
	.word	815
	.byte	4,2,35,0,12
	.byte	'SduLength',0
	.word	793
	.byte	2,2,35,4,0,13
	.word	180442
	.byte	10
	.word	180487
	.byte	33,1,1,34
	.word	793
	.byte	34
	.word	180492
	.byte	0,10
	.word	180497
	.byte	11,25,234,8,9,4,12
	.byte	'CanIfRxPduIndicationName',0
	.word	180511
	.byte	4,2,35,0,0,27
	.byte	'CanIf_RxCbk_Prototype',0,25,237,8,2
	.word	180516
	.byte	11,25,168,9,9,4,12
	.byte	'CtrlId',0
	.word	163
	.byte	1,2,35,0,12
	.byte	'CtrlCanCtrlRef',0
	.word	163
	.byte	1,2,35,1,12
	.byte	'CtrlWakeupSupport',0
	.word	163
	.byte	1,2,35,2,0,27
	.byte	'CanIf_Cfg_CtrlConfig_tst',0,25,182,9,2
	.word	180588
	.byte	13
	.word	180588
	.byte	10
	.word	180696
	.byte	11,25,184,9,9,12,12
	.byte	'CanIf_CtrlConfigPtr',0
	.word	180701
	.byte	4,2,35,0,12
	.byte	'CanObjectId',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'CanHandleType',0
	.word	179811
	.byte	4,2,35,8,0,27
	.byte	'CanIf_Cfg_HthConfig_tst',0,25,191,9,2
	.word	180706
	.byte	13
	.word	180706
	.byte	10
	.word	180819
	.byte	11,25,194,9,9,4,12
	.byte	'CanIf_HthConfigPtr',0
	.word	180824
	.byte	4,2,35,0,0,27
	.byte	'CanIf_Cfg_TxBufferConfig_tst',0,25,205,9,2
	.word	180829
	.byte	13
	.word	180829
	.byte	10
	.word	180902
	.byte	33,1,1,34
	.word	793
	.byte	0,10
	.word	180912
	.byte	10
	.word	180442
	.byte	38
	.word	163
	.byte	1,1,34
	.word	793
	.byte	34
	.word	180926
	.byte	0,10
	.word	180931
	.byte	11,25,207,9,9,40,12
	.byte	'CanIf_TxBufferConfigPtr',0
	.word	180907
	.byte	4,2,35,0,12
	.byte	'TxPduId',0
	.word	793
	.byte	2,2,35,4,12
	.byte	'TxPduTargetPduId',0
	.word	793
	.byte	2,2,35,6,12
	.byte	'TxPduType',0
	.word	793
	.byte	2,2,35,8,12
	.byte	'TxPduCanIdType',0
	.word	179556
	.byte	4,2,35,12,12
	.byte	'TxPduTxUserUL',0
	.word	179667
	.byte	4,2,35,16,12
	.byte	'UserTxConfirmation',0
	.word	180921
	.byte	4,2,35,20,12
	.byte	'TxPduCanId',0
	.word	820
	.byte	4,2,35,24,12
	.byte	'TxPduReadNotifyStatus',0
	.word	163
	.byte	1,2,35,28,12
	.byte	'UserTriggerTransmit',0
	.word	180949
	.byte	4,2,35,32,12
	.byte	'TxPduTriggerTransmit',0
	.word	163
	.byte	1,2,35,36,12
	.byte	'TxTruncEnabled_b',0
	.word	163
	.byte	1,2,35,37,12
	.byte	'TxPduLength_u8',0
	.word	163
	.byte	1,2,35,38,0,27
	.byte	'CanIf_Cfg_TxPduConfig_tst',0,25,239,9,2
	.word	180954
.L801:
	.byte	13
	.word	2620
	.byte	16,20
	.word	793
	.byte	17,9,0
.L802:
	.byte	16,20
	.word	181331
	.byte	17,0,0
.L806:
	.byte	16,128,1
	.word	172505
	.byte	17,3,0
.L807:
	.byte	16,8
	.word	3723
	.byte	17,1,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,46,1,3,8,32,13,58,15,59
	.byte	15,57,15,54,15,39,12,0,0,7,11,1,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,15,0,73
	.byte	19,0,0,11,19,1,58,15,59,15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,38,0,73,19,0,0,14,46,0
	.byte	3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,15,19,1,3,8,58,15,59,15,57,15,11,15,0,0,16,1,1,11,15
	.byte	73,19,0,0,17,33,0,47,15,0,0,18,53,0,73,19,0,0,19,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0
	.byte	0,20,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,21,46,1,49,19,0,0,22,5,0,49,19,0,0,23
	.byte	29,1,49,19,0,0,24,11,1,49,19,0,0,25,11,0,49,19,0,0,26,21,0,54,15,0,0,27,22,0,3,8,58,15,59,15,57,15,73
	.byte	19,0,0,28,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,29,23,1,58,15,59,15,57,15,11,15,0,0,30,13,0,73,19
	.byte	11,15,56,9,0,0,31,21,0,54,15,39,12,0,0,32,59,0,3,8,0,0,33,21,1,54,15,39,12,0,0,34,5,0,73,19,0,0,35,4,1
	.byte	3,8,58,15,59,15,57,15,11,15,0,0,36,21,0,73,19,54,15,39,12,0,0,37,52,0,3,8,58,15,59,15,57,15,73,19,63,12
	.byte	60,12,0,0,38,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L204:
	.word	.L1109-.L1108
.L1108:
	.half	3
	.word	.L1111-.L1110
.L1110:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Mcu\\inc\\Gtm.h',0,0,0,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Integration\\MCAL\\SchM\\SchM_Can_17_MCanP.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_WdgLib.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP_Platform.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\CanIf_RxIndication_Integration.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\CanIf\\api\\CanIf_Cbk.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\CanIf\\api\\CanIf_Types.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxCan_regdef.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxSrc_regdef.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxScu_regdef.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxGtm_regdef.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Mcu\\inc\\Mcu.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\CanIf\\CanIf_Cfg.h',0,0,0,0,0
.L1111:
.L1109:
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_info'
.L205:
	.word	2080
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_Init',0,1,255,6,6,1,1,1
	.word	.L160,.L332,.L159
	.byte	4
	.byte	'Config',0,1,255,6,55
	.word	.L333,.L334
	.byte	5
	.word	.L160,.L332
	.byte	6
	.word	.L335,.L336,.L337
	.byte	7
	.word	.L338,.L336,.L337
	.byte	8
	.byte	'Index',0,1,179,19,10
	.word	.L339,.L340
	.byte	8
	.byte	'HwIndex',0,1,181,19,9
	.word	.L341,.L342
	.byte	8
	.byte	'KerIdx',0,1,184,19,18
	.word	.L343,.L344
	.byte	8
	.byte	'MspndIndex',0,1,186,19,9
	.word	.L341,.L345
	.byte	0,0,6
	.word	.L346,.L337,.L22
	.byte	9
	.word	.L347,.L348
	.byte	8
	.byte	'ReadBack',0,1,147,20,19
	.word	.L351,.L352
	.byte	8
	.byte	'KerIdx',0,1,148,20,18
	.word	.L353,.L354
	.byte	8
	.byte	'LoopBreak',0,1,149,20,9
	.word	.L341,.L355
	.byte	8
	.byte	'DissChk',0,1,150,20,18
	.word	.L356,.L357
	.byte	8
	.byte	'RetVal',0,1,151,20,18
	.word	.L341,.L358
	.byte	9
	.word	.L359,.L360
	.byte	8
	.byte	'val',0,1,164,20,4
	.word	.L363,.L364
	.byte	0,7
	.word	.L365,.L18,.L366
	.byte	8
	.byte	'val',0,1,207,20,5
	.word	.L363,.L367
	.byte	0,0,0,6
	.word	.L368,.L369,.L349
	.byte	9
	.word	.L370,.L371
	.byte	8
	.byte	'TimeOutIndex',0,1,138,22,10
	.word	.L363,.L373
	.byte	8
	.byte	'RetVal',0,1,139,22,18
	.word	.L341,.L374
	.byte	8
	.byte	'KerIdx',0,1,140,22,18
	.word	.L375,.L376
	.byte	0,0,10
	.word	.L346,.L349,.L350
	.byte	10
	.word	.L368,.L350,.L372
	.byte	6
	.word	.L377,.L372,.L378
	.byte	7
	.word	.L379,.L372,.L378
	.byte	8
	.byte	'ControllerId',0,1,207,29,9
	.word	.L341,.L380
	.byte	6
	.word	.L381,.L382,.L34
	.byte	11
	.word	.L383,.L384
	.byte	11
	.word	.L385,.L386
	.byte	7
	.word	.L387,.L382,.L34
	.byte	8
	.byte	'KerIdx',0,1,211,22,9
	.word	.L341,.L388
	.byte	8
	.byte	'HwCtrlIDKer',0,1,212,22,9
	.word	.L341,.L389
	.byte	8
	.byte	'BOSrcNum',0,1,213,22,9
	.word	.L341,.L390
	.byte	8
	.byte	'RxSrcNum',0,1,214,22,9
	.word	.L341,.L391
	.byte	8
	.byte	'IntSrcOffset',0,1,215,22,9
	.word	.L341,.L392
	.byte	9
	.word	.L393,.L394
	.byte	8
	.byte	'val',0,1,238,22,3
	.word	.L363,.L399
	.byte	0,7
	.word	.L400,.L35,.L36
	.byte	8
	.byte	'val',0,1,247,22,5
	.word	.L363,.L401
	.byte	0,7
	.word	.L402,.L403,.L404
	.byte	8
	.byte	'val',0,1,149,23,3
	.word	.L363,.L405
	.byte	0,7
	.word	.L406,.L404,.L407
	.byte	8
	.byte	'val',0,1,154,23,3
	.word	.L363,.L408
	.byte	0,7
	.word	.L409,.L407,.L410
	.byte	8
	.byte	'val',0,1,159,23,3
	.word	.L363,.L411
	.byte	0,6
	.word	.L412,.L413,.L37
	.byte	11
	.word	.L414,.L415
	.byte	7
	.word	.L416,.L413,.L37
	.byte	7
	.word	.L417,.L413,.L418
	.byte	8
	.byte	'val',0,1,182,50,3
	.word	.L363,.L419
	.byte	0,7
	.word	.L420,.L418,.L37
	.byte	8
	.byte	'val',0,1,187,50,3
	.word	.L363,.L421
	.byte	0,0,0,6
	.word	.L412,.L422,.L38
	.byte	11
	.word	.L414,.L415
	.byte	7
	.word	.L416,.L422,.L38
	.byte	7
	.word	.L417,.L422,.L423
	.byte	8
	.byte	'val',0,1,182,50,3
	.word	.L363,.L424
	.byte	0,7
	.word	.L420,.L423,.L38
	.byte	8
	.byte	'val',0,1,187,50,3
	.word	.L363,.L425
	.byte	0,0,0,6
	.word	.L412,.L426,.L34
	.byte	11
	.word	.L414,.L415
	.byte	7
	.word	.L416,.L426,.L34
	.byte	7
	.word	.L417,.L426,.L427
	.byte	8
	.byte	'val',0,1,182,50,3
	.word	.L363,.L428
	.byte	0,7
	.word	.L420,.L427,.L34
	.byte	8
	.byte	'val',0,1,187,50,3
	.word	.L363,.L429
	.byte	0,0,0,0,0,0,0,6
	.word	.L430,.L378,.L431
	.byte	7
	.word	.L432,.L378,.L431
	.byte	8
	.byte	'RetVal',0,1,229,23,18
	.word	.L341,.L433
	.byte	6
	.word	.L434,.L378,.L47
	.byte	7
	.word	.L435,.L378,.L47
	.byte	8
	.byte	'TxHwObjCfgPtr',0,1,147,24,35
	.word	.L436,.L437
	.byte	8
	.byte	'HwObjIndex',0,1,148,24,10
	.word	.L339,.L438
	.byte	8
	.byte	'HwObjectId',0,1,149,24,10
	.word	.L339,.L439
	.byte	8
	.byte	'HwControllerId',0,1,150,24,9
	.word	.L341,.L440
	.byte	8
	.byte	'ControllerId',0,1,151,24,9
	.word	.L341,.L441
	.byte	8
	.byte	'KerIdx',0,1,152,24,9
	.word	.L341,.L442
	.byte	8
	.byte	'RetVal',0,1,153,24,18
	.word	.L341,.L443
	.byte	8
	.byte	'HwCtrlIDKer',0,1,155,24,9
	.word	.L341,.L444
	.byte	7
	.word	.L445,.L446,.L447
	.byte	8
	.byte	'val',0,1,129,25,11
	.word	.L363,.L448
	.byte	0,7
	.word	.L449,.L450,.L451
	.byte	8
	.byte	'val',0,1,139,25,11
	.word	.L363,.L452
	.byte	0,9
	.word	.L453,.L454
	.byte	8
	.byte	'val',0,1,152,25,13
	.word	.L363,.L459
	.byte	0,7
	.word	.L460,.L44,.L45
	.byte	8
	.byte	'val',0,1,159,25,13
	.word	.L363,.L461
	.byte	0,0,0,6
	.word	.L462,.L463,.L56
	.byte	7
	.word	.L464,.L463,.L56
	.byte	8
	.byte	'RxHwObjCfgPtr',0,1,135,26,35
	.word	.L465,.L466
	.byte	8
	.byte	'HwObjIndex',0,1,136,26,10
	.word	.L339,.L467
	.byte	8
	.byte	'HwObjectId',0,1,137,26,10
	.word	.L339,.L468
	.byte	8
	.byte	'HwControllerId',0,1,138,26,9
	.word	.L341,.L469
	.byte	8
	.byte	'ControllerId',0,1,139,26,9
	.word	.L341,.L470
	.byte	8
	.byte	'KerIdx',0,1,140,26,9
	.word	.L341,.L471
	.byte	8
	.byte	'RetVal',0,1,141,26,18
	.word	.L341,.L472
	.byte	8
	.byte	'HwCtrlIDKer',0,1,142,26,9
	.word	.L341,.L473
	.byte	7
	.word	.L474,.L475,.L476
	.byte	8
	.byte	'val',0,1,215,26,9
	.word	.L363,.L477
	.byte	0,7
	.word	.L478,.L479,.L480
	.byte	8
	.byte	'val',0,1,134,27,11
	.word	.L363,.L481
	.byte	0,7
	.word	.L482,.L480,.L483
	.byte	8
	.byte	'val',0,1,139,27,9
	.word	.L363,.L484
	.byte	0,9
	.word	.L485,.L486
	.byte	8
	.byte	'val',0,1,153,27,10
	.word	.L363,.L491
	.byte	0,7
	.word	.L492,.L53,.L54
	.byte	8
	.byte	'val',0,1,159,27,10
	.word	.L363,.L493
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,29,0,49,16,17,1,18,1,0,0,11,5,0,49,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_line'
.L207:
	.word	.L1113-.L1112
.L1112:
	.half	3
	.word	.L1115-.L1114
.L1114:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1115:
	.byte	5,6,7,0,5,2
	.word	.L160
	.byte	3,254,6,1,5,4,9
	.half	.L808-.L160
	.byte	3,211,0,1,5,19,9
	.half	.L1116-.L808
	.byte	1,5,14,9
	.half	.L336-.L1116
	.byte	3,235,11,1,5,68,9
	.half	.L809-.L336
	.byte	1,5,5,9
	.half	.L3-.L809
	.byte	3,2,1,5,39,9
	.half	.L1117-.L3
	.byte	1,5,49,9
	.half	.L1118-.L1117
	.byte	1,5,47,9
	.half	.L1119-.L1118
	.byte	1,5,5,9
	.half	.L1120-.L1119
	.byte	3,1,1,5,32,9
	.half	.L1121-.L1120
	.byte	1,5,42,9
	.half	.L1122-.L1121
	.byte	1,5,40,9
	.half	.L1123-.L1122
	.byte	1,5,5,9
	.half	.L1124-.L1123
	.byte	3,2,1,5,32,9
	.half	.L1125-.L1124
	.byte	1,5,42,9
	.half	.L1126-.L1125
	.byte	1,5,40,9
	.half	.L1127-.L1126
	.byte	1,5,75,9
	.half	.L1128-.L1127
	.byte	3,123,1,5,35,9
	.half	.L2-.L1128
	.byte	1,5,49,9
	.half	.L1129-.L2
	.byte	1,5,68,9
	.half	.L1130-.L1129
	.byte	1,5,17,7,9
	.half	.L1131-.L1130
	.byte	3,16,1,5,15,9
	.half	.L811-.L1131
	.byte	1,5,61,9
	.half	.L1132-.L811
	.byte	1,5,15,9
	.half	.L5-.L1132
	.byte	3,3,1,5,62,9
	.half	.L812-.L5
	.byte	1,5,25,9
	.half	.L7-.L812
	.byte	3,2,1,5,24,9
	.half	.L1133-.L7
	.byte	1,5,6,9
	.half	.L1134-.L1133
	.byte	1,5,24,9
	.half	.L1135-.L1134
	.byte	1,5,32,9
	.half	.L1136-.L1135
	.byte	1,5,42,9
	.half	.L1137-.L1136
	.byte	1,5,40,9
	.half	.L1138-.L1137
	.byte	1,5,69,9
	.half	.L1139-.L1138
	.byte	3,126,1,5,62,9
	.half	.L6-.L1139
	.byte	1,5,63,7,9
	.half	.L1140-.L6
	.byte	3,125,1,5,69,9
	.half	.L1141-.L1140
	.byte	1,5,27,9
	.half	.L4-.L1141
	.byte	1,5,61,9
	.half	.L1142-.L4
	.byte	1,5,14,7,9
	.half	.L1143-.L1142
	.byte	3,13,1,5,63,9
	.half	.L813-.L1143
	.byte	1,5,5,9
	.half	.L9-.L813
	.byte	3,3,1,5,18,9
	.half	.L1144-.L9
	.byte	1,5,28,9
	.half	.L1145-.L1144
	.byte	1,5,26,9
	.half	.L1146-.L1145
	.byte	1,5,21,9
	.half	.L1147-.L1146
	.byte	3,3,1,5,64,9
	.half	.L814-.L1147
	.byte	1,5,21,9
	.half	.L11-.L814
	.byte	3,2,1,5,7,9
	.half	.L1148-.L11
	.byte	1,5,20,9
	.half	.L1149-.L1148
	.byte	1,5,27,9
	.half	.L1150-.L1149
	.byte	1,5,48,9
	.half	.L1151-.L1150
	.byte	1,5,39,9
	.half	.L1152-.L1151
	.byte	1,5,7,9
	.half	.L1153-.L1152
	.byte	3,1,1,5,20,9
	.half	.L1154-.L1153
	.byte	1,5,27,9
	.half	.L1155-.L1154
	.byte	1,5,48,9
	.half	.L1156-.L1155
	.byte	1,5,39,9
	.half	.L1157-.L1156
	.byte	1,5,76,9
	.half	.L1158-.L1157
	.byte	3,125,1,5,64,9
	.half	.L10-.L1158
	.byte	1,5,70,7,9
	.half	.L1159-.L10
	.byte	3,122,1,5,63,9
	.half	.L8-.L1159
	.byte	1,5,16,7,9
	.half	.L1160-.L8
	.byte	3,14,1,5,67,9
	.half	.L815-.L1160
	.byte	1,5,16,9
	.half	.L13-.L815
	.byte	3,2,1,5,46,9
	.half	.L817-.L13
	.byte	1,5,7,9
	.half	.L15-.L817
	.byte	3,2,1,5,24,9
	.half	.L1161-.L15
	.byte	1,5,33,9
	.half	.L1162-.L1161
	.byte	1,5,43,9
	.half	.L1163-.L1162
	.byte	1,5,41,9
	.half	.L1164-.L1163
	.byte	1,5,53,9
	.half	.L1165-.L1164
	.byte	3,126,1,5,46,9
	.half	.L14-.L1165
	.byte	1,5,76,7,9
	.half	.L1166-.L14
	.byte	3,126,1,5,67,9
	.half	.L12-.L1166
	.byte	1,5,14,7,9
	.half	.L337-.L12
	.byte	3,48,1,5,12,9
	.half	.L816-.L337
	.byte	1,5,13,9
	.half	.L1167-.L816
	.byte	3,1,1,5,10,9
	.half	.L818-.L1167
	.byte	3,1,1,5,17,9
	.half	.L820-.L818
	.byte	3,2,1,5,15,9
	.half	.L1168-.L820
	.byte	1,5,28,9
	.half	.L1169-.L1168
	.byte	3,1,1,5,4,9
	.half	.L17-.L1169
	.byte	3,4,1,9
	.half	.L361-.L17
	.byte	3,3,1,5,15,9
	.half	.L362-.L361
	.byte	3,4,1,5,13,9
	.half	.L1170-.L362
	.byte	1,5,4,9
	.half	.L1171-.L1170
	.byte	3,11,1,5,22,9
	.half	.L822-.L1171
	.byte	3,6,1,5,76,9
	.half	.L1172-.L822
	.byte	1,5,58,9
	.half	.L1173-.L1172
	.byte	3,1,1,5,12,9
	.half	.L1174-.L1173
	.byte	3,127,1,5,20,9
	.half	.L1175-.L1174
	.byte	3,3,1,5,4,9
	.half	.L1176-.L1175
	.byte	1,5,12,7,9
	.half	.L1177-.L1176
	.byte	3,7,1,5,15,9
	.half	.L1178-.L1177
	.byte	3,1,1,5,22,9
	.half	.L1179-.L1178
	.byte	3,127,1,5,5,9
	.half	.L18-.L1179
	.byte	3,12,1,9
	.half	.L366-.L18
	.byte	3,4,1,9
	.half	.L825-.L366
	.byte	3,4,1,9
	.half	.L1180-.L825
	.byte	3,4,1,5,30,9
	.half	.L19-.L1180
	.byte	3,66,1,5,36,9
	.half	.L1181-.L19
	.byte	1,5,29,9
	.half	.L16-.L1181
	.byte	3,127,1,5,28,9
	.half	.L1182-.L16
	.byte	1,5,15,7,9
	.half	.L1183-.L1182
	.byte	3,1,1,5,3,7,9
	.half	.L20-.L1183
	.byte	3,193,0,1,9
	.half	.L21-.L20
	.byte	3,1,1,5,4,9
	.half	.L22-.L21
	.byte	3,255,114,1,5,10,7,9
	.half	.L369-.L22
	.byte	3,176,14,1,5,17,9
	.half	.L826-.L369
	.byte	3,2,1,5,15,9
	.half	.L1184-.L826
	.byte	1,5,61,9
	.half	.L1185-.L1184
	.byte	1,5,18,9
	.half	.L25-.L1185
	.byte	3,7,1,5,4,9
	.half	.L349-.L25
	.byte	3,141,126,1,5,80,9
	.half	.L350-.L349
	.byte	3,252,1,1,5,19,9
	.half	.L27-.L350
	.byte	3,3,1,5,15,9
	.half	.L26-.L27
	.byte	3,123,1,5,12,9
	.half	.L1186-.L26
	.byte	1,5,68,7,9
	.half	.L1187-.L1186
	.byte	3,2,1,5,14,7,9
	.half	.L28-.L1187
	.byte	3,16,1,5,63,9
	.half	.L29-.L28
	.byte	3,96,1,5,69,9
	.half	.L827-.L29
	.byte	1,5,27,9
	.half	.L24-.L827
	.byte	1,5,61,9
	.half	.L1188-.L24
	.byte	1,5,3,7,9
	.half	.L1189-.L1188
	.byte	3,36,1,5,5,9
	.half	.L30-.L1189
	.byte	3,174,113,1,5,19,7,9
	.half	.L372-.L30
	.byte	3,240,21,1,5,52,9
	.half	.L819-.L372
	.byte	3,1,1,5,7,9
	.half	.L33-.L819
	.byte	3,5,1,5,43,9
	.half	.L1190-.L33
	.byte	1,5,8,9
	.half	.L1191-.L1190
	.byte	3,127,1,5,5,9
	.half	.L1192-.L1191
	.byte	1,5,12,7,9
	.half	.L382-.L1192
	.byte	3,131,121,1,5,17,9
	.half	.L829-.L382
	.byte	3,1,1,5,26,9
	.half	.L831-.L829
	.byte	3,1,1,5,15,9
	.half	.L833-.L831
	.byte	3,2,1,5,44,9
	.half	.L1193-.L833
	.byte	1,5,54,9
	.half	.L1194-.L1193
	.byte	1,5,6,9
	.half	.L1195-.L1194
	.byte	1,5,5,9
	.half	.L1196-.L1195
	.byte	3,1,1,5,36,9
	.half	.L1197-.L1196
	.byte	1,5,15,9
	.half	.L1198-.L1197
	.byte	3,126,1,5,5,9
	.half	.L834-.L1198
	.byte	3,4,1,5,19,9
	.half	.L1199-.L834
	.byte	1,5,15,9
	.half	.L1200-.L1199
	.byte	3,127,1,5,3,9
	.half	.L395-.L1200
	.byte	3,14,1,5,19,9
	.half	.L396-.L395
	.byte	3,120,1,5,46,9
	.half	.L1201-.L396
	.byte	1,5,61,9
	.half	.L1202-.L1201
	.byte	3,1,1,5,3,9
	.half	.L830-.L1202
	.byte	3,126,1,7,9
	.half	.L397-.L830
	.byte	3,9,1,5,5,9
	.half	.L35-.L397
	.byte	3,9,1,5,3,9
	.half	.L36-.L35
	.byte	3,26,1,9
	.half	.L403-.L36
	.byte	3,4,1,9
	.half	.L404-.L403
	.byte	3,5,1,9
	.half	.L407-.L404
	.byte	3,5,1,9
	.half	.L410-.L407
	.byte	3,4,1,5,16,9
	.half	.L1203-.L410
	.byte	1,5,32,9
	.half	.L1204-.L1203
	.byte	1,5,36,9
	.half	.L1205-.L1204
	.byte	3,6,1,5,50,9
	.half	.L1206-.L1205
	.byte	1,5,32,9
	.half	.L1207-.L1206
	.byte	3,1,1,5,46,9
	.half	.L1208-.L1207
	.byte	1,5,56,9
	.half	.L1209-.L1208
	.byte	3,1,1,5,5,9
	.half	.L840-.L1209
	.byte	3,8,1,5,19,9
	.half	.L1210-.L840
	.byte	1,5,46,9
	.half	.L1211-.L1210
	.byte	1,5,62,9
	.half	.L1212-.L1211
	.byte	3,1,1,5,3,9
	.half	.L1213-.L1212
	.byte	3,126,1,5,54,7,9
	.half	.L1214-.L1213
	.byte	3,4,1,5,34,9
	.half	.L832-.L1214
	.byte	1,5,3,9
	.half	.L413-.L832
	.byte	3,128,27,1,9
	.half	.L418-.L413
	.byte	3,5,1,5,5,9
	.half	.L37-.L418
	.byte	3,129,101,1,5,19,9
	.half	.L1215-.L37
	.byte	1,5,46,9
	.half	.L1216-.L1215
	.byte	1,5,60,9
	.half	.L1217-.L1216
	.byte	3,1,1,5,3,9
	.half	.L1218-.L1217
	.byte	3,126,1,7,9
	.half	.L422-.L1218
	.byte	3,251,26,1,9
	.half	.L423-.L422
	.byte	3,5,1,5,5,9
	.half	.L38-.L423
	.byte	3,138,101,1,5,19,9
	.half	.L1219-.L38
	.byte	1,5,46,9
	.half	.L1220-.L1219
	.byte	1,5,61,9
	.half	.L1221-.L1220
	.byte	3,1,1,5,3,9
	.half	.L1222-.L1221
	.byte	3,126,1,7,9
	.half	.L426-.L1222
	.byte	3,242,26,1,9
	.half	.L427-.L426
	.byte	3,5,1,5,5,9
	.half	.L34-.L427
	.byte	3,165,107,1,5,32,9
	.half	.L1223-.L34
	.byte	1,5,49,9
	.half	.L1224-.L1223
	.byte	1,5,47,9
	.half	.L1225-.L1224
	.byte	1,5,17,9
	.half	.L1226-.L1225
	.byte	3,116,1,5,19,9
	.half	.L32-.L1226
	.byte	3,127,1,5,33,9
	.half	.L1227-.L32
	.byte	1,5,52,9
	.half	.L1228-.L1227
	.byte	1,5,19,7,9
	.half	.L378-.L1228
	.byte	3,202,122,1,5,33,9
	.half	.L1229-.L378
	.byte	1,5,10,9
	.half	.L847-.L1229
	.byte	3,1,1,5,15,9
	.half	.L849-.L847
	.byte	3,4,1,5,65,9
	.half	.L851-.L849
	.byte	3,1,1,5,35,9
	.half	.L41-.L851
	.byte	3,7,1,5,47,9
	.half	.L1230-.L41
	.byte	1,5,14,9
	.half	.L853-.L1230
	.byte	3,2,1,5,19,9
	.half	.L854-.L853
	.byte	3,3,1,5,8,9
	.half	.L855-.L854
	.byte	3,5,1,5,5,9
	.half	.L1231-.L855
	.byte	1,5,45,7,9
	.half	.L1232-.L1231
	.byte	3,5,1,5,56,9
	.half	.L857-.L1232
	.byte	3,18,1,5,9,9
	.half	.L1233-.L857
	.byte	3,2,1,5,11,7,9
	.half	.L446-.L1233
	.byte	3,52,1,5,25,9
	.half	.L447-.L446
	.byte	3,6,1,5,11,9
	.half	.L1234-.L447
	.byte	1,5,24,9
	.half	.L1235-.L1234
	.byte	1,5,53,9
	.half	.L1236-.L1235
	.byte	1,5,40,9
	.half	.L1237-.L1236
	.byte	1,5,14,9
	.half	.L859-.L1237
	.byte	3,1,1,5,39,9
	.half	.L1238-.L859
	.byte	1,5,24,9
	.half	.L1239-.L1238
	.byte	1,5,68,9
	.half	.L1240-.L1239
	.byte	3,127,1,5,11,9
	.half	.L450-.L1240
	.byte	3,4,1,5,26,9
	.half	.L451-.L450
	.byte	3,5,1,5,39,9
	.half	.L1241-.L451
	.byte	1,5,13,9
	.half	.L455-.L1241
	.byte	3,8,1,5,12,9
	.half	.L456-.L455
	.byte	3,124,1,5,26,9
	.half	.L1242-.L456
	.byte	1,5,53,9
	.half	.L1243-.L1242
	.byte	1,5,61,9
	.half	.L1244-.L1243
	.byte	3,1,1,5,11,9
	.half	.L861-.L1244
	.byte	3,126,1,5,13,7,9
	.half	.L457-.L861
	.byte	3,5,1,9
	.half	.L44-.L457
	.byte	3,7,1,5,11,9
	.half	.L45-.L44
	.byte	3,8,1,9
	.half	.L1245-.L45
	.byte	3,7,1,5,13,9
	.half	.L42-.L1245
	.byte	3,246,126,1,5,19,9
	.half	.L40-.L42
	.byte	3,127,1,5,33,9
	.half	.L1246-.L40
	.byte	1,5,5,9
	.half	.L1247-.L1246
	.byte	1,5,56,7,9
	.half	.L1248-.L1247
	.byte	1,5,3,7,9
	.half	.L46-.L1248
	.byte	3,149,1,1,9
	.half	.L47-.L46
	.byte	3,178,126,1,5,10,7,9
	.half	.L463-.L47
	.byte	3,166,2,1,5,19,9
	.half	.L850-.L463
	.byte	3,1,1,5,33,9
	.half	.L1249-.L850
	.byte	1,5,19,9
	.half	.L848-.L1249
	.byte	3,3,1,5,65,9
	.half	.L867-.L848
	.byte	3,1,1,5,35,9
	.half	.L50-.L867
	.byte	3,6,1,5,47,9
	.half	.L1250-.L50
	.byte	1,5,14,9
	.half	.L869-.L1250
	.byte	3,2,1,5,19,9
	.half	.L871-.L869
	.byte	3,1,1,5,8,9
	.half	.L872-.L871
	.byte	3,3,1,5,5,9
	.half	.L1251-.L872
	.byte	1,5,45,7,9
	.half	.L1252-.L1251
	.byte	3,4,1,5,54,9
	.half	.L874-.L1252
	.byte	3,6,1,5,7,9
	.half	.L1253-.L874
	.byte	3,3,1,5,9,7,9
	.half	.L475-.L1253
	.byte	3,41,1,5,11,9
	.half	.L476-.L475
	.byte	3,39,1,9
	.half	.L479-.L476
	.byte	3,8,1,5,9,9
	.half	.L480-.L479
	.byte	3,5,1,5,24,9
	.half	.L483-.L480
	.byte	3,6,1,5,37,9
	.half	.L1254-.L483
	.byte	1,5,10,9
	.half	.L487-.L1254
	.byte	3,8,1,5,9,9
	.half	.L488-.L487
	.byte	3,124,1,5,23,9
	.half	.L1255-.L488
	.byte	1,5,50,9
	.half	.L1256-.L1255
	.byte	1,5,64,9
	.half	.L1257-.L1256
	.byte	3,1,1,5,9,9
	.half	.L881-.L1257
	.byte	3,126,1,5,10,7,9
	.half	.L489-.L881
	.byte	3,5,1,9
	.half	.L53-.L489
	.byte	3,6,1,5,9,9
	.half	.L54-.L53
	.byte	3,5,1,5,23,9
	.half	.L1258-.L54
	.byte	3,4,1,5,9,9
	.half	.L870-.L1258
	.byte	1,5,22,9
	.half	.L1259-.L870
	.byte	1,5,51,9
	.half	.L1260-.L1259
	.byte	1,5,38,9
	.half	.L1261-.L1260
	.byte	1,5,12,9
	.half	.L1262-.L1261
	.byte	3,1,1,5,37,9
	.half	.L1263-.L1262
	.byte	1,5,22,9
	.half	.L1264-.L1263
	.byte	1,5,66,9
	.half	.L1265-.L1264
	.byte	3,127,1,5,9,9
	.half	.L1266-.L1265
	.byte	3,4,1,5,15,9
	.half	.L51-.L1266
	.byte	3,234,126,1,5,19,9
	.half	.L49-.L51
	.byte	3,127,1,5,33,9
	.half	.L1267-.L49
	.byte	1,5,5,9
	.half	.L1268-.L1267
	.byte	1,5,56,7,9
	.half	.L1269-.L1268
	.byte	1,5,3,7,9
	.half	.L55-.L1269
	.byte	3,157,1,1,5,5,9
	.half	.L56-.L55
	.byte	3,190,124,1,5,3,7,9
	.half	.L48-.L56
	.byte	3,9,1,5,6,9
	.half	.L58-.L48
	.byte	3,241,111,1,5,7,7,9
	.half	.L431-.L58
	.byte	3,4,1,5,34,9
	.half	.L1270-.L431
	.byte	1,5,32,9
	.half	.L887-.L1270
	.byte	1,5,1,9
	.half	.L23-.L887
	.byte	3,5,1,7,9
	.half	.L209-.L23
	.byte	0,1,1
.L1113:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L160,0,.L209-.L160,0,0
.L348:
	.word	-1,.L160,.L337-.L160,.L22-.L160,.L349-.L160,.L350-.L160,0,0
.L360:
	.word	-1,.L160,.L361-.L160,.L362-.L160,.L349-.L160,.L350-.L160,0,0
.L371:
	.word	-1,.L160,.L369-.L160,.L349-.L160,.L350-.L160,.L372-.L160,0,0
.L394:
	.word	-1,.L160,.L395-.L160,.L396-.L160,.L397-.L160,.L398-.L160,0,0
.L454:
	.word	-1,.L160,.L455-.L160,.L456-.L160,.L457-.L160,.L458-.L160,0,0
.L486:
	.word	-1,.L160,.L487-.L160,.L488-.L160,.L489-.L160,.L490-.L160,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_info'
.L210:
	.word	561
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_SetControllerMode',0,1,236,10,16
	.word	.L494
	.byte	1,1,1
	.word	.L162,.L495,.L161
	.byte	4
	.byte	'Controller',0,1,236,10,53
	.word	.L341,.L496
	.byte	4
	.byte	'Transition',0,1,237,10,70
	.word	.L497,.L498
	.byte	5
	.word	.L162,.L495
	.byte	6
	.byte	'RetValue',0,1,243,10,18
	.word	.L494,.L499
	.byte	6
	.byte	'HwControllerId',0,1,244,10,9
	.word	.L341,.L500
	.byte	7
	.word	.L501,.L502,.L68
	.byte	8
	.word	.L503,.L504
	.byte	8
	.word	.L505,.L506
	.byte	8
	.word	.L507,.L508
	.byte	9
	.word	.L509,.L502,.L68
	.byte	6
	.byte	'HohIndex',0,1,187,31,9
	.word	.L341,.L510
	.byte	6
	.byte	'FirstTxMo',0,1,188,31,9
	.word	.L341,.L511
	.byte	6
	.byte	'NumTxMo',0,1,189,31,9
	.word	.L341,.L512
	.byte	6
	.byte	'KerIdx',0,1,191,31,9
	.word	.L341,.L513
	.byte	6
	.byte	'HwCtrlIDKer',0,1,192,31,9
	.word	.L341,.L514
	.byte	9
	.word	.L515,.L67,.L516
	.byte	6
	.byte	'val',0,1,244,31,7
	.word	.L363,.L517
	.byte	0,9
	.word	.L518,.L61,.L519
	.byte	6
	.byte	'val',0,1,132,32,7
	.word	.L363,.L520
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_line'
.L212:
	.word	.L1272-.L1271
.L1271:
	.half	3
	.word	.L1274-.L1273
.L1273:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1274:
	.byte	5,16,7,0,5,2
	.word	.L162
	.byte	3,235,10,1,5,14,9
	.half	.L889-.L162
	.byte	3,39,1,5,22,9
	.half	.L890-.L889
	.byte	3,2,1,5,58,9
	.half	.L1275-.L890
	.byte	1,5,12,9
	.half	.L502-.L1275
	.byte	3,174,20,1,5,17,9
	.half	.L891-.L502
	.byte	3,1,1,5,8,9
	.half	.L893-.L891
	.byte	3,4,1,9
	.half	.L1276-.L893
	.byte	3,57,1,9
	.half	.L1277-.L1276
	.byte	3,122,1,5,33,9
	.half	.L60-.L1277
	.byte	3,83,1,5,36,9
	.half	.L1278-.L60
	.byte	3,1,1,5,64,9
	.half	.L1279-.L1278
	.byte	1,9
	.half	.L894-.L1279
	.byte	3,4,1,5,20,9
	.half	.L896-.L894
	.byte	3,2,1,5,9,9
	.half	.L897-.L896
	.byte	3,2,1,5,50,9
	.half	.L1280-.L897
	.byte	3,126,1,5,9,9
	.half	.L65-.L1280
	.byte	3,2,1,5,18,9
	.half	.L1281-.L65
	.byte	3,2,1,5,60,9
	.half	.L899-.L1281
	.byte	3,124,1,5,50,9
	.half	.L64-.L899
	.byte	1,5,7,7,9
	.half	.L1282-.L64
	.byte	3,13,1,5,21,9
	.half	.L1283-.L1282
	.byte	1,5,48,9
	.half	.L1284-.L1283
	.byte	1,5,64,9
	.half	.L1285-.L1284
	.byte	3,1,1,5,7,9
	.half	.L1286-.L1285
	.byte	3,126,1,5,31,7,9
	.half	.L1287-.L1286
	.byte	3,6,1,5,46,9
	.half	.L888-.L1287
	.byte	1,5,38,9
	.half	.L66-.L888
	.byte	3,7,1,5,7,9
	.half	.L67-.L66
	.byte	3,6,1,9
	.half	.L516-.L67
	.byte	3,4,1,5,34,9
	.half	.L1288-.L516
	.byte	1,5,49,9
	.half	.L1289-.L1288
	.byte	1,5,47,9
	.half	.L1290-.L1289
	.byte	1,5,3,9
	.half	.L1291-.L1290
	.byte	3,2,1,5,7,9
	.half	.L62-.L1291
	.byte	3,4,1,5,34,9
	.half	.L1292-.L62
	.byte	1,5,49,9
	.half	.L1293-.L1292
	.byte	1,5,47,9
	.half	.L1294-.L1293
	.byte	1,5,3,9
	.half	.L1295-.L1294
	.byte	3,2,1,5,7,9
	.half	.L61-.L1295
	.byte	3,4,1,9
	.half	.L519-.L61
	.byte	3,3,1,5,34,9
	.half	.L1296-.L519
	.byte	1,5,49,9
	.half	.L1297-.L1296
	.byte	1,5,47,9
	.half	.L902-.L1297
	.byte	1,5,3,9
	.half	.L1298-.L902
	.byte	3,2,1,5,7,9
	.half	.L63-.L1298
	.byte	3,4,1,5,34,9
	.half	.L1299-.L63
	.byte	1,5,49,9
	.half	.L1300-.L1299
	.byte	1,5,47,9
	.half	.L1301-.L1300
	.byte	1,5,3,9
	.half	.L1302-.L1301
	.byte	3,2,1,5,32,9
	.half	.L68-.L1302
	.byte	3,154,107,1,5,3,9
	.half	.L904-.L68
	.byte	3,2,1,5,1,9
	.half	.L72-.L904
	.byte	3,1,1,7,9
	.half	.L214-.L72
	.byte	0,1,1
.L1272:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L162,0,.L214-.L162,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_info'
.L215:
	.word	606
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_DisableControllerInterrupts',0,1,197,11,6,1,1,1
	.word	.L164,.L521,.L163
	.byte	4
	.byte	'Controller',0,1,197,11,54
	.word	.L341,.L522
	.byte	5
	.word	.L164,.L521
	.byte	6
	.word	.L523,.L524,.L525
	.byte	7
	.word	.L526,.L527
	.byte	8
	.word	.L528,.L524,.L525
	.byte	9
	.byte	'RegAddress',0,1,168,34,21
	.word	.L529,.L530
	.byte	9
	.byte	'HwControllerId',0,1,169,34,9
	.word	.L341,.L531
	.byte	9
	.byte	'BOSrcNum',0,1,170,34,9
	.word	.L341,.L532
	.byte	9
	.byte	'RxSrcNum',0,1,171,34,9
	.word	.L341,.L533
	.byte	9
	.byte	'TxSreVal',0,1,172,34,10
	.word	.L363,.L534
	.byte	9
	.byte	'RxSreVal',0,1,173,34,10
	.word	.L363,.L535
	.byte	9
	.byte	'KerIdx',0,1,174,34,9
	.word	.L341,.L536
	.byte	9
	.byte	'HwCtrlIDKer',0,1,175,34,9
	.word	.L341,.L537
	.byte	9
	.byte	'IntSrcOffset',0,1,176,34,9
	.word	.L341,.L538
	.byte	8
	.word	.L539,.L540,.L541
	.byte	9
	.byte	'val',0,1,221,34,5
	.word	.L363,.L542
	.byte	0,8
	.word	.L543,.L541,.L544
	.byte	9
	.byte	'val',0,1,227,34,5
	.word	.L363,.L545
	.byte	0,8
	.word	.L546,.L544,.L73
	.byte	9
	.byte	'val',0,1,233,34,5
	.word	.L363,.L547
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_line'
.L217:
	.word	.L1304-.L1303
.L1303:
	.half	3
	.word	.L1306-.L1305
.L1305:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1306:
	.byte	5,6,7,0,5,2
	.word	.L164
	.byte	3,196,11,1,5,36,9
	.half	.L524-.L164
	.byte	3,239,22,1,5,7,9
	.half	.L906-.L524
	.byte	3,2,1,5,41,9
	.half	.L1307-.L906
	.byte	1,5,3,9
	.half	.L1308-.L1307
	.byte	1,5,22,7,9
	.half	.L1309-.L1308
	.byte	3,2,1,5,58,9
	.half	.L1310-.L1309
	.byte	1,5,14,9
	.half	.L907-.L1310
	.byte	3,2,1,5,19,9
	.half	.L909-.L907
	.byte	3,1,1,5,28,9
	.half	.L908-.L909
	.byte	3,1,1,5,17,9
	.half	.L912-.L908
	.byte	3,5,1,5,46,9
	.half	.L1311-.L912
	.byte	1,5,56,9
	.half	.L911-.L1311
	.byte	1,5,8,9
	.half	.L1312-.L911
	.byte	1,5,7,9
	.half	.L1313-.L1312
	.byte	3,1,1,5,38,9
	.half	.L1314-.L1313
	.byte	1,5,17,9
	.half	.L1315-.L1314
	.byte	3,126,1,5,26,9
	.half	.L914-.L1315
	.byte	3,5,1,5,43,9
	.half	.L913-.L914
	.byte	3,1,1,5,17,9
	.half	.L916-.L913
	.byte	3,1,1,5,55,9
	.half	.L1316-.L916
	.byte	3,2,1,5,17,9
	.half	.L1317-.L1316
	.byte	1,5,26,9
	.half	.L918-.L1317
	.byte	3,4,1,5,22,9
	.half	.L919-.L918
	.byte	3,1,1,5,60,9
	.half	.L920-.L919
	.byte	1,5,27,9
	.half	.L1318-.L920
	.byte	3,5,1,5,5,9
	.half	.L1319-.L1318
	.byte	3,127,1,5,32,9
	.half	.L1320-.L1319
	.byte	1,5,65,9
	.half	.L1321-.L1320
	.byte	1,5,27,9
	.half	.L917-.L1321
	.byte	3,1,1,5,57,9
	.half	.L921-.L917
	.byte	3,1,1,5,43,9
	.half	.L1322-.L921
	.byte	1,5,76,9
	.half	.L1323-.L1322
	.byte	3,126,1,5,45,9
	.half	.L1324-.L1323
	.byte	1,5,5,9
	.half	.L540-.L1324
	.byte	3,11,1,9
	.half	.L541-.L540
	.byte	3,6,1,9
	.half	.L544-.L541
	.byte	3,6,1,5,37,9
	.half	.L73-.L544
	.byte	3,6,1,5,49,9
	.half	.L1325-.L73
	.byte	1,5,35,9
	.half	.L1326-.L1325
	.byte	3,3,1,5,1,9
	.half	.L525-.L1326
	.byte	3,234,104,1,7,9
	.half	.L219-.L525
	.byte	0,1,1
.L1304:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L164,0,.L219-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_info'
.L220:
	.word	585
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_EnableControllerInterrupts',0,1,245,11,6,1,1,1
	.word	.L166,.L548,.L165
	.byte	4
	.byte	'Controller',0,1,245,11,53
	.word	.L341,.L549
	.byte	5
	.word	.L166,.L548
	.byte	6
	.word	.L550,.L551,.L552
	.byte	7
	.word	.L553,.L554
	.byte	8
	.word	.L555,.L551,.L552
	.byte	9
	.byte	'RegAddress',0,1,142,35,21
	.word	.L529,.L556
	.byte	9
	.byte	'RegSetMask',0,1,143,35,10
	.word	.L363,.L557
	.byte	9
	.byte	'HwControllerId',0,1,144,35,9
	.word	.L341,.L558
	.byte	9
	.byte	'BOSrcNum',0,1,145,35,9
	.word	.L341,.L559
	.byte	9
	.byte	'RxSrcNum',0,1,146,35,9
	.word	.L341,.L560
	.byte	9
	.byte	'KerIdx',0,1,147,35,9
	.word	.L341,.L561
	.byte	9
	.byte	'HwCtrlIDKer',0,1,148,35,9
	.word	.L341,.L562
	.byte	9
	.byte	'IntSrcOffset',0,1,149,35,9
	.word	.L341,.L563
	.byte	8
	.word	.L564,.L565,.L566
	.byte	9
	.byte	'val',0,1,187,35,7
	.word	.L363,.L567
	.byte	0,8
	.word	.L568,.L569,.L570
	.byte	9
	.byte	'val',0,1,195,35,7
	.word	.L363,.L571
	.byte	0,8
	.word	.L572,.L573,.L74
	.byte	9
	.byte	'val',0,1,204,35,7
	.word	.L363,.L574
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_line'
.L222:
	.word	.L1328-.L1327
.L1327:
	.half	3
	.word	.L1330-.L1329
.L1329:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1330:
	.byte	5,6,7,0,5,2
	.word	.L166
	.byte	3,244,11,1,5,35,9
	.half	.L551-.L166
	.byte	3,163,23,1,5,7,9
	.half	.L926-.L551
	.byte	3,4,1,5,41,9
	.half	.L1331-.L926
	.byte	1,5,3,9
	.half	.L1332-.L1331
	.byte	1,5,51,7,9
	.half	.L1333-.L1332
	.byte	3,4,1,5,43,9
	.half	.L1334-.L1333
	.byte	3,2,1,5,5,9
	.half	.L1335-.L1334
	.byte	1,5,24,7,9
	.half	.L1336-.L1335
	.byte	3,2,1,5,60,9
	.half	.L1337-.L1336
	.byte	1,5,16,9
	.half	.L927-.L1337
	.byte	3,3,1,5,21,9
	.half	.L929-.L927
	.byte	3,1,1,5,30,9
	.half	.L928-.L929
	.byte	3,1,1,5,19,9
	.half	.L932-.L928
	.byte	3,6,1,5,48,9
	.half	.L1338-.L932
	.byte	1,5,58,9
	.half	.L931-.L1338
	.byte	1,5,10,9
	.half	.L1339-.L931
	.byte	1,5,9,9
	.half	.L1340-.L1339
	.byte	3,1,1,5,40,9
	.half	.L1341-.L1340
	.byte	1,5,19,9
	.half	.L1342-.L1341
	.byte	3,126,1,5,9,9
	.half	.L934-.L1342
	.byte	3,4,1,5,23,9
	.half	.L1343-.L934
	.byte	1,5,19,9
	.half	.L1344-.L1343
	.byte	3,127,1,5,9,9
	.half	.L935-.L1344
	.byte	3,7,1,5,29,9
	.half	.L1345-.L935
	.byte	1,5,16,9
	.half	.L933-.L1345
	.byte	1,5,31,9
	.half	.L937-.L933
	.byte	3,1,1,5,58,9
	.half	.L1346-.L937
	.byte	1,5,27,9
	.half	.L1347-.L1346
	.byte	3,1,1,5,37,9
	.half	.L1348-.L1347
	.byte	1,5,7,9
	.half	.L565-.L1348
	.byte	3,1,1,5,55,9
	.half	.L566-.L565
	.byte	3,5,1,5,58,9
	.half	.L1349-.L566
	.byte	3,1,1,5,27,9
	.half	.L936-.L1349
	.byte	3,1,1,5,37,9
	.half	.L930-.L936
	.byte	1,5,7,9
	.half	.L569-.L930
	.byte	3,1,1,5,55,9
	.half	.L570-.L569
	.byte	3,6,1,5,56,9
	.half	.L938-.L570
	.byte	3,1,1,5,69,9
	.half	.L940-.L938
	.byte	1,5,52,9
	.half	.L1350-.L940
	.byte	3,1,1,5,7,9
	.half	.L573-.L1350
	.byte	3,1,1,5,34,9
	.half	.L74-.L573
	.byte	3,5,1,5,1,9
	.half	.L552-.L74
	.byte	3,187,104,1,7,9
	.half	.L224-.L552
	.byte	0,1,1
.L1328:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L166,0,.L224-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_info'
.L225:
	.word	744
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L228,.L227
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_Write',0,1,175,12,16
	.word	.L494
	.byte	1,1,1
	.word	.L168,.L575,.L167
	.byte	4
	.byte	'Hth',0,1,175,12,53
	.word	.L339,.L576
	.byte	4
	.byte	'PduInfo',0,1,176,12,55
	.word	.L577,.L578
	.byte	5
	.word	.L168,.L575
	.byte	6
	.byte	'HwObjectId',0,1,179,12,10
	.word	.L339,.L579
	.byte	6
	.byte	'HthIndex',0,1,180,12,10
	.word	.L339,.L580
	.byte	6
	.byte	'RetValue',0,1,187,12,18
	.word	.L494,.L581
	.byte	7
	.word	.L582,.L583,.L83
	.byte	8
	.word	.L584,.L585
	.byte	8
	.word	.L586,.L587
	.byte	8
	.word	.L588,.L589
	.byte	9
	.word	.L590,.L583,.L83
	.byte	6
	.byte	'CanCtrStat',0,1,139,37,19
	.word	.L591,.L592
	.byte	6
	.byte	'MoData0_3',0,1,140,37,20
	.word	.L529,.L593
	.byte	6
	.byte	'MoData4_7',0,1,141,37,20
	.word	.L529,.L594
	.byte	6
	.byte	'Index',0,1,149,37,9
	.word	.L341,.L595
	.byte	6
	.byte	'Index1',0,1,150,37,9
	.word	.L341,.L596
	.byte	6
	.byte	'TxMOIdx',0,1,151,37,10
	.word	.L339,.L597
	.byte	6
	.byte	'TxHandleIdx',0,1,152,37,10
	.word	.L339,.L598
	.byte	6
	.byte	'RetVal',0,1,161,37,18
	.word	.L494,.L599
	.byte	6
	.byte	'KerIdx',0,1,162,37,9
	.word	.L341,.L600
	.byte	6
	.byte	'MsgDLC',0,1,163,37,9
	.word	.L341,.L601
	.byte	6
	.byte	'Loc_Sdu',0,1,164,37,9
	.word	.L341,.L602
	.byte	9
	.word	.L603,.L604,.L605
	.byte	6
	.byte	'val',0,1,140,38,6
	.word	.L363,.L606
	.byte	0,9
	.word	.L607,.L608,.L609
	.byte	6
	.byte	'val',0,1,171,38,5
	.word	.L363,.L610
	.byte	0,9
	.word	.L611,.L612,.L79
	.byte	6
	.byte	'val',0,1,223,38,9
	.word	.L363,.L613
	.byte	0,9
	.word	.L614,.L615,.L616
	.byte	6
	.byte	'val',0,1,238,38,9
	.word	.L363,.L617
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_line'
.L227:
	.word	.L1352-.L1351
.L1351:
	.half	3
	.word	.L1354-.L1353
.L1353:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1354:
	.byte	5,16,7,0,5,2
	.word	.L168
	.byte	3,174,12,1,5,31,9
	.half	.L946-.L168
	.byte	3,46,1,5,45,9
	.half	.L1355-.L946
	.byte	1,5,29,9
	.half	.L1356-.L1355
	.byte	1,5,16,9
	.half	.L944-.L1356
	.byte	1,5,32,9
	.half	.L947-.L944
	.byte	3,9,1,5,56,9
	.half	.L1357-.L947
	.byte	1,5,66,9
	.half	.L1358-.L1357
	.byte	1,5,10,9
	.half	.L583-.L1358
	.byte	3,192,24,1,9
	.half	.L949-.L583
	.byte	3,1,1,5,5,9
	.half	.L950-.L949
	.byte	3,6,1,5,34,9
	.half	.L952-.L950
	.byte	3,11,1,5,4,9
	.half	.L945-.L952
	.byte	3,41,1,5,24,9
	.half	.L1359-.L945
	.byte	3,1,1,5,14,9
	.half	.L1360-.L1359
	.byte	3,126,1,5,7,9
	.half	.L1361-.L1360
	.byte	3,9,1,5,3,9
	.half	.L1362-.L1361
	.byte	1,5,5,7,9
	.half	.L1363-.L1362
	.byte	3,3,1,5,35,9
	.half	.L1364-.L1363
	.byte	3,4,1,5,6,9
	.half	.L1365-.L1364
	.byte	3,26,1,9
	.half	.L604-.L1365
	.byte	3,2,1,5,21,9
	.half	.L605-.L604
	.byte	3,16,1,5,5,9
	.half	.L608-.L605
	.byte	3,15,1,5,44,9
	.half	.L609-.L608
	.byte	3,10,1,5,56,9
	.half	.L1366-.L609
	.byte	1,5,68,9
	.half	.L1367-.L1366
	.byte	1,9
	.half	.L957-.L1367
	.byte	3,4,1,5,14,9
	.half	.L959-.L957
	.byte	3,25,1,5,48,9
	.half	.L961-.L959
	.byte	1,5,7,9
	.half	.L78-.L961
	.byte	3,2,1,5,25,7,9
	.half	.L1368-.L78
	.byte	3,6,1,5,30,9
	.half	.L1369-.L1368
	.byte	1,5,9,9
	.half	.L612-.L1369
	.byte	3,5,1,5,11,9
	.half	.L79-.L612
	.byte	3,5,1,5,44,7,9
	.half	.L1370-.L79
	.byte	1,5,25,7,9
	.half	.L1371-.L1370
	.byte	3,5,1,5,30,9
	.half	.L1372-.L1371
	.byte	1,5,9,9
	.half	.L615-.L1372
	.byte	3,5,1,5,15,9
	.half	.L616-.L615
	.byte	3,3,1,5,55,9
	.half	.L80-.L616
	.byte	3,97,1,5,40,9
	.half	.L77-.L80
	.byte	1,5,48,9
	.half	.L1373-.L77
	.byte	1,5,25,7,9
	.half	.L1374-.L1373
	.byte	3,200,0,1,5,57,9
	.half	.L960-.L1374
	.byte	1,5,23,9
	.half	.L1375-.L960
	.byte	1,5,41,9
	.half	.L967-.L1375
	.byte	3,2,1,5,5,9
	.half	.L958-.L967
	.byte	3,2,1,5,21,9
	.half	.L1376-.L958
	.byte	3,4,1,5,3,9
	.half	.L1377-.L1376
	.byte	1,5,21,9
	.half	.L1378-.L1377
	.byte	1,5,29,9
	.half	.L1379-.L1378
	.byte	1,5,52,9
	.half	.L1380-.L1379
	.byte	1,5,43,9
	.half	.L1381-.L1380
	.byte	1,5,5,9
	.half	.L1382-.L1381
	.byte	3,4,1,5,66,9
	.half	.L1383-.L1382
	.byte	3,116,1,5,35,9
	.half	.L76-.L1383
	.byte	3,20,1,5,12,9
	.half	.L1384-.L76
	.byte	3,2,1,5,3,9
	.half	.L82-.L1384
	.byte	3,2,1,9
	.half	.L83-.L82
	.byte	3,193,101,1,5,1,9
	.half	.L84-.L83
	.byte	3,1,1,7,9
	.half	.L229-.L84
	.byte	0,1,1
.L1352:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L168,0,.L229-.L168,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_info'
.L230:
	.word	255
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L233,.L232
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Write',0,1,145,13,6,1,1,1
	.word	.L170,.L618,.L169
	.byte	4
	.word	.L170,.L618
	.byte	5
	.byte	'CtrlIndex',0,1,148,13,9
	.word	.L341,.L619
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_line'
.L232:
	.word	.L1386-.L1385
.L1385:
	.half	3
	.word	.L1388-.L1387
.L1387:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1388:
	.byte	5,23,7,0,5,2
	.word	.L170
	.byte	3,158,13,1,5,3,9
	.half	.L1389-.L170
	.byte	1,5,18,7,9
	.half	.L1390-.L1389
	.byte	3,7,1,5,68,9
	.half	.L969-.L1390
	.byte	1,5,9,9
	.half	.L87-.L969
	.byte	3,5,1,5,23,9
	.half	.L1391-.L87
	.byte	1,5,50,9
	.half	.L1392-.L1391
	.byte	1,5,63,9
	.half	.L1393-.L1392
	.byte	3,1,1,5,7,9
	.half	.L1394-.L1393
	.byte	3,126,1,5,48,7,9
	.half	.L1395-.L1394
	.byte	3,5,1,5,78,9
	.half	.L88-.L1395
	.byte	3,119,1,5,68,9
	.half	.L86-.L88
	.byte	1,5,1,7,9
	.half	.L85-.L86
	.byte	3,15,1,7,9
	.half	.L234-.L85
	.byte	0,1,1
.L1386:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_ranges'
.L233:
	.word	-1,.L170,0,.L234-.L170,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_info'
.L235:
	.word	254
	.half	3
	.word	.L236
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L238,.L237
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Read',0,1,209,13,6,1,1,1
	.word	.L172,.L620,.L171
	.byte	4
	.word	.L172,.L620
	.byte	5
	.byte	'CtrlIndex',0,1,212,13,9
	.word	.L341,.L621
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_abbrev'
.L236:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_line'
.L237:
	.word	.L1397-.L1396
.L1396:
	.half	3
	.word	.L1399-.L1398
.L1398:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1399:
	.byte	5,23,7,0,5,2
	.word	.L172
	.byte	3,222,13,1,5,3,9
	.half	.L1400-.L172
	.byte	1,5,18,7,9
	.half	.L1401-.L1400
	.byte	3,8,1,5,68,9
	.half	.L970-.L1401
	.byte	1,5,9,9
	.half	.L91-.L970
	.byte	3,5,1,5,23,9
	.half	.L1402-.L91
	.byte	1,5,50,9
	.half	.L1403-.L1402
	.byte	1,5,57,9
	.half	.L1404-.L1403
	.byte	3,1,1,5,7,9
	.half	.L1405-.L1404
	.byte	3,126,1,5,11,7,9
	.half	.L1406-.L1405
	.byte	3,5,1,5,38,9
	.half	.L1407-.L1406
	.byte	1,5,9,9
	.half	.L1408-.L1407
	.byte	3,127,1,5,67,7,9
	.half	.L1409-.L1408
	.byte	3,4,1,5,78,9
	.half	.L92-.L1409
	.byte	3,116,1,5,68,9
	.half	.L90-.L92
	.byte	1,5,1,7,9
	.half	.L89-.L90
	.byte	3,20,1,7,9
	.half	.L239-.L89
	.byte	0,1,1
.L1397:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_ranges'
.L238:
	.word	-1,.L172,0,.L239-.L172,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_info'
.L240:
	.word	256
	.half	3
	.word	.L241
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L243,.L242
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_BusOff',0,1,150,14,6,1,1,1
	.word	.L174,.L622,.L173
	.byte	4
	.word	.L174,.L622
	.byte	5
	.byte	'CtrlIndex',0,1,152,14,9
	.word	.L341,.L623
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_abbrev'
.L241:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_line'
.L242:
	.word	.L1411-.L1410
.L1410:
	.half	3
	.word	.L1413-.L1412
.L1412:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1413:
	.byte	5,23,7,0,5,2
	.word	.L174
	.byte	3,161,14,1,5,3,9
	.half	.L1414-.L174
	.byte	1,5,18,7,9
	.half	.L1415-.L1414
	.byte	3,5,1,5,68,9
	.half	.L971-.L1415
	.byte	1,5,9,9
	.half	.L96-.L971
	.byte	3,5,1,5,23,9
	.half	.L1416-.L96
	.byte	1,5,50,9
	.half	.L1417-.L1416
	.byte	1,5,61,9
	.half	.L1418-.L1417
	.byte	3,1,1,5,7,9
	.half	.L1419-.L1418
	.byte	3,126,1,5,48,7,9
	.half	.L1420-.L1419
	.byte	3,5,1,5,78,9
	.half	.L97-.L1420
	.byte	3,119,1,5,68,9
	.half	.L95-.L97
	.byte	1,5,1,7,9
	.half	.L94-.L95
	.byte	3,13,1,7,9
	.half	.L244-.L94
	.byte	0,1,1
.L1411:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_ranges'
.L243:
	.word	-1,.L174,0,.L244-.L174,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_info'
.L245:
	.word	232
	.half	3
	.word	.L246
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L248,.L247
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Wakeup',0,1,207,14,6,1,1,1
	.word	.L176,.L624,.L175
	.byte	4
	.word	.L176,.L624
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_abbrev'
.L246:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_line'
.L247:
	.word	.L1422-.L1421
.L1421:
	.half	3
	.word	.L1424-.L1423
.L1423:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1424:
	.byte	5,23,7,0,5,2
	.word	.L176
	.byte	3,222,14,1,5,3,9
	.half	.L1425-.L176
	.byte	1,5,1,7,9
	.half	.L98-.L1425
	.byte	3,30,1,7,9
	.half	.L249-.L98
	.byte	0,1,1
.L1422:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_ranges'
.L248:
	.word	-1,.L176,0,.L249-.L176,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_info'
.L250:
	.word	230
	.half	3
	.word	.L251
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L253,.L252
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_MainFunction_Mode',0,1,152,15,6,1,1,1
	.word	.L178,.L625,.L177
	.byte	4
	.word	.L178,.L625
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_abbrev'
.L251:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_line'
.L252:
	.word	.L1427-.L1426
.L1426:
	.half	3
	.word	.L1429-.L1428
.L1428:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1429:
	.byte	5,1,7,0,5,2
	.word	.L178
	.byte	3,157,15,1,7,9
	.half	.L254-.L178
	.byte	0,1,1
.L1427:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_ranges'
.L253:
	.word	-1,.L178,0,.L254-.L178,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_info'
.L255:
	.word	275
	.half	3
	.word	.L256
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L258,.L257
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_CheckWakeup',0,1,187,15,16
	.word	.L494
	.byte	1,1,1
	.word	.L180,.L626,.L179
	.byte	4
	.byte	'Controller',0,1,187,15,47
	.word	.L341,.L627
	.byte	5
	.word	.L180,.L626
	.byte	6
	.byte	'RetValue',0,1,192,15,18
	.word	.L494,.L628
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_abbrev'
.L256:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_line'
.L257:
	.word	.L1431-.L1430
.L1430:
	.half	3
	.word	.L1433-.L1432
.L1432:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1433:
	.byte	5,12,7,0,5,2
	.word	.L180
	.byte	3,193,15,1,5,3,9
	.half	.L972-.L180
	.byte	3,28,1,5,5,7,9
	.half	.L99-.L972
	.byte	3,2,1,5,1,9
	.half	.L100-.L99
	.byte	3,1,1,7,9
	.half	.L259-.L100
	.byte	0,1,1
.L1431:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_ranges'
.L258:
	.word	-1,.L180,0,.L259-.L180,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_info'
.L260:
	.word	353
	.half	3
	.word	.L261
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L263,.L262
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_IsrBusOffHandler',0,1,132,18,6,1,1,1
	.word	.L188,.L629,.L187
	.byte	4
	.byte	'HwControllerId',0,1,132,18,42
	.word	.L341,.L630
	.byte	5
	.word	.L188,.L629
	.byte	6
	.byte	'BoffStatus',0,1,134,18,9
	.word	.L341,.L631
	.byte	6
	.byte	'ControllerId',0,1,135,18,9
	.word	.L341,.L632
	.byte	6
	.byte	'KerIdx',0,1,136,18,9
	.word	.L341,.L633
	.byte	6
	.byte	'HwCtrlIDKer',0,1,137,18,9
	.word	.L341,.L634
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_abbrev'
.L261:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_line'
.L262:
	.word	.L1435-.L1434
.L1434:
	.half	3
	.word	.L1437-.L1436
.L1436:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1437:
	.byte	5,12,7,0,5,2
	.word	.L188
	.byte	3,139,18,1,5,17,9
	.half	.L997-.L188
	.byte	3,1,1,5,44,9
	.half	.L999-.L997
	.byte	3,28,1,5,25,9
	.half	.L1438-.L999
	.byte	1,5,32,9
	.half	.L1439-.L1438
	.byte	1,5,43,9
	.half	.L1440-.L1439
	.byte	1,5,59,9
	.half	.L1441-.L1440
	.byte	1,5,62,9
	.half	.L1001-.L1441
	.byte	1,5,17,9
	.half	.L1442-.L1001
	.byte	3,2,1,5,28,9
	.half	.L1443-.L1442
	.byte	1,5,44,9
	.half	.L1444-.L1443
	.byte	1,5,7,9
	.half	.L998-.L1444
	.byte	1,5,60,7,9
	.half	.L1445-.L998
	.byte	3,1,1,5,12,7,9
	.half	.L1446-.L1445
	.byte	3,3,1,5,23,9
	.half	.L1447-.L1446
	.byte	1,5,34,9
	.half	.L1448-.L1447
	.byte	3,1,1,5,42,9
	.half	.L1002-.L1448
	.byte	3,127,1,5,20,9
	.half	.L1449-.L1002
	.byte	3,3,1,5,33,9
	.half	.L1450-.L1449
	.byte	1,5,28,9
	.half	.L996-.L1450
	.byte	3,4,1,5,55,9
	.half	.L1451-.L996
	.byte	1,5,5,9
	.half	.L1452-.L1451
	.byte	1,5,51,7,9
	.half	.L1453-.L1452
	.byte	3,3,1,5,49,9
	.half	.L1454-.L1453
	.byte	1,5,30,9
	.half	.L1455-.L1454
	.byte	3,3,1,5,1,9
	.half	.L112-.L1455
	.byte	3,4,1,7,9
	.half	.L264-.L112
	.byte	0,1,1
.L1435:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_ranges'
.L263:
	.word	-1,.L188,0,.L264-.L188,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_info'
.L265:
	.word	353
	.half	3
	.word	.L266
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L268,.L267
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_IsrBusOffRuntime',0,1,220,18,6,1,1,1
	.word	.L190,.L635,.L189
	.byte	4
	.byte	'HwControllerId',0,1,220,18,42
	.word	.L341,.L636
	.byte	5
	.word	.L190,.L635
	.byte	6
	.byte	'BoffStatus',0,1,222,18,9
	.word	.L341,.L637
	.byte	6
	.byte	'ControllerId',0,1,223,18,9
	.word	.L341,.L638
	.byte	6
	.byte	'KerIdx',0,1,224,18,9
	.word	.L341,.L639
	.byte	6
	.byte	'HwCtrlIDKer',0,1,225,18,9
	.word	.L341,.L640
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_abbrev'
.L266:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_line'
.L267:
	.word	.L1457-.L1456
.L1456:
	.half	3
	.word	.L1459-.L1458
.L1458:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1459:
	.byte	5,12,7,0,5,2
	.word	.L190
	.byte	3,227,18,1,5,17,9
	.half	.L1004-.L190
	.byte	3,1,1,5,24,9
	.half	.L1006-.L1004
	.byte	3,28,1,5,65,9
	.half	.L1008-.L1006
	.byte	3,1,1,5,9,9
	.half	.L1460-.L1008
	.byte	3,2,1,5,7,9
	.half	.L1005-.L1460
	.byte	1,5,68,7,9
	.half	.L1461-.L1005
	.byte	3,1,1,5,5,7,9
	.half	.L1462-.L1461
	.byte	3,3,1,5,20,9
	.half	.L1463-.L1462
	.byte	3,3,1,5,33,9
	.half	.L1464-.L1463
	.byte	1,5,28,9
	.half	.L1003-.L1464
	.byte	3,4,1,5,55,9
	.half	.L1465-.L1003
	.byte	1,5,5,9
	.half	.L1466-.L1465
	.byte	1,5,51,7,9
	.half	.L1467-.L1466
	.byte	3,3,1,5,49,9
	.half	.L1468-.L1467
	.byte	1,5,30,9
	.half	.L1469-.L1468
	.byte	3,3,1,5,1,9
	.half	.L115-.L1469
	.byte	3,4,1,7,9
	.half	.L269-.L115
	.byte	0,1,1
.L1457:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_ranges'
.L268:
	.word	-1,.L190,0,.L269-.L190,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_info'
.L270:
	.word	258
	.half	3
	.word	.L271
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L273,.L272
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_IsrReceiveHandler',0,1,135,16,6,1,1,1
	.word	.L182,.L641,.L181
	.byte	4
	.byte	'HwControllerId',0,1,135,16,43
	.word	.L341,.L642
	.byte	5
	.word	.L182,.L641
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_abbrev'
.L271:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_line'
.L272:
	.word	.L1471-.L1470
.L1470:
	.half	3
	.word	.L1473-.L1472
.L1472:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1473:
	.byte	5,33,7,0,5,2
	.word	.L182
	.byte	3,140,16,1,5,46,9
	.half	.L1474-.L182
	.byte	1,5,5,9
	.half	.L1475-.L1474
	.byte	1,5,32,9
	.half	.L1476-.L1475
	.byte	1,5,3,9
	.half	.L1477-.L1476
	.byte	3,127,1,5,25,7,9
	.half	.L1478-.L1477
	.byte	3,3,1,5,1,9
	.half	.L101-.L1478
	.byte	3,16,1,7,9
	.half	.L274-.L101
	.byte	0,1,1
.L1471:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_ranges'
.L273:
	.word	-1,.L182,0,.L274-.L182,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_info'
.L275:
	.word	448
	.half	3
	.word	.L276
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L278,.L277
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_IsrTransmitHandler',0,1,187,16,6,1,1,1
	.word	.L184,.L643,.L183
	.byte	4
	.byte	'HwControllerId',0,1,187,16,44
	.word	.L341,.L644
	.byte	5
	.word	.L184,.L643
	.byte	6
	.byte	'MsiMaskCopy',0,1,190,16,17
	.word	.L645,.L646
	.byte	6
	.byte	'HwObjectId',0,1,191,16,10
	.word	.L339,.L647
	.byte	6
	.byte	'TxHandleIdx',0,1,192,16,10
	.word	.L339,.L648
	.byte	6
	.byte	'TxMOIdx',0,1,193,16,10
	.word	.L339,.L649
	.byte	6
	.byte	'PndBitPosition',0,1,194,16,9
	.word	.L341,.L650
	.byte	6
	.byte	'MsgIndex',0,1,195,16,9
	.word	.L341,.L651
	.byte	6
	.byte	'LoopBreak',0,1,196,16,9
	.word	.L341,.L652
	.byte	6
	.byte	'KerIdx',0,1,197,16,9
	.word	.L341,.L653
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_abbrev'
.L276:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_line'
.L277:
	.word	.L1480-.L1479
.L1479:
	.half	3
	.word	.L1482-.L1481
.L1481:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1482:
	.byte	5,6,7,0,5,2
	.word	.L184
	.byte	3,186,16,1,5,1,9
	.half	.L974-.L184
	.byte	3,15,1,5,12,7,9
	.half	.L1483-.L974
	.byte	3,5,1,5,17,9
	.half	.L975-.L1483
	.byte	3,4,1,5,24,9
	.half	.L1484-.L975
	.byte	1,5,41,9
	.half	.L1485-.L1484
	.byte	1,5,15,9
	.half	.L1486-.L1485
	.byte	1,5,13,9
	.half	.L1487-.L1486
	.byte	3,1,1,5,19,9
	.half	.L976-.L1487
	.byte	3,3,1,5,33,9
	.half	.L1488-.L976
	.byte	1,5,50,9
	.half	.L977-.L1488
	.byte	3,1,1,5,12,9
	.half	.L104-.L977
	.byte	3,4,1,5,48,9
	.half	.L1489-.L104
	.byte	1,5,34,9
	.half	.L1490-.L1489
	.byte	1,5,47,9
	.half	.L1491-.L1490
	.byte	1,5,63,9
	.half	.L1492-.L1491
	.byte	1,5,32,9
	.half	.L1493-.L1492
	.byte	1,5,79,9
	.half	.L1494-.L1493
	.byte	3,7,1,5,16,9
	.half	.L106-.L1494
	.byte	3,3,1,5,39,9
	.half	.L1495-.L106
	.byte	3,4,1,5,49,9
	.half	.L1496-.L1495
	.byte	3,1,1,5,59,9
	.half	.L1497-.L1496
	.byte	1,5,63,9
	.half	.L1498-.L1497
	.byte	1,5,44,9
	.half	.L979-.L1498
	.byte	3,3,1,5,45,9
	.half	.L1499-.L979
	.byte	3,127,1,5,29,9
	.half	.L980-.L1499
	.byte	3,4,1,5,61,9
	.half	.L1500-.L980
	.byte	1,5,27,9
	.half	.L1501-.L1500
	.byte	1,5,45,9
	.half	.L982-.L1501
	.byte	3,1,1,5,14,9
	.half	.L983-.L982
	.byte	3,3,1,5,27,9
	.half	.L1502-.L983
	.byte	1,5,26,9
	.half	.L981-.L1502
	.byte	1,5,31,9
	.half	.L1503-.L981
	.byte	3,1,1,5,45,9
	.half	.L1504-.L1503
	.byte	3,127,1,5,14,9
	.half	.L1505-.L1504
	.byte	3,4,1,5,29,9
	.half	.L1506-.L1505
	.byte	1,5,25,9
	.half	.L1507-.L1506
	.byte	3,1,1,5,33,9
	.half	.L1508-.L1507
	.byte	1,5,9,9
	.half	.L1509-.L1508
	.byte	1,5,42,9
	.half	.L1510-.L1509
	.byte	3,127,1,5,57,9
	.half	.L1511-.L1510
	.byte	3,4,1,5,39,9
	.half	.L1512-.L1511
	.byte	1,5,57,9
	.half	.L1513-.L1512
	.byte	1,5,65,9
	.half	.L1514-.L1513
	.byte	1,5,21,9
	.half	.L105-.L1514
	.byte	3,101,1,5,35,9
	.half	.L1515-.L105
	.byte	1,5,45,9
	.half	.L1516-.L1515
	.byte	1,5,48,9
	.half	.L1517-.L1516
	.byte	1,5,21,9
	.half	.L1518-.L1517
	.byte	3,1,1,5,11,9
	.half	.L1519-.L1518
	.byte	3,127,1,5,64,7,9
	.half	.L1520-.L1519
	.byte	3,1,1,5,62,9
	.half	.L1521-.L1520
	.byte	1,5,13,7,9
	.half	.L107-.L1521
	.byte	3,118,1,5,17,9
	.half	.L103-.L107
	.byte	3,127,1,5,31,9
	.half	.L1522-.L103
	.byte	1,5,50,9
	.half	.L1523-.L1522
	.byte	1,5,10,7,9
	.half	.L1524-.L1523
	.byte	3,43,1,5,33,9
	.half	.L1525-.L1524
	.byte	1,5,31,9
	.half	.L1526-.L1525
	.byte	1,5,1,9
	.half	.L102-.L1526
	.byte	3,5,1,7,9
	.half	.L279-.L102
	.byte	0,1,1
.L1480:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_ranges'
.L278:
	.word	-1,.L184,0,.L279-.L184,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_info'
.L280:
	.word	476
	.half	3
	.word	.L281
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L283,.L282
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_IsrTransmitRuntime',0,1,164,17,6,1,1,1
	.word	.L186,.L654,.L185
	.byte	4
	.byte	'HwControllerId',0,1,164,17,44
	.word	.L341,.L655
	.byte	5
	.word	.L186,.L654
	.byte	6
	.byte	'HwObjectId',0,1,168,17,10
	.word	.L339,.L656
	.byte	6
	.byte	'TxMOIdx',0,1,169,17,10
	.word	.L339,.L657
	.byte	6
	.byte	'TxHandleIdx',0,1,170,17,10
	.word	.L339,.L658
	.byte	6
	.byte	'KerIdx',0,1,171,17,9
	.word	.L341,.L659
	.byte	6
	.byte	'TxObjectStart',0,1,172,17,9
	.word	.L341,.L660
	.byte	6
	.byte	'TxObjectcount',0,1,173,17,9
	.word	.L341,.L661
	.byte	6
	.byte	'ControllerId',0,1,174,17,9
	.word	.L341,.L662
	.byte	6
	.byte	'LoopIndex',0,1,175,17,9
	.word	.L341,.L663
	.byte	6
	.byte	'MOIncCntr',0,1,176,17,9
	.word	.L341,.L664
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_abbrev'
.L281:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_line'
.L282:
	.word	.L1528-.L1527
.L1527:
	.half	3
	.word	.L1530-.L1529
.L1529:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1530:
	.byte	5,2,7,0,5,2
	.word	.L186
	.byte	3,179,17,1,5,13,7,9
	.half	.L1531-.L186
	.byte	3,5,1,5,19,9
	.half	.L985-.L1531
	.byte	3,3,1,5,32,9
	.half	.L1532-.L985
	.byte	1,5,20,9
	.half	.L986-.L1532
	.byte	3,4,1,5,34,9
	.half	.L1533-.L986
	.byte	1,5,36,9
	.half	.L1534-.L1533
	.byte	3,1,1,5,66,9
	.half	.L1535-.L1534
	.byte	1,9
	.half	.L987-.L1535
	.byte	3,5,1,5,18,9
	.half	.L988-.L987
	.byte	3,14,1,5,55,9
	.half	.L989-.L988
	.byte	1,5,51,9
	.half	.L110-.L989
	.byte	3,3,1,5,12,9
	.half	.L991-.L110
	.byte	3,1,1,5,7,9
	.half	.L1536-.L991
	.byte	1,5,31,7,9
	.half	.L1537-.L1536
	.byte	3,4,1,5,63,9
	.half	.L1538-.L1537
	.byte	1,5,29,9
	.half	.L1539-.L1538
	.byte	1,5,48,9
	.half	.L993-.L1539
	.byte	3,1,1,5,8,9
	.half	.L994-.L993
	.byte	3,3,1,5,58,9
	.half	.L1540-.L994
	.byte	3,3,1,5,40,9
	.half	.L1541-.L1540
	.byte	1,5,58,9
	.half	.L1542-.L1541
	.byte	1,5,66,9
	.half	.L1543-.L1542
	.byte	1,9
	.half	.L111-.L1543
	.byte	3,113,1,5,55,9
	.half	.L109-.L111
	.byte	1,5,1,7,9
	.half	.L108-.L109
	.byte	3,23,1,7,9
	.half	.L284-.L108
	.byte	0,1,1
.L1528:
	.sdecl	'.debug_ranges',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_ranges'
.L283:
	.word	-1,.L186,0,.L284-.L186,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_info'
.L285:
	.word	1007
	.half	3
	.word	.L286
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L288,.L287
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_lReceiveHandler',0,1,163,40,13,1,1
	.word	.L196,.L665,.L195
	.byte	4
	.byte	'HwControllerId',0,1,163,40,39
	.word	.L341,.L666
	.byte	5
	.word	.L196,.L665
	.byte	6
	.byte	'MsiMaskCopy',0,1,165,40,19
	.word	.L667,.L668
	.byte	6
	.byte	'HwObjectId',0,1,166,40,10
	.word	.L339,.L669
	.byte	6
	.byte	'PndBitPosition',0,1,167,40,9
	.word	.L341,.L670
	.byte	6
	.byte	'MsgIndex',0,1,168,40,9
	.word	.L341,.L671
	.byte	6
	.byte	'KerIdx',0,1,169,40,9
	.word	.L341,.L672
	.byte	6
	.byte	'LoopBreak32',0,1,170,40,9
	.word	.L341,.L673
	.byte	7
	.word	.L674,.L675,.L676
	.byte	8
	.word	.L677,.L678
	.byte	8
	.word	.L679,.L680
	.byte	8
	.word	.L681,.L682
	.byte	8
	.word	.L683,.L684
	.byte	9
	.word	.L685,.L686
	.byte	6
	.byte	'TempMoctr',0,1,176,42,10
	.word	.L363,.L688
	.byte	6
	.byte	'MessageId',0,1,177,42,14
	.word	.L363,.L689
	.byte	6
	.byte	'MessageDlc',0,1,178,42,9
	.word	.L341,.L690
	.byte	6
	.byte	'MessageLength',0,1,179,42,9
	.word	.L341,.L691
	.byte	6
	.byte	'LoopBreak2',0,1,180,42,9
	.word	.L341,.L692
	.byte	6
	.byte	'KerIdx',0,1,181,42,9
	.word	.L341,.L693
	.byte	6
	.byte	'Hrh',0,1,182,42,10
	.word	.L339,.L694
	.byte	7
	.word	.L695,.L675,.L676
	.byte	8
	.word	.L696,.L697
	.byte	8
	.word	.L698,.L699
	.byte	9
	.word	.L700,.L701
	.byte	6
	.byte	'Hrh',0,1,147,48,10
	.word	.L339,.L703
	.byte	6
	.byte	'HrhOffset',0,1,149,48,10
	.word	.L339,.L704
	.byte	6
	.byte	'RxObjOffset',0,1,150,48,10
	.word	.L339,.L705
	.byte	0,0,7
	.word	.L695,.L702,.L130
	.byte	8
	.word	.L696,.L697
	.byte	8
	.word	.L698,.L699
	.byte	0,7
	.word	.L706,.L707,.L131
	.byte	8
	.word	.L708,.L709
	.byte	8
	.word	.L710,.L711
	.byte	8
	.word	.L712,.L713
	.byte	9
	.word	.L714,.L715
	.byte	6
	.byte	'MoData0_3',0,1,135,44,20
	.word	.L529,.L717
	.byte	6
	.byte	'MoData4_7',0,1,136,44,20
	.word	.L529,.L718
	.byte	6
	.byte	'MoDataIndex1',0,1,143,44,9
	.word	.L341,.L719
	.byte	6
	.byte	'MoDataIndex',0,1,144,44,9
	.word	.L341,.L720
	.byte	6
	.byte	'KerIdx',0,1,145,44,9
	.word	.L341,.L721
	.byte	0,0,7
	.word	.L706,.L132,.L716
	.byte	8
	.word	.L708,.L709
	.byte	8
	.word	.L710,.L711
	.byte	8
	.word	.L712,.L713
	.byte	0,0,0,7
	.word	.L674,.L687,.L128
	.byte	8
	.word	.L677,.L678
	.byte	8
	.word	.L679,.L680
	.byte	8
	.word	.L681,.L682
	.byte	8
	.word	.L683,.L684
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_abbrev'
.L286:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_line'
.L287:
	.word	.L1545-.L1544
.L1544:
	.half	3
	.word	.L1547-.L1546
.L1546:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1547:
	.byte	5,13,7,0,5,2
	.word	.L196
	.byte	3,162,40,1,5,12,9
	.half	.L1032-.L196
	.byte	3,16,1,5,18,9
	.half	.L1033-.L1032
	.byte	3,4,1,5,25,9
	.half	.L1548-.L1033
	.byte	1,5,42,9
	.half	.L1549-.L1548
	.byte	1,5,15,9
	.half	.L1550-.L1549
	.byte	1,5,17,9
	.half	.L1551-.L1550
	.byte	3,4,1,5,19,9
	.half	.L675-.L1551
	.byte	3,225,7,1,5,6,9
	.half	.L676-.L675
	.byte	3,164,120,1,5,19,9
	.half	.L127-.L676
	.byte	3,3,1,5,14,9
	.half	.L1035-.L127
	.byte	3,2,1,5,50,9
	.half	.L1552-.L1035
	.byte	1,5,36,9
	.half	.L1553-.L1552
	.byte	1,5,49,9
	.half	.L1554-.L1553
	.byte	1,5,65,9
	.half	.L1555-.L1554
	.byte	1,5,34,9
	.half	.L1556-.L1555
	.byte	1,5,13,9
	.half	.L1557-.L1556
	.byte	3,13,1,5,20,9
	.half	.L129-.L1557
	.byte	3,3,1,5,41,9
	.half	.L1558-.L129
	.byte	3,2,1,5,55,9
	.half	.L1559-.L1558
	.byte	1,5,65,9
	.half	.L1560-.L1559
	.byte	1,5,26,9
	.half	.L1561-.L1560
	.byte	1,5,69,9
	.half	.L1562-.L1561
	.byte	1,5,42,9
	.half	.L1036-.L1562
	.byte	3,5,1,5,46,9
	.half	.L1563-.L1036
	.byte	3,127,1,5,14,9
	.half	.L687-.L1563
	.byte	3,239,1,1,5,12,9
	.half	.L1037-.L687
	.byte	3,3,1,5,19,9
	.half	.L702-.L1037
	.byte	3,207,5,1,5,51,9
	.half	.L1564-.L702
	.byte	1,5,26,9
	.half	.L1039-.L1564
	.byte	3,10,1,5,33,9
	.half	.L1041-.L1039
	.byte	3,1,1,5,3,9
	.half	.L1042-.L1041
	.byte	3,4,1,5,27,9
	.half	.L130-.L1042
	.byte	3,204,122,1,5,14,9
	.half	.L1565-.L130
	.byte	1,5,7,9
	.half	.L707-.L1565
	.byte	3,195,1,1,5,14,9
	.half	.L131-.L707
	.byte	3,189,126,1,5,26,9
	.half	.L1566-.L131
	.byte	1,5,53,9
	.half	.L1567-.L1566
	.byte	3,1,1,5,45,9
	.half	.L1568-.L1567
	.byte	3,127,1,5,17,9
	.half	.L1569-.L1568
	.byte	3,17,1,5,29,9
	.half	.L1570-.L1569
	.byte	1,5,44,9
	.half	.L1571-.L1570
	.byte	1,5,48,9
	.half	.L1572-.L1571
	.byte	1,5,38,9
	.half	.L1044-.L1572
	.byte	3,24,1,5,19,9
	.half	.L1573-.L1044
	.byte	3,1,1,5,35,9
	.half	.L1574-.L1573
	.byte	1,5,56,9
	.half	.L1575-.L1574
	.byte	1,5,39,9
	.half	.L1576-.L1575
	.byte	1,5,21,9
	.half	.L1045-.L1576
	.byte	3,1,1,5,7,9
	.half	.L1046-.L1045
	.byte	3,4,1,5,23,7,9
	.half	.L1577-.L1046
	.byte	3,3,1,5,20,9
	.half	.L1578-.L1577
	.byte	3,1,1,5,12,9
	.half	.L132-.L1578
	.byte	3,234,0,1,5,40,9
	.half	.L1047-.L132
	.byte	3,5,1,5,53,9
	.half	.L1579-.L1047
	.byte	1,5,52,9
	.half	.L1048-.L1579
	.byte	1,5,64,9
	.half	.L1580-.L1048
	.byte	1,9
	.half	.L1049-.L1580
	.byte	3,4,1,5,16,9
	.half	.L1050-.L1049
	.byte	3,22,1,5,18,9
	.half	.L1051-.L1050
	.byte	3,1,1,5,56,9
	.half	.L1053-.L1051
	.byte	1,5,5,9
	.half	.L134-.L1053
	.byte	3,2,1,5,31,7,9
	.half	.L1581-.L134
	.byte	3,7,1,5,24,9
	.half	.L1582-.L1581
	.byte	3,125,1,5,40,9
	.half	.L1583-.L1582
	.byte	1,5,34,9
	.half	.L1584-.L1583
	.byte	3,1,1,5,31,9
	.half	.L1585-.L1584
	.byte	3,1,1,5,29,9
	.half	.L1586-.L1585
	.byte	1,5,59,9
	.half	.L1587-.L1586
	.byte	1,5,54,9
	.half	.L1588-.L1587
	.byte	3,126,1,5,9,9
	.half	.L135-.L1588
	.byte	3,5,1,5,48,7,9
	.half	.L1589-.L135
	.byte	1,5,31,7,9
	.half	.L1590-.L1589
	.byte	3,7,1,5,26,9
	.half	.L1591-.L1590
	.byte	3,125,1,5,42,9
	.half	.L1592-.L1591
	.byte	1,5,34,9
	.half	.L1593-.L1592
	.byte	3,1,1,5,31,9
	.half	.L1594-.L1593
	.byte	3,1,1,5,29,9
	.half	.L1595-.L1594
	.byte	1,5,60,9
	.half	.L1596-.L1595
	.byte	1,5,56,9
	.half	.L1597-.L1596
	.byte	3,126,1,5,21,9
	.half	.L1598-.L1597
	.byte	3,4,1,5,69,9
	.half	.L136-.L1598
	.byte	3,109,1,5,56,9
	.half	.L133-.L136
	.byte	1,5,17,7,9
	.half	.L716-.L133
	.byte	3,253,126,1,5,14,9
	.half	.L1055-.L716
	.byte	3,3,1,5,29,9
	.half	.L1599-.L1055
	.byte	1,5,25,9
	.half	.L1600-.L1599
	.byte	3,1,1,5,33,9
	.half	.L1601-.L1600
	.byte	1,5,9,9
	.half	.L1602-.L1601
	.byte	1,5,42,9
	.half	.L1603-.L1602
	.byte	3,127,1,5,24,9
	.half	.L1604-.L1603
	.byte	3,11,1,5,36,9
	.half	.L1605-.L1604
	.byte	1,5,53,9
	.half	.L1606-.L1605
	.byte	1,5,12,9
	.half	.L1056-.L1606
	.byte	3,2,1,5,41,7,9
	.half	.L1607-.L1056
	.byte	3,1,1,5,17,7,9
	.half	.L138-.L1607
	.byte	3,2,1,5,27,7,9
	.half	.L139-.L138
	.byte	3,29,1,5,43,9
	.half	.L1608-.L139
	.byte	1,5,26,9
	.half	.L128-.L1608
	.byte	3,234,124,1,5,17,9
	.half	.L1609-.L128
	.byte	3,1,1,5,27,9
	.half	.L1610-.L1609
	.byte	1,5,32,9
	.half	.L1611-.L1610
	.byte	1,5,21,9
	.half	.L1612-.L1611
	.byte	3,1,1,5,15,9
	.half	.L1613-.L1612
	.byte	3,126,1,5,39,7,9
	.half	.L1614-.L1613
	.byte	3,3,1,5,37,9
	.half	.L1615-.L1614
	.byte	1,5,11,7,9
	.half	.L140-.L1615
	.byte	3,115,1,5,19,9
	.half	.L126-.L140
	.byte	3,123,1,5,33,9
	.half	.L1616-.L126
	.byte	1,5,6,9
	.half	.L1617-.L1616
	.byte	3,4,1,5,12,7,9
	.half	.L1618-.L1617
	.byte	3,62,1,5,33,9
	.half	.L1619-.L1618
	.byte	1,5,31,9
	.half	.L1620-.L1619
	.byte	1,5,1,9
	.half	.L1621-.L1620
	.byte	3,2,1,7,9
	.half	.L289-.L1621
	.byte	0,1,1
.L1545:
	.sdecl	'.debug_ranges',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_ranges'
.L288:
	.word	-1,.L196,0,.L289-.L196,0,0
.L686:
	.word	-1,.L196,.L675-.L196,.L676-.L196,.L687-.L196,.L128-.L196,0,0
.L701:
	.word	-1,.L196,.L675-.L196,.L676-.L196,.L702-.L196,.L130-.L196,0,0
.L715:
	.word	-1,.L196,.L707-.L196,.L131-.L196,.L132-.L196,.L716-.L196,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_info'
.L290:
	.word	393
	.half	3
	.word	.L291
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L293,.L292
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_lClearReceivedMsg',0,1,167,32,13,1,1
	.word	.L192,.L722,.L191
	.byte	4
	.byte	'HwControllerId',0,1,167,32,41
	.word	.L341,.L723
	.byte	5
	.word	.L192,.L722
	.byte	6
	.byte	'MsiMaskCopy',0,1,169,32,19
	.word	.L724,.L725
	.byte	6
	.byte	'HwObjectId',0,1,170,32,10
	.word	.L339,.L726
	.byte	6
	.byte	'PndBitPosition',0,1,171,32,9
	.word	.L341,.L727
	.byte	6
	.byte	'MsgIndex',0,1,172,32,9
	.word	.L341,.L728
	.byte	6
	.byte	'KerIdx',0,1,173,32,9
	.word	.L341,.L729
	.byte	6
	.byte	'LoopBreak32',0,1,174,32,9
	.word	.L341,.L730
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_abbrev'
.L291:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_line'
.L292:
	.word	.L1623-.L1622
.L1622:
	.half	3
	.word	.L1625-.L1624
.L1624:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1625:
	.byte	5,13,7,0,5,2
	.word	.L192
	.byte	3,166,32,1,5,12,9
	.half	.L1010-.L192
	.byte	3,10,1,5,17,9
	.half	.L1011-.L1010
	.byte	3,4,1,5,15,9
	.half	.L1012-.L1011
	.byte	1,5,17,9
	.half	.L1626-.L1012
	.byte	3,3,1,5,50,9
	.half	.L1013-.L1626
	.byte	3,1,1,5,17,9
	.half	.L119-.L1013
	.byte	3,3,1,5,5,9
	.half	.L1015-.L119
	.byte	3,2,1,5,54,9
	.half	.L1627-.L1015
	.byte	3,10,1,5,18,9
	.half	.L121-.L1627
	.byte	3,3,1,5,32,9
	.half	.L1628-.L121
	.byte	3,2,1,5,63,9
	.half	.L1629-.L1628
	.byte	3,1,1,5,37,9
	.half	.L1016-.L1629
	.byte	3,4,1,5,44,9
	.half	.L1018-.L1016
	.byte	3,127,1,5,7,9
	.half	.L1630-.L1018
	.byte	3,4,1,9
	.half	.L1631-.L1630
	.byte	3,4,1,5,14,9
	.half	.L120-.L1631
	.byte	3,108,1,5,31,9
	.half	.L1632-.L120
	.byte	3,1,1,5,21,9
	.half	.L1633-.L1632
	.byte	3,1,1,5,12,9
	.half	.L1634-.L1633
	.byte	3,126,1,5,39,7,9
	.half	.L1635-.L1634
	.byte	3,3,1,5,37,9
	.half	.L1636-.L1635
	.byte	1,5,13,7,9
	.half	.L122-.L1636
	.byte	3,114,1,5,17,9
	.half	.L118-.L122
	.byte	3,127,1,5,31,9
	.half	.L1637-.L118
	.byte	1,5,50,9
	.half	.L1638-.L1637
	.byte	1,5,3,7,9
	.half	.L1639-.L1638
	.byte	3,37,1,5,1,9
	.half	.L1640-.L1639
	.byte	3,1,1,7,9
	.half	.L294-.L1640
	.byte	0,1,1
.L1623:
	.sdecl	'.debug_ranges',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_ranges'
.L293:
	.word	-1,.L192,0,.L294-.L192,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_info'
.L295:
	.word	976
	.half	3
	.word	.L296
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L298,.L297
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_lReceiveHandlerRuntime',0,1,159,41,13,1,1
	.word	.L198,.L731,.L197
	.byte	4
	.byte	'HwControllerId',0,1,159,41,46
	.word	.L341,.L732
	.byte	5
	.word	.L198,.L731
	.byte	6
	.byte	'HwObjectId',0,1,161,41,11
	.word	.L339,.L733
	.byte	6
	.byte	'KerIdx',0,1,162,41,10
	.word	.L341,.L734
	.byte	6
	.byte	'RxObjectStart',0,1,163,41,10
	.word	.L341,.L735
	.byte	6
	.byte	'RxObjectcount',0,1,164,41,10
	.word	.L341,.L736
	.byte	6
	.byte	'ControllerId',0,1,165,41,10
	.word	.L341,.L737
	.byte	6
	.byte	'LoopIndex',0,1,166,41,10
	.word	.L341,.L738
	.byte	6
	.byte	'MOIndex',0,1,167,41,10
	.word	.L341,.L739
	.byte	6
	.byte	'MOIndexIncrement',0,1,168,41,10
	.word	.L341,.L740
	.byte	7
	.word	.L741,.L742,.L143
	.byte	8
	.word	.L743,.L744
	.byte	8
	.word	.L745,.L746
	.byte	9
	.word	.L747,.L742,.L143
	.byte	6
	.byte	'TempMoctr',0,1,155,45,10
	.word	.L363,.L748
	.byte	6
	.byte	'MessageId',0,1,156,45,14
	.word	.L363,.L749
	.byte	6
	.byte	'MessageDlc',0,1,157,45,9
	.word	.L341,.L750
	.byte	6
	.byte	'MessageLength',0,1,158,45,9
	.word	.L341,.L751
	.byte	6
	.byte	'LoopBreak2',0,1,159,45,9
	.word	.L341,.L752
	.byte	6
	.byte	'KerIdx',0,1,160,45,9
	.word	.L341,.L753
	.byte	6
	.byte	'Hrh',0,1,161,45,10
	.word	.L339,.L754
	.byte	7
	.word	.L695,.L755,.L144
	.byte	8
	.word	.L696,.L756
	.byte	8
	.word	.L698,.L757
	.byte	9
	.word	.L700,.L755,.L144
	.byte	6
	.byte	'Hrh',0,1,147,48,10
	.word	.L339,.L758
	.byte	6
	.byte	'HrhOffset',0,1,149,48,10
	.word	.L339,.L759
	.byte	6
	.byte	'RxObjOffset',0,1,150,48,10
	.word	.L339,.L760
	.byte	0,0,7
	.word	.L761,.L762,.L145
	.byte	8
	.word	.L763,.L764
	.byte	8
	.word	.L765,.L766
	.byte	8
	.word	.L767,.L768
	.byte	10
	.word	.L769,.L770
	.byte	6
	.byte	'MoData0_3',0,1,244,46,20
	.word	.L529,.L772
	.byte	6
	.byte	'MoData4_7',0,1,245,46,20
	.word	.L529,.L773
	.byte	6
	.byte	'MoDataIndex1',0,1,252,46,9
	.word	.L341,.L774
	.byte	6
	.byte	'MoDataIndex',0,1,253,46,9
	.word	.L341,.L775
	.byte	6
	.byte	'KerIdx',0,1,254,46,9
	.word	.L341,.L776
	.byte	0,0,7
	.word	.L761,.L146,.L771
	.byte	8
	.word	.L763,.L764
	.byte	8
	.word	.L765,.L766
	.byte	8
	.word	.L767,.L768
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_abbrev'
.L296:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0
	.byte	10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_line'
.L297:
	.word	.L1642-.L1641
.L1641:
	.half	3
	.word	.L1644-.L1643
.L1643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1644:
	.byte	5,13,7,0,5,2
	.word	.L198
	.byte	3,158,41,1,5,18,9
	.half	.L1058-.L198
	.byte	3,8,1,5,13,9
	.half	.L1059-.L1058
	.byte	3,10,1,5,19,9
	.half	.L1063-.L1059
	.byte	3,2,1,5,32,9
	.half	.L1645-.L1063
	.byte	1,5,20,9
	.half	.L1062-.L1645
	.byte	3,4,1,5,34,9
	.half	.L1646-.L1062
	.byte	1,5,36,9
	.half	.L1647-.L1646
	.byte	3,1,1,5,66,9
	.half	.L1648-.L1647
	.byte	1,9
	.half	.L1065-.L1648
	.byte	3,5,1,5,18,9
	.half	.L1066-.L1065
	.byte	3,18,1,5,5,9
	.half	.L1067-.L1066
	.byte	3,5,1,5,51,9
	.half	.L142-.L1067
	.byte	3,3,1,5,12,9
	.half	.L1071-.L142
	.byte	3,1,1,5,7,9
	.half	.L1649-.L1071
	.byte	1,5,14,7,9
	.half	.L742-.L1649
	.byte	3,220,3,1,5,12,9
	.half	.L1073-.L742
	.byte	3,3,1,5,19,9
	.half	.L755-.L1073
	.byte	3,229,2,1,5,51,9
	.half	.L1650-.L755
	.byte	1,5,26,9
	.half	.L1075-.L1650
	.byte	3,10,1,5,33,9
	.half	.L1077-.L1075
	.byte	3,1,1,5,3,9
	.half	.L1078-.L1077
	.byte	3,4,1,5,7,9
	.half	.L144-.L1078
	.byte	3,178,125,1,9
	.half	.L762-.L144
	.byte	3,202,1,1,9
	.half	.L145-.L762
	.byte	3,182,126,1,5,9,9
	.half	.L1651-.L145
	.byte	3,19,1,5,41,9
	.half	.L1652-.L1651
	.byte	3,1,1,5,31,9
	.half	.L1082-.L1652
	.byte	3,24,1,5,55,9
	.half	.L1081-.L1082
	.byte	3,1,1,5,38,9
	.half	.L1653-.L1081
	.byte	1,5,23,9
	.half	.L1083-.L1653
	.byte	3,1,1,5,9,9
	.half	.L1084-.L1083
	.byte	3,5,1,5,25,7,9
	.half	.L1654-.L1084
	.byte	3,3,1,5,22,9
	.half	.L1655-.L1654
	.byte	3,1,1,5,12,9
	.half	.L146-.L1655
	.byte	3,237,0,1,5,40,9
	.half	.L1085-.L146
	.byte	3,5,1,5,53,9
	.half	.L1656-.L1085
	.byte	1,5,52,9
	.half	.L1086-.L1656
	.byte	1,5,64,9
	.half	.L1657-.L1086
	.byte	1,9
	.half	.L1087-.L1657
	.byte	3,4,1,5,16,9
	.half	.L1088-.L1087
	.byte	3,22,1,5,18,9
	.half	.L1090-.L1088
	.byte	3,1,1,5,56,9
	.half	.L1092-.L1090
	.byte	1,5,5,9
	.half	.L148-.L1092
	.byte	3,2,1,5,23,7,9
	.half	.L1658-.L148
	.byte	3,7,1,5,24,9
	.half	.L1659-.L1658
	.byte	3,125,1,5,40,9
	.half	.L1660-.L1659
	.byte	1,5,22,9
	.half	.L1661-.L1660
	.byte	3,1,1,9
	.half	.L1662-.L1661
	.byte	3,1,1,5,20,9
	.half	.L1663-.L1662
	.byte	1,5,50,9
	.half	.L1664-.L1663
	.byte	1,5,54,9
	.half	.L1665-.L1664
	.byte	3,126,1,5,9,9
	.half	.L149-.L1665
	.byte	3,5,1,5,48,7,9
	.half	.L1666-.L149
	.byte	1,5,23,7,9
	.half	.L1667-.L1666
	.byte	3,7,1,5,26,9
	.half	.L1668-.L1667
	.byte	3,125,1,5,42,9
	.half	.L1669-.L1668
	.byte	1,5,22,9
	.half	.L1670-.L1669
	.byte	3,1,1,9
	.half	.L1671-.L1670
	.byte	3,1,1,5,20,9
	.half	.L1672-.L1671
	.byte	1,5,51,9
	.half	.L1673-.L1672
	.byte	1,5,56,9
	.half	.L1674-.L1673
	.byte	3,126,1,5,21,9
	.half	.L1675-.L1674
	.byte	3,4,1,5,69,9
	.half	.L150-.L1675
	.byte	3,109,1,5,56,9
	.half	.L147-.L150
	.byte	1,5,19,7,9
	.half	.L771-.L147
	.byte	3,250,126,1,5,17,9
	.half	.L1095-.L771
	.byte	3,12,1,5,12,9
	.half	.L1096-.L1095
	.byte	3,4,1,5,41,7,9
	.half	.L1676-.L1096
	.byte	3,1,1,5,17,7,9
	.half	.L152-.L1676
	.byte	3,2,1,5,27,7,9
	.half	.L153-.L152
	.byte	3,29,1,5,43,9
	.half	.L1677-.L153
	.byte	1,5,24,9
	.half	.L143-.L1677
	.byte	3,159,123,1,5,15,9
	.half	.L1097-.L143
	.byte	3,106,1,5,5,9
	.half	.L141-.L1097
	.byte	1,5,1,7,9
	.half	.L1678-.L141
	.byte	3,25,1,7,9
	.half	.L299-.L1678
	.byte	0,1,1
.L1642:
	.sdecl	'.debug_ranges',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_ranges'
.L298:
	.word	-1,.L198,0,.L299-.L198,0,0
.L770:
	.word	-1,.L198,.L762-.L198,.L145-.L198,.L146-.L198,.L771-.L198,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_info'
.L300:
	.word	454
	.half	3
	.word	.L301
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L303,.L302
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_lClearReceivedMsgRuntime',0,1,247,32,13,1,1
	.word	.L194,.L777,.L193
	.byte	4
	.byte	'HwControllerId',0,1,247,32,48
	.word	.L341,.L778
	.byte	5
	.word	.L194,.L777
	.byte	6
	.byte	'HwObjectId',0,1,249,32,10
	.word	.L339,.L779
	.byte	6
	.byte	'KerIdx',0,1,250,32,9
	.word	.L341,.L780
	.byte	6
	.byte	'RxObjectStart',0,1,251,32,9
	.word	.L341,.L781
	.byte	6
	.byte	'RxObjectcount',0,1,252,32,9
	.word	.L341,.L782
	.byte	6
	.byte	'ControllerId',0,1,253,32,9
	.word	.L341,.L783
	.byte	6
	.byte	'LoopIndex',0,1,254,32,9
	.word	.L341,.L784
	.byte	6
	.byte	'MOIndex',0,1,255,32,9
	.word	.L341,.L785
	.byte	6
	.byte	'MOIndexIncrement',0,1,128,33,9
	.word	.L341,.L786
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_abbrev'
.L301:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_line'
.L302:
	.word	.L1680-.L1679
.L1679:
	.half	3
	.word	.L1682-.L1681
.L1681:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1682:
	.byte	5,17,7,0,5,2
	.word	.L194
	.byte	3,254,32,1,5,13,9
	.half	.L1021-.L194
	.byte	3,4,1,5,19,9
	.half	.L1023-.L1021
	.byte	3,3,1,5,32,9
	.half	.L1683-.L1023
	.byte	1,5,20,9
	.half	.L1024-.L1683
	.byte	3,4,1,5,34,9
	.half	.L1684-.L1024
	.byte	1,5,36,9
	.half	.L1685-.L1684
	.byte	3,1,1,5,66,9
	.half	.L1686-.L1685
	.byte	1,9
	.half	.L1025-.L1686
	.byte	3,5,1,5,17,9
	.half	.L1026-.L1025
	.byte	3,19,1,5,53,9
	.half	.L1020-.L1026
	.byte	1,5,49,9
	.half	.L124-.L1020
	.byte	3,2,1,5,10,9
	.half	.L1028-.L124
	.byte	3,1,1,5,5,9
	.half	.L1687-.L1028
	.byte	1,5,8,7,9
	.half	.L1688-.L1687
	.byte	3,4,1,5,23,9
	.half	.L125-.L1688
	.byte	3,5,1,5,63,9
	.half	.L1030-.L125
	.byte	3,116,1,5,53,9
	.half	.L123-.L1030
	.byte	1,5,1,7,9
	.half	.L1689-.L123
	.byte	3,15,1,7,9
	.half	.L304-.L1689
	.byte	0,1,1
.L1680:
	.sdecl	'.debug_ranges',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_ranges'
.L303:
	.word	-1,.L194,0,.L304-.L194,0,0
	.sdecl	'.debug_info',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_info'
.L305:
	.word	448
	.half	3
	.word	.L306
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L308,.L307
	.byte	2
	.word	.L201
	.byte	3
	.byte	'Can_lAllocateHwObject',0,1,168,53,23
	.word	.L341
	.byte	1,1
	.word	.L200,.L787,.L199
	.byte	4
	.byte	'HwControllerId',0,1,168,53,51
	.word	.L341,.L788
	.byte	4
	.byte	'HwObjectId',0,1,169,53,52
	.word	.L339,.L789
	.byte	5
	.word	.L200,.L787
	.byte	6
	.byte	'TimeOutIndex',0,1,171,53,10
	.word	.L363,.L790
	.byte	6
	.byte	'RetVal',0,1,172,53,18
	.word	.L341,.L791
	.byte	6
	.byte	'TempPanar2',0,1,173,53,9
	.word	.L341,.L792
	.byte	6
	.byte	'KerIdx',0,1,174,53,9
	.word	.L341,.L793
	.byte	5
	.word	.L794,.L795
	.byte	6
	.byte	'val',0,1,183,53,3
	.word	.L363,.L796
	.byte	0,5
	.word	.L795,.L797
	.byte	6
	.byte	'val',0,1,185,53,3
	.word	.L363,.L798
	.byte	0,5
	.word	.L797,.L799
	.byte	6
	.byte	'val',0,1,187,53,3
	.word	.L363,.L800
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_abbrev'
.L306:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_line'
.L307:
	.word	.L1691-.L1690
.L1690:
	.half	3
	.word	.L1693-.L1692
.L1692:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0,0,0,0,0
.L1693:
	.byte	5,10,7,0,5,2
	.word	.L200
	.byte	3,175,53,1,5,12,9
	.half	.L1098-.L200
	.byte	3,2,1,5,17,9
	.half	.L1099-.L1098
	.byte	3,4,1,5,52,9
	.half	.L1101-.L1099
	.byte	1,5,3,9
	.half	.L794-.L1101
	.byte	3,1,1,9
	.half	.L795-.L794
	.byte	3,2,1,9
	.half	.L797-.L795
	.byte	3,2,1,5,16,9
	.half	.L799-.L797
	.byte	3,4,1,5,79,9
	.half	.L1106-.L799
	.byte	3,9,1,5,17,9
	.half	.L155-.L1106
	.byte	3,3,1,5,13,9
	.half	.L154-.L155
	.byte	3,123,1,5,10,9
	.half	.L1694-.L154
	.byte	1,5,67,7,9
	.half	.L1695-.L1694
	.byte	3,2,1,5,12,7,9
	.half	.L156-.L1695
	.byte	3,16,1,5,3,9
	.half	.L157-.L156
	.byte	3,2,1,5,1,9
	.half	.L158-.L157
	.byte	3,1,1,7,9
	.half	.L309-.L158
	.byte	0,1,1
.L1691:
	.sdecl	'.debug_ranges',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_ranges'
.L308:
	.word	-1,.L200,0,.L309-.L200,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.debug_info'
.L310:
	.word	206
	.half	3
	.word	.L311
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'CAN_NUM_CONTROLLERS_IN_KERNEL',0,2,175,5,20
	.word	.L801
	.byte	5,3
	.word	CAN_NUM_CONTROLLERS_IN_KERNEL
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_NUM_CONTROLLERS_IN_KERNEL')
	.sect	'.debug_abbrev'
.L311:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_SwObjectHandle')
	.sect	'.debug_info'
.L312:
	.word	195
	.half	3
	.word	.L313
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_SwObjectHandle',0,2,215,5,3
	.word	.L802
	.byte	5,3
	.word	Can_SwObjectHandle
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_SwObjectHandle')
	.sect	'.debug_abbrev'
.L313:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.debug_info'
.L314:
	.word	211
	.half	3
	.word	.L315
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_InterruptDisableCount',0,2,237,5,14
	.word	.L803
	.byte	5,3
	.word	Can_17_MCanP_InterruptDisableCount
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_InterruptDisableCount')
	.sect	'.debug_abbrev'
.L315:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_InterruptsEnabledStatus')
	.sect	'.debug_info'
.L316:
	.word	204
	.half	3
	.word	.L317
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_InterruptsEnabledStatus',0,2,241,5,14
	.word	.L803
	.byte	5,3
	.word	Can_InterruptsEnabledStatus
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_InterruptsEnabledStatus')
	.sect	'.debug_abbrev'
.L317:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_NodeIdMap')
	.sect	'.debug_info'
.L318:
	.word	190
	.half	3
	.word	.L319
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_NodeIdMap',0,2,245,5,14
	.word	.L804
	.byte	5,3
	.word	Can_NodeIdMap
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_NodeIdMap')
	.sect	'.debug_abbrev'
.L319:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_DriverState')
	.sect	'.debug_info'
.L320:
	.word	201
	.half	3
	.word	.L321
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_DriverState',0,2,138,6,37
	.word	.L341
	.byte	5,3
	.word	Can_17_MCanP_DriverState
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_DriverState')
	.sect	'.debug_abbrev'
.L321:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_RxMessageData')
	.sect	'.debug_info'
.L322:
	.word	194
	.half	3
	.word	.L323
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_RxMessageData',0,2,147,6,14
	.word	.L805
	.byte	5,3
	.word	Can_RxMessageData
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_RxMessageData')
	.sect	'.debug_abbrev'
.L323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_kConfigPtr')
	.sect	'.debug_info'
.L324:
	.word	192
	.half	3
	.word	.L325
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_kConfigPtr',0,2,169,6,32
	.word	.L333
	.byte	1,5,3
	.word	Can_kConfigPtr
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_kConfigPtr')
	.sect	'.debug_abbrev'
.L325:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_RxMsiMask')
	.sect	'.debug_info'
.L326:
	.word	190
	.half	3
	.word	.L327
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_RxMsiMask',0,2,177,6,15
	.word	.L806
	.byte	5,3
	.word	Can_RxMsiMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_RxMsiMask')
	.sect	'.debug_abbrev'
.L327:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_TxMsiMask')
	.sect	'.debug_info'
.L328:
	.word	190
	.half	3
	.word	.L329
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_TxMsiMask',0,2,182,6,15
	.word	.L806
	.byte	5,3
	.word	Can_TxMsiMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_TxMsiMask')
	.sect	'.debug_abbrev'
.L329:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.debug_info'
.L330:
	.word	204
	.half	3
	.word	.L331
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\src\\Can_17_MCanP.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L201
	.byte	3
	.byte	'Can_17_MCanP_ControllerMode',0,2,204,6,3
	.word	.L807
	.byte	5,3
	.word	Can_17_MCanP_ControllerMode
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Can_17_MCanP_ControllerMode')
	.sect	'.debug_abbrev'
.L331:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_loc'
.L179:
	.word	-1,.L180,0,.L626-.L180
	.half	2
	.byte	138,0
	.word	0,0
.L627:
	.word	-1,.L180,0,.L626-.L180
	.half	1
	.byte	84
	.word	0,0
.L628:
	.word	-1,.L180,.L972-.L180,.L626-.L180
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_loc'
.L532:
	.word	-1,.L164,.L914-.L164,.L915-.L164
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L163:
	.word	-1,.L164,0,.L521-.L164
	.half	2
	.byte	138,0
	.word	0,0
.L522:
	.word	-1,.L164,0,.L906-.L164
	.half	1
	.byte	84
	.word	.L524-.L164,.L521-.L164
	.half	1
	.byte	88
	.word	0,0
.L527:
	.word	0,0
.L531:
	.word	-1,.L164,.L907-.L164,.L908-.L164
	.half	1
	.byte	95
	.word	0,0
.L537:
	.word	-1,.L164,.L909-.L164,.L910-.L164
	.half	1
	.byte	95
	.word	0,0
.L538:
	.word	-1,.L164,.L912-.L164,.L913-.L164
	.half	1
	.byte	81
	.word	0,0
.L536:
	.word	-1,.L164,.L909-.L164,.L911-.L164
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L530:
	.word	0,0
.L533:
	.word	-1,.L164,.L918-.L164,.L919-.L164
	.half	1
	.byte	95
	.word	0,0
.L535:
	.word	-1,.L164,.L920-.L164,.L921-.L164
	.half	1
	.byte	95
	.word	0,0
.L534:
	.word	-1,.L164,.L916-.L164,.L917-.L164
	.half	1
	.byte	81
	.word	0,0
.L542:
	.word	-1,.L164,.L922-.L164,.L923-.L164
	.half	1
	.byte	95
	.word	0,0
.L545:
	.word	-1,.L164,.L923-.L164,.L924-.L164
	.half	1
	.byte	95
	.word	0,0
.L547:
	.word	-1,.L164,.L924-.L164,.L925-.L164
	.half	1
	.byte	95
	.word	.L924-.L164,.L73-.L164
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_loc'
.L559:
	.word	-1,.L166,.L934-.L166,.L74-.L166
	.half	1
	.byte	83
	.word	0,0
.L165:
	.word	-1,.L166,0,.L548-.L166
	.half	2
	.byte	138,0
	.word	0,0
.L549:
	.word	-1,.L166,0,.L926-.L166
	.half	1
	.byte	84
	.word	.L551-.L166,.L548-.L166
	.half	1
	.byte	88
	.word	0,0
.L554:
	.word	0,0
.L558:
	.word	-1,.L166,.L927-.L166,.L928-.L166
	.half	1
	.byte	95
	.word	0,0
.L562:
	.word	-1,.L166,.L929-.L166,.L930-.L166
	.half	1
	.byte	95
	.word	0,0
.L563:
	.word	-1,.L166,.L932-.L166,.L933-.L166
	.half	1
	.byte	81
	.word	0,0
.L561:
	.word	-1,.L166,.L929-.L166,.L931-.L166
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L556:
	.word	-1,.L166,.L937-.L166,.L938-.L166
	.half	1
	.byte	98
	.word	.L938-.L166,.L74-.L166
	.half	1
	.byte	111
	.word	0,0
.L557:
	.word	-1,.L166,.L565-.L166,.L569-.L166
	.half	1
	.byte	81
	.word	.L569-.L166,.L940-.L166
	.half	1
	.byte	95
	.word	.L573-.L166,.L74-.L166
	.half	1
	.byte	95
	.word	0,0
.L560:
	.word	-1,.L166,.L935-.L166,.L936-.L166
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L567:
	.word	-1,.L166,.L939-.L166,.L74-.L166
	.half	1
	.byte	82
	.word	0,0
.L571:
	.word	-1,.L166,.L941-.L166,.L942-.L166
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L574:
	.word	-1,.L166,.L942-.L166,.L74-.L166
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_loc'
.L390:
	.word	-1,.L160,.L834-.L160,.L34-.L160
	.half	1
	.byte	91
	.word	0,0
.L159:
	.word	-1,.L160,0,.L808-.L160
	.half	2
	.byte	138,0
	.word	.L808-.L160,.L332-.L160
	.half	2
	.byte	138,8
	.word	.L332-.L160,.L332-.L160
	.half	2
	.byte	138,0
	.word	0,0
.L334:
	.word	-1,.L160,0,.L17-.L160
	.half	1
	.byte	100
	.word	0,0
.L384:
	.word	0,0
.L441:
	.word	-1,.L160,.L455-.L160,.L861-.L160
	.half	1
	.byte	95
	.word	0,0
.L470:
	.word	-1,.L160,.L487-.L160,.L881-.L160
	.half	1
	.byte	95
	.word	0,0
.L380:
	.word	-1,.L160,.L819-.L160,.L828-.L160
	.half	1
	.byte	88
	.word	.L32-.L160,.L41-.L160
	.half	1
	.byte	88
	.word	0,0
.L357:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	145,125
	.word	0,0
.L386:
	.word	0,0
.L440:
	.word	-1,.L160,.L853-.L160,.L40-.L160
	.half	1
	.byte	90
	.word	0,0
.L469:
	.word	-1,.L160,.L869-.L160,.L870-.L160
	.half	1
	.byte	88
	.word	0,0
.L389:
	.word	-1,.L160,.L831-.L160,.L832-.L160
	.half	1
	.byte	89
	.word	0,0
.L444:
	.word	-1,.L160,.L855-.L160,.L856-.L160
	.half	1
	.byte	91
	.word	0,0
.L473:
	.word	-1,.L160,.L872-.L160,.L873-.L160
	.half	1
	.byte	91
	.word	0,0
.L342:
	.word	-1,.L160,.L815-.L160,.L816-.L160
	.half	1
	.byte	95
	.word	0,0
.L438:
	.word	-1,.L160,.L851-.L160,.L852-.L160
	.half	1
	.byte	89
	.word	.L40-.L160,.L50-.L160
	.half	1
	.byte	89
	.word	0,0
.L467:
	.word	-1,.L160,.L867-.L160,.L868-.L160
	.half	1
	.byte	90
	.word	.L49-.L160,.L48-.L160
	.half	1
	.byte	90
	.word	0,0
.L439:
	.word	-1,.L160,.L857-.L160,.L42-.L160
	.half	1
	.byte	92
	.word	0,0
.L468:
	.word	-1,.L160,.L874-.L160,.L51-.L160
	.half	1
	.byte	92
	.word	0,0
.L340:
	.word	-1,.L160,.L809-.L160,.L810-.L160
	.half	1
	.byte	95
	.word	.L2-.L160,.L811-.L160
	.half	1
	.byte	95
	.word	.L812-.L160,.L4-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	.L813-.L160,.L13-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	.L817-.L160,.L12-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L392:
	.word	-1,.L160,.L833-.L160,.L34-.L160
	.half	1
	.byte	90
	.word	0,0
.L344:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	145,120
	.word	0,0
.L354:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	145,124
	.word	0,0
.L376:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	145,120
	.word	0,0
.L388:
	.word	-1,.L160,.L829-.L160,.L830-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L442:
	.word	-1,.L160,.L854-.L160,.L40-.L160
	.half	1
	.byte	88
	.word	0,0
.L471:
	.word	-1,.L160,.L871-.L160,.L49-.L160
	.half	1
	.byte	89
	.word	0,0
.L355:
	.word	-1,.L160,.L818-.L160,.L819-.L160
	.half	1
	.byte	88
	.word	0,0
.L345:
	.word	-1,.L160,.L814-.L160,.L8-.L160
	.half	1
	.byte	95
	.word	0,0
.L352:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	145,120
	.word	0,0
.L358:
	.word	-1,.L160,.L820-.L160,.L33-.L160
	.half	1
	.byte	89
	.word	0,0
.L374:
	.word	-1,.L160,.L826-.L160,.L33-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L433:
	.word	-1,.L160,.L866-.L160,.L50-.L160
	.half	1
	.byte	95
	.word	.L886-.L160,.L887-.L160
	.half	1
	.byte	95
	.word	0,0
.L443:
	.word	-1,.L160,.L849-.L160,.L850-.L160
	.half	1
	.byte	82
	.word	0,0
.L472:
	.word	-1,.L160,.L850-.L160,.L48-.L160
	.half	1
	.byte	82
	.word	0,0
.L466:
	.word	-1,.L160,.L848-.L160,.L48-.L160
	.half	1
	.byte	109
	.word	0,0
.L391:
	.word	-1,.L160,.L395-.L160,.L34-.L160
	.half	1
	.byte	92
	.word	0,0
.L415:
	.word	0,0
.L373:
	.word	-1,.L160,.L349-.L160,.L827-.L160
	.half	1
	.byte	95
	.word	0,0
.L437:
	.word	-1,.L160,.L847-.L160,.L848-.L160
	.half	1
	.byte	109
	.word	0,0
.L364:
	.word	-1,.L160,.L821-.L160,.L822-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L367:
	.word	-1,.L160,.L823-.L160,.L824-.L160
	.half	1
	.byte	95
	.word	.L824-.L160,.L825-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L399:
	.word	-1,.L160,.L835-.L160,.L35-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L401:
	.word	-1,.L160,.L836-.L160,.L36-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L405:
	.word	-1,.L160,.L837-.L160,.L838-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L408:
	.word	-1,.L160,.L838-.L160,.L839-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L411:
	.word	-1,.L160,.L839-.L160,.L840-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L448:
	.word	-1,.L160,.L858-.L160,.L859-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L452:
	.word	-1,.L160,.L860-.L160,.L455-.L160
	.half	1
	.byte	95
	.word	0,0
.L459:
	.word	-1,.L160,.L862-.L160,.L863-.L160
	.half	1
	.byte	95
	.word	.L862-.L160,.L864-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	.L864-.L160,.L44-.L160
	.half	1
	.byte	95
	.word	0,0
.L461:
	.word	-1,.L160,.L865-.L160,.L45-.L160
	.half	1
	.byte	95
	.word	0,0
.L477:
	.word	-1,.L160,.L875-.L160,.L876-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L481:
	.word	-1,.L160,.L877-.L160,.L878-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L484:
	.word	-1,.L160,.L879-.L160,.L878-.L160
	.half	1
	.byte	95
	.word	.L878-.L160,.L880-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L491:
	.word	-1,.L160,.L882-.L160,.L883-.L160
	.half	1
	.byte	95
	.word	.L882-.L160,.L884-.L160
	.half	5
	.byte	144,32,157,32,0
	.word	.L884-.L160,.L53-.L160
	.half	1
	.byte	95
	.word	0,0
.L493:
	.word	-1,.L160,.L885-.L160,.L54-.L160
	.half	1
	.byte	95
	.word	0,0
.L428:
	.word	-1,.L160,.L845-.L160,.L846-.L160
	.half	1
	.byte	95
	.word	0,0
.L419:
	.word	-1,.L160,.L841-.L160,.L842-.L160
	.half	1
	.byte	95
	.word	0,0
.L424:
	.word	-1,.L160,.L843-.L160,.L844-.L160
	.half	1
	.byte	95
	.word	0,0
.L429:
	.word	-1,.L160,.L846-.L160,.L34-.L160
	.half	1
	.byte	95
	.word	0,0
.L425:
	.word	-1,.L160,.L844-.L160,.L38-.L160
	.half	1
	.byte	95
	.word	0,0
.L421:
	.word	-1,.L160,.L842-.L160,.L37-.L160
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_loc'
.L631:
	.word	-1,.L188,.L1001-.L188,.L1002-.L188
	.half	1
	.byte	95
	.word	0,0
.L187:
	.word	-1,.L188,0,.L629-.L188
	.half	2
	.byte	138,0
	.word	0,0
.L632:
	.word	-1,.L188,.L996-.L188,.L112-.L188
	.half	1
	.byte	84
	.word	0,0
.L630:
	.word	-1,.L188,0,.L996-.L188
	.half	1
	.byte	84
	.word	0,0
.L634:
	.word	-1,.L188,.L999-.L188,.L1000-.L188
	.half	1
	.byte	95
	.word	0,0
.L633:
	.word	-1,.L188,.L997-.L188,.L998-.L188
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_loc'
.L637:
	.word	-1,.L190,.L1008-.L190,.L1009-.L190
	.half	1
	.byte	95
	.word	0,0
.L189:
	.word	-1,.L190,0,.L635-.L190
	.half	2
	.byte	138,0
	.word	0,0
.L638:
	.word	-1,.L190,.L1003-.L190,.L115-.L190
	.half	1
	.byte	84
	.word	0,0
.L636:
	.word	-1,.L190,0,.L1003-.L190
	.half	1
	.byte	84
	.word	0,0
.L640:
	.word	-1,.L190,.L1006-.L190,.L1007-.L190
	.half	1
	.byte	95
	.word	0,0
.L639:
	.word	-1,.L190,.L1004-.L190,.L1005-.L190
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_loc'
.L181:
	.word	-1,.L182,0,.L641-.L182
	.half	2
	.byte	138,0
	.word	0,0
.L642:
	.word	-1,.L182,0,.L101-.L182
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_loc'
.L183:
	.word	-1,.L184,0,.L973-.L184
	.half	2
	.byte	138,0
	.word	.L973-.L184,.L643-.L184
	.half	2
	.byte	138,8
	.word	.L643-.L184,.L643-.L184
	.half	2
	.byte	138,0
	.word	0,0
.L644:
	.word	-1,.L184,0,.L104-.L184
	.half	1
	.byte	84
	.word	.L974-.L184,.L643-.L184
	.half	1
	.byte	89
	.word	0,0
.L647:
	.word	-1,.L184,.L980-.L184,.L981-.L184
	.half	1
	.byte	95
	.word	0,0
.L653:
	.word	-1,.L184,.L975-.L184,.L102-.L184
	.half	1
	.byte	90
	.word	.L984-.L184,.L983-.L184
	.half	1
	.byte	84
	.word	0,0
.L652:
	.word	-1,.L184,.L976-.L184,.L102-.L184
	.half	1
	.byte	88
	.word	0,0
.L651:
	.word	-1,.L184,.L977-.L184,.L978-.L184
	.half	1
	.byte	91
	.word	.L103-.L184,.L102-.L184
	.half	1
	.byte	91
	.word	0,0
.L646:
	.word	-1,.L184,0,.L643-.L184
	.half	2
	.byte	145,120
	.word	0,0
.L650:
	.word	-1,.L184,.L979-.L184,.L105-.L184
	.half	1
	.byte	92
	.word	0,0
.L648:
	.word	-1,.L184,.L983-.L184,.L105-.L184
	.half	1
	.byte	82
	.word	0,0
.L649:
	.word	-1,.L184,.L982-.L184,.L983-.L184
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_loc'
.L185:
	.word	-1,.L186,0,.L654-.L186
	.half	2
	.byte	138,0
	.word	0,0
.L662:
	.word	-1,.L186,.L986-.L186,.L110-.L186
	.half	1
	.byte	95
	.word	0,0
.L655:
	.word	-1,.L186,0,.L110-.L186
	.half	1
	.byte	84
	.word	0,0
.L656:
	.word	-1,.L186,.L991-.L186,.L992-.L186
	.half	1
	.byte	95
	.word	0,0
.L659:
	.word	-1,.L186,.L985-.L186,.L108-.L186
	.half	1
	.byte	91
	.word	.L995-.L186,.L994-.L186
	.half	1
	.byte	84
	.word	0,0
.L663:
	.word	-1,.L186,.L989-.L186,.L990-.L186
	.half	1
	.byte	90
	.word	.L109-.L186,.L108-.L186
	.half	1
	.byte	90
	.word	0,0
.L664:
	.word	0,0
.L658:
	.word	-1,.L186,.L994-.L186,.L111-.L186
	.half	1
	.byte	82
	.word	0,0
.L657:
	.word	-1,.L186,.L993-.L186,.L994-.L186
	.half	1
	.byte	85
	.word	0,0
.L660:
	.word	-1,.L186,.L987-.L186,.L108-.L186
	.half	1
	.byte	88
	.word	0,0
.L661:
	.word	-1,.L186,.L988-.L186,.L108-.L186
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_loc'
.L173:
	.word	-1,.L174,0,.L622-.L174
	.half	2
	.byte	138,0
	.word	0,0
.L623:
	.word	-1,.L174,.L971-.L174,.L94-.L174
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_loc'
.L177:
	.word	-1,.L178,0,.L625-.L178
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_loc'
.L171:
	.word	-1,.L172,0,.L620-.L172
	.half	2
	.byte	138,0
	.word	0,0
.L621:
	.word	-1,.L172,.L970-.L172,.L89-.L172
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_loc'
.L175:
	.word	-1,.L176,0,.L624-.L176
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_loc'
.L169:
	.word	-1,.L170,0,.L618-.L170
	.half	2
	.byte	138,0
	.word	0,0
.L619:
	.word	-1,.L170,.L969-.L170,.L85-.L170
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_loc'
.L161:
	.word	-1,.L162,0,.L495-.L162
	.half	2
	.byte	138,0
	.word	0,0
.L496:
	.word	-1,.L162,0,.L502-.L162
	.half	1
	.byte	84
	.word	.L889-.L162,.L495-.L162
	.half	1
	.byte	88
	.word	.L903-.L162,.L904-.L162
	.half	1
	.byte	84
	.word	0,0
.L504:
	.word	0,0
.L511:
	.word	-1,.L162,.L894-.L162,.L895-.L162
	.half	1
	.byte	81
	.word	.L899-.L162,.L888-.L162
	.half	1
	.byte	81
	.word	.L66-.L162,.L67-.L162
	.half	1
	.byte	81
	.word	0,0
.L510:
	.word	-1,.L162,.L897-.L162,.L898-.L162
	.half	1
	.byte	83
	.word	.L64-.L162,.L888-.L162
	.half	1
	.byte	83
	.word	.L66-.L162,.L67-.L162
	.half	1
	.byte	83
	.word	0,0
.L500:
	.word	-1,.L162,.L502-.L162,.L888-.L162
	.half	1
	.byte	84
	.word	.L66-.L162,.L67-.L162
	.half	1
	.byte	84
	.word	.L62-.L162,.L68-.L162
	.half	1
	.byte	84
	.word	0,0
.L506:
	.word	0,0
.L514:
	.word	-1,.L162,.L893-.L162,.L495-.L162
	.half	1
	.byte	90
	.word	0,0
.L513:
	.word	-1,.L162,.L891-.L162,.L892-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	.L60-.L162,.L888-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	.L66-.L162,.L67-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	.L61-.L162,.L63-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L512:
	.word	-1,.L162,.L896-.L162,.L888-.L162
	.half	1
	.byte	82
	.word	.L66-.L162,.L67-.L162
	.half	1
	.byte	82
	.word	0,0
.L499:
	.word	-1,.L162,.L890-.L162,.L495-.L162
	.half	1
	.byte	89
	.word	.L905-.L162,.L495-.L162
	.half	1
	.byte	82
	.word	0,0
.L498:
	.word	-1,.L162,0,.L888-.L162
	.half	1
	.byte	85
	.word	.L66-.L162,.L67-.L162
	.half	1
	.byte	85
	.word	.L62-.L162,.L68-.L162
	.half	1
	.byte	85
	.word	0,0
.L508:
	.word	0,0
.L517:
	.word	-1,.L162,.L900-.L162,.L62-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L520:
	.word	-1,.L162,.L901-.L162,.L902-.L162
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_loc'
.L592:
	.word	-1,.L168,0,.L575-.L168
	.half	2
	.byte	145,120
	.word	0,0
.L167:
	.word	-1,.L168,0,.L943-.L168
	.half	2
	.byte	138,0
	.word	.L943-.L168,.L575-.L168
	.half	2
	.byte	138,8
	.word	.L575-.L168,.L575-.L168
	.half	2
	.byte	138,0
	.word	0,0
.L576:
	.word	-1,.L168,0,.L944-.L168
	.half	1
	.byte	84
	.word	0,0
.L580:
	.word	-1,.L168,.L947-.L168,.L575-.L168
	.half	1
	.byte	89
	.word	0,0
.L585:
	.word	0,0
.L579:
	.word	-1,.L168,.L583-.L168,.L948-.L168
	.half	1
	.byte	90
	.word	.L76-.L168,.L82-.L168
	.half	1
	.byte	90
	.word	0,0
.L587:
	.word	0,0
.L595:
	.word	-1,.L168,.L961-.L168,.L962-.L168
	.half	1
	.byte	85
	.word	.L77-.L168,.L967-.L168
	.half	1
	.byte	85
	.word	0,0
.L596:
	.word	-1,.L168,.L950-.L168,.L951-.L168
	.half	1
	.byte	92
	.word	.L80-.L168,.L575-.L168
	.half	1
	.byte	92
	.word	0,0
.L600:
	.word	-1,.L168,.L952-.L168,.L575-.L168
	.half	1
	.byte	88
	.word	.L968-.L168,.L958-.L168
	.half	1
	.byte	84
	.word	0,0
.L602:
	.word	-1,.L168,.L612-.L168,.L963-.L168
	.half	5
	.byte	144,32,157,32,0
	.word	.L615-.L168,.L965-.L168
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L593:
	.word	-1,.L168,.L957-.L168,.L958-.L168
	.half	1
	.byte	98
	.word	0,0
.L594:
	.word	-1,.L168,.L959-.L168,.L960-.L168
	.half	1
	.byte	111
	.word	0,0
.L601:
	.word	-1,.L168,.L608-.L168,.L956-.L168
	.half	1
	.byte	95
	.word	0,0
.L578:
	.word	-1,.L168,0,.L945-.L168
	.half	1
	.byte	100
	.word	.L946-.L168,.L575-.L168
	.half	1
	.byte	108
	.word	0,0
.L589:
	.word	0,0
.L599:
	.word	-1,.L168,.L949-.L168,.L575-.L168
	.half	1
	.byte	91
	.word	0,0
.L581:
	.word	0,0
.L598:
	.word	-1,.L168,.L958-.L168,.L76-.L168
	.half	1
	.byte	82
	.word	0,0
.L597:
	.word	-1,.L168,.L967-.L168,.L958-.L168
	.half	1
	.byte	85
	.word	0,0
.L606:
	.word	-1,.L168,.L953-.L168,.L954-.L168
	.half	1
	.byte	95
	.word	.L954-.L168,.L955-.L168
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L610:
	.word	-1,.L168,.L955-.L168,.L78-.L168
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L613:
	.word	-1,.L168,.L964-.L168,.L79-.L168
	.half	1
	.byte	81
	.word	0,0
.L617:
	.word	-1,.L168,.L966-.L168,.L80-.L168
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_loc'
.L199:
	.word	-1,.L200,0,.L787-.L200
	.half	2
	.byte	138,0
	.word	0,0
.L788:
	.word	-1,.L200,0,.L787-.L200
	.half	1
	.byte	84
	.word	0,0
.L789:
	.word	-1,.L200,0,.L787-.L200
	.half	1
	.byte	85
	.word	0,0
.L793:
	.word	-1,.L200,.L1099-.L200,.L1100-.L200
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L791:
	.word	-1,.L200,.L1098-.L200,.L787-.L200
	.half	1
	.byte	82
	.word	0,0
.L792:
	.word	-1,.L200,.L1101-.L200,.L1102-.L200
	.half	1
	.byte	95
	.word	0,0
.L790:
	.word	-1,.L200,.L1106-.L200,.L787-.L200
	.half	1
	.byte	95
	.word	0,0
.L796:
	.word	-1,.L200,.L1100-.L200,.L1103-.L200
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L798:
	.word	-1,.L200,.L1104-.L200,.L1105-.L200
	.half	1
	.byte	95
	.word	0,0
.L800:
	.word	-1,.L200,.L1105-.L200,.L1106-.L200
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_loc'
.L191:
	.word	-1,.L192,0,.L1010-.L192
	.half	2
	.byte	138,0
	.word	.L1010-.L192,.L722-.L192
	.half	2
	.byte	138,8
	.word	.L722-.L192,.L722-.L192
	.half	2
	.byte	138,0
	.word	0,0
.L723:
	.word	-1,.L192,0,.L722-.L192
	.half	1
	.byte	84
	.word	0,0
.L726:
	.word	-1,.L192,.L1018-.L192,.L1019-.L192
	.half	1
	.byte	81
	.word	0,0
.L729:
	.word	-1,.L192,.L1011-.L192,.L1012-.L192
	.half	1
	.byte	95
	.word	0,0
.L730:
	.word	-1,.L192,.L1015-.L192,.L118-.L192
	.half	1
	.byte	83
	.word	0,0
.L728:
	.word	-1,.L192,.L1013-.L192,.L1014-.L192
	.half	1
	.byte	82
	.word	.L118-.L192,.L722-.L192
	.half	1
	.byte	82
	.word	0,0
.L725:
	.word	-1,.L192,0,.L722-.L192
	.half	2
	.byte	145,120
	.word	0,0
.L727:
	.word	-1,.L192,.L1016-.L192,.L1017-.L192
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_loc'
.L193:
	.word	-1,.L194,0,.L777-.L194
	.half	2
	.byte	138,0
	.word	0,0
.L783:
	.word	-1,.L194,.L1024-.L194,.L124-.L194
	.half	1
	.byte	95
	.word	0,0
.L778:
	.word	-1,.L194,0,.L1020-.L194
	.half	1
	.byte	84
	.word	0,0
.L779:
	.word	-1,.L194,.L1028-.L194,.L1029-.L194
	.half	1
	.byte	85
	.word	0,0
.L780:
	.word	-1,.L194,.L1023-.L194,.L777-.L194
	.half	1
	.byte	81
	.word	0,0
.L784:
	.word	-1,.L194,.L1020-.L194,.L1027-.L194
	.half	1
	.byte	84
	.word	.L123-.L194,.L777-.L194
	.half	1
	.byte	84
	.word	0,0
.L785:
	.word	-1,.L194,.L1021-.L194,.L1022-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	.L1030-.L194,.L777-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L786:
	.word	0,0
.L781:
	.word	-1,.L194,.L1025-.L194,.L777-.L194
	.half	1
	.byte	82
	.word	0,0
.L782:
	.word	-1,.L194,.L1026-.L194,.L777-.L194
	.half	1
	.byte	83
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_loc'
.L195:
	.word	-1,.L196,0,.L1031-.L196
	.half	2
	.byte	138,0
	.word	.L1031-.L196,.L665-.L196
	.half	2
	.byte	138,8
	.word	.L665-.L196,.L665-.L196
	.half	2
	.byte	138,0
	.word	0,0
.L694:
	.word	0,0
.L703:
	.word	-1,.L196,.L1042-.L196,.L131-.L196
	.half	1
	.byte	82
	.word	0,0
.L704:
	.word	-1,.L196,.L1041-.L196,.L1042-.L196
	.half	1
	.byte	85
	.word	0,0
.L666:
	.word	-1,.L196,0,.L127-.L196
	.half	1
	.byte	84
	.word	.L1032-.L196,.L665-.L196
	.half	1
	.byte	88
	.word	0,0
.L678:
	.word	0,0
.L709:
	.word	0,0
.L669:
	.word	-1,.L196,.L687-.L196,.L128-.L196
	.half	1
	.byte	91
	.word	0,0
.L680:
	.word	0,0
.L711:
	.word	0,0
.L699:
	.word	0,0
.L672:
	.word	-1,.L196,.L1033-.L196,.L127-.L196
	.half	1
	.byte	95
	.word	0,0
.L693:
	.word	-1,.L196,.L702-.L196,.L131-.L196
	.half	1
	.byte	95
	.word	.L1043-.L196,.L1042-.L196
	.half	1
	.byte	84
	.word	0,0
.L721:
	.word	-1,.L196,.L1047-.L196,.L1048-.L196
	.half	1
	.byte	95
	.word	0,0
.L697:
	.word	0,0
.L692:
	.word	-1,.L196,.L1037-.L196,.L1038-.L196
	.half	1
	.byte	92
	.word	.L1055-.L196,.L128-.L196
	.half	1
	.byte	92
	.word	0,0
.L673:
	.word	-1,.L196,.L1035-.L196,.L126-.L196
	.half	1
	.byte	90
	.word	0,0
.L690:
	.word	-1,.L196,.L1045-.L196,.L128-.L196
	.half	1
	.byte	86
	.word	0,0
.L689:
	.word	-1,.L196,.L1044-.L196,.L128-.L196
	.half	1
	.byte	85
	.word	0,0
.L691:
	.word	-1,.L196,.L1046-.L196,.L128-.L196
	.half	1
	.byte	82
	.word	0,0
.L713:
	.word	0,0
.L717:
	.word	-1,.L196,.L1049-.L196,.L128-.L196
	.half	1
	.byte	101
	.word	0,0
.L718:
	.word	-1,.L196,.L1050-.L196,.L128-.L196
	.half	1
	.byte	102
	.word	0,0
.L720:
	.word	-1,.L196,.L1053-.L196,.L1054-.L196
	.half	1
	.byte	87
	.word	.L133-.L196,.L128-.L196
	.half	1
	.byte	87
	.word	0,0
.L719:
	.word	-1,.L196,.L1051-.L196,.L1052-.L196
	.half	1
	.byte	83
	.word	.L136-.L196,.L128-.L196
	.half	1
	.byte	83
	.word	0,0
.L671:
	.word	-1,.L196,.L675-.L196,.L1034-.L196
	.half	1
	.byte	89
	.word	.L126-.L196,.L665-.L196
	.half	1
	.byte	89
	.word	0,0
.L682:
	.word	0,0
.L668:
	.word	-1,.L196,0,.L665-.L196
	.half	2
	.byte	145,120
	.word	0,0
.L670:
	.word	-1,.L196,.L1036-.L196,.L128-.L196
	.half	1
	.byte	93
	.word	0,0
.L684:
	.word	0,0
.L705:
	.word	-1,.L196,.L1039-.L196,.L1040-.L196
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L688:
	.word	-1,.L196,.L1056-.L196,.L128-.L196
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_loc'
.L197:
	.word	-1,.L198,0,.L1057-.L198
	.half	2
	.byte	138,0
	.word	.L1057-.L198,.L731-.L198
	.half	2
	.byte	138,16
	.word	.L731-.L198,.L731-.L198
	.half	2
	.byte	138,0
	.word	0,0
.L737:
	.word	-1,.L198,.L1062-.L198,.L1064-.L198
	.half	1
	.byte	95
	.word	0,0
.L754:
	.word	0,0
.L758:
	.word	-1,.L198,.L1078-.L198,.L145-.L198
	.half	1
	.byte	82
	.word	0,0
.L759:
	.word	-1,.L198,.L1077-.L198,.L1078-.L198
	.half	1
	.byte	85
	.word	0,0
.L732:
	.word	-1,.L198,0,.L142-.L198
	.half	1
	.byte	84
	.word	.L1058-.L198,.L731-.L198
	.half	1
	.byte	88
	.word	0,0
.L744:
	.word	0,0
.L764:
	.word	0,0
.L733:
	.word	-1,.L198,.L1071-.L198,.L141-.L198
	.half	1
	.byte	91
	.word	0,0
.L746:
	.word	0,0
.L766:
	.word	0,0
.L757:
	.word	0,0
.L734:
	.word	-1,.L198,.L1061-.L198,.L1062-.L198
	.half	1
	.byte	95
	.word	.L1063-.L198,.L731-.L198
	.half	2
	.byte	145,120
	.word	.L1070-.L198,.L1072-.L198
	.half	1
	.byte	95
	.word	0,0
.L753:
	.word	-1,.L198,.L755-.L198,.L145-.L198
	.half	1
	.byte	95
	.word	.L1079-.L198,.L1078-.L198
	.half	1
	.byte	84
	.word	0,0
.L776:
	.word	-1,.L198,.L1085-.L198,.L1086-.L198
	.half	1
	.byte	95
	.word	0,0
.L756:
	.word	0,0
.L752:
	.word	-1,.L198,.L1073-.L198,.L1074-.L198
	.half	1
	.byte	93
	.word	.L1095-.L198,.L143-.L198
	.half	1
	.byte	93
	.word	0,0
.L738:
	.word	-1,.L198,.L1067-.L198,.L1068-.L198
	.half	1
	.byte	92
	.word	.L141-.L198,.L731-.L198
	.half	1
	.byte	92
	.word	0,0
.L739:
	.word	-1,.L198,.L1059-.L198,.L1060-.L198
	.half	1
	.byte	89
	.word	.L1097-.L198,.L731-.L198
	.half	1
	.byte	89
	.word	0,0
.L740:
	.word	0,0
.L750:
	.word	-1,.L198,.L1083-.L198,.L143-.L198
	.half	1
	.byte	86
	.word	0,0
.L749:
	.word	-1,.L198,.L1080-.L198,.L1081-.L198
	.half	5
	.byte	144,32,157,32,0
	.word	.L1082-.L198,.L143-.L198
	.half	2
	.byte	145,112
	.word	.L1094-.L198,.L143-.L198
	.half	1
	.byte	85
	.word	0,0
.L751:
	.word	-1,.L198,.L1084-.L198,.L143-.L198
	.half	1
	.byte	83
	.word	0,0
.L768:
	.word	0,0
.L772:
	.word	-1,.L198,.L1087-.L198,.L143-.L198
	.half	1
	.byte	102
	.word	0,0
.L773:
	.word	-1,.L198,.L1088-.L198,.L1089-.L198
	.half	1
	.byte	111
	.word	0,0
.L775:
	.word	-1,.L198,.L1092-.L198,.L1093-.L198
	.half	1
	.byte	87
	.word	.L147-.L198,.L143-.L198
	.half	1
	.byte	87
	.word	0,0
.L774:
	.word	-1,.L198,.L1090-.L198,.L1091-.L198
	.half	1
	.byte	85
	.word	.L150-.L198,.L1094-.L198
	.half	1
	.byte	85
	.word	0,0
.L760:
	.word	-1,.L198,.L1075-.L198,.L1076-.L198
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L735:
	.word	-1,.L198,.L1064-.L198,.L142-.L198
	.half	1
	.byte	95
	.word	.L1065-.L198,.L731-.L198
	.half	2
	.byte	145,116
	.word	.L1069-.L198,.L1070-.L198
	.half	1
	.byte	95
	.word	0,0
.L736:
	.word	-1,.L198,.L1066-.L198,.L731-.L198
	.half	1
	.byte	90
	.word	0,0
.L748:
	.word	-1,.L198,.L1096-.L198,.L143-.L198
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1696:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_Init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1696,.L160,.L332-.L160
	.byte	4
	.word	(.L808-.L160)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L332-.L808)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_SetControllerMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L162,.L495-.L162
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_DisableControllerInterrupts')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L164,.L521-.L164
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_EnableControllerInterrupts')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L166,.L548-.L166
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_Write')
	.sect	'.debug_frame'
	.word	36
	.word	.L1696,.L168,.L575-.L168
	.byte	4
	.word	(.L943-.L168)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L575-.L943)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Write')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L170,.L618-.L170
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Read')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L172,.L620-.L172
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_BusOff')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L174,.L622-.L174
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Wakeup')
	.sect	'.debug_frame'
	.word	24
	.word	.L1696,.L176,.L624-.L176
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_MainFunction_Mode')
	.sect	'.debug_frame'
	.word	24
	.word	.L1696,.L178,.L625-.L178
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_CheckWakeup')
	.sect	'.debug_frame'
	.word	24
	.word	.L1696,.L180,.L626-.L180
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrReceiveHandler')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L182,.L641-.L182
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrTransmitHandler')
	.sect	'.debug_frame'
	.word	36
	.word	.L1696,.L184,.L643-.L184
	.byte	4
	.word	(.L973-.L184)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L643-.L973)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrTransmitRuntime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L186,.L654-.L186
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrBusOffHandler')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L188,.L629-.L188
	.sdecl	'.debug_frame',debug,cluster('Can_17_MCanP_IsrBusOffRuntime')
	.sect	'.debug_frame'
	.word	12
	.word	.L1696,.L190,.L635-.L190
	.sdecl	'.debug_frame',debug,cluster('Can_lClearReceivedMsg')
	.sect	'.debug_frame'
	.word	44
	.word	.L1696,.L192,.L722-.L192
	.byte	8,19,8,21,8,22,8,23,4
	.word	(.L1010-.L192)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L722-.L1010)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_lClearReceivedMsgRuntime')
	.sect	'.debug_frame'
	.word	24
	.word	.L1696,.L194,.L777-.L194
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Can_lReceiveHandler')
	.sect	'.debug_frame'
	.word	36
	.word	.L1696,.L196,.L665-.L196
	.byte	4
	.word	(.L1031-.L196)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L665-.L1031)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_lReceiveHandlerRuntime')
	.sect	'.debug_frame'
	.word	36
	.word	.L1696,.L198,.L731-.L198
	.byte	4
	.word	(.L1057-.L198)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L731-.L1057)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Can_lAllocateHwObject')
	.sect	'.debug_frame'
	.word	24
	.word	.L1696,.L200,.L787-.L200
	.byte	8,19,8,20,8,21,8,22,8,23,0,0

; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6876  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6877  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6878  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6879  ** TRACEABILITY: [cover parentID=DS_AS_CAN089]                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6880  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6881  ** Syntax       : static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId) **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6882  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6883  **                    [/cover]                                                **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6884  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6885  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6886  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6887  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6888  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6889  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6890  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6891  ** Parameters (in)  : ServiceId - Service Id of the calling API               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6892  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6893  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6894  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6895  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6896  **                    - E_OK: CAN Driver is initialized                       **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6897  **                    - E_NOT_OK: CAN Driver is not initialized               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6898  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6899  ** Description      : Checks the status of CAN driver initialization          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6900  **                    If CAN driver is not initialized, reports to DET        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6901  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6902  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6903  static Std_ReturnType Can_lReportDetUninit(uint8 ServiceId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6904  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6905    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6906    RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6907  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6908    /* Check if CAN driver is un-initialized */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6909    if(CAN_DS_UNINIT == Can_17_MCanP_DriverState)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6910    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6911      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6912      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6913        ServiceId, CAN_E_UNINIT);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6914      RetVal = E_NOT_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6915    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6916  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6917    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6918  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6919  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6920  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6921  #if (CAN_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6922  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6923  ** Syntax           : static Std_ReturnType Can_lReportDetParamController     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6924  **                                                      (                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6925  **                                                        uint8 ControllerId, **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6926  **                                                        uint8 ServiceId     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6927  **                                                      )                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6928  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6929  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6930  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6931  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6932  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6933  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6934  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6935  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6936  ** Parameters (in)  : ControllerId - Associated CAN Controller Id             **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6937  **                    ServiceId - Service Id of the calling API               **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6938  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6939  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6940  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6941  ** Return value     : Std_ReturnType                                          **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6942  **                    - E_OK: ControllerId is valid                           **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6943  **                    - E_NOT_OK: ControllerId is invalid                     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6944  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6945  ** Description      : Checks if ControllerId is a valid CAN Controller Id     **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6946  **                    If ControllerId is not valid, then report to DET        **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6947  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6948  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6949  static Std_ReturnType Can_lReportDetParamController(uint8 ControllerId,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6950                                                      uint8 ServiceId)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6951  {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6952    Std_ReturnType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6953  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6954    /* 'ControllerId' is out of range */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6955    if(ControllerId >= Can_kConfigPtr->CanNumController)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6956    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6957      RetVal = E_NOT_OK ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6958    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6959    /* Check if corresponding CAN controller is not activated */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6960    else if(CAN_INVALID_HW_CONTROLLER_ID ==
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6961      Can_kConfigPtr->CanHwControllerIdMap[ControllerId])
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6962    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6963      RetVal = E_NOT_OK ;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6964    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6965    else
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6966    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6967      RetVal = E_OK;
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6968    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6969  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6970    if(E_NOT_OK == RetVal)
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6971    {
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6972      /* Report to DET */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6973      Det_ReportError(CAN_17_MCANP_MODULE_ID, CAN_17_MCANP_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6974        ServiceId, CAN_E_PARAM_CONTROLLER);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6975    }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6976  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6977    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6978  }
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6979  #endif /* #if (CAN_DEV_ERROR_DETECT == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6980  
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6981  #define CAN_17_MCANP_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6982  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directive is
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6983   allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Can_17_MCanP\src\Can_17_MCanP.c	  6984  #include "MemMap.h"

	; Module end
