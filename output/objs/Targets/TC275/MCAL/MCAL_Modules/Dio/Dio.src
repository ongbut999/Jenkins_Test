	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc18564a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\Dio.src Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c"
	.compiler_name		"ctc"
	;source	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c'

	
$TC16X
	
	.sdecl	'.text.Dio.Dio_ReadChannelGroup',code,cluster('Dio_ReadChannelGroup')
	.sect	'.text.Dio.Dio_ReadChannelGroup'
	.align	2
	
	.global	Dio_ReadChannelGroup

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     1  /******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     2  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     3  ** Copyright (C) Infineon Technologies (2018)                                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     4  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     5  ** All rights reserved.                                                      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     6  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     7  ** This document contains proprietary information belonging to Infineon      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	     9  ** of its contents is not permitted without prior written authorization.     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    10  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    11  *******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    12  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    13  **  $FILENAME   : Dio.c $                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    14  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    15  **  $CC VERSION : \main\75 $                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    16  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    17  **  $DATE       : 2018-01-23 $                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    18  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    19  **  AUTHOR      : DL-AUTOSAR-Engineering                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    20  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    21  **  VENDOR      : Infineon Technologies                                      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    22  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    23  **  DESCRIPTION : This contains the functionality for DIO driver             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    24  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    25  **  MAY BE CHANGED BY USER [yes/no]: No                                      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    26  **                                                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    27  *******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    28  **  TRACEABILITY : [cover parentID=DS_AS40X_DIO106,DS_AS_DIO001,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    29                      DS_AS_DIO005,DS_AS_DIO051_DIO055,DS_NAS_DIO_PR228,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    30                      DS_NAS_DIO_PR127,SAS_AS4XX_DIO_PR913,DS_MCAL_DIO_0517
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    31                      SAS_AS40X_DIO117_DIO168_DIO169_DIO170,DS_NAS_DIO_PR716,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    32                      SAS_AS4XX_DIO171,DS_MCAL_DIO_0517,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    33                      DS_MCAL_DIO_0503_0504_0508,SAS_AS321_DIO117,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    34                      DS_MCAL_DIO_0509_2_0513_1,SAS_NAS_ALL_PR70,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    35                      DS_MCAL_DIO_0509_3_0513_2,SAS_NAS_ALL_PR630_PR631,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    36                      DS_MCAL_DIO_0509_4_0513_3,SAS_NAS_ALL_PR1652,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    37                      DS_MCAL_DIO_0509_5_0513_4,SAS_NAS_ALL_PR748,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    38                      DS_MCAL_DIO_0509_6_0513_5,SAS_NAS_ALL_PR749,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    39                      DS_MCAL_DIO_0509_7_0513_7,DS_AS_DIO_PR123,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    40                      DS_MCAL_DIO_0513_8_0509_8,SAS_AS_DIO194,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    41                      DS_MCAL_DIO_0509_7_0513_6,DS_MCAL_DIO_0509_9_0513_9]     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    42  **                 [/cover]                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    43  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    44  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    45  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    46  **                      Includes                                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    47  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    48  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    49  /* Own header file, this includes own configuration file also */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    50  /* DIO117: Inclusion structure */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    51  #include "Dio.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    52  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    53  /* Version sepcific header file */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    54  #include "Dio_Ver.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    55  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    56  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    57  **                      Imported Compiler Switch Check                        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    58  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    59  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    60  /* Version checks */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    61  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    62  #ifndef DIO_SW_MAJOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    63    #error "DIO_SW_MAJOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    64  #endif
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    65  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    66  #ifndef DIO_SW_MINOR_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    67    #error "DIO_SW_MINOR_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    68  #endif
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    69  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    70  #ifndef DIO_SW_PATCH_VERSION
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    71    #error "DIO_SW_PATCH_VERSION is not defined. "
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    72  #endif
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    73  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    74  /* Check for Correct inclusion of headers */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    75  #if ( DIO_SW_MAJOR_VERSION != 3U )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    76    #error "DIO_SW_MAJOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    77  #endif
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    78  #if ( DIO_SW_MINOR_VERSION != 3U )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    79    #error "DIO_SW_MINOR_VERSION does not match. "
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    80  #endif
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    81  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    82  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    83  **                      Private Macro Definitions                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    84  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    85  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    86  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    87  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    88  /* 0th Bit Mask value */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    89  #define DIO_CHANNEL_BIT_MASK         (0x01U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    90  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    91  /* Port numbers */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    92  #define DIO_NUMBER_31                (31U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    93  #define DIO_NUMBER_32                (32U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    94  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    95  #endif /* DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    96  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    97  /* To optimize Dio_lGetPortAdr */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    98  #define DIO_QUOTIENT_EXTRACT_NUM     (0xCDU)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	    99  #define DIO_QUOTIENT_SHIFT           (11U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   100  #define DIO_SHIFT_FOUR               (4U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   101  #define DIO_SHIFT_THREE              (3U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   102  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   103  /* This macro is used to reset the Port pins */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   104  #define DIO_CHANNEL_GROUP_RESET     ((uint32)16)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   105  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   106  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   107  **                   Function like macro definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   108  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   109  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   110  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   111  **                      Private Type Definitions                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   112  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   113  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   114  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   115  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   116  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   117  **                      Private Function Declarations                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   118  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   119  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   120  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   121  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   122  #define DIO_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   123  /*mapping of code and data to specific memory sections via memory mapping file*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   124  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   125  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   126  /* INLINE Function to check if the port is
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   127        available or not for the microcontroller*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   128  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   129  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   130  /* INLINE Function to check if the port is
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   131         available or not for the microcontroller*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   132  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   133  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   134  /* INLINE Function to check if the port
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   135              is read only or it is writable*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   136  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   137  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   138  /* INLINE Function to check if the
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   139       port is read only or it is writable */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   140  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   141  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   142  /* INLINE Function to check if the
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   143       port is read only or it is writable */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   144  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   145  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   146  /* INLINE Function to check if the port
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   147            is read only or it is writable */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   148  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly(uint32 Port);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   149  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   150  /* INLINE Function to check if the Pin
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   151            available or not */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   152  IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable(uint32 Port, uint8 Pin);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   153  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   154  #define DIO_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   155  /*mapping of code and data to specific memory sections via memory mapping file*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   156  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   157    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   158  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   159  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   160  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON)*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   161  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   162  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   163  **                      Global Constant Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   164  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   165  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   166  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   167  **                      Global Variable Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   168  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   169  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   170  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   171  **                      Private Constant Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   172  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   173  /* The following private definitions are available only if development error
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   174     detection is enabled */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   175  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   176  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   177    /* Start of memory mapping of 8 bit constant */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   178    #define DIO_START_SEC_CONST_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   179  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   180    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   181    #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   182  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   183    /* Information on the most significant pin for each port */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   184  /*IFX_MISRA_RULE_08_07_STATUS=Fixing the issue,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   185    doesn't hv impact on the memory allotment of the variable
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   186    and also makes the code not readable*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   187    static const uint8 Dio_kMSPortPin[] =
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   188    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   189      DIO_PORT_0_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   190      DIO_PORT_1_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   191      DIO_PORT_2_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   192      DIO_PORT_3_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   193      DIO_PORT_4_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   194      DIO_PORT_5_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   195      DIO_PORT_6_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   196      DIO_PORT_7_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   197      DIO_PORT_8_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   198      DIO_PORT_9_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   199      DIO_PORT_10_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   200      DIO_PORT_11_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   201      DIO_PORT_12_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   202      DIO_PORT_13_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   203      DIO_PORT_14_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   204      DIO_PORT_15_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   205      DIO_PORT_16_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   206      DIO_PORT_17_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   207      DIO_PORT_18_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   208      DIO_PORT_19_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   209      DIO_PORT_20_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   210      DIO_PORT_21_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   211      DIO_PORT_22_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   212      DIO_PORT_23_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   213      DIO_PORT_24_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   214      DIO_PORT_25_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   215      DIO_PORT_26_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   216      DIO_PORT_27_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   217      DIO_PORT_28_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   218      DIO_PORT_29_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   219      DIO_PORT_30_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   220      DIO_PORT_31_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   221      DIO_PORT_32_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   222      DIO_PORT_33_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   223      DIO_PORT_34_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   224      DIO_PORT_35_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   225      DIO_PORT_36_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   226      DIO_PORT_37_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   227      DIO_PORT_38_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   228      DIO_PORT_39_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   229      DIO_PORT_40_MSPIN,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   230      DIO_PORT_41_MSPIN
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   231    };
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   232  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   233    /* End of memory mapping of 8 bit constant */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   234    #define DIO_STOP_SEC_CONST_8BIT
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   235  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   236    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   237    #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   238  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   239  #endif /* DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   240  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   241  /* Start of memory mapping of 16 bit constant */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   242  #define DIO_START_SEC_CONST_16BIT
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   243  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   244    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   245  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   246  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   247  /* Mask values for all the ports.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   248     This constant is used to mask the undefined port pins within the port */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   249  /*IFX_MISRA_RULE_08_07_STATUS= (occurs with DET OFF)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   250    Fixing the issue, doesn't have impact on the memory allotment
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   251    of the variable and also makes the code not readable*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   252  static const Dio_PortLevelType Dio_kMaskUndefinedPortPins[] =
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   253  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   254    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT0,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   255    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT1,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   256    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT2,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   257    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT3,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   258    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT4,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   259    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT5,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   260    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT6,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   261    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT7,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   262    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT8,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   263    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT9,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   264    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT10,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   265    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT11,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   266    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT12,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   267    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT13,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   268    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT14,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   269    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT15,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   270    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT16,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   271    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT17,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   272    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT18,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   273    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT19,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   274    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT20,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   275    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT21,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   276    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT22,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   277    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT23,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   278    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT24,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   279    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT25,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   280    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT26,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   281    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT27,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   282    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT28,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   283    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT29,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   284    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT30,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   285    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT31,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   286    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT32,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   287    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT33,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   288    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT34,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   289    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT35,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   290    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT36,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   291    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT37,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   292    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT38,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   293    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT39,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   294    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT40,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   295    (Dio_PortLevelType)DIO_MASK_UNDEF_PINS_PORT41
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   296  };
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   297  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   298  /* Stop of memory mapping of 16 bit constant */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   299  #define DIO_STOP_SEC_CONST_16BIT
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   300  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   301    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   302  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   303  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   304  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   305  **                      Private Variable Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   306  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   307  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   308  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   309  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   310  **                      Private Function Definitions                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   311  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   312  /* Memory Map of the DIO Code */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   313  #define DIO_START_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   314  /*mapping of code and data to specific memory sections via memory mapping file*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   315  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   316    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   317  #include "MemMap.h"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   318  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   319  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   320  **                      Global Function Definitions                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   321  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   322  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   323  /* DIO001: DIO driver does not provide the initialization interface */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   324  /* DIO102: It is the users responsibility to initialize the PORT driver before
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   325     using any functionality of the DIO driver */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   326  /* DIO002: Direction change of pin is supported by the PORT driver */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   327  /* DIO049: DIO061: The run time configuration for DIO ports and port pins is
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   328     handled by PORT driver */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   329  /* DIO051: All DIO services writes or read directly the hardware registers
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   330     and no buffering is done */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   331  /* DIO055: All the services of this driver are synchronous */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   332  /* DIO101: This driver does not provide any callback notifications */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   333  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   334  /* Enable / Disable DET check functions with DIO_DEV_ERROR_DETECT switch */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   335  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   336  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   337  ** Traceability     : [cover parentID=DS_AS_DIO074,DS_AS40X_DIO175,DS_AS_DIO179]
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   338  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   339  ** Syntax           : uint8 Dio_lCheckChannelId                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   340  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   341  **                      uint8 ApiId,                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   342  **                      Dio_ChannelType ChannelId                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   343  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   344  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   345  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   346  ** Service ID       : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   347  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   348  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   349  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   350  ** Reentrancy       : reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   351  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   352  ** Parameters (in)  : ApiId - Service ID of API that calls this function      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   353  **                    ChannelId - that needs to be checked for validity       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   354  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   355  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   356  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   357  ** Return value     : uint32                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   358  **                    DIO_NO_ERROR: if no error is detected                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   359  **                    DIO_ERROR: if DET error is detected                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   360  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   361  ** Description      : This function:                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   362  **  - DIO048: This function checks ChannelId for DET error                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   363  **    DIO_E_PARAM_INVALID_CHANNEL_ID                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   364  **  - is not for the user of DIO driver                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   365  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   366  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   367  uint8 Dio_lCheckChannelId(uint8 ApiId, Dio_ChannelType ChannelId)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   368  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   369    uint32       PortNumber;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   370    uint32       Index;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   371    uint32       ConfigIndex;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   372    uint32       PortReadOnly;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   373    uint32       PortAvailable;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   374    uint32       PinAvailable;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   375    uint8        PinNumber;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   376    uint8        ErrStatus;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   377  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   378    ErrStatus = (uint8)DIO_NO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   379    ConfigIndex = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   380  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   381    /* If the DIO channel ID is greater than the max value of Port pin ID */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   382    if(ChannelId > DIO_MAX_VALID_PORT_PIN_ID)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   383    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   384      ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   385    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   386    else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   387    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   388      /* Derive the port and pin number from symbolic channel ID */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   389      PortNumber = (uint32)Dio_lGetPortNumber(ChannelId);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   390      PinNumber  = (uint8)Dio_lGetPinNumber(ChannelId);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   391  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   392      PortAvailable = Dio_lIsPortAvailable(PortNumber);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   393      PinAvailable  = Dio_lIsPinAvailable(PortNumber,PinNumber);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   394  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   395      if( (PortAvailable == 0U) || (PinAvailable == 0U) )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   396      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   397         ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   398      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   399      else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   400      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   401         for(Index = 0U;Index <= PortNumber;Index++)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   402         {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   403           if(Dio_lIsPortAvailable(Index) != 0U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   404           {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   405             ConfigIndex++; /* to identify the Index of configuration*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   406           }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   407         }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   408           /*decremented since the ConfigIndex value is 1 for Index 0*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   409         ConfigIndex--;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   410         PortReadOnly = Dio_lIsPortReadOnly(PortNumber);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   411  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   412         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   413           due to PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   414         if(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   415          Dio_kConfigPtr->Dio_PortChannelConfigPtr[ConfigIndex].Dio_PortIdConfig
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   416                                                     == DIO_PORT_NOT_CONFIGURED)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   417         {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   418           ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   419         }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   420  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   421         /* Check for the validity of symbolic Channel ID */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   422         else if(Dio_lCheckAnalogChannel(ApiId,PortReadOnly) == DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   423         {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   424           ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   425         }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   426         /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   427           due to PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   428         else if(((Dio_kConfigPtr->
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   429                   Dio_PortChannelConfigPtr[ConfigIndex].Dio_ChannelConfig) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   430                  ((uint32)0x1U << PinNumber)) == 0U
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   431                 )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   432         {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   433           ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   434         }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   435         else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   436         {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   437           /*Misra check*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   438         }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   439       }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   440    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   441  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   442    if(ErrStatus == (uint8)DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   443    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   444      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   445        /* The channel id passed to the function is invalid. Report error id.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   446           DIO_E_PARAM_INVALID_CHANNEL_ID to the error hook function */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   447        Det_ReportError( (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   448                          DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   449                          ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   450                          DIO_E_PARAM_INVALID_CHANNEL_ID
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   451                        );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   452     #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   453  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   454     #if (DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   455        SafeMcal_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   456                          (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   457                           DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   458                           ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   459                           DIO_E_PARAM_INVALID_CHANNEL_ID
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   460                        );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   461     #endif /*DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   462    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   463  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   464    return (ErrStatus);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   465  }/* Dio_lCheckChannelId */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   466  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   467  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   468  ** Traceability     : [cover parentID=DS_AS_DIO075,DS_AS40X_DIO177,DS_AS_DIO179]
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   469  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   470  ** Syntax           : uint8 Dio_lCheckPortId                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   471  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   472  **                      uint8 ApiId,                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   473  **                      Dio_PortType PortId                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   474  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   475  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   476  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   477  ** Service ID       : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   478  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   479  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   480  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   481  ** Reentrancy       : reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   482  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   483  ** Parameters (in)  : ApiId  - Service ID of API that calls this function     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   484  **                    PortId - that needs to be checked for validity          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   485  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   486  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   487  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   488  ** Return value     : uint16                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   489  **                    DIO_NO_ERROR: if no error is detected                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   490  **                    DIO_ERROR: if DET error is detected                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   491  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   492  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   493  ** - This function checks the validity of the PortId. In case error is        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   494  **   detected, the error DIO_E_PARAM_INVALID_PORT_ID is reported              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   495  ** - This function is local to the driver module and is not for the user of   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   496  **   DIO driver                                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   497  ** - This function is available only if DET is enabled                        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   498  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   499  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   500  uint8 Dio_lCheckPortId (uint8 ApiId, Dio_PortType PortId)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   501  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   502    uint32      Index;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   503    uint32      ConfigIndex;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   504    uint32      PortReadOnly;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   505    uint32      PortAvailable;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   506    uint8       ErrStatus;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   507  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   508    ErrStatus = (uint8)DIO_NO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   509    ConfigIndex = 0U;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   510  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   511    PortAvailable = (uint32)Dio_lIsPortAvailable((uint32)PortId);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   512  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   513    /* Check for the validity of symbolic port ID */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   514    if( (PortAvailable == 0U) )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   515    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   516      ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   517    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   518    else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   519    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   520      for(Index = 0U;Index <= PortId;Index++)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   521      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   522        if(Dio_lIsPortAvailable(Index) != 0U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   523        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   524          ConfigIndex++; /* to identify the Index of configuration*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   525        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   526      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   527  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   528      ConfigIndex--;/*decremented since the ConfigIndex value is 1 for Index 0*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   529  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   530      PortReadOnly = Dio_lIsPortReadOnly((uint32)PortId);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   531  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   532      /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic used
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   533        due to PBConfigStructure and is within allowed range.*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   534      if(Dio_kConfigPtr->Dio_PortChannelConfigPtr[ConfigIndex].Dio_PortIdConfig
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   535                                                    == DIO_PORT_NOT_CONFIGURED)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   536      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   537         ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   538      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   539      else if(Dio_lCheckAnalogPort(ApiId,PortReadOnly) == DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   540      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   541         ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   542      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   543      else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   544      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   545        /*Misra check*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   546      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   547    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   548    if(ErrStatus == (uint8)DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   549    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   550      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   551        /* The port id passed to the function is invalid. Report error id
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   552           DIO_E_PARAM_INVALID_PORT_ID to the error hook function */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   553        Det_ReportError( (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   554                          DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   555                          ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   556                          DIO_E_PARAM_INVALID_PORT_ID
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   557                        );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   558     #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   559  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   560     #if (DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   561        SafeMcal_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   562                          (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   563                           DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   564                           ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   565                           DIO_E_PARAM_INVALID_PORT_ID
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   566                        );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   567     #endif /*DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   568    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   569    return (ErrStatus);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   570  }/* Dio_lCheckPortId */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   571  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   572  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   573  ** Traceability     : [cover parentID=DS_AS_DIO114,DS_AS40X_DIO178,DS_AS_DIO179]
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   574  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   575  ** Syntax           : uint8 Dio_lCheckGroupId                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   576  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   577  **                      uint8 ApiId,                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   578  **                      const Dio_ChannelGroupType *GroupIdPtr                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   579  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   580  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   581  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   582  ** Service ID       : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   583  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   584  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   585  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   586  ** Reentrancy       : reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   587  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   588  ** Parameters (in)  : ApiId - Service ID of API that calls this function      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   589  **                    GroupIdPtr - Pointer to group configuration that needs  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   590  **                    to be checked for any DET error                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   591  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   592  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   593  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   594  ** Return value     : uint32                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   595  **                    DIO_NO_ERROR: if no error is detected                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   596  **                    DIO_ERROR: if DET error is detected                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   597  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   598  ** Description      : This function:                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   599  **  - DIO048: This function checks the GroupIdPtr for DET error               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   600  **    DIO_E_PARAM_INVALID_GROUP_ID                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   601  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   602  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   603  uint8 Dio_lCheckGroupId(uint8 ApiId, const Dio_ChannelGroupType *GroupIdPtr)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   604  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   605    uint32 PortReadOnly;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   606    uint32 PortAvailable;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   607    uint8  ErrStatus;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   608  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   609    /* Initialise the Error status to DIO_ERROR */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   610    ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   611  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   612    /* Check GroupIdPtr for NULL_PTR */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   613    if (GroupIdPtr != NULL_PTR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   614    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   615      ErrStatus = Dio_lCheckChGrpValue(GroupIdPtr);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   616  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   617      if (ErrStatus != (uint8)DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   618      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   619        /*Check if the port is Analog port for Write operation*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   620        PortReadOnly = Dio_lIsPortReadOnly((uint32)(GroupIdPtr->port));
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   621        PortAvailable = Dio_lIsPortAvailable((uint32)(GroupIdPtr->port));
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   622  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   623        if( ((ApiId == DIO_SID_WRITECHANNELGROUP) && (PortReadOnly != 0U))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   624               || (PortAvailable == 0U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   625           )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   626        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   627          /* Error status = Error has occurred */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   628          ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   629        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   630        /* Check if mask = 0 */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   631        else if( ((GroupIdPtr->mask) == 0U) )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   632        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   633          ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   634        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   635        /* Check if mask value is invalid, i.e., mask value contains the
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   636           unimplemented bits */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   637        else if( ( (GroupIdPtr->mask) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   638                   (~((uint32)Dio_kMaskUndefinedPortPins[GroupIdPtr->port]))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   639                 ) != (Dio_PortLevelType)0U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   640        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   641          ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   642        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   643  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   644        /* Check if offset is greater than the most significant pin on the port
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   645           Note that existence of the port is checked earlier */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   646        else if((uint32)(GroupIdPtr->offset) >
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   647                                  (uint32)(Dio_kMSPortPin[GroupIdPtr->port]))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   648        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   649          ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   650        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   651        else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   652        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   653          /* No functionality to implement. This is to avoid MISRA violation */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   654        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   655     }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   656    } /* GroupIdPtr != NULL_PTR */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   657  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   658    if (ErrStatus == (uint8)DIO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   659    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   660      #if (DIO_DEV_ERROR_DETECT == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   661      /* DIO114: Reporting error Invalid Channel Group for wrong
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   662         group configuration ID */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   663      Det_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   664                     (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   665                      DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   666                      ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   667                      DIO_E_PARAM_L_INVALID_GROUP
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   668                      );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   669      #endif /*DIO_DEV_ERROR_DETECT == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   670  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   671      #if (DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   672      SafeMcal_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   673                      (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   674                       DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   675                       ApiId,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   676                       DIO_E_PARAM_L_INVALID_GROUP
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   677                       );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   678      #endif /*DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   679    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   680    return (ErrStatus);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   681  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   682  }/* Dio_lCheckGroupId */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   683  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   684  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON )*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   685  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   686  #if (DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   687  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   688  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   689  ** Syntax           : uint8 Dio_lCheckPortLevel                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   690  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   691  **                      Dio_PortType PortId,                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   692  **                      Dio_PortLevelType Level                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   693  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   694  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   695  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   696  ** Service ID       : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   697  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   698  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   699  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   700  ** Reentrancy       : reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   701  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   702  ** Parameters (in):  PortId - port id whose level to be checked               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   703  **                   Level - port level to be checked                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   704  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   705  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   706  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   707  ** Return value     : uint8                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   708  **                    DIO_NO_ERROR: if no error is detected                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   709  **                    DIO_ERROR: if DET error is detected                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   710  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   711  ** Description      : This function validates the "Level" value               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   712  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   713  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   714  uint8 Dio_lCheckPortLevel(Dio_PortType PortId, Dio_PortLevelType Level)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   715  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   716    uint8  ErrStatus;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   717  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   718    /* Initialise the Error status to DIO_ERROR */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   719    ErrStatus = (uint8)DIO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   720  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   721    if ((Level & (~((uint32)Dio_kMaskUndefinedPortPins[PortId])))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   722                                  == (Dio_PortLevelType)0U)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   723    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   724      ErrStatus = (uint8)DIO_NO_ERROR;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   725    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   726    return (ErrStatus);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   727  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   728  #endif /* (DIO_SAFETY_ENABLE == STD_ON )*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   729  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   730  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   731  ** Traceability     : [cover parentID=DS_AS_DIO137,DS_AS_DIO014_DIO037,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   732                         DS_AS_DIO092,DS_AS_DIO093,DS_AS_DIO060_6,DS_AS_DIO012,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   733                         DS_AS_DIO083,DS_AS_DIO118_3]                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   734  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   735  ** Syntax           : Dio_PortLevelType Dio_ReadChannelGroup                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   736  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   737  **                      const Dio_ChannelGroupType *ChannelGroupIdPtr         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   738  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   739  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   740  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   741  ** Service ID       : 0x04                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   742  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   743  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   744  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   745  ** Reentrancy       : DIO005: reentrant                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   746  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   747  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   748                          pointer to channel group configuration                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   749  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   750  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   751  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   752  ** Return value     : Dio_PortLevelType                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   753  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   754  ** Description      : This function:                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   755  **  - DIO014: DIO037: returns the level of specified channel group            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   756  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   757  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   758  Dio_PortLevelType Dio_ReadChannelGroup
; Function Dio_ReadChannelGroup
.L11:
Dio_ReadChannelGroup:	.type	func
	mov.aa	a15,a4
.L125:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   759  (
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   760    const Dio_ChannelGroupType *ChannelGroupIdPtr
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   761  )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   762  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   763    Ifx_P             *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   764    Dio_PortLevelType  RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   765  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   766    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   767  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   768    /* Return value should be zero for errors*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   769    RetVal = (Dio_PortLevelType)STD_LOW;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   770  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   771    if(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   772      Dio_lErrorCheckChannelGroupDet(ChannelGroupIdPtr,DIO_SID_READCHANNELGROUP)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   773                           == DIO_NO_ERROR
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   774      )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   775    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   776    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   777       /* DIO092: The input port value is masked with the configured mask value
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   778       GetPortAddressPtr will hold the port address of Port0 to Port11 or
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   779       Port12 to Port16 depending on the Port number */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   780       GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	ld.bu	d4,[a15]3
	call	Dio_lGetPortAdr
.L124:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   781       RetVal = (Dio_PortLevelType)(DIO_SFR_RUNTIME_USER_MODE_READ32\ 
	ld.w	d15,[a2]36
	extr.u	d0,d15,#0,#16
.L196:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   782                    (GetPortAddressPtr->IN.U) & (uint32)ChannelGroupIdPtr->mask);
	ld.hu	d15,[a15]0
.L126:
	and	d0,d15
.L197:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   783  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   784       /* DIO093: shift the level by configured offset value and then return */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   785       RetVal = (RetVal >> ChannelGroupIdPtr->offset);
	ld.bu	d15,[a15]2
.L198:
	rsub	d15,#0
	sha	d2,d0,d15
.L127:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   786    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   787    return (RetVal);
	j	.L2

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   788  } /* Dio_ReadChannelGroup */
.L2:
	ret
.L102:
	
__Dio_ReadChannelGroup_function_end:
	.size	Dio_ReadChannelGroup,__Dio_ReadChannelGroup_function_end-Dio_ReadChannelGroup
.L56:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WriteChannelGroup',code,cluster('Dio_WriteChannelGroup')
	.sect	'.text.Dio.Dio_WriteChannelGroup'
	.align	2
	
	.global	Dio_WriteChannelGroup

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   789  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   790  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   791  ** Traceability     : [cover parentID=DS_AS_DIO138,DS_AS_DIO008_DIO039,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   792                         DS_AS_DIO040,DS_AS_DIO090,DS_AS_DIO091,DS_AS_DIO060_7,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   793                         DS_AS_DIO109,DS_AS_DIO064,DS_AS_DIO119_3]              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   794  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   795  ** Syntax           : void Dio_WriteChannelGroup                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   796  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   797  **                      const Dio_ChannelGroupType *ChannelGroupIdPtr,        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   798  **                      Dio_PortLevelType Level                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   799  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   800  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   801  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   802  ** Service ID       : 0x05                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   803  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   804  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   805  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   806  ** Reentrancy       : DIO005: reentrant                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   807  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   808  ** Parameters (in)  : ChannelGroupIdPtr -                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   809                          pointer to channel group configuration                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   810  **                    Level - Sets level of specified channel group           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   811  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   812  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   813  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   814  ** Return value     : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   815  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   816  ** Description      : This function:                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   817  **  - DIO039: sets the level of specified channel group                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   818  **  - DIO008: The value for all the pins the channel group are set at         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   819  **    one shot                                                                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   820  **  - DIO040: Other pins of the port and pins that are configured as          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   821  **    input remains unchanged                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   822  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   823  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   824  void Dio_WriteChannelGroup
; Function Dio_WriteChannelGroup
.L13:
Dio_WriteChannelGroup:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   825  (
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   826    const Dio_ChannelGroupType *ChannelGroupIdPtr,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   827    Dio_PortLevelType Level
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   828  )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   829  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   830    /*
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   831      Note: volatile is used for the variable GetPortAddressPtr.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   832      The compiler may optimise the function call and the desired Level may not
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   833      be written to the Channel or to the Port.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   834    */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   835    volatile Ifx_P *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   836    uint32          PortVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   837    uint32          PortResetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   838  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   839    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   840    if(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   841     Dio_lErrorCheckChannelGroupDet(ChannelGroupIdPtr,DIO_SID_WRITECHANNELGROUP)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   842                           == DIO_NO_ERROR )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   843    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   844    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   845      /* DIO090: passed Level is masked as per the configuration */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   846      /* DIO091: Level is shifted by the configured offset */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   847      /* PortVal is used to set the bits */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   848      PortVal = (uint32)(((uint32)Level << ChannelGroupIdPtr->offset) & \ 
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   849                                                 ChannelGroupIdPtr->mask);
	ld.hu	d0,[a4]0
.L203:
	ld.bu	d15,[a4]2
.L204:
	sh	d4,d4,d15
.L129:
	and	d4,d0
.L205:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   850  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   851      /* PortResetVal is used to reset the bits */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   852      PortResetVal = ((~PortVal) & ((uint32)ChannelGroupIdPtr->mask));
	mov	d15,#-1
	xor	d15,d4
.L131:
	and	d0,d15
.L206:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   853  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   854      PortVal = (PortVal | (PortResetVal << DIO_CHANNEL_GROUP_RESET));
	sh	d15,d0,#16
.L132:
	or	d15,d4
.L130:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   855  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   856      /* GetPortAddressPtr will hold the port address of Port0 to Port11 or
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   857         Port12 to Port16 depending on the Port number */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   858      GetPortAddressPtr = Dio_lGetPortAdr(ChannelGroupIdPtr->port);
	ld.bu	d4,[a4]3
	call	Dio_lGetPortAdr
.L128:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   859      /* Mapping of code and data to specific memory sections via memory mapping
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   860         file*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   861      /* IFX_MISRA_RULE_14_03_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   862         is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   863      DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OMR.U),PortVal);
	st.w	[a2]4,d15
.L207:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   864    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   865  } /* Dio_WriteChannelGroup */
	ret
.L107:
	
__Dio_WriteChannelGroup_function_end:
	.size	Dio_WriteChannelGroup,__Dio_WriteChannelGroup_function_end-Dio_WriteChannelGroup
.L61:
	; End of function
	
	.sdecl	'.text.Dio.Dio_ReadChannel',code,cluster('Dio_ReadChannel')
	.sect	'.text.Dio.Dio_ReadChannel'
	.align	2
	
	.global	Dio_ReadChannel

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   866  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   867  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   868  ** Traceability     : [cover parentID=DS_AS_DIO133,DS_AS_DIO027,DS_AS_DIO011,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   869                         DS_AS_DIO060_1,DS_AS_DIO089,DS_AS_DIO012,DS_AS_DIO083,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   870                         DS_AS_DIO118_1]                                        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   871  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   872  ** Syntax           : Dio_LevelType Dio_ReadChannel                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   873  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   874  **                      Dio_ChannelType ChannelId                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   875  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   876  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   877  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   878  ** Service ID       : 0x00                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   879  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   880  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   881  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   882  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   883  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   884  ** Parameters (in)  : ChannelId - ChannelId whose level to be read            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   885  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   886  ** Parameters (out) : none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   887  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   888  ** Return value     : Dio_LevelType - The function returns value or the level **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   889  **                  of the specified channel which is of type Dio_LevelType   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   890  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   891  ** Description      : This function:                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   892  **      - DIO011: DIO27: returns the level of specified channel               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   893  **      - DIO012: The specified channel can be input or output                **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   894  **      - DIO085: returns the physical level of the channel                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   895  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   896  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   897  Dio_LevelType Dio_ReadChannel(Dio_ChannelType ChannelId)
; Function Dio_ReadChannel
.L15:
Dio_ReadChannel:	.type	func
	mov	d15,d4
.L134:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   898  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   899    uint32        PinPosition;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   900    Dio_LevelType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   901    Ifx_P *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   902  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   903    /* Return value should be zero for errors*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   904    RetVal = (Dio_LevelType)STD_LOW;
	mov	d9,#0
.L136:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   905  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   906  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   907    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   908    if(Dio_lErrorCheckChannelDet(ChannelId,DIO_SID_READCHANNEL)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   909                           == DIO_NO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   910    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   911    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   912      /*
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   913        GetPortAddressPtr will hold the port address
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   914      */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   915      GetPortAddressPtr = Dio_lGetPortAdr(Dio_lGetPortNumber(ChannelId));
	mov	d4,d15
	call	Dio_lGetPortNumber
.L133:
	mov	d4,d2
	call	Dio_lGetPortAdr
.L137:
	mov.aa	a15,a2
.L139:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   916  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   917      /* Get the Pin position */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   918      PinPosition = ((uint32)0x01U << Dio_lGetPinNumber(ChannelId));
	mov	d8,#1
.L173:
	mov	d4,d15
.L140:
	call	Dio_lGetPinNumber
.L138:
	sh	d8,d8,d2
.L141:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   919  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   920      /* Read the Channel level and decide the return value */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   921      if ( (PinPosition & (DIO_SFR_RUNTIME_USER_MODE_READ32\ 
	ld.w	d15,[a15]36
.L135:
	and	d8,d15
.L142:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   922                          (GetPortAddressPtr->IN.U))) != (Dio_LevelType)STD_LOW )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   923      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   924        RetVal = (Dio_LevelType)STD_HIGH;
	seln	d9,d8,d9,#1
.L3:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   925      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   926    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   927    return RetVal;
	mov	d2,d9
.L143:
	j	.L4

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   928  }/* Dio_ReadChannel */
.L4:
	ret
.L80:
	
__Dio_ReadChannel_function_end:
	.size	Dio_ReadChannel,__Dio_ReadChannel_function_end-Dio_ReadChannel
.L36:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WriteChannel',code,cluster('Dio_WriteChannel')
	.sect	'.text.Dio.Dio_WriteChannel'
	.align	2
	
	.global	Dio_WriteChannel

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   929  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   930  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   931  ** Traceability   : [cover parentID=DS_AS_DIO134,DS_AS_DIO006,DS_AS_DIO028,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   932                       DS_AS_DIO029_DIO070,DS_AS_DIO079,DS_AS_DIO060_2,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   933                       DS_AS_DIO109,DS_AS_DIO089,DS_AS_DIO064,DS_AS_DIO119_1]   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   934  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   935  ** Syntax : void Dio_WriteChannel                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   936  **          (                                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   937  **             Dio_ChannelType ChannelId,                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   938  **             Dio_LevelType Level                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   939  **          )                                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   940  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   941  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   942  ** Service ID:  1                                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   943  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   944  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   945  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   946  ** Reentrancy:  DIO005: DIO060: Reentrant                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   947  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   948  ** Parameters (in):  ChannelId - ChannelId whose level to be set              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   949  **                   Level - Channel level to be set                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   950  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   951  ** Parameters (out):  none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   952  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   953  ** Return value:  none                                                        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   954  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   955  ** Description : This function:                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   956  **      - DIO006: DIO028: DIO064: sets the specified level for specified      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   957  **        channel                                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   958  **      - DIO023: Possible levels for channel are STD_HIGH and STD_LOW        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   959  **      - DIO029: DIO070: DIO079: The real physical level of pin is not       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   960  **        modified if the specified channel is configured as input            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   961  **      - DIO109: For input channel this function writes into the output      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   962  **        register, so that pin level can be set immediately when direction   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   963  **        changed by PORT driver                                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   964  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   965  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   966  void Dio_WriteChannel(Dio_ChannelType ChannelId, Dio_LevelType Level)
; Function Dio_WriteChannel
.L17:
Dio_WriteChannel:	.type	func
	mov	d8,d4
.L145:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   967  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   968    /*
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   969      Note: volatile is used for the variable GetPortAddressPtr.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   970      The compiler may optimise the function call and the desired Level may not
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   971      be written to the Channel or to the Port.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   972    */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   973    volatile Ifx_P *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   974    uint32 OmrVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   975  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   976    OmrVal = DIO_OMR_RESET_BIT;
	movh	d15,#1
.L146:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   977  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   978    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   979    if(Dio_lErrorCheckChannelDet(ChannelId,DIO_SID_WRITECHANNEL)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   980                           == DIO_NO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   981    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   982    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   983      #if(DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   984      if( (Level == (Dio_LevelType)STD_LOW) ||
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   985          (Level == (Dio_LevelType)STD_HIGH)   )
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   986      #endif /* (DIO_SAFETY_ENABLE == ON) */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   987      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   988        /* Decide the value to be written depending
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   989            on the input parameter Level */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   990        if (Level != (Dio_LevelType)STD_LOW)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   991        {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   992          OmrVal = 0x01U;
	seln	d15,d5,d15,#1
.L5:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   993        }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   994        /* GetPortAddressPtr will hold the port address */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   995        GetPortAddressPtr = Dio_lGetPortAdr(Dio_lGetPortNumber(ChannelId));
	mov	d4,d8
	call	Dio_lGetPortNumber
.L144:
	mov	d4,d2
	call	Dio_lGetPortAdr
.L148:
	mov.aa	a15,a2
.L150:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   996  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   997        /* Write to the PORT OMR register to reflect at the channel*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   998        DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OMR.U),
	mov	d4,d8
.L151:
	call	Dio_lGetPinNumber
.L149:
	sh	d15,d15,d2
.L147:
	st.w	[a15]4,d15
.L178:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	   999         ((unsigned_int)(OmrVal << Dio_lGetPinNumber(ChannelId))));
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1000      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1001      #if (DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1002      else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1003      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1004         SafeMcal_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1005               (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1006                DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1007                DIO_SID_WRITECHANNEL,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1008                DIO_E_PARAM_INVALID_LEVEL);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1009      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1010      #endif /*DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1011    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1012  }/* Dio_WriteChannel */
	ret
.L88:
	
__Dio_WriteChannel_function_end:
	.size	Dio_WriteChannel,__Dio_WriteChannel_function_end-Dio_WriteChannel
.L41:
	; End of function
	
	.sdecl	'.text.Dio.Dio_ReadPort',code,cluster('Dio_ReadPort')
	.sect	'.text.Dio.Dio_ReadPort'
	.align	2
	
	.global	Dio_ReadPort

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1013  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1014  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1015  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1016  ** Traceability    : [cover parentID=DS_AS_DIO135,DS_AS_DIO013,DS_AS_DIO031,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1017                        DS_AS_DIO104,DS_AS_DIO060_4,DS_AS_DIO012,DS_AS_DIO083,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1018                        DS_AS_DIO118_2]                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1019  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1020  ** Syntax : Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId)               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1021  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1022  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1023  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1024  ** Service ID:  2                                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1025  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1026  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1027  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1028  ** Reentrancy:  DIO005: DIO060: reentrant                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1029  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1030  ** Parameters (in):  PortId - Port id whose level to be read                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1031  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1032  ** Parameters (out):  none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1033  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1034  ** Return value:  Dio_PortLevelType - The function returns value or the level **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1035  **                of the specified channel which is of type Dio_PortLevelType **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1036  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1037  ** Description : This function:                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1038  **      - DIO013: DIO031: returns the level of specified port                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1039  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1040  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1041  Dio_PortLevelType Dio_ReadPort(Dio_PortType PortId)
; Function Dio_ReadPort
.L19:
Dio_ReadPort:	.type	func
	mov	d8,d4
.L153:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1042  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1043    Ifx_P             *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1044    Dio_PortLevelType  RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1045  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1046    /* Check for the validity of symbolic Port ID
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1047       Reported DET if error detected
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1048    */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1049    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1050  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1051    /* Return value should be zero for errors*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1052    RetVal = (Dio_PortLevelType)STD_LOW;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1053  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1054    if(Dio_lErrorCheckPortDet(PortId,DIO_SID_READPORT)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1055                           == DIO_NO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1056    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1057      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1058        /* Return the Port IN register value
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1059           DIO104: MSB for small port size are zero from hardware itself
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1060           GetPortAddressPtr will hold the port address
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1061        */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1062        GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	mov	d4,d8
	call	Dio_lGetPortAdr
.L152:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1063        RetVal = ((Dio_PortLevelType)DIO_SFR_RUNTIME_USER_MODE_READ32\ 
	ld.w	d15,[a2]36
.L183:
	extr.u	d2,d15,#0,#16
.L184:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1064                (GetPortAddressPtr->IN.U) & Dio_kMaskUndefinedPortPins[PortId]);
	movh.a	a15,#@his(Dio_kMaskUndefinedPortPins)
	lea	a15,[a15]@los(Dio_kMaskUndefinedPortPins)
.L185:
	addsc.a	a15,a15,d8,#1
	ld.hu	d15,[a15]0
.L154:
	and	d2,d15
.L186:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1065      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1066    return (RetVal);
	j	.L6

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1067  }/* Dio_ReadPort */
.L6:
	ret
.L93:
	
__Dio_ReadPort_function_end:
	.size	Dio_ReadPort,__Dio_ReadPort_function_end-Dio_ReadPort
.L46:
	; End of function
	
	.sdecl	'.text.Dio.Dio_WritePort',code,cluster('Dio_WritePort')
	.sect	'.text.Dio.Dio_WritePort'
	.align	2
	
	.global	Dio_WritePort

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1068  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1069  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1070  ** Traceability    : [cover parentID=DS_AS_DIO136,DS_AS_DIO007_DIO034,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1071                        DS_AS_DIO004_DIO035_DIO108,DS_AS_DIO105,DS_AS_DIO060_5,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1072                        DS_AS_DIO109,DS_AS_DIO064,DS_AS_DIO119_2]               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1073  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1074  ** Syntax : void Dio_WritePort(Dio_PortType PortId, Dio_PortLevelType Level)  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1075  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1076  ** [/cover]                                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1077  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1078  ** Service ID:  3                                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1079  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1080  ** Sync/Async:  Synchronous                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1081  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1082  ** Reentrancy:  DIO005: DIO060: reentrant                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1083  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1084  ** Parameters (in):  PortId - port id whose level to be set                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1085  **                   Level - port level to be set                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1086  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1087  ** Parameters (out):  none                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1088  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1089  ** Return value:  none                                                        **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1090  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1091  ** Description : This function:                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1092  **      - DIO034: sets the specified level of specified port                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1093  **      - DIO004: DIO035: DIO108: Hardware takes care not to change the value **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1094  **        for the input channels while writing to complete port               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1095  **      - DIO007: All the port pins are written at one shot                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1096  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1097  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1098  void Dio_WritePort (Dio_PortType PortId, Dio_PortLevelType Level)
; Function Dio_WritePort
.L21:
Dio_WritePort:	.type	func
	mov	d15,d5
.L156:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1099  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1100    /*
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1101      Note: volatile is used for the variable GetPortAddressPtr.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1102      The compiler may optimise the function call and the desired Level may not
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1103      be written to the Channel or to the Port.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1104    */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1105    volatile Ifx_P *GetPortAddressPtr;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1106    uint32 LocalRegData;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1107  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1108  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1109    #if((DIO_SAFETY_ENABLE == STD_ON) || (DIO_DEV_ERROR_DETECT == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1110    if(Dio_lErrorCheckPortDet(PortId,DIO_SID_WRITEPORT)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1111                           == DIO_NO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1112    #endif /*DIO_SAFETY_ENABLE == STD_ON || DIO_DEV_ERROR_DETECT == STD_ON*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1113    {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1114  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1115      #if(DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1116    /* check whether the requested Level is valid */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1117      if(Dio_lCheckPortLevel(PortId,Level) == DIO_NO_ERROR)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1118      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1119      #endif /* DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1120        /* Write the Level to the Port OUT register
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1121           DIO105: If the port size is small, MSB's of Level are ignored
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1122           GetPortAddressPtr will hold the port address
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1123        */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1124        GetPortAddressPtr = Dio_lGetPortAdr(PortId);
	call	Dio_lGetPortAdr
.L155:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1125        LocalRegData = (uint32)Level & DIO_OUT_MASK;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1126        DIO_SFR_RUNTIME_USER_MODE_WRITE32((GetPortAddressPtr->OUT.U),\ 
	st.w	[a2],d15
.L191:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1127                                         LocalRegData);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1128      #if(DIO_SAFETY_ENABLE == STD_ON)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1129      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1130      else
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1131      {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1132        SafeMcal_ReportError(
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1133                          (uint16)DIO_MODULE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1134                           DIO_INSTANCE_ID,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1135                           DIO_SID_WRITEPORT,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1136                           DIO_E_PARAM_INVALID_LEVEL
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1137                           );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1138      }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1139      #endif /* DIO_SAFETY_ENABLE == STD_ON */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1140    }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1141  }/* Dio_WritePort */
	ret
.L97:
	
__Dio_WritePort_function_end:
	.size	Dio_WritePort,__Dio_WritePort_function_end-Dio_WritePort
.L51:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPortNumber',code,cluster('Dio_lGetPortNumber')
	.sect	'.text.Dio.Dio_lGetPortNumber'
	.align	2
	
	.global	Dio_lGetPortNumber

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1142  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1143  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1144  **                      Converted INLINE functions                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1145  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1146  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1147  #if((DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1148  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1149  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1150  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1151  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1152  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1153  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1154  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1155  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1156  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1157  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1158  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1159  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1160  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1161  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1162  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1163  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1164  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1165  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1166  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1167  ** - The function like macro is to check if the port is available or not      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1168  **   for the microcontroller.                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1169  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1170  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1171  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable31(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1172  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1173    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1174  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1175    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1176               ((uint32)DIO_PORTS_AVAILABLE_00_31)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1177             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1178    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1179  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1180  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1181  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1182  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1183  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1184  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1185  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1186  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1187  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1188  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1189  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1190  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1191  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1192  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1193  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1194  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1195  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1196  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1197  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1198  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1199  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1200  ** - The function like macro is to check if the port is available or not      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1201  **   for the microcontroller.                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1202  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1203  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1204  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable40(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1205  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1206    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1207  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1208    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - DIO_NUMBER_32)) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1209               ((uint32)DIO_PORTS_AVAILABLE_32_40)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1210             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1211    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1212  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1213  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1214  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1215  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1216  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1217  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1218  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1219  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1220  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1221  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1222  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1223  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1224  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1225  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1226  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1227  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1228  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1229  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1230  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1231  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1232  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1233  ** - The function like macro is to check if the port is read only or          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1234  **   it is writable.                                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1235  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1236  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1237  IFX_LOCAL_INLINE uint32 Dio_lIsPortAvailable(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1238  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1239    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1240  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1241    RetVal = ((Port > DIO_NUMBER_31) ? (Dio_lIsPortAvailable40(Port)) :
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1242                                       (Dio_lIsPortAvailable31(Port))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1243             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1244    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1245  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1246  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1247  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1248  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1249  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1250  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1251  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1252  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1253  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1254  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1255  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1256  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1257  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1258  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1259  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1260  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1261  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1262  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1263  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1264  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1265  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1266  ** - The function like macro is to check if the port is read only or          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1267  **   it is writable.                                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1268  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1269  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1270  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly31(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1271  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1272    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1273  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1274    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port)) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1275               ((uint32)DIO_PORTS_READONLY_00_31)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1276             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1277    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1278  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1279  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1280  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1281  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1282  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1283  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1284  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1285  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1286  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1287  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1288  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1289  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1290  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1291  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1292  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1293  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1294  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1295  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1296  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1297  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1298  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1299  ** - The function like macro is to check if the port is read only or          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1300  **   it is writable.                                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1301  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1302  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1303  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly40(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1304  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1305    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1306  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1307    RetVal = ( ((uint32)(DIO_CHANNEL_BIT_MASK) << (Port - DIO_NUMBER_32)) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1308               ((uint32)DIO_PORTS_READONLY_32_40)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1309             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1310    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1311  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1312  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1313  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1314  ** Syntax           : IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1315  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1316  **                      Port                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1317  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1318  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1319  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1320  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1321  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1322  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1323  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1324  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1325  ** Parameters (in)  : Port - Port to be checked                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1326  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1327  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1328  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1329  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1330  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1331  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1332  ** - The function like macro is to check if the port is read only or          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1333  **   it is writable.                                                          **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1334  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1335  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1336  IFX_LOCAL_INLINE uint32 Dio_lIsPortReadOnly(uint32 Port)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1337  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1338    uint32 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1339  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1340    RetVal = ((Port <= DIO_NUMBER_31) ? (Dio_lIsPortReadOnly31(Port)) :
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1341                                        (Dio_lIsPortReadOnly40(Port))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1342             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1343    return(RetVal);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1344  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1345  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1346  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1347  ** Syntax           : IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1348  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1349  **                      Port,                                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1350  **                      Pin                                                   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1351  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1352  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1353  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1354  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1355  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1356  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1357  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1358  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1359  ** Parameters (in)  : Port - Port number                                      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1360  **                    Pin  - Pin to be validated                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1361  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1362  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1363  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1364  ** Return value     : RetVal                                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1365  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1366  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1367  ** - The function like macro is to check if the Pin is available or not.      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1368  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1369  **   Parameter: Port number of type uint8/uint16                              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1370  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1371  IFX_LOCAL_INLINE uint16 Dio_lIsPinAvailable(uint32 Port, uint8 Pin)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1372  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1373   uint16 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1374  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1375   RetVal =  ( (uint16)((uint32)DIO_CHANNEL_BIT_MASK << (Pin)) &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1376                Dio_kMaskUndefinedPortPins[Port] );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1377   return RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1378  }
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1379  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1380  #endif /* (DIO_DEV_ERROR_DETECT == STD_ON) || (DIO_SAFETY_ENABLE == STD_ON) */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1381  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1382  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1383  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1384  ** Syntax           : Dio_PortType Dio_lGetPortNumber                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1385  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1386  **                      ChannelId                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1387  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1388  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1389  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1390  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1391  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1392  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1393  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1394  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1395  ** Parameters (in)  : ChannelId - derived the port number from ChannelId      **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1396  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1397  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1398  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1399  ** Return value     : Dio_PortType RetVal                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1400  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1401  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1402  ** - The function like macro is to identify the port number from the passed   **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1403  **   ChannelId.                                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1404  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1405  Dio_PortType Dio_lGetPortNumber(Dio_ChannelType ChannelId)
; Function Dio_lGetPortNumber
.L23:
Dio_lGetPortNumber:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1406  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1407    Dio_PortType RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1408  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1409    RetVal = (Dio_PortType)((ChannelId &
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1410                     (uint16)DIO_4_TO_11_MASK) >> (uint16)DIO_PORT_NUM_OFFSET
	mov	d15,#4080
.L212:
	and	d4,d15
.L157:
	sha	d2,d4,#-4
.L158:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1411                    );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1412    return(RetVal);
	j	.L7

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1413  }
.L7:
	ret
.L113:
	
__Dio_lGetPortNumber_function_end:
	.size	Dio_lGetPortNumber,__Dio_lGetPortNumber_function_end-Dio_lGetPortNumber
.L66:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPortAdr',code,cluster('Dio_lGetPortAdr')
	.sect	'.text.Dio.Dio_lGetPortAdr'
	.align	2
	
	.global	Dio_lGetPortAdr

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1414  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1415  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1416  ** Syntax           : Ifx_P *Dio_lGetPortAdr                                  **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1417  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1418  **                      x                                                     **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1419  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1420  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1421  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1422  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1423  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1424  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1425  ** Reentrancy       : Reentrant                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1426  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1427  ** Parameters (in)  : x - Port Number                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1428  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1429  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1430  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1431  ** Return value     : Ifx_P RetVal                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1432  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1433  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1434  ** - The function like macro is to extract the Address of Px_OUT              **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1435  **   register, where x is variable. Note: x-PortNumber.                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1436  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1437  Ifx_P *Dio_lGetPortAdr(Dio_PortType PortNumber)
; Function Dio_lGetPortAdr
.L25:
Dio_lGetPortAdr:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1438  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1439    Ifx_P *RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1440    uint8  Quotient;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1441  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1442  /*
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1443  Optimization used for the conversion
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1444  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1445  ((Ifx_P * )(void *)&P00_OUT +
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1446               (((PortNumber / DIO_CONSTANT_10) * DIO_CONSTANT_16) +
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1447               (PortNumber % DIO_CONSTANT_10)))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1448             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1449  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1450  1.Convert 1/C into binary (where C is the number u want to divide with)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1451  2.Consider all the bits present to the right of the binary point,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1452    and do a left shift until the bit to the right of the binary point is 1.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1453    Let the number of shifts performed is "S".
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1454  3.Now take the most significant 17 bits, add 1 to it
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1455    and then truncate it to 16 bits.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1456    Convert that 16 bits to hexadecimal format and let that be "M"
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1457  The quotient "Q" is obtained as
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1458    Q = ((VAL * M) >> 16) >> S
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1459  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1460  Example1: To get (P/10)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1461    To divide a number P by 10,, i.e., (P/10)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1462  1.Convert (1/10) into binary, i.e., 0.00011001100110011......
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1463  2.Do left shift by 3 digit,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1464    such that bit to the right of the decinmal point is 1.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1465    S = 3,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1466    ie., 0.11001100110011001100.......
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1467  3.Now, let the type of the variable P be uint8(8 bits) ,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1468    As it is 8-bit, consider 8 + 1 = 9 bits and binary one to it
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1469     0.110011001
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1470     +         1
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1471   = 0.110011010
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1472  Round it to 8-bits again
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1473    becomes 0.11001101 = 0xCD.
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1474    M = 0xCD
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1475  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1476    Quotient is obtained by,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1477    Q = ((VAL * M) >> 16) >> S
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1478    1'e.,
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1479    Q = ((VAL * (0xCD)) >> 8) >> 3
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1480  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1481  Example2: To get (P%10) modulus 10
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1482  1. Calculate the quotient as in Example1, Q
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1483     Q = P/10
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1484     Modulus 10 = P - (Q*10),
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1485                = P - (Q*(8 + 2))
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1486                = P - (Q*8 + Q*2)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1487                = P - (Q<<3 + Q<<1)
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1488  */
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1489    Quotient = (uint8)(((uint16)PortNumber*(uint16)DIO_QUOTIENT_EXTRACT_NUM) >>
	mul	d15,d4,#205
.L217:
	sha	d15,d15,#-11
.L160:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1490                                                           DIO_QUOTIENT_SHIFT);
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1491  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1492    /*IFX_MISRA_RULE_17_04_STATUS=Pointer arithmetic is used
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1493     to efficiently access the SFRs of multiple Ports*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1494    RetVal = ( (Ifx_P * )(void *)&P00_OUT +
	movh.a	a15,#61444
	lea	a15,[a15]@los(0xf003a000)
.L218:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1495               ((uint8)(Quotient<<DIO_SHIFT_FOUR) + (PortNumber - ((uint8)
	sha	d0,d15,#4
.L219:
	extr.u	d0,d0,#0,#8
.L220:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1496                       (Quotient<<DIO_SHIFT_THREE) + (uint8)(Quotient<<1U))))
	sha	d1,d15,#3
.L221:
	sha	d15,#1
.L161:
	add	d1,d15
.L222:
	sub	d4,d1
.L159:
	add	d0,d4
	sha	d15,d0,#8
.L223:
	addsc.a	a2,a15,d15,#0
.L162:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1497             );
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1498  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1499    return(RetVal);
	j	.L8

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1500  }
.L8:
	ret
.L116:
	
__Dio_lGetPortAdr_function_end:
	.size	Dio_lGetPortAdr,__Dio_lGetPortAdr_function_end-Dio_lGetPortAdr
.L71:
	; End of function
	
	.sdecl	'.text.Dio.Dio_lGetPinNumber',code,cluster('Dio_lGetPinNumber')
	.sect	'.text.Dio.Dio_lGetPinNumber'
	.align	2
	
	.global	Dio_lGetPinNumber

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1501  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1502  /*******************************************************************************
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1503  ** Syntax           : uint8 Dio_lGetPinNumber                                 **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1504  **                    (                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1505  **                      ChannelId                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1506  **                    )                                                       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1507  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1508  ** Service ID       : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1509  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1510  ** Sync/Async       : Synchronous                                             **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1511  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1512  ** Reentrancy       : Reentrant                                           **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1513  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1514  ** Parameters (in)  : ChannelId - derived the pin number from ChannelId       **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1515  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1516  ** Parameters (out) : None                                                    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1517  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1518  ** Return value     : uint8 RetVal                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1519  **                                                                            **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1520  ** Description      :                                                         **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1521  ** - The function like macro is to identify the pin number from the passed    **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1522  **   ChannelId.                                                               **
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1523  *******************************************************************************/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1524  uint8 Dio_lGetPinNumber(Dio_ChannelType ChannelId)
; Function Dio_lGetPinNumber
.L27:
Dio_lGetPinNumber:	.type	func

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1525  {
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1526    uint8 RetVal;
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1527  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1528    RetVal = (uint8)(ChannelId & (uint16)DIO_PIN_LOW4_MASK );
	extr.u	d15,d4,#0,#8
.L228:
	and	d2,d15,#15
.L163:

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1529    return(RetVal);
	j	.L9

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1530  }
.L9:
	ret
.L120:
	
__Dio_lGetPinNumber_function_end:
	.size	Dio_lGetPinNumber,__Dio_lGetPinNumber_function_end-Dio_lGetPinNumber
.L76:
	; End of function
	
	.sdecl	'.rodata.Dio.Dio_kMaskUndefinedPortPins',data,rom,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.rodata.Dio.Dio_kMaskUndefinedPortPins'
	.align	2
Dio_kMaskUndefinedPortPins:	.type	object
	.size	Dio_kMaskUndefinedPortPins,84
	.half	8191
	.space	2
	.half	511
	.space	14
	.half	511,7756
	.space	2
	.half	15,2047,511
	.space	8
	.half	32719,255,15,63
	.space	16
	.half	29,16383
	.space	12
	.half	1023
	.space	2
	.calls	'Dio_ReadChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannelGroup','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannel','Dio_lGetPortNumber'
	.calls	'Dio_ReadChannel','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannel','Dio_lGetPinNumber'
	.calls	'Dio_WriteChannel','Dio_lGetPortNumber'
	.calls	'Dio_WriteChannel','Dio_lGetPortAdr'
	.calls	'Dio_WriteChannel','Dio_lGetPinNumber'
	.calls	'Dio_ReadPort','Dio_lGetPortAdr'
	.calls	'Dio_WritePort','Dio_lGetPortAdr'
	.calls	'Dio_ReadChannelGroup','',0
	.calls	'Dio_WriteChannelGroup','',0
	.calls	'Dio_ReadChannel','',0
	.calls	'Dio_WriteChannel','',0
	.calls	'Dio_ReadPort','',0
	.calls	'Dio_WritePort','',0
	.calls	'Dio_lGetPortNumber','',0
	.calls	'Dio_lGetPortAdr','',0
	.calls	'Dio_lGetPinNumber','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L29:
	.word	14108
	.half	3
	.word	.L30
	.byte	4
.L28:
	.byte	1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L31
.L79:
	.byte	2
	.byte	'unsigned char',0,1,8
.L81:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L83:
	.byte	2
	.byte	'unsigned int',0,4,7,2
	.byte	'int',0,4,5,3
	.byte	'_Ifx_P_OUT_Bits',0,1,143,3,16,4,4
	.byte	'P0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,180,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	207
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMR_Bits',0,1,169,2,16,4,4
	.byte	'PS0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'PCL0',0,1
	.word	145
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	145
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	145
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	145
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	145
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	145
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	145
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	145
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	145
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	145
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	145
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	145
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,132,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	523
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ID_Bits',0,1,110,16,4,4
	.byte	'MODREV',0,1
	.word	145
	.byte	8,0,2,35,0,4
	.byte	'MODTYPE',0,1
	.word	145
	.byte	8,0,2,35,1,4
	.byte	'MODNUMBER',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,147,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1094
	.byte	4,2,35,0,0,7,4
	.word	145
	.byte	8,3,0,3
	.byte	'_Ifx_P_IOCR0_Bits',0,1,140,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PC0',0,1
	.word	145
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PC1',0,1
	.word	145
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PC2',0,1
	.word	145
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PC3',0,1
	.word	145
	.byte	5,0,2,35,3,0,5,1,163,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1222
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR4_Bits',0,1,166,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PC4',0,1
	.word	145
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PC5',0,1
	.word	145
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PC6',0,1
	.word	145
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PC7',0,1
	.word	145
	.byte	5,0,2,35,3,0,5,1,179,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1437
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR8_Bits',0,1,179,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PC8',0,1
	.word	145
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PC9',0,1
	.word	145
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PC10',0,1
	.word	145
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PC11',0,1
	.word	145
	.byte	5,0,2,35,3,0,5,1,187,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1652
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IOCR12_Bits',0,1,153,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PC12',0,1
	.word	145
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PC13',0,1
	.word	145
	.byte	5,0,2,35,1,4
	.byte	'reserved_16',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PC14',0,1
	.word	145
	.byte	5,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PC15',0,1
	.word	145
	.byte	5,0,2,35,3,0,5,1,171,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	1869
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_IN_Bits',0,1,118,16,4,4
	.byte	'P0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'P1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'P2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'P3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'P4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'P5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'P6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'P7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'P8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'P9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'P10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'P11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'P12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'P13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'P14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'P15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,155,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2089
	.byte	4,2,35,0,0,7,24
	.word	145
	.byte	8,23,0,3
	.byte	'_Ifx_P_PDR0_Bits',0,1,204,3,16,4,4
	.byte	'PD0',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PL0',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'PD1',0,1
	.word	145
	.byte	3,1,2,35,0,4
	.byte	'PL1',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'PD2',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PL2',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'PD3',0,1
	.word	145
	.byte	3,1,2,35,1,4
	.byte	'PL3',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'PD4',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PL4',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'PD5',0,1
	.word	145
	.byte	3,1,2,35,2,4
	.byte	'PL5',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'PD6',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PL6',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'PD7',0,1
	.word	145
	.byte	3,1,2,35,3,4
	.byte	'PL7',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,204,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2412
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PDR1_Bits',0,1,225,3,16,4,4
	.byte	'PD8',0,1
	.word	145
	.byte	3,5,2,35,0,4
	.byte	'PL8',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'PD9',0,1
	.word	145
	.byte	3,1,2,35,0,4
	.byte	'PL9',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'PD10',0,1
	.word	145
	.byte	3,5,2,35,1,4
	.byte	'PL10',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'PD11',0,1
	.word	145
	.byte	3,1,2,35,1,4
	.byte	'PL11',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'PD12',0,1
	.word	145
	.byte	3,5,2,35,2,4
	.byte	'PL12',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'PD13',0,1
	.word	145
	.byte	3,1,2,35,2,4
	.byte	'PL13',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'PD14',0,1
	.word	145
	.byte	3,5,2,35,3,4
	.byte	'PL14',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'PD15',0,1
	.word	145
	.byte	3,1,2,35,3,4
	.byte	'PL15',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,212,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	2716
	.byte	4,2,35,0,0,7,8
	.word	145
	.byte	8,7,0,3
	.byte	'_Ifx_P_ESR_Bits',0,1,88,16,4,4
	.byte	'EN0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,139,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3041
	.byte	4,2,35,0,0,7,12
	.word	145
	.byte	8,11,0,3
	.byte	'_Ifx_P_PDISC_Bits',0,1,182,3,16,4,4
	.byte	'PDIS0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PDIS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'PDIS2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'PDIS3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'PDIS4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'PDIS5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'PDIS6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'PDIS7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'PDIS8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'PDIS9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'PDIS10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'PDIS11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'PDIS12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'PDIS13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'PDIS14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'PDIS15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,196,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3381
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_PCSR_Bits',0,1,165,3,16,4,4
	.byte	'SEL0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'SEL1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'SEL2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'SEL3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'SEL4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'SEL5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'SEL6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'reserved_7',0,2
	.word	162
	.byte	3,6,2,35,0,4
	.byte	'SEL10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'SEL11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	184
	.byte	19,1,2,35,0,4
	.byte	'LCK',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,188,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	3747
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR0_Bits',0,1,206,2,16,4,4
	.byte	'PS0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'reserved_4',0,4
	.word	184
	.byte	28,0,2,35,0,0,5,1,148,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4017
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR4_Bits',0,1,227,2,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	4,4,2,35,0,4
	.byte	'PS4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	184
	.byte	24,0,2,35,0,0,5,1,164,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4164
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR8_Bits',0,1,238,2,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	8,0,2,35,0,4
	.byte	'PS8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'reserved_12',0,4
	.word	184
	.byte	20,0,2,35,0,0,5,1,172,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4333
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR12_Bits',0,1,216,2,16,4,4
	.byte	'reserved_0',0,2
	.word	162
	.byte	12,4,2,35,0,4
	.byte	'PS12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,156,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4505
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR0_Bits',0,1,232,1,16,4,4
	.byte	'reserved_0',0,2
	.word	162
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	145
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	145
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	145
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'reserved_20',0,2
	.word	162
	.byte	12,0,2,35,2,0,5,1,228,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4680
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR4_Bits',0,1,253,1,16,4,4
	.byte	'reserved_0',0,4
	.word	184
	.byte	20,12,2,35,0,4
	.byte	'PCL4',0,1
	.word	145
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	145
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	145
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'reserved_24',0,1
	.word	145
	.byte	8,0,2,35,3,0,5,1,244,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	4854
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR8_Bits',0,1,136,2,16,4,4
	.byte	'reserved_0',0,4
	.word	184
	.byte	24,8,2,35,0,4
	.byte	'PCL8',0,1
	.word	145
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	145
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	145
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'reserved_28',0,1
	.word	145
	.byte	4,0,2,35,3,0,5,1,252,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5028
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR12_Bits',0,1,243,1,16,4,4
	.byte	'reserved_0',0,4
	.word	184
	.byte	28,4,2,35,0,4
	.byte	'PCL12',0,1
	.word	145
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	145
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	145
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,236,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5204
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMSR_Bits',0,1,249,2,16,4,4
	.byte	'PS0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'PS2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'PS3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'PS4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'PS5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'PS6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'PS7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'PS8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'PS9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'PS10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'PS11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'PS12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'PS13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'PS14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'PS15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,140,5,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5360
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_OMCR_Bits',0,1,147,2,16,4,4
	.byte	'reserved_0',0,2
	.word	162
	.byte	16,0,2,35,0,4
	.byte	'PCL0',0,1
	.word	145
	.byte	1,7,2,35,2,4
	.byte	'PCL1',0,1
	.word	145
	.byte	1,6,2,35,2,4
	.byte	'PCL2',0,1
	.word	145
	.byte	1,5,2,35,2,4
	.byte	'PCL3',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'PCL4',0,1
	.word	145
	.byte	1,3,2,35,2,4
	.byte	'PCL5',0,1
	.word	145
	.byte	1,2,2,35,2,4
	.byte	'PCL6',0,1
	.word	145
	.byte	1,1,2,35,2,4
	.byte	'PCL7',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'PCL8',0,1
	.word	145
	.byte	1,7,2,35,3,4
	.byte	'PCL9',0,1
	.word	145
	.byte	1,6,2,35,3,4
	.byte	'PCL10',0,1
	.word	145
	.byte	1,5,2,35,3,4
	.byte	'PCL11',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'PCL12',0,1
	.word	145
	.byte	1,3,2,35,3,4
	.byte	'PCL13',0,1
	.word	145
	.byte	1,2,2,35,3,4
	.byte	'PCL14',0,1
	.word	145
	.byte	1,1,2,35,3,4
	.byte	'PCL15',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,220,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	5693
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR0_Bits',0,1,192,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	184
	.byte	30,0,2,35,0,0,5,1,195,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6041
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR1_Bits',0,1,200,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'PS1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'reserved_2',0,4
	.word	184
	.byte	30,0,2,35,0,0,3
	.byte	'_Ifx_P_LPCR1_P21_Bits',0,1,208,1,16,4,4
	.byte	'RDIS_CTRL',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'RX_DIS',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'TERM',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'LRXTERM',0,1
	.word	145
	.byte	5,0,2,35,0,4
	.byte	'reserved_8',0,4
	.word	184
	.byte	24,0,2,35,0,0,5,1,203,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6165
	.byte	4,2,35,0,6
	.byte	'B_P21',0
	.word	6249
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_LPCR2_Bits',0,1,218,1,16,4,4
	.byte	'reserved_0',0,1
	.word	145
	.byte	8,0,2,35,0,4
	.byte	'LVDSR',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'LVDSRL',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'reserved_10',0,1
	.word	145
	.byte	2,4,2,35,1,4
	.byte	'TDIS_CTRL',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'TX_DIS',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'TX_PD',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'TX_PWDPD',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'reserved_16',0,2
	.word	162
	.byte	16,0,2,35,2,0,5,1,212,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6429
	.byte	4,2,35,0,0,7,76
	.word	145
	.byte	8,75,0,3
	.byte	'_Ifx_P_ACCEN1_Bits',0,1,82,16,4,4
	.byte	'reserved_0',0,4
	.word	184
	.byte	32,0,2,35,0,0,5,1,131,4,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6682
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P_ACCEN0_Bits',0,1,45,16,4,4
	.byte	'EN0',0,1
	.word	145
	.byte	1,7,2,35,0,4
	.byte	'EN1',0,1
	.word	145
	.byte	1,6,2,35,0,4
	.byte	'EN2',0,1
	.word	145
	.byte	1,5,2,35,0,4
	.byte	'EN3',0,1
	.word	145
	.byte	1,4,2,35,0,4
	.byte	'EN4',0,1
	.word	145
	.byte	1,3,2,35,0,4
	.byte	'EN5',0,1
	.word	145
	.byte	1,2,2,35,0,4
	.byte	'EN6',0,1
	.word	145
	.byte	1,1,2,35,0,4
	.byte	'EN7',0,1
	.word	145
	.byte	1,0,2,35,0,4
	.byte	'EN8',0,1
	.word	145
	.byte	1,7,2,35,1,4
	.byte	'EN9',0,1
	.word	145
	.byte	1,6,2,35,1,4
	.byte	'EN10',0,1
	.word	145
	.byte	1,5,2,35,1,4
	.byte	'EN11',0,1
	.word	145
	.byte	1,4,2,35,1,4
	.byte	'EN12',0,1
	.word	145
	.byte	1,3,2,35,1,4
	.byte	'EN13',0,1
	.word	145
	.byte	1,2,2,35,1,4
	.byte	'EN14',0,1
	.word	145
	.byte	1,1,2,35,1,4
	.byte	'EN15',0,1
	.word	145
	.byte	1,0,2,35,1,4
	.byte	'EN16',0,1
	.word	145
	.byte	1,7,2,35,2,4
	.byte	'EN17',0,1
	.word	145
	.byte	1,6,2,35,2,4
	.byte	'EN18',0,1
	.word	145
	.byte	1,5,2,35,2,4
	.byte	'EN19',0,1
	.word	145
	.byte	1,4,2,35,2,4
	.byte	'EN20',0,1
	.word	145
	.byte	1,3,2,35,2,4
	.byte	'EN21',0,1
	.word	145
	.byte	1,2,2,35,2,4
	.byte	'EN22',0,1
	.word	145
	.byte	1,1,2,35,2,4
	.byte	'EN23',0,1
	.word	145
	.byte	1,0,2,35,2,4
	.byte	'EN24',0,1
	.word	145
	.byte	1,7,2,35,3,4
	.byte	'EN25',0,1
	.word	145
	.byte	1,6,2,35,3,4
	.byte	'EN26',0,1
	.word	145
	.byte	1,5,2,35,3,4
	.byte	'EN27',0,1
	.word	145
	.byte	1,4,2,35,3,4
	.byte	'EN28',0,1
	.word	145
	.byte	1,3,2,35,3,4
	.byte	'EN29',0,1
	.word	145
	.byte	1,2,2,35,3,4
	.byte	'EN30',0,1
	.word	145
	.byte	1,1,2,35,3,4
	.byte	'EN31',0,1
	.word	145
	.byte	1,0,2,35,3,0,5,1,251,3,9,4,6
	.byte	'U',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'I',0
	.word	200
	.byte	4,2,35,0,6
	.byte	'B',0
	.word	6769
	.byte	4,2,35,0,0,3
	.byte	'_Ifx_P',0,1,228,5,25,128,2,6
	.byte	'OUT',0
	.word	483
	.byte	4,2,35,0,6
	.byte	'OMR',0
	.word	1054
	.byte	4,2,35,4,6
	.byte	'ID',0
	.word	1173
	.byte	4,2,35,8,6
	.byte	'reserved_C',0
	.word	1213
	.byte	4,2,35,12,6
	.byte	'IOCR0',0
	.word	1397
	.byte	4,2,35,16,6
	.byte	'IOCR4',0
	.word	1612
	.byte	4,2,35,20,6
	.byte	'IOCR8',0
	.word	1829
	.byte	4,2,35,24,6
	.byte	'IOCR12',0
	.word	2049
	.byte	4,2,35,28,6
	.byte	'reserved_20',0
	.word	1213
	.byte	4,2,35,32,6
	.byte	'IN',0
	.word	2363
	.byte	4,2,35,36,6
	.byte	'reserved_28',0
	.word	2403
	.byte	24,2,35,40,6
	.byte	'PDR0',0
	.word	2676
	.byte	4,2,35,64,6
	.byte	'PDR1',0
	.word	2992
	.byte	4,2,35,68,6
	.byte	'reserved_48',0
	.word	3032
	.byte	8,2,35,72,6
	.byte	'ESR',0
	.word	3332
	.byte	4,2,35,80,6
	.byte	'reserved_54',0
	.word	3372
	.byte	12,2,35,84,6
	.byte	'PDISC',0
	.word	3707
	.byte	4,2,35,96,6
	.byte	'PCSR',0
	.word	3977
	.byte	4,2,35,100,6
	.byte	'reserved_68',0
	.word	3032
	.byte	8,2,35,104,6
	.byte	'OMSR0',0
	.word	4124
	.byte	4,2,35,112,6
	.byte	'OMSR4',0
	.word	4293
	.byte	4,2,35,116,6
	.byte	'OMSR8',0
	.word	4465
	.byte	4,2,35,120,6
	.byte	'OMSR12',0
	.word	4640
	.byte	4,2,35,124,6
	.byte	'OMCR0',0
	.word	4814
	.byte	4,3,35,128,1,6
	.byte	'OMCR4',0
	.word	4988
	.byte	4,3,35,132,1,6
	.byte	'OMCR8',0
	.word	5164
	.byte	4,3,35,136,1,6
	.byte	'OMCR12',0
	.word	5320
	.byte	4,3,35,140,1,6
	.byte	'OMSR',0
	.word	5653
	.byte	4,3,35,144,1,6
	.byte	'OMCR',0
	.word	6001
	.byte	4,3,35,148,1,6
	.byte	'reserved_98',0
	.word	3032
	.byte	8,3,35,152,1,6
	.byte	'LPCR0',0
	.word	6125
	.byte	4,3,35,160,1,6
	.byte	'LPCR1',0
	.word	6374
	.byte	4,3,35,164,1,6
	.byte	'LPCR2',0
	.word	6633
	.byte	4,3,35,168,1,6
	.byte	'reserved_A4',0
	.word	6673
	.byte	76,3,35,172,1,6
	.byte	'ACCEN1',0
	.word	6729
	.byte	4,3,35,248,1,6
	.byte	'ACCEN0',0
	.word	7296
	.byte	4,3,35,252,1,0,9
	.word	7336
.L86:
	.byte	10
	.word	7939
	.byte	3
	.byte	'Dio_ChannelGroupType',0,2,129,2,16,4,6
	.byte	'mask',0
	.word	162
	.byte	2,2,35,0,6
	.byte	'offset',0
	.word	145
	.byte	1,2,35,2,6
	.byte	'port',0
	.word	145
	.byte	1,2,35,3,0,11
	.word	7949
.L103:
	.byte	10
	.word	8021
	.byte	12,1,10
	.word	8031
	.byte	13
	.byte	'__codeptr',0,3,1,1
	.word	8033
	.byte	13
	.byte	'uint8',0,4,81,25
	.word	145
	.byte	13
	.byte	'uint16',0,4,91,25
	.word	162
	.byte	13
	.byte	'uint32',0,4,106,24
	.word	184
	.byte	13
	.byte	'boolean',0,4,127,25
	.word	145
	.byte	13
	.byte	'StatusType',0,5,191,1,27
	.word	145
	.byte	14,5,206,1,9,8,6
	.byte	'vendorID',0
	.word	162
	.byte	2,2,35,0,6
	.byte	'moduleID',0
	.word	162
	.byte	2,2,35,2,6
	.byte	'sw_major_version',0
	.word	145
	.byte	1,2,35,4,6
	.byte	'sw_minor_version',0
	.word	145
	.byte	1,2,35,5,6
	.byte	'sw_patch_version',0
	.word	145
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,5,213,1,3
	.word	8136
	.byte	14,6,93,9,8,6
	.byte	'Class',0
	.word	145
	.byte	1,2,35,0,6
	.byte	'TIN',0
	.word	145
	.byte	1,2,35,1,6
	.byte	'ReturnAddress',0
	.word	184
	.byte	4,2,35,4,0,13
	.byte	'OsTrapInfoType',0,6,97,3
	.word	8286
	.byte	7,68
	.word	184
	.byte	8,16,0,14,6,154,1,9,68,6
	.byte	'store',0
	.word	8366
	.byte	68,2,35,0,0,7,68
	.word	8375
	.byte	8,0,0,13
	.byte	'Os_JumpBufType',0,6,156,1,3
	.word	8397
	.byte	13
	.byte	'Os_StackTraceType',0,6,174,1,18
	.word	184
	.byte	14,6,175,1,9,8,6
	.byte	'sp',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'ctx',0
	.word	184
	.byte	4,2,35,4,0,13
	.byte	'Os_StackValueType',0,6,175,1,63
	.word	8457
	.byte	13
	.byte	'Os_StackSizeType',0,6,176,1,27
	.word	8457
	.byte	15,1,1,10
	.word	8542
	.byte	13
	.byte	'Os_VoidVoidFunctionType',0,6,179,1,16
	.word	8545
	.byte	13
	.byte	'ApplicationType',0,6,193,1,23
	.word	145
	.byte	3
	.byte	'Os_ApplicationConfigurationType_s',0,6,198,1,16,2,6
	.byte	'app_id',0
	.word	145
	.byte	1,2,35,0,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,1,0,13
	.byte	'Os_ApplicationConfigurationType',0,6,201,1,3
	.word	8608
	.byte	13
	.byte	'Os_CoreStateType',0,6,203,1,16
	.word	184
	.byte	13
	.byte	'AreaIdType',0,6,204,1,16
	.word	162
	.byte	13
	.byte	'Os_PeripheralAddressType',0,6,212,1,22
	.word	184
	.byte	13
	.byte	'TickType',0,6,221,1,22
	.word	184
	.byte	13
	.byte	'Os_StopwatchTickType',0,6,225,1,22
	.word	184
	.byte	10
	.word	184
	.byte	13
	.byte	'Os_Lockable',0,6,234,1,18
	.word	8850
	.byte	13
	.byte	'CoreIdType',0,6,236,1,16
	.word	162
	.byte	13
	.byte	'SpinlockIdType',0,6,237,1,16
	.word	162
	.byte	16,6,239,1,9,4,17
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,17
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,13
	.byte	'TryToGetSpinlockType',0,6,239,1,74
	.word	8920
	.byte	16,6,174,2,9,4,17
	.byte	'APPLICATION_ACCESSIBLE',0,0,17
	.byte	'APPLICATION_RESTARTING',0,1,17
	.byte	'APPLICATION_TERMINATED',0,2,0,13
	.byte	'ApplicationStateType',0,6,174,2,92
	.word	9013
	.byte	18
	.byte	'void',0,10
	.word	9125
	.byte	19,1,1,20
	.word	145
	.byte	20
	.word	9131
	.byte	0,10
	.word	9136
	.byte	13
	.byte	'Os_FunctionEntryType',0,6,183,2,16
	.word	9150
	.byte	3
	.byte	'Os_MeterInfoType_s',0,6,193,2,16,48,6
	.byte	'elapsed',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'previous',0
	.word	184
	.byte	4,2,35,4,6
	.byte	'max',0
	.word	184
	.byte	4,2,35,8,6
	.byte	'cumulative',0
	.word	184
	.byte	4,2,35,12,6
	.byte	'stackbase',0
	.word	8457
	.byte	8,2,35,16,6
	.byte	'stackusage',0
	.word	8457
	.byte	8,2,35,24,6
	.byte	'stackmax',0
	.word	8457
	.byte	8,2,35,32,6
	.byte	'stackbudget',0
	.word	8457
	.byte	8,2,35,40,0,13
	.byte	'Os_MeterInfoType',0,6,202,2,3
	.word	9185
	.byte	10
	.word	9185
	.byte	13
	.byte	'Os_MeterInfoRefType',0,6,203,2,50
	.word	9383
	.byte	13
	.byte	'EventMaskType',0,6,206,2,15
	.word	145
	.byte	13
	.byte	'Os_imaskType',0,6,211,2,16
	.word	184
	.byte	3
	.byte	'Os_ISRDynType_s',0,6,213,2,16,48,6
	.byte	'meter',0
	.word	9185
	.byte	48,2,35,0,0,13
	.byte	'Os_ISRDynType',0,6,215,2,3
	.word	9462
	.byte	10
	.word	9462
	.byte	11
	.word	9523
	.byte	3
	.byte	'Os_ISRType_s',0,6,216,2,16,24,6
	.byte	'entry_function',0
	.word	8550
	.byte	4,2,35,0,6
	.byte	'dynamic',0
	.word	9528
	.byte	4,2,35,4,6
	.byte	'imask',0
	.word	184
	.byte	4,2,35,8,6
	.byte	'stackbudget',0
	.word	8457
	.byte	8,2,35,12,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,20,6
	.byte	'application',0
	.word	145
	.byte	1,2,35,21,0,13
	.byte	'Os_ISRType',0,6,223,2,3
	.word	9533
	.byte	10
	.word	8542
	.byte	11
	.word	9533
	.byte	10
	.word	9692
	.byte	13
	.byte	'ISRType',0,6,224,2,46
	.word	9697
	.byte	13
	.byte	'Os_bitmask',0,6,239,2,22
	.word	184
	.byte	13
	.byte	'Os_pset0Type',0,6,240,2,20
	.word	184
	.byte	13
	.byte	'Os_pset1Type',0,6,241,2,20
	.word	184
	.byte	13
	.byte	'Os_pset2Type',0,6,242,2,20
	.word	184
	.byte	5,6,243,2,9,4,6
	.byte	'p0',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'p1',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'p2',0
	.word	184
	.byte	4,2,35,0,0,13
	.byte	'Os_psetType',0,6,247,2,3
	.word	9805
	.byte	5,6,249,2,9,4,6
	.byte	't0',0
	.word	184
	.byte	4,2,35,0,6
	.byte	't1',0
	.word	184
	.byte	4,2,35,0,6
	.byte	't2',0
	.word	184
	.byte	4,2,35,0,0,13
	.byte	'Os_tpmaskType',0,6,253,2,3
	.word	9869
	.byte	13
	.byte	'Os_ActivationCountType',0,6,254,2,23
	.word	145
	.byte	3
	.byte	'Os_TaskDynType_s',0,6,128,3,16,120,6
	.byte	'terminate_jump_buf',0
	.word	8406
	.byte	68,2,35,0,6
	.byte	'meter',0
	.word	9185
	.byte	48,2,35,68,6
	.byte	'activation_count',0
	.word	145
	.byte	1,2,35,116,0,13
	.byte	'Os_TaskDynType',0,6,132,3,3
	.word	9967
	.byte	7,68
	.word	8375
	.byte	8,0,0,10
	.word	9967
	.byte	11
	.word	10093
	.byte	3
	.byte	'Os_TaskType_s',0,6,134,3,16,40,6
	.byte	'dynamic',0
	.word	10098
	.byte	4,2,35,0,6
	.byte	'entry_function',0
	.word	8550
	.byte	4,2,35,4,6
	.byte	'pset',0
	.word	9805
	.byte	4,2,35,8,6
	.byte	'base_tpmask',0
	.word	9869
	.byte	4,2,35,12,6
	.byte	'tpmask',0
	.word	9869
	.byte	4,2,35,16,6
	.byte	'core_id',0
	.word	162
	.byte	2,2,35,20,6
	.byte	'index',0
	.word	184
	.byte	4,2,35,24,6
	.byte	'stackbudget',0
	.word	8457
	.byte	8,2,35,28,6
	.byte	'activation_count',0
	.word	145
	.byte	1,2,35,36,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,37,6
	.byte	'application',0
	.word	145
	.byte	1,2,35,38,0,13
	.byte	'Os_TaskType',0,6,146,3,3
	.word	10103
	.byte	11
	.word	10103
	.byte	10
	.word	10353
	.byte	13
	.byte	'TaskType',0,6,147,3,47
	.word	10358
	.byte	21
	.byte	'Os_TaskStateType',0,6,155,3,6,4,17
	.byte	'SUSPENDED',0,0,17
	.byte	'READY',0,1,17
	.byte	'WAITING',0,2,17
	.byte	'RUNNING',0,3,0,13
	.byte	'TaskStateType',0,6,156,3,31
	.word	10381
	.byte	5,6,167,3,3,4,6
	.byte	'tpmask',0
	.word	9869
	.byte	4,2,35,0,0,3
	.byte	'Os_ResourceDynType_s',0,6,166,3,16,4,6
	.byte	'saved_priority',0
	.word	10468
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType',0,6,170,3,3
	.word	10491
	.byte	10
	.word	10491
	.byte	11
	.word	10571
	.byte	3
	.byte	'Os_ResourceType_s',0,6,171,3,16,12,6
	.byte	'dynamic',0
	.word	10576
	.byte	4,2,35,0,6
	.byte	'tpmask',0
	.word	9869
	.byte	4,2,35,4,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,8,0,13
	.byte	'Os_ResourceType',0,6,175,3,3
	.word	10581
	.byte	14,6,181,3,9,12,6
	.byte	'maxallowedvalue',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'ticksperbase',0
	.word	184
	.byte	4,2,35,4,6
	.byte	'mincycle',0
	.word	184
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,6,185,3,3
	.word	10680
	.byte	14,6,206,3,9,8,6
	.byte	'Running',0
	.word	145
	.byte	1,2,35,0,6
	.byte	'Pending',0
	.word	145
	.byte	1,2,35,1,6
	.byte	'Delay',0
	.word	184
	.byte	4,2,35,4,0,13
	.byte	'Os_CounterStatusType',0,6,210,3,3
	.word	10775
	.byte	22
	.word	145
	.byte	1,1,10
	.word	10861
	.byte	13
	.byte	'Os_CounterIncrAdvType',0,6,217,3,22
	.word	10868
	.byte	3
	.byte	's_swd',0,6,222,3,12,4,6
	.byte	'count',0
	.word	184
	.byte	4,2,35,0,0,5,6,221,3,3,4,6
	.byte	'sw',0
	.word	10904
	.byte	4,2,35,0,0,3
	.byte	'Os_CounterDynType_s',0,6,220,3,16,4,6
	.byte	'type_dependent',0
	.word	10932
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType',0,6,226,3,3
	.word	10951
	.byte	10
	.word	10951
	.byte	11
	.word	11029
	.byte	3
	.byte	'Os_CounterType_s',0,6,227,3,16,28,6
	.byte	'dynamic',0
	.word	11034
	.byte	4,2,35,0,6
	.byte	'advincr',0
	.word	10873
	.byte	4,2,35,4,6
	.byte	'base',0
	.word	10680
	.byte	12,2,35,8,6
	.byte	'core',0
	.word	9131
	.byte	4,2,35,20,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,24,6
	.byte	'application',0
	.word	145
	.byte	1,2,35,25,0,13
	.byte	'Os_CounterType',0,6,234,3,3
	.word	11039
	.byte	10
	.word	10861
	.byte	11
	.word	11039
	.byte	10
	.word	11191
	.byte	13
	.byte	'CounterType',0,6,235,3,52
	.word	11196
	.byte	21
	.byte	'Os_ScheduleTableStatusType',0,6,240,3,6,4,17
	.byte	'SCHEDULETABLE_STOPPED',0,0,17
	.byte	'SCHEDULETABLE_NEXT',0,1,17
	.byte	'SCHEDULETABLE_WAITING',0,2,17
	.byte	'SCHEDULETABLE_RUNNING',0,3,17
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,6,241,3,41
	.word	11222
	.byte	11
	.word	.L164-.L29
	.byte	10
	.word	11422
	.byte	13
	.byte	'ScheduleTableType',0,6,128,4,58
	.word	11427
	.byte	3
	.byte	'Os_ScheduleTableDynType_s',0,6,130,4,16,16,6
	.byte	'match',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'next',0
	.word	11432
	.byte	4,2,35,4,6
	.byte	'state',0
	.word	11222
	.byte	4,2,35,8,6
	.byte	'config',0
	.word	162
	.byte	2,2,35,12,0,10
	.word	11459
	.byte	11
	.word	11552
.L164:
	.byte	3
	.byte	'Os_ScheduleTableType_s',0,6,247,3,16,16,6
	.byte	'dynamic',0
	.word	11557
	.byte	4,2,35,0,6
	.byte	'counter',0
	.word	11201
	.byte	4,2,35,4,6
	.byte	'repeat',0
	.word	145
	.byte	1,2,35,8,6
	.byte	'config',0
	.word	162
	.byte	2,2,35,10,6
	.byte	'initial',0
	.word	145
	.byte	1,2,35,12,6
	.byte	'access',0
	.word	145
	.byte	1,2,35,13,6
	.byte	'application',0
	.word	145
	.byte	1,2,35,14,0,13
	.byte	'Os_ScheduleTableType',0,6,255,3,3
	.word	11562
	.byte	11
	.word	11562
	.byte	10
	.word	11742
	.byte	11
	.word	11039
	.byte	10
	.word	11752
	.byte	9
	.word	8855
	.byte	9
	.word	9805
	.byte	9
	.word	9702
	.byte	9
	.word	10363
	.byte	9
	.word	9869
	.byte	9
	.word	145
	.byte	9
	.word	10363
	.byte	3
	.byte	'Os_ControlledCoreType_s',0,6,251,6,16,112,6
	.byte	'TrapInfo',0
	.word	8286
	.byte	8,2,35,0,6
	.byte	'lock_taskaccess',0
	.word	11762
	.byte	4,2,35,8,6
	.byte	'ReadyTasks',0
	.word	11767
	.byte	4,2,35,12,6
	.byte	'RunningISR',0
	.word	11772
	.byte	4,2,35,16,6
	.byte	'RunningTask',0
	.word	11777
	.byte	4,2,35,20,6
	.byte	'RunningTPMask',0
	.word	11782
	.byte	4,2,35,24,6
	.byte	'CurrentMeteredObject',0
	.word	9388
	.byte	4,2,35,28,6
	.byte	'IdleMeter',0
	.word	9185
	.byte	48,2,35,32,6
	.byte	'AppAccess',0
	.word	145
	.byte	1,2,35,80,6
	.byte	'AppOverride',0
	.word	11787
	.byte	1,2,35,81,6
	.byte	'GetStackValueAdjust',0
	.word	8457
	.byte	8,2,35,84,6
	.byte	'InErrorHook',0
	.word	145
	.byte	1,2,35,92,6
	.byte	'ChainTaskRef',0
	.word	11792
	.byte	4,2,35,96,6
	.byte	'GetStackUsageAdjust',0
	.word	8457
	.byte	8,2,35,100,6
	.byte	'InProtectionHook',0
	.word	145
	.byte	1,2,35,108,6
	.byte	'CoreIsActive',0
	.word	145
	.byte	1,2,35,109,6
	.byte	'InShutdownHook',0
	.word	145
	.byte	1,2,35,110,0,13
	.byte	'Os_ControlledCoreType',0,6,141,7,3
	.word	11797
	.byte	10
	.word	184
	.byte	11
	.word	9533
	.byte	10
	.word	12253
	.byte	11
	.word	10103
	.byte	10
	.word	12263
	.byte	10
	.word	9185
	.byte	3
	.byte	'Os_AnyCoreType_s',0,6,151,7,16,96,6
	.byte	'DisableAllImask',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'SuspendAllImask',0
	.word	184
	.byte	4,2,35,4,6
	.byte	'SuspendOSImask',0
	.word	184
	.byte	4,2,35,8,6
	.byte	'DisableAllCount',0
	.word	184
	.byte	4,2,35,12,6
	.byte	'SuspendAllCount',0
	.word	184
	.byte	4,2,35,16,6
	.byte	'SuspendOSCount',0
	.word	184
	.byte	4,2,35,20,6
	.byte	'RestartJumpBuf',0
	.word	8406
	.byte	68,2,35,24,6
	.byte	'Restartable',0
	.word	145
	.byte	1,2,35,92,0,13
	.byte	'Os_AnyCoreType',0,6,160,7,3
	.word	12278
	.byte	13
	.byte	'Ifx_P_ACCEN0_Bits',0,1,79,3
	.word	6769
	.byte	13
	.byte	'Ifx_P_ACCEN1_Bits',0,1,85,3
	.word	6682
	.byte	13
	.byte	'Ifx_P_ESR_Bits',0,1,107,3
	.word	3041
	.byte	13
	.byte	'Ifx_P_ID_Bits',0,1,115,3
	.word	1094
	.byte	13
	.byte	'Ifx_P_IN_Bits',0,1,137,1,3
	.word	2089
	.byte	13
	.byte	'Ifx_P_IOCR0_Bits',0,1,150,1,3
	.word	1222
	.byte	13
	.byte	'Ifx_P_IOCR12_Bits',0,1,163,1,3
	.word	1869
	.byte	13
	.byte	'Ifx_P_IOCR4_Bits',0,1,176,1,3
	.word	1437
	.byte	13
	.byte	'Ifx_P_IOCR8_Bits',0,1,189,1,3
	.word	1652
	.byte	13
	.byte	'Ifx_P_LPCR0_Bits',0,1,197,1,3
	.word	6041
	.byte	13
	.byte	'Ifx_P_LPCR1_Bits',0,1,205,1,3
	.word	6165
	.byte	13
	.byte	'Ifx_P_LPCR1_P21_Bits',0,1,215,1,3
	.word	6249
	.byte	13
	.byte	'Ifx_P_LPCR2_Bits',0,1,229,1,3
	.word	6429
	.byte	13
	.byte	'Ifx_P_OMCR0_Bits',0,1,240,1,3
	.word	4680
	.byte	13
	.byte	'Ifx_P_OMCR12_Bits',0,1,250,1,3
	.word	5204
	.byte	13
	.byte	'Ifx_P_OMCR4_Bits',0,1,133,2,3
	.word	4854
	.byte	13
	.byte	'Ifx_P_OMCR8_Bits',0,1,144,2,3
	.word	5028
	.byte	13
	.byte	'Ifx_P_OMCR_Bits',0,1,166,2,3
	.word	5693
	.byte	13
	.byte	'Ifx_P_OMR_Bits',0,1,203,2,3
	.word	523
	.byte	13
	.byte	'Ifx_P_OMSR0_Bits',0,1,213,2,3
	.word	4017
	.byte	13
	.byte	'Ifx_P_OMSR12_Bits',0,1,224,2,3
	.word	4505
	.byte	13
	.byte	'Ifx_P_OMSR4_Bits',0,1,235,2,3
	.word	4164
	.byte	13
	.byte	'Ifx_P_OMSR8_Bits',0,1,246,2,3
	.word	4333
	.byte	13
	.byte	'Ifx_P_OMSR_Bits',0,1,140,3,3
	.word	5360
	.byte	13
	.byte	'Ifx_P_OUT_Bits',0,1,162,3,3
	.word	207
	.byte	13
	.byte	'Ifx_P_PCSR_Bits',0,1,179,3,3
	.word	3747
	.byte	13
	.byte	'Ifx_P_PDISC_Bits',0,1,201,3,3
	.word	3381
	.byte	13
	.byte	'Ifx_P_PDR0_Bits',0,1,222,3,3
	.word	2412
	.byte	13
	.byte	'Ifx_P_PDR1_Bits',0,1,243,3,3
	.word	2716
	.byte	13
	.byte	'Ifx_P_ACCEN0',0,1,128,4,3
	.word	7296
	.byte	13
	.byte	'Ifx_P_ACCEN1',0,1,136,4,3
	.word	6729
	.byte	13
	.byte	'Ifx_P_ESR',0,1,144,4,3
	.word	3332
	.byte	13
	.byte	'Ifx_P_ID',0,1,152,4,3
	.word	1173
	.byte	13
	.byte	'Ifx_P_IN',0,1,160,4,3
	.word	2363
	.byte	13
	.byte	'Ifx_P_IOCR0',0,1,168,4,3
	.word	1397
	.byte	13
	.byte	'Ifx_P_IOCR12',0,1,176,4,3
	.word	2049
	.byte	13
	.byte	'Ifx_P_IOCR4',0,1,184,4,3
	.word	1612
	.byte	13
	.byte	'Ifx_P_IOCR8',0,1,192,4,3
	.word	1829
	.byte	13
	.byte	'Ifx_P_LPCR0',0,1,200,4,3
	.word	6125
	.byte	13
	.byte	'Ifx_P_LPCR1',0,1,209,4,3
	.word	6374
	.byte	13
	.byte	'Ifx_P_LPCR2',0,1,217,4,3
	.word	6633
	.byte	13
	.byte	'Ifx_P_OMCR',0,1,225,4,3
	.word	6001
	.byte	13
	.byte	'Ifx_P_OMCR0',0,1,233,4,3
	.word	4814
	.byte	13
	.byte	'Ifx_P_OMCR12',0,1,241,4,3
	.word	5320
	.byte	13
	.byte	'Ifx_P_OMCR4',0,1,249,4,3
	.word	4988
	.byte	13
	.byte	'Ifx_P_OMCR8',0,1,129,5,3
	.word	5164
	.byte	13
	.byte	'Ifx_P_OMR',0,1,137,5,3
	.word	1054
	.byte	13
	.byte	'Ifx_P_OMSR',0,1,145,5,3
	.word	5653
	.byte	13
	.byte	'Ifx_P_OMSR0',0,1,153,5,3
	.word	4124
	.byte	13
	.byte	'Ifx_P_OMSR12',0,1,161,5,3
	.word	4640
	.byte	13
	.byte	'Ifx_P_OMSR4',0,1,169,5,3
	.word	4293
	.byte	13
	.byte	'Ifx_P_OMSR8',0,1,177,5,3
	.word	4465
	.byte	13
	.byte	'Ifx_P_OUT',0,1,185,5,3
	.word	483
	.byte	13
	.byte	'Ifx_P_PCSR',0,1,193,5,3
	.word	3977
	.byte	13
	.byte	'Ifx_P_PDISC',0,1,201,5,3
	.word	3707
	.byte	13
	.byte	'Ifx_P_PDR0',0,1,209,5,3
	.word	2676
	.byte	13
	.byte	'Ifx_P_PDR1',0,1,217,5,3
	.word	2992
	.byte	9
	.word	7336
	.byte	13
	.byte	'Ifx_P',0,1,138,6,3
	.word	13837
	.byte	13
	.byte	'Dio_LevelType',0,2,237,1,17
	.word	145
	.byte	13
	.byte	'Dio_ChannelType',0,2,243,1,17
	.word	162
	.byte	13
	.byte	'Dio_PortType',0,2,249,1,17
	.word	145
	.byte	13
	.byte	'Dio_PortLevelType',0,2,252,1,17
	.word	162
	.byte	13
	.byte	'Dio_ChannelGroupType',0,2,137,2,3
	.word	7949
	.byte	3
	.byte	'Dio_PortChannelIdType',0,2,139,2,16,8,6
	.byte	'Dio_PortIdConfig',0
	.word	184
	.byte	4,2,35,0,6
	.byte	'Dio_ChannelConfig',0
	.word	184
	.byte	4,2,35,4,0,13
	.byte	'Dio_PortChannelIdType',0,2,145,2,2
	.word	13984
	.byte	7,84
	.word	162
	.byte	8,41,0
.L123:
	.byte	11
	.word	14097
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,19,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,4,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,5,23,1,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73
	.byte	19,11,15,56,9,0,0,7,1,1,11,15,73,19,0,0,8,33,0,47,15,0,0,9,53,0,73,19,0,0,10,15,0,73,19,0,0,11,38,0,73
	.byte	19,0,0,12,21,0,54,15,0,0,13,22,0,3,8,58,15,59,15,57,15,73,19,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15
	.byte	21,0,54,15,39,12,0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17,40,0,3,8,28,13,0,0,18,59,0,3,8,0,0,19,21,1
	.byte	54,15,39,12,0,0,20,5,0,73,19,0,0,21,4,1,3,8,58,15,59,15,57,15,11,15,0,0,22,21,0,73,19,54,15,39,12,0,0
	.byte	0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L31:
	.word	.L166-.L165
.L165:
	.half	3
	.word	.L168-.L167
.L167:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\reg\\IfxPort_regdef.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\inc\\Dio.h',0,0,0,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0,0
.L168:
.L166:
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_info'
.L32:
	.word	301
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L35,.L34
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadChannel',0,1,129,7,15
	.word	.L79
	.byte	1,1,1
	.word	.L15,.L80,.L14
	.byte	4
	.byte	'ChannelId',0,1,129,7,47
	.word	.L81,.L82
	.byte	5
	.word	.L15,.L80
	.byte	6
	.byte	'PinPosition',0,1,131,7,17
	.word	.L83,.L84
	.byte	6
	.byte	'RetVal',0,1,132,7,17
	.word	.L79,.L85
	.byte	6
	.byte	'GetPortAddressPtr',0,1,133,7,10
	.word	.L86,.L87
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_line'
.L34:
	.word	.L170-.L169
.L169:
	.half	3
	.word	.L172-.L171
.L171:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L172:
	.byte	5,15,7,0,5,2
	.word	.L15
	.byte	3,128,7,1,5,10,9
	.half	.L134-.L15
	.byte	3,7,1,5,60,9
	.half	.L136-.L134
	.byte	3,11,1,5,59,9
	.half	.L133-.L136
	.byte	1,5,23,9
	.half	.L137-.L133
	.byte	1,5,28,9
	.half	.L139-.L137
	.byte	3,3,1,5,55,9
	.half	.L173-.L139
	.byte	1,5,34,9
	.half	.L138-.L173
	.byte	1,5,26,9
	.half	.L141-.L138
	.byte	3,3,1,5,23,9
	.half	.L135-.L141
	.byte	1,5,14,9
	.half	.L142-.L135
	.byte	3,3,1,5,3,9
	.half	.L3-.L142
	.byte	3,3,1,5,1,9
	.half	.L4-.L3
	.byte	3,1,1,7,9
	.half	.L36-.L4
	.byte	0,1,1
.L170:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_ranges'
.L35:
	.word	-1,.L15,0,.L36-.L15,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_info'
.L37:
	.word	292
	.half	3
	.word	.L38
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L40,.L39
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WriteChannel',0,1,198,7,6,1,1,1
	.word	.L17,.L88,.L16
	.byte	4
	.byte	'ChannelId',0,1,198,7,39
	.word	.L81,.L89
	.byte	4
	.byte	'Level',0,1,198,7,64
	.word	.L79,.L90
	.byte	5
	.word	.L17,.L88
	.byte	6
	.byte	'GetPortAddressPtr',0,1,205,7,19
	.word	.L86,.L91
	.byte	6
	.byte	'OmrVal',0,1,206,7,10
	.word	.L83,.L92
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_abbrev'
.L38:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_line'
.L39:
	.word	.L175-.L174
.L174:
	.half	3
	.word	.L177-.L176
.L176:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L177:
	.byte	5,6,7,0,5,2
	.word	.L17
	.byte	3,197,7,1,5,12,9
	.half	.L145-.L17
	.byte	3,10,1,5,16,9
	.half	.L146-.L145
	.byte	3,16,1,5,62,9
	.half	.L5-.L146
	.byte	3,3,1,5,61,9
	.half	.L144-.L5
	.byte	1,5,25,9
	.half	.L148-.L144
	.byte	1,5,7,9
	.half	.L150-.L148
	.byte	3,3,1,5,1,9
	.half	.L178-.L150
	.byte	3,14,1,7,9
	.half	.L41-.L178
	.byte	0,1,1
.L175:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_ranges'
.L40:
	.word	-1,.L17,0,.L41-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadPort')
	.sect	'.debug_info'
.L42:
	.word	270
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L45,.L44
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadPort',0,1,145,8,19
	.word	.L81
	.byte	1,1,1
	.word	.L19,.L93,.L18
	.byte	4
	.byte	'PortId',0,1,145,8,45
	.word	.L79,.L94
	.byte	5
	.word	.L19,.L93
	.byte	6
	.byte	'GetPortAddressPtr',0,1,147,8,22
	.word	.L86,.L95
	.byte	6
	.byte	'RetVal',0,1,148,8,22
	.word	.L81,.L96
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadPort')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadPort')
	.sect	'.debug_line'
.L44:
	.word	.L180-.L179
.L179:
	.half	3
	.word	.L182-.L181
.L181:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L182:
	.byte	5,19,7,0,5,2
	.word	.L19
	.byte	3,144,8,1,5,43,9
	.half	.L153-.L19
	.byte	3,21,1,5,36,9
	.half	.L152-.L153
	.byte	3,1,1,5,17,9
	.half	.L183-.L152
	.byte	1,5,43,9
	.half	.L184-.L183
	.byte	3,1,1,5,69,9
	.half	.L185-.L184
	.byte	1,5,41,9
	.half	.L154-.L185
	.byte	1,5,3,9
	.half	.L186-.L154
	.byte	3,2,1,5,1,9
	.half	.L6-.L186
	.byte	3,1,1,7,9
	.half	.L46-.L6
	.byte	0,1,1
.L180:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadPort')
	.sect	'.debug_ranges'
.L45:
	.word	-1,.L19,0,.L46-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WritePort')
	.sect	'.debug_info'
.L47:
	.word	292
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L50,.L49
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WritePort',0,1,202,8,6,1,1,1
	.word	.L21,.L97,.L20
	.byte	4
	.byte	'PortId',0,1,202,8,34
	.word	.L79,.L98
	.byte	4
	.byte	'Level',0,1,202,8,60
	.word	.L81,.L99
	.byte	5
	.word	.L21,.L97
	.byte	6
	.byte	'GetPortAddressPtr',0,1,209,8,19
	.word	.L86,.L100
	.byte	6
	.byte	'LocalRegData',0,1,210,8,10
	.word	.L83,.L101
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WritePort')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WritePort')
	.sect	'.debug_line'
.L49:
	.word	.L188-.L187
.L187:
	.half	3
	.word	.L190-.L189
.L189:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L190:
	.byte	5,6,7,0,5,2
	.word	.L21
	.byte	3,201,8,1,5,43,9
	.half	.L156-.L21
	.byte	3,26,1,5,7,9
	.half	.L155-.L156
	.byte	3,2,1,5,1,9
	.half	.L191-.L155
	.byte	3,15,1,7,9
	.half	.L51-.L191
	.byte	0,1,1
.L188:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WritePort')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L21,0,.L51-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_info'
.L52:
	.word	289
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_ReadChannelGroup',0,1,246,5,19
	.word	.L81
	.byte	1,1,1
	.word	.L11,.L102,.L10
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,248,5,31
	.word	.L103,.L104
	.byte	5
	.word	.L11,.L102
	.byte	6
	.byte	'GetPortAddressPtr',0,1,251,5,22
	.word	.L86,.L105
	.byte	6
	.byte	'RetVal',0,1,252,5,22
	.word	.L81,.L106
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_line'
.L54:
	.word	.L193-.L192
.L192:
	.half	3
	.word	.L195-.L194
.L194:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L195:
	.byte	5,19,7,0,5,2
	.word	.L11
	.byte	3,245,5,1,5,59,9
	.half	.L125-.L11
	.byte	3,22,1,5,35,9
	.half	.L124-.L125
	.byte	3,1,1,5,72,9
	.half	.L196-.L124
	.byte	3,1,1,5,45,9
	.half	.L126-.L196
	.byte	1,5,43,9
	.half	.L197-.L126
	.byte	3,3,1,5,23,9
	.half	.L198-.L197
	.byte	1,5,3,9
	.half	.L127-.L198
	.byte	3,2,1,5,1,9
	.half	.L2-.L127
	.byte	3,1,1,7,9
	.half	.L56-.L2
	.byte	0,1,1
.L193:
	.sdecl	'.debug_ranges',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L11,0,.L56-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_info'
.L57:
	.word	332
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_WriteChannelGroup',0,1,184,6,6,1,1,1
	.word	.L13,.L107,.L12
	.byte	4
	.byte	'ChannelGroupIdPtr',0,1,186,6,31
	.word	.L103,.L108
	.byte	4
	.byte	'Level',0,1,187,6,21
	.word	.L81,.L109
	.byte	5
	.word	.L13,.L107
	.byte	6
	.byte	'GetPortAddressPtr',0,1,195,6,19
	.word	.L86,.L110
	.byte	6
	.byte	'PortVal',0,1,196,6,19
	.word	.L83,.L111
	.byte	6
	.byte	'PortResetVal',0,1,197,6,19
	.word	.L83,.L112
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_line'
.L59:
	.word	.L200-.L199
.L199:
	.half	3
	.word	.L202-.L201
.L201:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L202:
	.byte	5,65,7,0,5,2
	.word	.L13
	.byte	3,208,6,1,5,59,9
	.half	.L203-.L13
	.byte	3,127,1,5,39,9
	.half	.L204-.L203
	.byte	1,5,69,9
	.half	.L129-.L204
	.byte	1,5,22,9
	.half	.L205-.L129
	.byte	3,4,1,5,32,9
	.half	.L131-.L205
	.byte	1,5,40,9
	.half	.L206-.L131
	.byte	3,2,1,5,24,9
	.half	.L132-.L206
	.byte	1,5,58,9
	.half	.L130-.L132
	.byte	3,4,1,5,5,9
	.half	.L128-.L130
	.byte	3,5,1,5,1,9
	.half	.L207-.L128
	.byte	3,2,1,7,9
	.half	.L61-.L207
	.byte	0,1,1
.L200:
	.sdecl	'.debug_ranges',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L13,0,.L61-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_info'
.L62:
	.word	248
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPortNumber',0,1,253,10,14
	.word	.L79
	.byte	1,1,1
	.word	.L23,.L113,.L22
	.byte	4
	.byte	'ChannelId',0,1,253,10,49
	.word	.L81,.L114
	.byte	5
	.word	.L23,.L113
	.byte	6
	.byte	'RetVal',0,1,255,10,16
	.word	.L79,.L115
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_line'
.L64:
	.word	.L209-.L208
.L208:
	.half	3
	.word	.L211-.L210
.L210:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L211:
	.byte	5,20,7,0,5,2
	.word	.L23
	.byte	3,129,11,1,5,38,9
	.half	.L212-.L23
	.byte	3,127,1,5,46,9
	.half	.L157-.L212
	.byte	3,1,1,5,3,9
	.half	.L158-.L157
	.byte	3,2,1,5,1,9
	.half	.L7-.L158
	.byte	3,1,1,7,9
	.half	.L66-.L7
	.byte	0,1,1
.L209:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L23,0,.L66-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_info'
.L67:
	.word	268
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPortAdr',0,1,157,11,8
	.word	.L86
	.byte	1,1,1
	.word	.L25,.L116,.L24
	.byte	4
	.byte	'PortNumber',0,1,157,11,37
	.word	.L79,.L117
	.byte	5
	.word	.L25,.L116
	.byte	6
	.byte	'RetVal',0,1,159,11,10
	.word	.L86,.L118
	.byte	6
	.byte	'Quotient',0,1,160,11,10
	.word	.L79,.L119
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_line'
.L69:
	.word	.L214-.L213
.L213:
	.half	3
	.word	.L216-.L215
.L215:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L216:
	.byte	5,41,7,0,5,2
	.word	.L25
	.byte	3,208,11,1,5,76,9
	.half	.L217-.L25
	.byte	1,5,14,9
	.half	.L160-.L217
	.byte	3,5,1,5,31,9
	.half	.L218-.L160
	.byte	3,1,1,5,15,9
	.half	.L219-.L218
	.byte	1,5,31,9
	.half	.L220-.L219
	.byte	3,1,1,5,68,9
	.half	.L221-.L220
	.byte	1,5,50,9
	.half	.L161-.L221
	.byte	1,5,63,9
	.half	.L222-.L161
	.byte	3,127,1,5,49,9
	.half	.L159-.L222
	.byte	1,5,41,9
	.half	.L223-.L159
	.byte	3,127,1,5,3,9
	.half	.L162-.L223
	.byte	3,5,1,5,1,9
	.half	.L8-.L162
	.byte	3,1,1,7,9
	.half	.L71-.L8
	.byte	0,1,1
.L214:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L25,0,.L71-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_info'
.L72:
	.word	247
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Dio_lGetPinNumber',0,1,244,11,7
	.word	.L79
	.byte	1,1,1
	.word	.L27,.L120,.L26
	.byte	4
	.byte	'ChannelId',0,1,244,11,41
	.word	.L81,.L121
	.byte	5
	.word	.L27,.L120
	.byte	6
	.byte	'RetVal',0,1,246,11,9
	.word	.L79,.L122
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_line'
.L74:
	.word	.L225-.L224
.L224:
	.half	3
	.word	.L227-.L226
.L226:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0,0,0,0,0
.L227:
	.byte	5,20,7,0,5,2
	.word	.L27
	.byte	3,247,11,1,5,30,9
	.half	.L228-.L27
	.byte	1,5,3,9
	.half	.L163-.L228
	.byte	3,1,1,5,1,9
	.half	.L9-.L163
	.byte	3,1,1,7,9
	.half	.L76-.L9
	.byte	0,1,1
.L225:
	.sdecl	'.debug_ranges',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L27,0,.L76-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.debug_info'
.L77:
	.word	185
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'Targets\\TC275\\MCAL\\MCAL_Modules\\Dio\\src\\Dio.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Dio_kMaskUndefinedPortPins',0,3,252,1,32
	.word	.L123
	.byte	5,3
	.word	Dio_kMaskUndefinedPortPins
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dio_kMaskUndefinedPortPins')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_loc'
.L82:
	.word	-1,.L15,0,.L133-.L15
	.half	1
	.byte	84
	.word	.L134-.L15,.L135-.L15
	.half	1
	.byte	95
	.word	.L140-.L15,.L138-.L15
	.half	1
	.byte	84
	.word	0,0
.L14:
	.word	-1,.L15,0,.L80-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L87:
	.word	-1,.L15,.L137-.L15,.L138-.L15
	.half	1
	.byte	98
	.word	.L139-.L15,.L80-.L15
	.half	1
	.byte	111
	.word	0,0
.L84:
	.word	-1,.L15,.L141-.L15,.L142-.L15
	.half	1
	.byte	88
	.word	0,0
.L85:
	.word	-1,.L15,.L136-.L15,.L80-.L15
	.half	1
	.byte	89
	.word	.L143-.L15,.L80-.L15
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_loc'
.L104:
	.word	-1,.L11,0,.L124-.L11
	.half	1
	.byte	100
	.word	.L125-.L11,.L102-.L11
	.half	1
	.byte	111
	.word	0,0
.L10:
	.word	-1,.L11,0,.L102-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L105:
	.word	-1,.L11,.L124-.L11,.L102-.L11
	.half	1
	.byte	98
	.word	0,0
.L106:
	.word	-1,.L11,.L126-.L11,.L127-.L11
	.half	5
	.byte	144,32,157,32,0
	.word	.L127-.L11,.L102-.L11
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_ReadPort')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L93-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L95:
	.word	-1,.L19,.L152-.L19,.L93-.L19
	.half	1
	.byte	98
	.word	0,0
.L94:
	.word	-1,.L19,0,.L152-.L19
	.half	1
	.byte	84
	.word	.L153-.L19,.L93-.L19
	.half	1
	.byte	88
	.word	0,0
.L96:
	.word	-1,.L19,.L154-.L19,.L93-.L19
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_loc'
.L89:
	.word	-1,.L17,0,.L144-.L17
	.half	1
	.byte	84
	.word	.L145-.L17,.L88-.L17
	.half	1
	.byte	88
	.word	.L151-.L17,.L149-.L17
	.half	1
	.byte	84
	.word	0,0
.L16:
	.word	-1,.L17,0,.L88-.L17
	.half	2
	.byte	138,0
	.word	0,0
.L91:
	.word	-1,.L17,.L148-.L17,.L149-.L17
	.half	1
	.byte	98
	.word	.L150-.L17,.L88-.L17
	.half	1
	.byte	111
	.word	0,0
.L90:
	.word	-1,.L17,0,.L144-.L17
	.half	1
	.byte	85
	.word	0,0
.L92:
	.word	-1,.L17,.L146-.L17,.L147-.L17
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L13,0,.L128-.L13
	.half	1
	.byte	100
	.word	0,0
.L12:
	.word	-1,.L13,0,.L107-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L110:
	.word	-1,.L13,.L128-.L13,.L107-.L13
	.half	1
	.byte	98
	.word	0,0
.L109:
	.word	-1,.L13,0,.L129-.L13
	.half	1
	.byte	84
	.word	0,0
.L112:
	.word	-1,.L13,.L131-.L13,.L128-.L13
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L111:
	.word	-1,.L13,.L129-.L13,.L130-.L13
	.half	1
	.byte	84
	.word	.L132-.L13,.L107-.L13
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_WritePort')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L97-.L21
	.half	2
	.byte	138,0
	.word	0,0
.L100:
	.word	-1,.L21,.L155-.L21,.L97-.L21
	.half	1
	.byte	98
	.word	0,0
.L99:
	.word	-1,.L21,0,.L155-.L21
	.half	1
	.byte	85
	.word	.L156-.L21,.L97-.L21
	.half	1
	.byte	95
	.word	0,0
.L101:
	.word	0,0
.L98:
	.word	-1,.L21,0,.L155-.L21
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_loc'
.L121:
	.word	-1,.L27,0,.L120-.L27
	.half	1
	.byte	84
	.word	0,0
.L26:
	.word	-1,.L27,0,.L120-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L122:
	.word	-1,.L27,.L163-.L27,.L120-.L27
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L116-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L117:
	.word	-1,.L25,0,.L159-.L25
	.half	1
	.byte	84
	.word	0,0
.L119:
	.word	-1,.L25,.L160-.L25,.L161-.L25
	.half	1
	.byte	95
	.word	0,0
.L118:
	.word	-1,.L25,.L162-.L25,.L116-.L25
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L23,0,.L157-.L23
	.half	1
	.byte	84
	.word	0,0
.L22:
	.word	-1,.L23,0,.L113-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L115:
	.word	-1,.L23,.L158-.L23,.L113-.L23
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L229:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L11,.L102-.L11
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannelGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L13,.L107-.L13
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L15,.L80-.L15
	.sdecl	'.debug_frame',debug,cluster('Dio_WriteChannel')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L17,.L88-.L17
	.sdecl	'.debug_frame',debug,cluster('Dio_ReadPort')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L19,.L93-.L19
	.sdecl	'.debug_frame',debug,cluster('Dio_WritePort')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L21,.L97-.L21
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L229,.L23,.L113-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPortAdr')
	.sect	'.debug_frame'
	.word	24
	.word	.L229,.L25,.L116-.L25
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dio_lGetPinNumber')
	.sect	'.debug_frame'
	.word	24
	.word	.L229,.L27,.L120-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1531  
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1532  /*Memory Map of the DIO Code*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1533  #define DIO_STOP_SEC_CODE
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1534  /*mapping of code and data to specific memory sections via memory mapping file*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1535  /*IFX_MISRA_RULE_19_01_STATUS=File inclusion after pre-processor directives
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1536    is allowed only for MemMap.h*/
; Targets\TC275\MCAL\MCAL_Modules\Dio\src\Dio.c	  1537  #include "MemMap.h"

	; Module end
