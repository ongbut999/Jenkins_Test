	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc5388a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\ASW\\ASW_NVM\\ASW_NVM.src ASW\\ASW_NVM\\src\\ASW_NVM.c"
	.compiler_name		"ctc"
	;source	'ASW\\ASW_NVM\\src\\ASW_NVM.c'

	
$TC16X
	
	.sdecl	'.text.ASW_NVM.RE_ASW_NVM_func',code,cluster('RE_ASW_NVM_func')
	.sect	'.text.ASW_NVM.RE_ASW_NVM_func'
	.align	2
	
	.global	RE_ASW_NVM_func

; ASW\ASW_NVM\src\ASW_NVM.c	     1  ///* *****************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	     2  // * BEGIN: Banner
; ASW\ASW_NVM\src\ASW_NVM.c	     3  // *-----------------------------------------------------------------------------
; ASW\ASW_NVM\src\ASW_NVM.c	     4  // *                                 ETAS GmbH
; ASW\ASW_NVM\src\ASW_NVM.c	     5  // *                      D-70469 Stuttgart, Borsigstr. 14
; ASW\ASW_NVM\src\ASW_NVM.c	     6  // *-----------------------------------------------------------------------------
; ASW\ASW_NVM\src\ASW_NVM.c	     7  // *    Administrative Information (automatically filled in by ISOLAR)
; ASW\ASW_NVM\src\ASW_NVM.c	     8  // *-----------------------------------------------------------------------------
; ASW\ASW_NVM\src\ASW_NVM.c	     9  // * Name:
; ASW\ASW_NVM\src\ASW_NVM.c	    10  // * Description:
; ASW\ASW_NVM\src\ASW_NVM.c	    11  // * Version: 1.0
; ASW\ASW_NVM\src\ASW_NVM.c	    12  // *-----------------------------------------------------------------------------
; ASW\ASW_NVM\src\ASW_NVM.c	    13  // * END: Banner
; ASW\ASW_NVM\src\ASW_NVM.c	    14  // ******************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	    15  //
; ASW\ASW_NVM\src\ASW_NVM.c	    16  // * Project : ETAS_TMS570_AR422_2p0
; ASW\ASW_NVM\src\ASW_NVM.c	    17  // * Component: /ASW_NVM/ASW_NVM/ASW_NVM
; ASW\ASW_NVM\src\ASW_NVM.c	    18  // * Runnable : All Runnables in SwComponent
; ASW\ASW_NVM\src\ASW_NVM.c	    19  // *****************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	    20  // * Tool Version: ISOLAR-AB 4.0.2
; ASW\ASW_NVM\src\ASW_NVM.c	    21  // * Author: AGT1HC
; ASW\ASW_NVM\src\ASW_NVM.c	    22  // * Date : Fri May 10 08:21:13 2019
; ASW\ASW_NVM\src\ASW_NVM.c	    23  // ****************************************************************************/
; ASW\ASW_NVM\src\ASW_NVM.c	    24  //
; ASW\ASW_NVM\src\ASW_NVM.c	    25  #include "Rte_ASW_NVM.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    26  #include "NvM.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    27  #include "ASW_NVM.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    28  #include "NVM_types.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    29  #include "Fee.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    30  #include "TimingCalculation.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    31  
; ASW\ASW_NVM\src\ASW_NVM.c	    32  
; ASW\ASW_NVM\src\ASW_NVM.c	    33  
; ASW\ASW_NVM\src\ASW_NVM.c	    34  #define ASW_NVM_START_SEC_CODE
; ASW\ASW_NVM\src\ASW_NVM.c	    35  
; ASW\ASW_NVM\src\ASW_NVM.c	    36  
; ASW\ASW_NVM\src\ASW_NVM.c	    37  
; ASW\ASW_NVM\src\ASW_NVM.c	    38  uint8 TEST_DATA_NVM_NATIVE_1024_1[SIZE_BLOCK1];
; ASW\ASW_NVM\src\ASW_NVM.c	    39  uint8 TEST_DATA_NVM_NATIVE_1024_2[SIZE_BLOCK2];
; ASW\ASW_NVM\src\ASW_NVM.c	    40  static uint32 modify_addr1 = 0x200;
; ASW\ASW_NVM\src\ASW_NVM.c	    41  static uint32 modify_addr2 = 0x300;
; ASW\ASW_NVM\src\ASW_NVM.c	    42  #define DEFAULT_START_SEC_VAR_CLEARED_8BIT_ALIGN_2
; ASW\ASW_NVM\src\ASW_NVM.c	    43  #include "MemMap.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    44  static uint8 InvalidData[1400]      = {0};
; ASW\ASW_NVM\src\ASW_NVM.c	    45  static uint8 MngData[MngData_Size]  = {0};
; ASW\ASW_NVM\src\ASW_NVM.c	    46  #define DEFAULT_STOP_SEC_VAR_CLEARED_8BIT_ALIGN_2
; ASW\ASW_NVM\src\ASW_NVM.c	    47  #include "MemMap.h"
; ASW\ASW_NVM\src\ASW_NVM.c	    48  static uint8 CorruptData = 0xCA;
; ASW\ASW_NVM\src\ASW_NVM.c	    49  static uint32 NvM_Count_PENDING = 0;
; ASW\ASW_NVM\src\ASW_NVM.c	    50  static NvM_RequestResultType NvM_ErrorStatus[2] = {0,0};
; ASW\ASW_NVM\src\ASW_NVM.c	    51  static uint32 NvM_ElapsedTime = 0;
; ASW\ASW_NVM\src\ASW_NVM.c	    52  static uint8 NvM_WriteFlag = 1;
; ASW\ASW_NVM\src\ASW_NVM.c	    53  
; ASW\ASW_NVM\src\ASW_NVM.c	    54  extern uint8 shutdown_b;
; ASW\ASW_NVM\src\ASW_NVM.c	    55  uint8 CounterWriteBlock;
; ASW\ASW_NVM\src\ASW_NVM.c	    56  NvM_Rb_StatusType status_NvM_test;
; ASW\ASW_NVM\src\ASW_NVM.c	    57  NvM_Test_t NvM_Test = SWC_ZERO;
; ASW\ASW_NVM\src\ASW_NVM.c	    58  uint8 NvM_SwcICopyDataToRam(uint8 * dest_addr, uint8 * src_addr, uint32 size);
; ASW\ASW_NVM\src\ASW_NVM.c	    59  FUNC (void, ASW_NVM_CODE) RE_ASW_NVM_func/* return value & FctID */
; Function RE_ASW_NVM_func
.L109:
RE_ASW_NVM_func:	.type	func

; ASW\ASW_NVM\src\ASW_NVM.c	    60  (
; ASW\ASW_NVM\src\ASW_NVM.c	    61  		void
; ASW\ASW_NVM\src\ASW_NVM.c	    62  )
; ASW\ASW_NVM\src\ASW_NVM.c	    63  {
; ASW\ASW_NVM\src\ASW_NVM.c	    64  	boolean retVal 		= E_NOT_OK;
; ASW\ASW_NVM\src\ASW_NVM.c	    65  
; ASW\ASW_NVM\src\ASW_NVM.c	    66  	switch (NvM_Test)
	movh.a	a12,#@his(NvM_Test)
	lea	a12,[a12]@los(NvM_Test)
	ld.w	d0,[a12]
.L219:
	mov	d15,#19
	jlt	d15,d0,.L2
	mov	d15,#1
	jlt	d0,d15,.L2
	sub	d15,d0,d15
	movh.a	a15,#@his(.1.jmp)
	lea	a15,[a15]@los(.1.jmp)
	addsc.a	a15,a15,d15,#2
	ld.a	a15,[a15]
	ji	a15
.L2:
	j	.L3
	
	.sdecl	'.rodata.ASW_NVM..1.jmp',data,rom
	.sect	'.rodata.ASW_NVM..1.jmp'
	.align	4
.1.jmp:	.type	object
	.word	.L4
	.word	.L5
	.word	.L6
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	.word	.L14
	.word	.L15
	.word	.L16
	.word	.L3
	.word	.L3
	.word	.L17
	.word	.L18
	.word	.L19
	.word	.L20
	
	.sect	'.text.ASW_NVM.RE_ASW_NVM_func'

; ASW\ASW_NVM\src\ASW_NVM.c	    67  	{
; ASW\ASW_NVM\src\ASW_NVM.c	    68  	case ASW_WRITE_BLOCKNATIVE_1024_1:
.L4:

; ASW\ASW_NVM\src\ASW_NVM.c	    69  		/*Update 1024 bytes of value 0x7E to test block*/
; ASW\ASW_NVM\src\ASW_NVM.c	    70  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,SIZE_BLOCK1,0x7E);
	mov	d4,#1024
.L220:
	movh.a	a15,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a15,[a15]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L221:
	mov	d5,#126
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L222:

; ASW\ASW_NVM\src\ASW_NVM.c	    71  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_WriteBlock
.L223:

; ASW\ASW_NVM\src\ASW_NVM.c	    72  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L224:
	st.w	[a12],d15
.L225:

; ASW\ASW_NVM\src\ASW_NVM.c	    73  		break;
	j	.L21

; ASW\ASW_NVM\src\ASW_NVM.c	    74  	case ASW_READ_BLOCKNATIVE_1024_1:
.L5:

; ASW\ASW_NVM\src\ASW_NVM.c	    75  		UpdatePIMWithValue(TEST_DATA_NVM_NATIVE_1024_1,SIZE_BLOCK1,0x00);
	mov	d4,#1024
.L226:
	movh.a	a15,#@his(TEST_DATA_NVM_NATIVE_1024_1)
	lea	a15,[a15]@los(TEST_DATA_NVM_NATIVE_1024_1)
.L227:
	mov	d5,#0
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L228:

; ASW\ASW_NVM\src\ASW_NVM.c	    76  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_ReadBlock(TEST_DATA_NVM_NATIVE_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_ReadBlock
.L229:

; ASW\ASW_NVM\src\ASW_NVM.c	    77          NvM_Test = SWC_ZERO;
	mov	d15,#0
.L230:
	st.w	[a12],d15
.L231:

; ASW\ASW_NVM\src\ASW_NVM.c	    78  		break;
	j	.L22

; ASW\ASW_NVM\src\ASW_NVM.c	    79  	case ASW_WRITE_BLOCKNATIVE_1024_2:
.L6:

; ASW\ASW_NVM\src\ASW_NVM.c	    80  		/*Update 1024 bytes of value 0xCE to test block*/
; ASW\ASW_NVM\src\ASW_NVM.c	    81  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2,SIZE_BLOCK2,0xCE);
	mov	d4,#1024
.L232:
	movh.a	a15,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
	lea	a15,[a15]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
.L233:
	mov	d5,#206
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L234:

; ASW\ASW_NVM\src\ASW_NVM.c	    82  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2);
	mov	d4,#13
	mov.aa	a4,a15
	call	NvM_WriteBlock
.L235:

; ASW\ASW_NVM\src\ASW_NVM.c	    83  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L236:
	st.w	[a12],d15
.L237:

; ASW\ASW_NVM\src\ASW_NVM.c	    84  		break;
	j	.L23

; ASW\ASW_NVM\src\ASW_NVM.c	    85  	case ASW_READ_BLOCKNATIVE_1024_2:
.L7:

; ASW\ASW_NVM\src\ASW_NVM.c	    86  		UpdatePIMWithValue(TEST_DATA_NVM_NATIVE_1024_2,SIZE_BLOCK2,0x00);
	mov	d4,#1024
.L238:
	movh.a	a15,#@his(TEST_DATA_NVM_NATIVE_1024_2)
	lea	a15,[a15]@los(TEST_DATA_NVM_NATIVE_1024_2)
.L239:
	mov	d5,#0
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L240:

; ASW\ASW_NVM\src\ASW_NVM.c	    87  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_ReadBlock(TEST_DATA_NVM_NATIVE_1024_2);
	mov	d4,#13
	mov.aa	a4,a15
	call	NvM_ReadBlock
.L241:

; ASW\ASW_NVM\src\ASW_NVM.c	    88  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L242:
	st.w	[a12],d15
.L243:

; ASW\ASW_NVM\src\ASW_NVM.c	    89  		break;
	j	.L24

; ASW\ASW_NVM\src\ASW_NVM.c	    90  	case ASW_WRITE_ALL_BLOCK_1024:
.L8:

; ASW\ASW_NVM\src\ASW_NVM.c	    91  		/*Update 1024 bytes of value 0xAB to test block*/
; ASW\ASW_NVM\src\ASW_NVM.c	    92  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,SIZE_BLOCK1,0xAB);
	mov	d15,#1024
.L244:
	movh.a	a15,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a15,[a15]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L245:
	mov	d5,#171
	mov.aa	a4,a15
	mov	d4,d15
	call	UpdatePIMWithValue
.L246:

; ASW\ASW_NVM\src\ASW_NVM.c	    93  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_WriteBlock
.L247:

; ASW\ASW_NVM\src\ASW_NVM.c	    94  
; ASW\ASW_NVM\src\ASW_NVM.c	    95  		/*Update 1024 bytes of value 0xAB to test block*/
; ASW\ASW_NVM\src\ASW_NVM.c	    96  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2,SIZE_BLOCK2,0xBC);
	movh.a	a15,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
	lea	a15,[a15]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
.L248:
	mov	d5,#188
	mov.aa	a4,a15
	mov	d4,d15
	call	UpdatePIMWithValue
.L249:

; ASW\ASW_NVM\src\ASW_NVM.c	    97  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2);
	mov	d4,#13
	mov.aa	a4,a15
	call	NvM_WriteBlock
.L250:

; ASW\ASW_NVM\src\ASW_NVM.c	    98  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L251:
	st.w	[a12],d15
.L252:

; ASW\ASW_NVM\src\ASW_NVM.c	    99  		break;
	j	.L25

; ASW\ASW_NVM\src\ASW_NVM.c	   100  	case ASW_READ_ALL_BLOCK_1024:
.L9:

; ASW\ASW_NVM\src\ASW_NVM.c	   101  		/*Erase PIM before read*/
; ASW\ASW_NVM\src\ASW_NVM.c	   102          UpdatePIMWithValue(TEST_DATA_NVM_NATIVE_1024_1,1024u,0x00);
	mov	d15,#1024
.L253:
	movh.a	a15,#@his(TEST_DATA_NVM_NATIVE_1024_1)
	lea	a15,[a15]@los(TEST_DATA_NVM_NATIVE_1024_1)
.L254:
	mov	d5,#0
	mov.aa	a4,a15
	mov	d4,d15
	call	UpdatePIMWithValue
.L255:

; ASW\ASW_NVM\src\ASW_NVM.c	   103          Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_ReadBlock(TEST_DATA_NVM_NATIVE_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_ReadBlock
.L256:

; ASW\ASW_NVM\src\ASW_NVM.c	   104  		/*Erase PIM before read*/
; ASW\ASW_NVM\src\ASW_NVM.c	   105          UpdatePIMWithValue(TEST_DATA_NVM_NATIVE_1024_2,1024u,0x00);
	movh.a	a15,#@his(TEST_DATA_NVM_NATIVE_1024_2)
	lea	a15,[a15]@los(TEST_DATA_NVM_NATIVE_1024_2)
.L257:
	mov	d5,#0
	mov.aa	a4,a15
	mov	d4,d15
	call	UpdatePIMWithValue
.L258:

; ASW\ASW_NVM\src\ASW_NVM.c	   106          Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_ReadBlock(TEST_DATA_NVM_NATIVE_1024_2);
	mov	d4,#13
	mov.aa	a4,a15
	call	NvM_ReadBlock
.L259:

; ASW\ASW_NVM\src\ASW_NVM.c	   107  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L260:
	st.w	[a12],d15
.L261:

; ASW\ASW_NVM\src\ASW_NVM.c	   108  
; ASW\ASW_NVM\src\ASW_NVM.c	   109  		break;
	j	.L26

; ASW\ASW_NVM\src\ASW_NVM.c	   110  
; ASW\ASW_NVM\src\ASW_NVM.c	   111  	case ASW_CORRUPT_BLOCKNATIVE_1024_1:
.L10:

; ASW\ASW_NVM\src\ASW_NVM.c	   112  		retVal = NvM_SwcIModifyNvBlock(modify_addr1);
	movh.a	a15,#@his(modify_addr1)
	lea	a15,[a15]@los(modify_addr1)
	ld.w	d4,[a15]
	call	NvM_SwcIModifyNvBlock
.L199:

; ASW\ASW_NVM\src\ASW_NVM.c	   113  		if(retVal == E_OK){
	jne	d2,#0,.L27
.L262:

; ASW\ASW_NVM\src\ASW_NVM.c	   114  			NvM_Test = SWC_ZERO;
	mov	d15,#0
.L263:
	st.w	[a12],d15
.L27:

; ASW\ASW_NVM\src\ASW_NVM.c	   115  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   116  		break;
	j	.L28

; ASW\ASW_NVM\src\ASW_NVM.c	   117  	case ASW_CORRUPT_BLOCKNATIVE_1024_2:
.L11:

; ASW\ASW_NVM\src\ASW_NVM.c	   118  		retVal = NvM_SwcIModifyNvBlock(modify_addr2);
	movh.a	a15,#@his(modify_addr2)
	lea	a15,[a15]@los(modify_addr2)
	ld.w	d4,[a15]
	call	NvM_SwcIModifyNvBlock
.L200:

; ASW\ASW_NVM\src\ASW_NVM.c	   119  		if(retVal == E_OK){
	jne	d2,#0,.L29
.L264:

; ASW\ASW_NVM\src\ASW_NVM.c	   120  			NvM_Test = SWC_ZERO;
	mov	d15,#0
.L265:
	st.w	[a12],d15
.L29:

; ASW\ASW_NVM\src\ASW_NVM.c	   121  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   122  		break;
	j	.L30

; ASW\ASW_NVM\src\ASW_NVM.c	   123  	case SWITCH_PAGE:
.L13:

; ASW\ASW_NVM\src\ASW_NVM.c	   124  		NvM_Rb_GetStatus(&status_NvM_test);
	movh.a	a15,#@his(status_NvM_test)
	lea	a15,[a15]@los(status_NvM_test)
	mov.aa	a4,a15
	call	NvM_Rb_GetStatus
.L266:

; ASW\ASW_NVM\src\ASW_NVM.c	   125  		if ( (status_NvM_test == NVM_RB_STATUS_BUSY ) || (status_NvM_test == MEMIF_BUSY))
	ld.w	d15,[a15]
.L267:
	jeq	d15,#2,.L31
.L268:
	jne	d15,#2,.L32
.L31:
	j	.L33
.L32:

; ASW\ASW_NVM\src\ASW_NVM.c	   126  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   127  
; ASW\ASW_NVM\src\ASW_NVM.c	   128  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   129  		else
; ASW\ASW_NVM\src\ASW_NVM.c	   130  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   131  			CounterWriteBlock++;
	movh.a	a15,#@his(CounterWriteBlock)
	lea	a15,[a15]@los(CounterWriteBlock)
	ld.bu	d15,[a15]
.L269:
	add	d15,#1
	st.b	[a15],d15
.L270:

; ASW\ASW_NVM\src\ASW_NVM.c	   132  			UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,SIZE_BLOCK1,CounterWriteBlock);
	mov	d4,#1024
.L271:
	movh.a	a13,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a13,[a13]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L272:
	ld.bu	d5,[a15]
	mov.aa	a4,a13
	call	UpdatePIMWithValue
.L273:

; ASW\ASW_NVM\src\ASW_NVM.c	   133  			Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1);
	mov	d4,#12
	mov.aa	a4,a13
	call	NvM_WriteBlock
.L274:

; ASW\ASW_NVM\src\ASW_NVM.c	   134  			if(CounterWriteBlock==NUMBER_BLOCK_TO_WRITE_DATA_IN_PAGE1)
	ld.bu	d0,[a15]
.L275:
	mov	d15,#20
.L276:
	jne	d15,d0,.L34
.L277:
	j	.L35
.L34:

; ASW\ASW_NVM\src\ASW_NVM.c	   135  			{
; ASW\ASW_NVM\src\ASW_NVM.c	   136  
; ASW\ASW_NVM\src\ASW_NVM.c	   137  			}
; ASW\ASW_NVM\src\ASW_NVM.c	   138  			else if (CounterWriteBlock ==NUMBER_BLOCK_TO_WRITE_DATA_IN_PAGE2)
	mov	d15,#40
.L278:
	jne	d15,d0,.L36
.L279:

; ASW\ASW_NVM\src\ASW_NVM.c	   139  			{
; ASW\ASW_NVM\src\ASW_NVM.c	   140  				NvM_Test = SWC_ZERO;
	mov	d15,#0
.L280:
	st.w	[a12],d15
.L36:
.L35:
.L33:

; ASW\ASW_NVM\src\ASW_NVM.c	   141  			}
; ASW\ASW_NVM\src\ASW_NVM.c	   142  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   143  
; ASW\ASW_NVM\src\ASW_NVM.c	   144  		break;
	j	.L37

; ASW\ASW_NVM\src\ASW_NVM.c	   145  	case ASW_WRITE_ALL_BLKS_REQ:
.L12:

; ASW\ASW_NVM\src\ASW_NVM.c	   146  		/*Update PIM with new value*/
; ASW\ASW_NVM\src\ASW_NVM.c	   147  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,1024,0x33);
	mov	d15,#1024
.L281:
	movh.a	a4,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a4,[a4]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L282:
	mov	d5,#51
	mov	d4,d15
	call	UpdatePIMWithValue
.L283:

; ASW\ASW_NVM\src\ASW_NVM.c	   148  		UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2,1024,0x34);
	movh.a	a4,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
	lea	a4,[a4]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
.L284:
	mov	d5,#52
	mov	d4,d15
	call	UpdatePIMWithValue
.L285:

; ASW\ASW_NVM\src\ASW_NVM.c	   149  		/*Change block status*/
; ASW\ASW_NVM\src\ASW_NVM.c	   150  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_SetRamBlockStatus(TRUE);
	mov	d4,#12
	mov	d5,#1
	call	NvM_SetRamBlockStatus
.L286:

; ASW\ASW_NVM\src\ASW_NVM.c	   151  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_SetRamBlockStatus(TRUE);
	mov	d4,#13
	mov	d5,#1
	call	NvM_SetRamBlockStatus
.L287:

; ASW\ASW_NVM\src\ASW_NVM.c	   152  		shutdown_b=1;
	movh.a	a15,#@his(shutdown_b)
	lea	a15,[a15]@los(shutdown_b)
.L288:
	mov	d15,#1
.L289:
	st.b	[a15],d15
.L290:

; ASW\ASW_NVM\src\ASW_NVM.c	   153  
; ASW\ASW_NVM\src\ASW_NVM.c	   154  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L291:
	st.w	[a12],d15
.L292:

; ASW\ASW_NVM\src\ASW_NVM.c	   155  		break;
	j	.L38

; ASW\ASW_NVM\src\ASW_NVM.c	   156  	case ERASE_BANK:
.L14:

; ASW\ASW_NVM\src\ASW_NVM.c	   157  		if( Fls_GetJobResult() == MEMIF_JOB_OK)
	call	Fls_17_Pmu_GetJobResult
.L293:
	jne	d2,#0,.L39
.L294:

; ASW\ASW_NVM\src\ASW_NVM.c	   158  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   159  		Fls_Erase(FEE_PHYS_SEC_START0,FEE_PHYS_SEC_END1 - FEE_PHYS_SEC_START0 + 1);
	mov	d4,#0
	mov.u	d5,#32768
	call	Fls_17_Pmu_Erase
.L295:

; ASW\ASW_NVM\src\ASW_NVM.c	   160  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L296:
	st.w	[a12],d15
.L39:

; ASW\ASW_NVM\src\ASW_NVM.c	   161  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   162  		break;
	j	.L40

; ASW\ASW_NVM\src\ASW_NVM.c	   163  	case ERASE_SECTOR_0:
.L15:

; ASW\ASW_NVM\src\ASW_NVM.c	   164  		if( Fls_GetJobResult() == MEMIF_JOB_OK)
	call	Fls_17_Pmu_GetJobResult
.L297:
	jne	d2,#0,.L41
.L298:

; ASW\ASW_NVM\src\ASW_NVM.c	   165  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   166  		Fls_Erase(FEE_PHYS_SEC_START0,FEE_PHYS_SEC_END0 - FEE_PHYS_SEC_START0 + 1);
	mov	d5,#16384
	mov	d4,#0
	call	Fls_17_Pmu_Erase
.L299:

; ASW\ASW_NVM\src\ASW_NVM.c	   167  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L300:
	st.w	[a12],d15
.L41:

; ASW\ASW_NVM\src\ASW_NVM.c	   168  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   169  
; ASW\ASW_NVM\src\ASW_NVM.c	   170  		break;
	j	.L42

; ASW\ASW_NVM\src\ASW_NVM.c	   171  	case ERASE_SECTOR_1:
.L16:

; ASW\ASW_NVM\src\ASW_NVM.c	   172  		if( Fls_GetJobResult() == MEMIF_JOB_OK)
	call	Fls_17_Pmu_GetJobResult
.L301:
	jne	d2,#0,.L43
.L302:

; ASW\ASW_NVM\src\ASW_NVM.c	   173  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   174  		Fls_Erase(FEE_PHYS_SEC_START1,FEE_PHYS_SEC_END1 - FEE_PHYS_SEC_START1 + 1);
	mov	d4,#16384
	mov	d5,d4
	call	Fls_17_Pmu_Erase
.L303:

; ASW\ASW_NVM\src\ASW_NVM.c	   175  		NvM_Test = SWC_ZERO;
	mov	d15,#0
.L304:
	st.w	[a12],d15
.L43:

; ASW\ASW_NVM\src\ASW_NVM.c	   176  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   177  		break;
	j	.L44

; ASW\ASW_NVM\src\ASW_NVM.c	   178  
; ASW\ASW_NVM\src\ASW_NVM.c	   179  	case ASW_FILL_SECTOR_WITH_FULL_DATA:
.L17:

; ASW\ASW_NVM\src\ASW_NVM.c	   180  		/*Write native block 1 and native block 2 until the first sector is full*/
; ASW\ASW_NVM\src\ASW_NVM.c	   181  		if (Fee_LLCheckReorganizationNeed(FEE_REQUIRED_FREE_SPACE_BEFORE_HARD_SR ,SIZE_BLOCK1 + 14) == 5)
	mov	d4,#16392
.L305:
	mov	d5,#1038
	call	Fee_LLCheckReorganizationNeed
.L306:
	jne	d2,#5,.L45
.L307:

; ASW\ASW_NVM\src\ASW_NVM.c	   182  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   183  			NvM_Test = ASW_WAIT_FOR_BLOCK_REQUEST_FINISHED;
	mov	d15,#17
.L308:
	st.w	[a12],d15
.L309:
	j	.L46
.L45:

; ASW\ASW_NVM\src\ASW_NVM.c	   184  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   185  		else
; ASW\ASW_NVM\src\ASW_NVM.c	   186  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   187  			Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus(&NvM_ErrorStatus[0]);
	movh.a	a15,#@his(NvM_ErrorStatus)
	lea	a15,[a15]@los(NvM_ErrorStatus)
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_GetErrorStatus
.L310:

; ASW\ASW_NVM\src\ASW_NVM.c	   188  			Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetErrorStatus(&NvM_ErrorStatus[1]);
	mov.aa	a12,a15
	add.a	a12,#1
	mov	d4,#13
	mov.aa	a4,a12
	call	NvM_GetErrorStatus
.L311:

; ASW\ASW_NVM\src\ASW_NVM.c	   189  			if (NvM_ErrorStatus[0] != NVM_REQ_PENDING)
	ld.bu	d15,[a15]
.L312:
	jeq	d15,#2,.L47
.L313:

; ASW\ASW_NVM\src\ASW_NVM.c	   190  			{
; ASW\ASW_NVM\src\ASW_NVM.c	   191  				if (NvM_WriteFlag == 1)
	movh.a	a15,#@his(NvM_WriteFlag)
	lea	a15,[a15]@los(NvM_WriteFlag)
	ld.bu	d15,[a15]
.L314:
	jne	d15,#1,.L48
.L315:

; ASW\ASW_NVM\src\ASW_NVM.c	   192  				{
; ASW\ASW_NVM\src\ASW_NVM.c	   193  					UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,SIZE_BLOCK1,CounterWriteBlock++);
	movh.a	a2,#@his(CounterWriteBlock)
	lea	a2,[a2]@los(CounterWriteBlock)
	ld.bu	d5,[a2]
.L316:
	add	d15,d5,#1
	st.b	[a2],d15
.L317:
	mov	d4,#1024
.L318:
	movh.a	a13,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a13,[a13]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L319:
	mov.aa	a4,a13
	call	UpdatePIMWithValue
.L320:

; ASW\ASW_NVM\src\ASW_NVM.c	   194  					Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1);
	mov	d4,#12
	mov.aa	a4,a13
	call	NvM_WriteBlock
.L321:

; ASW\ASW_NVM\src\ASW_NVM.c	   195  					NvM_WriteFlag = 2;
	mov	d15,#2
.L322:
	st.b	[a15],d15
.L323:
	j	.L49
.L48:

; ASW\ASW_NVM\src\ASW_NVM.c	   196  				}
; ASW\ASW_NVM\src\ASW_NVM.c	   197  				else if (NvM_WriteFlag == 2)
	jne	d15,#2,.L50
.L324:

; ASW\ASW_NVM\src\ASW_NVM.c	   198  				{
; ASW\ASW_NVM\src\ASW_NVM.c	   199  					NvM_WriteFlag = 3;
	mov	d15,#3
.L325:
	st.b	[a15],d15
.L50:
.L49:
.L47:

; ASW\ASW_NVM\src\ASW_NVM.c	   200  				}
; ASW\ASW_NVM\src\ASW_NVM.c	   201  			}
; ASW\ASW_NVM\src\ASW_NVM.c	   202  			if (NvM_ErrorStatus[1] != NVM_REQ_PENDING)
	ld.bu	d15,[a12]
.L326:
	jeq	d15,#2,.L51
.L327:

; ASW\ASW_NVM\src\ASW_NVM.c	   203  			{
; ASW\ASW_NVM\src\ASW_NVM.c	   204  				if (NvM_WriteFlag == 3)
	movh.a	a15,#@his(NvM_WriteFlag)
	lea	a15,[a15]@los(NvM_WriteFlag)
	ld.bu	d15,[a15]
.L328:
	jne	d15,#3,.L52
.L329:

; ASW\ASW_NVM\src\ASW_NVM.c	   205  				{
; ASW\ASW_NVM\src\ASW_NVM.c	   206  					UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2,SIZE_BLOCK2,CounterWriteBlock++);
	movh.a	a2,#@his(CounterWriteBlock)
	lea	a2,[a2]@los(CounterWriteBlock)
	ld.bu	d5,[a2]
.L330:
	add	d15,d5,#1
	st.b	[a2],d15
.L331:
	mov	d4,#1024
.L332:
	movh.a	a12,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
	lea	a12,[a12]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2)
.L333:
	mov.aa	a4,a12
	call	UpdatePIMWithValue
.L334:

; ASW\ASW_NVM\src\ASW_NVM.c	   207  					Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2);
	mov	d4,#13
	mov.aa	a4,a12
	call	NvM_WriteBlock
.L335:

; ASW\ASW_NVM\src\ASW_NVM.c	   208  					NvM_WriteFlag = 4;
	mov	d15,#4
.L336:
	st.b	[a15],d15
.L337:
	j	.L53
.L52:

; ASW\ASW_NVM\src\ASW_NVM.c	   209  				}
; ASW\ASW_NVM\src\ASW_NVM.c	   210  				else if (NvM_WriteFlag == 4)
	jne	d15,#4,.L54
.L338:

; ASW\ASW_NVM\src\ASW_NVM.c	   211  				{
; ASW\ASW_NVM\src\ASW_NVM.c	   212  					NvM_WriteFlag = 1;
	mov	d15,#1
.L339:
	st.b	[a15],d15
.L54:
.L53:
.L51:
.L46:

; ASW\ASW_NVM\src\ASW_NVM.c	   213  				}
; ASW\ASW_NVM\src\ASW_NVM.c	   214  			}
; ASW\ASW_NVM\src\ASW_NVM.c	   215  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   216  		break;
	j	.L55

; ASW\ASW_NVM\src\ASW_NVM.c	   217  
; ASW\ASW_NVM\src\ASW_NVM.c	   218  	case ASW_WAIT_FOR_BLOCK_REQUEST_FINISHED:
.L18:

; ASW\ASW_NVM\src\ASW_NVM.c	   219  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus(&NvM_ErrorStatus[0]);
	movh.a	a15,#@his(NvM_ErrorStatus)
	lea	a15,[a15]@los(NvM_ErrorStatus)
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_GetErrorStatus
.L340:

; ASW\ASW_NVM\src\ASW_NVM.c	   220  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_2_GetErrorStatus(&NvM_ErrorStatus[1]);
	mov.aa	a13,a15
	add.a	a13,#1
	mov	d4,#13
	mov.aa	a4,a13
	call	NvM_GetErrorStatus
.L341:

; ASW\ASW_NVM\src\ASW_NVM.c	   221  		if ((NvM_ErrorStatus[0] == NVM_REQ_OK) && (NvM_ErrorStatus[1] == NVM_REQ_OK))
	ld.bu	d15,[a15]
.L342:
	jne	d15,#0,.L56
.L343:
	ld.bu	d15,[a13]
.L344:
	jne	d15,#0,.L57
.L345:

; ASW\ASW_NVM\src\ASW_NVM.c	   222  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   223  			NvM_Test = SWC_ZERO;
	mov	d15,#0
.L346:
	st.w	[a12],d15
.L57:
.L56:

; ASW\ASW_NVM\src\ASW_NVM.c	   224  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   225  		break;
	j	.L58

; ASW\ASW_NVM\src\ASW_NVM.c	   226  
; ASW\ASW_NVM\src\ASW_NVM.c	   227  	case ASW_WRITE_BLOCK_AND_CALCULATE_TIME:
.L19:

; ASW\ASW_NVM\src\ASW_NVM.c	   228  		/*Write the native block and calculate the time to write this blocks*/
; ASW\ASW_NVM\src\ASW_NVM.c	   229  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus(&NvM_ErrorStatus[0]);
	movh.a	a15,#@his(NvM_ErrorStatus)
	lea	a15,[a15]@los(NvM_ErrorStatus)
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_GetErrorStatus
.L347:

; ASW\ASW_NVM\src\ASW_NVM.c	   230  
; ASW\ASW_NVM\src\ASW_NVM.c	   231  		if((NvM_ErrorStatus[0] != NVM_REQ_PENDING) && (NvM_Count_PENDING == 0))
	ld.bu	d15,[a15]
.L348:
	jeq	d15,#2,.L59
.L349:
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d0,[a15]
.L350:
	jne	d0,#0,.L60
.L351:

; ASW\ASW_NVM\src\ASW_NVM.c	   232  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   233  			UpdatePIMWithValue(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1,SIZE_BLOCK1,CounterWriteBlock++);
	movh.a	a15,#@his(CounterWriteBlock)
	lea	a15,[a15]@los(CounterWriteBlock)
	ld.bu	d5,[a15]
.L352:
	add	d15,d5,#1
	st.b	[a15],d15
.L353:
	mov	d4,#1024
.L354:
	movh.a	a15,#@his(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
	lea	a15,[a15]@los(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1)
.L355:
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L356:

; ASW\ASW_NVM\src\ASW_NVM.c	   234  			IC_SetCurrentTime();
	call	IC_SetCurrentTime
.L357:

; ASW\ASW_NVM\src\ASW_NVM.c	   235  			Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_WriteBlock(Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_WriteBlock
.L358:
	j	.L61
.L60:
.L59:

; ASW\ASW_NVM\src\ASW_NVM.c	   236  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   237  		else if((NvM_ErrorStatus[0] != NVM_REQ_PENDING) && (NvM_Count_PENDING > 0))
	jeq	d15,#2,.L62
.L359:
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d0,[a15]
.L360:
	jeq	d0,#0,.L63
.L361:

; ASW\ASW_NVM\src\ASW_NVM.c	   238  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   239  			NvM_ElapsedTime = IC_GetElapsedTime();
	movh.a	a15,#@his(NvM_ElapsedTime)
	lea	a15,[a15]@los(NvM_ElapsedTime)
.L362:
	call	IC_GetElapsedTime
.L363:
	st.w	[a15],d2
.L364:

; ASW\ASW_NVM\src\ASW_NVM.c	   240  			NvM_Test = SWC_ZERO;
	mov	d15,#0
.L365:
	st.w	[a12],d15
.L366:
	j	.L64
.L63:
.L62:

; ASW\ASW_NVM\src\ASW_NVM.c	   241  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   242  		else if (NvM_ErrorStatus[0] == NVM_REQ_PENDING)
	jne	d15,#2,.L65
.L367:

; ASW\ASW_NVM\src\ASW_NVM.c	   243  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   244  			NvM_Count_PENDING++;
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d15,[a15]
.L368:
	add	d15,#1
	st.w	[a15],d15
.L369:
	j	.L66
.L65:

; ASW\ASW_NVM\src\ASW_NVM.c	   245  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   246  		else
.L66:
.L64:
.L61:

; ASW\ASW_NVM\src\ASW_NVM.c	   247  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   248  			/*do nothing*/
; ASW\ASW_NVM\src\ASW_NVM.c	   249  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   250  		break;
	j	.L67

; ASW\ASW_NVM\src\ASW_NVM.c	   251  	case ASW_READ_BLOCK_AND_CALCULATE_TIME:
.L20:

; ASW\ASW_NVM\src\ASW_NVM.c	   252  		/*Read the native block and calculate the time to read this blocks*/
; ASW\ASW_NVM\src\ASW_NVM.c	   253  		Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_GetErrorStatus(&NvM_ErrorStatus[0]);
	movh.a	a15,#@his(NvM_ErrorStatus)
	lea	a15,[a15]@los(NvM_ErrorStatus)
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_GetErrorStatus
.L370:

; ASW\ASW_NVM\src\ASW_NVM.c	   254  		if((NvM_ErrorStatus[0] != NVM_REQ_PENDING) && (NvM_Count_PENDING == 0))
	ld.bu	d15,[a15]
.L371:
	jeq	d15,#2,.L68
.L372:
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d0,[a15]
.L373:
	jne	d0,#0,.L69
.L374:

; ASW\ASW_NVM\src\ASW_NVM.c	   255  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   256  			UpdatePIMWithValue(TEST_DATA_NVM_NATIVE_1024_1,SIZE_BLOCK1,0x00);
	mov	d4,#1024
.L375:
	movh.a	a15,#@his(TEST_DATA_NVM_NATIVE_1024_1)
	lea	a15,[a15]@los(TEST_DATA_NVM_NATIVE_1024_1)
.L376:
	mov	d5,#0
	mov.aa	a4,a15
	call	UpdatePIMWithValue
.L377:

; ASW\ASW_NVM\src\ASW_NVM.c	   257  			IC_SetCurrentTime();
	call	IC_SetCurrentTime
.L378:

; ASW\ASW_NVM\src\ASW_NVM.c	   258  			Rte_Call_RPort_ASW_NVM_BlockNative_1024_1_ReadBlock(TEST_DATA_NVM_NATIVE_1024_1);
	mov	d4,#12
	mov.aa	a4,a15
	call	NvM_ReadBlock
.L379:
	j	.L70
.L69:
.L68:

; ASW\ASW_NVM\src\ASW_NVM.c	   259  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   260  		else if((NvM_ErrorStatus[0] != NVM_REQ_PENDING) && (NvM_Count_PENDING > 0))
	jeq	d15,#2,.L71
.L380:
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d0,[a15]
.L381:
	jeq	d0,#0,.L72
.L382:

; ASW\ASW_NVM\src\ASW_NVM.c	   261  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   262  			NvM_ElapsedTime = IC_GetElapsedTime();
	movh.a	a15,#@his(NvM_ElapsedTime)
	lea	a15,[a15]@los(NvM_ElapsedTime)
.L383:
	call	IC_GetElapsedTime
.L384:
	st.w	[a15],d2
.L385:

; ASW\ASW_NVM\src\ASW_NVM.c	   263  			NvM_Test = SWC_ZERO;
	mov	d15,#0
.L386:
	st.w	[a12],d15
.L387:
	j	.L73
.L72:
.L71:

; ASW\ASW_NVM\src\ASW_NVM.c	   264  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   265  		else if (NvM_ErrorStatus[0] == NVM_REQ_PENDING)
	jne	d15,#2,.L74
.L388:

; ASW\ASW_NVM\src\ASW_NVM.c	   266  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   267  			NvM_Count_PENDING++;
	movh.a	a15,#@his(NvM_Count_PENDING)
	lea	a15,[a15]@los(NvM_Count_PENDING)
	ld.w	d15,[a15]
.L389:
	add	d15,#1
	st.w	[a15],d15
.L390:
	j	.L75
.L74:

; ASW\ASW_NVM\src\ASW_NVM.c	   268  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   269  		else
.L75:
.L73:
.L70:

; ASW\ASW_NVM\src\ASW_NVM.c	   270  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   271  			/*do nothing*/
; ASW\ASW_NVM\src\ASW_NVM.c	   272  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   273  
; ASW\ASW_NVM\src\ASW_NVM.c	   274  		break;
	j	.L76

; ASW\ASW_NVM\src\ASW_NVM.c	   275  	default:
.L3:

; ASW\ASW_NVM\src\ASW_NVM.c	   276  		break;
	j	.L77

; ASW\ASW_NVM\src\ASW_NVM.c	   277  
; ASW\ASW_NVM\src\ASW_NVM.c	   278  	}
; ASW\ASW_NVM\src\ASW_NVM.c	   279  }
.L77:
.L76:
.L67:
.L58:
.L55:
.L44:
.L42:
.L40:
.L38:
.L37:
.L30:
.L28:
.L26:
.L25:
.L24:
.L23:
.L22:
.L21:
	ret
.L172:
	
__RE_ASW_NVM_func_function_end:
	.size	RE_ASW_NVM_func,__RE_ASW_NVM_func_function_end-RE_ASW_NVM_func
.L124:
	; End of function
	
	.sdecl	'.text.ASW_NVM.UpdatePIMWithValue',code,cluster('UpdatePIMWithValue')
	.sect	'.text.ASW_NVM.UpdatePIMWithValue'
	.align	2
	
	.global	UpdatePIMWithValue

; ASW\ASW_NVM\src\ASW_NVM.c	   280  
; ASW\ASW_NVM\src\ASW_NVM.c	   281  /***************************************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	   282   Function name    : UpdatePIMWithValue
; ASW\ASW_NVM\src\ASW_NVM.c	   283   Syntax           : void  UpdatePIMWithValue(uint8 *src, uint32 length, uint8 Value)
; ASW\ASW_NVM\src\ASW_NVM.c	   284   Description      : Update PIM's value
; ASW\ASW_NVM\src\ASW_NVM.c	   285   Parameter        : uint8 *src, uint32 length, uint8 Value
; ASW\ASW_NVM\src\ASW_NVM.c	   286   Return value     : none
; ASW\ASW_NVM\src\ASW_NVM.c	   287   ***************************************************************************************************/
; ASW\ASW_NVM\src\ASW_NVM.c	   288  
; ASW\ASW_NVM\src\ASW_NVM.c	   289  void UpdatePIMWithValue(uint8 *dst, uint32 length, uint8 Value)
; Function UpdatePIMWithValue
.L111:
UpdatePIMWithValue:	.type	func

; ASW\ASW_NVM\src\ASW_NVM.c	   290  {
; ASW\ASW_NVM\src\ASW_NVM.c	   291  	uint32 Cnt = 0;
; ASW\ASW_NVM\src\ASW_NVM.c	   292  	for(Cnt = 0; Cnt < length ; Cnt++)
	mov	d15,#0
.L201:
	j	.L78
.L79:

; ASW\ASW_NVM\src\ASW_NVM.c	   293  	{
; ASW\ASW_NVM\src\ASW_NVM.c	   294  		*dst = Value;
	st.b	[a4],d5
.L395:

; ASW\ASW_NVM\src\ASW_NVM.c	   295  		dst++;
	add.a	a4,#1
.L396:
	add	d15,#1
.L78:
	jlt.u	d15,d4,.L79
.L397:

; ASW\ASW_NVM\src\ASW_NVM.c	   296  	}
; ASW\ASW_NVM\src\ASW_NVM.c	   297  
; ASW\ASW_NVM\src\ASW_NVM.c	   298  }
	ret
.L175:
	
__UpdatePIMWithValue_function_end:
	.size	UpdatePIMWithValue,__UpdatePIMWithValue_function_end-UpdatePIMWithValue
.L129:
	; End of function
	
	.sdecl	'.text.ASW_NVM.NvM_SwcIModifyNvBlock',code,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.text.ASW_NVM.NvM_SwcIModifyNvBlock'
	.align	2
	
	.global	NvM_SwcIModifyNvBlock

; ASW\ASW_NVM\src\ASW_NVM.c	   299  
; ASW\ASW_NVM\src\ASW_NVM.c	   300  /***************************************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	   301   Function name    : NvM_SwcIModifyNvBlock
; ASW\ASW_NVM\src\ASW_NVM.c	   302   Syntax           : void  NvM_SwcIModifyNvBlock(uint32 addr)
; ASW\ASW_NVM\src\ASW_NVM.c	   303   Description      : Modify data on NV Block
; ASW\ASW_NVM\src\ASW_NVM.c	   304   Parameter        : uint32 addr
; ASW\ASW_NVM\src\ASW_NVM.c	   305   Return value     : none
; ASW\ASW_NVM\src\ASW_NVM.c	   306   ***************************************************************************************************/
; ASW\ASW_NVM\src\ASW_NVM.c	   307  uint8 NvM_SwcIModifyNvBlock(uint32 addr)
; Function NvM_SwcIModifyNvBlock
.L113:
NvM_SwcIModifyNvBlock:	.type	func

; ASW\ASW_NVM\src\ASW_NVM.c	   308  {
; ASW\ASW_NVM\src\ASW_NVM.c	   309  	static MDF_State_t MDF_State = MDF_NONE;
; ASW\ASW_NVM\src\ASW_NVM.c	   310  	uint8 ret_val = E_NOT_OK;
	mov	d8,#1
.L203:

; ASW\ASW_NVM\src\ASW_NVM.c	   311  	switch(MDF_State)
	movh.a	a15,#@his(_999001_MDF_State)
	lea	a15,[a15]@los(_999001_MDF_State)
	ld.w	d0,[a15]
.L402:

; ASW\ASW_NVM\src\ASW_NVM.c	   312  	{
; ASW\ASW_NVM\src\ASW_NVM.c	   313  	case MDF_NONE:
	mov	d15,#0
	jeq	d15,d0,.L80
.L403:

; ASW\ASW_NVM\src\ASW_NVM.c	   314  		MDF_State = MDF_INIT_STATE;
; ASW\ASW_NVM\src\ASW_NVM.c	   315  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   316  	case MDF_INIT_STATE: /*copy data flash to buffer ram*/;
	mov	d15,#1
	jeq	d15,d0,.L81
.L404:

; ASW\ASW_NVM\src\ASW_NVM.c	   317  		NvM_SwcICopyDataToRam(InvalidData, (uint8*)(FLS_BASE_ADDRESS + MngData_Size), sizeof(InvalidData));
; ASW\ASW_NVM\src\ASW_NVM.c	   318  		NvM_SwcICopyDataToRam(MngData, (uint8*)FLS_BASE_ADDRESS, sizeof(MngData));
; ASW\ASW_NVM\src\ASW_NVM.c	   319  		MDF_State = MDF_ERASE_BANK;
; ASW\ASW_NVM\src\ASW_NVM.c	   320  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   321  	case MDF_ERASE_BANK: /*erase bank 0 before write data*/
	mov	d15,#2
	jeq	d15,d0,.L82
.L405:

; ASW\ASW_NVM\src\ASW_NVM.c	   322  		if( Fls_GetJobResult() == MEMIF_JOB_OK)
; ASW\ASW_NVM\src\ASW_NVM.c	   323  		{
; ASW\ASW_NVM\src\ASW_NVM.c	   324  		Fls_Erase(FEE_PHYS_SEC_START0,FEE_PHYS_SEC_END1 - FEE_PHYS_SEC_START0 + 1);
; ASW\ASW_NVM\src\ASW_NVM.c	   325  		MDF_State = MDF_MODIFY_DATA;
; ASW\ASW_NVM\src\ASW_NVM.c	   326  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   327  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   328  	case MDF_MODIFY_DATA:
	mov	d15,#3
	jeq	d15,d0,.L83
.L406:

; ASW\ASW_NVM\src\ASW_NVM.c	   329  		InvalidData[addr]= CorruptData;
; ASW\ASW_NVM\src\ASW_NVM.c	   330  		MDF_State = MDF_UPDATE_MANANGMENT_INFO;
; ASW\ASW_NVM\src\ASW_NVM.c	   331  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   332  	case MDF_UPDATE_MANANGMENT_INFO: /*write back  management data*/
; ASW\ASW_NVM\src\ASW_NVM.c	   333  		if( Fls_GetJobResult() == MEMIF_JOB_OK){
; ASW\ASW_NVM\src\ASW_NVM.c	   334  			Fls_Write((uint32)FEE_PHYS_SEC_START0, &MngData[0], sizeof(MngData));
; ASW\ASW_NVM\src\ASW_NVM.c	   335  			MDF_State = MDF_UPDATE_DATA;
; ASW\ASW_NVM\src\ASW_NVM.c	   336  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   337  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   338  	case MDF_UPDATE_DATA: /*write data back to bank 0*/
	mov	d15,#4
	jeq	d15,d0,.L84
.L407:
	mov	d15,#5
	jeq	d15,d0,.L85
.L408:

; ASW\ASW_NVM\src\ASW_NVM.c	   339  		if( Fls_GetJobResult() == MEMIF_JOB_OK){
; ASW\ASW_NVM\src\ASW_NVM.c	   340  			Fls_Write((uint32)FEE_PHYS_SEC_START0 + sizeof(MngData), &InvalidData[0], sizeof(InvalidData));
; ASW\ASW_NVM\src\ASW_NVM.c	   341  			MDF_State = MDF_UPDATE_COMPLETE;
; ASW\ASW_NVM\src\ASW_NVM.c	   342  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   343  		break;
; ASW\ASW_NVM\src\ASW_NVM.c	   344  	case MDF_UPDATE_COMPLETE:
	mov	d15,#6
	jeq	d15,d0,.L86
	j	.L87
.L80:
	mov	d15,#1
.L409:
	st.w	[a15],d15
.L410:
	j	.L88
.L81:
	movh.a	a4,#@his(InvalidData)
	lea	a4,[a4]@los(InvalidData)
.L411:
	movh.a	a5,#44800
	lea	a5,[a5]@los(0xaf000060)
.L412:
	mov	d4,#1400
.L202:
	call	NvM_SwcICopyDataToRam
.L413:
	movh.a	a4,#@his(MngData)
	lea	a4,[a4]@los(MngData)
.L414:
	movh.a	a5,#44800
.L415:
	mov	d4,#96
	call	NvM_SwcICopyDataToRam
.L416:
	mov	d15,#2
.L417:
	st.w	[a15],d15
.L418:
	j	.L89
.L82:
	call	Fls_17_Pmu_GetJobResult
.L204:
	jne	d2,#0,.L90
.L419:
	mov	d4,#0
	mov.u	d5,#32768
	call	Fls_17_Pmu_Erase
.L420:
	mov	d15,#3
.L421:
	st.w	[a15],d15
.L90:
	j	.L91
.L83:
	movh.a	a2,#@his(InvalidData)
	lea	a2,[a2]@los(InvalidData)
.L422:
	addsc.a	a2,a2,d4,#0
.L423:
	movh.a	a4,#@his(CorruptData)
	lea	a4,[a4]@los(CorruptData)
	ld.bu	d15,[a4]
.L424:
	st.b	[a2],d15
.L425:
	mov	d15,#5
.L426:
	st.w	[a15],d15
.L427:
	j	.L92
.L85:
	call	Fls_17_Pmu_GetJobResult
.L205:
	jne	d2,#0,.L93
.L428:
	mov	d4,#0
	movh.a	a4,#@his(MngData)
	lea	a4,[a4]@los(MngData)
	mov	d5,#96
	call	Fls_17_Pmu_Write
.L429:
	mov	d15,#4
.L430:
	st.w	[a15],d15
.L93:
	j	.L94
.L84:
	call	Fls_17_Pmu_GetJobResult
.L206:
	jne	d2,#0,.L95
.L431:
	mov	d4,#96
	movh.a	a4,#@his(InvalidData)
	lea	a4,[a4]@los(InvalidData)
	mov	d5,#1400
	call	Fls_17_Pmu_Write
.L432:
	mov	d15,#6
.L433:
	st.w	[a15],d15
.L95:
	j	.L96
.L86:

; ASW\ASW_NVM\src\ASW_NVM.c	   345  		if( Fls_GetJobResult() == MEMIF_JOB_OK){
	call	Fls_17_Pmu_GetJobResult
.L207:
	jne	d2,#0,.L97
.L434:

; ASW\ASW_NVM\src\ASW_NVM.c	   346  			MDF_State = MDF_NONE;
	mov	d15,#0
.L435:
	st.w	[a15],d15
.L436:

; ASW\ASW_NVM\src\ASW_NVM.c	   347  			ret_val = E_OK;
	mov	d8,#0
.L97:

; ASW\ASW_NVM\src\ASW_NVM.c	   348  		}
; ASW\ASW_NVM\src\ASW_NVM.c	   349  		break;
	j	.L98

; ASW\ASW_NVM\src\ASW_NVM.c	   350  	default :
.L87:

; ASW\ASW_NVM\src\ASW_NVM.c	   351  		break;
	j	.L99

; ASW\ASW_NVM\src\ASW_NVM.c	   352  	}
; ASW\ASW_NVM\src\ASW_NVM.c	   353  	return ret_val ;
.L99:
.L98:
.L96:
.L94:
.L92:
.L91:
.L89:
.L88:
	mov	d2,d8
.L208:
	j	.L100

; ASW\ASW_NVM\src\ASW_NVM.c	   354  }
.L100:
	ret
.L182:
	
__NvM_SwcIModifyNvBlock_function_end:
	.size	NvM_SwcIModifyNvBlock,__NvM_SwcIModifyNvBlock_function_end-NvM_SwcIModifyNvBlock
.L134:
	; End of function
	
	.sdecl	'.text.ASW_NVM.NvM_SwcICopyDataToRam',code,cluster('NvM_SwcICopyDataToRam')
	.sect	'.text.ASW_NVM.NvM_SwcICopyDataToRam'
	.align	2
	
	.global	NvM_SwcICopyDataToRam

; ASW\ASW_NVM\src\ASW_NVM.c	   355  /***************************************************************************************************
; ASW\ASW_NVM\src\ASW_NVM.c	   356   Function name    : NvM_SwcICopyDataToRam
; ASW\ASW_NVM\src\ASW_NVM.c	   357   Syntax           : static uint8 NvM_SwcICopyDataToRam(uint8 * dest_addr, uint8 * src_addr, size)
; ASW\ASW_NVM\src\ASW_NVM.c	   358   Description      : Copy data from ROM to RAM for testing purpose
; ASW\ASW_NVM\src\ASW_NVM.c	   359   Parameter        : uint8 * dest_addr, uint8 * src_addr, size
; ASW\ASW_NVM\src\ASW_NVM.c	   360   Return value     : none
; ASW\ASW_NVM\src\ASW_NVM.c	   361   ***************************************************************************************************/
; ASW\ASW_NVM\src\ASW_NVM.c	   362  uint8 NvM_SwcICopyDataToRam(uint8 * dest_addr, uint8 * src_addr, uint32 size)
; Function NvM_SwcICopyDataToRam
.L115:
NvM_SwcICopyDataToRam:	.type	func

; ASW\ASW_NVM\src\ASW_NVM.c	   363  {
; ASW\ASW_NVM\src\ASW_NVM.c	   364  	uint8 retVal = E_NOT_OK;
	mov	d2,#1
.L209:

; ASW\ASW_NVM\src\ASW_NVM.c	   365  	if((dest_addr == NULL_PTR) || (NULL_PTR == src_addr) || (0u == size))
	jz.a	a4,.L101
.L441:
	mov.a	a15,#0
.L442:
	jeq.a	a15,a5,.L102
.L443:
	jne	d4,#0,.L103
.L102:
.L101:

; ASW\ASW_NVM\src\ASW_NVM.c	   366  	{
; ASW\ASW_NVM\src\ASW_NVM.c	   367  		return retVal;
	j	.L104
.L103:

; ASW\ASW_NVM\src\ASW_NVM.c	   368  	}
; ASW\ASW_NVM\src\ASW_NVM.c	   369  	while(size > 0u)
	j	.L105
.L106:

; ASW\ASW_NVM\src\ASW_NVM.c	   370  	{
; ASW\ASW_NVM\src\ASW_NVM.c	   371  		*dest_addr = *src_addr;
	ld.bu	d15,[a5]
.L444:
	st.b	[a4],d15
.L445:

; ASW\ASW_NVM\src\ASW_NVM.c	   372  		dest_addr++;
	add.a	a4,#1
.L446:

; ASW\ASW_NVM\src\ASW_NVM.c	   373  		src_addr++;
	add.a	a5,#1
.L447:

; ASW\ASW_NVM\src\ASW_NVM.c	   374  		size--;
	add	d4,#-1
.L105:
	jne	d4,#0,.L106
.L448:

; ASW\ASW_NVM\src\ASW_NVM.c	   375  	}
; ASW\ASW_NVM\src\ASW_NVM.c	   376  	retVal = E_OK;
	mov	d2,#0
.L449:

; ASW\ASW_NVM\src\ASW_NVM.c	   377  
; ASW\ASW_NVM\src\ASW_NVM.c	   378  	return retVal;
	j	.L107

; ASW\ASW_NVM\src\ASW_NVM.c	   379  }
.L107:
.L104:
	ret
.L186:
	
__NvM_SwcICopyDataToRam_function_end:
	.size	NvM_SwcICopyDataToRam,__NvM_SwcICopyDataToRam_function_end-NvM_SwcICopyDataToRam
.L139:
	; End of function
	
	.sdecl	'.rodata.ASW_NVM.Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1',data,rom,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1')
	.sect	'.rodata.ASW_NVM.Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1'
	.global	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1
Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1:	.type	object
	.size	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1,1024
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.byte	51,51,51,51
	.sdecl	'.rodata.ASW_NVM.Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2',data,rom,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2')
	.sect	'.rodata.ASW_NVM.Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2'
	.global	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2
Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2:	.type	object
	.size	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2,1024
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.byte	2,2,2,2
	.sdecl	'.bss.ASW_NVM.TEST_DATA_NVM_NATIVE_1024_1',data,cluster('TEST_DATA_NVM_NATIVE_1024_1')
	.sect	'.bss.ASW_NVM.TEST_DATA_NVM_NATIVE_1024_1'
	.global	TEST_DATA_NVM_NATIVE_1024_1
TEST_DATA_NVM_NATIVE_1024_1:	.type	object
	.size	TEST_DATA_NVM_NATIVE_1024_1,1024
	.space	1024
	.sdecl	'.bss.ASW_NVM.TEST_DATA_NVM_NATIVE_1024_2',data,cluster('TEST_DATA_NVM_NATIVE_1024_2')
	.sect	'.bss.ASW_NVM.TEST_DATA_NVM_NATIVE_1024_2'
	.global	TEST_DATA_NVM_NATIVE_1024_2
TEST_DATA_NVM_NATIVE_1024_2:	.type	object
	.size	TEST_DATA_NVM_NATIVE_1024_2,1024
	.space	1024
	.sdecl	'.data.ASW_NVM.modify_addr1',data,cluster('modify_addr1')
	.sect	'.data.ASW_NVM.modify_addr1'
	.align	4
modify_addr1:	.type	object
	.size	modify_addr1,4
	.word	512
	.sdecl	'.data.ASW_NVM.modify_addr2',data,cluster('modify_addr2')
	.sect	'.data.ASW_NVM.modify_addr2'
	.align	4
modify_addr2:	.type	object
	.size	modify_addr2,4
	.word	768
	.sdecl	'.data.ASW_NVM.InvalidData',data,cluster('InvalidData')
	.sect	'.data.ASW_NVM.InvalidData'
	.align	2
InvalidData:	.type	object
	.size	InvalidData,1400
	.space	1400
	.sdecl	'.data.ASW_NVM.MngData',data,cluster('MngData')
	.sect	'.data.ASW_NVM.MngData'
	.align	2
MngData:	.type	object
	.size	MngData,96
	.space	96
	.sdecl	'.data.ASW_NVM.CorruptData',data,cluster('CorruptData')
	.sect	'.data.ASW_NVM.CorruptData'
CorruptData:	.type	object
	.size	CorruptData,1
	.byte	202
	.sdecl	'.data.ASW_NVM.NvM_Count_PENDING',data,cluster('NvM_Count_PENDING')
	.sect	'.data.ASW_NVM.NvM_Count_PENDING'
	.align	4
NvM_Count_PENDING:	.type	object
	.size	NvM_Count_PENDING,4
	.space	4
	.sdecl	'.data.ASW_NVM.NvM_ErrorStatus',data,cluster('NvM_ErrorStatus')
	.sect	'.data.ASW_NVM.NvM_ErrorStatus'
NvM_ErrorStatus:	.type	object
	.size	NvM_ErrorStatus,2
	.space	2
	.sdecl	'.data.ASW_NVM.NvM_ElapsedTime',data,cluster('NvM_ElapsedTime')
	.sect	'.data.ASW_NVM.NvM_ElapsedTime'
	.align	4
NvM_ElapsedTime:	.type	object
	.size	NvM_ElapsedTime,4
	.space	4
	.sdecl	'.data.ASW_NVM.NvM_WriteFlag',data,cluster('NvM_WriteFlag')
	.sect	'.data.ASW_NVM.NvM_WriteFlag'
NvM_WriteFlag:	.type	object
	.size	NvM_WriteFlag,1
	.byte	1
	.sdecl	'.bss.ASW_NVM.CounterWriteBlock',data,cluster('CounterWriteBlock')
	.sect	'.bss.ASW_NVM.CounterWriteBlock'
	.global	CounterWriteBlock
CounterWriteBlock:	.type	object
	.size	CounterWriteBlock,1
	.space	1
	.sdecl	'.bss.ASW_NVM.status_NvM_test',data,cluster('status_NvM_test')
	.sect	'.bss.ASW_NVM.status_NvM_test'
	.global	status_NvM_test
	.align	4
status_NvM_test:	.type	object
	.size	status_NvM_test,4
	.space	4
	.sdecl	'.data.ASW_NVM.NvM_Test',data,cluster('NvM_Test')
	.sect	'.data.ASW_NVM.NvM_Test'
	.global	NvM_Test
	.align	4
NvM_Test:	.type	object
	.size	NvM_Test,4
	.space	4
	.sdecl	'.data.ASW_NVM._999001_MDF_State',data,cluster('_999001_MDF_State')
	.sect	'.data.ASW_NVM._999001_MDF_State'
	.align	4
_999001_MDF_State:	.type	object
	.size	_999001_MDF_State,4
	.space	4
	.calls	'RE_ASW_NVM_func','UpdatePIMWithValue'
	.calls	'RE_ASW_NVM_func','NvM_WriteBlock'
	.calls	'RE_ASW_NVM_func','NvM_ReadBlock'
	.calls	'RE_ASW_NVM_func','NvM_SwcIModifyNvBlock'
	.calls	'RE_ASW_NVM_func','NvM_Rb_GetStatus'
	.calls	'RE_ASW_NVM_func','NvM_SetRamBlockStatus'
	.calls	'RE_ASW_NVM_func','Fls_17_Pmu_GetJobResult'
	.calls	'RE_ASW_NVM_func','Fls_17_Pmu_Erase'
	.calls	'RE_ASW_NVM_func','Fee_LLCheckReorganizationNeed'
	.calls	'RE_ASW_NVM_func','NvM_GetErrorStatus'
	.calls	'RE_ASW_NVM_func','IC_SetCurrentTime'
	.calls	'RE_ASW_NVM_func','IC_GetElapsedTime'
	.calls	'NvM_SwcIModifyNvBlock','NvM_SwcICopyDataToRam'
	.calls	'NvM_SwcIModifyNvBlock','Fls_17_Pmu_GetJobResult'
	.calls	'NvM_SwcIModifyNvBlock','Fls_17_Pmu_Erase'
	.calls	'NvM_SwcIModifyNvBlock','Fls_17_Pmu_Write'
	.calls	'RE_ASW_NVM_func','',0
	.calls	'UpdatePIMWithValue','',0
	.calls	'NvM_SwcIModifyNvBlock','',0
	.extern	NvM_GetErrorStatus
	.extern	NvM_ReadBlock
	.extern	NvM_SetRamBlockStatus
	.extern	NvM_WriteBlock
	.extern	Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1
	.extern	Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2
	.extern	NvM_Rb_GetStatus
	.extern	Fls_17_Pmu_Erase
	.extern	Fls_17_Pmu_Write
	.extern	Fls_17_Pmu_GetJobResult
	.extern	IC_SetCurrentTime
	.extern	IC_GetElapsedTime
	.extern	shutdown_b
	.extern	Fee_LLCheckReorganizationNeed
	.calls	'NvM_SwcICopyDataToRam','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L117:
	.word	13586
	.half	3
	.word	.L118
	.byte	4
.L116:
	.byte	1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L119
.L173:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.word	125
	.byte	4
	.byte	'NvM_GetErrorStatus',0,1,235,1,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'BlockId',0,1,235,1,58
	.word	142
	.byte	5
	.byte	'RequestResultPtr',0,1,235,1,90
	.word	164
	.byte	0,6
	.byte	'void',0,3
	.word	245
	.byte	4
	.byte	'NvM_ReadBlock',0,1,181,2,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'BlockId',0,1,181,2,53
	.word	142
	.byte	5
	.byte	'NvM_DstPtr',0,1,181,2,68
	.word	251
	.byte	0,4
	.byte	'NvM_SetRamBlockStatus',0,1,238,1,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'BlockId',0,1,238,1,61
	.word	142
	.byte	5
	.byte	'BlockChanged',0,1,238,1,78
	.word	125
	.byte	0,7
	.word	245
	.byte	3
	.word	396
	.byte	4
	.byte	'NvM_WriteBlock',0,1,190,2,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'BlockId',0,1,190,2,54
	.word	142
	.byte	5
	.byte	'NvM_SrcPtr',0,1,190,2,75
	.word	401
	.byte	0
.L197:
	.byte	8,2,32,9,4,9
	.byte	'NVM_RB_STATUS_UNINIT',0,0,9
	.byte	'NVM_RB_STATUS_IDLE',0,1,9
	.byte	'NVM_RB_STATUS_BUSY',0,2,0,3
	.word	472
	.byte	4
	.byte	'NvM_Rb_GetStatus',0,1,255,1,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'StatusPtr',0,1,255,1,59
	.word	543
	.byte	0
.L176:
	.byte	3
	.word	125
.L178:
	.byte	2
	.byte	'unsigned int',0,4,7
.L184:
	.byte	10
	.byte	'NvM_SwcIModifyNvBlock_State_t',0,3,42,14,4,9
	.byte	'MDF_NONE',0,0,9
	.byte	'MDF_INIT_STATE',0,1,9
	.byte	'MDF_ERASE_BANK',0,2,9
	.byte	'MDF_MODIFY_DATA',0,3,9
	.byte	'MDF_UPDATE_DATA',0,4,9
	.byte	'MDF_UPDATE_MANANGMENT_INFO',0,5,9
	.byte	'MDF_UPDATE_COMPLETE',0,6,0,4
	.byte	'Fls_17_Pmu_Erase',0,4,155,6,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'TargetAddress',0,4,155,6,57
	.word	603
	.byte	5
	.byte	'Length',0,4,156,6,49
	.word	603
	.byte	0,7
	.word	125
	.byte	3
	.word	857
	.byte	4
	.byte	'Fls_17_Pmu_Write',0,4,184,6,23
	.word	125
	.byte	1,1,1,1,5
	.byte	'TargetAddress',0,4,184,6,57
	.word	603
	.byte	5
	.byte	'SourceAddressPtr',0,4,185,6,47
	.word	862
	.byte	5
	.byte	'Length',0,4,186,6,49
	.word	603
	.byte	0,8,5,31,9,4,9
	.byte	'MEMIF_JOB_OK',0,0,9
	.byte	'MEMIF_JOB_FAILED',0,1,9
	.byte	'MEMIF_JOB_PENDING',0,2,9
	.byte	'MEMIF_JOB_CANCELED',0,3,9
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,9
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,11
	.byte	'Fls_17_Pmu_GetJobResult',0,4,233,7,28
	.word	963
	.byte	1,1,1,1,12
	.byte	'IC_SetCurrentTime',0,6,14,40,1,1,1,1,11
	.byte	'IC_GetElapsedTime',0,6,15,42
	.word	603
	.byte	1,1,1,1,2
	.byte	'int',0,4,5,13
	.byte	'Fee_LLCheckReorganizationNeed',0,7,181,1,7
	.word	1186
	.byte	1,1,1,14,1,3
	.word	1235
	.byte	15
	.byte	'__codeptr',0,7,1,1
	.word	1237
	.byte	2
	.byte	'char',0,1,6,15
	.byte	'sint8',0,8,76,25
	.word	1260
	.byte	15
	.byte	'uint8',0,8,81,25
	.word	125
	.byte	15
	.byte	'uint16',0,8,91,25
	.word	142
	.byte	15
	.byte	'uint32',0,8,106,24
	.word	603
	.byte	2
	.byte	'unsigned long long int',0,8,7,15
	.byte	'uint64',0,8,111,30
	.word	1326
	.byte	15
	.byte	'boolean',0,8,127,25
	.word	125
	.byte	15
	.byte	'StatusType',0,9,191,1,27
	.word	125
	.byte	15
	.byte	'Std_ReturnType',0,9,199,1,15
	.word	125
	.byte	16,9,206,1,9,8,17
	.byte	'vendorID',0
	.word	142
	.byte	2,2,35,0,17
	.byte	'moduleID',0
	.word	142
	.byte	2,2,35,2,17
	.byte	'sw_major_version',0
	.word	125
	.byte	1,2,35,4,17
	.byte	'sw_minor_version',0
	.word	125
	.byte	1,2,35,5,17
	.byte	'sw_patch_version',0
	.word	125
	.byte	1,2,35,6,0,15
	.byte	'Std_VersionInfoType',0,9,213,1,3
	.word	1427
	.byte	15
	.byte	'PduIdType',0,10,22,19
	.word	142
	.byte	15
	.byte	'PduLengthType',0,10,26,19
	.word	142
	.byte	8,11,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,15
	.byte	'TpDataStateType',0,11,118,3
	.word	1617
	.byte	15
	.byte	'Can_IdType',0,12,32,16
	.word	603
	.byte	15
	.byte	'Can_HwHandleType',0,12,43,16
	.word	142
	.byte	16,13,93,9,8,17
	.byte	'Class',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'TIN',0
	.word	125
	.byte	1,2,35,1,17
	.byte	'ReturnAddress',0
	.word	603
	.byte	4,2,35,4,0,15
	.byte	'OsTrapInfoType',0,13,97,3
	.word	1737
	.byte	18,68
	.word	603
	.byte	19,16,0,16,13,154,1,9,68,17
	.byte	'store',0
	.word	1817
	.byte	68,2,35,0,0,18,68
	.word	1826
	.byte	19,0,0,15
	.byte	'Os_JumpBufType',0,13,156,1,3
	.word	1848
	.byte	15
	.byte	'Os_StackTraceType',0,13,174,1,18
	.word	603
	.byte	16,13,175,1,9,8,17
	.byte	'sp',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'ctx',0
	.word	603
	.byte	4,2,35,4,0,15
	.byte	'Os_StackValueType',0,13,175,1,63
	.word	1908
	.byte	15
	.byte	'Os_StackSizeType',0,13,176,1,27
	.word	1908
	.byte	20,1,1,3
	.word	1993
	.byte	15
	.byte	'Os_VoidVoidFunctionType',0,13,179,1,16
	.word	1996
	.byte	15
	.byte	'ApplicationType',0,13,193,1,23
	.word	125
	.byte	21
	.byte	'Os_ApplicationConfigurationType_s',0,13,198,1,16,2,17
	.byte	'app_id',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,1,0,15
	.byte	'Os_ApplicationConfigurationType',0,13,201,1,3
	.word	2059
	.byte	15
	.byte	'Os_CoreStateType',0,13,203,1,16
	.word	603
	.byte	15
	.byte	'AreaIdType',0,13,204,1,16
	.word	142
	.byte	15
	.byte	'Os_PeripheralAddressType',0,13,212,1,22
	.word	603
	.byte	15
	.byte	'TickType',0,13,221,1,22
	.word	603
	.byte	15
	.byte	'Os_StopwatchTickType',0,13,225,1,22
	.word	603
	.byte	3
	.word	603
	.byte	15
	.byte	'Os_Lockable',0,13,234,1,18
	.word	2301
	.byte	15
	.byte	'CoreIdType',0,13,236,1,16
	.word	142
	.byte	15
	.byte	'SpinlockIdType',0,13,237,1,16
	.word	142
	.byte	8,13,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,15
	.byte	'TryToGetSpinlockType',0,13,239,1,74
	.word	2371
	.byte	8,13,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,15
	.byte	'ApplicationStateType',0,13,174,2,92
	.word	2464
	.byte	22,1,1,23
	.word	125
	.byte	23
	.word	251
	.byte	0,3
	.word	2576
	.byte	15
	.byte	'Os_FunctionEntryType',0,13,183,2,16
	.word	2590
	.byte	21
	.byte	'Os_MeterInfoType_s',0,13,193,2,16,48,17
	.byte	'elapsed',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'previous',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'max',0
	.word	603
	.byte	4,2,35,8,17
	.byte	'cumulative',0
	.word	603
	.byte	4,2,35,12,17
	.byte	'stackbase',0
	.word	1908
	.byte	8,2,35,16,17
	.byte	'stackusage',0
	.word	1908
	.byte	8,2,35,24,17
	.byte	'stackmax',0
	.word	1908
	.byte	8,2,35,32,17
	.byte	'stackbudget',0
	.word	1908
	.byte	8,2,35,40,0,15
	.byte	'Os_MeterInfoType',0,13,202,2,3
	.word	2625
	.byte	3
	.word	2625
	.byte	15
	.byte	'Os_MeterInfoRefType',0,13,203,2,50
	.word	2823
	.byte	15
	.byte	'EventMaskType',0,13,206,2,15
	.word	125
	.byte	15
	.byte	'Os_imaskType',0,13,211,2,16
	.word	603
	.byte	21
	.byte	'Os_ISRDynType_s',0,13,213,2,16,48,17
	.byte	'meter',0
	.word	2625
	.byte	48,2,35,0,0,15
	.byte	'Os_ISRDynType',0,13,215,2,3
	.word	2902
	.byte	3
	.word	2902
	.byte	7
	.word	2963
	.byte	21
	.byte	'Os_ISRType_s',0,13,216,2,16,24,17
	.byte	'entry_function',0
	.word	2001
	.byte	4,2,35,0,17
	.byte	'dynamic',0
	.word	2968
	.byte	4,2,35,4,17
	.byte	'imask',0
	.word	603
	.byte	4,2,35,8,17
	.byte	'stackbudget',0
	.word	1908
	.byte	8,2,35,12,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,20,17
	.byte	'application',0
	.word	125
	.byte	1,2,35,21,0,15
	.byte	'Os_ISRType',0,13,223,2,3
	.word	2973
	.byte	3
	.word	1993
	.byte	7
	.word	2973
	.byte	3
	.word	3132
	.byte	15
	.byte	'ISRType',0,13,224,2,46
	.word	3137
	.byte	15
	.byte	'Os_bitmask',0,13,239,2,22
	.word	603
	.byte	15
	.byte	'Os_pset0Type',0,13,240,2,20
	.word	603
	.byte	15
	.byte	'Os_pset1Type',0,13,241,2,20
	.word	603
	.byte	15
	.byte	'Os_pset2Type',0,13,242,2,20
	.word	603
	.byte	24,13,243,2,9,4,17
	.byte	'p0',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'p1',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'p2',0
	.word	603
	.byte	4,2,35,0,0,15
	.byte	'Os_psetType',0,13,247,2,3
	.word	3245
	.byte	24,13,249,2,9,4,17
	.byte	't0',0
	.word	603
	.byte	4,2,35,0,17
	.byte	't1',0
	.word	603
	.byte	4,2,35,0,17
	.byte	't2',0
	.word	603
	.byte	4,2,35,0,0,15
	.byte	'Os_tpmaskType',0,13,253,2,3
	.word	3309
	.byte	15
	.byte	'Os_ActivationCountType',0,13,254,2,23
	.word	125
	.byte	21
	.byte	'Os_TaskDynType_s',0,13,128,3,16,120,17
	.byte	'terminate_jump_buf',0
	.word	1857
	.byte	68,2,35,0,17
	.byte	'meter',0
	.word	2625
	.byte	48,2,35,68,17
	.byte	'activation_count',0
	.word	125
	.byte	1,2,35,116,0,15
	.byte	'Os_TaskDynType',0,13,132,3,3
	.word	3407
	.byte	18,68
	.word	1826
	.byte	19,0,0,3
	.word	3407
	.byte	7
	.word	3533
	.byte	21
	.byte	'Os_TaskType_s',0,13,134,3,16,40,17
	.byte	'dynamic',0
	.word	3538
	.byte	4,2,35,0,17
	.byte	'entry_function',0
	.word	2001
	.byte	4,2,35,4,17
	.byte	'pset',0
	.word	3245
	.byte	4,2,35,8,17
	.byte	'base_tpmask',0
	.word	3309
	.byte	4,2,35,12,17
	.byte	'tpmask',0
	.word	3309
	.byte	4,2,35,16,17
	.byte	'core_id',0
	.word	142
	.byte	2,2,35,20,17
	.byte	'index',0
	.word	603
	.byte	4,2,35,24,17
	.byte	'stackbudget',0
	.word	1908
	.byte	8,2,35,28,17
	.byte	'activation_count',0
	.word	125
	.byte	1,2,35,36,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,37,17
	.byte	'application',0
	.word	125
	.byte	1,2,35,38,0,15
	.byte	'Os_TaskType',0,13,146,3,3
	.word	3543
	.byte	7
	.word	3543
	.byte	3
	.word	3793
	.byte	15
	.byte	'TaskType',0,13,147,3,47
	.word	3798
	.byte	10
	.byte	'Os_TaskStateType',0,13,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,15
	.byte	'TaskStateType',0,13,156,3,31
	.word	3821
	.byte	24,13,167,3,3,4,17
	.byte	'tpmask',0
	.word	3309
	.byte	4,2,35,0,0,21
	.byte	'Os_ResourceDynType_s',0,13,166,3,16,4,17
	.byte	'saved_priority',0
	.word	3908
	.byte	4,2,35,0,0,15
	.byte	'Os_ResourceDynType',0,13,170,3,3
	.word	3931
	.byte	3
	.word	3931
	.byte	7
	.word	4011
	.byte	21
	.byte	'Os_ResourceType_s',0,13,171,3,16,12,17
	.byte	'dynamic',0
	.word	4016
	.byte	4,2,35,0,17
	.byte	'tpmask',0
	.word	3309
	.byte	4,2,35,4,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,8,0,15
	.byte	'Os_ResourceType',0,13,175,3,3
	.word	4021
	.byte	16,13,181,3,9,12,17
	.byte	'maxallowedvalue',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'ticksperbase',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'mincycle',0
	.word	603
	.byte	4,2,35,8,0,15
	.byte	'AlarmBaseType',0,13,185,3,3
	.word	4120
	.byte	16,13,206,3,9,8,17
	.byte	'Running',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'Pending',0
	.word	125
	.byte	1,2,35,1,17
	.byte	'Delay',0
	.word	603
	.byte	4,2,35,4,0,15
	.byte	'Os_CounterStatusType',0,13,210,3,3
	.word	4215
	.byte	25
	.word	125
	.byte	1,1,3
	.word	4301
	.byte	15
	.byte	'Os_CounterIncrAdvType',0,13,217,3,22
	.word	4308
	.byte	21
	.byte	's_swd',0,13,222,3,12,4,17
	.byte	'count',0
	.word	603
	.byte	4,2,35,0,0,24,13,221,3,3,4,17
	.byte	'sw',0
	.word	4344
	.byte	4,2,35,0,0,21
	.byte	'Os_CounterDynType_s',0,13,220,3,16,4,17
	.byte	'type_dependent',0
	.word	4372
	.byte	4,2,35,0,0,15
	.byte	'Os_CounterDynType',0,13,226,3,3
	.word	4391
	.byte	3
	.word	4391
	.byte	7
	.word	4469
	.byte	21
	.byte	'Os_CounterType_s',0,13,227,3,16,28,17
	.byte	'dynamic',0
	.word	4474
	.byte	4,2,35,0,17
	.byte	'advincr',0
	.word	4313
	.byte	4,2,35,4,17
	.byte	'base',0
	.word	4120
	.byte	12,2,35,8,17
	.byte	'core',0
	.word	251
	.byte	4,2,35,20,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,24,17
	.byte	'application',0
	.word	125
	.byte	1,2,35,25,0,15
	.byte	'Os_CounterType',0,13,234,3,3
	.word	4479
	.byte	3
	.word	4301
	.byte	7
	.word	4479
	.byte	3
	.word	4631
	.byte	15
	.byte	'CounterType',0,13,235,3,52
	.word	4636
	.byte	10
	.byte	'Os_ScheduleTableStatusType',0,13,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,15
	.byte	'ScheduleTableStatusType',0,13,241,3,41
	.word	4662
	.byte	7
	.word	.L210-.L117
	.byte	3
	.word	4862
	.byte	15
	.byte	'ScheduleTableType',0,13,128,4,58
	.word	4867
	.byte	21
	.byte	'Os_ScheduleTableDynType_s',0,13,130,4,16,16,17
	.byte	'match',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'next',0
	.word	4872
	.byte	4,2,35,4,17
	.byte	'state',0
	.word	4662
	.byte	4,2,35,8,17
	.byte	'config',0
	.word	142
	.byte	2,2,35,12,0,3
	.word	4899
	.byte	7
	.word	4992
.L210:
	.byte	21
	.byte	'Os_ScheduleTableType_s',0,13,247,3,16,16,17
	.byte	'dynamic',0
	.word	4997
	.byte	4,2,35,0,17
	.byte	'counter',0
	.word	4641
	.byte	4,2,35,4,17
	.byte	'repeat',0
	.word	125
	.byte	1,2,35,8,17
	.byte	'config',0
	.word	142
	.byte	2,2,35,10,17
	.byte	'initial',0
	.word	125
	.byte	1,2,35,12,17
	.byte	'access',0
	.word	125
	.byte	1,2,35,13,17
	.byte	'application',0
	.word	125
	.byte	1,2,35,14,0,15
	.byte	'Os_ScheduleTableType',0,13,255,3,3
	.word	5002
	.byte	7
	.word	5002
	.byte	3
	.word	5182
	.byte	7
	.word	4479
	.byte	3
	.word	5192
	.byte	26
	.word	2306
	.byte	26
	.word	3245
	.byte	26
	.word	3142
	.byte	26
	.word	3803
	.byte	26
	.word	3309
	.byte	26
	.word	125
	.byte	26
	.word	3803
	.byte	21
	.byte	'Os_ControlledCoreType_s',0,13,251,6,16,112,17
	.byte	'TrapInfo',0
	.word	1737
	.byte	8,2,35,0,17
	.byte	'lock_taskaccess',0
	.word	5202
	.byte	4,2,35,8,17
	.byte	'ReadyTasks',0
	.word	5207
	.byte	4,2,35,12,17
	.byte	'RunningISR',0
	.word	5212
	.byte	4,2,35,16,17
	.byte	'RunningTask',0
	.word	5217
	.byte	4,2,35,20,17
	.byte	'RunningTPMask',0
	.word	5222
	.byte	4,2,35,24,17
	.byte	'CurrentMeteredObject',0
	.word	2828
	.byte	4,2,35,28,17
	.byte	'IdleMeter',0
	.word	2625
	.byte	48,2,35,32,17
	.byte	'AppAccess',0
	.word	125
	.byte	1,2,35,80,17
	.byte	'AppOverride',0
	.word	5227
	.byte	1,2,35,81,17
	.byte	'GetStackValueAdjust',0
	.word	1908
	.byte	8,2,35,84,17
	.byte	'InErrorHook',0
	.word	125
	.byte	1,2,35,92,17
	.byte	'ChainTaskRef',0
	.word	5232
	.byte	4,2,35,96,17
	.byte	'GetStackUsageAdjust',0
	.word	1908
	.byte	8,2,35,100,17
	.byte	'InProtectionHook',0
	.word	125
	.byte	1,2,35,108,17
	.byte	'CoreIsActive',0
	.word	125
	.byte	1,2,35,109,17
	.byte	'InShutdownHook',0
	.word	125
	.byte	1,2,35,110,0,15
	.byte	'Os_ControlledCoreType',0,13,141,7,3
	.word	5237
	.byte	3
	.word	603
	.byte	7
	.word	2973
	.byte	3
	.word	5693
	.byte	7
	.word	3543
	.byte	3
	.word	5703
	.byte	3
	.word	2625
	.byte	21
	.byte	'Os_AnyCoreType_s',0,13,151,7,16,96,17
	.byte	'DisableAllImask',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'SuspendAllImask',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'SuspendOSImask',0
	.word	603
	.byte	4,2,35,8,17
	.byte	'DisableAllCount',0
	.word	603
	.byte	4,2,35,12,17
	.byte	'SuspendAllCount',0
	.word	603
	.byte	4,2,35,16,17
	.byte	'SuspendOSCount',0
	.word	603
	.byte	4,2,35,20,17
	.byte	'RestartJumpBuf',0
	.word	1857
	.byte	68,2,35,24,17
	.byte	'Restartable',0
	.word	125
	.byte	1,2,35,92,0,15
	.byte	'Os_AnyCoreType',0,13,160,7,3
	.word	5718
	.byte	15
	.byte	'unsigned_int',0,14,116,22
	.word	603
	.byte	15
	.byte	'Can_TxObjPriorityClassType',0,15,219,3,16
	.word	603
	.byte	21
	.byte	'Can_TxHwObjectConfigType',0,15,231,3,16,8,17
	.byte	'MsgObjId',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'HwControllerId',0
	.word	125
	.byte	1,2,35,1,17
	.byte	'TxObjPriorityClass',0
	.word	603
	.byte	4,2,35,4,0,15
	.byte	'Can_TxHwObjectConfigType',0,15,252,3,3
	.word	6016
	.byte	21
	.byte	'Can_RxHwObjectConfigType',0,15,129,4,16,12,17
	.byte	'MaskRef',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'MsgId',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'MsgObjId',0
	.word	125
	.byte	1,2,35,8,17
	.byte	'HwControllerId',0
	.word	125
	.byte	1,2,35,9,0,15
	.byte	'Can_RxHwObjectConfigType',0,15,147,4,3
	.word	6152
	.byte	18,4
	.word	125
	.byte	19,3,0,21
	.byte	'Can_ControllerMOMapConfigType',0,15,181,4,16,4,17
	.byte	'ControllerMOMap',0
	.word	6292
	.byte	4,2,35,0,0,15
	.byte	'Can_ControllerMOMapConfigType',0,15,184,4,3
	.word	6301
	.byte	21
	.byte	'Can_NPCRValueType',0,15,188,4,16,2,17
	.byte	'Can_NPCRValue',0
	.word	142
	.byte	2,2,35,0,0,15
	.byte	'Can_NPCRValueType',0,15,191,4,3
	.word	6402
	.byte	21
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,194,4,16,8,17
	.byte	'CanControllerBaudrate',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'CanControllerBaudrateCfg',0
	.word	142
	.byte	2,2,35,4,0,15
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,198,4,3
	.word	6477
	.byte	7
	.word	6477
	.byte	3
	.word	6642
	.byte	21
	.byte	'Can_BaudrateConfigPtrType',0,15,201,4,16,4,17
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6647
	.byte	4,2,35,0,0,15
	.byte	'Can_BaudrateConfigPtrType',0,15,204,4,3
	.word	6652
	.byte	21
	.byte	'Can_EventHandlingType',0,15,226,4,16,4,17
	.byte	'CanEventType',0
	.word	6292
	.byte	4,2,35,0,0,15
	.byte	'Can_EventHandlingType',0,15,229,4,3
	.word	6752
	.byte	15
	.byte	'Rte_TransformerErrorCode',0,16,130,1,15
	.word	125
	.byte	15
	.byte	'Rte_TransformerClass',0,16,131,1,15
	.word	125
	.byte	16,16,168,1,9,12,17
	.byte	'in',0
	.word	251
	.byte	4,2,35,0,17
	.byte	'out',0
	.word	251
	.byte	4,2,35,4,17
	.byte	'used',0
	.word	142
	.byte	2,2,35,8,17
	.byte	'lost_data',0
	.word	125
	.byte	1,2,35,10,0,15
	.byte	'Rte_QDynType',0,16,173,1,3
	.word	6898
	.byte	8,16,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,15
	.byte	'Rte_NotificationType',0,16,182,1,3
	.word	6985
	.byte	3
	.word	6898
	.byte	21
	.byte	'Rte_QCmnType',0,16,184,1,16,24,17
	.byte	'dynamic',0
	.word	7083
	.byte	4,2,35,0,17
	.byte	'copy',0
	.word	125
	.byte	1,2,35,4,17
	.byte	'queue_size',0
	.word	142
	.byte	2,2,35,6,17
	.byte	'element_size',0
	.word	142
	.byte	2,2,35,8,17
	.byte	'buffer_start',0
	.word	251
	.byte	4,2,35,12,17
	.byte	'buffer_end',0
	.word	251
	.byte	4,2,35,16,17
	.byte	'notification_type',0
	.word	6985
	.byte	4,2,35,20,0,15
	.byte	'Rte_QCmnType',0,16,192,1,3
	.word	7088
	.byte	15
	.byte	'Rte_AlarmRefType',0,16,224,1,32
	.word	603
	.byte	15
	.byte	'Rte_AlarmIndexType',0,16,226,1,32
	.word	142
	.byte	15
	.byte	'Rte_TaskRefType',0,17,184,1,32
	.word	3803
	.byte	15
	.byte	'Rte_EventRefType',0,17,185,1,32
	.word	125
	.byte	15
	.byte	'Rte_EventType',0,17,186,1,32
	.word	603
	.byte	15
	.byte	'Rte_REActCounterType',0,17,252,1,15
	.word	125
	.byte	3
	.word	125
	.byte	15
	.byte	'Rte_REActCounterRefType',0,17,253,1,58
	.word	7430
	.byte	16,17,255,1,9,8,17
	.byte	'task',0
	.word	7326
	.byte	4,2,35,0,17
	.byte	'acnt',0
	.word	7435
	.byte	4,2,35,4,0,15
	.byte	'Rte_REContainerType',0,17,130,2,3
	.word	7468
	.byte	7
	.word	3543
	.byte	3
	.word	7532
	.byte	3
	.word	125
	.byte	7
	.word	7468
	.byte	3
	.word	7547
	.byte	15
	.byte	'Rte_REContainerRefType',0,17,132,2,60
	.word	7552
	.byte	15
	.byte	'Rte_MSICounterType',0,17,149,2,16
	.word	142
	.byte	3
	.word	142
	.byte	15
	.byte	'Rte_MSICounterRefType',0,17,150,2,56
	.word	7617
	.byte	15
	.byte	'Rte_MSIPendingFlagType',0,17,152,2,17
	.word	125
	.byte	3
	.word	125
	.byte	15
	.byte	'Rte_MSIPendingFlagRefType',0,17,153,2,60
	.word	7685
	.byte	16,17,163,2,9,24,17
	.byte	'counter',0
	.word	7622
	.byte	4,2,35,0,17
	.byte	'incCounter',0
	.word	125
	.byte	1,2,35,4,17
	.byte	'pending',0
	.word	7690
	.byte	4,2,35,8,17
	.byte	'osTask',0
	.word	7326
	.byte	4,2,35,12,17
	.byte	'acnt',0
	.word	7435
	.byte	4,2,35,16,17
	.byte	'osEvent',0
	.word	125
	.byte	1,2,35,20,17
	.byte	'MSIInit',0
	.word	142
	.byte	2,2,35,22,0,15
	.byte	'Rte_MSITableEntry',0,17,172,2,3
	.word	7725
	.byte	3
	.word	142
	.byte	3
	.word	125
	.byte	15
	.byte	'Rte_TaskArrayIndex',0,17,179,2,16
	.word	125
	.byte	15
	.byte	'Rte_NrWaitingTasks',0,17,180,2,16
	.word	125
	.byte	16,17,182,2,9,4,17
	.byte	'pending',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'count',0
	.word	125
	.byte	1,2,35,1,17
	.byte	'firstWaitingTask',0
	.word	125
	.byte	1,2,35,2,0,15
	.byte	'Rte_WaitableDatum',0,17,186,2,3
	.word	7943
	.byte	3
	.word	7943
	.byte	16,17,226,2,9,12,17
	.byte	'event_id',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'wd',0
	.word	8035
	.byte	4,2,35,4,17
	.byte	'timeout',0
	.word	603
	.byte	4,2,35,8,0,15
	.byte	'Rte_WOWP_NotificationType',0,17,230,2,3
	.word	8040
	.byte	7
	.word	8040
	.byte	3
	.word	8129
	.byte	15
	.byte	'Rte_WOWP_NotificationRefType',0,17,232,2,66
	.word	8134
	.byte	15
	.byte	'Rte_ARE_NotificationType',0,17,234,2,29
	.word	7468
	.byte	21
	.byte	'Rte_QTaskType',0,17,243,2,16,28,17
	.byte	'cmn',0
	.word	7088
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	7326
	.byte	4,2,35,24,0,15
	.byte	'Rte_QTaskType',0,17,246,2,3
	.word	8211
	.byte	21
	.byte	'Rte_QREType',0,17,250,2,16,28,17
	.byte	'cmn',0
	.word	7088
	.byte	24,2,35,0,17
	.byte	're',0
	.word	7557
	.byte	4,2,35,24,0,15
	.byte	'Rte_QREType',0,17,253,2,3
	.word	8282
	.byte	7
	.word	7468
	.byte	3
	.word	8347
	.byte	21
	.byte	'Rte_QWWPType',0,17,129,3,16,28,17
	.byte	'cmn',0
	.word	7088
	.byte	24,2,35,0,17
	.byte	'wwp',0
	.word	8139
	.byte	4,2,35,24,0,15
	.byte	'Rte_QWWPType',0,17,132,3,3
	.word	8357
	.byte	7
	.word	8040
	.byte	3
	.word	8425
	.byte	21
	.byte	'Rte_QEvType',0,17,136,3,16,36,17
	.byte	'cmn',0
	.word	7088
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	7326
	.byte	4,2,35,24,17
	.byte	'mask',0
	.word	125
	.byte	1,2,35,28,17
	.byte	'acnt',0
	.word	7435
	.byte	4,2,35,32,0,15
	.byte	'Rte_QEvType',0,17,141,3,3
	.word	8435
	.byte	21
	.byte	'Rte_QMSIType',0,17,145,3,16,48,17
	.byte	'cmn',0
	.word	7088
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	7326
	.byte	4,2,35,24,17
	.byte	'mask',0
	.word	125
	.byte	1,2,35,28,17
	.byte	'acnt',0
	.word	7435
	.byte	4,2,35,32,17
	.byte	'msiCounter',0
	.word	7622
	.byte	4,2,35,36,17
	.byte	'msiPending',0
	.word	7690
	.byte	4,2,35,40,17
	.byte	'msiLimit',0
	.word	142
	.byte	2,2,35,44,0,15
	.byte	'Rte_QMSIType',0,17,153,3,3
	.word	8530
.L193:
	.byte	18,128,8
	.word	125
	.byte	19,255,7,0,15
	.byte	'Impl_NVM_DstPtrType_1024',0,18,50,15
	.word	8685
	.byte	15
	.byte	'CanIf_u32_impl',0,18,69,16
	.word	603
	.byte	15
	.byte	'CanIf_u16_impl',0,18,71,16
	.word	142
	.byte	15
	.byte	'CanIf_u8_impl',0,18,73,15
	.word	125
	.byte	15
	.byte	'CanIf_ControllerModeType_Enum_impl',0,18,88,15
	.word	125
	.byte	15
	.byte	'CanIf_PduModeType_Enum_impl',0,18,90,15
	.word	125
	.byte	16,18,92,9,2,17
	.byte	'DeviceMode',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'ChannelMode',0
	.word	125
	.byte	1,2,35,1,0,15
	.byte	'CanIf_ControllerStateType_struct_impl',0,18,95,3
	.word	8876
	.byte	15
	.byte	'CanIf_NotifStatusType_Enum_impl',0,18,100,15
	.word	125
	.byte	15
	.byte	'CanSM_boolean_Impl',0,18,120,15
	.word	125
	.byte	15
	.byte	'CanSM_u8_Impl',0,18,123,15
	.word	125
	.byte	15
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,18,128,1,15
	.word	125
	.byte	15
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,18,132,1,15
	.word	125
	.byte	15
	.byte	'CanSM_u16_Impl',0,18,136,1,16
	.word	142
	.byte	15
	.byte	'CanSM_TimerStateType_Enum_impl',0,18,138,1,15
	.word	125
	.byte	16,18,140,1,9,4,17
	.byte	'cntTick_u16',0
	.word	142
	.byte	2,2,35,0,17
	.byte	'stTimer',0
	.word	125
	.byte	1,2,35,2,0,15
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,18,143,1,3
	.word	9217
	.byte	15
	.byte	'Com_impl_u16',0,18,154,1,16
	.word	142
	.byte	15
	.byte	'Com_impl_u8',0,18,157,1,15
	.word	125
	.byte	15
	.byte	'ComM_uint32_Impl',0,18,173,1,16
	.word	603
	.byte	15
	.byte	'ComM_uint16_Impl',0,18,175,1,16
	.word	142
	.byte	15
	.byte	'ComM_uint8_Impl',0,18,177,1,15
	.word	125
	.byte	15
	.byte	'ComM_bool_Impl',0,18,179,1,15
	.word	125
	.byte	16,18,181,1,9,24,17
	.byte	'ChannelState_e',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'LightTimeoutCtr_u32',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	142
	.byte	2,2,35,8,17
	.byte	'ChannelMode_u8',0
	.word	125
	.byte	1,2,35,10,17
	.byte	'BusSmMode_u8',0
	.word	125
	.byte	1,2,35,11,17
	.byte	'UserRequestCtr_u8',0
	.word	125
	.byte	1,2,35,12,17
	.byte	'PassiveRequestState_u8',0
	.word	125
	.byte	1,2,35,13,17
	.byte	'PncRequestCtr_u8',0
	.word	125
	.byte	1,2,35,14,17
	.byte	'InhibitionReqStatus_u8',0
	.word	125
	.byte	1,2,35,15,17
	.byte	'NmNetworkRequestStatus_b',0
	.word	125
	.byte	1,2,35,16,17
	.byte	'DiagnosticRequestState_b',0
	.word	125
	.byte	1,2,35,17,17
	.byte	'CommunicationAllowed_b',0
	.word	125
	.byte	1,2,35,18,17
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	125
	.byte	1,2,35,19,17
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	125
	.byte	1,2,35,20,17
	.byte	'NmNetworkModeStatus_b',0
	.word	125
	.byte	1,2,35,21,0,15
	.byte	'ComM_ChannelStruct_Impl',0,18,197,1,3
	.word	9449
	.byte	16,18,206,1,9,10,17
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	142
	.byte	2,2,35,0,17
	.byte	'LimitToNoComCtr_u16',0
	.word	142
	.byte	2,2,35,2,17
	.byte	'RequestedUserMode_t',0
	.word	125
	.byte	1,2,35,4,17
	.byte	'IndicatedUserMode_t',0
	.word	125
	.byte	1,2,35,5,17
	.byte	'numChannelsInFullCom_u8',0
	.word	125
	.byte	1,2,35,6,17
	.byte	'numChannelsInSilentCom_u8',0
	.word	125
	.byte	1,2,35,7,17
	.byte	'numChannelsInNoCom_u8',0
	.word	125
	.byte	1,2,35,8,0,15
	.byte	'ComM_UserStruct_Impl',0,18,214,1,3
	.word	9953
	.byte	15
	.byte	'Dcm_IOOperationResponseType',0,18,252,1,15
	.word	125
	.byte	15
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	18,138,2,15
	.word	125
	.byte	15
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,18,146,2,15
	.word	125
	.byte	15
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,18,150,2,15
	.word	125
	.byte	15
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,18,154,2,15
	.word	125
	.byte	15
	.byte	'NvM_BlockIdType',0,18,215,2,16
	.word	142
	.byte	15
	.byte	'NvM_RequestResultType',0,18,225,2,15
	.word	125
	.byte	15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,18,243,3,34
	.word	8696
	.byte	18,128,8
	.word	125
	.byte	19,255,7,0,15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,18,246,3,34
	.word	8696
	.byte	27
	.byte	'Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_1',0,19,145,1,78
	.word	10695
	.byte	1,1,18,128,8
	.word	125
	.byte	19,255,7,0,27
	.byte	'Rte_CPim_ASW_NVM_ASW_NVM_BlockNative_1024_2',0,19,150,1,81
	.word	10765
	.byte	1,1,18,128,8
	.word	125
	.byte	19,255,7,0,15
	.byte	'MemIf_JobResultType',0,5,39,2
	.word	963
	.byte	8,5,41,9,4,9
	.byte	'MEMIF_MODE_SLOW',0,0,9
	.byte	'MEMIF_MODE_FAST',0,1,0,15
	.byte	'MemIf_ModeType',0,5,45,2
	.word	10987
	.byte	15
	.byte	'NvM_Rb_StatusType',0,2,37,3
	.word	472
	.byte	8,2,49,9,4,9
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,9
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,9
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,9
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,9
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,9
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,9
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,15
	.byte	'NvM_Prv_Activities_ten',0,2,58,3
	.word	11078
	.byte	8,2,104,9,4,9
	.byte	'NvM_Prv_idJob_Idle_e',0,0,9
	.byte	'NvM_Prv_idJob_Read_e',0,1,9
	.byte	'NvM_Prv_idJob_Write_e',0,2,9
	.byte	'NvM_Prv_idJob_Erase_e',0,3,9
	.byte	'NvM_Prv_idJob_Restore_e',0,4,9
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,9
	.byte	'NvM_Prv_idJob_Validate_e',0,6,9
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,9
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,9
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,9
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,9
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,9
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,9
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,15
	.byte	'NvM_Prv_idJob_ten',0,2,115,3
	.word	11319
	.byte	15
	.byte	'NvM_Prv_ServiceBit_tuo',0,2,168,1,16
	.word	142
	.byte	15
	.byte	'NvM_Prv_idService_tuo',0,2,173,1,15
	.word	125
	.byte	15
	.byte	'NvM_Prv_idQueue_tuo',0,2,206,1,15
	.word	125
	.byte	16,2,210,1,9,12,17
	.byte	'idService_uo',0
	.word	125
	.byte	1,2,35,0,17
	.byte	'idBlock_uo',0
	.word	142
	.byte	2,2,35,2,17
	.byte	'ServiceBit_uo',0
	.word	142
	.byte	2,2,35,4,17
	.byte	'BlockData_pv',0
	.word	251
	.byte	4,2,35,8,0,15
	.byte	'NvM_Prv_QueueEntry_tst',0,2,225,1,3
	.word	11876
	.byte	16,2,227,1,9,20,17
	.byte	'idJob_en',0
	.word	11319
	.byte	4,2,35,0,17
	.byte	'idBlock_uo',0
	.word	142
	.byte	2,2,35,4,17
	.byte	'RamBlock_pu8',0
	.word	598
	.byte	4,2,35,8,17
	.byte	'idxDataset_u8',0
	.word	125
	.byte	1,2,35,12,17
	.byte	'Result_en',0
	.word	963
	.byte	4,2,35,16,0,15
	.byte	'NvM_Prv_JobData_tst',0,2,240,1,3
	.word	12002
.L198:
	.byte	10
	.byte	'NvM_Test_t',0,3,19,14,4,9
	.byte	'SWC_ZERO',0,0,9
	.byte	'ASW_WRITE_BLOCKNATIVE_1024_1',0,1,9
	.byte	'ASW_READ_BLOCKNATIVE_1024_1',0,2,9
	.byte	'ASW_WRITE_BLOCKNATIVE_1024_2',0,3,9
	.byte	'ASW_READ_BLOCKNATIVE_1024_2',0,4,9
	.byte	'ASW_WRITE_ALL_BLOCK_1024',0,5,9
	.byte	'ASW_READ_ALL_BLOCK_1024',0,6,9
	.byte	'ASW_CORRUPT_BLOCKNATIVE_1024_1',0,7,9
	.byte	'ASW_CORRUPT_BLOCKNATIVE_1024_2',0,8,9
	.byte	'ASW_WRITE_ALL_BLKS_REQ',0,9,9
	.byte	'SWITCH_PAGE',0,10,9
	.byte	'ERASE_BANK',0,11,9
	.byte	'ERASE_SECTOR_0',0,12,9
	.byte	'ERASE_SECTOR_1',0,13,9
	.byte	'ERASE_SECTOR_2',0,14,9
	.byte	'ERASE_SECTOR_3',0,15,9
	.byte	'ASW_FILL_SECTOR_WITH_FULL_DATA',0,16,9
	.byte	'ASW_WAIT_FOR_BLOCK_REQUEST_FINISHED',0,17,9
	.byte	'ASW_WRITE_BLOCK_AND_CALCULATE_TIME',0,18,9
	.byte	'ASW_READ_BLOCK_AND_CALCULATE_TIME',0,19,0,15
	.byte	'NvM_Test_t',0,3,40,2
	.word	12140
.L191:
	.byte	7
	.word	8685
.L192:
	.byte	7
	.word	8685
	.byte	15
	.byte	'Fls_AddressType',0,4,171,3,16
	.word	603
	.byte	15
	.byte	'Fls_LengthType',0,4,173,3,16
	.word	603
	.byte	21
	.byte	'Fls_JobStartType',0,4,175,3,16,1,28
	.byte	'Reserved1',0,1
	.word	125
	.byte	1,7,2,35,0,28
	.byte	'Write',0,1
	.word	125
	.byte	1,6,2,35,0,28
	.byte	'Erase',0,1
	.word	125
	.byte	1,5,2,35,0,28
	.byte	'Read',0,1
	.word	125
	.byte	1,4,2,35,0,28
	.byte	'Compare',0,1
	.word	125
	.byte	1,3,2,35,0,28
	.byte	'Reserved2',0,1
	.word	125
	.byte	3,0,2,35,0,0,15
	.byte	'Fls_JobStartType',0,4,183,3,3
	.word	12751
	.byte	15
	.byte	'Fls_17_Pmu_Job_Type',0,4,187,3,15
	.word	125
	.byte	18,2
	.word	125
	.byte	19,1,0,21
	.byte	'Fls_17_Pmu_StateType',0,4,198,3,16,48,17
	.byte	'FlsReadAddress',0
	.word	603
	.byte	4,2,35,0,17
	.byte	'FlsWriteAddress',0
	.word	603
	.byte	4,2,35,4,17
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	603
	.byte	4,2,35,8,17
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	603
	.byte	4,2,35,12,17
	.byte	'FlsReadLength',0
	.word	603
	.byte	4,2,35,16,17
	.byte	'FlsWriteLength',0
	.word	603
	.byte	4,2,35,20,17
	.byte	'FlsReadBufferPtr',0
	.word	598
	.byte	4,2,35,24,17
	.byte	'FlsWriteBufferPtr',0
	.word	862
	.byte	4,2,35,28,17
	.byte	'FlsJobResult',0
	.word	963
	.byte	4,2,35,32,17
	.byte	'FlsMode',0
	.word	10987
	.byte	4,2,35,36,17
	.byte	'NotifCaller',0
	.word	125
	.byte	1,2,35,40,17
	.byte	'JobStarted',0
	.word	12751
	.byte	1,2,35,41,17
	.byte	'FlsJobType',0
	.word	12941
	.byte	2,2,35,42,17
	.byte	'FlsOper',0
	.word	125
	.byte	1,2,35,44,17
	.byte	'FlsTimeoutErr',0
	.word	125
	.byte	1,2,35,45,17
	.byte	'FlsTimeoutControl',0
	.word	125
	.byte	1,2,35,46,0,15
	.byte	'Fls_17_Pmu_StateType',0,4,130,4,3
	.word	12950
	.byte	15
	.byte	'Fls_NotifFunctionPtrType',0,4,137,4,16
	.word	1996
	.byte	7
	.word	603
	.byte	3
	.word	13428
	.byte	22,1,1,23
	.word	603
	.byte	23
	.word	603
	.byte	23
	.word	13433
	.byte	23
	.word	125
	.byte	0,3
	.word	13438
	.byte	15
	.byte	'Fls_WriteCmdPtrType',0,4,139,4,16
	.word	13462
	.byte	22,1,1,23
	.word	603
	.byte	0,3
	.word	13496
	.byte	15
	.byte	'Fls_EraseCmdPtrType',0,4,144,4,16
	.word	13505
.L194:
	.byte	18,248,10
	.word	125
	.byte	19,247,10,0
.L195:
	.byte	18,96
	.word	125
	.byte	19,95,0
.L196:
	.byte	18,2
	.word	125
	.byte	19,1,0,27
	.byte	'shutdown_b',0,7,54,14
	.word	125
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L118:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,58
	.byte	15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,59,0,3,8,0,0
	.byte	7,38,0,73,19,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,4,1,3,8,58,15,59,15,57,15,11
	.byte	15,0,0,11,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,12,46,0,3,8,58,15,59,15,57,15,54
	.byte	15,39,12,63,12,60,12,0,0,13,46,0,3,8,58,15,59,15,57,15,73,19,54,15,63,12,60,12,0,0,14,21,0,54,15,0,0,15
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,16,19,1,58,15,59,15,57,15,11,15,0,0,17,13,0,3,8,73,19,11,15,56,9
	.byte	0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,21,0,54,15,39,12,0,0,21,19,1,3,8,58,15,59,15,57,15,11
	.byte	15,0,0,22,21,1,54,15,39,12,0,0,23,5,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,21,0,73,19,54,15
	.byte	39,12,0,0,26,53,0,73,19,0,0,27,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,28,13,0,3,8,11,15,73,19
	.byte	13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L119:
	.word	.L212-.L211
.L211:
	.half	3
	.word	.L214-.L213
.L213:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\ASW\\ASW_NVM\\api\\ASW_NVM.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\Integration\\ECU\\include\\TimingCalculation.h',0,0,0,0
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_ASW_NVM.h',0,0,0,0,0
.L214:
.L212:
	.sdecl	'.debug_info',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_info'
.L120:
	.word	205
	.half	3
	.word	.L121
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L123,.L122
	.byte	2
	.word	.L116
	.byte	3
	.byte	'RE_ASW_NVM_func',0,1,59,27,1,1,1
	.word	.L109,.L172,.L108
	.byte	4
	.word	.L109,.L172
	.byte	5
	.byte	'retVal',0,1,64,10
	.word	.L173,.L174
	.byte	6
	.word	.L17,.L21
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_abbrev'
.L121:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,0
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_line'
.L122:
	.word	.L216-.L215
.L215:
	.half	3
	.word	.L218-.L217
.L217:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0,0,0,0,0
.L218:
	.byte	5,10,7,0,5,2
	.word	.L109
	.byte	3,193,0,1,5,2,9
	.half	.L219-.L109
	.byte	1,5,66,9
	.half	.L4-.L219
	.byte	3,4,1,5,22,9
	.half	.L220-.L4
	.byte	1,5,78,9
	.half	.L221-.L220
	.byte	1,5,3,9
	.half	.L222-.L221
	.byte	3,1,1,5,14,9
	.half	.L223-.L222
	.byte	3,1,1,5,12,9
	.half	.L224-.L223
	.byte	1,5,3,9
	.half	.L225-.L224
	.byte	3,1,1,5,50,9
	.half	.L5-.L225
	.byte	3,2,1,5,22,9
	.half	.L226-.L5
	.byte	1,5,62,9
	.half	.L227-.L226
	.byte	1,5,3,9
	.half	.L228-.L227
	.byte	3,1,1,5,20,9
	.half	.L229-.L228
	.byte	3,1,1,5,18,9
	.half	.L230-.L229
	.byte	1,5,3,9
	.half	.L231-.L230
	.byte	3,1,1,5,66,9
	.half	.L6-.L231
	.byte	3,3,1,5,22,9
	.half	.L232-.L6
	.byte	1,5,78,9
	.half	.L233-.L232
	.byte	1,5,3,9
	.half	.L234-.L233
	.byte	3,1,1,5,14,9
	.half	.L235-.L234
	.byte	3,1,1,5,12,9
	.half	.L236-.L235
	.byte	1,5,3,9
	.half	.L237-.L236
	.byte	3,1,1,5,50,9
	.half	.L7-.L237
	.byte	3,2,1,5,22,9
	.half	.L238-.L7
	.byte	1,5,62,9
	.half	.L239-.L238
	.byte	1,5,3,9
	.half	.L240-.L239
	.byte	3,1,1,5,14,9
	.half	.L241-.L240
	.byte	3,1,1,5,12,9
	.half	.L242-.L241
	.byte	1,5,3,9
	.half	.L243-.L242
	.byte	3,1,1,5,66,9
	.half	.L8-.L243
	.byte	3,3,1,5,22,9
	.half	.L244-.L8
	.byte	1,5,78,9
	.half	.L245-.L244
	.byte	1,5,3,9
	.half	.L246-.L245
	.byte	3,1,1,5,22,9
	.half	.L247-.L246
	.byte	3,3,1,5,78,9
	.half	.L248-.L247
	.byte	1,5,3,9
	.half	.L249-.L248
	.byte	3,1,1,5,14,9
	.half	.L250-.L249
	.byte	3,1,1,5,12,9
	.half	.L251-.L250
	.byte	1,5,3,9
	.half	.L252-.L251
	.byte	3,1,1,5,56,9
	.half	.L9-.L252
	.byte	3,3,1,5,28,9
	.half	.L253-.L9
	.byte	1,5,62,9
	.half	.L254-.L253
	.byte	1,5,9,9
	.half	.L255-.L254
	.byte	3,1,1,5,28,9
	.half	.L256-.L255
	.byte	3,2,1,5,62,9
	.half	.L257-.L256
	.byte	1,5,9,9
	.half	.L258-.L257
	.byte	3,1,1,5,14,9
	.half	.L259-.L258
	.byte	3,1,1,5,12,9
	.half	.L260-.L259
	.byte	1,5,3,9
	.half	.L261-.L260
	.byte	3,2,1,5,34,9
	.half	.L10-.L261
	.byte	3,3,1,5,3,9
	.half	.L199-.L10
	.byte	3,1,1,5,15,7,9
	.half	.L262-.L199
	.byte	3,1,1,5,13,9
	.half	.L263-.L262
	.byte	1,5,3,9
	.half	.L27-.L263
	.byte	3,2,1,5,34,9
	.half	.L11-.L27
	.byte	3,2,1,5,3,9
	.half	.L200-.L11
	.byte	3,1,1,5,15,7,9
	.half	.L264-.L200
	.byte	3,1,1,5,13,9
	.half	.L265-.L264
	.byte	1,5,3,9
	.half	.L29-.L265
	.byte	3,2,1,5,21,9
	.half	.L13-.L29
	.byte	3,2,1,5,9,9
	.half	.L266-.L13
	.byte	3,1,1,5,8,9
	.half	.L267-.L266
	.byte	1,5,69,7,9
	.half	.L268-.L267
	.byte	1,5,49,7,9
	.half	.L31-.L268
	.byte	1,5,4,9
	.half	.L32-.L31
	.byte	3,6,1,5,21,9
	.half	.L269-.L32
	.byte	1,5,67,9
	.half	.L270-.L269
	.byte	3,1,1,5,23,9
	.half	.L271-.L270
	.byte	1,5,79,9
	.half	.L272-.L271
	.byte	1,5,4,9
	.half	.L273-.L272
	.byte	3,1,1,5,7,9
	.half	.L274-.L273
	.byte	3,1,1,5,26,9
	.half	.L275-.L274
	.byte	1,5,4,9
	.half	.L276-.L275
	.byte	1,5,23,7,9
	.half	.L277-.L276
	.byte	3,125,1,5,33,9
	.half	.L34-.L277
	.byte	3,7,1,5,9,9
	.half	.L278-.L34
	.byte	1,5,16,7,9
	.half	.L279-.L278
	.byte	3,2,1,5,14,9
	.half	.L280-.L279
	.byte	1,5,3,9
	.half	.L33-.L280
	.byte	3,4,1,5,66,9
	.half	.L12-.L33
	.byte	3,3,1,5,22,9
	.half	.L281-.L12
	.byte	1,5,71,9
	.half	.L282-.L281
	.byte	1,5,22,9
	.half	.L283-.L282
	.byte	3,1,1,5,71,9
	.half	.L284-.L283
	.byte	1,5,3,9
	.half	.L285-.L284
	.byte	3,2,1,9
	.half	.L286-.L285
	.byte	3,1,1,9
	.half	.L287-.L286
	.byte	3,1,1,5,14,9
	.half	.L288-.L287
	.byte	1,5,13,9
	.half	.L289-.L288
	.byte	1,5,14,9
	.half	.L290-.L289
	.byte	3,2,1,5,12,9
	.half	.L291-.L290
	.byte	1,5,3,9
	.half	.L292-.L291
	.byte	3,1,1,5,23,9
	.half	.L14-.L292
	.byte	3,2,1,5,3,9
	.half	.L293-.L14
	.byte	1,7,9
	.half	.L294-.L293
	.byte	3,2,1,5,14,9
	.half	.L295-.L294
	.byte	3,1,1,5,12,9
	.half	.L296-.L295
	.byte	1,5,3,9
	.half	.L39-.L296
	.byte	3,2,1,5,23,9
	.half	.L15-.L39
	.byte	3,2,1,5,3,9
	.half	.L297-.L15
	.byte	1,7,9
	.half	.L298-.L297
	.byte	3,2,1,5,14,9
	.half	.L299-.L298
	.byte	3,1,1,5,12,9
	.half	.L300-.L299
	.byte	1,5,3,9
	.half	.L41-.L300
	.byte	3,3,1,5,23,9
	.half	.L16-.L41
	.byte	3,2,1,5,3,9
	.half	.L301-.L16
	.byte	1,7,9
	.half	.L302-.L301
	.byte	3,2,1,5,14,9
	.half	.L303-.L302
	.byte	3,1,1,5,12,9
	.half	.L304-.L303
	.byte	1,5,3,9
	.half	.L43-.L304
	.byte	3,2,1,5,37,9
	.half	.L17-.L43
	.byte	3,4,1,5,89,9
	.half	.L305-.L17
	.byte	1,5,3,9
	.half	.L306-.L305
	.byte	1,5,15,7,9
	.half	.L307-.L306
	.byte	3,2,1,5,13,9
	.half	.L308-.L307
	.byte	1,5,50,9
	.half	.L309-.L308
	.byte	1,5,4,9
	.half	.L45-.L309
	.byte	3,4,1,9
	.half	.L310-.L45
	.byte	3,1,1,5,23,9
	.half	.L311-.L310
	.byte	3,1,1,5,4,9
	.half	.L312-.L311
	.byte	1,5,9,7,9
	.half	.L313-.L312
	.byte	3,2,1,5,5,9
	.half	.L314-.L313
	.byte	1,5,81,7,9
	.half	.L315-.L314
	.byte	3,2,1,5,98,9
	.half	.L316-.L315
	.byte	1,5,69,9
	.half	.L317-.L316
	.byte	1,5,25,9
	.half	.L318-.L317
	.byte	1,5,98,9
	.half	.L319-.L318
	.byte	1,5,6,9
	.half	.L320-.L319
	.byte	3,1,1,5,22,9
	.half	.L321-.L320
	.byte	3,1,1,5,20,9
	.half	.L322-.L321
	.byte	1,5,98,9
	.half	.L323-.L322
	.byte	3,126,1,5,10,9
	.half	.L48-.L323
	.byte	3,4,1,5,22,7,9
	.half	.L324-.L48
	.byte	3,2,1,5,20,9
	.half	.L325-.L324
	.byte	1,5,23,9
	.half	.L47-.L325
	.byte	3,3,1,5,4,9
	.half	.L326-.L47
	.byte	1,5,9,7,9
	.half	.L327-.L326
	.byte	3,2,1,5,5,9
	.half	.L328-.L327
	.byte	1,5,81,7,9
	.half	.L329-.L328
	.byte	3,2,1,5,98,9
	.half	.L330-.L329
	.byte	1,5,69,9
	.half	.L331-.L330
	.byte	1,5,25,9
	.half	.L332-.L331
	.byte	1,5,98,9
	.half	.L333-.L332
	.byte	1,5,6,9
	.half	.L334-.L333
	.byte	3,1,1,5,22,9
	.half	.L335-.L334
	.byte	3,1,1,5,20,9
	.half	.L336-.L335
	.byte	1,5,98,9
	.half	.L337-.L336
	.byte	3,126,1,5,10,9
	.half	.L52-.L337
	.byte	3,4,1,5,22,7,9
	.half	.L338-.L52
	.byte	3,2,1,5,20,9
	.half	.L339-.L338
	.byte	1,5,3,9
	.half	.L46-.L339
	.byte	3,4,1,9
	.half	.L18-.L46
	.byte	3,3,1,9
	.half	.L340-.L18
	.byte	3,1,1,5,23,9
	.half	.L341-.L340
	.byte	3,1,1,5,7,9
	.half	.L342-.L341
	.byte	1,5,61,7,9
	.half	.L343-.L342
	.byte	1,5,65,9
	.half	.L344-.L343
	.byte	1,5,15,7,9
	.half	.L345-.L344
	.byte	3,2,1,5,13,9
	.half	.L346-.L345
	.byte	1,5,3,9
	.half	.L56-.L346
	.byte	3,2,1,9
	.half	.L19-.L56
	.byte	3,4,1,5,22,9
	.half	.L347-.L19
	.byte	3,2,1,5,6,9
	.half	.L348-.L347
	.byte	1,5,50,7,9
	.half	.L349-.L348
	.byte	1,5,68,9
	.half	.L350-.L349
	.byte	1,5,79,7,9
	.half	.L351-.L350
	.byte	3,2,1,5,96,9
	.half	.L352-.L351
	.byte	1,5,67,9
	.half	.L353-.L352
	.byte	1,5,23,9
	.half	.L354-.L353
	.byte	1,5,96,9
	.half	.L355-.L354
	.byte	1,5,21,9
	.half	.L356-.L355
	.byte	3,1,1,5,4,9
	.half	.L357-.L356
	.byte	3,1,1,5,96,9
	.half	.L358-.L357
	.byte	3,126,1,5,11,9
	.half	.L59-.L358
	.byte	3,4,1,5,55,7,9
	.half	.L359-.L59
	.byte	1,5,73,9
	.half	.L360-.L359
	.byte	1,5,4,7,9
	.half	.L361-.L360
	.byte	3,2,1,5,39,9
	.half	.L362-.L361
	.byte	1,5,20,9
	.half	.L363-.L362
	.byte	1,5,15,9
	.half	.L364-.L363
	.byte	3,1,1,5,13,9
	.half	.L365-.L364
	.byte	1,5,41,9
	.half	.L366-.L365
	.byte	3,127,1,5,8,9
	.half	.L62-.L366
	.byte	3,3,1,5,4,7,9
	.half	.L367-.L62
	.byte	3,2,1,5,21,9
	.half	.L368-.L367
	.byte	1,5,23,9
	.half	.L369-.L368
	.byte	1,5,3,9
	.half	.L61-.L369
	.byte	3,6,1,9
	.half	.L20-.L61
	.byte	3,3,1,5,22,9
	.half	.L370-.L20
	.byte	3,1,1,5,6,9
	.half	.L371-.L370
	.byte	1,5,50,7,9
	.half	.L372-.L371
	.byte	1,5,68,9
	.half	.L373-.L372
	.byte	1,5,51,7,9
	.half	.L374-.L373
	.byte	3,2,1,5,23,9
	.half	.L375-.L374
	.byte	1,5,63,9
	.half	.L376-.L375
	.byte	1,5,21,9
	.half	.L377-.L376
	.byte	3,1,1,5,4,9
	.half	.L378-.L377
	.byte	3,1,1,5,68,9
	.half	.L379-.L378
	.byte	3,126,1,5,11,9
	.half	.L68-.L379
	.byte	3,4,1,5,55,7,9
	.half	.L380-.L68
	.byte	1,5,73,9
	.half	.L381-.L380
	.byte	1,5,4,7,9
	.half	.L382-.L381
	.byte	3,2,1,5,39,9
	.half	.L383-.L382
	.byte	1,5,20,9
	.half	.L384-.L383
	.byte	1,5,15,9
	.half	.L385-.L384
	.byte	3,1,1,5,13,9
	.half	.L386-.L385
	.byte	1,5,41,9
	.half	.L387-.L386
	.byte	3,127,1,5,8,9
	.half	.L71-.L387
	.byte	3,3,1,5,4,7,9
	.half	.L388-.L71
	.byte	3,2,1,5,21,9
	.half	.L389-.L388
	.byte	1,5,23,9
	.half	.L390-.L389
	.byte	1,5,3,9
	.half	.L70-.L390
	.byte	3,7,1,9
	.half	.L3-.L70
	.byte	3,2,1,5,1,9
	.half	.L21-.L3
	.byte	3,3,1,7,9
	.half	.L124-.L21
	.byte	0,1,1
.L216:
	.sdecl	'.debug_ranges',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_ranges'
.L123:
	.word	-1,.L109,0,.L124-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_info'
.L125:
	.word	254
	.half	3
	.word	.L126
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L128,.L127
	.byte	2
	.word	.L116
	.byte	3
	.byte	'UpdatePIMWithValue',0,1,161,2,6,1,1,1
	.word	.L111,.L175,.L110
	.byte	4
	.byte	'dst',0,1,161,2,32
	.word	.L176,.L177
	.byte	4
	.byte	'length',0,1,161,2,44
	.word	.L178,.L179
	.byte	4
	.byte	'Value',0,1,161,2,58
	.word	.L173,.L180
	.byte	5
	.word	.L111,.L175
	.byte	6
	.byte	'Cnt',0,1,163,2,9
	.word	.L178,.L181
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_abbrev'
.L126:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_line'
.L127:
	.word	.L392-.L391
.L391:
	.half	3
	.word	.L394-.L393
.L393:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0,0,0,0,0
.L394:
	.byte	5,10,7,0,5,2
	.word	.L111
	.byte	3,163,2,1,5,28,9
	.half	.L201-.L111
	.byte	1,5,8,9
	.half	.L79-.L201
	.byte	3,2,1,5,6,9
	.half	.L395-.L79
	.byte	3,1,1,5,33,9
	.half	.L396-.L395
	.byte	3,125,1,5,28,9
	.half	.L78-.L396
	.byte	1,5,1,7,9
	.half	.L397-.L78
	.byte	3,6,1,7,9
	.half	.L129-.L397
	.byte	0,1,1
.L392:
	.sdecl	'.debug_ranges',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_ranges'
.L128:
	.word	-1,.L111,0,.L129-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_info'
.L130:
	.word	252
	.half	3
	.word	.L131
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L133,.L132
	.byte	2
	.word	.L116
	.byte	3
	.byte	'NvM_SwcIModifyNvBlock',0,1,179,2,7
	.word	.L173
	.byte	1,1,1
	.word	.L113,.L182,.L112
	.byte	4
	.byte	'addr',0,1,179,2,36
	.word	.L178,.L183
	.byte	5
	.word	.L113,.L182
	.byte	6
	.byte	'MDF_State',0,1,181,2,21
	.word	.L184
	.byte	5,3
	.word	_999001_MDF_State
	.byte	7
	.byte	'ret_val',0,1,182,2,8
	.word	.L173,.L185
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_abbrev'
.L131:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_line'
.L132:
	.word	.L399-.L398
.L398:
	.half	3
	.word	.L401-.L400
.L400:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0,0,0,0,0
.L401:
	.byte	5,16,7,0,5,2
	.word	.L113
	.byte	3,181,2,1,5,9,9
	.half	.L203-.L113
	.byte	3,1,1,5,7,9
	.half	.L402-.L203
	.byte	3,2,1,9
	.half	.L403-.L402
	.byte	3,3,1,9
	.half	.L404-.L403
	.byte	3,5,1,9
	.half	.L405-.L404
	.byte	3,7,1,9
	.half	.L406-.L405
	.byte	3,10,1,9
	.half	.L407-.L406
	.byte	3,122,1,9
	.half	.L408-.L407
	.byte	3,12,1,5,15,9
	.half	.L80-.L408
	.byte	3,98,1,5,13,9
	.half	.L409-.L80
	.byte	1,5,3,9
	.half	.L410-.L409
	.byte	3,1,1,5,25,9
	.half	.L81-.L410
	.byte	3,2,1,5,38,9
	.half	.L411-.L81
	.byte	1,5,81,9
	.half	.L412-.L411
	.byte	1,5,25,9
	.half	.L413-.L412
	.byte	3,1,1,5,34,9
	.half	.L414-.L413
	.byte	1,5,60,9
	.half	.L415-.L414
	.byte	1,5,15,9
	.half	.L416-.L415
	.byte	3,1,1,5,13,9
	.half	.L417-.L416
	.byte	1,5,3,9
	.half	.L418-.L417
	.byte	3,1,1,5,23,9
	.half	.L82-.L418
	.byte	3,2,1,5,3,9
	.half	.L204-.L82
	.byte	1,7,9
	.half	.L419-.L204
	.byte	3,2,1,5,15,9
	.half	.L420-.L419
	.byte	3,1,1,5,13,9
	.half	.L421-.L420
	.byte	1,5,3,9
	.half	.L90-.L421
	.byte	3,2,1,9
	.half	.L83-.L90
	.byte	3,2,1,5,14,9
	.half	.L422-.L83
	.byte	1,5,22,9
	.half	.L423-.L422
	.byte	1,5,20,9
	.half	.L424-.L423
	.byte	1,5,15,9
	.half	.L425-.L424
	.byte	3,1,1,5,13,9
	.half	.L426-.L425
	.byte	1,5,3,9
	.half	.L427-.L426
	.byte	3,1,1,5,23,9
	.half	.L85-.L427
	.byte	3,2,1,5,3,9
	.half	.L205-.L85
	.byte	1,5,4,7,9
	.half	.L428-.L205
	.byte	3,1,1,5,16,9
	.half	.L429-.L428
	.byte	3,1,1,5,14,9
	.half	.L430-.L429
	.byte	1,5,3,9
	.half	.L93-.L430
	.byte	3,2,1,5,23,9
	.half	.L84-.L93
	.byte	3,2,1,5,3,9
	.half	.L206-.L84
	.byte	1,5,4,7,9
	.half	.L431-.L206
	.byte	3,1,1,5,16,9
	.half	.L432-.L431
	.byte	3,1,1,5,14,9
	.half	.L433-.L432
	.byte	1,5,3,9
	.half	.L95-.L433
	.byte	3,2,1,5,23,9
	.half	.L86-.L95
	.byte	3,2,1,5,3,9
	.half	.L207-.L86
	.byte	1,5,16,7,9
	.half	.L434-.L207
	.byte	3,1,1,5,14,9
	.half	.L435-.L434
	.byte	1,5,12,9
	.half	.L436-.L435
	.byte	3,1,1,5,3,9
	.half	.L97-.L436
	.byte	3,2,1,9
	.half	.L87-.L97
	.byte	3,2,1,5,2,9
	.half	.L88-.L87
	.byte	3,2,1,5,1,9
	.half	.L100-.L88
	.byte	3,1,1,7,9
	.half	.L134-.L100
	.byte	0,1,1
.L399:
	.sdecl	'.debug_ranges',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_ranges'
.L133:
	.word	-1,.L113,0,.L134-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_info'
.L135:
	.word	271
	.half	3
	.word	.L136
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L138,.L137
	.byte	2
	.word	.L116
	.byte	3
	.byte	'NvM_SwcICopyDataToRam',0,1,234,2,7
	.word	.L173
	.byte	1,1,1
	.word	.L115,.L186,.L114
	.byte	4
	.byte	'dest_addr',0,1,234,2,37
	.word	.L176,.L187
	.byte	4
	.byte	'src_addr',0,1,234,2,56
	.word	.L176,.L188
	.byte	4
	.byte	'size',0,1,234,2,73
	.word	.L178,.L189
	.byte	5
	.word	.L115,.L186
	.byte	6
	.byte	'retVal',0,1,236,2,8
	.word	.L173,.L190
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_abbrev'
.L136:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_line'
.L137:
	.word	.L438-.L437
.L437:
	.half	3
	.word	.L440-.L439
.L439:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0,0,0,0,0
.L440:
	.byte	5,15,7,0,5,2
	.word	.L115
	.byte	3,235,2,1,5,5,9
	.half	.L209-.L115
	.byte	3,1,1,5,33,7,9
	.half	.L441-.L209
	.byte	1,5,42,9
	.half	.L442-.L441
	.byte	1,5,62,7,9
	.half	.L443-.L442
	.byte	1,5,3,7,9
	.half	.L101-.L443
	.byte	3,2,1,5,17,9
	.half	.L103-.L101
	.byte	3,2,1,5,16,9
	.half	.L106-.L103
	.byte	3,2,1,5,14,9
	.half	.L444-.L106
	.byte	1,5,12,9
	.half	.L445-.L444
	.byte	3,1,1,5,11,9
	.half	.L446-.L445
	.byte	3,1,1,5,7,9
	.half	.L447-.L446
	.byte	3,1,1,5,17,9
	.half	.L105-.L447
	.byte	3,123,1,5,9,7,9
	.half	.L448-.L105
	.byte	3,7,1,5,2,9
	.half	.L449-.L448
	.byte	3,2,1,5,1,9
	.half	.L104-.L449
	.byte	3,1,1,7,9
	.half	.L139-.L104
	.byte	0,1,1
.L438:
	.sdecl	'.debug_ranges',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_ranges'
.L138:
	.word	-1,.L115,0,.L139-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1')
	.sect	'.debug_info'
.L140:
	.word	181
	.half	3
	.word	.L141
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1',0,3,54,13
	.word	.L191
	.byte	1,5,3
	.word	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_1')
	.sect	'.debug_abbrev'
.L141:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2')
	.sect	'.debug_info'
.L142:
	.word	181
	.half	3
	.word	.L143
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2',0,3,108,13
	.word	.L192
	.byte	1,5,3
	.word	Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Rte_ROM_ASW_NVM_ASW_NVM_BlockNative_1024_2')
	.sect	'.debug_abbrev'
.L143:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('TEST_DATA_NVM_NATIVE_1024_1')
	.sect	'.debug_info'
.L144:
	.word	166
	.half	3
	.word	.L145
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'TEST_DATA_NVM_NATIVE_1024_1',0,7,38,7
	.word	.L193
	.byte	1,5,3
	.word	TEST_DATA_NVM_NATIVE_1024_1
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('TEST_DATA_NVM_NATIVE_1024_1')
	.sect	'.debug_abbrev'
.L145:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('TEST_DATA_NVM_NATIVE_1024_2')
	.sect	'.debug_info'
.L146:
	.word	166
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'TEST_DATA_NVM_NATIVE_1024_2',0,7,39,7
	.word	.L193
	.byte	1,5,3
	.word	TEST_DATA_NVM_NATIVE_1024_2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('TEST_DATA_NVM_NATIVE_1024_2')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('modify_addr1')
	.sect	'.debug_info'
.L148:
	.word	150
	.half	3
	.word	.L149
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'modify_addr1',0,7,40,15
	.word	.L178
	.byte	5,3
	.word	modify_addr1
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('modify_addr1')
	.sect	'.debug_abbrev'
.L149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('modify_addr2')
	.sect	'.debug_info'
.L150:
	.word	150
	.half	3
	.word	.L151
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'modify_addr2',0,7,41,15
	.word	.L178
	.byte	5,3
	.word	modify_addr2
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('modify_addr2')
	.sect	'.debug_abbrev'
.L151:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('InvalidData')
	.sect	'.debug_info'
.L152:
	.word	149
	.half	3
	.word	.L153
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'InvalidData',0,7,44,14
	.word	.L194
	.byte	5,3
	.word	InvalidData
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('InvalidData')
	.sect	'.debug_abbrev'
.L153:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('MngData')
	.sect	'.debug_info'
.L154:
	.word	145
	.half	3
	.word	.L155
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'MngData',0,7,45,14
	.word	.L195
	.byte	5,3
	.word	MngData
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('MngData')
	.sect	'.debug_abbrev'
.L155:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('CorruptData')
	.sect	'.debug_info'
.L156:
	.word	149
	.half	3
	.word	.L157
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'CorruptData',0,7,48,14
	.word	.L173
	.byte	5,3
	.word	CorruptData
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CorruptData')
	.sect	'.debug_abbrev'
.L157:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Count_PENDING')
	.sect	'.debug_info'
.L158:
	.word	155
	.half	3
	.word	.L159
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'NvM_Count_PENDING',0,7,49,15
	.word	.L178
	.byte	5,3
	.word	NvM_Count_PENDING
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Count_PENDING')
	.sect	'.debug_abbrev'
.L159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_ErrorStatus')
	.sect	'.debug_info'
.L160:
	.word	153
	.half	3
	.word	.L161
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'NvM_ErrorStatus',0,7,50,30
	.word	.L196
	.byte	5,3
	.word	NvM_ErrorStatus
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_ErrorStatus')
	.sect	'.debug_abbrev'
.L161:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_ElapsedTime')
	.sect	'.debug_info'
.L162:
	.word	153
	.half	3
	.word	.L163
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'NvM_ElapsedTime',0,7,51,15
	.word	.L178
	.byte	5,3
	.word	NvM_ElapsedTime
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_ElapsedTime')
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_WriteFlag')
	.sect	'.debug_info'
.L164:
	.word	151
	.half	3
	.word	.L165
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'NvM_WriteFlag',0,7,52,14
	.word	.L173
	.byte	5,3
	.word	NvM_WriteFlag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_WriteFlag')
	.sect	'.debug_abbrev'
.L165:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('CounterWriteBlock')
	.sect	'.debug_info'
.L166:
	.word	156
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'CounterWriteBlock',0,7,55,7
	.word	.L173
	.byte	1,5,3
	.word	CounterWriteBlock
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CounterWriteBlock')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('status_NvM_test')
	.sect	'.debug_info'
.L168:
	.word	154
	.half	3
	.word	.L169
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'status_NvM_test',0,7,56,19
	.word	.L197
	.byte	1,5,3
	.word	status_NvM_test
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('status_NvM_test')
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Test')
	.sect	'.debug_info'
.L170:
	.word	147
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'ASW\\ASW_NVM\\src\\ASW_NVM.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L116
	.byte	3
	.byte	'NvM_Test',0,7,57,12
	.word	.L198
	.byte	1,5,3
	.word	NvM_Test
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Test')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L186-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L187:
	.word	-1,.L115,0,.L186-.L115
	.half	1
	.byte	100
	.word	0,0
.L190:
	.word	-1,.L115,.L209-.L115,.L104-.L115
	.half	1
	.byte	82
	.word	0,0
.L189:
	.word	-1,.L115,0,.L186-.L115
	.half	1
	.byte	84
	.word	0,0
.L188:
	.word	-1,.L115,0,.L186-.L115
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L182-.L113
	.half	2
	.byte	138,0
	.word	0,0
.L183:
	.word	-1,.L113,0,.L202-.L113
	.half	1
	.byte	84
	.word	.L82-.L113,.L204-.L113
	.half	1
	.byte	84
	.word	.L83-.L113,.L205-.L113
	.half	1
	.byte	84
	.word	.L84-.L113,.L206-.L113
	.half	1
	.byte	84
	.word	.L86-.L113,.L207-.L113
	.half	1
	.byte	84
	.word	.L87-.L113,.L88-.L113
	.half	1
	.byte	84
	.word	0,0
.L185:
	.word	-1,.L113,.L203-.L113,.L182-.L113
	.half	1
	.byte	88
	.word	.L208-.L113,.L182-.L113
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_loc'
.L108:
	.word	-1,.L109,0,.L172-.L109
	.half	2
	.byte	138,0
	.word	0,0
.L174:
	.word	-1,.L109,.L199-.L109,.L11-.L109
	.half	1
	.byte	82
	.word	.L200-.L109,.L13-.L109
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_loc'
.L181:
	.word	-1,.L111,.L201-.L111,.L175-.L111
	.half	1
	.byte	95
	.word	0,0
.L110:
	.word	-1,.L111,0,.L175-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L180:
	.word	-1,.L111,0,.L175-.L111
	.half	1
	.byte	85
	.word	0,0
.L177:
	.word	-1,.L111,0,.L175-.L111
	.half	1
	.byte	100
	.word	0,0
.L179:
	.word	-1,.L111,0,.L175-.L111
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L450:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('RE_ASW_NVM_func')
	.sect	'.debug_frame'
	.word	12
	.word	.L450,.L109,.L172-.L109
	.sdecl	'.debug_frame',debug,cluster('UpdatePIMWithValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L450,.L111,.L175-.L111
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('NvM_SwcIModifyNvBlock')
	.sect	'.debug_frame'
	.word	12
	.word	.L450,.L113,.L182-.L113
	.sdecl	'.debug_frame',debug,cluster('NvM_SwcICopyDataToRam')
	.sect	'.debug_frame'
	.word	20
	.word	.L450,.L115,.L186-.L115
	.byte	8,18,8,19,8,22,8,23

; ASW\ASW_NVM\src\ASW_NVM.c	   380  #define ASW_NVM_STOP_SEC_CODE                       
; ASW\ASW_NVM\src\ASW_NVM.c	   381  #include "ASW_NVM_MemMap.h"

	; Module end
