	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc19204a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\Integration\\BSW\\Xcp_OdtEntryReadWrite.src Integration\\BSW\\Src\\Xcp_OdtEntryReadWrite.c"
	.compiler_name		"ctc"
	;source	'Integration\\BSW\\Src\\Xcp_OdtEntryReadWrite.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	2540
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'Integration\\BSW\\Src\\Xcp_OdtEntryReadWrite.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	143
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	145
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	168
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	199
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	236
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	168
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	168
	.byte	4
	.byte	'PduLengthType',0,4,26,19
	.word	199
	.byte	6,5,113,9,4,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,118,3
	.word	329
	.byte	6,6,225,1,9,4,7
	.byte	'XCP_STATE_DISCONNECTED',0,0,7
	.byte	'XCP_STATE_DISCONNECTING',0,1,7
	.byte	'XCP_STATE_CONNECTED',0,2,7
	.byte	'XCP_STATE_RESUME',0,3,7
	.byte	'XCP_STATE_DISABLED',0,240,1,0,4
	.byte	'Xcp_State_t',0,6,231,1,2
	.word	405
	.byte	4
	.byte	'Xcp_AddrValue',0,6,165,3,23
	.word	236
	.byte	4
	.byte	'Xcp_PduIdType',0,6,174,3,15
	.word	168
	.byte	6,6,223,3,9,4,7
	.byte	'XCP_DAQ_NO_OVERLOAD_INDICATION',0,0,7
	.byte	'XCP_DAQ_OVERLOAD_INDICATION_PID',0,1,7
	.byte	'XCP_DAQ_OVERLOAD_INDICATION_EVENT',0,2,0,4
	.byte	'Xcp_Overload_t',0,6,228,3,2
	.word	593
	.byte	6,6,233,3,9,4,7
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_ABSOLUTE',0,1,7
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE',0,2,7
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD',0,3,7
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED',0,4,0,4
	.byte	'Xcp_IdField_t',0,6,239,3,2
	.word	727
	.byte	6,6,242,3,9,4,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_DEFAULT',0,0,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_16',0,1,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_32',0,2,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_64',0,3,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_ALIGNMENT',0,4,7
	.byte	'XCP_ODT_OPTIMIZATION_OM_MAX_ENTRY_SIZE',0,5,0,4
	.byte	'Xcp_OdtOptimizationType_t',0,6,250,3,2
	.word	944
	.byte	6,6,253,3,9,4,7
	.byte	'XCP_CONSISTENCY_ODT',0,0,7
	.byte	'XCP_CONSISTENCY_DAQ',0,1,7
	.byte	'XCP_CONSISTENCY_EVENT',0,2,7
	.byte	'XCP_CONSISTENCY_NONE',0,3,0,4
	.byte	'Xcp_Consistency_t',0,6,131,4,2
	.word	1220
	.byte	6,6,134,4,9,4,7
	.byte	'XCP_TIMESTAMP_TYPE_NO_TIME_STAMP',0,0,7
	.byte	'XCP_TIMESTAMP_TYPE_ONE_BYTE',0,1,7
	.byte	'XCP_TIMESTAMP_TYPE_TWO_BYTE',0,2,7
	.byte	'XCP_TIMESTAMP_TYPE_FOUR_BYTE',0,4,0,4
	.byte	'Xcp_Timestamp_t',0,6,140,4,2
	.word	1345
	.byte	3
	.word	168
	.byte	8,5,71,9,8,9
	.byte	'SduDataPtr',0
	.word	1503
	.byte	4,2,35,0,9
	.byte	'SduLength',0
	.word	199
	.byte	2,2,35,4,0,10
	.word	1508
	.byte	3
	.word	1553
	.byte	11
	.word	168
	.byte	1,1,12
	.word	1558
	.byte	12
	.word	168
	.byte	12
	.word	168
	.byte	0,3
	.word	1563
	.byte	13,1,1,12
	.word	168
	.byte	12
	.word	168
	.byte	0,3
	.word	1591
	.byte	13,1,1,12
	.word	168
	.byte	0,3
	.word	1610
	.byte	11
	.word	168
	.byte	1,1,12
	.word	168
	.byte	0,3
	.word	1624
	.byte	3
	.word	1508
	.byte	13,1,1,12
	.word	1558
	.byte	12
	.word	1642
	.byte	12
	.word	168
	.byte	0,3
	.word	1647
	.byte	11
	.word	168
	.byte	1,1,12
	.word	168
	.byte	12
	.word	199
	.byte	12
	.word	168
	.byte	0,3
	.word	1671
	.byte	8,7,164,1,9,56,9
	.byte	'TLTransmit_pfct',0
	.word	1586
	.byte	4,2,35,0,9
	.byte	'TLInit_pfct',0
	.word	1605
	.byte	4,2,35,4,9
	.byte	'TLConnect_pfct',0
	.word	1619
	.byte	4,2,35,8,9
	.byte	'TLDisconnect_pfct',0
	.word	1637
	.byte	4,2,35,12,9
	.byte	'TLTransportLayerCmd_pfct',0
	.word	1666
	.byte	4,2,35,16,9
	.byte	'TLGetTxPduId_pfct',0
	.word	1694
	.byte	4,2,35,20,9
	.byte	'MaxCto_u8',0
	.word	168
	.byte	1,2,35,24,9
	.byte	'MaxDto_u16',0
	.word	199
	.byte	2,2,35,26,9
	.byte	'TimestampType_en',0
	.word	1345
	.byte	4,2,35,28,9
	.byte	'IdFieldType_en',0
	.word	727
	.byte	4,2,35,32,9
	.byte	'OverloadType_en',0
	.word	593
	.byte	4,2,35,36,9
	.byte	'OdtOptimizationType_en',0
	.word	944
	.byte	4,2,35,40,9
	.byte	'Consistency_en',0
	.word	1220
	.byte	4,2,35,44,9
	.byte	'PdRam_u32',0
	.word	236
	.byte	4,2,35,48,9
	.byte	'EdRam_u32',0
	.word	236
	.byte	4,2,35,52,0,4
	.byte	'Xcp_PL_TL_Cfg_t',0,7,184,1,2
	.word	1699
	.byte	6,7,188,1,9,4,7
	.byte	'XCP_RAMSECTION_INVALID',0,0,7
	.byte	'XCP_RAMSECTION_PD',0,1,7
	.byte	'XCP_RAMSECTION_ED',0,2,0,4
	.byte	'Xcp_RamSectionType_t',0,7,193,1,2
	.word	2097
	.byte	8,7,195,1,9,12,9
	.byte	'DaqRamPtr_pu8',0
	.word	1503
	.byte	4,2,35,0,9
	.byte	'DaqRamTotalSize_u32',0
	.word	236
	.byte	4,2,35,4,9
	.byte	'RamSectionType_en',0
	.word	2097
	.byte	4,2,35,8,0,4
	.byte	'Xcp_DaqRamSection_Cfg_t',0,7,200,1,2
	.word	2199
	.byte	8,7,230,1,9,4,9
	.byte	'EventChannelDirection_u8',0
	.word	168
	.byte	1,2,35,0,9
	.byte	'EventChannelTimeCycle_u8',0
	.word	168
	.byte	1,2,35,1,9
	.byte	'EventChannelTimeUnit_u8',0
	.word	168
	.byte	1,2,35,2,9
	.byte	'EventChannelPriority_u8',0
	.word	168
	.byte	1,2,35,3,0,4
	.byte	'Xcp_EventChannel_Cfg_t',0,7,236,1,2
	.word	2318
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'rba_BswSrv_uint64',0,8,66,28
	.word	2491
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,19
	.byte	1,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56,9,0,0,10,38,0,73,19,0,0,11,21,1,73,19,54,15,39
	.byte	12,0,0,12,5,0,73,19,0,0,13,21,1,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Integration\\BSW\\Src\\Xcp_OdtEntryReadWrite.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\api\\Xcp_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\Xcp_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L9:
.L7:

; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     1  /*
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     4   * Once templates have been completed, the integrator should delete the #error line.
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     5   * Note: The integrator is responsible for updates made to this file.
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     6   *
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     8   * The removal of the error only allows the user to proceed with the building phase
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	     9   */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    10  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    11  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    12  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    13  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    14  /***************************************************************************************************
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    15  * Includes
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    16  ***************************************************************************************************/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    17  #include "Xcp_Cbk.h"
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    18  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    19  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    20  /***************************************************************************************************
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    21  * Variables
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    22  ***************************************************************************************************/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    23  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    24  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    25  /***************************************************************************************************
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    26  * Functions
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    27  ***************************************************************************************************/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    28  /* ------------------------------------------------------------------------ */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    29  /* Begin section for code */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    30  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    31  #define XCP_START_SEC_CALLOUT_CODE
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    32  #include "Xcp_MemMap.h"
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    33  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    34  #if (XCP_DAQ_STIM_MEMORY_ACCESS_BY_APPL == STD_ON)
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    35  /**
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    36  ****************************************************************************************************
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    37  Copy the DAQ data from ecu memory to the destination buffer
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    38  \param[in]  AddrPtrDst  destination address
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    39  \param[in]  AddrPtrSrc  source address
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    40  \param[in]  Length      length of the data to read
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    41  \return     -
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    42  ***************************************************************************************************/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    43  void XcpAppl_OdtEntryRead(Xcp_AdrPtr AddrPtrDst, Xcp_AdrPtrConst AddrPtrSrc, uint8 Length)
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    44  {
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    45    /*-----------------------------------------------------------------*/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    46    /* This function is project specific and shall be totally reworked */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    47    /*-----------------------------------------------------------------*/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    48  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    49    /* Remove when parameter used */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    50    XCP_PARAM_UNUSED(AddrPtrDst);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    51    XCP_PARAM_UNUSED(AddrPtrSrc);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    52    XCP_PARAM_UNUSED(Length);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    53  }
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    54  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    55  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    56  # if (XCP_SYNCHRONOUS_DATA_STIMULATION_STIM == STD_ON)
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    57  /**
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    58  ****************************************************************************************************
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    59  Copy the STIM data from internal buffer to ecu memory
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    60  \param[in]  AddrPtrDst  destination address
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    61  \param[in]  AddrPtrSrc  source address
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    62  \param[in]  Length      length of the data to read
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    63  \return     -
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    64  ***************************************************************************************************/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    65  /* MR12 RULE 8.13 VIOLATION: AddrPtrDst cannot be const as the data is modified */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    66  void XcpAppl_OdtEntryWrite(Xcp_AdrPtr AddrPtrDst, Xcp_AdrPtrConst AddrPtrSrc, uint8 Length)
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    67  {
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    68    /*-----------------------------------------------------------------*/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    69    /* This function is project specific and shall be totally reworked */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    70    /*-----------------------------------------------------------------*/
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    71  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    72    /* Remove when parameter used */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    73    XCP_PARAM_UNUSED(AddrPtrDst);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    74    XCP_PARAM_UNUSED(AddrPtrSrc);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    75    XCP_PARAM_UNUSED(Length);
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    76  }
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    77  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    78  # endif /* (XCP_SYNCHRONOUS_DATA_STIMULATION_STIM == STD_ON) */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    79  #endif /* (XCP_DAQ_STIM_MEMORY_ACCESS_BY_APPL == STD_ON) */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    80  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    81  /* ------------------------------------------------------------------------ */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    82  /* End section for code */
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    83  
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    84  #define XCP_STOP_SEC_CALLOUT_CODE
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    85  #include "Xcp_MemMap.h"
; Integration\BSW\Src\Xcp_OdtEntryReadWrite.c	    86  

	; Module end
