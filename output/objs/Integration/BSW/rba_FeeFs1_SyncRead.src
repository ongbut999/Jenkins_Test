	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc18588a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\Integration\\BSW\\rba_FeeFs1_SyncRead.src Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c"
	.compiler_name		"ctc"
	;source	'Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c'

	
$TC16X
	
	.sdecl	'.text.rba_FeeFs1_SyncRead.Fee_Fls_SyncRead',code,cluster('Fee_Fls_SyncRead')
	.sect	'.text.rba_FeeFs1_SyncRead.Fee_Fls_SyncRead'
	.align	2
	
	.global	Fee_Fls_SyncRead

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     1  #include "rba_BswSrv.h"
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     2  #include "Fls.h"
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     3  
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     4  /**
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     5   *********************************************************************
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     6   * Fee_Fls_SyncRead(): Service for synchronous data read
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     7   *
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     8   * This function performed synchronous read data from Data Flash.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	     9   * Below is a template implementation. Integrators shall
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    10   * implement this function in order to match with the target MCAL.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    11   *
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    12   * \param    SourceAddress:     Relative address of the data to be read in flash memory.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    13   * 								This address offset will be added to the flash memory base address.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    14   * \param    TargetAddressPtr:  Pointer to target data buffer.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    15   * \param    Length:            Length in bytes to be read from Data Flash memory.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    16   * \return   Function success
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    17   * \retval   E_OK:              Read command has been accepted.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    18   * \retval   E_NOT_OK:          Read command has not been accepted.
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    19   * \seealso
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    20   * \usedresources
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    21   *********************************************************************
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    22   */
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    23  
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    24  Std_ReturnType Fee_Fls_SyncRead(Fls_AddressType SourceAddress,
; Function Fee_Fls_SyncRead
.L9:
Fee_Fls_SyncRead:	.type	func

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    25                                  uint8* TargetAddressPtr,
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    26  								uint32 Length
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    27                                 )
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    28  {
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    29  
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    30      Std_ReturnType RetVal = E_OK;
	mov	d2,#0
.L38:

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    31  
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    32      if(TargetAddressPtr == NULL_PTR)
	jnz.a	a4,.L2
.L49:

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    33      {
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    34          RetVal = E_NOT_OK;
	mov	d2,#1
.L50:
	j	.L3
.L2:

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    35      }else{
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    36          rba_BswSrv_MemCopy8(TargetAddressPtr, FLS_BASE_ADDRESS + SourceAddress, Length);
	movh	d15,#44800
.L51:
	add	d4,d15
.L37:
	mov.a	a15,d4
.L28:

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
; .\Integration\BSW\Include\rba_BswSrv.h	   131  
; .\Integration\BSW\Include\rba_BswSrv.h	   132  
; .\Integration\BSW\Include\rba_BswSrv.h	   133      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   135  }
; .\Integration\BSW\Include\rba_BswSrv.h	   136  
; .\Integration\BSW\Include\rba_BswSrv.h	   137  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   138   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   139   * rba_BswSrv_ByteOrderSwap16
; .\Integration\BSW\Include\rba_BswSrv.h	   140   *
; .\Integration\BSW\Include\rba_BswSrv.h	   141   * Swaps the byte order of a 16 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   142   *
; .\Integration\BSW\Include\rba_BswSrv.h	   143   * \param   Input_u16: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   144   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   145   * \retval  uint16
; .\Integration\BSW\Include\rba_BswSrv.h	   146   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   147   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   148   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   149   */
; .\Integration\BSW\Include\rba_BswSrv.h	   150  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16)
; .\Integration\BSW\Include\rba_BswSrv.h	   151  {
; .\Integration\BSW\Include\rba_BswSrv.h	   152      uint16 retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   153  
; .\Integration\BSW\Include\rba_BswSrv.h	   154  
; .\Integration\BSW\Include\rba_BswSrv.h	   155      retVal_u16 = ((Input_u16 & 0x00FFu) << 8) | ((Input_u16 & 0xFF00u) >> 8);
; .\Integration\BSW\Include\rba_BswSrv.h	   156  
; .\Integration\BSW\Include\rba_BswSrv.h	   157  
; .\Integration\BSW\Include\rba_BswSrv.h	   158      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   159      return retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   160  }
; .\Integration\BSW\Include\rba_BswSrv.h	   161  
; .\Integration\BSW\Include\rba_BswSrv.h	   162  
; .\Integration\BSW\Include\rba_BswSrv.h	   163  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   164   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   165   * rba_BswSrv_MemCopy64 - copy non overlapping memory in 64 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   166   *
; .\Integration\BSW\Include\rba_BswSrv.h	   167   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 8 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   168   * aligned. The size should be a multiple of 8. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   169   * of 8.
; .\Integration\BSW\Include\rba_BswSrv.h	   170   *
; .\Integration\BSW\Include\rba_BswSrv.h	   171   * \param   xDest_pu64      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   172   * \param   xSrc_pcu64      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   173   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   174   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy32
; .\Integration\BSW\Include\rba_BswSrv.h	   175   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   176   */
; .\Integration\BSW\Include\rba_BswSrv.h	   177  LOCAL_INLINE void rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   178  {
; .\Integration\BSW\Include\rba_BswSrv.h	   179  
; .\Integration\BSW\Include\rba_BswSrv.h	   180      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   181  
; .\Integration\BSW\Include\rba_BswSrv.h	   182      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 8); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   183      {
; .\Integration\BSW\Include\rba_BswSrv.h	   184          *xDest_pu64 = *xSrc_pcu64;
; .\Integration\BSW\Include\rba_BswSrv.h	   185          xDest_pu64++;
; .\Integration\BSW\Include\rba_BswSrv.h	   186          xSrc_pcu64++;
; .\Integration\BSW\Include\rba_BswSrv.h	   187      }
; .\Integration\BSW\Include\rba_BswSrv.h	   188  
; .\Integration\BSW\Include\rba_BswSrv.h	   189      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   190  }
; .\Integration\BSW\Include\rba_BswSrv.h	   191  
; .\Integration\BSW\Include\rba_BswSrv.h	   192  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   193   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   194   * rba_BswSrv_MemCopy32 - copy non overlapping memory in 32 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   195   *
; .\Integration\BSW\Include\rba_BswSrv.h	   196   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 4 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   197   * aligned. The size should be a multiple of 4. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   198   * of 4.
; .\Integration\BSW\Include\rba_BswSrv.h	   199   *
; .\Integration\BSW\Include\rba_BswSrv.h	   200   * \param   xDest_pu32      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   201   * \param   xSrc_pcu32      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   202   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   203   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   204   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   205   */
; .\Integration\BSW\Include\rba_BswSrv.h	   206  LOCAL_INLINE void rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   207  {
; .\Integration\BSW\Include\rba_BswSrv.h	   208      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   209  
; .\Integration\BSW\Include\rba_BswSrv.h	   210      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 4); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   211      {
; .\Integration\BSW\Include\rba_BswSrv.h	   212          *xDest_pu32 = *xSrc_pcu32;
; .\Integration\BSW\Include\rba_BswSrv.h	   213          xDest_pu32++;
; .\Integration\BSW\Include\rba_BswSrv.h	   214          xSrc_pcu32++;
; .\Integration\BSW\Include\rba_BswSrv.h	   215      }
; .\Integration\BSW\Include\rba_BswSrv.h	   216  
; .\Integration\BSW\Include\rba_BswSrv.h	   217      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   218  }
; .\Integration\BSW\Include\rba_BswSrv.h	   219  
; .\Integration\BSW\Include\rba_BswSrv.h	   220  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   221   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   222   * rba_BswSrv_MemCopy16 - copy non overlapping memory in 16 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   223   *
; .\Integration\BSW\Include\rba_BswSrv.h	   224   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 2 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   225   * aligned. The size should be a multiple of 2. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   226   * of 2.
; .\Integration\BSW\Include\rba_BswSrv.h	   227   *
; .\Integration\BSW\Include\rba_BswSrv.h	   228   * \param   xDest_pu16      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   229   * \param   xSrc_pcu16      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   230   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   231   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy32, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   232   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   233   */
; .\Integration\BSW\Include\rba_BswSrv.h	   234  LOCAL_INLINE void rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   235  {
; .\Integration\BSW\Include\rba_BswSrv.h	   236      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   237  
; .\Integration\BSW\Include\rba_BswSrv.h	   238      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 2); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   239      {
; .\Integration\BSW\Include\rba_BswSrv.h	   240          *xDest_pu16 = *xSrc_pcu16;
; .\Integration\BSW\Include\rba_BswSrv.h	   241          xDest_pu16++;
; .\Integration\BSW\Include\rba_BswSrv.h	   242          xSrc_pcu16++;
; .\Integration\BSW\Include\rba_BswSrv.h	   243      }
; .\Integration\BSW\Include\rba_BswSrv.h	   244  
; .\Integration\BSW\Include\rba_BswSrv.h	   245      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   246  }
; .\Integration\BSW\Include\rba_BswSrv.h	   247  
; .\Integration\BSW\Include\rba_BswSrv.h	   248  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   249   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   250   * rba_BswSrv_MemCopy8 - copy non overlapping memory
; .\Integration\BSW\Include\rba_BswSrv.h	   251   *
; .\Integration\BSW\Include\rba_BswSrv.h	   252   * Memory copy routine. Source and destination must not overlap.
; .\Integration\BSW\Include\rba_BswSrv.h	   253   *
; .\Integration\BSW\Include\rba_BswSrv.h	   254   * \param   xDest_pu8       destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   255   * \param   xSrc_pcu8       source address
; .\Integration\BSW\Include\rba_BswSrv.h	   256   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   257   * \seealso     rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy32, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   258   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   259   */
; .\Integration\BSW\Include\rba_BswSrv.h	   260  LOCAL_INLINE void rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   261  {
; .\Integration\BSW\Include\rba_BswSrv.h	   262      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   263  
; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)
	mov	d15,#0
.L39:

; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)      (inlined)
	j	.L4
.L5:

; .\Integration\BSW\Include\rba_BswSrv.h	   265      {
; .\Integration\BSW\Include\rba_BswSrv.h	   266          *xDest_pu8 = *xSrc_pcu8;
	ld.bu	d0,[a15]
.L52:
	st.b	[a4],d0
.L53:

; .\Integration\BSW\Include\rba_BswSrv.h	   267          xDest_pu8++;
	add.a	a4,#1
.L54:

; .\Integration\BSW\Include\rba_BswSrv.h	   268          xSrc_pcu8++;
	add.a	a15,#1
.L55:
	add	d15,#1

; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)      (inlined)
.L4:
	jlt.u	d15,d5,.L5
.L56:

; .\Integration\BSW\Include\rba_BswSrv.h	   271      return;      (inlined)
	j	.L6

; .\Integration\BSW\Include\rba_BswSrv.h	   272  }      (inlined)
.L6:
.L3:

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    37      }
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    38  
; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    39      return RetVal;
	j	.L7

; Integration\BSW\Src\rba_FeeFs1_SyncRead.c	    40  }
.L7:
	ret
.L20:
	
__Fee_Fls_SyncRead_function_end:
	.size	Fee_Fls_SyncRead,__Fee_Fls_SyncRead_function_end-Fee_Fls_SyncRead
.L18:
	; End of function
	
	.calls	'Fee_Fls_SyncRead','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L11:
	.word	9351
	.half	3
	.word	.L12
	.byte	4
.L10:
	.byte	1
	.byte	'Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L13
.L19:
	.byte	2
	.byte	'unsigned char',0,1,8
.L23:
	.byte	3
	.word	141
	.byte	4
	.word	141
	.byte	3
	.word	163
.L21:
	.byte	2
	.byte	'unsigned int',0,4,7
.L27:
	.byte	5
	.byte	'rba_BswSrv_MemCopy8',0,3,1,132,2,19,1,1
.L29:
	.byte	6
	.byte	'xDest_pu8',0,1,132,2,46
	.word	158
.L31:
	.byte	6
	.byte	'xSrc_pcu8',0,1,132,2,70
	.word	168
.L33:
	.byte	6
	.byte	'numBytes_u32',0,1,132,2,88
	.word	173
.L35:
	.byte	7,0,8
	.word	189
	.byte	9
	.word	217
	.byte	9
	.word	236
	.byte	9
	.word	255
	.byte	7,0,10,1,3
	.word	301
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	303
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	326
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	141
	.byte	2
	.byte	'unsigned short int',0,2,7,11
	.byte	'uint16',0,3,91,25
	.word	362
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	173
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	414
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	141
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	141
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	141
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	362
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	362
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	141
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	141
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	141
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	515
	.byte	11
	.byte	'rba_BswSrv_uint64',0,1,66,28
	.word	414
	.byte	12,5,93,9,8,13
	.byte	'Class',0
	.word	141
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	141
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	173
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,5,97,3
	.word	691
	.byte	14,68
	.word	173
	.byte	15,16,0,12,5,154,1,9,68,13
	.byte	'store',0
	.word	771
	.byte	68,2,35,0,0,14,68
	.word	780
	.byte	15,0,0,11
	.byte	'Os_JumpBufType',0,5,156,1,3
	.word	802
	.byte	11
	.byte	'Os_StackTraceType',0,5,174,1,18
	.word	173
	.byte	12,5,175,1,9,8,13
	.byte	'sp',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	173
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,5,175,1,63
	.word	862
	.byte	11
	.byte	'Os_StackSizeType',0,5,176,1,27
	.word	862
	.byte	16,1,1,3
	.word	947
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,5,179,1,16
	.word	950
	.byte	11
	.byte	'ApplicationType',0,5,193,1,23
	.word	141
	.byte	17
	.byte	'Os_ApplicationConfigurationType_s',0,5,198,1,16,2,13
	.byte	'app_id',0
	.word	141
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,5,201,1,3
	.word	1013
	.byte	11
	.byte	'Os_CoreStateType',0,5,203,1,16
	.word	173
	.byte	11
	.byte	'AreaIdType',0,5,204,1,16
	.word	362
	.byte	11
	.byte	'Os_PeripheralAddressType',0,5,212,1,22
	.word	173
	.byte	11
	.byte	'TickType',0,5,221,1,22
	.word	173
	.byte	11
	.byte	'Os_StopwatchTickType',0,5,225,1,22
	.word	173
	.byte	3
	.word	173
	.byte	11
	.byte	'Os_Lockable',0,5,234,1,18
	.word	1255
	.byte	11
	.byte	'CoreIdType',0,5,236,1,16
	.word	362
	.byte	11
	.byte	'SpinlockIdType',0,5,237,1,16
	.word	362
	.byte	18,5,239,1,9,4,19
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,19
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,5,239,1,74
	.word	1325
	.byte	18,5,174,2,9,4,19
	.byte	'APPLICATION_ACCESSIBLE',0,0,19
	.byte	'APPLICATION_RESTARTING',0,1,19
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,5,174,2,92
	.word	1418
	.byte	20
	.byte	'void',0,3
	.word	1530
	.byte	21,1,1,22
	.word	141
	.byte	22
	.word	1536
	.byte	0,3
	.word	1541
	.byte	11
	.byte	'Os_FunctionEntryType',0,5,183,2,16
	.word	1555
	.byte	17
	.byte	'Os_MeterInfoType_s',0,5,193,2,16,48,13
	.byte	'elapsed',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	173
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	173
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	862
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	862
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	862
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	862
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,5,202,2,3
	.word	1590
	.byte	3
	.word	1590
	.byte	11
	.byte	'Os_MeterInfoRefType',0,5,203,2,50
	.word	1788
	.byte	11
	.byte	'EventMaskType',0,5,206,2,15
	.word	141
	.byte	11
	.byte	'Os_imaskType',0,5,211,2,16
	.word	173
	.byte	17
	.byte	'Os_ISRDynType_s',0,5,213,2,16,48,13
	.byte	'meter',0
	.word	1590
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,5,215,2,3
	.word	1867
	.byte	3
	.word	1867
	.byte	4
	.word	1928
	.byte	17
	.byte	'Os_ISRType_s',0,5,216,2,16,24,13
	.byte	'entry_function',0
	.word	955
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	1933
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	173
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	862
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	141
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,5,223,2,3
	.word	1938
	.byte	3
	.word	947
	.byte	4
	.word	1938
	.byte	3
	.word	2097
	.byte	11
	.byte	'ISRType',0,5,224,2,46
	.word	2102
	.byte	11
	.byte	'Os_bitmask',0,5,239,2,22
	.word	173
	.byte	11
	.byte	'Os_pset0Type',0,5,240,2,20
	.word	173
	.byte	11
	.byte	'Os_pset1Type',0,5,241,2,20
	.word	173
	.byte	11
	.byte	'Os_pset2Type',0,5,242,2,20
	.word	173
	.byte	23,5,243,2,9,4,13
	.byte	'p0',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	173
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,5,247,2,3
	.word	2210
	.byte	23,5,249,2,9,4,13
	.byte	't0',0
	.word	173
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	173
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	173
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,5,253,2,3
	.word	2274
	.byte	11
	.byte	'Os_ActivationCountType',0,5,254,2,23
	.word	141
	.byte	17
	.byte	'Os_TaskDynType_s',0,5,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	811
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	1590
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	141
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,5,132,3,3
	.word	2372
	.byte	14,68
	.word	780
	.byte	15,0,0,3
	.word	2372
	.byte	4
	.word	2498
	.byte	17
	.byte	'Os_TaskType_s',0,5,134,3,16,40,13
	.byte	'dynamic',0
	.word	2503
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	955
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	2210
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	2274
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	2274
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	362
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	173
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	862
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	141
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	141
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,5,146,3,3
	.word	2508
	.byte	4
	.word	2508
	.byte	3
	.word	2758
	.byte	11
	.byte	'TaskType',0,5,147,3,47
	.word	2763
	.byte	24
	.byte	'Os_TaskStateType',0,5,155,3,6,4,19
	.byte	'SUSPENDED',0,0,19
	.byte	'READY',0,1,19
	.byte	'WAITING',0,2,19
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,5,156,3,31
	.word	2786
	.byte	23,5,167,3,3,4,13
	.byte	'tpmask',0
	.word	2274
	.byte	4,2,35,0,0,17
	.byte	'Os_ResourceDynType_s',0,5,166,3,16,4,13
	.byte	'saved_priority',0
	.word	2873
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,5,170,3,3
	.word	2896
	.byte	3
	.word	2896
	.byte	4
	.word	2976
	.byte	17
	.byte	'Os_ResourceType_s',0,5,171,3,16,12,13
	.byte	'dynamic',0
	.word	2981
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	2274
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,5,175,3,3
	.word	2986
	.byte	12,5,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	173
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,5,185,3,3
	.word	3085
	.byte	12,5,206,3,9,8,13
	.byte	'Running',0
	.word	141
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	141
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	173
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,5,210,3,3
	.word	3180
	.byte	25
	.word	141
	.byte	1,1,3
	.word	3266
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,5,217,3,22
	.word	3273
	.byte	17
	.byte	's_swd',0,5,222,3,12,4,13
	.byte	'count',0
	.word	173
	.byte	4,2,35,0,0,23,5,221,3,3,4,13
	.byte	'sw',0
	.word	3309
	.byte	4,2,35,0,0,17
	.byte	'Os_CounterDynType_s',0,5,220,3,16,4,13
	.byte	'type_dependent',0
	.word	3337
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,5,226,3,3
	.word	3356
	.byte	3
	.word	3356
	.byte	4
	.word	3434
	.byte	17
	.byte	'Os_CounterType_s',0,5,227,3,16,28,13
	.byte	'dynamic',0
	.word	3439
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	3278
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	3085
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	1536
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	141
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,5,234,3,3
	.word	3444
	.byte	3
	.word	3266
	.byte	4
	.word	3444
	.byte	3
	.word	3596
	.byte	11
	.byte	'CounterType',0,5,235,3,52
	.word	3601
	.byte	24
	.byte	'Os_ScheduleTableStatusType',0,5,240,3,6,4,19
	.byte	'SCHEDULETABLE_STOPPED',0,0,19
	.byte	'SCHEDULETABLE_NEXT',0,1,19
	.byte	'SCHEDULETABLE_WAITING',0,2,19
	.byte	'SCHEDULETABLE_RUNNING',0,3,19
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,5,241,3,41
	.word	3627
	.byte	4
	.word	.L40-.L11
	.byte	3
	.word	3827
	.byte	11
	.byte	'ScheduleTableType',0,5,128,4,58
	.word	3832
	.byte	17
	.byte	'Os_ScheduleTableDynType_s',0,5,130,4,16,16,13
	.byte	'match',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	3837
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	3627
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	362
	.byte	2,2,35,12,0,3
	.word	3864
	.byte	4
	.word	3957
.L40:
	.byte	17
	.byte	'Os_ScheduleTableType_s',0,5,247,3,16,16,13
	.byte	'dynamic',0
	.word	3962
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	3606
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	141
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	362
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	141
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	141
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	141
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,5,255,3,3
	.word	3967
	.byte	4
	.word	3967
	.byte	3
	.word	4147
	.byte	4
	.word	3444
	.byte	3
	.word	4157
	.byte	26
	.word	1260
	.byte	26
	.word	2210
	.byte	26
	.word	2107
	.byte	26
	.word	2768
	.byte	26
	.word	2274
	.byte	26
	.word	141
	.byte	26
	.word	2768
	.byte	17
	.byte	'Os_ControlledCoreType_s',0,5,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	691
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	4167
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	4172
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	4177
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	4182
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	4187
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	1793
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	1590
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	141
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	4192
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	862
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	141
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	4197
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	862
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	141
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	141
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	141
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,5,141,7,3
	.word	4202
	.byte	3
	.word	173
	.byte	4
	.word	1938
	.byte	3
	.word	4658
	.byte	4
	.word	2508
	.byte	3
	.word	4668
	.byte	3
	.word	1590
	.byte	17
	.byte	'Os_AnyCoreType_s',0,5,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	173
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	173
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	173
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	173
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	811
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	141
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,5,160,7,3
	.word	4683
	.byte	11
	.byte	'unsigned_int',0,6,116,22
	.word	173
	.byte	18,7,31,9,4,19
	.byte	'MEMIF_JOB_OK',0,0,19
	.byte	'MEMIF_JOB_FAILED',0,1,19
	.byte	'MEMIF_JOB_PENDING',0,2,19
	.byte	'MEMIF_JOB_CANCELED',0,3,19
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,19
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,11
	.byte	'MemIf_JobResultType',0,7,39,2
	.word	4945
	.byte	18,7,41,9,4,19
	.byte	'MEMIF_MODE_SLOW',0,0,19
	.byte	'MEMIF_MODE_FAST',0,1,0,11
	.byte	'MemIf_ModeType',0,7,45,2
	.word	5103
	.byte	11
	.byte	'PduIdType',0,8,22,19
	.word	362
	.byte	11
	.byte	'PduLengthType',0,8,26,19
	.word	362
	.byte	18,9,113,9,4,19
	.byte	'TP_DATACONF',0,0,19
	.byte	'TP_DATARETRY',0,1,19
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,9,118,3
	.word	5208
	.byte	11
	.byte	'Can_IdType',0,10,32,16
	.word	173
	.byte	11
	.byte	'Can_HwHandleType',0,10,43,16
	.word	362
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	173
	.byte	17
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	141
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	141
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	173
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5364
	.byte	17
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	141
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	141
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	5500
	.byte	14,4
	.word	141
	.byte	15,3,0,17
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	5640
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	5649
	.byte	17
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	362
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	5750
	.byte	17
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	362
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	5825
	.byte	4
	.word	5825
	.byte	3
	.word	5990
	.byte	17
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5995
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6000
	.byte	17
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	5640
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6100
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	141
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	141
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	1536
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	1536
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	362
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	141
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6246
	.byte	18,12,175,1,9,4,19
	.byte	'RTE_DRA',0,0,19
	.byte	'RTE_WOWP',0,1,19
	.byte	'RTE_TASK',0,2,19
	.byte	'RTE_ARE',0,3,19
	.byte	'RTE_EV',0,4,19
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6333
	.byte	14,128,8
	.word	141
	.byte	15,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	6431
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	173
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	362
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	141
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	141
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	141
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	141
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	141
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	6622
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	141
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	141
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	141
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	141
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	141
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	362
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	141
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	362
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	141
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	6963
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	362
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	141
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	173
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	362
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	141
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	141
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	362
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	141
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	141
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	141
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	141
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	141
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	141
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	141
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	141
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	141
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	141
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	141
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	141
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	7195
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	362
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	362
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	141
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	141
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	141
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	141
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	141
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	7699
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	141
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	141
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	141
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	141
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	141
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	6442
	.byte	14,128,8
	.word	141
	.byte	15,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	6442
	.byte	11
	.byte	'Fls_AddressType',0,14,171,3,16
	.word	173
	.byte	11
	.byte	'Fls_LengthType',0,14,173,3,16
	.word	173
	.byte	17
	.byte	'Fls_JobStartType',0,14,175,3,16,1,27
	.byte	'Reserved1',0,1
	.word	141
	.byte	1,7,2,35,0,27
	.byte	'Write',0,1
	.word	141
	.byte	1,6,2,35,0,27
	.byte	'Erase',0,1
	.word	141
	.byte	1,5,2,35,0,27
	.byte	'Read',0,1
	.word	141
	.byte	1,4,2,35,0,27
	.byte	'Compare',0,1
	.word	141
	.byte	1,3,2,35,0,27
	.byte	'Reserved2',0,1
	.word	141
	.byte	3,0,2,35,0,0,11
	.byte	'Fls_JobStartType',0,14,183,3,3
	.word	8566
	.byte	11
	.byte	'Fls_17_Pmu_Job_Type',0,14,187,3,15
	.word	141
	.byte	14,2
	.word	141
	.byte	15,1,0,17
	.byte	'Fls_17_Pmu_StateType',0,14,198,3,16,48,13
	.byte	'FlsReadAddress',0
	.word	173
	.byte	4,2,35,0,13
	.byte	'FlsWriteAddress',0
	.word	173
	.byte	4,2,35,4,13
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	173
	.byte	4,2,35,8,13
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	173
	.byte	4,2,35,12,13
	.byte	'FlsReadLength',0
	.word	173
	.byte	4,2,35,16,13
	.byte	'FlsWriteLength',0
	.word	173
	.byte	4,2,35,20,13
	.byte	'FlsReadBufferPtr',0
	.word	158
	.byte	4,2,35,24,13
	.byte	'FlsWriteBufferPtr',0
	.word	168
	.byte	4,2,35,28,13
	.byte	'FlsJobResult',0
	.word	4945
	.byte	4,2,35,32,13
	.byte	'FlsMode',0
	.word	5103
	.byte	4,2,35,36,13
	.byte	'NotifCaller',0
	.word	141
	.byte	1,2,35,40,13
	.byte	'JobStarted',0
	.word	8566
	.byte	1,2,35,41,13
	.byte	'FlsJobType',0
	.word	8756
	.byte	2,2,35,42,13
	.byte	'FlsOper',0
	.word	141
	.byte	1,2,35,44,13
	.byte	'FlsTimeoutErr',0
	.word	141
	.byte	1,2,35,45,13
	.byte	'FlsTimeoutControl',0
	.word	141
	.byte	1,2,35,46,0,11
	.byte	'Fls_17_Pmu_StateType',0,14,130,4,3
	.word	8765
	.byte	11
	.byte	'Fls_NotifFunctionPtrType',0,14,137,4,16
	.word	950
	.byte	4
	.word	173
	.byte	3
	.word	9243
	.byte	21,1,1,22
	.word	173
	.byte	22
	.word	173
	.byte	22
	.word	9248
	.byte	22
	.word	141
	.byte	0,3
	.word	9253
	.byte	11
	.byte	'Fls_WriteCmdPtrType',0,14,139,4,16
	.word	9277
	.byte	21,1,1,22
	.word	173
	.byte	0,3
	.word	9311
	.byte	11
	.byte	'Fls_EraseCmdPtrType',0,14,144,4,16
	.word	9320
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L12:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,38,0,73,19
	.byte	0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,11,0,0
	.byte	0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8,58,15,59,15,57,15,73,19,0,0,12,19,1,58
	.byte	15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16
	.byte	21,0,54,15,39,12,0,0,17,19,1,3,8,58,15,59,15,57,15,11,15,0,0,18,4,1,58,15,59,15,57,15,11,15,0,0,19,40
	.byte	0,3,8,28,13,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0,73,19,0,0,23,23,1,58,15,59,15,57,15,11
	.byte	15,0,0,24,4,1,3,8,58,15,59,15,57,15,11,15,0,0,25,21,0,73,19,54,15,39,12,0,0,26,53,0,73,19,0,0,27,13,0
	.byte	3,8,11,15,73,19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L13:
	.word	.L42-.L41
.L41:
	.half	3
	.word	.L44-.L43
.L43:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0,0
.L44:
.L42:
	.sdecl	'.debug_info',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_info'
.L14:
	.word	370
	.half	3
	.word	.L15
	.byte	4,1
	.byte	'Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L17,.L16
	.byte	2
	.word	.L10
	.byte	3
	.byte	'Fee_Fls_SyncRead',0,1,24,16
	.word	.L19
	.byte	1,1,1
	.word	.L9,.L20,.L8
	.byte	4
	.byte	'SourceAddress',0,1,24,49
	.word	.L21,.L22
	.byte	4
	.byte	'TargetAddressPtr',0,1,25,40
	.word	.L23,.L24
	.byte	4
	.byte	'Length',0,1,26,16
	.word	.L21,.L25
	.byte	5
	.word	.L9,.L20
	.byte	6
	.byte	'RetVal',0,1,30,20
	.word	.L19,.L26
	.byte	7
	.word	.L27,.L28,.L3
	.byte	8
	.word	.L29,.L30
	.byte	8
	.word	.L31,.L32
	.byte	8
	.word	.L33,.L34
	.byte	9
	.word	.L35,.L28,.L3
	.byte	6
	.byte	'ctLoop_u32',0,2,134,2,12
	.word	.L21,.L36
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_abbrev'
.L15:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_line'
.L16:
	.word	.L46-.L45
.L45:
	.half	3
	.word	.L48-.L47
.L47:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'Integration\\BSW\\Src\\rba_FeeFs1_SyncRead.c',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L48:
	.byte	5,27,7,0,5,2
	.word	.L9
	.byte	3,29,1,5,5,9
	.half	.L38-.L9
	.byte	3,2,1,5,16,7,9
	.half	.L49-.L38
	.byte	3,2,1,5,26,9
	.half	.L50-.L49
	.byte	1,5,47,9
	.half	.L2-.L50
	.byte	3,2,1,5,64,9
	.half	.L51-.L2
	.byte	1,4,2,5,20,9
	.half	.L28-.L51
	.byte	3,228,1,1,5,50,9
	.half	.L39-.L28
	.byte	1,5,22,9
	.half	.L5-.L39
	.byte	3,2,1,5,20,9
	.half	.L52-.L5
	.byte	1,5,18,9
	.half	.L53-.L52
	.byte	3,1,1,9
	.half	.L54-.L53
	.byte	3,1,1,5,62,9
	.half	.L55-.L54
	.byte	3,124,1,5,50,9
	.half	.L4-.L55
	.byte	1,5,5,7,9
	.half	.L56-.L4
	.byte	3,7,1,4,1,9
	.half	.L3-.L56
	.byte	3,152,126,1,5,1,9
	.half	.L7-.L3
	.byte	3,1,1,7,9
	.half	.L18-.L7
	.byte	0,1,1
.L46:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_ranges'
.L17:
	.word	-1,.L9,0,.L18-.L9,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_loc'
.L8:
	.word	-1,.L9,0,.L20-.L9
	.half	2
	.byte	138,0
	.word	0,0
.L25:
	.word	-1,.L9,0,.L20-.L9
	.half	1
	.byte	85
	.word	0,0
.L26:
	.word	-1,.L9,.L38-.L9,.L20-.L9
	.half	1
	.byte	82
	.word	0,0
.L22:
	.word	-1,.L9,0,.L37-.L9
	.half	1
	.byte	84
	.word	0,0
.L24:
	.word	-1,.L9,0,.L20-.L9
	.half	1
	.byte	100
	.word	0,0
.L36:
	.word	-1,.L9,.L39-.L9,.L3-.L9
	.half	1
	.byte	95
	.word	0,0
.L34:
	.word	0,0
.L30:
	.word	0,0
.L32:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L57:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_Fls_SyncRead')
	.sect	'.debug_frame'
	.word	24
	.word	.L57,.L9,.L20-.L9
	.byte	8,18,8,19,8,21,8,22,8,23,0,0


	; Module end
