	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc17724a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Crc_32.src BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c'

	
$TC16X
	
	.sdecl	'.text.Crc_32.Crc_CalculateCRC32',code,cluster('Crc_CalculateCRC32')
	.sect	'.text.Crc_32.Crc_CalculateCRC32'
	.align	2
	
	.global	Crc_CalculateCRC32

; BSW\src\BSW\Gen\Crc\Crc_32.c	     1  
; BSW\src\BSW\Gen\Crc\Crc_32.c	     2  
; BSW\src\BSW\Gen\Crc\Crc_32.c	     3  /*
; BSW\src\BSW\Gen\Crc\Crc_32.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	     5   * Includes
; BSW\src\BSW\Gen\Crc\Crc_32.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	     7   */
; BSW\src\BSW\Gen\Crc\Crc_32.c	     8  #include "Crc.h"
; BSW\src\BSW\Gen\Crc\Crc_32.c	     9  
; BSW\src\BSW\Gen\Crc\Crc_32.c	    10  /**
; BSW\src\BSW\Gen\Crc\Crc_32.c	    11   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	    12   * Crc_calculateCRC32
; BSW\src\BSW\Gen\Crc\Crc_32.c	    13   *
; BSW\src\BSW\Gen\Crc\Crc_32.c	    14   * \brief Calculates the remainder of a polynomial division: input is divided by the CRC32H04C11DB7 polynomial
; BSW\src\BSW\Gen\Crc\Crc_32.c	    15   *
; BSW\src\BSW\Gen\Crc\Crc_32.c	    16   * Crc_calculateCRC32 calculates the remainder of a polynomial divided by the crc polynomial with Hex-value 0x104C11DB7.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    17   * Crc calculation starts with an initial value, Crc_StartValue32.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    18   * The Crc remainder is calculated over a reflected data stream *Crc_DataPtr of length Crc_Length.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    19   * Note, 0xEDB88320 is the reflected data stream of 0x04C11DB7. 0x04C11DB7 describes the truncated crc polynomial .
; BSW\src\BSW\Gen\Crc\Crc_32.c	    20   * Thus, 0xEDB88320 is the reflected data stream of the truncated crc polynomial.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    21   * The result data are reflected, too.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    22   * At the end the remainder is manipulated by a XOR operation using the value CRC_XOR_VALUE32.
; BSW\src\BSW\Gen\Crc\Crc_32.c	    23   *
; BSW\src\BSW\Gen\Crc\Crc_32.c	    24   * \param    Crc_DataPtr,      Pointer to start address of data block
; BSW\src\BSW\Gen\Crc\Crc_32.c	    25   * \param    Crc_Length,       Length of data block to be calculated in bytes
; BSW\src\BSW\Gen\Crc\Crc_32.c	    26   * \param    Crc_StartValue32  Start value when the algorithm starts
; BSW\src\BSW\Gen\Crc\Crc_32.c	    27   * \return                     Remainder after polynomial division *const Crc_DataPtr / CRC32
; BSW\src\BSW\Gen\Crc\Crc_32.c	    28   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	    29   */
; BSW\src\BSW\Gen\Crc\Crc_32.c	    30  /*
; BSW\src\BSW\Gen\Crc\Crc_32.c	    31   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	    32   * TABLE Version, Revision_2
; BSW\src\BSW\Gen\Crc\Crc_32.c	    33   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_32.c	    34  */
; BSW\src\BSW\Gen\Crc\Crc_32.c	    35  
; BSW\src\BSW\Gen\Crc\Crc_32.c	    36  #define CRC_START_SEC_CONST_32
; BSW\src\BSW\Gen\Crc\Crc_32.c	    37  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_32.c	    38  const uint32  CRC_32_REVH04C11DB7_Tbl[((uint16)CRC_32_TABLESIZE)] =
; BSW\src\BSW\Gen\Crc\Crc_32.c	    39  {
; BSW\src\BSW\Gen\Crc\Crc_32.c	    40      /*  0:*/ 0x00000000uL, 0x77073096uL, 0xee0e612cuL, 0x990951bauL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    41      /*  4:*/ 0x076dc419uL, 0x706af48fuL, 0xe963a535uL, 0x9e6495a3uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    42      /*  8:*/ 0x0edb8832uL, 0x79dcb8a4uL, 0xe0d5e91euL, 0x97d2d988uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    43      /*  8:*/ 0x09b64c2buL, 0x7eb17cbduL, 0xe7b82d07uL, 0x90bf1d91uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    44      /* 16:*/ 0x1db71064uL, 0x6ab020f2uL, 0xf3b97148uL, 0x84be41deuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    45      /* 20:*/ 0x1adad47duL, 0x6ddde4ebuL, 0xf4d4b551uL, 0x83d385c7uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    46      /* 24:*/ 0x136c9856uL, 0x646ba8c0uL, 0xfd62f97auL, 0x8a65c9ecuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    47      /* 28:*/ 0x14015c4fuL, 0x63066cd9uL, 0xfa0f3d63uL, 0x8d080df5uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    48      /* 32:*/ 0x3b6e20c8uL, 0x4c69105euL, 0xd56041e4uL, 0xa2677172uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    49      /* 36:*/ 0x3c03e4d1uL, 0x4b04d447uL, 0xd20d85fduL, 0xa50ab56buL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    50      /* 40:*/ 0x35b5a8fauL, 0x42b2986cuL, 0xdbbbc9d6uL, 0xacbcf940uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    51      /* 44:*/ 0x32d86ce3uL, 0x45df5c75uL, 0xdcd60dcfuL, 0xabd13d59uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    52      /* 48:*/ 0x26d930acuL, 0x51de003auL, 0xc8d75180uL, 0xbfd06116uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    53      /* 52:*/ 0x21b4f4b5uL, 0x56b3c423uL, 0xcfba9599uL, 0xb8bda50fuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    54      /* 56:*/ 0x2802b89euL, 0x5f058808uL, 0xc60cd9b2uL, 0xb10be924uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    55      /* 60:*/ 0x2f6f7c87uL, 0x58684c11uL, 0xc1611dabuL, 0xb6662d3duL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    56      /* 64:*/ 0x76dc4190uL, 0x01db7106uL, 0x98d220bcuL, 0xefd5102auL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    57      /* 68:*/ 0x71b18589uL, 0x06b6b51fuL, 0x9fbfe4a5uL, 0xe8b8d433uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    58      /* 72:*/ 0x7807c9a2uL, 0x0f00f934uL, 0x9609a88euL, 0xe10e9818uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    59      /* 76:*/ 0x7f6a0dbbuL, 0x086d3d2duL, 0x91646c97uL, 0xe6635c01uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    60      /* 80:*/ 0x6b6b51f4uL, 0x1c6c6162uL, 0x856530d8uL, 0xf262004euL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    61      /* 84:*/ 0x6c0695eduL, 0x1b01a57buL, 0x8208f4c1uL, 0xf50fc457uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    62      /* 88:*/ 0x65b0d9c6uL, 0x12b7e950uL, 0x8bbeb8eauL, 0xfcb9887cuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    63      /* 92:*/ 0x62dd1ddfuL, 0x15da2d49uL, 0x8cd37cf3uL, 0xfbd44c65uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    64      /* 96:*/ 0x4db26158uL, 0x3ab551ceuL, 0xa3bc0074uL, 0xd4bb30e2uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    65      /*100:*/ 0x4adfa541uL, 0x3dd895d7uL, 0xa4d1c46duL, 0xd3d6f4fbuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    66      /*104:*/ 0x4369e96auL, 0x346ed9fcuL, 0xad678846uL, 0xda60b8d0uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    67      /*108:*/ 0x44042d73uL, 0x33031de5uL, 0xaa0a4c5fuL, 0xdd0d7cc9uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    68      /*112:*/ 0x5005713cuL, 0x270241aauL, 0xbe0b1010uL, 0xc90c2086uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    69      /*116:*/ 0x5768b525uL, 0x206f85b3uL, 0xb966d409uL, 0xce61e49fuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    70      /*120:*/ 0x5edef90euL, 0x29d9c998uL, 0xb0d09822uL, 0xc7d7a8b4uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    71      /*124:*/ 0x59b33d17uL, 0x2eb40d81uL, 0xb7bd5c3buL, 0xc0ba6caduL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    72      /*128:*/ 0xedb88320uL, 0x9abfb3b6uL, 0x03b6e20cuL, 0x74b1d29auL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    73      /*132:*/ 0xead54739uL, 0x9dd277afuL, 0x04db2615uL, 0x73dc1683uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    74      /*136:*/ 0xe3630b12uL, 0x94643b84uL, 0x0d6d6a3euL, 0x7a6a5aa8uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    75      /*140:*/ 0xe40ecf0buL, 0x9309ff9duL, 0x0a00ae27uL, 0x7d079eb1uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    76      /*144:*/ 0xf00f9344uL, 0x8708a3d2uL, 0x1e01f268uL, 0x6906c2feuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    77      /*148:*/ 0xf762575duL, 0x806567cbuL, 0x196c3671uL, 0x6e6b06e7uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    78      /*152:*/ 0xfed41b76uL, 0x89d32be0uL, 0x10da7a5auL, 0x67dd4accuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    79      /*156:*/ 0xf9b9df6fuL, 0x8ebeeff9uL, 0x17b7be43uL, 0x60b08ed5uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    80      /*160:*/ 0xd6d6a3e8uL, 0xa1d1937euL, 0x38d8c2c4uL, 0x4fdff252uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    81      /*164:*/ 0xd1bb67f1uL, 0xa6bc5767uL, 0x3fb506dduL, 0x48b2364buL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    82      /*168:*/ 0xd80d2bdauL, 0xaf0a1b4cuL, 0x36034af6uL, 0x41047a60uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    83      /*172:*/ 0xdf60efc3uL, 0xa867df55uL, 0x316e8eefuL, 0x4669be79uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    84      /*176:*/ 0xcb61b38cuL, 0xbc66831auL, 0x256fd2a0uL, 0x5268e236uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    85      /*180:*/ 0xcc0c7795uL, 0xbb0b4703uL, 0x220216b9uL, 0x5505262fuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    86      /*184:*/ 0xc5ba3bbeuL, 0xb2bd0b28uL, 0x2bb45a92uL, 0x5cb36a04uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    87      /*188:*/ 0xc2d7ffa7uL, 0xb5d0cf31uL, 0x2cd99e8buL, 0x5bdeae1duL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    88      /*192:*/ 0x9b64c2b0uL, 0xec63f226uL, 0x756aa39cuL, 0x026d930auL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    89      /*196:*/ 0x9c0906a9uL, 0xeb0e363fuL, 0x72076785uL, 0x05005713uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    90      /*200:*/ 0x95bf4a82uL, 0xe2b87a14uL, 0x7bb12baeuL, 0x0cb61b38uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    91      /*204:*/ 0x92d28e9buL, 0xe5d5be0duL, 0x7cdcefb7uL, 0x0bdbdf21uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    92      /*208:*/ 0x86d3d2d4uL, 0xf1d4e242uL, 0x68ddb3f8uL, 0x1fda836euL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    93      /*212:*/ 0x81be16cduL, 0xf6b9265buL, 0x6fb077e1uL, 0x18b74777uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    94      /*216:*/ 0x88085ae6uL, 0xff0f6a70uL, 0x66063bcauL, 0x11010b5cuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    95      /*220:*/ 0x8f659effuL, 0xf862ae69uL, 0x616bffd3uL, 0x166ccf45uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    96      /*224:*/ 0xa00ae278uL, 0xd70dd2eeuL, 0x4e048354uL, 0x3903b3c2uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    97      /*228:*/ 0xa7672661uL, 0xd06016f7uL, 0x4969474duL, 0x3e6e77dbuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    98      /*232:*/ 0xaed16a4auL, 0xd9d65adcuL, 0x40df0b66uL, 0x37d83bf0uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	    99      /*236:*/ 0xa9bcae53uL, 0xdebb9ec5uL, 0x47b2cf7fuL, 0x30b5ffe9uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	   100      /*240:*/ 0xbdbdf21cuL, 0xcabac28auL, 0x53b39330uL, 0x24b4a3a6uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	   101      /*244:*/ 0xbad03605uL, 0xcdd70693uL, 0x54de5729uL, 0x23d967bfuL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	   102      /*248:*/ 0xb3667a2euL, 0xc4614ab8uL, 0x5d681b02uL, 0x2a6f2b94uL,
; BSW\src\BSW\Gen\Crc\Crc_32.c	   103      /*252:*/ 0xb40bbe37uL, 0xc30c8ea1uL, 0x5a05df1buL, 0x2d02ef8duL
; BSW\src\BSW\Gen\Crc\Crc_32.c	   104  };
; BSW\src\BSW\Gen\Crc\Crc_32.c	   105  #define CRC_STOP_SEC_CONST_32
; BSW\src\BSW\Gen\Crc\Crc_32.c	   106  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_32.c	   107  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   108  #define CRC_START_SEC_CODE
; BSW\src\BSW\Gen\Crc\Crc_32.c	   109  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_32.c	   110  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   111  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   112  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   113  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   114  /* TRACE [SWS_Crc_00003] */
; BSW\src\BSW\Gen\Crc\Crc_32.c	   115  uint32 Crc_CalculateCRC32(const uint8* Crc_DataPtr, uint32 Crc_Length, uint32 Crc_StartValue32,
; Function Crc_CalculateCRC32
.L8:
Crc_CalculateCRC32:	.type	func

; BSW\src\BSW\Gen\Crc\Crc_32.c	   116                            boolean Crc_IsFirstCall)
; BSW\src\BSW\Gen\Crc\Crc_32.c	   117  {
; BSW\src\BSW\Gen\Crc\Crc_32.c	   118      uint32_least  index;
; BSW\src\BSW\Gen\Crc\Crc_32.c	   119      uint32        crcTemp;
; BSW\src\BSW\Gen\Crc\Crc_32.c	   120      uint32        result;
; BSW\src\BSW\Gen\Crc\Crc_32.c	   121  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   122  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   123      if (Crc_IsFirstCall != FALSE)
	jeq	d6,#0,.L2
.L45:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   124      {
; BSW\src\BSW\Gen\Crc\Crc_32.c	   125          crcTemp = CRC_INITIAL_VALUE32;
	mov	d5,#-1
.L33:
	j	.L3
.L2:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   126      }
; BSW\src\BSW\Gen\Crc\Crc_32.c	   127      else
; BSW\src\BSW\Gen\Crc\Crc_32.c	   128      {
; BSW\src\BSW\Gen\Crc\Crc_32.c	   129          crcTemp = Crc_StartValue32 ^ CRC_XOR_VALUE32;
	mov	d15,#-1
.L34:
	xor	d5,d15
.L3:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   130      }
; BSW\src\BSW\Gen\Crc\Crc_32.c	   131  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   132      for (index = 0U; index < Crc_Length; ++index)
	mov	d0,#0
.L35:
	j	.L4
.L5:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   133      {
; BSW\src\BSW\Gen\Crc\Crc_32.c	   134          /* Impact of temporary rest on next crc rest */
; BSW\src\BSW\Gen\Crc\Crc_32.c	   135          crcTemp ^= Crc_DataPtr[index];
	addsc.a	a15,a4,d0,#0
	ld.bu	d15,[a15]
.L46:
	xor	d5,d15
.L47:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   136  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   137          crcTemp = (crcTemp >> ((uint8)CRC_32_REVH04C11DB7_JUNK)) ^
	sh	d1,d5,#-8
.L48:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   138                     CRC_32_REVH04C11DB7_Tbl[crcTemp & ((uint8)CRC_32_TABLEMASK)];
	and	d15,d5,#255
.L49:
	movh.a	a15,#@his(CRC_32_REVH04C11DB7_Tbl)
	lea	a15,[a15]@los(CRC_32_REVH04C11DB7_Tbl)
.L50:
	addsc.a	a15,a15,d15,#2
	ld.w	d5,[a15]
.L51:
	xor	d5,d1
.L52:
	add	d0,#1
.L4:
	jlt.u	d0,d4,.L5
.L53:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   139      }
; BSW\src\BSW\Gen\Crc\Crc_32.c	   140      result = crcTemp ^ CRC_XOR_VALUE32;
	mov	d2,#-1
.L36:
	xor	d2,d5
.L54:

; BSW\src\BSW\Gen\Crc\Crc_32.c	   141  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   142      return (result);
	j	.L6

; BSW\src\BSW\Gen\Crc\Crc_32.c	   143  }
.L6:
	ret
.L21:
	
__Crc_CalculateCRC32_function_end:
	.size	Crc_CalculateCRC32,__Crc_CalculateCRC32_function_end-Crc_CalculateCRC32
.L17:
	; End of function
	
	.sdecl	'.rodata.Crc_32.CRC_32_REVH04C11DB7_Tbl',data,rom,cluster('CRC_32_REVH04C11DB7_Tbl')
	.sect	'.rodata.Crc_32.CRC_32_REVH04C11DB7_Tbl'
	.global	CRC_32_REVH04C11DB7_Tbl
	.align	4
CRC_32_REVH04C11DB7_Tbl:	.type	object
	.size	CRC_32_REVH04C11DB7_Tbl,1024
	.space	4
	.word	1996959894,-301047508,-1727442502,124634137
	.word	1886057615,-379345611,-1637575261,249268274
	.word	2044508324,-522852066,-1747789432,162941995
	.word	2125561021,-407360249,-1866523247,498536548
	.word	1789927666,-205950648,-2067906082,450548861
	.word	1843258603,-187386543,-2083289657,325883990
	.word	1684777152,-43845254,-1973040660,335633487
	.word	1661365465,-99664541,-1928851979,997073096
	.word	1281953886,-715111964,-1570279054,1006888145
	.word	1258607687,-770865667,-1526024853,901097722
	.word	1119000684,-608450090,-1396901568,853044451
	.word	1172266101,-589951537,-1412350631,651767980
	.word	1373503546,-925412992,-1076862698,565507253
	.word	1454621731,-809855591,-1195530993,671266974
	.word	1594198024,-972236366,-1324619484,795835527
	.word	1483230225,-1050600021,-1234817731,1994146192
	.word	31158534,-1731059524,-271249366,1907459465
	.word	112637215,-1614814043,-390540237,2013776290
	.word	251722036,-1777751922,-519137256,2137656763
	.word	141376813,-1855689577,-429695999,1802195444
	.word	476864866,-2056965928,-228458418,1812370925
	.word	453092731,-2113342271,-183516073,1706088902
	.word	314042704,-1950435094,-54949764,1658658271
	.word	366619977,-1932296973,-69972891,1303535960
	.word	984961486,-1547960204,-725929758,1256170817
	.word	1037604311,-1529756563,-740887301,1131014506
	.word	879679996,-1385723834,-631195440,1141124467
	.word	855842277,-1442165665,-586318647,1342533948
	.word	654459306,-1106571248,-921952122,1466479909
	.word	544179635,-1184443383,-832445281,1591671054
	.word	702138776,-1328506846,-942167884,1504918807
	.word	783551873,-1212326853,-1061524307,-306674912
	.word	-1698712650,62317068,1957810842,-355121351
	.word	-1647151185,81470997,1943803523,-480048366
	.word	-1805370492,225274430,2053790376,-468791541
	.word	-1828061283,167816743,2097651377,-267414716
	.word	-2029476910,503444072,1762050814,-144550051
	.word	-2140837941,426522225,1852507879,-19653770
	.word	-1982649376,282753626,1742555852,-105259153
	.word	-1900089351,397917763,1622183637,-690576408
	.word	-1580100738,953729732,1340076626,-776247311
	.word	-1497606297,1068828381,1219638859,-670225446
	.word	-1358292148,906185462,1090812512,-547295293
	.word	-1469587627,829329135,1181335161,-882789492
	.word	-1134132454,628085408,1382605366,-871598187
	.word	-1156888829,570562233,1426400815,-977650754
	.word	-1296233688,733239954,1555261956,-1026031705
	.word	-1244606671,752459403,1541320221,-1687895376
	.word	-328994266,1969922972,40735498,-1677130071
	.word	-351390145,1913087877,83908371,-1782625662
	.word	-491226604,2075208622,213261112,-1831694693
	.word	-438977011,2094854071,198958881,-2032938284
	.word	-237706686,1759359992,534414190,-2118248755
	.word	-155638181,1873836001,414664567,-2012718362
	.word	-15766928,1711684554,285281116,-1889165569
	.word	-127750551,1634467795,376229701,-1609899400
	.word	-686959890,1308918612,956543938,-1486412191
	.word	-799009033,1231636301,1047427035,-1362007478
	.word	-640263460,1088359270,936918000,-1447252397
	.word	-558129467,1202900863,817233897,-1111625188
	.word	-893730166,1404277552,615818150,-1160759803
	.word	-841546093,1423857449,601450431,-1285129682
	.word	-1000256840,1567103746,711928724,-1274298825
	.word	-1022587231,1510334235,755167117
	.calls	'Crc_CalculateCRC32','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L10:
	.word	312
	.half	3
	.word	.L11
	.byte	4
.L9:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L12
.L20:
	.byte	2
	.byte	'unsigned int',0,4,7
.L26:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	144
.L22:
	.byte	4
	.word	161
.L28:
	.byte	2
	.byte	'unsigned long int',0,4,7,5,1,4
	.word	192
	.byte	6
	.byte	'__codeptr',0,1,1,1
	.word	194
	.byte	6
	.byte	'uint8',0,2,81,25
	.word	144
	.byte	2
	.byte	'unsigned short int',0,2,7,6
	.byte	'uint16',0,2,91,25
	.word	231
	.byte	6
	.byte	'uint32',0,2,106,24
	.word	128
	.byte	6
	.byte	'boolean',0,2,127,25
	.word	144
	.byte	7,128,8
	.word	128
	.byte	8,255,1,0
.L32:
	.byte	3
	.word	299
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L11:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,15,0,73,19
	.byte	0,0,5,21,0,54,15,0,0,6,22,0,3,8,58,15,59,15,57,15,73,19,0,0,7,1,1,11,15,73,19,0,0,8,33,0,47,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L12:
	.word	.L38-.L37
.L37:
	.half	3
	.word	.L40-.L39
.L39:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0,0
.L40:
.L38:
	.sdecl	'.debug_info',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_info'
.L13:
	.word	348
	.half	3
	.word	.L14
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L16,.L15
	.byte	2
	.word	.L9
	.byte	3
	.byte	'Crc_CalculateCRC32',0,1,115,8
	.word	.L20
	.byte	1,1,1
	.word	.L8,.L21,.L7
	.byte	4
	.byte	'Crc_DataPtr',0,1,115,40
	.word	.L22,.L23
	.byte	4
	.byte	'Crc_Length',0,1,115,60
	.word	.L20,.L24
	.byte	4
	.byte	'Crc_StartValue32',0,1,115,79
	.word	.L20,.L25
	.byte	4
	.byte	'Crc_IsFirstCall',0,1,116,35
	.word	.L26,.L27
	.byte	5
	.word	.L8,.L21
	.byte	6
	.byte	'index',0,1,118,19
	.word	.L28,.L29
	.byte	6
	.byte	'crcTemp',0,1,119,19
	.word	.L20,.L30
	.byte	6
	.byte	'result',0,1,120,19
	.word	.L20,.L31
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_abbrev'
.L14:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_line'
.L15:
	.word	.L42-.L41
.L41:
	.half	3
	.word	.L44-.L43
.L43:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c',0,0,0,0,0
.L44:
	.byte	5,5,7,0,5,2
	.word	.L8
	.byte	3,250,0,1,5,17,7,9
	.half	.L45-.L8
	.byte	3,2,1,5,38,9
	.half	.L33-.L45
	.byte	1,9
	.half	.L2-.L33
	.byte	3,4,1,5,36,9
	.half	.L34-.L2
	.byte	1,5,16,9
	.half	.L3-.L34
	.byte	3,3,1,5,40,9
	.half	.L35-.L3
	.byte	1,5,31,9
	.half	.L5-.L35
	.byte	3,3,1,5,17,9
	.half	.L46-.L5
	.byte	1,5,28,9
	.half	.L47-.L46
	.byte	3,2,1,5,52,9
	.half	.L48-.L47
	.byte	3,1,1,5,20,9
	.half	.L49-.L48
	.byte	1,5,43,9
	.half	.L50-.L49
	.byte	1,5,66,9
	.half	.L51-.L50
	.byte	3,127,1,5,42,9
	.half	.L52-.L51
	.byte	3,123,1,5,40,9
	.half	.L4-.L52
	.byte	1,5,24,7,9
	.half	.L53-.L4
	.byte	3,8,1,5,22,9
	.half	.L36-.L53
	.byte	1,5,5,9
	.half	.L54-.L36
	.byte	3,2,1,5,1,9
	.half	.L6-.L54
	.byte	3,1,1,7,9
	.half	.L17-.L6
	.byte	0,1,1
.L42:
	.sdecl	'.debug_ranges',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_ranges'
.L16:
	.word	-1,.L8,0,.L17-.L8,0,0
	.sdecl	'.debug_info',debug,cluster('CRC_32_REVH04C11DB7_Tbl')
	.sect	'.debug_info'
.L18:
	.word	165
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_32.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L9
	.byte	3
	.byte	'CRC_32_REVH04C11DB7_Tbl',0,1,38,15
	.word	.L32
	.byte	1,5,3
	.word	CRC_32_REVH04C11DB7_Tbl
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CRC_32_REVH04C11DB7_Tbl')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_loc'
.L7:
	.word	-1,.L8,0,.L21-.L8
	.half	2
	.byte	138,0
	.word	0,0
.L23:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	100
	.word	0,0
.L27:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	86
	.word	0,0
.L24:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	84
	.word	0,0
.L25:
	.word	-1,.L8,0,.L33-.L8
	.half	1
	.byte	85
	.word	.L2-.L8,.L3-.L8
	.half	1
	.byte	85
	.word	0,0
.L30:
	.word	-1,.L8,.L33-.L8,.L2-.L8
	.half	1
	.byte	85
	.word	.L34-.L8,.L21-.L8
	.half	1
	.byte	85
	.word	0,0
.L29:
	.word	-1,.L8,.L35-.L8,.L21-.L8
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L31:
	.word	-1,.L8,.L36-.L8,.L21-.L8
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L55:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Crc_CalculateCRC32')
	.sect	'.debug_frame'
	.word	24
	.word	.L55,.L8,.L21-.L8
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Crc\Crc_32.c	   144  
; BSW\src\BSW\Gen\Crc\Crc_32.c	   145  #define CRC_STOP_SEC_CODE
; BSW\src\BSW\Gen\Crc\Crc_32.c	   146  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_32.c	   147  

	; Module end
