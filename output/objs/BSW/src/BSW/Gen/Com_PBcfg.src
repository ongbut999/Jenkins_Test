	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc17668a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com_PBcfg.src BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c'

	
$TC16X
	
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xTxSigCfg_acst',data,rom,cluster('Com_Prv_xTxSigCfg_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xTxSigCfg_acst'
	.global	Com_Prv_xTxSigCfg_acst
	.align	4
Com_Prv_xTxSigCfg_acst:	.type	object
	.size	Com_Prv_xTxSigCfg_acst,612
	.space	4
	.half	84
	.byte	24,1
	.space	1
	.byte	38
	.space	6
	.half	84
	.byte	40,1
	.space	1
	.byte	38
	.space	6
	.half	84
	.byte	41,1
	.space	1
	.byte	38
	.space	6
	.half	84
	.byte	42,2
	.space	1
	.byte	32
	.space	6
	.half	84
	.byte	44,2
	.space	1
	.byte	32
	.space	6
	.half	84
	.byte	46,2
	.space	1
	.byte	32
	.space	6
	.half	84
	.byte	56,8
	.space	1
	.byte	32
	.space	6
	.half	84
	.byte	32,4
	.space	1
	.byte	32
	.space	2
	.word	4094
	.half	84
	.byte	27,13
	.space	1
	.byte	34
	.space	2
	.word	32767
	.half	84
	.byte	8,16
	.space	1
	.byte	34
	.space	6
	.half	84
	.byte	55,1
	.space	1
	.byte	38
	.space	2
	.word	40
	.half	84
	.byte	40,8,1,32
	.space	2
	.word	40
	.half	84
	.byte	48,8,1,32
	.space	6
	.half	84
	.byte	26,10,1,34
	.space	2
	.word	511
	.half	84
	.byte	32,10,1,34
	.space	6
	.half	84
	.byte	20,9,1,34
	.space	6
	.half	84
	.byte	13,11,1,34
	.space	6
	.half	84
	.byte	51,1,2,38
	.space	6
	.half	84
	.byte	50,1,2,38
	.space	6
	.half	84
	.byte	49,1,2,38
	.space	6
	.half	84
	.byte	48,1,2,38
	.space	6
	.half	84
	.byte	52,1,2,38
	.space	6
	.half	84
	.byte	39,1,2,38
	.space	6
	.half	84
	.byte	32,1,2,38
	.space	6
	.half	84
	.byte	47,1,2,38
	.space	6
	.half	84
	.byte	46,1,2,38
	.space	6
	.half	84
	.byte	45,1,2,38
	.space	6
	.half	84
	.byte	41,1,2,38
	.space	6
	.half	84
	.byte	43,1,2,38
	.space	6
	.half	84
	.byte	40,1,2,38
	.space	6
	.half	84
	.byte	36,1,2,38
	.space	6
	.half	84
	.byte	38,1,2,38
	.space	6
	.half	84
	.byte	44,1,2,38
	.space	6
	.half	84
	.byte	37,1,2,38
	.space	6
	.half	84
	.byte	34,1,2,38
	.space	6
	.half	84
	.byte	33,1,2,38
	.space	6
	.half	84
	.byte	35,1,2,38
	.space	6
	.half	84
	.byte	42,1,2,38
	.space	6
	.half	84
	.byte	11,1,2,38
	.space	6
	.half	84
	.byte	2,1,2,38
	.space	6
	.half	84
	.byte	5,1,2,38
	.space	6
	.half	84
	.byte	4,1,2,38
	.space	6
	.half	84
	.byte	9,1,2,38
	.space	6
	.half	84
	.byte	3,1,2,38
	.space	6
	.half	84
	.space	1
	.byte	1,2,38
	.space	6
	.half	84
	.byte	8,1,2,38
	.space	6
	.half	84
	.byte	10,1,2,38
	.space	6
	.half	84
	.byte	1,1,2,38
	.space	6
	.half	84
	.byte	6,1,2,38
	.space	6
	.half	84
	.byte	15,1,2,38
	.space	6
	.half	84
	.byte	15,1,3,38
	.space	2
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xRxSigCfg_acst',data,rom,cluster('Com_Prv_xRxSigCfg_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xRxSigCfg_acst'
	.global	Com_Prv_xRxSigCfg_acst
	.align	4
Com_Prv_xRxSigCfg_acst:	.type	object
	.size	Com_Prv_xRxSigCfg_acst,208
	.space	8
	.byte	36
	.space	1
	.byte	1
	.space	1
	.byte	38,40
	.space	10
	.byte	56,1,8
	.space	1
	.byte	32,40
	.space	10
	.byte	48,2,4
	.space	1
	.byte	32,40
	.space	10
	.byte	37,3,1
	.space	1
	.byte	38,40
	.space	10
	.byte	38,4,2
	.space	1
	.byte	32,40
	.space	10
	.byte	24,5,1
	.space	1
	.byte	38,40
	.space	6
	.word	255
	.byte	25
	.space	1
	.byte	15
	.space	1
	.byte	34,40
	.space	2
	.word	Rte_COMCbk_HCU01_Shift,3
	.byte	32,6,2
	.space	1
	.byte	32,104
	.space	2
	.word	Rte_COMCbk_HCU01_TqCmd,255
	.byte	10,1,14
	.space	1
	.byte	34,104
	.space	2
	.word	Rte_COMCbk_HCU02_Poweroff,1
	.byte	6,7,1,1
	.byte	38,104
	.space	2
	.word	Rte_COMCbk_HCU03_Poweroff,1
	.space	1
	.byte	8,1,2,38
	.byte	104
	.space	2
	.word	Rte_COMCbk_HCU04_Poweroff
	.space	5
	.byte	9,1,3,38
	.byte	104
	.space	2
	.word	Rte_COMCbk_HCU05_Poweroff
	.space	5
	.byte	10,1,4,38
	.byte	104
	.space	2
	.sdecl	'.rodata.Com_PBcfg.Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo',data,rom,cluster('Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.rodata.Com_PBcfg.Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo'
	.align	2
Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo:	.type	object
	.size	Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo,8
	.half	1,1
	.space	3
	.byte	3
	.sdecl	'.rodata.Com_PBcfg.Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo',data,rom,cluster('Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.rodata.Com_PBcfg.Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo'
	.align	2
Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo:	.type	object
	.size	Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo,8
	.half	5,1
	.space	3
	.byte	3
	.sdecl	'.rodata.Com_PBcfg.Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo',data,rom,cluster('Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.rodata.Com_PBcfg.Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo'
	.align	2
Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo:	.type	object
	.size	Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo,8
	.half	5,1
	.space	3
	.byte	3
	.sdecl	'.rodata.Com_PBcfg.Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo',data,rom,cluster('Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.rodata.Com_PBcfg.Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo'
	.align	2
Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo:	.type	object
	.size	Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo,16
	.half	5,1
	.space	3
	.byte	3
	.half	5,1
	.space	3
	.byte	3
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xTxIpduCfg_acst',data,rom,cluster('Com_Prv_xTxIpduCfg_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xTxIpduCfg_acst'
	.global	Com_Prv_xTxIpduCfg_acst
	.align	4
Com_Prv_xTxIpduCfg_acst:	.type	object
	.size	Com_Prv_xTxIpduCfg_acst,96
	.word	Com_IpduBuf_MCU_01_Can_Network_CANNODE_0,Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo
	.half	8,1
	.space	2
	.half	11
	.space	4
	.half	16386
	.space	1
	.byte	255
	.word	Com_IpduBuf_MCU_02_Can_Network_CANNODE_0,Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo
	.half	8,5
	.space	2
	.half	6,1
	.byte	11
	.space	1
	.half	16386
	.space	1
	.byte	255
	.word	Com_IpduBuf_MCU_03_Can_Network_CANNODE_0,Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo
	.half	7,5
	.space	2
	.half	33,2
	.byte	17
	.space	1
	.half	16386
	.space	1
	.byte	255
	.word	Com_IpduBuf_MCU_04_Can_Network_CANNODE_0,Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo
	.half	8,5
	.space	2
	.half	1,3
	.byte	50
	.space	1
	.half	16384
	.space	1
	.byte	255
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xRxIpduCfg_acst',data,rom,cluster('Com_Prv_xRxIpduCfg_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xRxIpduCfg_acst'
	.global	Com_Prv_xRxIpduCfg_acst
	.align	4
Com_Prv_xRxIpduCfg_acst:	.type	object
	.size	Com_Prv_xRxIpduCfg_acst,100
	.word	Com_LocalBuf_HCU_01_Can_Network_CANNODE_0,Com_RxTONotify_HCU_01_Can_Network_CANNODE_0
	.half	8
	.space	2
	.half	30,9
	.space	2
	.byte	2
	.space	1
	.word	Com_LocalBuf_HCU_02_Can_Network_CANNODE_0,Com_RxTONotify_HCU_02_Can_Network_CANNODE_0
	.half	1
	.space	2
	.half	30,1
	.byte	9
	.space	1
	.byte	2
	.space	1
	.word	Com_LocalBuf_HCU_03_Can_Network_CANNODE_0,Com_RxTONotify_HCU_03_Can_Network_CANNODE_0
	.half	1
	.space	2
	.half	30,1
	.byte	10
	.space	1
	.byte	2
	.space	1
	.word	Com_LocalBuf_HCU_04_Can_Network_CANNODE_0,Com_RxTONotify_HCU_04_Can_Network_CANNODE_0
	.half	1
	.space	2
	.half	30,1
	.byte	11
	.space	1
	.byte	2
	.space	1
	.word	Com_LocalBuf_HCU_05_Can_Network_CANNODE_0,Com_RxTONotify_HCU_05_Can_Network_CANNODE_0
	.half	1
	.space	2
	.half	30,1
	.byte	12
	.space	1
	.byte	2
	.space	1
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xIpduGrpCfg_acst',data,rom,cluster('Com_Prv_xIpduGrpCfg_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xIpduGrpCfg_acst'
	.global	Com_Prv_xIpduGrpCfg_acst
	.align	2
Com_Prv_xIpduGrpCfg_acst:	.type	object
	.size	Com_Prv_xIpduGrpCfg_acst,8
	.space	2
	.half	5,5
	.space	2
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xIPduGrp_IpduRefCfg_au8',data,rom,cluster('Com_Prv_xIPduGrp_IpduRefCfg_au8')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xIPduGrp_IpduRefCfg_au8'
	.global	Com_Prv_xIPduGrp_IpduRefCfg_au8
Com_Prv_xIPduGrp_IpduRefCfg_au8:	.type	object
	.size	Com_Prv_xIPduGrp_IpduRefCfg_au8,9
	.space	1
	.byte	1,2,3,4
	.byte	6,5,7,8
	.sdecl	'.bss.Com_PBcfg.Com_IpduBuf_MCU_01_Can_Network_CANNODE_0',data,cluster('Com_IpduBuf_MCU_01_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_IpduBuf_MCU_01_Can_Network_CANNODE_0'
	.global	Com_IpduBuf_MCU_01_Can_Network_CANNODE_0
Com_IpduBuf_MCU_01_Can_Network_CANNODE_0:	.type	object
	.size	Com_IpduBuf_MCU_01_Can_Network_CANNODE_0,8
	.space	8
	.sdecl	'.bss.Com_PBcfg.Com_IpduBuf_MCU_02_Can_Network_CANNODE_0',data,cluster('Com_IpduBuf_MCU_02_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_IpduBuf_MCU_02_Can_Network_CANNODE_0'
	.global	Com_IpduBuf_MCU_02_Can_Network_CANNODE_0
Com_IpduBuf_MCU_02_Can_Network_CANNODE_0:	.type	object
	.size	Com_IpduBuf_MCU_02_Can_Network_CANNODE_0,8
	.space	8
	.sdecl	'.bss.Com_PBcfg.Com_IpduBuf_MCU_03_Can_Network_CANNODE_0',data,cluster('Com_IpduBuf_MCU_03_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_IpduBuf_MCU_03_Can_Network_CANNODE_0'
	.global	Com_IpduBuf_MCU_03_Can_Network_CANNODE_0
Com_IpduBuf_MCU_03_Can_Network_CANNODE_0:	.type	object
	.size	Com_IpduBuf_MCU_03_Can_Network_CANNODE_0,7
	.space	7
	.sdecl	'.bss.Com_PBcfg.Com_IpduBuf_MCU_04_Can_Network_CANNODE_0',data,cluster('Com_IpduBuf_MCU_04_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_IpduBuf_MCU_04_Can_Network_CANNODE_0'
	.global	Com_IpduBuf_MCU_04_Can_Network_CANNODE_0
Com_IpduBuf_MCU_04_Can_Network_CANNODE_0:	.type	object
	.size	Com_IpduBuf_MCU_04_Can_Network_CANNODE_0,8
	.space	8
	.sdecl	'.bss.Com_PBcfg.Com_LocalBuf_HCU_01_Can_Network_CANNODE_0',data,cluster('Com_LocalBuf_HCU_01_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_LocalBuf_HCU_01_Can_Network_CANNODE_0'
	.global	Com_LocalBuf_HCU_01_Can_Network_CANNODE_0
Com_LocalBuf_HCU_01_Can_Network_CANNODE_0:	.type	object
	.size	Com_LocalBuf_HCU_01_Can_Network_CANNODE_0,8
	.space	8
	.sdecl	'.bss.Com_PBcfg.Com_LocalBuf_HCU_02_Can_Network_CANNODE_0',data,cluster('Com_LocalBuf_HCU_02_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_LocalBuf_HCU_02_Can_Network_CANNODE_0'
	.global	Com_LocalBuf_HCU_02_Can_Network_CANNODE_0
Com_LocalBuf_HCU_02_Can_Network_CANNODE_0:	.type	object
	.size	Com_LocalBuf_HCU_02_Can_Network_CANNODE_0,1
	.space	1
	.sdecl	'.bss.Com_PBcfg.Com_LocalBuf_HCU_03_Can_Network_CANNODE_0',data,cluster('Com_LocalBuf_HCU_03_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_LocalBuf_HCU_03_Can_Network_CANNODE_0'
	.global	Com_LocalBuf_HCU_03_Can_Network_CANNODE_0
Com_LocalBuf_HCU_03_Can_Network_CANNODE_0:	.type	object
	.size	Com_LocalBuf_HCU_03_Can_Network_CANNODE_0,1
	.space	1
	.sdecl	'.bss.Com_PBcfg.Com_LocalBuf_HCU_04_Can_Network_CANNODE_0',data,cluster('Com_LocalBuf_HCU_04_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_LocalBuf_HCU_04_Can_Network_CANNODE_0'
	.global	Com_LocalBuf_HCU_04_Can_Network_CANNODE_0
Com_LocalBuf_HCU_04_Can_Network_CANNODE_0:	.type	object
	.size	Com_LocalBuf_HCU_04_Can_Network_CANNODE_0,1
	.space	1
	.sdecl	'.bss.Com_PBcfg.Com_LocalBuf_HCU_05_Can_Network_CANNODE_0',data,cluster('Com_LocalBuf_HCU_05_Can_Network_CANNODE_0')
	.sect	'.bss.Com_PBcfg.Com_LocalBuf_HCU_05_Can_Network_CANNODE_0'
	.global	Com_LocalBuf_HCU_05_Can_Network_CANNODE_0
Com_LocalBuf_HCU_05_Can_Network_CANNODE_0:	.type	object
	.size	Com_LocalBuf_HCU_05_Can_Network_CANNODE_0,1
	.space	1
	.sdecl	'.bss.Com_PBcfg.Com_TxIpduRam_s',data,cluster('Com_TxIpduRam_s')
	.sect	'.bss.Com_PBcfg.Com_TxIpduRam_s'
	.global	Com_TxIpduRam_s
	.align	4
Com_TxIpduRam_s:	.type	object
	.size	Com_TxIpduRam_s,64
	.space	64
	.sdecl	'.bss.Com_PBcfg.Com_RxIpduRam_s',data,cluster('Com_RxIpduRam_s')
	.sect	'.bss.Com_PBcfg.Com_RxIpduRam_s'
	.global	Com_RxIpduRam_s
	.align	2
Com_RxIpduRam_s:	.type	object
	.size	Com_RxIpduRam_s,30
	.space	30
	.sdecl	'.bss.Com_PBcfg.Com_TxSignalFlag',data,cluster('Com_TxSignalFlag')
	.sect	'.bss.Com_PBcfg.Com_TxSignalFlag'
	.global	Com_TxSignalFlag
Com_TxSignalFlag:	.type	object
	.size	Com_TxSignalFlag,51
	.space	51
	.sdecl	'.bss.Com_PBcfg.Com_RxSignalFlag',data,cluster('Com_RxSignalFlag')
	.sect	'.bss.Com_PBcfg.Com_RxSignalFlag'
	.global	Com_RxSignalFlag
Com_RxSignalFlag:	.type	object
	.size	Com_RxSignalFlag,13
	.space	13
	.sdecl	'.bss.Com_PBcfg.Com_IpduCounter_s',data,cluster('Com_IpduCounter_s')
	.sect	'.bss.Com_PBcfg.Com_IpduCounter_s'
	.global	Com_IpduCounter_s
Com_IpduCounter_s:	.type	object
	.size	Com_IpduCounter_s,9
	.space	9
	.sdecl	'.bss.Com_PBcfg.Com_IpduCounter_DM',data,cluster('Com_IpduCounter_DM')
	.sect	'.bss.Com_PBcfg.Com_IpduCounter_DM'
	.global	Com_IpduCounter_DM
Com_IpduCounter_DM:	.type	object
	.size	Com_IpduCounter_DM,5
	.space	5
	.sdecl	'.bss.Com_PBcfg.Com_SigType_u8',data,cluster('Com_SigType_u8')
	.sect	'.bss.Com_PBcfg.Com_SigType_u8'
	.global	Com_SigType_u8
Com_SigType_u8:	.type	object
	.size	Com_SigType_u8,11
	.space	11
	.sdecl	'.bss.Com_PBcfg.Com_SigType_u16',data,cluster('Com_SigType_u16')
	.sect	'.bss.Com_PBcfg.Com_SigType_u16'
	.global	Com_SigType_u16
	.align	2
Com_SigType_u16:	.type	object
	.size	Com_SigType_u16,4
	.space	4
	.sdecl	'.rodata.Com_PBcfg.Com_Prv_xRxRamBuf_acst',data,rom,cluster('Com_Prv_xRxRamBuf_acst')
	.sect	'.rodata.Com_PBcfg.Com_Prv_xRxRamBuf_acst'
	.global	Com_Prv_xRxRamBuf_acst
	.align	4
Com_Prv_xRxRamBuf_acst:	.type	object
	.size	Com_Prv_xRxRamBuf_acst,12
	.word	Com_SigType_u8,Com_SigType_u16
	.space	4
	.sdecl	'.rodata.Com_PBcfg.Com_MainFunctionCfg',data,rom,cluster('Com_MainFunctionCfg')
	.sect	'.rodata.Com_PBcfg.Com_MainFunctionCfg'
	.global	Com_MainFunctionCfg
	.align	2
Com_MainFunctionCfg:	.type	object
	.size	Com_MainFunctionCfg,8
	.space	1
	.byte	5,10
	.space	2
	.byte	4,10
	.space	1
	.calls	'__INDIRECT__','Com_RxTONotify_HCU_01_Can_Network_CANNODE_0'
	.calls	'__INDIRECT__','Com_RxTONotify_HCU_02_Can_Network_CANNODE_0'
	.calls	'__INDIRECT__','Com_RxTONotify_HCU_03_Can_Network_CANNODE_0'
	.calls	'__INDIRECT__','Com_RxTONotify_HCU_04_Can_Network_CANNODE_0'
	.calls	'__INDIRECT__','Com_RxTONotify_HCU_05_Can_Network_CANNODE_0'
	.calls	'__INDIRECT__','Rte_COMCbk_HCU01_Shift'
	.calls	'__INDIRECT__','Rte_COMCbk_HCU01_TqCmd'
	.calls	'__INDIRECT__','Rte_COMCbk_HCU02_Poweroff'
	.calls	'__INDIRECT__','Rte_COMCbk_HCU03_Poweroff'
	.calls	'__INDIRECT__','Rte_COMCbk_HCU04_Poweroff'
	.extern	Com_RxTONotify_HCU_01_Can_Network_CANNODE_0
	.extern	Com_RxTONotify_HCU_02_Can_Network_CANNODE_0
	.extern	Com_RxTONotify_HCU_03_Can_Network_CANNODE_0
	.extern	Com_RxTONotify_HCU_04_Can_Network_CANNODE_0
	.extern	Com_RxTONotify_HCU_05_Can_Network_CANNODE_0
	.extern	Rte_COMCbk_HCU01_Shift
	.extern	Rte_COMCbk_HCU01_TqCmd
	.extern	Rte_COMCbk_HCU02_Poweroff
	.extern	Rte_COMCbk_HCU03_Poweroff
	.extern	Rte_COMCbk_HCU04_Poweroff
	.extern	Rte_COMCbk_HCU05_Poweroff
	.extern	__INDIRECT__
	.calls	'__INDIRECT__','Rte_COMCbk_HCU05_Poweroff'
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	14767
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	131
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	148
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	131
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	131
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	241
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	131
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	131
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	131
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	131
	.byte	5,0,6
	.word	148
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	398
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	131
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	131
	.byte	5,0,6
	.word	241
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	484
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	131
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	131
	.byte	5,0,6
	.word	131
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	570
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	131
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	131
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	131
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	241
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit8SetBit',0,3,2,36,19,1,1,4
	.byte	'buffer',0,2,36,49
	.word	570
	.byte	4
	.byte	'bit_position',0,2,36,63
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,2,42,19,1,1,4
	.byte	'buffer',0,2,42,51
	.word	570
	.byte	4
	.byte	'bit_position',0,2,42,65
	.word	131
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,2,60,20
	.word	131
	.byte	1,1,4
	.byte	'value',0,2,60,55
	.word	131
	.byte	4
	.byte	'bit_position',0,2,60,68
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,2,77,19,1,1,4
	.byte	'value',0,2,77,52
	.word	570
	.byte	4
	.byte	'bit_position',0,2,77,65
	.word	131
	.byte	4
	.byte	'number_of_bits',0,2,77,85
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit16SetBit',0,3,3,36,19,1,1,4
	.byte	'buffer',0,3,36,51
	.word	398
	.byte	4
	.byte	'bit_position',0,3,36,65
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,3,42,19,1,1,4
	.byte	'buffer',0,3,42,53
	.word	398
	.byte	4
	.byte	'bit_position',0,3,42,67
	.word	131
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,3,60,21
	.word	148
	.byte	1,1,4
	.byte	'value',0,3,60,58
	.word	148
	.byte	4
	.byte	'bit_position',0,3,60,71
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,3,78,19,1,1,4
	.byte	'value',0,3,78,54
	.word	398
	.byte	4
	.byte	'bit_position',0,3,78,67
	.word	131
	.byte	4
	.byte	'number_of_bits',0,3,78,87
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit32SetBit',0,3,4,36,19,1,1,4
	.byte	'buffer',0,4,36,51
	.word	484
	.byte	4
	.byte	'bit_position',0,4,36,65
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,4,42,19,1,1,4
	.byte	'buffer',0,4,42,53
	.word	484
	.byte	4
	.byte	'bit_position',0,4,42,67
	.word	131
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,4,60,21
	.word	241
	.byte	1,1,4
	.byte	'value',0,4,60,58
	.word	241
	.byte	4
	.byte	'bit_position',0,4,60,71
	.word	131
	.byte	5,0,7
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,4,78,19,1,1,4
	.byte	'value',0,4,78,54
	.word	484
	.byte	4
	.byte	'bit_position',0,4,78,67
	.word	131
	.byte	4
	.byte	'number_of_bits',0,4,78,87
	.word	131
	.byte	5,0,8
	.byte	'Com_RxTONotify_HCU_01_Can_Network_CANNODE_0',0,5,251,4,21,1,1,1,1,8
	.byte	'Com_RxTONotify_HCU_02_Can_Network_CANNODE_0',0,5,130,5,21,1,1,1,1,8
	.byte	'Com_RxTONotify_HCU_03_Can_Network_CANNODE_0',0,5,137,5,21,1,1,1,1,8
	.byte	'Com_RxTONotify_HCU_04_Can_Network_CANNODE_0',0,5,144,5,21,1,1,1,1,8
	.byte	'Com_RxTONotify_HCU_05_Can_Network_CANNODE_0',0,5,151,5,21,1,1,1,1,9
	.word	170
	.byte	10
	.word	210
	.byte	10
	.word	224
	.byte	5,0,9
	.word	257
	.byte	10
	.word	297
	.byte	10
	.word	311
	.byte	5,0,9
	.word	328
	.byte	10
	.word	367
	.byte	10
	.word	381
	.byte	5,0,9
	.word	403
	.byte	10
	.word	438
	.byte	10
	.word	452
	.byte	10
	.word	467
	.byte	5,0,9
	.word	489
	.byte	10
	.word	524
	.byte	10
	.word	538
	.byte	10
	.word	553
	.byte	5,0,9
	.word	575
	.byte	10
	.word	609
	.byte	10
	.word	623
	.byte	10
	.word	638
	.byte	5,0,9
	.word	655
	.byte	10
	.word	700
	.byte	5,0,8
	.byte	'Rte_COMCbk_HCU01_Shift',0,6,53,21,1,1,1,1,8
	.byte	'Rte_COMCbk_HCU01_TqCmd',0,6,59,21,1,1,1,1,8
	.byte	'Rte_COMCbk_HCU02_Poweroff',0,6,65,21,1,1,1,1,8
	.byte	'Rte_COMCbk_HCU03_Poweroff',0,6,71,21,1,1,1,1,8
	.byte	'Rte_COMCbk_HCU04_Poweroff',0,6,77,21,1,1,1,1,8
	.byte	'Rte_COMCbk_HCU05_Poweroff',0,6,83,21,1,1,1,1,9
	.word	716
	.byte	10
	.word	746
	.byte	10
	.word	761
	.byte	5,0,9
	.word	784
	.byte	10
	.word	816
	.byte	10
	.word	831
	.byte	5,0,9
	.word	854
	.byte	10
	.word	894
	.byte	10
	.word	908
	.byte	5,0,9
	.word	931
	.byte	10
	.word	964
	.byte	10
	.word	978
	.byte	10
	.word	999
	.byte	5,0,9
	.word	1024
	.byte	10
	.word	1055
	.byte	10
	.word	1070
	.byte	5,0,9
	.word	1093
	.byte	10
	.word	1126
	.byte	10
	.word	1141
	.byte	5,0,9
	.word	1164
	.byte	10
	.word	1205
	.byte	10
	.word	1219
	.byte	5,0,9
	.word	1242
	.byte	10
	.word	1276
	.byte	10
	.word	1290
	.byte	10
	.word	1311
	.byte	5,0,9
	.word	1336
	.byte	10
	.word	1367
	.byte	10
	.word	1382
	.byte	5,0,9
	.word	1405
	.byte	10
	.word	1438
	.byte	10
	.word	1453
	.byte	5,0,9
	.word	1476
	.byte	10
	.word	1517
	.byte	10
	.word	1531
	.byte	5,0,9
	.word	1554
	.byte	10
	.word	1588
	.byte	10
	.word	1602
	.byte	10
	.word	1623
	.byte	5,0,11
	.byte	'__INDIRECT__',0,7,1,1,1,1,1,12,1,6
	.word	2479
	.byte	13
	.byte	'__codeptr',0,7,1,1
	.word	2481
	.byte	2
	.byte	'char',0,1,6,13
	.byte	'sint8',0,8,76,25
	.word	2504
	.byte	13
	.byte	'uint8',0,8,81,25
	.word	131
	.byte	13
	.byte	'uint16',0,8,91,25
	.word	148
	.byte	13
	.byte	'uint32',0,8,106,24
	.word	241
	.byte	2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'uint64',0,8,111,30
	.word	2570
	.byte	13
	.byte	'boolean',0,8,127,25
	.word	131
	.byte	2
	.byte	'unsigned long int',0,4,7,13
	.byte	'uint16_least',0,8,147,1,25
	.word	2627
	.byte	13
	.byte	'StatusType',0,9,191,1,27
	.word	131
	.byte	13
	.byte	'Std_ReturnType',0,9,199,1,15
	.word	131
	.byte	14,9,206,1,9,8,15
	.byte	'vendorID',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'moduleID',0
	.word	148
	.byte	2,2,35,2,15
	.byte	'sw_major_version',0
	.word	131
	.byte	1,2,35,4,15
	.byte	'sw_minor_version',0
	.word	131
	.byte	1,2,35,5,15
	.byte	'sw_patch_version',0
	.word	131
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,9,213,1,3
	.word	2714
	.byte	13
	.byte	'PduIdType',0,10,22,19
	.word	148
	.byte	13
	.byte	'PduLengthType',0,10,26,19
	.word	148
	.byte	16,11,113,9,4,17
	.byte	'TP_DATACONF',0,0,17
	.byte	'TP_DATARETRY',0,1,17
	.byte	'TP_CONFPENDING',0,2,0,13
	.byte	'TpDataStateType',0,11,118,3
	.word	2904
	.byte	13
	.byte	'Com_SignalIdType',0,12,100,16
	.word	148
	.byte	13
	.byte	'Com_SignalGroupIdType',0,12,102,16
	.word	148
	.byte	13
	.byte	'Com_IpduIdType',0,12,104,15
	.word	131
	.byte	13
	.byte	'Com_GrpSignalIdType',0,12,107,18
	.word	131
	.byte	13
	.byte	'Com_TxIntSignalIdType',0,5,138,3,18
	.word	131
	.byte	13
	.byte	'Com_RxIntSignalIdType',0,5,139,3,18
	.word	131
	.byte	13
	.byte	'Com_BitsizeType',0,5,155,3,17
	.word	131
	.byte	13
	.byte	'Com_BitpositionType',0,5,156,3,15
	.word	131
	.byte	13
	.byte	'Com_RxGwQueueIndexType',0,5,161,3,15
	.word	131
	.byte	13
	.byte	'Com_SigBuffIndexType',0,5,164,3,15
	.word	131
	.byte	13
	.byte	'Com_MainFuncType',0,5,231,3,16
	.word	131
	.byte	13
	.byte	'Com_NumOfIpdusType',0,5,233,3,15
	.word	131
	.byte	13
	.byte	'Com_TimeBaseType',0,5,235,3,15
	.word	131
	.byte	13
	.byte	'Can_IdType',0,13,32,16
	.word	241
	.byte	13
	.byte	'Can_HwHandleType',0,13,43,16
	.word	148
	.byte	14,14,93,9,8,15
	.byte	'Class',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'TIN',0
	.word	131
	.byte	1,2,35,1,15
	.byte	'ReturnAddress',0
	.word	241
	.byte	4,2,35,4,0,13
	.byte	'OsTrapInfoType',0,14,97,3
	.word	3388
	.byte	18,68
	.word	241
	.byte	19,16,0,14,14,154,1,9,68,15
	.byte	'store',0
	.word	3468
	.byte	68,2,35,0,0,18,68
	.word	3477
	.byte	19,0,0,13
	.byte	'Os_JumpBufType',0,14,156,1,3
	.word	3499
	.byte	13
	.byte	'Os_StackTraceType',0,14,174,1,18
	.word	241
	.byte	14,14,175,1,9,8,15
	.byte	'sp',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'ctx',0
	.word	241
	.byte	4,2,35,4,0,13
	.byte	'Os_StackValueType',0,14,175,1,63
	.word	3559
	.byte	13
	.byte	'Os_StackSizeType',0,14,176,1,27
	.word	3559
	.byte	20,1,1,6
	.word	3644
	.byte	13
	.byte	'Os_VoidVoidFunctionType',0,14,179,1,16
	.word	3647
	.byte	13
	.byte	'ApplicationType',0,14,193,1,23
	.word	131
	.byte	21
	.byte	'Os_ApplicationConfigurationType_s',0,14,198,1,16,2,15
	.byte	'app_id',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,1,0,13
	.byte	'Os_ApplicationConfigurationType',0,14,201,1,3
	.word	3710
	.byte	13
	.byte	'Os_CoreStateType',0,14,203,1,16
	.word	241
	.byte	13
	.byte	'AreaIdType',0,14,204,1,16
	.word	148
	.byte	13
	.byte	'Os_PeripheralAddressType',0,14,212,1,22
	.word	241
	.byte	13
	.byte	'TickType',0,14,221,1,22
	.word	241
	.byte	13
	.byte	'Os_StopwatchTickType',0,14,225,1,22
	.word	241
	.byte	13
	.byte	'Os_Lockable',0,14,234,1,18
	.word	484
	.byte	13
	.byte	'CoreIdType',0,14,236,1,16
	.word	148
	.byte	13
	.byte	'SpinlockIdType',0,14,237,1,16
	.word	148
	.byte	16,14,239,1,9,4,17
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,17
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,13
	.byte	'TryToGetSpinlockType',0,14,239,1,74
	.word	4017
	.byte	16,14,174,2,9,4,17
	.byte	'APPLICATION_ACCESSIBLE',0,0,17
	.byte	'APPLICATION_RESTARTING',0,1,17
	.byte	'APPLICATION_TERMINATED',0,2,0,13
	.byte	'ApplicationStateType',0,14,174,2,92
	.word	4110
	.byte	22
	.byte	'void',0,6
	.word	4222
	.byte	23,1,1,24
	.word	131
	.byte	24
	.word	4228
	.byte	0,6
	.word	4233
	.byte	13
	.byte	'Os_FunctionEntryType',0,14,183,2,16
	.word	4247
	.byte	21
	.byte	'Os_MeterInfoType_s',0,14,193,2,16,48,15
	.byte	'elapsed',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'previous',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'max',0
	.word	241
	.byte	4,2,35,8,15
	.byte	'cumulative',0
	.word	241
	.byte	4,2,35,12,15
	.byte	'stackbase',0
	.word	3559
	.byte	8,2,35,16,15
	.byte	'stackusage',0
	.word	3559
	.byte	8,2,35,24,15
	.byte	'stackmax',0
	.word	3559
	.byte	8,2,35,32,15
	.byte	'stackbudget',0
	.word	3559
	.byte	8,2,35,40,0,13
	.byte	'Os_MeterInfoType',0,14,202,2,3
	.word	4282
	.byte	6
	.word	4282
	.byte	13
	.byte	'Os_MeterInfoRefType',0,14,203,2,50
	.word	4480
	.byte	13
	.byte	'EventMaskType',0,14,206,2,15
	.word	131
	.byte	13
	.byte	'Os_imaskType',0,14,211,2,16
	.word	241
	.byte	21
	.byte	'Os_ISRDynType_s',0,14,213,2,16,48,15
	.byte	'meter',0
	.word	4282
	.byte	48,2,35,0,0,13
	.byte	'Os_ISRDynType',0,14,215,2,3
	.word	4559
	.byte	6
	.word	4559
	.byte	25
	.word	4620
	.byte	21
	.byte	'Os_ISRType_s',0,14,216,2,16,24,15
	.byte	'entry_function',0
	.word	3652
	.byte	4,2,35,0,15
	.byte	'dynamic',0
	.word	4625
	.byte	4,2,35,4,15
	.byte	'imask',0
	.word	241
	.byte	4,2,35,8,15
	.byte	'stackbudget',0
	.word	3559
	.byte	8,2,35,12,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,20,15
	.byte	'application',0
	.word	131
	.byte	1,2,35,21,0,13
	.byte	'Os_ISRType',0,14,223,2,3
	.word	4630
	.byte	6
	.word	3644
	.byte	25
	.word	4630
	.byte	6
	.word	4789
	.byte	13
	.byte	'ISRType',0,14,224,2,46
	.word	4794
	.byte	13
	.byte	'Os_bitmask',0,14,239,2,22
	.word	241
	.byte	13
	.byte	'Os_pset0Type',0,14,240,2,20
	.word	241
	.byte	13
	.byte	'Os_pset1Type',0,14,241,2,20
	.word	241
	.byte	13
	.byte	'Os_pset2Type',0,14,242,2,20
	.word	241
	.byte	26,14,243,2,9,4,15
	.byte	'p0',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'p1',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'p2',0
	.word	241
	.byte	4,2,35,0,0,13
	.byte	'Os_psetType',0,14,247,2,3
	.word	4902
	.byte	26,14,249,2,9,4,15
	.byte	't0',0
	.word	241
	.byte	4,2,35,0,15
	.byte	't1',0
	.word	241
	.byte	4,2,35,0,15
	.byte	't2',0
	.word	241
	.byte	4,2,35,0,0,13
	.byte	'Os_tpmaskType',0,14,253,2,3
	.word	4966
	.byte	13
	.byte	'Os_ActivationCountType',0,14,254,2,23
	.word	131
	.byte	21
	.byte	'Os_TaskDynType_s',0,14,128,3,16,120,15
	.byte	'terminate_jump_buf',0
	.word	3508
	.byte	68,2,35,0,15
	.byte	'meter',0
	.word	4282
	.byte	48,2,35,68,15
	.byte	'activation_count',0
	.word	131
	.byte	1,2,35,116,0,13
	.byte	'Os_TaskDynType',0,14,132,3,3
	.word	5064
	.byte	18,68
	.word	3477
	.byte	19,0,0,6
	.word	5064
	.byte	25
	.word	5190
	.byte	21
	.byte	'Os_TaskType_s',0,14,134,3,16,40,15
	.byte	'dynamic',0
	.word	5195
	.byte	4,2,35,0,15
	.byte	'entry_function',0
	.word	3652
	.byte	4,2,35,4,15
	.byte	'pset',0
	.word	4902
	.byte	4,2,35,8,15
	.byte	'base_tpmask',0
	.word	4966
	.byte	4,2,35,12,15
	.byte	'tpmask',0
	.word	4966
	.byte	4,2,35,16,15
	.byte	'core_id',0
	.word	148
	.byte	2,2,35,20,15
	.byte	'index',0
	.word	241
	.byte	4,2,35,24,15
	.byte	'stackbudget',0
	.word	3559
	.byte	8,2,35,28,15
	.byte	'activation_count',0
	.word	131
	.byte	1,2,35,36,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,37,15
	.byte	'application',0
	.word	131
	.byte	1,2,35,38,0,13
	.byte	'Os_TaskType',0,14,146,3,3
	.word	5200
	.byte	25
	.word	5200
	.byte	6
	.word	5450
	.byte	13
	.byte	'TaskType',0,14,147,3,47
	.word	5455
	.byte	27
	.byte	'Os_TaskStateType',0,14,155,3,6,4,17
	.byte	'SUSPENDED',0,0,17
	.byte	'READY',0,1,17
	.byte	'WAITING',0,2,17
	.byte	'RUNNING',0,3,0,13
	.byte	'TaskStateType',0,14,156,3,31
	.word	5478
	.byte	26,14,167,3,3,4,15
	.byte	'tpmask',0
	.word	4966
	.byte	4,2,35,0,0,21
	.byte	'Os_ResourceDynType_s',0,14,166,3,16,4,15
	.byte	'saved_priority',0
	.word	5565
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType',0,14,170,3,3
	.word	5588
	.byte	6
	.word	5588
	.byte	25
	.word	5668
	.byte	21
	.byte	'Os_ResourceType_s',0,14,171,3,16,12,15
	.byte	'dynamic',0
	.word	5673
	.byte	4,2,35,0,15
	.byte	'tpmask',0
	.word	4966
	.byte	4,2,35,4,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,8,0,13
	.byte	'Os_ResourceType',0,14,175,3,3
	.word	5678
	.byte	14,14,181,3,9,12,15
	.byte	'maxallowedvalue',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'ticksperbase',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'mincycle',0
	.word	241
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,14,185,3,3
	.word	5777
	.byte	14,14,206,3,9,8,15
	.byte	'Running',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'Pending',0
	.word	131
	.byte	1,2,35,1,15
	.byte	'Delay',0
	.word	241
	.byte	4,2,35,4,0,13
	.byte	'Os_CounterStatusType',0,14,210,3,3
	.word	5872
	.byte	28
	.word	131
	.byte	1,1,6
	.word	5958
	.byte	13
	.byte	'Os_CounterIncrAdvType',0,14,217,3,22
	.word	5965
	.byte	21
	.byte	's_swd',0,14,222,3,12,4,15
	.byte	'count',0
	.word	241
	.byte	4,2,35,0,0,26,14,221,3,3,4,15
	.byte	'sw',0
	.word	6001
	.byte	4,2,35,0,0,21
	.byte	'Os_CounterDynType_s',0,14,220,3,16,4,15
	.byte	'type_dependent',0
	.word	6029
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType',0,14,226,3,3
	.word	6048
	.byte	6
	.word	6048
	.byte	25
	.word	6126
	.byte	21
	.byte	'Os_CounterType_s',0,14,227,3,16,28,15
	.byte	'dynamic',0
	.word	6131
	.byte	4,2,35,0,15
	.byte	'advincr',0
	.word	5970
	.byte	4,2,35,4,15
	.byte	'base',0
	.word	5777
	.byte	12,2,35,8,15
	.byte	'core',0
	.word	4228
	.byte	4,2,35,20,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,24,15
	.byte	'application',0
	.word	131
	.byte	1,2,35,25,0,13
	.byte	'Os_CounterType',0,14,234,3,3
	.word	6136
	.byte	6
	.word	5958
	.byte	25
	.word	6136
	.byte	6
	.word	6288
	.byte	13
	.byte	'CounterType',0,14,235,3,52
	.word	6293
	.byte	27
	.byte	'Os_ScheduleTableStatusType',0,14,240,3,6,4,17
	.byte	'SCHEDULETABLE_STOPPED',0,0,17
	.byte	'SCHEDULETABLE_NEXT',0,1,17
	.byte	'SCHEDULETABLE_WAITING',0,2,17
	.byte	'SCHEDULETABLE_RUNNING',0,3,17
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,14,241,3,41
	.word	6319
	.byte	25
	.word	.L87-.L3
	.byte	6
	.word	6519
	.byte	13
	.byte	'ScheduleTableType',0,14,128,4,58
	.word	6524
	.byte	21
	.byte	'Os_ScheduleTableDynType_s',0,14,130,4,16,16,15
	.byte	'match',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'next',0
	.word	6529
	.byte	4,2,35,4,15
	.byte	'state',0
	.word	6319
	.byte	4,2,35,8,15
	.byte	'config',0
	.word	148
	.byte	2,2,35,12,0,6
	.word	6556
	.byte	25
	.word	6649
.L87:
	.byte	21
	.byte	'Os_ScheduleTableType_s',0,14,247,3,16,16,15
	.byte	'dynamic',0
	.word	6654
	.byte	4,2,35,0,15
	.byte	'counter',0
	.word	6298
	.byte	4,2,35,4,15
	.byte	'repeat',0
	.word	131
	.byte	1,2,35,8,15
	.byte	'config',0
	.word	148
	.byte	2,2,35,10,15
	.byte	'initial',0
	.word	131
	.byte	1,2,35,12,15
	.byte	'access',0
	.word	131
	.byte	1,2,35,13,15
	.byte	'application',0
	.word	131
	.byte	1,2,35,14,0,13
	.byte	'Os_ScheduleTableType',0,14,255,3,3
	.word	6659
	.byte	25
	.word	6659
	.byte	6
	.word	6839
	.byte	25
	.word	6136
	.byte	6
	.word	6849
	.byte	29
	.word	3952
	.byte	29
	.word	4902
	.byte	29
	.word	4799
	.byte	29
	.word	5460
	.byte	29
	.word	4966
	.byte	29
	.word	131
	.byte	29
	.word	5460
	.byte	21
	.byte	'Os_ControlledCoreType_s',0,14,251,6,16,112,15
	.byte	'TrapInfo',0
	.word	3388
	.byte	8,2,35,0,15
	.byte	'lock_taskaccess',0
	.word	6859
	.byte	4,2,35,8,15
	.byte	'ReadyTasks',0
	.word	6864
	.byte	4,2,35,12,15
	.byte	'RunningISR',0
	.word	6869
	.byte	4,2,35,16,15
	.byte	'RunningTask',0
	.word	6874
	.byte	4,2,35,20,15
	.byte	'RunningTPMask',0
	.word	6879
	.byte	4,2,35,24,15
	.byte	'CurrentMeteredObject',0
	.word	4485
	.byte	4,2,35,28,15
	.byte	'IdleMeter',0
	.word	4282
	.byte	48,2,35,32,15
	.byte	'AppAccess',0
	.word	131
	.byte	1,2,35,80,15
	.byte	'AppOverride',0
	.word	6884
	.byte	1,2,35,81,15
	.byte	'GetStackValueAdjust',0
	.word	3559
	.byte	8,2,35,84,15
	.byte	'InErrorHook',0
	.word	131
	.byte	1,2,35,92,15
	.byte	'ChainTaskRef',0
	.word	6889
	.byte	4,2,35,96,15
	.byte	'GetStackUsageAdjust',0
	.word	3559
	.byte	8,2,35,100,15
	.byte	'InProtectionHook',0
	.word	131
	.byte	1,2,35,108,15
	.byte	'CoreIsActive',0
	.word	131
	.byte	1,2,35,109,15
	.byte	'InShutdownHook',0
	.word	131
	.byte	1,2,35,110,0,13
	.byte	'Os_ControlledCoreType',0,14,141,7,3
	.word	6894
	.byte	6
	.word	241
	.byte	25
	.word	4630
	.byte	6
	.word	7350
	.byte	25
	.word	5200
	.byte	6
	.word	7360
	.byte	6
	.word	4282
	.byte	21
	.byte	'Os_AnyCoreType_s',0,14,151,7,16,96,15
	.byte	'DisableAllImask',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'SuspendAllImask',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'SuspendOSImask',0
	.word	241
	.byte	4,2,35,8,15
	.byte	'DisableAllCount',0
	.word	241
	.byte	4,2,35,12,15
	.byte	'SuspendAllCount',0
	.word	241
	.byte	4,2,35,16,15
	.byte	'SuspendOSCount',0
	.word	241
	.byte	4,2,35,20,15
	.byte	'RestartJumpBuf',0
	.word	3508
	.byte	68,2,35,24,15
	.byte	'Restartable',0
	.word	131
	.byte	1,2,35,92,0,13
	.byte	'Os_AnyCoreType',0,14,160,7,3
	.word	7375
	.byte	13
	.byte	'Can_TxObjPriorityClassType',0,15,219,3,16
	.word	241
	.byte	21
	.byte	'Can_TxHwObjectConfigType',0,15,231,3,16,8,15
	.byte	'MsgObjId',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'HwControllerId',0
	.word	131
	.byte	1,2,35,1,15
	.byte	'TxObjPriorityClass',0
	.word	241
	.byte	4,2,35,4,0,13
	.byte	'Can_TxHwObjectConfigType',0,15,252,3,3
	.word	7652
	.byte	21
	.byte	'Can_RxHwObjectConfigType',0,15,129,4,16,12,15
	.byte	'MaskRef',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'MsgId',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'MsgObjId',0
	.word	131
	.byte	1,2,35,8,15
	.byte	'HwControllerId',0
	.word	131
	.byte	1,2,35,9,0,13
	.byte	'Can_RxHwObjectConfigType',0,15,147,4,3
	.word	7788
	.byte	18,4
	.word	131
	.byte	19,3,0,21
	.byte	'Can_ControllerMOMapConfigType',0,15,181,4,16,4,15
	.byte	'ControllerMOMap',0
	.word	7928
	.byte	4,2,35,0,0,13
	.byte	'Can_ControllerMOMapConfigType',0,15,184,4,3
	.word	7937
	.byte	21
	.byte	'Can_NPCRValueType',0,15,188,4,16,2,15
	.byte	'Can_NPCRValue',0
	.word	148
	.byte	2,2,35,0,0,13
	.byte	'Can_NPCRValueType',0,15,191,4,3
	.word	8038
	.byte	21
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,194,4,16,8,15
	.byte	'CanControllerBaudrate',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'CanControllerBaudrateCfg',0
	.word	148
	.byte	2,2,35,4,0,13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,198,4,3
	.word	8113
	.byte	25
	.word	8113
	.byte	6
	.word	8278
	.byte	21
	.byte	'Can_BaudrateConfigPtrType',0,15,201,4,16,4,15
	.byte	'Can_kBaudrateConfigPtr',0
	.word	8283
	.byte	4,2,35,0,0,13
	.byte	'Can_BaudrateConfigPtrType',0,15,204,4,3
	.word	8288
	.byte	21
	.byte	'Can_EventHandlingType',0,15,226,4,16,4,15
	.byte	'CanEventType',0
	.word	7928
	.byte	4,2,35,0,0,13
	.byte	'Can_EventHandlingType',0,15,229,4,3
	.word	8388
	.byte	13
	.byte	'Rte_TransformerErrorCode',0,16,130,1,15
	.word	131
	.byte	13
	.byte	'Rte_TransformerClass',0,16,131,1,15
	.word	131
	.byte	14,16,168,1,9,12,15
	.byte	'in',0
	.word	4228
	.byte	4,2,35,0,15
	.byte	'out',0
	.word	4228
	.byte	4,2,35,4,15
	.byte	'used',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'lost_data',0
	.word	131
	.byte	1,2,35,10,0,13
	.byte	'Rte_QDynType',0,16,173,1,3
	.word	8534
	.byte	16,16,175,1,9,4,17
	.byte	'RTE_DRA',0,0,17
	.byte	'RTE_WOWP',0,1,17
	.byte	'RTE_TASK',0,2,17
	.byte	'RTE_ARE',0,3,17
	.byte	'RTE_EV',0,4,17
	.byte	'RTE_MSI',0,5,0,13
	.byte	'Rte_NotificationType',0,16,182,1,3
	.word	8621
	.byte	6
	.word	8534
	.byte	21
	.byte	'Rte_QCmnType',0,16,184,1,16,24,15
	.byte	'dynamic',0
	.word	8719
	.byte	4,2,35,0,15
	.byte	'copy',0
	.word	131
	.byte	1,2,35,4,15
	.byte	'queue_size',0
	.word	148
	.byte	2,2,35,6,15
	.byte	'element_size',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'buffer_start',0
	.word	4228
	.byte	4,2,35,12,15
	.byte	'buffer_end',0
	.word	4228
	.byte	4,2,35,16,15
	.byte	'notification_type',0
	.word	8621
	.byte	4,2,35,20,0,13
	.byte	'Rte_QCmnType',0,16,192,1,3
	.word	8724
	.byte	13
	.byte	'Rte_AlarmRefType',0,16,224,1,32
	.word	241
	.byte	13
	.byte	'Rte_AlarmIndexType',0,16,226,1,32
	.word	148
	.byte	18,128,8
	.word	131
	.byte	19,255,7,0,13
	.byte	'Impl_NVM_DstPtrType_1024',0,17,50,15
	.word	8962
	.byte	13
	.byte	'CanIf_u32_impl',0,17,69,16
	.word	241
	.byte	13
	.byte	'CanIf_u16_impl',0,17,71,16
	.word	148
	.byte	13
	.byte	'CanIf_u8_impl',0,17,73,15
	.word	131
	.byte	13
	.byte	'CanIf_ControllerModeType_Enum_impl',0,17,88,15
	.word	131
	.byte	13
	.byte	'CanIf_PduModeType_Enum_impl',0,17,90,15
	.word	131
	.byte	14,17,92,9,2,15
	.byte	'DeviceMode',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'ChannelMode',0
	.word	131
	.byte	1,2,35,1,0,13
	.byte	'CanIf_ControllerStateType_struct_impl',0,17,95,3
	.word	9153
	.byte	13
	.byte	'CanIf_NotifStatusType_Enum_impl',0,17,100,15
	.word	131
	.byte	13
	.byte	'CanSM_boolean_Impl',0,17,120,15
	.word	131
	.byte	13
	.byte	'CanSM_u8_Impl',0,17,123,15
	.word	131
	.byte	13
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,17,128,1,15
	.word	131
	.byte	13
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,17,132,1,15
	.word	131
	.byte	13
	.byte	'CanSM_u16_Impl',0,17,136,1,16
	.word	148
	.byte	13
	.byte	'CanSM_TimerStateType_Enum_impl',0,17,138,1,15
	.word	131
	.byte	14,17,140,1,9,4,15
	.byte	'cntTick_u16',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'stTimer',0
	.word	131
	.byte	1,2,35,2,0,13
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,17,143,1,3
	.word	9494
	.byte	13
	.byte	'Com_impl_u16',0,17,154,1,16
	.word	148
	.byte	13
	.byte	'Com_impl_u8',0,17,157,1,15
	.word	131
	.byte	13
	.byte	'ComM_uint32_Impl',0,17,173,1,16
	.word	241
	.byte	13
	.byte	'ComM_uint16_Impl',0,17,175,1,16
	.word	148
	.byte	13
	.byte	'ComM_uint8_Impl',0,17,177,1,15
	.word	131
	.byte	13
	.byte	'ComM_bool_Impl',0,17,179,1,15
	.word	131
	.byte	14,17,181,1,9,24,15
	.byte	'ChannelState_e',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'LightTimeoutCtr_u32',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'ChannelMode_u8',0
	.word	131
	.byte	1,2,35,10,15
	.byte	'BusSmMode_u8',0
	.word	131
	.byte	1,2,35,11,15
	.byte	'UserRequestCtr_u8',0
	.word	131
	.byte	1,2,35,12,15
	.byte	'PassiveRequestState_u8',0
	.word	131
	.byte	1,2,35,13,15
	.byte	'PncRequestCtr_u8',0
	.word	131
	.byte	1,2,35,14,15
	.byte	'InhibitionReqStatus_u8',0
	.word	131
	.byte	1,2,35,15,15
	.byte	'NmNetworkRequestStatus_b',0
	.word	131
	.byte	1,2,35,16,15
	.byte	'DiagnosticRequestState_b',0
	.word	131
	.byte	1,2,35,17,15
	.byte	'CommunicationAllowed_b',0
	.word	131
	.byte	1,2,35,18,15
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	131
	.byte	1,2,35,19,15
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	131
	.byte	1,2,35,20,15
	.byte	'NmNetworkModeStatus_b',0
	.word	131
	.byte	1,2,35,21,0,13
	.byte	'ComM_ChannelStruct_Impl',0,17,197,1,3
	.word	9726
	.byte	14,17,206,1,9,10,15
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'LimitToNoComCtr_u16',0
	.word	148
	.byte	2,2,35,2,15
	.byte	'RequestedUserMode_t',0
	.word	131
	.byte	1,2,35,4,15
	.byte	'IndicatedUserMode_t',0
	.word	131
	.byte	1,2,35,5,15
	.byte	'numChannelsInFullCom_u8',0
	.word	131
	.byte	1,2,35,6,15
	.byte	'numChannelsInSilentCom_u8',0
	.word	131
	.byte	1,2,35,7,15
	.byte	'numChannelsInNoCom_u8',0
	.word	131
	.byte	1,2,35,8,0,13
	.byte	'ComM_UserStruct_Impl',0,17,214,1,3
	.word	10230
	.byte	13
	.byte	'Dcm_IOOperationResponseType',0,17,252,1,15
	.word	131
	.byte	13
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	17,138,2,15
	.word	131
	.byte	13
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,17,146,2,15
	.word	131
	.byte	13
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,17,150,2,15
	.word	131
	.byte	13
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,17,154,2,15
	.word	131
	.byte	13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,17,243,3,34
	.word	8973
	.byte	18,128,8
	.word	131
	.byte	19,255,7,0,13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,17,246,3,34
	.word	8973
	.byte	13
	.byte	'Rte_TaskRefType',0,18,184,1,32
	.word	5460
	.byte	13
	.byte	'Rte_EventRefType',0,18,185,1,32
	.word	131
	.byte	13
	.byte	'Rte_EventType',0,18,186,1,32
	.word	241
	.byte	13
	.byte	'Rte_REActCounterType',0,18,252,1,15
	.word	131
	.byte	6
	.word	131
	.byte	13
	.byte	'Rte_REActCounterRefType',0,18,253,1,58
	.word	11152
	.byte	14,18,255,1,9,8,15
	.byte	'task',0
	.word	11048
	.byte	4,2,35,0,15
	.byte	'acnt',0
	.word	11157
	.byte	4,2,35,4,0,13
	.byte	'Rte_REContainerType',0,18,130,2,3
	.word	11190
	.byte	25
	.word	5200
	.byte	6
	.word	11254
	.byte	6
	.word	131
	.byte	25
	.word	11190
	.byte	6
	.word	11269
	.byte	13
	.byte	'Rte_REContainerRefType',0,18,132,2,60
	.word	11274
	.byte	13
	.byte	'Rte_MSICounterType',0,18,149,2,16
	.word	148
	.byte	6
	.word	148
	.byte	13
	.byte	'Rte_MSICounterRefType',0,18,150,2,56
	.word	11339
	.byte	13
	.byte	'Rte_MSIPendingFlagType',0,18,152,2,17
	.word	131
	.byte	6
	.word	131
	.byte	13
	.byte	'Rte_MSIPendingFlagRefType',0,18,153,2,60
	.word	11407
	.byte	14,18,163,2,9,24,15
	.byte	'counter',0
	.word	11344
	.byte	4,2,35,0,15
	.byte	'incCounter',0
	.word	131
	.byte	1,2,35,4,15
	.byte	'pending',0
	.word	11412
	.byte	4,2,35,8,15
	.byte	'osTask',0
	.word	11048
	.byte	4,2,35,12,15
	.byte	'acnt',0
	.word	11157
	.byte	4,2,35,16,15
	.byte	'osEvent',0
	.word	131
	.byte	1,2,35,20,15
	.byte	'MSIInit',0
	.word	148
	.byte	2,2,35,22,0,13
	.byte	'Rte_MSITableEntry',0,18,172,2,3
	.word	11447
	.byte	6
	.word	148
	.byte	6
	.word	131
	.byte	13
	.byte	'Rte_TaskArrayIndex',0,18,179,2,16
	.word	131
	.byte	13
	.byte	'Rte_NrWaitingTasks',0,18,180,2,16
	.word	131
	.byte	14,18,182,2,9,4,15
	.byte	'pending',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'count',0
	.word	131
	.byte	1,2,35,1,15
	.byte	'firstWaitingTask',0
	.word	131
	.byte	1,2,35,2,0,13
	.byte	'Rte_WaitableDatum',0,18,186,2,3
	.word	11665
	.byte	6
	.word	11665
	.byte	14,18,226,2,9,12,15
	.byte	'event_id',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'wd',0
	.word	11757
	.byte	4,2,35,4,15
	.byte	'timeout',0
	.word	241
	.byte	4,2,35,8,0,13
	.byte	'Rte_WOWP_NotificationType',0,18,230,2,3
	.word	11762
	.byte	25
	.word	11762
	.byte	6
	.word	11851
	.byte	13
	.byte	'Rte_WOWP_NotificationRefType',0,18,232,2,66
	.word	11856
	.byte	13
	.byte	'Rte_ARE_NotificationType',0,18,234,2,29
	.word	11190
	.byte	21
	.byte	'Rte_QTaskType',0,18,243,2,16,28,15
	.byte	'cmn',0
	.word	8724
	.byte	24,2,35,0,15
	.byte	'task',0
	.word	11048
	.byte	4,2,35,24,0,13
	.byte	'Rte_QTaskType',0,18,246,2,3
	.word	11933
	.byte	21
	.byte	'Rte_QREType',0,18,250,2,16,28,15
	.byte	'cmn',0
	.word	8724
	.byte	24,2,35,0,15
	.byte	're',0
	.word	11279
	.byte	4,2,35,24,0,13
	.byte	'Rte_QREType',0,18,253,2,3
	.word	12004
	.byte	25
	.word	11190
	.byte	6
	.word	12069
	.byte	21
	.byte	'Rte_QWWPType',0,18,129,3,16,28,15
	.byte	'cmn',0
	.word	8724
	.byte	24,2,35,0,15
	.byte	'wwp',0
	.word	11861
	.byte	4,2,35,24,0,13
	.byte	'Rte_QWWPType',0,18,132,3,3
	.word	12079
	.byte	25
	.word	11762
	.byte	6
	.word	12147
	.byte	21
	.byte	'Rte_QEvType',0,18,136,3,16,36,15
	.byte	'cmn',0
	.word	8724
	.byte	24,2,35,0,15
	.byte	'task',0
	.word	11048
	.byte	4,2,35,24,15
	.byte	'mask',0
	.word	131
	.byte	1,2,35,28,15
	.byte	'acnt',0
	.word	11157
	.byte	4,2,35,32,0,13
	.byte	'Rte_QEvType',0,18,141,3,3
	.word	12157
	.byte	21
	.byte	'Rte_QMSIType',0,18,145,3,16,48,15
	.byte	'cmn',0
	.word	8724
	.byte	24,2,35,0,15
	.byte	'task',0
	.word	11048
	.byte	4,2,35,24,15
	.byte	'mask',0
	.word	131
	.byte	1,2,35,28,15
	.byte	'acnt',0
	.word	11157
	.byte	4,2,35,32,15
	.byte	'msiCounter',0
	.word	11344
	.byte	4,2,35,36,15
	.byte	'msiPending',0
	.word	11412
	.byte	4,2,35,40,15
	.byte	'msiLimit',0
	.word	148
	.byte	2,2,35,44,0,13
	.byte	'Rte_QMSIType',0,18,153,3,3
	.word	12252
	.byte	14,19,76,9,8,15
	.byte	'TimePeriodFact',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'TimeOffsetFact',0
	.word	148
	.byte	2,2,35,2,15
	.byte	'RepetitionPeriodFact',0
	.word	148
	.byte	2,2,35,4,15
	.byte	'NumOfRepetitions',0
	.word	131
	.byte	1,2,35,6,15
	.byte	'Mode',0
	.word	131
	.byte	1,2,35,7,0,13
	.byte	'Com_TransModeInfo',0,19,93,2
	.word	12407
	.byte	25
	.word	12407
	.byte	6
	.word	12557
	.byte	13
	.byte	'Com_TMConstPtrType',0,19,103,65
	.word	12562
	.byte	14,19,136,1,9,12,15
	.byte	'Init_Val',0
	.word	241
	.byte	4,2,35,0,15
	.byte	'txSignalFields',0
	.word	148
	.byte	2,2,35,4,15
	.byte	'Bit_Pos',0
	.word	131
	.byte	1,2,35,6,15
	.byte	'BitSize',0
	.word	131
	.byte	1,2,35,7,15
	.byte	'IpduRef',0
	.word	131
	.byte	1,2,35,8,15
	.byte	'General',0
	.word	131
	.byte	1,2,35,9,0,13
	.byte	'Com_Prv_xTxSigCfg_tst',0,19,201,1,2
	.word	12594
	.byte	14,19,247,1,9,16,15
	.byte	'Notification_Cbk',0
	.word	3647
	.byte	4,2,35,0,15
	.byte	'Init_Val',0
	.word	241
	.byte	4,2,35,4,15
	.byte	'Bit_Pos',0
	.word	131
	.byte	1,2,35,8,15
	.byte	'SigBuff_Index',0
	.word	131
	.byte	1,2,35,9,15
	.byte	'BitSize',0
	.word	131
	.byte	1,2,35,10,15
	.byte	'IpduRef',0
	.word	131
	.byte	1,2,35,11,15
	.byte	'General',0
	.word	131
	.byte	1,2,35,12,15
	.byte	'rxSignalFields',0
	.word	131
	.byte	1,2,35,13,0,13
	.byte	'Com_Prv_xRxSigCfg_tst',0,19,171,2,2
	.word	12742
	.byte	14,19,211,5,9,24,15
	.byte	'BuffPtr',0
	.word	570
	.byte	4,2,35,0,15
	.byte	'Com_TMConstPtr',0
	.word	12562
	.byte	4,2,35,4,15
	.byte	'Size',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'Timeout_Fact',0
	.word	148
	.byte	2,2,35,10,15
	.byte	'Min_Delay_Time_Fact',0
	.word	148
	.byte	2,2,35,12,15
	.byte	'No_Of_Sig_Ref',0
	.word	148
	.byte	2,2,35,14,15
	.byte	'PdurId',0
	.word	148
	.byte	2,2,35,16,15
	.byte	'TxSigId_Index',0
	.word	131
	.byte	1,2,35,18,15
	.byte	'txIPduFields',0
	.word	148
	.byte	2,2,35,20,15
	.byte	'MainFunctionRef',0
	.word	131
	.byte	1,2,35,22,15
	.byte	'PaddingByte',0
	.word	131
	.byte	1,2,35,23,0,13
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,19,162,6,3
	.word	12939
	.byte	14,19,137,7,9,20,15
	.byte	'BuffPtr',0
	.word	570
	.byte	4,2,35,0,15
	.byte	'TimeOutNotification_Cbk',0
	.word	3647
	.byte	4,2,35,4,15
	.byte	'Size',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'FirstTimeout_Factor',0
	.word	148
	.byte	2,2,35,10,15
	.byte	'Timeout_Fact',0
	.word	148
	.byte	2,2,35,12,15
	.byte	'No_Of_Sig_Ref',0
	.word	148
	.byte	2,2,35,14,15
	.byte	'RxSigId_Index',0
	.word	131
	.byte	1,2,35,16,15
	.byte	'MainFunctionRef',0
	.word	131
	.byte	1,2,35,17,15
	.byte	'rxIPduFields',0
	.word	131
	.byte	1,2,35,18,0,13
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,19,197,7,3
	.word	13218
	.byte	14,19,219,7,9,4,15
	.byte	'FirstIpdu_Index',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'NoOfRxPdus',0
	.word	148
	.byte	2,2,35,2,0,13
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,19,224,7,3
	.word	13469
	.byte	14,19,244,7,9,1,15
	.byte	'txSigRAMFields',0
	.word	131
	.byte	1,2,35,0,0,13
	.byte	'Com_TxSignalFlagType',0,19,248,7,2
	.word	13558
	.byte	14,19,167,8,9,1,15
	.byte	'rxSigRAMFields',0
	.word	131
	.byte	1,2,35,0,0,13
	.byte	'Com_RxSignalFlagType',0,19,171,8,2
	.word	13619
	.byte	14,19,135,9,9,16,15
	.byte	'CurrentTxModePtr',0
	.word	12567
	.byte	4,2,35,0,15
	.byte	'Com_MinDelayTick',0
	.word	148
	.byte	2,2,35,4,15
	.byte	'Com_Tick_Tx',0
	.word	148
	.byte	2,2,35,6,15
	.byte	'Com_n_Tick_Tx',0
	.word	148
	.byte	2,2,35,8,15
	.byte	'Com_TickTxTimeout',0
	.word	148
	.byte	2,2,35,10,15
	.byte	'Com_TxFlags',0
	.word	148
	.byte	2,2,35,12,15
	.byte	'Com_n',0
	.word	131
	.byte	1,2,35,14,15
	.byte	'Com_TransMode',0
	.word	131
	.byte	1,2,35,15,0,13
	.byte	'Com_TxIpduRamData',0,19,189,9,3
	.word	13680
	.byte	25
	.word	12407
	.byte	6
	.word	13896
	.byte	14,19,218,9,9,6,15
	.byte	'RxIPduLength',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'RxTicks_u16',0
	.word	148
	.byte	2,2,35,2,15
	.byte	'RxFlags',0
	.word	131
	.byte	1,2,35,4,0,13
	.byte	'Com_RxIpduRamData',0,19,245,9,2
	.word	13906
	.byte	6
	.word	148
	.byte	14,19,128,10,9,8,15
	.byte	'RxGwQueuePtr',0
	.word	14000
	.byte	4,2,35,0,15
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	131
	.byte	1,2,35,4,15
	.byte	'Com_RxGwQueueRead_ux',0
	.word	131
	.byte	1,2,35,5,0,13
	.byte	'Com_RxGwQueueRAMType',0,19,133,10,2
	.word	14005
	.byte	14,19,138,10,9,4,15
	.byte	'indexGwMapSigDestIdArray',0
	.word	148
	.byte	2,2,35,0,15
	.byte	'destCount',0
	.word	131
	.byte	1,2,35,2,0,13
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,19,142,10,2
	.word	14125
	.byte	14,19,147,10,9,2,15
	.byte	'GwMap_DestId',0
	.word	148
	.byte	2,2,35,0,0,13
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,19,150,10,2
	.word	14219
	.byte	14,19,183,10,9,4,15
	.byte	'StartIPduId',0
	.word	131
	.byte	1,2,35,0,15
	.byte	'NumOfIpdus',0
	.word	131
	.byte	1,2,35,1,15
	.byte	'TimeBaseInMs',0
	.word	131
	.byte	1,2,35,2,0,13
	.byte	'Com_MainFunctionCfgType',0,19,188,10,3
	.word	14284
	.byte	14,19,194,10,9,12,15
	.byte	'Com_SigType_pu8',0
	.word	570
	.byte	4,2,35,0,15
	.byte	'Com_SigType_pu16',0
	.word	398
	.byte	4,2,35,4,15
	.byte	'Com_SigType_pu32',0
	.word	484
	.byte	4,2,35,8,0,13
	.byte	'Com_Prv_xRxRamBuf_tst',0,19,253,10,3
	.word	14387
	.byte	13
	.byte	'rba_BswSrv_uint64',0,20,66,28
	.word	2570
.L64:
	.byte	18,8
	.word	131
	.byte	19,7,0
.L65:
	.byte	18,7
	.word	131
	.byte	19,6,0
.L66:
	.byte	18,1
	.word	131
	.byte	19,0,0
.L67:
	.byte	18,11
	.word	131
	.byte	19,10,0
.L68:
	.byte	18,4
	.word	148
	.byte	19,1,0
.L69:
	.byte	18,30
	.word	13906
	.byte	19,4,0
.L70:
	.byte	18,64
	.word	13680
	.byte	19,3,0
.L71:
	.byte	18,51
	.word	13558
	.byte	19,50,0
.L72:
	.byte	18,13
	.word	13619
	.byte	19,12,0
.L73:
	.byte	18,9
	.word	131
	.byte	19,8,0
.L74:
	.byte	18,5
	.word	131
	.byte	19,4,0,18,228,4
	.word	12594
	.byte	19,50,0
.L75:
	.byte	25
	.word	14627
	.byte	18,208,1
	.word	12742
	.byte	19,12,0
.L76:
	.byte	25
	.word	14642
	.byte	18,96
	.word	12939
	.byte	19,3,0
.L77:
	.byte	25
	.word	14657
	.byte	18,100
	.word	13218
	.byte	19,4,0
.L78:
	.byte	25
	.word	14671
	.byte	18,8
	.word	13469
	.byte	19,1,0
.L79:
	.byte	25
	.word	14685
	.byte	18,9
	.word	131
	.byte	19,8,0
.L80:
	.byte	25
	.word	14699
	.byte	18,8
	.word	14284
	.byte	19,1,0
.L81:
	.byte	25
	.word	14713
	.byte	18,12
	.word	14387
	.byte	19,0,0
.L82:
	.byte	25
	.word	14727
.L83:
	.byte	25
	.word	12407
.L84:
	.byte	25
	.word	12407
.L85:
	.byte	25
	.word	12407
	.byte	18,16
	.word	12407
	.byte	19,1,0
.L86:
	.byte	25
	.word	14756
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,9,46
	.byte	1,49,19,0,0,10,5,0,49,19,0,0,11,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,12,21,0,54,15,0,0,13
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,73,19,11,15,56,9
	.byte	0,0,16,4,1,58,15,59,15,57,15,11,15,0,0,17,40,0,3,8,28,13,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0
	.byte	20,21,0,54,15,39,12,0,0,21,19,1,3,8,58,15,59,15,57,15,11,15,0,0,22,59,0,3,8,0,0,23,21,1,54,15,39,12,0
	.byte	0,24,5,0,73,19,0,0,25,38,0,73,19,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,28,21,0,73,19,54,15,39,12,0,0,29,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L89-.L88
.L88:
	.half	3
	.word	.L91-.L90
.L90:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_Cbk.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L91:
.L89:
	.sdecl	'.debug_info',debug,cluster('Com_IpduBuf_MCU_01_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L6:
	.word	186
	.half	3
	.word	.L7
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduBuf_MCU_01_Can_Network_CANNODE_0',0,7,229,30,24
	.word	.L64
	.byte	1,5,3
	.word	Com_IpduBuf_MCU_01_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduBuf_MCU_01_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L7:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_IpduBuf_MCU_02_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L8:
	.word	186
	.half	3
	.word	.L9
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduBuf_MCU_02_Can_Network_CANNODE_0',0,7,231,30,24
	.word	.L64
	.byte	1,5,3
	.word	Com_IpduBuf_MCU_02_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduBuf_MCU_02_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L9:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_IpduBuf_MCU_03_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L10:
	.word	186
	.half	3
	.word	.L11
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduBuf_MCU_03_Can_Network_CANNODE_0',0,7,233,30,24
	.word	.L65
	.byte	1,5,3
	.word	Com_IpduBuf_MCU_03_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduBuf_MCU_03_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L11:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_IpduBuf_MCU_04_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L12:
	.word	186
	.half	3
	.word	.L13
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduBuf_MCU_04_Can_Network_CANNODE_0',0,7,235,30,24
	.word	.L64
	.byte	1,5,3
	.word	Com_IpduBuf_MCU_04_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduBuf_MCU_04_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L13:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_LocalBuf_HCU_01_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L14:
	.word	187
	.half	3
	.word	.L15
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_LocalBuf_HCU_01_Can_Network_CANNODE_0',0,7,254,30,24
	.word	.L64
	.byte	1,5,3
	.word	Com_LocalBuf_HCU_01_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_LocalBuf_HCU_01_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L15:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_LocalBuf_HCU_02_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L16:
	.word	187
	.half	3
	.word	.L17
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_LocalBuf_HCU_02_Can_Network_CANNODE_0',0,7,128,31,24
	.word	.L66
	.byte	1,5,3
	.word	Com_LocalBuf_HCU_02_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_LocalBuf_HCU_02_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L17:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_LocalBuf_HCU_03_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L18:
	.word	187
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_LocalBuf_HCU_03_Can_Network_CANNODE_0',0,7,130,31,24
	.word	.L66
	.byte	1,5,3
	.word	Com_LocalBuf_HCU_03_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_LocalBuf_HCU_03_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_LocalBuf_HCU_04_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L20:
	.word	187
	.half	3
	.word	.L21
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_LocalBuf_HCU_04_Can_Network_CANNODE_0',0,7,132,31,24
	.word	.L66
	.byte	1,5,3
	.word	Com_LocalBuf_HCU_04_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_LocalBuf_HCU_04_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L21:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_LocalBuf_HCU_05_Can_Network_CANNODE_0')
	.sect	'.debug_info'
.L22:
	.word	187
	.half	3
	.word	.L23
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_LocalBuf_HCU_05_Can_Network_CANNODE_0',0,7,134,31,24
	.word	.L66
	.byte	1,5,3
	.word	Com_LocalBuf_HCU_05_Can_Network_CANNODE_0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_LocalBuf_HCU_05_Can_Network_CANNODE_0')
	.sect	'.debug_abbrev'
.L23:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_SigType_u8')
	.sect	'.debug_info'
.L24:
	.word	160
	.half	3
	.word	.L25
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_SigType_u8',0,7,190,33,20
	.word	.L67
	.byte	1,5,3
	.word	Com_SigType_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_SigType_u8')
	.sect	'.debug_abbrev'
.L25:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_SigType_u16')
	.sect	'.debug_info'
.L26:
	.word	161
	.half	3
	.word	.L27
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_SigType_u16',0,7,205,33,21
	.word	.L68
	.byte	1,5,3
	.word	Com_SigType_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_SigType_u16')
	.sect	'.debug_abbrev'
.L27:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_RxIpduRam_s')
	.sect	'.debug_info'
.L28:
	.word	161
	.half	3
	.word	.L29
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_RxIpduRam_s',0,7,218,31,37
	.word	.L69
	.byte	1,5,3
	.word	Com_RxIpduRam_s
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_RxIpduRam_s')
	.sect	'.debug_abbrev'
.L29:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_TxIpduRam_s')
	.sect	'.debug_info'
.L30:
	.word	161
	.half	3
	.word	.L31
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_TxIpduRam_s',0,7,216,31,37
	.word	.L70
	.byte	1,5,3
	.word	Com_TxIpduRam_s
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_TxIpduRam_s')
	.sect	'.debug_abbrev'
.L31:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_TxSignalFlag')
	.sect	'.debug_info'
.L32:
	.word	162
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_TxSignalFlag',0,7,220,31,37
	.word	.L71
	.byte	1,5,3
	.word	Com_TxSignalFlag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_TxSignalFlag')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_RxSignalFlag')
	.sect	'.debug_info'
.L34:
	.word	162
	.half	3
	.word	.L35
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_RxSignalFlag',0,7,222,31,37
	.word	.L72
	.byte	1,5,3
	.word	Com_RxSignalFlag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_RxSignalFlag')
	.sect	'.debug_abbrev'
.L35:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_IpduCounter_s')
	.sect	'.debug_info'
.L36:
	.word	163
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduCounter_s',0,7,235,31,23
	.word	.L73
	.byte	1,5,3
	.word	Com_IpduCounter_s
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduCounter_s')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_IpduCounter_DM')
	.sect	'.debug_info'
.L38:
	.word	164
	.half	3
	.word	.L39
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_IpduCounter_DM',0,7,237,31,23
	.word	.L74
	.byte	1,5,3
	.word	Com_IpduCounter_DM
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_IpduCounter_DM')
	.sect	'.debug_abbrev'
.L39:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xTxSigCfg_acst')
	.sect	'.debug_info'
.L40:
	.word	167
	.half	3
	.word	.L41
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xTxSigCfg_acst',0,7,46,41
	.word	.L75
	.byte	1,5,3
	.word	Com_Prv_xTxSigCfg_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xTxSigCfg_acst')
	.sect	'.debug_abbrev'
.L41:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xRxSigCfg_acst')
	.sect	'.debug_info'
.L42:
	.word	168
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xRxSigCfg_acst',0,7,210,17,41
	.word	.L76
	.byte	1,5,3
	.word	Com_Prv_xRxSigCfg_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xRxSigCfg_acst')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xTxIpduCfg_acst')
	.sect	'.debug_info'
.L44:
	.word	169
	.half	3
	.word	.L45
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xTxIpduCfg_acst',0,7,255,23,46
	.word	.L77
	.byte	1,5,3
	.word	Com_Prv_xTxIpduCfg_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xTxIpduCfg_acst')
	.sect	'.debug_abbrev'
.L45:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xRxIpduCfg_acst')
	.sect	'.debug_info'
.L46:
	.word	169
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xRxIpduCfg_acst',0,7,130,27,46
	.word	.L78
	.byte	1,5,3
	.word	Com_Prv_xRxIpduCfg_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xRxIpduCfg_acst')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xIpduGrpCfg_acst')
	.sect	'.debug_info'
.L48:
	.word	170
	.half	3
	.word	.L49
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xIpduGrpCfg_acst',0,7,141,30,47
	.word	.L79
	.byte	1,5,3
	.word	Com_Prv_xIpduGrpCfg_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xIpduGrpCfg_acst')
	.sect	'.debug_abbrev'
.L49:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xIPduGrp_IpduRefCfg_au8')
	.sect	'.debug_info'
.L50:
	.word	177
	.half	3
	.word	.L51
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xIPduGrp_IpduRefCfg_au8',0,7,181,30,34
	.word	.L80
	.byte	1,5,3
	.word	Com_Prv_xIPduGrp_IpduRefCfg_au8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xIPduGrp_IpduRefCfg_au8')
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_MainFunctionCfg')
	.sect	'.debug_info'
.L52:
	.word	165
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_MainFunctionCfg',0,7,165,35,43
	.word	.L81
	.byte	1,5,3
	.word	Com_MainFunctionCfg
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_MainFunctionCfg')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_Prv_xRxRamBuf_acst')
	.sect	'.debug_info'
.L54:
	.word	168
	.half	3
	.word	.L55
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_Prv_xRxRamBuf_acst',0,7,155,34,41
	.word	.L82
	.byte	1,5,3
	.word	Com_Prv_xRxRamBuf_acst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_Prv_xRxRamBuf_acst')
	.sect	'.debug_abbrev'
.L55:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_info'
.L56:
	.word	191
	.half	3
	.word	.L57
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo',0,7,223,22,44
	.word	.L83
	.byte	5,3
	.word	Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_info'
.L58:
	.word	191
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo',0,7,129,23,44
	.word	.L84
	.byte	5,3
	.word	Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_info'
.L60:
	.word	191
	.half	3
	.word	.L61
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo',0,7,163,23,44
	.word	.L85
	.byte	5,3
	.word	Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_abbrev'
.L61:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_info'
.L62:
	.word	191
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\Com_PBcfg.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L2
	.byte	3
	.byte	'Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo',0,7,198,23,44
	.word	.L86
	.byte	5,3
	.word	Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0

; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     1  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     2  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     3  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     4  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     5   
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     6  /*<VersionHead>
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     7   * This Configuration File is generated using versions (automatically filled in) as listed below.
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     8   *
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	     9   * $Generator__: Com / AR42.6.0.0                Module Package Version
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    10   * $Editor_____: ISOLAR-A/B 6.0.1_6.0.1                Tool Version
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    11   * $Model______: 2.3.0.4                ECU Parameter Definition Version
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    12   *
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    13   
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    14   </VersionHead>*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    15  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    16  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    17  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    18  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    19   * If COM_DontUseExternalSymbolicNames is defined before including Com_Cfg.h file, then external symbolic names will
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    20   * not be visible.
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    21   * Com_PBcfg.c file should not use external symbolic names.
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    22   * This mechanism is used to prevent the accidental usage of external symbolic names in this file
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    23   * This file should use only internal symbolic name defined in  Com_PBcfg_InternalId.h
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    24   */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    25  #define COM_DontUseExternalSymbolicNames
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    26  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    27  #include "Com_Cbk.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    28  #include "PduR_Com.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    29  #include "Com_PBcfg.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    30  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    31  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    32   * The file Com_PBcfg_InternalId.h defines internal symbolic names
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    33   * These names should be used in the tables generated in this file
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    34   * Regular symbolic names should not be used here
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    35   */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    36  #include "Com_PBcfg_InternalId.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    37  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    38  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    39  /* START: Tx Signal Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    40  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    41  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    42  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    43  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    44  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    45  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    46  CONST(Com_Prv_xTxSigCfg_tst ,COM_CONST) Com_Prv_xTxSigCfg_acst[COM_NUM_TX_SIGNALS] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    47  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    48          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    49      {  /* MCU01_ShutDownAllowed */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    50  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    51          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    52  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    53          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    54          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    55          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    56          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    57              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    58              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    59              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    60              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    61          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    62          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    63  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    64  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    65          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    66  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    67  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    68          24,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    69  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    70          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    71  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    72  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    73          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    74  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    75  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    76  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    77          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    78  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    79  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    80          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    81          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    82          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    83              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    84              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    85              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    86              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    87          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    88          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    89  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    90      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    91          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    92      {  /* MCU01_Ready */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    93  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    94          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    95  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    96          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    97          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    98          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	    99          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   100              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   101              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   102              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   103              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   104          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   105          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   106  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   107  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   108          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   109  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   110  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   111          40,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   112  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   113          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   114  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   115  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   116          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   117  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   118  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   119  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   120          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   121  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   122  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   123          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   124          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   125          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   126              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   127              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   128              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   129              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   130          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   131          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   132  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   133      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   134          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   135      {  /* MCU01_HighVolAllowed */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   136  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   137          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   138  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   139          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   140          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   141          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   142          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   143              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   144              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   145              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   146              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   147          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   148          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   149  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   150  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   151          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   152  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   153  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   154          41,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   155  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   156          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   157  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   158  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   159          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   160  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   161  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   162  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   163          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   164  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   165  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   166          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   167          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   168          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   169              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   170              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   171              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   172              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   173          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   174          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   175  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   176      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   177          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   178      {  /* MCU01_Status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   179  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   180          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   181  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   182          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   183          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   184          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   185          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   186              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   187              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   188              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   189              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   190          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   191          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   192  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   193  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   194          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   195  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   196  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   197          42,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   198  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   199          2,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   200  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   201  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   202          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   203  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   204  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   205  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   206          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   207  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   208  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   209          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   210          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   211          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   212              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   213              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   214              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   215              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   216          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   217          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   218  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   219      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   220          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   221      {  /* MCU01_ActDischStatus */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   222  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   223          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   224  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   225          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   226          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   227          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   228          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   229              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   230              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   231              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   232              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   233          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   234          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   235  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   236  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   237          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   238  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   239  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   240          44,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   241  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   242          2,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   243  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   244  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   245          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   246  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   247  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   248  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   249          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   250  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   251  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   252          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   253          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   254          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   255              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   256              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   257              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   258              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   259          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   260          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   261  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   262      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   263          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   264      {  /* MCU01_SelfCheck */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   265  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   266          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   267  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   268          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   269          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   270          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   271          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   272              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   273              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   274              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   275              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   276          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   277          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   278  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   279  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   280          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   281  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   282  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   283          46,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   284  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   285          2,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   286  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   287  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   288          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   289  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   290  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   291  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   292          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   293  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   294  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   295          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   296          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   297          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   298              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   299              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   300              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   301              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   302          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   303          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   304  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   305      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   306          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   307      {  /* MCU01_CheckSum */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   308  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   309          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   310  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   311          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   312          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   313          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   314          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   315              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   316              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   317              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   318              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   319          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   320          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   321  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   322  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   323          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   324  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   325  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   326          56,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   327  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   328          8,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   329  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   330  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   331          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   332  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   333  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   334  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   335          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   336  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   337  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   338          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   339          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   340          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   341              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   342              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   343              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   344              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   345          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   346          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   347  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   348      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   349          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   350      {  /* MCU01_Counter */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   351  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   352          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   353  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   354          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   355          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   356          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   357          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   358              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   359              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   360              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   361              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   362          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   363          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   364  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   365  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   366          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   367  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   368  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   369          32,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   370  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   371          4,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   372  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   373  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   374          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   375  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   376  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   377  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   378          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   379  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   380  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   381          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   382          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   383          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   384              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   385              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   386              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   387              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   388          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   389          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   390  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   391      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   392          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   393      {  /* MCU01_CurCntTor */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   394  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   395          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   396  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   397          (uint32)(4094uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   398          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   399          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   400          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   401              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   402              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   403              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   404              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   405          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   406          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   407  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   408  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   409          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   410  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   411  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   412          27,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   413  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   414          13,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   415  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   416  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   417          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   418  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   419  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   420  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   421          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   422  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   423  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   424          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   425          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   426          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   427              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   428              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   429              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   430              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   431          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   432          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   433  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   434      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   435          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   436      {  /* MCU01_Motorspd */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   437  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   438          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   439  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   440          (uint32)(32767uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   441          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   442          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   443          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   444              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   445              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   446              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   447              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   448          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   449          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   450  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   451  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   452          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   453  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   454  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   455          8,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   456  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   457          16,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   458  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   459  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   460          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   461  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   462  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   463  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   464          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   465  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   466  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   467          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   468          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   469          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   470              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   471              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   472              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   473              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   474          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   475          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   476  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   477      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   478          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   479      {  /* MCU01_EmergShutDown */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   480  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   481          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   482  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   483          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   484          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   485          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   486          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   487              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   488              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   489              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   490              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   491          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   492          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   493  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   494  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   495          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   496  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   497  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   498          55,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   499  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   500          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   501  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   502  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   503          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   504  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   505  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   506  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   507          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   508  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   509  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   510          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   511          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   512          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   513              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   514              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   515              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   516              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   517          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   518          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   519  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   520      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   521          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   522      {  /* MCU02_IGBTTmp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   523  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   524          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   525  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   526          (uint32)(40uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   527          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   528          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   529          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   530              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   531              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   532              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   533              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   534          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   535          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   536  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   537  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   538          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   539  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   540  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   541          40,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   542  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   543          8,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   544  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   545  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   546          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   547  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   548  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   549  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   550          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   551  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   552  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   553          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   554          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   555          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   556              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   557              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   558              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   559              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   560          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   561          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   562  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   563      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   564          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   565      {  /* MCU02_MotorTmp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   566  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   567          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   568  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   569          (uint32)(40uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   570          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   571          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   572          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   573              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   574              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   575              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   576              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   577          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   578          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   579  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   580  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   581          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   582  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   583  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   584          48,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   585  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   586          8,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   587  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   588  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   589          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   590  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   591  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   592  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   593          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   594  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   595  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   596          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   597          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   598          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   599              Type:5;       = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   600              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   601              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   602              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   603          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   604          0x20                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   605  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   606      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   607          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   608      {  /* MCU02_Vdc */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   609  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   610          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   611  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   612          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   613          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   614          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   615          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   616              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   617              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   618              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   619              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   620          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   621          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   622  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   623  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   624          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   625  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   626  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   627          26,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   628  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   629          10,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   630  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   631  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   632          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   633  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   634  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   635  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   636          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   637  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   638  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   639          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   640          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   641          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   642              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   643              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   644              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   645              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   646          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   647          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   648  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   649      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   650          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   651      {  /* MCU02_Idc */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   652  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   653          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   654  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   655          (uint32)(511uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   656          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   657          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   658          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   659              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   660              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   661              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   662              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   663          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   664          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   665  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   666  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   667          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   668  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   669  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   670          32,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   671  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   672          10,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   673  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   674  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   675          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   676  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   677  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   678  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   679          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   680  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   681  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   682          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   683          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   684          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   685              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   686              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   687              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   688              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   689          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   690          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   691  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   692      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   693          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   694      {  /* MCU02_MinTor */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   695  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   696          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   697  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   698          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   699          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   700          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   701          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   702              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   703              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   704              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   705              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   706          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   707          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   708  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   709  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   710          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   711  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   712  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   713          20,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   714  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   715          9,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   716  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   717  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   718          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   719  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   720  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   721  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   722          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   723  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   724  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   725          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   726          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   727          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   728              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   729              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   730              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   731              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   732          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   733          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   734  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   735      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   736          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   737      {  /* MCU02_MaxTor */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   738  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   739          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   740  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   741          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   742          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   743          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   744          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   745              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   746              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   747              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   748              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   749          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   750          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   751  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   752  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   753          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   754  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   755  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   756          13,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   757  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   758          11,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   759  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   760  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   761          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   762  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   763  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   764  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   765          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   766  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   767  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   768          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   769          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   770          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   771              Type:5;       = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   772              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   773              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   774              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   775          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   776          0x22                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   777  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   778      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   779          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   780      {  /* MCU03_LI_OverSpeed */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   781  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   782          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   783  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   784          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   785          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   786          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   787          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   788              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   789              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   790              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   791              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   792          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   793          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   794  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   795  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   796          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   797  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   798  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   799          51,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   800  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   801          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   802  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   803  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   804          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   805  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   806  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   807  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   808          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   809  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   810  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   811          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   812          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   813          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   814              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   815              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   816              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   817              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   818          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   819          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   820  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   821      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   822          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   823      {  /* MCU03_LI_OverTempEM */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   824  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   825          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   826  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   827          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   828          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   829          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   830          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   831              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   832              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   833              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   834              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   835          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   836          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   837  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   838  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   839          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   840  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   841  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   842          50,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   843  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   844          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   845  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   846  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   847          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   848  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   849  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   850  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   851          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   852  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   853  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   854          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   855          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   856          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   857              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   858              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   859              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   860              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   861          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   862          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   863  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   864      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   865          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   866      {  /* MCU03_LI_OverTempINV */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   867  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   868          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   869  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   870          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   871          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   872          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   873          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   874              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   875              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   876              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   877              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   878          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   879          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   880  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   881  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   882          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   883  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   884  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   885          49,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   886  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   887          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   888  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   889  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   890          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   891  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   892  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   893  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   894          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   895  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   896  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   897          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   898          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   899          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   900              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   901              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   902              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   903              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   904          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   905          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   906  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   907      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   908          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   909      {  /* MCU03_LI_UdcUnder */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   910  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   911          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   912  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   913          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   914          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   915          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   916          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   917              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   918              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   919              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   920              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   921          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   922          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   923  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   924  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   925          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   926  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   927  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   928          48,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   929  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   930          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   931  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   932  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   933          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   934  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   935  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   936  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   937          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   938  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   939  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   940          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   941          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   942          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   943              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   944              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   945              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   946              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   947          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   948          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   949  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   950      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   951          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   952      {  /* MCU03_LI_UdcOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   953  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   954          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   955  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   956          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   957          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   958          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   959          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   960              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   961              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   962              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   963              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   964          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   965          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   966  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   967  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   968          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   969  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   970  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   971          52,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   972  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   973          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   974  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   975  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   976          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   977  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   978  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   979  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   980          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   981  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   982  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   983          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   984          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   985          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   986              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   987              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   988              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   989              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   990          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   991          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   992  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   993      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   994          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   995      {  /* MCU03_RF_PhaseImp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   996  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   997          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   998  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	   999          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1000          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1001          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1002          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1003              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1004              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1005              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1006              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1007          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1008          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1009  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1010  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1011          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1012  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1013  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1014          39,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1015  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1016          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1017  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1018  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1019          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1020  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1021  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1022  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1023          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1024  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1025  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1026          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1027          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1028          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1029              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1030              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1031              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1032              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1033          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1034          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1035  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1036      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1037          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1038      {  /* MCU03_12VSupply */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1039  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1040          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1041  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1042          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1043          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1044          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1045          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1046              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1047              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1048              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1049              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1050          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1051          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1052  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1053  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1054          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1055  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1056  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1057          32,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1058  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1059          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1060  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1061  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1062          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1063  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1064  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1065  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1066          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1067  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1068  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1069          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1070          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1071          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1072              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1073              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1074              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1075              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1076          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1077          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1078  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1079      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1080          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1081      {  /* MCU03_RF_PhCOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1082  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1083          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1084  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1085          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1086          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1087          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1088          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1089              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1090              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1091              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1092              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1093          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1094          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1095  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1096  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1097          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1098  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1099  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1100          47,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1101  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1102          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1103  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1104  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1105          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1106  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1107  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1108  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1109          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1110  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1111  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1112          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1113          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1114          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1115              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1116              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1117              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1118              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1119          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1120          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1121  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1122      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1123          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1124      {  /* MCU03_RF_PhBOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1125  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1126          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1127  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1128          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1129          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1130          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1131          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1132              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1133              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1134              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1135              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1136          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1137          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1138  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1139  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1140          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1141  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1142  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1143          46,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1144  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1145          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1146  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1147  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1148          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1149  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1150  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1151  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1152          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1153  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1154  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1155          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1156          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1157          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1158              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1159              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1160              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1161              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1162          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1163          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1164  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1165      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1166          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1167      {  /* MCU03_RF_PhAOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1168  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1169          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1170  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1171          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1172          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1173          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1174          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1175              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1176              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1177              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1178              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1179          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1180          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1181  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1182  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1183          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1184  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1185  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1186          45,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1187  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1188          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1189  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1190  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1191          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1192  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1193  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1194  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1195          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1196  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1197  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1198          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1199          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1200          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1201              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1202              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1203              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1204              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1205          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1206          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1207  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1208      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1209          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1210      {  /* MCU03_RF_OverSpeed */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1211  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1212          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1213  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1214          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1215          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1216          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1217          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1218              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1219              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1220              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1221              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1222          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1223          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1224  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1225  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1226          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1227  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1228  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1229          41,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1230  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1231          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1232  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1233  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1234          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1235  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1236  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1237  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1238          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1239  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1240  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1241          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1242          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1243          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1244              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1245              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1246              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1247              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1248          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1249          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1250  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1251      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1252          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1253      {  /* MCU03_RF_MsgTO */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1254  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1255          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1256  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1257          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1258          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1259          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1260          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1261              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1262              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1263              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1264              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1265          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1266          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1267  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1268  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1269          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1270  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1271  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1272          43,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1273  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1274          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1275  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1276  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1277          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1278  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1279  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1280  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1281          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1282  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1283  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1284          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1285          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1286          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1287              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1288              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1289              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1290              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1291          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1292          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1293  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1294      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1295          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1296      {  /* MCU03_RF_OverTempEM */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1297  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1298          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1299  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1300          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1301          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1302          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1303          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1304              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1305              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1306              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1307              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1308          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1309          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1310  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1311  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1312          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1313  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1314  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1315          40,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1316  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1317          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1318  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1319  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1320          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1321  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1322  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1323  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1324          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1325  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1326  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1327          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1328          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1329          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1330              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1331              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1332              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1333              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1334          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1335          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1336  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1337      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1338          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1339      {  /* MCU03_RF_OverTempINV */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1340  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1341          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1342  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1343          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1344          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1345          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1346          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1347              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1348              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1349              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1350              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1351          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1352          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1353  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1354  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1355          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1356  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1357  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1358          36,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1359  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1360          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1361  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1362  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1363          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1364  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1365  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1366  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1367          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1368  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1369  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1370          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1371          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1372          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1373              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1374              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1375              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1376              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1377          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1378          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1379  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1380      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1381          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1382      {  /* MCU03_RF_IntError */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1383  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1384          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1385  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1386          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1387          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1388          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1389          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1390              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1391              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1392              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1393              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1394          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1395          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1396  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1397  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1398          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1399  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1400  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1401          38,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1402  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1403          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1404  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1405  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1406          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1407  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1408  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1409  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1410          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1411  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1412  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1413          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1414          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1415          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1416              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1417              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1418              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1419              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1420          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1421          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1422  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1423      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1424          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1425      {  /* MCU03_RF_HWOverCur */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1426  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1427          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1428  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1429          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1430          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1431          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1432          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1433              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1434              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1435              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1436              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1437          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1438          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1439  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1440  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1441          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1442  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1443  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1444          44,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1445  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1446          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1447  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1448  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1449          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1450  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1451  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1452  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1453          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1454  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1455  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1456          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1457          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1458          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1459              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1460              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1461              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1462              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1463          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1464          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1465  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1466      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1467          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1468      {  /* MCU03_RF_UDCUnder */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1469  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1470          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1471  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1472          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1473          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1474          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1475          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1476              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1477              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1478              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1479              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1480          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1481          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1482  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1483  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1484          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1485  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1486  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1487          37,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1488  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1489          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1490  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1491  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1492          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1493  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1494  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1495  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1496          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1497  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1498  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1499          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1500          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1501          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1502              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1503              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1504              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1505              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1506          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1507          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1508  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1509      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1510          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1511      {  /* MCU03_RF_UdcOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1512  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1513          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1514  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1515          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1516          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1517          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1518          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1519              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1520              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1521              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1522              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1523          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1524          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1525  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1526  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1527          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1528  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1529  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1530          34,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1531  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1532          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1533  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1534  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1535          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1536  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1537  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1538  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1539          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1540  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1541  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1542          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1543          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1544          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1545              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1546              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1547              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1548              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1549          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1550          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1551  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1552      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1553          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1554      {  /* MCU03_RF_IdcOver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1555  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1556          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1557  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1558          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1559          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1560          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1561          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1562              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1563              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1564              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1565              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1566          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1567          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1568  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1569  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1570          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1571  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1572  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1573          33,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1574  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1575          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1576  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1577  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1578          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1579  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1580  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1581  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1582          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1583  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1584  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1585          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1586          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1587          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1588              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1589              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1590              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1591              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1592          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1593          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1594  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1595      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1596          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1597      {  /* MCU03_RF_ToqError */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1598  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1599          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1600  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1601          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1602          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1603          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1604          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1605              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1606              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1607              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1608              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1609          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1610          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1611  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1612  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1613          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1614  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1615  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1616          35,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1617  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1618          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1619  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1620  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1621          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1622  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1623  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1624  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1625          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1626  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1627  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1628          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1629          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1630          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1631              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1632              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1633              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1634              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1635          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1636          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1637  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1638      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1639          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1640      {  /* MCU03_RF_BusOff */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1641  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1642          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1643  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1644          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1645          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1646          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1647          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1648              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1649              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1650              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1651              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1652          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1653          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1654  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1655  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1656          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1657  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1658  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1659          42,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1660  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1661          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1662  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1663  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1664          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1665  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1666  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1667  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1668          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1669  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1670  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1671          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1672          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1673          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1674              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1675              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1676              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1677              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1678          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1679          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1680  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1681      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1682          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1683      {  /* MCU03_NRF_SysFailure */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1684  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1685          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1686  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1687          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1688          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1689          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1690          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1691              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1692              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1693              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1694              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1695          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1696          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1697  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1698  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1699          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1700  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1701  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1702          11,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1703  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1704          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1705  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1706  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1707          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1708  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1709  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1710  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1711          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1712  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1713  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1714          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1715          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1716          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1717              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1718              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1719              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1720              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1721          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1722          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1723  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1724      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1725          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1726      {  /* MCU03_NRF_Resolver */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1727  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1728          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1729  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1730          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1731          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1732          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1733          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1734              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1735              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1736              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1737              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1738          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1739          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1740  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1741  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1742          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1743  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1744  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1745          2,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1746  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1747          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1748  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1749  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1750          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1751  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1752  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1753  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1754          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1755  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1756  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1757          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1758          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1759          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1760              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1761              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1762              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1763              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1764          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1765          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1766  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1767      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1768          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1769      {  /* MCU03_NRF_PhCSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1770  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1771          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1772  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1773          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1774          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1775          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1776          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1777              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1778              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1779              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1780              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1781          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1782          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1783  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1784  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1785          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1786  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1787  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1788          5,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1789  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1790          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1791  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1792  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1793          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1794  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1795  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1796  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1797          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1798  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1799  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1800          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1801          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1802          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1803              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1804              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1805              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1806              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1807          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1808          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1809  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1810      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1811          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1812      {  /* MCU03_NRF_PhBSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1813  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1814          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1815  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1816          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1817          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1818          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1819          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1820              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1821              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1822              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1823              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1824          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1825          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1826  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1827  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1828          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1829  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1830  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1831          4,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1832  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1833          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1834  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1835  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1836          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1837  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1838  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1839  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1840          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1841  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1842  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1843          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1844          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1845          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1846              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1847              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1848              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1849              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1850          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1851          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1852  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1853      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1854          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1855      {  /* MCU03_NRF_InvTempSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1856  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1857          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1858  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1859          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1860          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1861          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1862          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1863              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1864              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1865              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1866              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1867          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1868          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1869  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1870  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1871          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1872  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1873  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1874          9,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1875  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1876          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1877  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1878  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1879          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1880  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1881  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1882  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1883          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1884  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1885  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1886          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1887          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1888          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1889              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1890              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1891              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1892              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1893          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1894          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1895  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1896      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1897          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1898      {  /* MCU03_NRF_PhASamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1899  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1900          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1901  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1902          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1903          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1904          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1905          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1906              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1907              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1908              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1909              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1910          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1911          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1912  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1913  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1914          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1915  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1916  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1917          3,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1918  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1919          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1920  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1921  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1922          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1923  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1924  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1925  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1926          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1927  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1928  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1929          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1930          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1931          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1932              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1933              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1934              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1935              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1936          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1937          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1938  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1939      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1940          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1941      {  /* MCU03_NRF_DESAT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1942  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1943          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1944  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1945          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1946          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1947          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1948          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1949              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1950              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1951              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1952              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1953          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1954          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1955  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1956  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1957          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1958  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1959  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1960          0,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1961  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1962          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1963  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1964  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1965          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1966  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1967  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1968  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1969          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1970  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1971  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1972          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1973          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1974          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1975              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1976              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1977              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1978              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1979          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1980          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1981  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1982      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1983          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1984      {  /* MCU03_NRF_UdcSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1985  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1986          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1987  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1988          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1989          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1990          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1991          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1992              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1993              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1994              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1995              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1996          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1997          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1998  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  1999  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2000          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2001  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2002  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2003          8,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2004  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2005          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2006  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2007  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2008          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2009  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2010  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2011  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2012          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2013  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2014  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2015          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2016          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2017          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2018              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2019              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2020              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2021              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2022          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2023          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2024  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2025      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2026          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2027      {  /* MCU03_NRF_COMError */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2028  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2029          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2030  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2031          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2032          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2033          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2034          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2035              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2036              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2037              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2038              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2039          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2040          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2041  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2042  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2043          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2044  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2045  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2046          10,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2047  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2048          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2049  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2050  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2051          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2052  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2053  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2054  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2055          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2056  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2057  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2058          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2059          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2060          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2061              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2062              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2063              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2064              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2065          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2066          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2067  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2068      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2069          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2070      {  /* MCU03_NRF_5VSupply */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2071  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2072          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2073  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2074          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2075          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2076          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2077          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2078              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2079              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2080              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2081              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2082          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2083          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2084  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2085  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2086          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2087  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2088  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2089          1,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2090  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2091          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2092  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2093  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2094          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2095  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2096  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2097  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2098          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2099  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2100  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2101          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2102          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2103          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2104              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2105              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2106              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2107              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2108          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2109          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2110  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2111      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2112          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2113      {  /* MCU03_NRF_EMTempSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2114  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2115          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2116  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2117          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2118          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2119          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2120          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2121              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2122              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2123              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2124              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2125          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2126          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2127  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2128  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2129          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2130  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2131  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2132          6,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2133  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2134          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2135  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2136  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2137          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2138  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2139  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2140  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2141          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2142  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2143  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2144          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2145          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2146          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2147              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2148              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2149              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2150              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2151          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2152          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2153  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2154      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2155          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2156      {  /* MCU03_NRF_IdcSamp */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2157  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2158          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2159  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2160          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2161          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2162          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2163          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2164              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2165              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2166              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2167              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2168          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2169          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2170  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2171  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2172          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2173  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2174  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2175          15,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2176  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2177          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2178  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2179  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2180          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2181  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2182  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2183  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2184          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2185  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2186  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2187          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2188          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2189          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2190              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2191              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2192              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2193              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2194          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2195          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2196  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2197      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2198          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2199      {  /* MCU04_Test */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2200  #ifdef COM_TxInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2201          (uint32)(0uL),                                                /*DataInvalid_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2202  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2203          (uint32)(0uL),                                                /* Init_Val*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2204          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2205          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2206          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2207              TransProp       : 3;    = TRIGGERED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2208              FilterAlgorithm : 4;    = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2209              DataInvalidType : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2210              TimeOutEnabled  : 1;    = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2211          }Com_TxSigPropType;    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2212          0x54,                                               /* Transmission Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2213  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2214  #ifdef COM_TxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2215          COM_UPDATE_MAX,                                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2216  #endif /* #ifdef COM_TxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2217  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2218          15,                                                /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2219  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2220          1,/*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2221  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2222  #ifdef COM_TxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2223          0xff,                                              /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2224  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2225  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2226  #ifdef COM_EffectiveSigTOC
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2227          0xff,                                              /*OldVal_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2228  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2229  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2230          (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_04_Can_Network_CANNODE_0,             /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2231          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2232          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2233              Type:5;       = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2234              Endianess:1;  = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2235              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2236              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2237          }Com_GeneralType;*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2238          0x26                                               /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2239  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2240      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2241  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2242  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2243  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2244  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2245  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2246  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2247  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2248  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2249  /* END: Tx Signal Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2250  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2251  /* START: Rx Signal Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2252  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2253  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2254  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2255  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2256  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2257  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2258  CONST(Com_Prv_xRxSigCfg_tst ,COM_CONST) Com_Prv_xRxSigCfg_acst[COM_NUM_RX_SIGNALS] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2259  {    
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2260          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2261      {  /* HCU01_EmergShutDown */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2262  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2263          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2264          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2265  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2266  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2267          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2268          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2269          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2270  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2271  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2272         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2273  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2274             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2275  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2276         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2277  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2278         36,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2279         0,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2280         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2281        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2282  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2283  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2284          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2285  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2286  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2287         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2288          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2289          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2290              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2291              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2292              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2293              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2294          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2295          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2296  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2297          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2298          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2299              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2300              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2301              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2302              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2303          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2304          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2305      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2306      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2307          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2308      {  /* HCU01_CheckSum */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2309  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2310          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2311          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2312  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2313  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2314          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2315          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2316          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2317  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2318  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2319         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2320  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2321             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2322  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2323         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2324  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2325         56,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2326         1,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2327         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2328        8, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2329  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2330  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2331          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2332  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2333  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2334         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2335          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2336          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2337              Type:5;        = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2338              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2339              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2340              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2341          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2342          0x20,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2343  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2344          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2345          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2346              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2347              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2348              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2349              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2350          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2351          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2352      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2353      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2354          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2355      {  /* HCU01_Counter */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2356  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2357          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2358          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2359  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2360  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2361          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2362          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2363          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2364  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2365  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2366         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2367  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2368             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2369  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2370         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2371  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2372         48,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2373         2,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2374         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2375        4, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2376  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2377  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2378          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2379  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2380  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2381         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2382          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2383          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2384              Type:5;        = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2385              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2386              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2387              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2388          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2389          0x20,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2390  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2391          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2392          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2393              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2394              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2395              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2396              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2397          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2398          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2399      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2400      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2401          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2402      {  /* HCU01_ActiveDischarge */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2403  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2404          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2405          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2406  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2407  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2408          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2409          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2410          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2411  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2412  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2413         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2414  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2415             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2416  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2417         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2418  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2419         37,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2420         3,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2421         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2422        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2423  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2424  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2425          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2426  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2427  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2428         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2429          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2430          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2431              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2432              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2433              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2434              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2435          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2436          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2437  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2438          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2439          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2440              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2441              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2442              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2443              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2444          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2445          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2446      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2447      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2448          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2449      {  /* HCU01_McuModeCmd */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2450  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2451          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2452          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2453  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2454  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2455          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2456          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2457          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2458  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2459  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2460         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2461  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2462             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2463  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2464         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2465  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2466         38,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2467         4,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2468         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2469        2, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2470  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2471  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2472          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2473  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2474  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2475         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2476          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2477          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2478              Type:5;        = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2479              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2480              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2481              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2482          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2483          0x20,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2484  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2485          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2486          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2487              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2488              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2489              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2490              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2491          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2492          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2493      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2494      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2495          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2496      {  /* HCU01_EnaMCU */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2497  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2498          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2499          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2500  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2501  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2502          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2503          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2504          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2505  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2506  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2507         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2508  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2509             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2510  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2511         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2512  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2513         24,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2514         5,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2515         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2516        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2517  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2518  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2519          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2520  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2521  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2522         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2523          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2524          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2525              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2526              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2527              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2528              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2529          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2530          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2531  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2532          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2533          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2534              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2535              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2536              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2537              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2538          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2539          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2540      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2541      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2542          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2543      {  /* HCU01_SpeedCmd */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2544  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2545          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2546          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2547  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2548  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2549          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2550          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2551          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2552  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2553  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2554         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2555  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2556             (uint32)(255uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2557  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2558         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2559  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2560         25,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2561         0,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2562         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2563        15, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2564  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2565  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2566          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2567  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2568  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2569         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2570          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2571          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2572              Type:5;        = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2573              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2574              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2575              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2576          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2577          0x22,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2578  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2579          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2580          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2581              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2582              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2583              DataTimeoutType:1;   = NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2584              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2585          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2586          0x28         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2587      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2588      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2589          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2590      {  /* HCU01_Shift */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2591  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2592          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2593          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2594          &Rte_COMCbk_HCU01_Shift,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2595          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2596  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2597  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2598          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2599          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2600          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2601  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2602  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2603         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2604  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2605             (uint32)(3uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2606  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2607         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2608  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2609         32,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2610         6,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2611         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2612        2, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2613  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2614  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2615          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2616  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2617  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2618         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2619          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2620          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2621              Type:5;        = UINT8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2622              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2623              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2624              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2625          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2626          0x20,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2627  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2628          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2629          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2630              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2631              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2632              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2633              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2634          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2635          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2636      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2637      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2638          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2639      {  /* HCU01_TqCmd */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2640  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2641          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2642          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2643          &Rte_COMCbk_HCU01_TqCmd,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2644          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2645  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2646  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2647          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2648          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2649          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2650  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2651  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2652         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2653  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2654             (uint32)(255uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2655  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2656         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2657  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2658         10,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2659         1,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2660         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2661        14, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2662  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2663  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2664          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2665  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2666  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2667         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2668          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2669          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2670              Type:5;        = UINT16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2671              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2672              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2673              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2674          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2675          0x22,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2676  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2677          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2678          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2679              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2680              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2681              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2682              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2683          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2684          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2685      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2686      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2687          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2688      {  /* HCU02_Poweroff */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2689  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2690          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2691          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2692          &Rte_COMCbk_HCU02_Poweroff,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2693          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2694  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2695  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2696          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2697          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2698          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2699  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2700  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2701         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2702  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2703             (uint32)(1uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2704  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2705         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2706  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2707         6,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2708         7,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2709         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2710        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2711  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2712  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2713          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2714  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2715  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2716         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_02_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2717          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2718          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2719              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2720              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2721              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2722              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2723          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2724          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2725  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2726          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2727          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2728              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2729              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2730              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2731              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2732          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2733          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2734      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2735      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2736          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2737      {  /* HCU03_Poweroff */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2738  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2739          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2740          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2741          &Rte_COMCbk_HCU03_Poweroff,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2742          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2743  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2744  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2745          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2746          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2747          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2748  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2749  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2750         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2751  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2752             (uint32)(1uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2753  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2754         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2755  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2756         0,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2757         8,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2758         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2759        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2760  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2761  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2762          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2763  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2764  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2765         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_03_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2766          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2767          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2768              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2769              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2770              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2771              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2772          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2773          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2774  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2775          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2776          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2777              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2778              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2779              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2780              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2781          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2782          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2783      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2784      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2785          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2786      {  /* HCU04_Poweroff */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2787  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2788          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2789          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2790          &Rte_COMCbk_HCU04_Poweroff,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2791          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2792  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2793  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2794          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2795          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2796          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2797  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2798  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2799         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2800  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2801             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2802  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2803         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2804  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2805         0,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2806         9,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2807         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2808        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2809  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2810  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2811          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2812  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2813  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2814         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_04_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2815          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2816          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2817              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2818              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2819              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2820              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2821          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2822          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2823  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2824          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2825          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2826              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2827              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2828              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2829              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2830          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2831          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2832      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2833      ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2834          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2835      {  /* HCU05_Poweroff */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2836  #ifdef COM_RxSignalNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2837          /* Notification Signal part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2838          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2839          &Rte_COMCbk_HCU05_Poweroff,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2840          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2841  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2842  #ifdef COM_RxSigInvalidNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2843          /* Com Invalid Notification */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2844          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2845          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2846  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2847  #ifdef COM_RxSigInvalid
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2848         (uint32)(0uL),    /* DataInvalid_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2849  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2850             (uint32)(0uL),        /*Init_Val */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2851  #ifdef COM_RxSigUpdateBit
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2852         COM_UPDATE_MAX,                    /*Update bit Position*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2853  #endif /* #ifdef COM_RxSigUpdateBit */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2854         0,                         /*BitPosition*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2855         10,                /* Signal Buffer Index */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2856         
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2857        1, /*BitSize*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2858  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2859  #ifdef COM_RxFilters
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2860          0xff,                           /*Filter_Index*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2861  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2862  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2863         (Com_IpduIdType)ComConf_ComIPdu_Internal_HCU_05_Can_Network_CANNODE_0,                       /*Ipdu Reference*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2864          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2865          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2866              Type:5;        = BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2867              Endianess:1;   = BIG_ENDIAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2868              UpdBitConf:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2869              Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2870          }Com_GeneralType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2871          0x26,       /*General*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2872  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2873          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2874          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2875              DataInvalidType:2;   =  NONE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2876              FilterAlgorithm:4;   = COM_NOTCONFIGURED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2877              DataTimeoutType:1;   = REPLACE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2878              IsGwSignal:1         = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2879          } Com_RxSigPropType; */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2880          0x68         /* Reception Fields */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2881      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2882      
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2883  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2884  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2885  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2886  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2887  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2888  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2889  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2890  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2891  /* END: Rx Signal Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2892  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2893  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2894  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2895  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2896  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2897  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2898  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2899  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2900  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2901  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2902  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2903  /* START: TMS Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2904  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2905  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2906  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2907  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2908  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2909  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2910  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2911  static CONST(Com_TransModeInfo ,COM_CONST) Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2912  /* MCU_01_Can_Network_CANNODE_0 has only True mode configured */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2913      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2914          1, /* TimePeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2915          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2916          1, /* TimeOffset */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2917          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2918          0, /* RepetitionPeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2919          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2920          0,  /* NumRepetitions */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2921  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2922  #ifdef COM_MIXEDPHASESHIFT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2923          COM_TXMODE_PERIODIC, /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2924          COM_FALSE    /* MixedPhaseShift status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2925  #else
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2926          COM_TXMODE_PERIODIC /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2927  #endif /* #ifdef COM_MIXEDPHASESHIFT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2928  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2929      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2930  ;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2931  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2932  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2933  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2934  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2935  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2936  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2937  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2938  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2939  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2940  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2941  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2942  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2943  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2944  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2945  static CONST(Com_TransModeInfo ,COM_CONST) Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2946  /* MCU_02_Can_Network_CANNODE_0 has only True mode configured */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2947      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2948          5, /* TimePeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2949          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2950          1, /* TimeOffset */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2951          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2952          0, /* RepetitionPeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2953          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2954          0,  /* NumRepetitions */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2955  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2956  #ifdef COM_MIXEDPHASESHIFT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2957          COM_TXMODE_PERIODIC, /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2958          COM_FALSE    /* MixedPhaseShift status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2959  #else
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2960          COM_TXMODE_PERIODIC /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2961  #endif /* #ifdef COM_MIXEDPHASESHIFT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2962  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2963      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2964  ;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2965  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2966  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2967  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2968  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2969  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2970  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2971  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2972  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2973  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2974  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2975  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2976  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2977  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2978  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2979  static CONST(Com_TransModeInfo ,COM_CONST) Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2980  /* MCU_03_Can_Network_CANNODE_0 has only True mode configured */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2981      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2982          5, /* TimePeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2983          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2984          1, /* TimeOffset */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2985          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2986          0, /* RepetitionPeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2987          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2988          0,  /* NumRepetitions */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2989  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2990  #ifdef COM_MIXEDPHASESHIFT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2991          COM_TXMODE_PERIODIC, /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2992          COM_FALSE    /* MixedPhaseShift status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2993  #else
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2994          COM_TXMODE_PERIODIC /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2995  #endif /* #ifdef COM_MIXEDPHASESHIFT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2996  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2997      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2998  ;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  2999  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3000  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3001  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3002  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3003  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3004  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3005  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3006  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3007  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3008  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3009  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3010  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3011  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3012  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3013  /* MCU_04_Can_Network_CANNODE_0 has a TMS switch */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3014  static CONST(Com_TransModeInfo ,COM_CONST) Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo[] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3015  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3016      /* True Mode configuration */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3017      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3018          5, /* TimePeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3019          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3020          1, /* TimeOffset */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3021          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3022          0, /* RepetitionPeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3023          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3024          0,  /* NumRepetitions */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3025  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3026  #ifdef COM_MIXEDPHASESHIFT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3027          COM_TXMODE_PERIODIC, /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3028          COM_FALSE    /* MixedPhaseShift status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3029  #else
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3030          COM_TXMODE_PERIODIC /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3031  #endif /* #ifdef COM_MIXEDPHASESHIFT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3032  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3033      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3034  ,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3035      /* False Mode configuration */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3036      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3037          5, /* TimePeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3038          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3039          1, /* TimeOffset */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3040          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3041          0, /* RepetitionPeriod */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3042          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3043          0,  /* NumRepetitions */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3044  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3045  #ifdef COM_MIXEDPHASESHIFT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3046          COM_TXMODE_PERIODIC, /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3047          COM_FALSE    /* MixedPhaseShift status */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3048  #else
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3049          COM_TXMODE_PERIODIC /* Mode */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3050  #endif /* #ifdef COM_MIXEDPHASESHIFT */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3051  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3052      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3053  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3054  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3055  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3056  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3057  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3058  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3059  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3060  /* END: TMS Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3061  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3062  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3063  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3064  /* START: Tx IPDU Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3065  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3066  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3067  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3068  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3069  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3070  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3071  CONST(Com_Prv_xTxIpduInfoCfg_tst ,COM_CONST) Com_Prv_xTxIpduCfg_acst[COM_NUM_TX_IPDU] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3072  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3073      {   /*Ipdu: MCU_01_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3074  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3075          Com_IpduBuf_MCU_01_Can_Network_CANNODE_0,              /*Pointer to the Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3076  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3077          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3078          &Com_MCU_01_Can_Network_CANNODE_0_TransModeInfo,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3079          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3080          #ifdef COM_TxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3081          /* Ipdu Callout Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3082          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3083          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3084          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3085          #ifdef COM_TxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3086          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3087  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3088          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3089          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3090  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3091          #ifdef COM_ERRORNOTIFICATION
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3092          /* Error Notification part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3093  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3094          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3095          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3096  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3097          #ifdef COM_TxIPduTimeOutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3098          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3099  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3100          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3101          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3102  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3103  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3104          #ifdef COM_METADATA_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3105          NULL_PTR,               /* Pointer to the MetaData Ipdu Buffer */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3106          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3107  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3108  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3109          8,/*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3110          #ifdef COM_TxIPduTimeOut
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3111          1,               /*Timeout Fact*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3112          #endif /* #ifdef COM_TxIPduTimeOut */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3113          0, /*MinDelay Time factor*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3114  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3115          11,                    /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3116          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3117  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3118          0,               /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3119          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3120  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3121          (PduIdType)PduRConf_PduRSrcPdu_MCU_01_Can_Network_CANNODE_0_Com2PduR,              /* PduR Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3122  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3123          (Com_TxIntSignalIdType)ComSignal_Internal_MCU01_ShutDownAllowed,     /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3124          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3125  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3126          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3127          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3128  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3129  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3130  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3131  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3132  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3133  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3134  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3135  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3136      Signal_Processing:1;          = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3137      TMSCalclation:2;              = TRUEMODE_VALID
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3138      NoneModeTimeOut:1;            = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3139      ClearUpdBit:2                 = CLEAR_UPDATEBIT_NOT_APPLICABLE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3140      FilterEvalReq:1               = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3141      IsDynPdu:1;                   = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3142      IsGwDestPdu:1;                = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3143      IsCalloutFrmTrigTrans:1;      = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3144      isLargeDataPdu:1;             = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3145      isCancelTransmitSupported:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3146      IsMetaDataSupported:1;        = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3147      defaultTMSStatus:1;           = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3148      ipduPartOfIpduGrp:1;          = COM_TRUE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3149      Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3150  }Com_TxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3151  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3152          0x4002,  /*Transmission Type*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3153  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3154          /* Com_MainFunctionTx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3155          ComMainFunction_Internal_MainFunctionTx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3156  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3157          0xFF               /*Padding Byte*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3158  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3159      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3160      {   /*Ipdu: MCU_02_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3161  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3162          Com_IpduBuf_MCU_02_Can_Network_CANNODE_0,              /*Pointer to the Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3163  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3164          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3165          &Com_MCU_02_Can_Network_CANNODE_0_TransModeInfo,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3166          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3167          #ifdef COM_TxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3168          /* Ipdu Callout Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3169          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3170          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3171          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3172          #ifdef COM_TxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3173          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3174  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3175          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3176          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3177  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3178          #ifdef COM_ERRORNOTIFICATION
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3179          /* Error Notification part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3180  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3181          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3182          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3183  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3184          #ifdef COM_TxIPduTimeOutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3185          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3186  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3187          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3188          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3189  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3190  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3191          #ifdef COM_METADATA_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3192          NULL_PTR,               /* Pointer to the MetaData Ipdu Buffer */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3193          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3194  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3195  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3196          8,/*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3197          #ifdef COM_TxIPduTimeOut
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3198          5,               /*Timeout Fact*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3199          #endif /* #ifdef COM_TxIPduTimeOut */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3200          0, /*MinDelay Time factor*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3201  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3202          6,                    /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3203          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3204  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3205          0,               /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3206          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3207  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3208          (PduIdType)PduRConf_PduRSrcPdu_MCU_02_Can_Network_CANNODE_0_Com2PduR,              /* PduR Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3209  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3210          (Com_TxIntSignalIdType)ComSignal_Internal_MCU02_IGBTTmp,     /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3211          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3212  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3213          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3214          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3215  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3216  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3217  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3218  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3219  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3220  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3221  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3222  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3223      Signal_Processing:1;          = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3224      TMSCalclation:2;              = TRUEMODE_VALID
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3225      NoneModeTimeOut:1;            = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3226      ClearUpdBit:2                 = CLEAR_UPDATEBIT_NOT_APPLICABLE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3227      FilterEvalReq:1               = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3228      IsDynPdu:1;                   = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3229      IsGwDestPdu:1;                = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3230      IsCalloutFrmTrigTrans:1;      = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3231      isLargeDataPdu:1;             = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3232      isCancelTransmitSupported:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3233      IsMetaDataSupported:1;        = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3234      defaultTMSStatus:1;           = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3235      ipduPartOfIpduGrp:1;          = COM_TRUE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3236      Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3237  }Com_TxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3238  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3239          0x4002,  /*Transmission Type*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3240  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3241          /* Com_MainFunctionTx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3242          ComMainFunction_Internal_MainFunctionTx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3243  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3244          0xFF               /*Padding Byte*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3245  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3246      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3247      {   /*Ipdu: MCU_03_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3248  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3249          Com_IpduBuf_MCU_03_Can_Network_CANNODE_0,              /*Pointer to the Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3250  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3251          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3252          &Com_MCU_03_Can_Network_CANNODE_0_TransModeInfo,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3253          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3254          #ifdef COM_TxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3255          /* Ipdu Callout Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3256          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3257          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3258          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3259          #ifdef COM_TxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3260          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3261  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3262          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3263          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3264  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3265          #ifdef COM_ERRORNOTIFICATION
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3266          /* Error Notification part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3267  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3268          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3269          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3270  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3271          #ifdef COM_TxIPduTimeOutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3272          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3273  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3274          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3275          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3276  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3277  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3278          #ifdef COM_METADATA_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3279          NULL_PTR,               /* Pointer to the MetaData Ipdu Buffer */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3280          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3281  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3282  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3283          7,/*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3284          #ifdef COM_TxIPduTimeOut
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3285          5,               /*Timeout Fact*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3286          #endif /* #ifdef COM_TxIPduTimeOut */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3287          0, /*MinDelay Time factor*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3288  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3289          33,                    /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3290          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3291  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3292          0,               /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3293          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3294  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3295          (PduIdType)PduRConf_PduRSrcPdu_MCU_03_Can_Network_CANNODE_0_Com2PduR,              /* PduR Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3296  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3297          (Com_TxIntSignalIdType)ComSignal_Internal_MCU03_LI_OverSpeed,     /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3298          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3299  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3300          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3301          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3302  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3303  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3304  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3305  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3306  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3307  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3308  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3309  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3310      Signal_Processing:1;          = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3311      TMSCalclation:2;              = TRUEMODE_VALID
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3312      NoneModeTimeOut:1;            = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3313      ClearUpdBit:2                 = CLEAR_UPDATEBIT_NOT_APPLICABLE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3314      FilterEvalReq:1               = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3315      IsDynPdu:1;                   = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3316      IsGwDestPdu:1;                = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3317      IsCalloutFrmTrigTrans:1;      = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3318      isLargeDataPdu:1;             = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3319      isCancelTransmitSupported:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3320      IsMetaDataSupported:1;        = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3321      defaultTMSStatus:1;           = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3322      ipduPartOfIpduGrp:1;          = COM_TRUE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3323      Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3324  }Com_TxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3325  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3326          0x4002,  /*Transmission Type*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3327  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3328          /* Com_MainFunctionTx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3329          ComMainFunction_Internal_MainFunctionTx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3330  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3331          0xFF               /*Padding Byte*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3332  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3333      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3334      {   /*Ipdu: MCU_04_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3335  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3336          Com_IpduBuf_MCU_04_Can_Network_CANNODE_0,              /*Pointer to the Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3337  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3338          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3339          Com_MCU_04_Can_Network_CANNODE_0_TransModeInfo,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3340          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3341          #ifdef COM_TxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3342          /* Ipdu Callout Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3343          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3344          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3345          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3346          #ifdef COM_TxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3347          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3348  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3349          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3350          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3351  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3352          #ifdef COM_ERRORNOTIFICATION
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3353          /* Error Notification part */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3354  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3355          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3356          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3357  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3358          #ifdef COM_TxIPduTimeOutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3359          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3360  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3361          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3362          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3363  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3364  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3365          #ifdef COM_METADATA_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3366          NULL_PTR,               /* Pointer to the MetaData Ipdu Buffer */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3367          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3368  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3369  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3370          8,/*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3371          #ifdef COM_TxIPduTimeOut
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3372          5,               /*Timeout Fact*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3373          #endif /* #ifdef COM_TxIPduTimeOut */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3374          0, /*MinDelay Time factor*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3375  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3376          1,                    /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3377          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3378  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3379          0,               /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3380          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3381  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3382          (PduIdType)PduRConf_PduRSrcPdu_MCU_04_Can_Network_CANNODE_0_Com2PduR,              /* PduR Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3383  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3384          (Com_TxIntSignalIdType)ComSignal_Internal_MCU04_Test,     /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3385          #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3386  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3387          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3388          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3389  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3390  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3391  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3392  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3393  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3394  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3395  /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3396  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3397      Signal_Processing:1;          = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3398      TMSCalclation:2;              = MODE_VALID
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3399      NoneModeTimeOut:1;            = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3400      ClearUpdBit:2                 = CLEAR_UPDATEBIT_NOT_APPLICABLE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3401      FilterEvalReq:1               = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3402      IsDynPdu:1;                   = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3403      IsGwDestPdu:1;                = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3404      IsCalloutFrmTrigTrans:1;      = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3405      isLargeDataPdu:1;             = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3406      isCancelTransmitSupported:1;  = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3407      IsMetaDataSupported:1;        = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3408      defaultTMSStatus:1;           = COM_FALSE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3409      ipduPartOfIpduGrp:1;          = COM_TRUE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3410      Not_Used:1;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3411  }Com_TxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3412  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3413          0x4000,  /*Transmission Type*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3414  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3415          /* Com_MainFunctionTx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3416          ComMainFunction_Internal_MainFunctionTx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3417  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3418          0xFF               /*Padding Byte*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3419  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3420      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3421  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3422  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3423  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3424  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3425  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3426  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3427  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3428  /* END: Tx IPDU Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3429  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3430  /* START : Time out information structure for signals with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3431  #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3432  #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3433  /* END : Time out information structure for signals with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3434  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3435  /* START : Time out information structure for signal groups with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3436  #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3437  #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3438  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3439  #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3440  #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3441  /* END : Time out information structure for signals with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3442  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3443  /* START : Time out information structure for signal groups with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3444  #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3445  #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3446  /* END : Time out information structure for signal groups with update-bits */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3447  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3448  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3449  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3450  /* START: Rx IPDU Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3451  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3452  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3453  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3454  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3455  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3456  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3457  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3458  CONST(Com_Prv_xRxIpduInfoCfg_tst ,COM_CONST) Com_Prv_xRxIpduCfg_acst[COM_NUM_RX_IPDU] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3459  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3460      {   /*Ipdu: HCU_01_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3461          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3462  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3463          Com_LocalBuf_HCU_01_Can_Network_CANNODE_0,              /*Pointer to the Local Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3464          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3465          #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3466  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3467          NULL_PTR,                       /* Pointer to timeout information structure for signals with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3468          #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3469          #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3470  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3471          NULL_PTR,                       /* Pointer to timeout information structure for signal groups with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3472          #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3473  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3474          #ifdef COM_RxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3475          /* Ipdu Callout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3476  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3477          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3478          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3479          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3480  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3481          #ifdef COM_RxIPduTimeoutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3482          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3483  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3484          &Com_RxTONotify_HCU_01_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3485          #endif /* COM_RxIPduTimeoutNotify */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3486  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3487          #ifdef COM_RxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3488          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3489  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3490          NULL_PTR,              /* Rx IPdu notification callback */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3491          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3492  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3493          8, /*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3494  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3495          #ifdef COM_RxIPduTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3496  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3497          0,        /* First time out value after IPDU group start */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3498  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3499          30,              /*CC requriment: Support Rx IPDU Timeout*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3500          #endif /* #ifdef COM_RxIPduTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3501  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3502          9,                /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3503          #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3504  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3505          0,           /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3506          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3507  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3508          (Com_RxIntSignalIdType)ComSignal_Internal_HCU01_EmergShutDown,   /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3509           #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3510  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3511          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3512          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3513  #ifdef COM_SIGNALGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3514          0,       /* Number of signals with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3515  #endif /* #ifdef COM_SIGNALGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3516  #ifdef COM_SIGNALGROUPGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3517          0,   /* Number of signal groups with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3518  #endif /* #ifdef COM_SIGNALGROUPGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3519  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3520          /* Com_MainFunctionRx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3521          ComMainFunction_Internal_MainFunctionRx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3522  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3523          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3524          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3525              Signal_Processing:1;  = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3526              Notify_Cbk:1;         = true
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3527              IsGwIPdu:1;           = false
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3528              Not_Used:5;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3529          } Com_RxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3530          */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3531          0x2                 /* Reception Type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3532  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3533  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3534      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3535      {   /*Ipdu: HCU_02_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3536          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3537  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3538          Com_LocalBuf_HCU_02_Can_Network_CANNODE_0,              /*Pointer to the Local Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3539          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3540          #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3541  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3542          NULL_PTR,                       /* Pointer to timeout information structure for signals with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3543          #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3544          #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3545  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3546          NULL_PTR,                       /* Pointer to timeout information structure for signal groups with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3547          #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3548  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3549          #ifdef COM_RxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3550          /* Ipdu Callout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3551  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3552          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3553          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3554          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3555  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3556          #ifdef COM_RxIPduTimeoutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3557          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3558  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3559          &Com_RxTONotify_HCU_02_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3560          #endif /* COM_RxIPduTimeoutNotify */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3561  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3562          #ifdef COM_RxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3563          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3564  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3565          NULL_PTR,              /* Rx IPdu notification callback */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3566          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3567  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3568          1, /*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3569  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3570          #ifdef COM_RxIPduTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3571  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3572          0,        /* First time out value after IPDU group start */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3573  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3574          30,              /*CC requriment: Support Rx IPDU Timeout*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3575          #endif /* #ifdef COM_RxIPduTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3576  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3577          1,                /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3578          #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3579  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3580          0,           /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3581          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3582  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3583          (Com_RxIntSignalIdType)ComSignal_Internal_HCU02_Poweroff,   /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3584           #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3585  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3586          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3587          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3588  #ifdef COM_SIGNALGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3589          0,       /* Number of signals with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3590  #endif /* #ifdef COM_SIGNALGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3591  #ifdef COM_SIGNALGROUPGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3592          0,   /* Number of signal groups with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3593  #endif /* #ifdef COM_SIGNALGROUPGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3594  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3595          /* Com_MainFunctionRx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3596          ComMainFunction_Internal_MainFunctionRx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3597  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3598          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3599          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3600              Signal_Processing:1;  = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3601              Notify_Cbk:1;         = true
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3602              IsGwIPdu:1;           = false
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3603              Not_Used:5;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3604          } Com_RxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3605          */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3606          0x2                 /* Reception Type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3607  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3608  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3609      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3610      {   /*Ipdu: HCU_03_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3611          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3612  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3613          Com_LocalBuf_HCU_03_Can_Network_CANNODE_0,              /*Pointer to the Local Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3614          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3615          #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3616  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3617          NULL_PTR,                       /* Pointer to timeout information structure for signals with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3618          #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3619          #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3620  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3621          NULL_PTR,                       /* Pointer to timeout information structure for signal groups with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3622          #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3623  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3624          #ifdef COM_RxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3625          /* Ipdu Callout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3626  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3627          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3628          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3629          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3630  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3631          #ifdef COM_RxIPduTimeoutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3632          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3633  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3634          &Com_RxTONotify_HCU_03_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3635          #endif /* COM_RxIPduTimeoutNotify */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3636  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3637          #ifdef COM_RxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3638          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3639  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3640          NULL_PTR,              /* Rx IPdu notification callback */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3641          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3642  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3643          1, /*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3644  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3645          #ifdef COM_RxIPduTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3646  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3647          0,        /* First time out value after IPDU group start */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3648  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3649          30,              /*CC requriment: Support Rx IPDU Timeout*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3650          #endif /* #ifdef COM_RxIPduTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3651  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3652          1,                /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3653          #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3654  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3655          0,           /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3656          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3657  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3658          (Com_RxIntSignalIdType)ComSignal_Internal_HCU03_Poweroff,   /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3659           #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3660  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3661          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3662          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3663  #ifdef COM_SIGNALGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3664          0,       /* Number of signals with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3665  #endif /* #ifdef COM_SIGNALGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3666  #ifdef COM_SIGNALGROUPGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3667          0,   /* Number of signal groups with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3668  #endif /* #ifdef COM_SIGNALGROUPGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3669  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3670          /* Com_MainFunctionRx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3671          ComMainFunction_Internal_MainFunctionRx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3672  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3673          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3674          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3675              Signal_Processing:1;  = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3676              Notify_Cbk:1;         = true
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3677              IsGwIPdu:1;           = false
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3678              Not_Used:5;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3679          } Com_RxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3680          */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3681          0x2                 /* Reception Type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3682  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3683  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3684      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3685      {   /*Ipdu: HCU_04_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3686          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3687  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3688          Com_LocalBuf_HCU_04_Can_Network_CANNODE_0,              /*Pointer to the Local Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3689          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3690          #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3691  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3692          NULL_PTR,                       /* Pointer to timeout information structure for signals with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3693          #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3694          #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3695  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3696          NULL_PTR,                       /* Pointer to timeout information structure for signal groups with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3697          #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3698  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3699          #ifdef COM_RxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3700          /* Ipdu Callout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3701  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3702          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3703          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3704          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3705  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3706          #ifdef COM_RxIPduTimeoutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3707          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3708  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3709          &Com_RxTONotify_HCU_04_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3710          #endif /* COM_RxIPduTimeoutNotify */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3711  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3712          #ifdef COM_RxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3713          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3714  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3715          NULL_PTR,              /* Rx IPdu notification callback */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3716          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3717  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3718          1, /*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3719  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3720          #ifdef COM_RxIPduTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3721  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3722          0,        /* First time out value after IPDU group start */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3723  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3724          30,              /*CC requriment: Support Rx IPDU Timeout*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3725          #endif /* #ifdef COM_RxIPduTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3726  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3727          1,                /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3728          #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3729  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3730          0,           /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3731          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3732  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3733          (Com_RxIntSignalIdType)ComSignal_Internal_HCU04_Poweroff,   /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3734           #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3735  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3736          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3737          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3738  #ifdef COM_SIGNALGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3739          0,       /* Number of signals with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3740  #endif /* #ifdef COM_SIGNALGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3741  #ifdef COM_SIGNALGROUPGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3742          0,   /* Number of signal groups with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3743  #endif /* #ifdef COM_SIGNALGROUPGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3744  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3745          /* Com_MainFunctionRx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3746          ComMainFunction_Internal_MainFunctionRx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3747  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3748          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3749          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3750              Signal_Processing:1;  = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3751              Notify_Cbk:1;         = true
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3752              IsGwIPdu:1;           = false
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3753              Not_Used:5;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3754          } Com_RxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3755          */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3756          0x2                 /* Reception Type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3757  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3758  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3759      },
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3760      {   /*Ipdu: HCU_05_Can_Network_CANNODE_0*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3761          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3762  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3763          Com_LocalBuf_HCU_05_Can_Network_CANNODE_0,              /*Pointer to the Local Ipdu Buffer*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3764          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3765          #ifdef COM_RxSigUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3766  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3767          NULL_PTR,                       /* Pointer to timeout information structure for signals with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3768          #endif /* #ifdef COM_RxSigUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3769          #ifdef COM_RxSigGrpUpdateTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3770  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3771          NULL_PTR,                       /* Pointer to timeout information structure for signal groups with update-bits, within the IPdu */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3772          #endif /* #ifdef COM_RxSigGrpUpdateTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3773  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3774          #ifdef COM_RxIPduCallOuts
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3775          /* Ipdu Callout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3776  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3777          NULL_PTR,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3778          
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3779          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3780  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3781          #ifdef COM_RxIPduTimeoutNotify
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3782          /* Timeout Notification part*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3783  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3784          &Com_RxTONotify_HCU_05_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3785          #endif /* COM_RxIPduTimeoutNotify */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3786  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3787          #ifdef COM_RxIPduNotification
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3788          /* Ipdu Notification Function*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3789  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3790          NULL_PTR,              /* Rx IPdu notification callback */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3791          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3792  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3793          1, /*Size in Bytes*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3794  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3795          #ifdef COM_RxIPduTimeout
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3796  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3797          0,        /* First time out value after IPDU group start */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3798  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3799          30,              /*CC requriment: Support Rx IPDU Timeout*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3800          #endif /* #ifdef COM_RxIPduTimeout */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3801  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3802          1,                /*No Of Signals present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3803          #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3804  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3805          0,           /*No of Signal Groups present in the IPDU*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3806          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3807  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3808          (Com_RxIntSignalIdType)ComSignal_Internal_HCU05_Poweroff,   /*Index to First Signal within this Ipdu*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3809           #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3810  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3811          0,                            /*This IPDU does not contain any Signal Groups*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3812          #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3813  #ifdef COM_SIGNALGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3814          0,       /* Number of signals with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3815  #endif /* #ifdef COM_SIGNALGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3816  #ifdef COM_SIGNALGROUPGATEWAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3817          0,   /* Number of signal groups with gateway */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3818  #endif /* #ifdef COM_SIGNALGROUPGATEWAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3819  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3820          /* Com_MainFunctionRx() */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3821          ComMainFunction_Internal_MainFunctionRx,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3822  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3823          /*
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3824          {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3825              Signal_Processing:1;  = IMMEDIATE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3826              Notify_Cbk:1;         = true
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3827              IsGwIPdu:1;           = false
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3828              Not_Used:5;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3829          } Com_RxIpduFlagType;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3830          */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3831          0x2                 /* Reception Type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3832  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3833  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3834      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3835  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3836  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3837  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3838  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3839  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3840  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3841  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3842  /* END: Rx IPDU Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3843  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3844  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3845  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3846  /* START: IPDU Group Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3847  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3848  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3849  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3850  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3851  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3852  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3853  CONST(Com_Prv_xIpduGrpInfoCfg_tst ,COM_CONST) Com_Prv_xIpduGrpCfg_acst[2] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3854  {           /* "Index of First IPdu"               "No of Rx-Ipdus" */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3855  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3856      /* ComIPduGroup_Rx */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3857      
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3858      0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3859      
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3860      5
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3861  }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3862  ,{
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3863      /* ComIPduGroup_Tx */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3864      
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3865      5,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3866      
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3867      0
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3868  }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3869  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3870  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3871  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3872  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3873  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3874  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3875  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3876  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3877  /* END: IPDU Group Details  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3878  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3879     
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3880  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3881  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3882  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3883  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3884  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3885  /* Reference to Ipdus belonging to the Ipdu Groups */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3886  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3887  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3888  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3889  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3890  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3891  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3892  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3893  CONST(Com_IpduIdType ,COM_CONST) Com_Prv_xIPduGrp_IpduRefCfg_au8[9] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3894  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3895  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3896      /* ComIPduGroup_Rx */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3897  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3898      ComConf_ComIPdu_Internal_HCU_01_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3899      ComConf_ComIPdu_Internal_HCU_02_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3900      ComConf_ComIPdu_Internal_HCU_03_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3901      ComConf_ComIPdu_Internal_HCU_04_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3902      ComConf_ComIPdu_Internal_HCU_05_Can_Network_CANNODE_0,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3903      /* ComIPduGroup_Tx */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3904  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3905      (COM_NUM_RX_IPDU + (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_02_Can_Network_CANNODE_0),
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3906      (COM_NUM_RX_IPDU + (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_01_Can_Network_CANNODE_0),
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3907      (COM_NUM_RX_IPDU + (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_03_Can_Network_CANNODE_0),
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3908      (COM_NUM_RX_IPDU + (Com_IpduIdType)ComConf_ComIPdu_Internal_MCU_04_Can_Network_CANNODE_0)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3909  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3910  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3911  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3912  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3913  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3914  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3915  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3916  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3917  #if defined ( COM_TX_SIGNALGROUP_ARRAY )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3918  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3919  /* Tx-SignalGroup Array are not configured */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3920  # define Com_Prv_xTxSigGrpArrayCfg_acst      ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3921  #endif /* #if defined ( COM_TX_SIGNALGROUP_ARRAY ) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3922  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3923  #if defined ( COM_RX_SIGNALGROUP_ARRAY )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3924  /* Rx-SignalGroup Array are not configured */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3925  # define Com_Prv_xRxSigGrpArrayCfg_acst      ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3926  #endif /* #if defined ( COM_RX_SIGNALGROUP_ARRAY ) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3927  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3928  /* Start section for RAM variables */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3929  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3930  /* START: I-PDU Buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3931  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3932     /* Tx Ipdu buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3933  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3934  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3935  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3936  /* Begin section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3937  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3938  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3939  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3940  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3941      VAR(uint8,COM_VAR) Com_IpduBuf_MCU_01_Can_Network_CANNODE_0[8];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3942  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3943      VAR(uint8,COM_VAR) Com_IpduBuf_MCU_02_Can_Network_CANNODE_0[8];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3944  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3945      VAR(uint8,COM_VAR) Com_IpduBuf_MCU_03_Can_Network_CANNODE_0[7];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3946  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3947      VAR(uint8,COM_VAR) Com_IpduBuf_MCU_04_Can_Network_CANNODE_0[8];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3948  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3949  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3950  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3951  /* End section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3952  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3953  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3954  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3955  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3956  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3957      /* Rx-Ipdu Local Buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3958  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3959  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3960  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3961  /* Begin section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3962  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3963  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3964  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3965  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3966      VAR(uint8,COM_VAR) Com_LocalBuf_HCU_01_Can_Network_CANNODE_0[8];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3967  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3968      VAR(uint8,COM_VAR) Com_LocalBuf_HCU_02_Can_Network_CANNODE_0[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3969  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3970      VAR(uint8,COM_VAR) Com_LocalBuf_HCU_03_Can_Network_CANNODE_0[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3971  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3972      VAR(uint8,COM_VAR) Com_LocalBuf_HCU_04_Can_Network_CANNODE_0[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3973  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3974      VAR(uint8,COM_VAR) Com_LocalBuf_HCU_05_Can_Network_CANNODE_0[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3975  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3976  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3977  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3978  /* End section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3979  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3980  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3981  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3982  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3983  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3984  /* END: I-PDU Buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3985  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3986  #ifdef COM_F_MASKEDNEWDIFFERSOLD
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3987  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3988  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3989  /* Begin section for RAM variables of uint32 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3990  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3991  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3992  VAR(uint32,COM_VAR) Com_F_OldVal[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3993  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3994  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3995  /* End section for RAM variables of uint32 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3996  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3997  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3998  #endif /* #ifdef COM_F_MASKEDNEWDIFFERSOLD */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  3999  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4000  #if defined(COM_EffectiveSigTOC) || defined(COM_EffectiveSigGrpTOC)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4001  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4002  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4003  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4004  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4005  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4006  VAR(Com_OldValTrigOnChngType,COM_VAR) Com_OldValTrigOnChng[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4007  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4008  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4009  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4010  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4011  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4012  #endif /* #if defined(COM_EffectiveSigTOC) || defined(COM_EffectiveSigGrpTOC) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4013  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4014  #ifdef COM_F_ONEEVERYN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4015  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4016  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4017  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4018  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4019  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4020  CONST(Com_OneEveryNType,COM_CONST) Com_OneEveryN_Const[1] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4021  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4022      /* Period   Offset  Occurence*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4023  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4024  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4025  {    1,    5, 1    }    /*  DummyForMisra    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4026  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4027  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4028  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4029  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4030  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4031  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4032  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4033  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4034  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4035  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4036  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4037  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4038  VAR(Com_OneEveryNType,COM_VAR) Com_OneEveryN[1];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4039  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4040  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4041  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4042  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4043  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4044  #endif /* #ifdef COM_F_ONEEVERYN */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4045  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4046  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4047  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4048  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4049  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4050  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4051  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4052  #ifdef COM_TP_IPDUTYPE
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4053  VAR(PduLengthType,COM_VAR)          Com_TpTxIpduLength_auo[COM_NUM_TX_IPDU];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4054  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4055  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4056  VAR(Com_TxIpduRamData,COM_VAR)      Com_TxIpduRam_s[COM_NUM_TX_IPDU];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4057  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4058  VAR(Com_RxIpduRamData,COM_VAR)      Com_RxIpduRam_s[COM_NUM_RX_IPDU];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4059  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4060  VAR(Com_TxSignalFlagType,COM_VAR)   Com_TxSignalFlag[COM_NUM_TX_SIGNALS];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4061  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4062  VAR(Com_RxSignalFlagType,COM_VAR)   Com_RxSignalFlag[COM_NUM_RX_SIGNALS];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4063  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4064  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4065  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4066  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4067  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4068  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4069  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4070  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4071  /* Begin section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4072  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4073  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4074  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4075  VAR(uint8,COM_VAR)    Com_IpduCounter_s[COM_NUM_TX_IPDU + COM_NUM_RX_IPDU];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4076  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4077  VAR(uint8,COM_VAR)    Com_IpduCounter_DM[COM_NUM_RX_IPDU];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4078  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4079  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4080  /* End section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4081  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4082  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4083  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4084  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4085  #if defined (COM_SIGNALGATEWAY) || defined (COM_SIGNALGROUPGATEWAY)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4086  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4087  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4088  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4089  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4090  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4091  VAR(PduIdType,COM_VAR)    Com_RxGwQueue_aux[COM_NUM_GWSRC_IPDUS+1u];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4092  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4093  VAR(Com_RxGwQueueRAMType,COM_VAR)   Com_RxGwQueue_S;
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4094  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4095  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4096  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4097  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4098  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4099  #endif /* #if defined (COM_SIGNALGATEWAY) || defined (COM_SIGNALGROUPGATEWAY) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4100  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4101  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4102  #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4103  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4104  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4105  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4106  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4107  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4108  VAR(Com_RxSignalGrpFlagType,COM_VAR) Com_RxSignalGrpFlag[1u];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4109  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4110  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4111  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4112  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4113  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4114  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4115  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4116  #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4117  #if defined(COM_EffectiveSigGrpTOC) || defined(COM_SIGNALGROUPGATEWAY)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4118  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4119  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4120  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4121  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4122  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4123  VAR(Com_TxSignalGrpFlagType,COM_VAR) Com_TxSignalGrpFlag[1u];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4124  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4125  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4126  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4127  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4128  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4129  #endif /* #if defined(COM_EffectiveSigGrpTOC) || defined(COM_SIGNALGROUPGATEWAY) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4130  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4131  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4132  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4133  /* Begin section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4134  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4135  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4136  VAR(Com_TxGrpSignalFlagType,COM_VAR) Com_TxGrpSignalFlag[1u];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4137  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4138  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4139  /* End section for RAM variables of struct/enum/pointer type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4140  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4141  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4142  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4143  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4144  #ifdef COM_RxIPduDeferredProcessing
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4145  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4146  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4147  /* Begin section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4148  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4149  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4150  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4151      /* Buffer to hold data for deferred signal processing */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4152      VAR(uint8,COM_VAR) Com_DeferredBuffer[ 8 ];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4153  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4154  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4155  /* End section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4156  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4157  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4158  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4159  #endif /* #ifdef COM_RxIPduDeferredProcessing */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4160  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4161  #if defined (COM_SIGNALGATEWAY) || defined (COM_SIGNALGROUPGATEWAY)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4162  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4163  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4164  /* Begin section for RAM variables of boolean type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4165  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4166  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4167  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4168      VAR(boolean, AUTOMATIC) Com_IsGwSignalsUpdated_ab[ COM_NUM_GWSRC_IPDUS ];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4169  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4170  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4171  /* End section for RAM variables of boolean type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4172  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_BOOLEAN
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4173  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4174  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4175  #endif /* #if defined (COM_SIGNALGATEWAY) || defined (COM_SIGNALGROUPGATEWAY) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4176  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4177  /* End section for RAM variables */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4178  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4179  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4180  #if defined (COM_F_MASKEDNEWEQUALSX ) || defined(COM_F_MASKEDNEWDIFFERSX)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4181  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4182  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4183  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4184  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4185  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4186  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4187  CONST(Com_MaskXType ,COM_CONST) Com_MaskX[1] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4188  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4189      /*Mask       X*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4190  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4191  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4192  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4193  {    1,    5    }    /*  DummyForMisra    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4194  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4195  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4196  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4197  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4198  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4199  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4200  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4201  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4202  #endif /* #if defined (COM_F_MASKEDNEWEQUALSX ) || defined(COM_F_MASKEDNEWDIFFERSX) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4203  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4204  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4205  #ifdef COM_F_MASKEDNEWDIFFERSOLD
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4206  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4207  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4208  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4209  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4210  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4211  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4212  CONST(uint32 ,COM_CONST) Com_Mask[1] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4213  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4214      /*Mask*/
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4215      1    /* DummyForMisra */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4216  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4217  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4218  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4219  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4220  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4221  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4222  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4223  #endif /* #ifdef COM_F_MASKEDNEWDIFFERSOLD */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4224  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4225  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4226  #if defined (COM_F_NEWISWITHIN_POS) || defined(COM_F_NEWISOUTSIDE_POS)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4227  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4228  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4229  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4230  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4231  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4232  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4233  CONST(Com_POSMinMaxType ,COM_CONST) Com_POSMinMax[1]=
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4234  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4235      /*  Min      Max */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4236  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4237  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4238  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4239  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4240  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4241  {    1,    5    }    /*  DummyForMisra    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4242  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4243  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4244  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4245  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4246  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4247  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4248  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4249  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4250  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4251  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4252  #endif /* #if defined (COM_F_NEWISWITHIN_POS) || defined(COM_F_NEWISOUTSIDE_POS) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4253  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4254  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4255  #if defined (COM_F_NEWISWITHIN_NEG) || defined(COM_F_NEWISOUTSIDE_NEG)
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4256  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4257  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4258  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4259  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4260  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4261  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4262  CONST(Com_NEGMinMaxType ,COM_CONST) Com_NEGMinMax[1] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4263  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4264      /*  Min      Max */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4265  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4266  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4267  {    1,    5    }    /*  DummyForMisra    */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4268  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4269  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4270  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4271  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4272  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4273  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4274  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4275  #endif /* #if defined (COM_F_NEWISWITHIN_NEG) || defined(COM_F_NEWISOUTSIDE_NEG) */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4276  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4277  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4278  /* Signal Buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4279  /* Type: UINT8, SINT8, UINT8_N, BOOLEAN */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4280  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4281  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4282  /* Begin section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4283  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4284  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4285  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4286  VAR(uint8,COM_VAR) Com_SigType_u8[11];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4287  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4288  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4289  /* End section for RAM variables of uint8 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4290  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4291  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4292  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4293  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4294  /* Type: UINT16, SINT16 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4295  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4296  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4297  /* Begin section for RAM variables of uint16 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4298  #define COM_START_SEC_VAR_CLEARED_POSTBUILD_16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4299  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4300  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4301  VAR(uint16,COM_VAR) Com_SigType_u16[2];
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4302  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4303  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4304  /* End section for RAM variables of uint16 type */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4305  #define COM_STOP_SEC_VAR_CLEARED_POSTBUILD_16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4306  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4307  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4308  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4309  /* Type: UINT32, SINT32 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4310  #define Com_SigType_u32          ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4311  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4312  /* Type: UINT64, SINT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4313  #ifdef COM_RXSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4314  #define Com_SigType_u64          ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4315  #endif /* #ifdef COM_RXSIG_INT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4316  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4317  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4318  #ifdef COM_RXSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4319  #define Com_SigType_f64          ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4320  #endif /* #ifdef COM_RXSIG_FLOAT64SUPP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4321  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4322  #ifdef COM_RX_DYNAMIC_SIGNAL_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4323  #define Com_SigType_dyn          ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4324  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4325  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4326  #ifdef COM_RX_SIGNALGROUP_ARRAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4327  #define Com_RxSigGrpArrayBuf_u8  ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4328  #endif /* #ifdef COM_RX_SIGNALGROUP_ARRAY */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4329  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4330  #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4331  /* Rx Group Signal Buffers */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4332  /* Type: UINT8, SINT8, UINT8_N, BOOLEAN */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4333  #define Com_RxGrpSigType_u8      ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4334  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4335  /* Type: UINT16, SINT16 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4336  #define Com_RxGrpSigType_u16     ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4337  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4338  /* Type: UINT32, SINT32 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4339  #define Com_RxGrpSigType_u32     ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4340  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4341  /* Type: UINT64, SINT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4342  #ifdef COM_RXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4343  #define Com_RxGrpSigType_u64     ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4344  #endif /* #ifdef COM_RXGRPSIG_INT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4345  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4346  #ifdef COM_RXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4347  #define Com_RxGrpSigType_f64     ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4348  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4349  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4350  /* The function Com_ReceiveSignalGroup() is not interrupt safe, hence there is need to
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4351   * to generate second buffer for all the group signals
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4352   */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4353  /* Type: UINT8, SINT8, UINT8_N, BOOLEAN */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4354  #define Com_SecondRxGrpSigType_u8        ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4355  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4356  /* Type: UINT16, SINT16 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4357  #define Com_SecondRxGrpSigType_u16       ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4358  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4359  /* Type: UINT32, SINT32 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4360  #define Com_SecondRxGrpSigType_u32       ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4361  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4362  /* Type: UINT64, SINT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4363  #ifdef COM_RXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4364  #define Com_SecondRxGrpSigType_u64       ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4365  #endif /* #ifdef COM_RXGRPSIG_INT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4366  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4367  #ifdef COM_RXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4368  #define Com_SecondRxGrpSigType_f64       ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4369  #endif /* #ifdef COM_RXGRPSIG_FLOAT64SUPP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4370  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4371  #endif /* #ifdef COM_RX_SIGNALGROUP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4372  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4373  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4374  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4375  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4376  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4377  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4378  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4379  CONST(Com_Prv_xRxRamBuf_tst, COM_CONST) Com_Prv_xRxRamBuf_acst[ 1u ] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4380  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4381      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4382          (P2VAR(uint8, TYPEDEF, COM_APPL_DATA))              Com_SigType_u8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4383  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4384  #ifdef COM_RX_DYNAMIC_SIGNAL_SUPPORT
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4385          ,(P2VAR(uint8, TYPEDEF, COM_APPL_DATA))             Com_SigType_dyn
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4386  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4387  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4388          ,(P2VAR(uint16, TYPEDEF, COM_APPL_DATA))            Com_SigType_u16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4389  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4390          ,(P2VAR(uint32, TYPEDEF, COM_APPL_DATA))            Com_SigType_u32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4391  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4392  #ifdef COM_RXSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4393          ,(P2VAR(uint64, TYPEDEF, COM_APPL_DATA))            Com_SigType_u64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4394  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4395  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4396  #ifdef COM_RXSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4397          ,(P2VAR(float64, TYPEDEF, COM_APPL_DATA))           Com_SigType_f64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4398  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4399  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4400  #ifdef COM_RX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4401          ,(P2VAR(uint8, TYPEDEF, COM_APPL_DATA))             Com_RxGrpSigType_u8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4402  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4403          ,(P2VAR(uint16, TYPEDEF, COM_APPL_DATA))            Com_RxGrpSigType_u16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4404  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4405          ,(P2VAR(uint32, TYPEDEF, COM_APPL_DATA))            Com_RxGrpSigType_u32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4406  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4407  #ifdef COM_RXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4408          ,(P2VAR(uint64, TYPEDEF, COM_APPL_DATA))            Com_RxGrpSigType_u64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4409  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4410  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4411  #ifdef COM_RXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4412          ,(P2VAR(float64, TYPEDEF, COM_APPL_DATA))           Com_RxGrpSigType_f64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4413  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4414  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4415          ,(P2VAR(uint8, TYPEDEF, COM_APPL_DATA))             Com_SecondRxGrpSigType_u8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4416  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4417          ,(P2VAR(uint16, TYPEDEF, COM_APPL_DATA))            Com_SecondRxGrpSigType_u16
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4418  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4419          ,(P2VAR(uint32, TYPEDEF, COM_APPL_DATA))            Com_SecondRxGrpSigType_u32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4420  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4421  #ifdef COM_RXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4422          ,(P2VAR(uint64, TYPEDEF, COM_APPL_DATA))            Com_SecondRxGrpSigType_u64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4423  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4424  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4425  #ifdef COM_RXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4426          ,(P2VAR(float64, TYPEDEF, COM_APPL_DATA))           Com_SecondRxGrpSigType_f64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4427  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4428  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4429  #ifdef COM_RX_SIGNALGROUP_ARRAY
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4430          ,(P2VAR(uint8, TYPEDEF, COM_APPL_DATA))             Com_RxSigGrpArrayBuf_u8
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4431  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4432  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4433  #endif /* #ifdef COM_RX_SIGNALGROUP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4434  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4435  #ifdef COM_RxIPduDeferredProcessing
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4436          ,(P2VAR(uint8, TYPEDEF, COM_APPL_DATA))             Com_DeferredBuffer
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4437  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4438      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4439  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4440  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4441  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4442  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4443  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4444  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4445  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4446  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4447  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4448  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4449  #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4450  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4451  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4452  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4453  /* Tx Group Signal Buffers  */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4454  /* Type: UINT8, SINT8, UINT8_N, BOOLEAN */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4455  #define Com_TxGrpSigType_u8          ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4456  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4457  /* Type: UINT16, SINT16 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4458  #define Com_TxGrpSigType_u16         ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4459  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4460  /* Type: UINT32, SINT32 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4461  #define Com_TxGrpSigType_u32         ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4462  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4463  /* Type: UINT64, SINT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4464  #ifdef COM_TXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4465  #define Com_TxGrpSigType_u64         ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4466  #endif /* #ifdef COM_TXGRPSIG_INT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4467  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4468  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4469  #ifdef COM_TXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4470  /* Type: FLOAT64 */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4471  #define Com_TxGrpSigType_f64         ( NULL_PTR )
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4472  #endif /* #ifdef COM_TXGRPSIG_FLOAT64SUPP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4473  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4474  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4475  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4476  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4477  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4478  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4479  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4480  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4481  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4482  CONST(Com_Prv_xTxSigGrpRamBuf_tst, COM_CONST) Com_Prv_xTxSigGrpRamBuf_acst[ 1u ] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4483  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4484      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4485          (P2VAR(uint8, TYPEDEF, COM_APPL_DATA))              Com_TxGrpSigType_u8,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4486  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4487          (P2VAR(uint16, TYPEDEF, COM_APPL_DATA))             Com_TxGrpSigType_u16,
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4488  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4489          (P2VAR(uint32, TYPEDEF, COM_APPL_DATA))             Com_TxGrpSigType_u32
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4490  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4491  #ifdef COM_TXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4492          ,(P2VAR(uint64, TYPEDEF, COM_APPL_DATA))            Com_TxGrpSigType_u64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4493  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4494  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4495  #ifdef COM_TXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4496          ,(P2VAR(float64, TYPEDEF, COM_APPL_DATA))           Com_TxGrpSigType_f64
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4497  #endif
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4498  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4499      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4500  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4501  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4502  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4503  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4504  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4505  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4506  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4507  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4508  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4509  #endif/* #ifdef COM_TX_SIGNALGROUP */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4510  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4511  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4512  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4513  /* Begin section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4514  #define COM_START_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4515  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4516  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4517  CONST(Com_MainFunctionCfgType, COM_CONST) Com_MainFunctionCfg[ COM_NUM_OF_MAINFUNCTION ] =
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4518  {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4519      {
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4520          /* Com_MainFunctionRx() - cylce time Rx: 0.01 s */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4521          0u,  /* Start RxIPdu-Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4522          5u,  /* Num of RxIpdus */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4523          10u /* TimeBase in ms */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4524      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4525      ,{
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4526          /* Com_MainFunctionTx() - cylce time Tx: 0.01 s */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4527          0u,  /* Start TxIPdu-Id */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4528          4u,  /* Num of TxIpdus */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4529          10u /* TimeBase in ms */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4530      }
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4531  };
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4532  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4533  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4534  /* End section for constants */
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4535  #define COM_STOP_SEC_CONFIG_DATA_POSTBUILD_UNSPECIFIED
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4536  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4537  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4538  
; BSW\src\BSW\Gen\Com\Com_PBcfg.c	  4539  

	; Module end
