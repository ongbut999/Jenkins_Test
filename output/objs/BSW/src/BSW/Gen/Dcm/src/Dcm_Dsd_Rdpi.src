	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15064a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dcm_Dsd_Rdpi.src BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd_Rdpi.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd_Rdpi.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	16193
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd_Rdpi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	142
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	159
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	159
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	142
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	142
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	142
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	159
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	142
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	142
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	472
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	494
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	494
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	142
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	472
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	472
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	494
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	142
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	142
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	811
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	827
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	827
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	142
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	811
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	811
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	142
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	827
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	142
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	142
	.byte	6,0,8
	.word	164
	.byte	9
	.word	194
	.byte	9
	.word	209
	.byte	6,0,8
	.word	232
	.byte	9
	.word	264
	.byte	9
	.word	279
	.byte	6,0,8
	.word	302
	.byte	9
	.word	342
	.byte	9
	.word	356
	.byte	6,0,8
	.word	379
	.byte	9
	.word	412
	.byte	9
	.word	426
	.byte	9
	.word	447
	.byte	6,0,8
	.word	499
	.byte	9
	.word	530
	.byte	9
	.word	545
	.byte	6,0,8
	.word	568
	.byte	9
	.word	601
	.byte	9
	.word	616
	.byte	6,0,8
	.word	639
	.byte	9
	.word	680
	.byte	9
	.word	694
	.byte	6,0,8
	.word	717
	.byte	9
	.word	751
	.byte	9
	.word	765
	.byte	9
	.word	786
	.byte	6,0,8
	.word	832
	.byte	9
	.word	863
	.byte	9
	.word	878
	.byte	6,0,8
	.word	901
	.byte	9
	.word	934
	.byte	9
	.word	949
	.byte	6,0,8
	.word	972
	.byte	9
	.word	1013
	.byte	9
	.word	1027
	.byte	6,0,8
	.word	1050
	.byte	9
	.word	1084
	.byte	9
	.word	1098
	.byte	9
	.word	1119
	.byte	6,0,10,1,3
	.word	1363
	.byte	11
	.byte	'__codeptr',0,4,1,1
	.word	1365
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,5,76,25
	.word	1388
	.byte	11
	.byte	'uint8',0,5,81,25
	.word	142
	.byte	11
	.byte	'uint16',0,5,91,25
	.word	472
	.byte	11
	.byte	'uint32',0,5,106,24
	.word	811
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,5,111,30
	.word	1454
	.byte	11
	.byte	'boolean',0,5,127,25
	.word	142
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint16_least',0,5,147,1,25
	.word	1511
	.byte	11
	.byte	'StatusType',0,6,191,1,27
	.word	142
	.byte	11
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	142
	.byte	12,6,206,1,9,8,13
	.byte	'vendorID',0
	.word	472
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	472
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	142
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	142
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	142
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	1598
	.byte	11
	.byte	'PduIdType',0,7,22,19
	.word	472
	.byte	11
	.byte	'PduLengthType',0,7,26,19
	.word	472
	.byte	12,8,71,9,8,13
	.byte	'SduDataPtr',0
	.word	159
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	472
	.byte	2,2,35,4,0,11
	.byte	'PduInfoType',0,8,75,3
	.word	1788
	.byte	14,8,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,8,118,3
	.word	1853
	.byte	11
	.byte	'NetworkHandleType',0,8,128,1,17
	.word	142
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	811
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	472
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	142
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	811
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	2000
	.byte	16,68
	.word	811
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	2080
	.byte	68,2,35,0,0,16,68
	.word	2089
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	2111
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	811
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	811
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2171
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2171
	.byte	18,1,1,3
	.word	2256
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2259
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	142
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2322
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	811
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	472
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	811
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	811
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	811
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	827
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	472
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	472
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2629
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2722
	.byte	20
	.byte	'void',0,3
	.word	2834
	.byte	21,1,1,22
	.word	142
	.byte	22
	.word	2840
	.byte	0,3
	.word	2845
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2859
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	811
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	811
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2171
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2171
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2171
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2171
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2894
	.byte	3
	.word	2894
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	3092
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	142
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	811
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2894
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3171
	.byte	3
	.word	3171
	.byte	23
	.word	3232
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2264
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3237
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	811
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2171
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	142
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3242
	.byte	3
	.word	2256
	.byte	23
	.word	3242
	.byte	3
	.word	3401
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3406
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	811
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	811
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	811
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	811
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	811
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3514
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	811
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	811
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	811
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3578
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	142
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	2120
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2894
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	142
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3676
	.byte	16,68
	.word	2089
	.byte	17,0,0,3
	.word	3676
	.byte	23
	.word	3802
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3807
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2264
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3514
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3578
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3578
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	472
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	811
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2171
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	142
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	142
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3812
	.byte	23
	.word	3812
	.byte	3
	.word	4062
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	4067
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	4090
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3578
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4177
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4200
	.byte	3
	.word	4200
	.byte	23
	.word	4280
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4285
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3578
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4290
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	811
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4389
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	142
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	811
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4484
	.byte	26
	.word	142
	.byte	1,1,3
	.word	4570
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4577
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	811
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4613
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4641
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4660
	.byte	3
	.word	4660
	.byte	23
	.word	4738
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4743
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4582
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4389
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2840
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	142
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4748
	.byte	3
	.word	4570
	.byte	23
	.word	4748
	.byte	3
	.word	4900
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4905
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4931
	.byte	23
	.word	.L6-.L3
	.byte	3
	.word	5131
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5136
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5141
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4931
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	472
	.byte	2,2,35,12,0,3
	.word	5168
	.byte	23
	.word	5261
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5266
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4910
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	142
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	472
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	142
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	142
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	142
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5271
	.byte	23
	.word	5271
	.byte	3
	.word	5451
	.byte	23
	.word	4748
	.byte	3
	.word	5461
	.byte	27
	.word	2564
	.byte	27
	.word	3514
	.byte	27
	.word	3411
	.byte	27
	.word	4072
	.byte	27
	.word	3578
	.byte	27
	.word	142
	.byte	27
	.word	4072
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	2000
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5471
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5476
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5481
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5486
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5491
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	3097
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2894
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	142
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5496
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2171
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	142
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5501
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2171
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	142
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	142
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	142
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5506
	.byte	3
	.word	811
	.byte	23
	.word	3242
	.byte	3
	.word	5962
	.byte	23
	.word	3812
	.byte	3
	.word	5972
	.byte	3
	.word	2894
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	811
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	811
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	811
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	811
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	2120
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	142
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5987
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	811
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	142
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	811
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6264
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	142
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	142
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6400
	.byte	16,4
	.word	142
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6540
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6549
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	472
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6650
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	472
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6725
	.byte	23
	.word	6725
	.byte	3
	.word	6890
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6895
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6900
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6540
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	7000
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	142
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	142
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2840
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2840
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	472
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	142
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7146
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7233
	.byte	3
	.word	7146
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7331
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	142
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	472
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	472
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2840
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2840
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7233
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7336
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	811
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	472
	.byte	16,128,8
	.word	142
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7574
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	811
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	472
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	142
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	142
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	142
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	142
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7765
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	142
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	142
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	142
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	142
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	142
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	472
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	142
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	472
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	142
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	8106
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	472
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	142
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	811
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	472
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	142
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	142
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	472
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	142
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	142
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	142
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	142
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	142
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	142
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	142
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	142
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	142
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	142
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	142
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	142
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8338
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	472
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	472
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	142
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	142
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	142
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	142
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	142
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8842
	.byte	11
	.byte	'Dcm_ConfirmationStatusType',0,13,243,1,15
	.word	142
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	142
	.byte	11
	.byte	'Dcm_NegativeResponseCodeType',0,13,132,2,15
	.word	142
	.byte	11
	.byte	'Dcm_OpStatusType',0,13,134,2,15
	.word	142
	.byte	11
	.byte	'Dcm_ProtocolType',0,13,136,2,15
	.word	142
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	142
	.byte	11
	.byte	'Dcm_SecLevelType',0,13,142,2,15
	.word	142
	.byte	11
	.byte	'Dcm_SesCtrlType',0,13,144,2,15
	.word	142
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	142
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	142
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	142
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7585
	.byte	16,128,8
	.word	142
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7585
	.byte	11
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,14,37,15
	.word	142
	.byte	11
	.byte	'Dcm_MsgItemType',0,15,182,2,15
	.word	142
	.byte	3
	.word	142
	.byte	11
	.byte	'Dcm_MsgType',0,15,188,2,57
	.word	9911
	.byte	11
	.byte	'Dcm_MsgLenType',0,15,197,2,16
	.word	811
	.byte	12,15,206,2,9,4,13
	.byte	'reqType',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'suppressPosResponse',0
	.word	142
	.byte	1,2,35,1,13
	.byte	'sourceofRequest',0
	.word	142
	.byte	1,2,35,2,0,11
	.byte	'Dcm_MsgAddInfoType',0,15,219,2,2
	.word	9961
	.byte	11
	.byte	'Dcm_IdContextType',0,15,225,2,15
	.word	142
	.byte	12,15,238,5,9,32,13
	.byte	'tx_buffer_pa',0
	.word	9916
	.byte	4,2,35,0,13
	.byte	'rx_mainBuffer_pa',0
	.word	9916
	.byte	4,2,35,4,13
	.byte	'tx_buffer_size_u32',0
	.word	811
	.byte	4,2,35,8,13
	.byte	'rx_buffer_size_u32',0
	.word	811
	.byte	4,2,35,12,13
	.byte	'dataP2TmrAdjust',0
	.word	811
	.byte	4,2,35,16,13
	.byte	'dataP2StarTmrAdjust',0
	.word	811
	.byte	4,2,35,20,13
	.byte	'protocolid_u8',0
	.word	142
	.byte	1,2,35,24,13
	.byte	'sid_tableid_u8',0
	.word	142
	.byte	1,2,35,25,13
	.byte	'premption_level_u8',0
	.word	142
	.byte	1,2,35,26,13
	.byte	'pduinfo_idx_u8',0
	.word	142
	.byte	1,2,35,27,13
	.byte	'nrc21_b',0
	.word	142
	.byte	1,2,35,28,13
	.byte	'sendRespPendTransToBoot',0
	.word	142
	.byte	1,2,35,29,0,11
	.byte	'Dcm_Dsld_protocol_tableType',0,15,143,6,2
	.word	10094
	.byte	3
	.word	142
	.byte	21,1,1,22
	.word	142
	.byte	22
	.word	472
	.byte	22
	.word	472
	.byte	22
	.word	142
	.byte	0,3
	.word	10450
	.byte	11
	.byte	'Dcm_ConfirmationApiType',0,15,145,6,16
	.word	10474
	.byte	3
	.word	142
	.byte	28
	.word	142
	.byte	1,1,22
	.word	10512
	.byte	22
	.word	142
	.byte	22
	.word	142
	.byte	0,3
	.word	10517
	.byte	12,15,240,2,9,28,13
	.byte	'resData',0
	.word	9916
	.byte	4,2,35,0,13
	.byte	'reqData',0
	.word	9916
	.byte	4,2,35,4,13
	.byte	'msgAddInfo',0
	.word	9961
	.byte	4,2,35,8,13
	.byte	'resDataLen',0
	.word	811
	.byte	4,2,35,12,13
	.byte	'reqDataLen',0
	.word	811
	.byte	4,2,35,16,13
	.byte	'resMaxDataLen',0
	.word	811
	.byte	4,2,35,20,13
	.byte	'idContext',0
	.word	142
	.byte	1,2,35,24,13
	.byte	'dcmRxPduId',0
	.word	472
	.byte	2,2,35,26,0,3
	.word	10545
	.byte	28
	.word	142
	.byte	1,1,22
	.word	142
	.byte	22
	.word	10708
	.byte	22
	.word	10512
	.byte	0,3
	.word	10713
	.byte	12,15,158,6,9,20,13
	.byte	'allowed_session_b32',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'allowed_security_b32',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	10540
	.byte	4,2,35,8,13
	.byte	'SubFunc_fp',0
	.word	10736
	.byte	4,2,35,12,13
	.byte	'subservice_id_u8',0
	.word	142
	.byte	1,2,35,16,13
	.byte	'isDspRDTCSubFnc_b',0
	.word	142
	.byte	1,2,35,17,0,11
	.byte	'Dcm_Dsld_SubServiceType',0,15,169,6,2
	.word	10741
	.byte	23
	.word	10741
	.byte	3
	.word	10953
	.byte	28
	.word	142
	.byte	1,1,22
	.word	10512
	.byte	22
	.word	142
	.byte	0,3
	.word	10963
	.byte	12,15,186,6,9,36,13
	.byte	'allowed_session_b32',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'allowed_security_b32',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'service_handler_fp',0
	.word	10736
	.byte	4,2,35,8,13
	.byte	'Service_init_fp',0
	.word	2259
	.byte	4,2,35,12,13
	.byte	'sid_u8',0
	.word	142
	.byte	1,2,35,16,13
	.byte	'subfunction_exist_b',0
	.word	142
	.byte	1,2,35,17,13
	.byte	'servicelocator_b',0
	.word	142
	.byte	1,2,35,18,13
	.byte	'ptr_subservice_table_pcs',0
	.word	10958
	.byte	4,2,35,20,13
	.byte	'num_sf_u8',0
	.word	142
	.byte	1,2,35,24,13
	.byte	'adrUserServiceModeRule_pfct',0
	.word	10981
	.byte	4,2,35,28,13
	.byte	'Dcm_ConfirmationService',0
	.word	10479
	.byte	4,2,35,32,0,11
	.byte	'Dcm_Dsld_ServiceType',0,15,204,6,3
	.word	10986
	.byte	3
	.word	10450
	.byte	23
	.word	10986
	.byte	3
	.word	11334
	.byte	12,15,218,6,9,8,13
	.byte	'ptr_service_table_pcs',0
	.word	11339
	.byte	4,2,35,0,13
	.byte	'num_services_u8',0
	.word	142
	.byte	1,2,35,4,13
	.byte	'nrc_sessnot_supported_u8',0
	.word	142
	.byte	1,2,35,5,13
	.byte	'cdtc_index_u8',0
	.word	142
	.byte	1,2,35,6,0,11
	.byte	'Dcm_Dsld_sid_tableType',0,15,224,6,3
	.word	11344
	.byte	12,15,238,6,9,14,13
	.byte	'protocol_num_u8',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'txpduid_num_u8',0
	.word	472
	.byte	2,2,35,2,13
	.byte	'roetype2_txpdu_u8',0
	.word	472
	.byte	2,2,35,4,13
	.byte	'rdpitype2_txpdu_u8',0
	.word	472
	.byte	2,2,35,6,13
	.byte	'testaddr_u16',0
	.word	472
	.byte	2,2,35,8,13
	.byte	'channel_idx_u8',0
	.word	142
	.byte	1,2,35,10,13
	.byte	'ConnectionIndex_u8',0
	.word	142
	.byte	1,2,35,11,13
	.byte	'NumberOfTxpdu_u8',0
	.word	142
	.byte	1,2,35,12,0,11
	.byte	'Dcm_Dsld_connType',0,15,248,6,3
	.word	11496
	.byte	14,15,146,7,9,4,15
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,15
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,15
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,11
	.byte	'Dcm_Dsld_commodeType',0,15,151,7,2
	.word	11734
	.byte	14,16,200,1,9,4,15
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,15
	.byte	'USE_ASYNCH_FNC',0,1,0,11
	.byte	'DcmDspSecurityUsePort',0,16,204,1,2
	.word	11846
	.byte	14,17,22,9,4,15
	.byte	'DCM_NO_BOOT',0,0,15
	.byte	'DCM_OEM_BOOT',0,1,15
	.byte	'DCM_SYS_BOOT',0,2,0,11
	.byte	'Dcm_SessionForBootType',0,17,27,2
	.word	11928
	.byte	14,18,192,3,9,4,15
	.byte	'DCM_READ_OK',0,0,15
	.byte	'DCM_READ_FAILED',0,1,15
	.byte	'DCM_READ_PENDING',0,2,15
	.byte	'DCM_READ_FORCE_RCRRP',0,3,15
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,11
	.byte	'Dcm_ReadMemoryRet_t',0,18,199,3,3
	.word	12009
	.byte	11
	.byte	'rba_BswSrv_uint64',0,19,66,28
	.word	1454
	.byte	11
	.byte	'Rte_TaskRefType',0,20,184,1,32
	.word	4072
	.byte	11
	.byte	'Rte_EventRefType',0,20,185,1,32
	.word	142
	.byte	11
	.byte	'Rte_EventType',0,20,186,1,32
	.word	811
	.byte	11
	.byte	'Rte_REActCounterType',0,20,252,1,15
	.word	142
	.byte	3
	.word	142
	.byte	11
	.byte	'Rte_REActCounterRefType',0,20,253,1,58
	.word	12274
	.byte	12,20,255,1,9,8,13
	.byte	'task',0
	.word	12170
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	12279
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,20,130,2,3
	.word	12312
	.byte	23
	.word	3812
	.byte	3
	.word	12376
	.byte	3
	.word	142
	.byte	23
	.word	12312
	.byte	3
	.word	12391
	.byte	11
	.byte	'Rte_REContainerRefType',0,20,132,2,60
	.word	12396
	.byte	11
	.byte	'Rte_MSICounterType',0,20,149,2,16
	.word	472
	.byte	3
	.word	472
	.byte	11
	.byte	'Rte_MSICounterRefType',0,20,150,2,56
	.word	12461
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,20,152,2,17
	.word	142
	.byte	3
	.word	142
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,20,153,2,60
	.word	12529
	.byte	12,20,163,2,9,24,13
	.byte	'counter',0
	.word	12466
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	142
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	12534
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	12170
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	12279
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	142
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	472
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,20,172,2,3
	.word	12569
	.byte	3
	.word	472
	.byte	3
	.word	142
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,20,179,2,16
	.word	142
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,20,180,2,16
	.word	142
	.byte	12,20,182,2,9,4,13
	.byte	'pending',0
	.word	142
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	142
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	142
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,20,186,2,3
	.word	12787
	.byte	3
	.word	12787
	.byte	12,20,226,2,9,12,13
	.byte	'event_id',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	12879
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	811
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,20,230,2,3
	.word	12884
	.byte	23
	.word	12884
	.byte	3
	.word	12973
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,20,232,2,66
	.word	12978
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,20,234,2,29
	.word	12312
	.byte	19
	.byte	'Rte_QTaskType',0,20,243,2,16,28,13
	.byte	'cmn',0
	.word	7336
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12170
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,20,246,2,3
	.word	13055
	.byte	19
	.byte	'Rte_QREType',0,20,250,2,16,28,13
	.byte	'cmn',0
	.word	7336
	.byte	24,2,35,0,13
	.byte	're',0
	.word	12401
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,20,253,2,3
	.word	13126
	.byte	23
	.word	12312
	.byte	3
	.word	13191
	.byte	19
	.byte	'Rte_QWWPType',0,20,129,3,16,28,13
	.byte	'cmn',0
	.word	7336
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	12983
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,20,132,3,3
	.word	13201
	.byte	23
	.word	12884
	.byte	3
	.word	13269
	.byte	19
	.byte	'Rte_QEvType',0,20,136,3,16,36,13
	.byte	'cmn',0
	.word	7336
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12170
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	142
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	12279
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,20,141,3,3
	.word	13279
	.byte	19
	.byte	'Rte_QMSIType',0,20,145,3,16,48,13
	.byte	'cmn',0
	.word	7336
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12170
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	142
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	12279
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	12466
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	12534
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	472
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,20,153,3,3
	.word	13374
	.byte	14,21,21,9,4,15
	.byte	'DSD_IDLE',0,0,15
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,15
	.byte	'DSD_CALL_SERVICE',0,2,15
	.byte	'DSD_WAITFORTXCONF',0,3,15
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,11
	.byte	'Dcm_DsdStatesType_ten',0,21,28,2
	.word	13529
	.byte	14,22,215,2,9,4,15
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,15
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,11
	.byte	'Dcm_DsldResponseType_ten',0,22,219,2,2
	.word	13666
	.byte	14,23,148,1,9,4,15
	.byte	'DCM_ROE_CLEARED',0,0,15
	.byte	'DCM_ROE_STOPPED',0,1,15
	.byte	'DCM_ROE_STARTED',0,2,0,11
	.byte	'Dcm_DspRoeEventState_ten',0,23,153,1,2
	.word	13755
	.byte	14,23,231,1,9,4,15
	.byte	'DCM_CONTROLMASK_NO',0,0,15
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,15
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,11
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,23,236,1,2
	.word	13850
	.byte	14,18,203,1,9,4,15
	.byte	'DCM_SUPPORT_READ',0,0,15
	.byte	'DCM_SUPPORT_WRITE',0,1,15
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,28
	.word	142
	.byte	1,1,22
	.word	10512
	.byte	22
	.word	472
	.byte	22
	.word	13967
	.byte	0,3
	.word	14037
	.byte	12,23,239,1,9,44,13
	.byte	'dataAllowedSessRead_u32',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'dataAllowedSecRead_u32',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'adrUserReadModeRule_pfct',0
	.word	14060
	.byte	4,2,35,8,13
	.byte	'dataAllowedSessWrite_u32',0
	.word	811
	.byte	4,2,35,12,13
	.byte	'dataAllowedSecWrite_u32',0
	.word	811
	.byte	4,2,35,16,13
	.byte	'adrUserWriteModeRule_pfct',0
	.word	14060
	.byte	4,2,35,20,13
	.byte	'dataSessBitMask_u32',0
	.word	811
	.byte	4,2,35,24,13
	.byte	'dataSecBitMask_u32',0
	.word	811
	.byte	4,2,35,28,13
	.byte	'adrUserControlModeRule_pfct',0
	.word	14060
	.byte	4,2,35,32,13
	.byte	'dataCtrlMask_en',0
	.word	13850
	.byte	4,2,35,36,13
	.byte	'dataCtrlMaskSize_u8',0
	.word	142
	.byte	1,2,35,40,13
	.byte	'dataIocbirst_b',0
	.word	142
	.byte	1,2,35,41,13
	.byte	'statusmaskIOControl_u8',0
	.word	142
	.byte	1,2,35,42,0,11
	.byte	'Dcm_ExtendedDIDConfig_tst',0,23,141,2,3
	.word	14065
	.byte	12,23,200,2,9,4,13
	.byte	'posnSigBit_u16',0
	.word	472
	.byte	2,2,35,0,13
	.byte	'idxDcmDspDatainfo_u16',0
	.word	472
	.byte	2,2,35,2,0,11
	.byte	'Dcm_SignalDIDConfig_tst',0,23,204,2,3
	.word	14512
	.byte	14,24,31,9,4,15
	.byte	'DCM_RESET_NO_BOOT',0,0,15
	.byte	'DCM_RESET_OEM_BOOT',0,1,15
	.byte	'DCM_RESET_SYS_BOOT',0,2,15
	.byte	'DCM_RESET_DRIVE_TO_DRIVE',0,3,0,11
	.byte	'Dcm_ResetForBootType',0,24,37,2
	.word	14607
	.byte	14,25,205,1,9,4,15
	.byte	'DCM_IOCBI_IDLESTATE',0,0,15
	.byte	'DCM_IOCBI_FCS_ACTIVE',0,1,15
	.byte	'DCM_IOCBI_FCS_PENDING',0,2,15
	.byte	'DCM_IOCBI_RTD_ACTIVE',0,3,15
	.byte	'DCM_IOCBI_RTD_PENDING',0,4,15
	.byte	'DCM_IOCBI_STA_ACTIVE',0,5,15
	.byte	'DCM_IOCBI_STA_PENDING',0,6,15
	.byte	'DCM_IOCBI_RCE_ACTIVE',0,7,15
	.byte	'DCM_IOCBI_RCE_PENDING',0,8,0,11
	.byte	'Dcm_Dsp_IocbiDidStatus_ten',0,25,216,1,4
	.word	14731
	.byte	12,26,26,9,8,13
	.byte	'posnStart_u16',0
	.word	472
	.byte	2,2,35,0,13
	.byte	'dataLength_u16',0
	.word	472
	.byte	2,2,35,2,13
	.byte	'idxSignal_u16',0
	.word	472
	.byte	2,2,35,4,13
	.byte	'dataEndianness_u8',0
	.word	142
	.byte	1,2,35,6,13
	.byte	'dataType_u8',0
	.word	142
	.byte	1,2,35,7,0,11
	.byte	'Dcm_DspRoutineSignalInfo_tst',0,26,33,3
	.word	14984
	.byte	28
	.word	142
	.byte	1,1,22
	.word	10512
	.byte	22
	.word	472
	.byte	22
	.word	142
	.byte	0,3
	.word	15145
	.byte	23
	.word	14984
	.byte	3
	.word	15173
	.byte	23
	.word	15178
	.byte	23
	.word	15178
	.byte	23
	.word	15178
	.byte	23
	.word	15178
	.byte	23
	.word	15178
	.byte	23
	.word	15178
	.byte	12,26,35,9,68,13
	.byte	'dataSecBitMask_u32',0
	.word	811
	.byte	4,2,35,0,13
	.byte	'dataSessBitMask_u32',0
	.word	811
	.byte	4,2,35,4,13
	.byte	'adrUserRidModeRule_pfct',0
	.word	15168
	.byte	4,2,35,8,13
	.byte	'adrStartInSignalRef_cpcst',0
	.word	15183
	.byte	4,2,35,12,13
	.byte	'adrStopInSignalRef_cpcst',0
	.word	15188
	.byte	4,2,35,16,13
	.byte	'adrReqRslInSignalRef_cpcst',0
	.word	15193
	.byte	4,2,35,20,13
	.byte	'adrStartOutSignalRef_cpcst',0
	.word	15198
	.byte	4,2,35,24,13
	.byte	'adrStopOutSignalRef_cpcst',0
	.word	15203
	.byte	4,2,35,28,13
	.byte	'adrReqRsltOutSignalRef_cpcst',0
	.word	15208
	.byte	4,2,35,32,13
	.byte	'dataCtrlOptRecSizeStart_u16',0
	.word	472
	.byte	2,2,35,36,13
	.byte	'dataCtrlOptRecSizeStop_u16',0
	.word	472
	.byte	2,2,35,38,13
	.byte	'dataCtrlOptRecSizeReqRslt_u16',0
	.word	472
	.byte	2,2,35,40,13
	.byte	'dataStsOptRecSizeStart_u16',0
	.word	472
	.byte	2,2,35,42,13
	.byte	'dataStsOptRecSizeStop_u16',0
	.word	472
	.byte	2,2,35,44,13
	.byte	'dataStsOptRecSizeReqRslt_u16',0
	.word	472
	.byte	2,2,35,46,13
	.byte	'dataMinCtrlOptRecSizeStart_u16',0
	.word	472
	.byte	2,2,35,48,13
	.byte	'dataMinCtrlOptRecSizeStop_u16',0
	.word	472
	.byte	2,2,35,50,13
	.byte	'dataMinCtrlOptRecSizeReqRslt_u16',0
	.word	472
	.byte	2,2,35,52,13
	.byte	'dataMinStsOptRecSizeStart_u16',0
	.word	472
	.byte	2,2,35,54,13
	.byte	'dataMinStsOptRecSizeStop_u16',0
	.word	472
	.byte	2,2,35,56,13
	.byte	'dataMinStsOptRecSizeReqRslt_u16',0
	.word	472
	.byte	2,2,35,58,13
	.byte	'nrStartInSignals_u8',0
	.word	142
	.byte	1,2,35,60,13
	.byte	'nrStopInSignals_u8',0
	.word	142
	.byte	1,2,35,61,13
	.byte	'nrReqRslInSignals_u8',0
	.word	142
	.byte	1,2,35,62,13
	.byte	'nrStartOutSignals_u8',0
	.word	142
	.byte	1,2,35,63,13
	.byte	'nrStopOutSignals_u8',0
	.word	142
	.byte	1,2,35,64,13
	.byte	'nrReqRsltOutSignals_u8',0
	.word	142
	.byte	1,2,35,65,0,11
	.byte	'Dcm_DspRoutineInfoType_tst',0,26,69,3
	.word	15213
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4
	.byte	1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0,54
	.byte	15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0,73
	.byte	19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0,26
	.byte	21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd_Rdpi.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Er_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc_Prot.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     1  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     2  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     3  #include "DcmCore_DslDsd_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     4  #if(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     5  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     6  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     7  VAR(Dcm_PeriodicInfoType_tst,DCM_CODE) Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER];  /* Periodic scheduler array */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     8  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	     9  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    10  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    11  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    12  VAR(uint8,       DCM_VAR)      Dcm_NumOfActivePeriodicId_u8;            /* Variable to store the number of active identifiers in the periodic scheduler */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    13  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    14  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    15  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    16  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    17  static VAR (Dcm_DIDIndexType_tst,DCM_VAR) s_Dcm_idxDidIndexType_st;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    18  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    19  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    20  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    21  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    22  static VAR(boolean,DCM_VAR) s_isTxPduIdBusy_b =  FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    23  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    24  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    25  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    26  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    27  /* RDPI2 message context table */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    28  VAR(Dcm_MsgContextType,DCM_VAR) Dcm_Rdpi2MesContext_st;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    29  /* response type */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    30  VAR(Dcm_DsldResponseType_ten,DCM_VAR) Dcm_Rdpi2ResponseType_en;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    31  /* RDPI2 info structure */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    32  VAR(PduInfoType,DCM_VAR) Dcm_DsldRdpi2pduinfo_ast[DCM_CFG_NUM_RDPITYPE2_TXPDU];
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    33  /* RDPI2 TYPE2 TxPduid index*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    34  static VAR(uint8,DCM_VAR) s_idxRdpi2TxPduId_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    35  /* Pointer to RDPI info structure */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    36  P2CONST(Dcm_ProtocolExtendedInfo_type,DCM_VAR,DCM_INTERN_CONST) Dcm_DsldRdpi2_pcst;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    37  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    38  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    39  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    40  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    41  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    42  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    43  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    44  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    45  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    46  * Dcm_RdpiPriorityInversion :  DCM function to perofrm the Priority Inversion for RDPI service
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    47  * \param  idxSchedulerIndexLoop_u16    :   Index of the scheduler for which Dcm_RdpiPriorityInversion has to be performed
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    48  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    49  * \retval          None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    50  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    51  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    52  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    53  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    54  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    55  static FUNC(void,DCM_CODE) Dcm_RdpiPriorityInversion(VAR(uint16,AUTOMATIC) idxSchedulerIndexLoop_u16)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    56  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    57  #if (DCM_CFG_MAX_DID_SCHEDULER > 1u)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    58      VAR(uint16,AUTOMATIC) idxIndex_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    59  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    60      VAR(Dcm_PeriodicInfoType_tst,DCM_CODE) Temp_PeriodicInfo_st;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    61      /*copy the values associated with the scheduled PDID into Temporary variables */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    62      Temp_PeriodicInfo_st.cntrTime_u32         = Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].cntrTime_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    63      Temp_PeriodicInfo_st.dataId_u16           = Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].dataId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    64      Temp_PeriodicInfo_st.idxPeriodicId_u16    = Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].idxPeriodicId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    65      Temp_PeriodicInfo_st.dataOverflowValue_en = Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].dataOverflowValue_en;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    66      Temp_PeriodicInfo_st.dataRange_b          = Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].dataRange_b;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    67  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    68      /*Perform Priority Inversion for the scheduled PDID*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    69  #if (DCM_CFG_MAX_DID_SCHEDULER > 1u)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    70      for(idxIndex_u16 = idxSchedulerIndexLoop_u16 ; idxIndex_u16 < (DCM_CFG_MAX_DID_SCHEDULER-1u) ; idxIndex_u16++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    71      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    72          /*Shift the PDID present in the RDPI scheduler up by one */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    73          Dcm_PeriodicInfo_st[idxIndex_u16].cntrTime_u32         = Dcm_PeriodicInfo_st[idxIndex_u16+1].cntrTime_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    74          Dcm_PeriodicInfo_st[idxIndex_u16].dataId_u16           = Dcm_PeriodicInfo_st[idxIndex_u16+1].dataId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    75          Dcm_PeriodicInfo_st[idxIndex_u16].idxPeriodicId_u16    = Dcm_PeriodicInfo_st[idxIndex_u16+1].idxPeriodicId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    76          Dcm_PeriodicInfo_st[idxIndex_u16].dataOverflowValue_en = Dcm_PeriodicInfo_st[idxIndex_u16+1].dataOverflowValue_en;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    77          Dcm_PeriodicInfo_st[idxIndex_u16].dataRange_b          = Dcm_PeriodicInfo_st[idxIndex_u16+1].dataRange_b;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    78      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    79  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    80  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    81          /*Place the scheduled PDID at the end of the RDPI scheduler */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    82          Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER-1u].cntrTime_u32         = Temp_PeriodicInfo_st.cntrTime_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    83          Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER-1u].dataId_u16           = Temp_PeriodicInfo_st.dataId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    84          Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER-1u].idxPeriodicId_u16    = Temp_PeriodicInfo_st.idxPeriodicId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    85          Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER-1u].dataOverflowValue_en = Temp_PeriodicInfo_st.dataOverflowValue_en;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    86          Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER-1u].dataRange_b          = Temp_PeriodicInfo_st.dataRange_b;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    87  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    88  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    89  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    90  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    91   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    92   * Dcm_DsldPeriodicSchedulerIni :  DCM function to initialise the periodic scheduler
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    93   * \param           None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    94   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    95   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    96   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    97   * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    98   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	    99   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   100   */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   101  FUNC(void,DCM_CODE) Dcm_DsldPeriodicSchedulerIni(void)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   102  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   103  	VAR(uint16,AUTOMATIC) idxIndex_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   104  	for(idxIndex_u16=0;idxIndex_u16<DCM_CFG_MAX_DID_SCHEDULER;idxIndex_u16++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   105  	{
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   106  		Dcm_PeriodicInfo_st[idxIndex_u16].dataId_u16=0x00;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   107  		Dcm_PeriodicInfo_st[idxIndex_u16].idxPeriodicId_u16=0x00;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   108  		Dcm_PeriodicInfo_st[idxIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   109  		Dcm_PeriodicInfo_st[idxIndex_u16].cntrTime_u32=0x00;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   110  		/*Initialize that the did range is not valid*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   111  		Dcm_PeriodicInfo_st[idxIndex_u16].dataRange_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   112  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   113  	}
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   114  	Dcm_NumOfActivePeriodicId_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   115  	Dcm_PeriodicSchedulerRunning_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   116  	s_idxRdpi2TxPduId_u8=0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   117  	Dcm_ResetDIDIndexstruct(&s_Dcm_idxDidIndexType_st);		/*This function is invoked to reset all the elements of DID index structure to its default value*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   118  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   119  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   120  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   121  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   122  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   123  * Dcm_SetRdpicounter :  Helper function to update counter time of the PID requested based on
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   124  *                       rate with which PID is scheduled.
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   125  * \param                dataSchedulerLoop_u16 : Index of the PID in periodic scheduler table
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   126  * \retval               void
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   127  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   128  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   129  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   130  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   131  static FUNC(void,DCM_CODE) Dcm_SetRdpicounter(VAR(uint16, AUTOMATIC) dataSchedulerLoop_u16)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   132  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   133      if(Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].dataOverflowValue_en==DCM_RDPI_SLOW_RATE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   134       {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   135           Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].cntrTime_u32=DCM_CFG_PERIODICTX_SLOWRATE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   136       }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   137       else if(Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].dataOverflowValue_en==DCM_RDPI_MEDIUM_RATE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   138       {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   139           Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].cntrTime_u32=DCM_CFG_PERIODICTX_MEDIUMRATE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   140       }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   141       else if(Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].dataOverflowValue_en== DCM_RDPI_FAST_RATE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   142       {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   143           Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].cntrTime_u32=DCM_CFG_PERIODICTX_FASTRATE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   144       }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   145       else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   146       {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   147          /*Nothing to be done here*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   148       }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   149  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   150  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   151  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   152  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   153  * Dcm_InitializeRdpiParameters :  DCM function to obtain the data of the DID and pass it on to lower layers
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   154  *                          for transmission
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   155  * \param           dataLength_u32    :   length of the DID
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   156  *                  dataSchedulerLoop_u16 : Index of the PID in periodic scheduler table
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   157  * \retval          STD_ReturnType      :    E_OK if transmission was successful
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   158  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   159  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   160  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   161  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   162  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   163  /*MR12 RULE 8.13 VIOLATION: The object addressed by the pointer parameter 'idxRdpiType2_pu8' is not modified and so the pointer could be of type 'pointer to const'. MISRA C:2012 Rule-8.13  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   164  static FUNC(Std_ReturnType,DCM_CODE) Dcm_InitializeRdpiParameters(P2VAR(uint8,AUTOMATIC, DCM_INTERN_DATA) idxRdpiType2_pu8)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   165  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   166      VAR (Std_ReturnType,   AUTOMATIC) dataCondChkRetVal_u8; /* Return value of Condition check API */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   167      VAR (Std_ReturnType,   AUTOMATIC) idxIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   168      VAR (uint8,   AUTOMATIC) ConnectionTxpduOffset_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   169      VAR (uint8,   AUTOMATIC) ConnectionNumberofTxpdus_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   170      idxIndex_u8=0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   171      ConnectionTxpduOffset_u8 = Dcm_DsldConnTable_pcst[Dcm_DsldGlobal_st.nrActiveConn_u8].ConnectionIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   172      ConnectionNumberofTxpdus_u8 = Dcm_DsldConnTable_pcst[Dcm_DsldGlobal_st.nrActiveConn_u8].NumberOfTxpdu_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   173      dataCondChkRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   174      (void)idxRdpiType2_pu8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   175      Dcm_DsldRdpi2_pcst = Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].rdpi_info_pcs;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   176      /* Fill the default response type */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   177      Dcm_Rdpi2ResponseType_en = DCM_DSLD_POS_RESPONSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   178      /* Response length (filled by the service) */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   179      Dcm_Rdpi2MesContext_st.resDataLen = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   180      /* Fill the addressing mode as physical  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   181      Dcm_Rdpi2MesContext_st.msgAddInfo.reqType = DCM_PRV_PHYSICAL_REQUEST;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   182      for(idxIndex_u8 = ConnectionTxpduOffset_u8; idxIndex_u8 < (ConnectionTxpduOffset_u8 + ConnectionNumberofTxpdus_u8); idxIndex_u8++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   183      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   184          /*Check if the Rdpi type isTxPduId is set to the value false*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   185          if(Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].isTxPduId_Busy==FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   186          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   187              Dcm_Rdpi2MesContext_st.resData = &Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].txbuffer_ptr[0];
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   188              break;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   189          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   190      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   191      /*Check if any TXPDU is available, if not wait for the next time slice*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   192      if(idxIndex_u8<(ConnectionTxpduOffset_u8 + ConnectionNumberofTxpdus_u8))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   193      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   194          /* Fill the maximum possible response length */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   195          Dcm_Rdpi2MesContext_st.resMaxDataLen = Dcm_DsldRdpi2_pcst->txbuffer_length_u32 - 1uL;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   196          /* This is RDPI requested service */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   197          Dcm_Rdpi2MesContext_st.msgAddInfo.sourceofRequest = DCM_RDPI_SOURCE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   198          /* Is suppressed positive bit is always FALSE */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   199  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   200          Dcm_Rdpi2MesContext_st.msgAddInfo.suppressPosResponse = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   201          /*Update the index of TxPdu to be used by the Dcm_FrameRdpiresponse()*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   202          *idxRdpiType2_pu8=idxIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   203          s_idxRdpi2TxPduId_u8=idxIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   204          /*TXPDUID is available*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   205          dataCondChkRetVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   206          s_isTxPduIdBusy_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   207      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   208      else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   209      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   210          dataCondChkRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   211          s_isTxPduIdBusy_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   212      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   213      return dataCondChkRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   214  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   215  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   216  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   217  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   218  * Dcm_GetRdpiType2Index :  DCM function to obtain the data of the DID and pass it on to lower layers
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   219  *                          for transmission
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   220  * \param           dataLength_u32    :   length of the DID
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   221  *                  dataSchedulerLoop_u16 : Index of the PID in periodic scheduler table
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   222  * \retval          STD_ReturnType      :    E_OK if transmission was successful
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   223  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   224  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   225  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   226  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   227  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   228  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   229  FUNC(void,DCM_CODE) Dcm_GetRdpiType2Index(P2VAR(uint8,AUTOMATIC, DCM_INTERN_DATA) idxRdpi2TxPduId_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   230  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   231      *idxRdpi2TxPduId_u8=s_idxRdpi2TxPduId_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   232  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   233  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   234  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   235  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   236  * Dcm_FrameRdpiresponse :  DCM function to obtain the data of the DID and pass it on to lower layers
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   237  *                          for transmission
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   238  * \param           dataLength_u32    :   length of the DID
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   239  *                  dataSchedulerLoop_u16 : Index of the PID in periodic scheduler table
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   240  * \retval          STD_ReturnType      :    E_OK if transmission was successful
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   241  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   242  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   243  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   244  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   245  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   246  static FUNC(Std_ReturnType,DCM_CODE) Dcm_FrameRdpiresponse(VAR(uint32, AUTOMATIC) dataLength_u32,VAR(uint16, AUTOMATIC) dataSchedulerLoop_u16)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   247  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   248      VAR (Std_ReturnType,   AUTOMATIC) dataReaddataRetVal_u8; /* Return value of Condition check API */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   249      VAR (uint8,   AUTOMATIC) idxRdpiType2_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   250      idxRdpiType2_u8=0xFF;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   251      dataReaddataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   252  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   253      dataReaddataRetVal_u8=Dcm_InitializeRdpiParameters(&idxRdpiType2_u8);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   254  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   255      if(E_OK==dataReaddataRetVal_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   256      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   257          /* Call the API to read data corresponding to the periodic identifier */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   258          dataReaddataRetVal_u8 = Dcm_GetDIDData (&s_Dcm_idxDidIndexType_st,&Dcm_Rdpi2MesContext_st.resData[1]);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   259  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   260          /*Check if data read successfully or if applicationtion has set any NRC*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   261          if(s_Dcm_idxDidIndexType_st.dataNegRespCode_u8==0x00)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   262          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   263              /* If data was read successfully */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   264              if(E_OK==dataReaddataRetVal_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   265              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   266                  /*  Data ready successfully, trigger the response*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   267                 /* Update the response length for the SID and the identifier */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   268                 Dcm_Rdpi2MesContext_st.resDataLen=dataLength_u32+1uL;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   269                 /* Update the periodic identifier in the transmission buffer */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   270                 Dcm_Rdpi2MesContext_st.resData[0]=(uint8)(Dcm_PeriodicInfo_st[dataSchedulerLoop_u16].dataId_u16);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   271                 /* Send the response */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   272                 /*txpduid is blocked in the processiong done before Pdur_DcmTransmit is triggered*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   273                 Dcm_ProcessingDone(&Dcm_Rdpi2MesContext_st);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   274  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   275                 s_Dcm_idxDidIndexType_st.nrNumofSignalsRead_u16 = 0x0; /*All the signals read correctly, therefore reset it to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   276                 s_Dcm_idxDidIndexType_st.dataSignalLengthInfo_u32 = 0x0;    /*All the signals read correctly, therefore reset the signal data length to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   277  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   278              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   279              else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   280              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   281                  s_Dcm_idxDidIndexType_st.nrNumofSignalsRead_u16 = 0x0; /*All the signals read correctly, therefore reset it to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   282                  s_Dcm_idxDidIndexType_st.dataSignalLengthInfo_u32 = 0x0;    /*All the signals read correctly, therefore reset the signal data length to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   283                  dataReaddataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   284              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   285          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   286          else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   287          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   288              s_Dcm_idxDidIndexType_st.nrNumofSignalsRead_u16 = 0x0; /*All the signals read correctly, therefore reset it to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   289              s_Dcm_idxDidIndexType_st.dataSignalLengthInfo_u32 = 0x0;    /*All the signals read correctly, therefore reset the signal data length to zero*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   290              dataReaddataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   291          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   292      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   293      else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   294      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   295          dataReaddataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   296      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   297  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   298      return dataReaddataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   299  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   300  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   301  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   302  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   303  * Dcm_VerifyLengthRdpiType :  DCM function to verify if the length of the DID is within the Tx buffer limits
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   304  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   305  * \param           dataLength_u32    :   length of the DID
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   306  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   307  * \retval          None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   308  * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   309  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   310  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   311  */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   312  static FUNC(Std_ReturnType,DCM_CODE) Dcm_VerifyLengthRdpiType(VAR(uint32,AUTOMATIC) dataLength_u32)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   313  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   314      VAR (Std_ReturnType,   AUTOMATIC) dataCondChkRetVal_u8; /* Return value of Condition check API */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   315      dataCondChkRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   316  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   317      /*Verify if the DID can be accomodated within the buffer available*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   318      if((dataLength_u32+1uL)<=Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].rdpi_info_pcs->txbuffer_length_u32)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   319      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   320          dataCondChkRetVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   321      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   322  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   323      return dataCondChkRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   324  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   325  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   326  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   327   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   328   * Dcm_RdpiCheckPIDSupportConditions :  DCM function to monitor the session security and condition
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   329   * check read function for the PID, if all checks are fine then the length of PID is obtained and
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   330   * RDPI response frame function is invoked
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   331   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   332   * \param           idxPeriodicIndex_u16    :   Index of the DID in Dcm_DIDConfig[]
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   333   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   334   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   335   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   336   * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   337   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   338   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   339   */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   340  static FUNC(Std_ReturnType,DCM_CODE) Dcm_RdpiCheckPIDSupportConditions(VAR(uint16,AUTOMATIC) idxPeriodicIndex_u16)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   341  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   342      VAR (Std_ReturnType,   AUTOMATIC) dataCondChkRetVal_u8; /* Return value of Condition check API */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   343      VAR (uint32,AUTOMATIC) dataSessionMask_u32;   /* Variable to hold the configured sessions value */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   344      VAR (uint32,AUTOMATIC) dataSecurityMask_u32;  /* Variable to hold the configured security value */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   345      VAR(uint32,                      AUTOMATIC) dataLength_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   346      P2CONST(Dcm_ExtendedDIDConfig_tst,AUTOMATIC,DCM_INTERN_CONST) adrExtendedConfig_pcst; /* Pointer to extended configuration */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   347  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   348      dataLength_u32=0x0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   349      dataSessionMask_u32=0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   350      dataSecurityMask_u32=0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   351      /*initialize the file static DID structure variable with the index of DID in Dcm_DIDCOnfig*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   352      s_Dcm_idxDidIndexType_st.idxIndex_u16 = Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].idxPeriodicId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   353      s_Dcm_idxDidIndexType_st.dataRange_b = Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataRange_b;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   354      dataCondChkRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   355      adrExtendedConfig_pcst=NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   356  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   357      /*Is the DID range DID or not*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   358  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   359      if(s_Dcm_idxDidIndexType_st.dataRange_b==FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   360      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   361          adrExtendedConfig_pcst=Dcm_DIDConfig[s_Dcm_idxDidIndexType_st.idxIndex_u16].adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   362      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   363  #if ( DCM_CFG_DIDRANGE_EXTENSION != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   364      /*Control comes here for range DIDS*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   365      else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   366      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   367          s_Dcm_idxDidIndexType_st.dataRangeDid_16 = Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataId_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   368          adrExtendedConfig_pcst=Dcm_DIDRangeConfig_cast[s_Dcm_idxDidIndexType_st.idxIndex_u16].adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   369      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   370  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   371  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   372      /*Obtain the session and security mask based on the type of DID*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   373      /*MR12 RULE 9.1 VIOLATION: Using value of uninitialized automatic object 'adrExtendedConfig_pcst'. MISRA C:2012 Rule-9.1*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   374      dataSessionMask_u32  = adrExtendedConfig_pcst->dataAllowedSessRead_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   375      /*MR12 RULE 9.1 VIOLATION: Using value of uninitialized automatic object 'adrExtendedConfig_pcst'. MISRA C:2012 Rule-9.1*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   376      dataSecurityMask_u32 = adrExtendedConfig_pcst->dataAllowedSecRead_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   377  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   378      /* If the identifier is supported in the current session*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   379      if ((Dcm_DsldGetActiveSessionMask_u32() & dataSessionMask_u32) != 0x0uL)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   380      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   381         /* If the identifier is supported in the current security level */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   382          if ((Dcm_DsldGetActiveSecurityMask_u32() & dataSecurityMask_u32) != 0x0uL)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   383          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   384              /*Check if condition read for the DID is fine*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   385              dataCondChkRetVal_u8=Dcm_RdpiIsDidCondtionChkReadSupported(&s_Dcm_idxDidIndexType_st);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   386              if (dataCondChkRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   387              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   388                 /*Obtain the length of the PDID*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   389                 if(E_OK==Dcm_GetLengthOfDIDIndex(&s_Dcm_idxDidIndexType_st, &dataLength_u32,(uint16)(Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataId_u16|0xF200u)))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   390                 {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   391                     /*Verify if the length of DID fits in within the buffer*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   392                     if(E_OK==Dcm_VerifyLengthRdpiType(dataLength_u32))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   393                     {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   394                         /*All checks passed, frame the rdpi response*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   395                         dataCondChkRetVal_u8=Dcm_FrameRdpiresponse(dataLength_u32,idxPeriodicIndex_u16);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   396                     }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   397                     else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   398                     {   /*Stop processing this ID length check has failed*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   399                       Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   400                     }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   401                 }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   402                 else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   403                 {   /*Stop processing this ID since some session or security or condition or readdata has failed*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   404                   Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   405                 }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   406              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   407              else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   408              {      /*Stop processing this ID condition check has failed*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   409                  Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   410              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   411          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   412          else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   413          {   /*Stop processing this ID security check has failed*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   414              Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   415          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   416      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   417      else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   418      {   /*Stop processing this ID session check has failed*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   419          Dcm_PeriodicInfo_st[idxPeriodicIndex_u16].dataOverflowValue_en=DCM_RDPI_NO_TRANMISSION;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   420      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   421  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   422      return dataCondChkRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   423  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   424  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   425  /**
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   426   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   427   * Dcm_RdpiMainFunction :  DCM function to monitor the periodic scheduler and for initiating the
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   428   * periodic transmissions of the active periodic identifiers.
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   429   * \param           None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   430   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   431   *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   432   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   433   * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   434   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   435   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   436   */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   437  FUNC(void,DCM_CODE) Dcm_RdpiMainFunction(void)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   438  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   439      VAR(uint16, AUTOMATIC) idxSchedulerIndexLoop_u16 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   440      VAR(uint16, AUTOMATIC) idxPriorityInversion_u16 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   441      VAR (Std_ReturnType,   AUTOMATIC) dataCondChkRetVal_u8; /* Return value of Condition check API */
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   442      VAR (Std_ReturnType,   AUTOMATIC) idxIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   443      idxIndex_u8=0;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   444      idxSchedulerIndexLoop_u16=0x0u;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   445      dataCondChkRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   446  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   447      if(Dcm_NumOfActivePeriodicId_u8>0u)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   448      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   449          /*Loop throught the scheduler and check if any of the IDs time slice has expired*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   450          for( idxIndex_u8=0;idxIndex_u8<DCM_CFG_NUM_RDPITYPE2_TXPDU;idxIndex_u8++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   451          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   452              if(Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].isTxPduId_Busy!=FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   453              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   454                  if(Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].cntFreeTxPduRdpi2Cntr_u8!=0)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   455                  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   456                      /*Decrrement the timer and chck if time out has occured*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   457                      Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].cntFreeTxPduRdpi2Cntr_u8--;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   458                      /*Check if the timer has timedout*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   459                      if(Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].cntFreeTxPduRdpi2Cntr_u8==0)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   460                      {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   461                          /*Release the TxPDU since the confirmation has not yet come and timer has timedout*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   462                          Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].isTxPduId_Busy=FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   463                          s_isTxPduIdBusy_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   464                          /*Reload the counter, TXPDU is already released*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   465                          Dcm_Dsld_RDPIType2tx_table[idxIndex_u8].cntFreeTxPduRdpi2Cntr_u8=DCM_CFG_RDPITYPE2FREETXPDUCOUNTER;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   466                      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   467                  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   468              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   469          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   470          /*Loop throught the scheduler and check if any of the IDs time slice has expired*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   471          for (idxSchedulerIndexLoop_u16=0;idxSchedulerIndexLoop_u16<DCM_CFG_MAX_DID_SCHEDULER;idxSchedulerIndexLoop_u16++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   472          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   473              if (Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].dataOverflowValue_en!=DCM_RDPI_NO_TRANMISSION)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   474              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   475                 /* Check if the identifier is ready for transmission*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   476                 if(Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].cntrTime_u32>0uL)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   477                 {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   478                     /* Decrement the counter and see if the time slice is reached*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   479                     Dcm_PeriodicInfo_st[idxSchedulerIndexLoop_u16].cntrTime_u32--;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   480                 }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   481              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   482          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   483  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   484          if((DCM_CHKFULLCOMM_MODE(Dcm_DsldConnTable_pcst[Dcm_DsldGlobal_st.nrActiveConn_u8].channel_idx_u8))&&(NULL_PTR != Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].rdpi_info_pcs))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   485          {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   486              for (idxSchedulerIndexLoop_u16=0;idxSchedulerIndexLoop_u16<DCM_CFG_MAX_DID_SCHEDULER;idxSchedulerIndexLoop_u16++)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   487              {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   488                  if ((Dcm_PeriodicInfo_st[idxPriorityInversion_u16].dataOverflowValue_en!=DCM_RDPI_NO_TRANMISSION) && \ 
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   489                          (Dcm_PeriodicInfo_st[idxPriorityInversion_u16].cntrTime_u32 == 0uL))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   490                  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   491                     dataCondChkRetVal_u8=Dcm_RdpiCheckPIDSupportConditions(idxPriorityInversion_u16);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   492  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   493                     /*If response was triggered successfully on the bus, reload the counters and perforrm priority Inversion*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   494                     if((s_isTxPduIdBusy_b != TRUE) || (dataCondChkRetVal_u8 != E_NOT_OK))
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   495                     {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   496                        Dcm_SetRdpicounter(idxPriorityInversion_u16);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   497                        Dcm_RdpiPriorityInversion(idxPriorityInversion_u16);
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   498                     }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   499                  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   500                  else
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   501                  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   502                      /*increment the scheduler counter when cntrTime_u32 is not zero and dataOverflowValue_en is not DCM_RDPI_NO_TRANMISSION*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   503                      idxPriorityInversion_u16++;
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   504                  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   505              }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   506          }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   507      }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   508  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   509  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   510  /*
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   511  ***********************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   512  *  Dcm_DsldResetRDPI :TO Reset the state machine of RDPI type 1 or Type 2
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   513                           Also reset of settings done for the active service table
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   514  *  \param         None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   515  *  \retval        None
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   516  *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   517  *
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   518  ***********************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   519  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   520  FUNC(void,DCM_CODE) Dcm_DsldResetRDPI(void)
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   521  {
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   522      Dcm_DsldPeriodicSchedulerIni();
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   523  }
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   524  
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   525  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   526  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsd\Dcm_Dsd_Rdpi.c	   527  #endif

	; Module end
