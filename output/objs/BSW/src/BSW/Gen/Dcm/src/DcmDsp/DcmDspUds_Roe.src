	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15296a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Roe.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Roe.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Roe.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	12183
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Roe.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	156
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	158
	.byte	5
	.byte	'char',0,1,6,4
	.byte	'sint8',0,2,76,25
	.word	181
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	203
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	234
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	271
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'uint64',0,2,111,30
	.word	302
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	203
	.byte	4
	.byte	'StatusType',0,3,191,1,27
	.word	203
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	203
	.byte	6,3,206,1,9,8,7
	.byte	'vendorID',0
	.word	234
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	234
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	203
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	203
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	203
	.byte	1,2,35,6,0,4
	.byte	'Std_VersionInfoType',0,3,213,1,3
	.word	403
	.byte	4
	.byte	'PduIdType',0,4,22,19
	.word	234
	.byte	4
	.byte	'PduLengthType',0,4,26,19
	.word	234
	.byte	8,5,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,118,3
	.word	593
	.byte	4
	.byte	'NetworkHandleType',0,5,128,1,17
	.word	203
	.byte	4
	.byte	'Can_IdType',0,6,32,16
	.word	271
	.byte	4
	.byte	'Can_HwHandleType',0,6,43,16
	.word	234
	.byte	6,7,93,9,8,7
	.byte	'Class',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	203
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	271
	.byte	4,2,35,4,0,4
	.byte	'OsTrapInfoType',0,7,97,3
	.word	740
	.byte	10,68
	.word	271
	.byte	11,16,0,6,7,154,1,9,68,7
	.byte	'store',0
	.word	820
	.byte	68,2,35,0,0,10,68
	.word	829
	.byte	11,0,0,4
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	851
	.byte	4
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	271
	.byte	6,7,175,1,9,8,7
	.byte	'sp',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	271
	.byte	4,2,35,4,0,4
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	911
	.byte	4
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	911
	.byte	12,1,1,3
	.word	996
	.byte	4
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	999
	.byte	4
	.byte	'ApplicationType',0,7,193,1,23
	.word	203
	.byte	13
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,7
	.byte	'app_id',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,1,0,4
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	1062
	.byte	4
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	271
	.byte	4
	.byte	'AreaIdType',0,7,204,1,16
	.word	234
	.byte	4
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	271
	.byte	4
	.byte	'TickType',0,7,221,1,22
	.word	271
	.byte	4
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	271
	.byte	3
	.word	271
	.byte	4
	.byte	'Os_Lockable',0,7,234,1,18
	.word	1304
	.byte	4
	.byte	'CoreIdType',0,7,236,1,16
	.word	234
	.byte	4
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	234
	.byte	8,7,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,4
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	1374
	.byte	8,7,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,4
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	1467
	.byte	14
	.byte	'void',0,3
	.word	1579
	.byte	15,1,1,16
	.word	203
	.byte	16
	.word	1585
	.byte	0,3
	.word	1590
	.byte	4
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	1604
	.byte	13
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,7
	.byte	'elapsed',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	271
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	271
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	911
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	911
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	911
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	911
	.byte	8,2,35,40,0,4
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	1639
	.byte	3
	.word	1639
	.byte	4
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	1837
	.byte	4
	.byte	'EventMaskType',0,7,206,2,15
	.word	203
	.byte	4
	.byte	'Os_imaskType',0,7,211,2,16
	.word	271
	.byte	13
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,7
	.byte	'meter',0
	.word	1639
	.byte	48,2,35,0,0,4
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	1916
	.byte	3
	.word	1916
	.byte	17
	.word	1977
	.byte	13
	.byte	'Os_ISRType_s',0,7,216,2,16,24,7
	.byte	'entry_function',0
	.word	1004
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	1982
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	271
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	911
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	203
	.byte	1,2,35,21,0,4
	.byte	'Os_ISRType',0,7,223,2,3
	.word	1987
	.byte	3
	.word	996
	.byte	17
	.word	1987
	.byte	3
	.word	2146
	.byte	4
	.byte	'ISRType',0,7,224,2,46
	.word	2151
	.byte	4
	.byte	'Os_bitmask',0,7,239,2,22
	.word	271
	.byte	4
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	271
	.byte	4
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	271
	.byte	4
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	271
	.byte	18,7,243,2,9,4,7
	.byte	'p0',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	271
	.byte	4,2,35,0,0,4
	.byte	'Os_psetType',0,7,247,2,3
	.word	2259
	.byte	18,7,249,2,9,4,7
	.byte	't0',0
	.word	271
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	271
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	271
	.byte	4,2,35,0,0,4
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	2323
	.byte	4
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	203
	.byte	13
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	860
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	1639
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	203
	.byte	1,2,35,116,0,4
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	2421
	.byte	10,68
	.word	829
	.byte	11,0,0,3
	.word	2421
	.byte	17
	.word	2547
	.byte	13
	.byte	'Os_TaskType_s',0,7,134,3,16,40,7
	.byte	'dynamic',0
	.word	2552
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	1004
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2259
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2323
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2323
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	234
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	271
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	911
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	203
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	203
	.byte	1,2,35,38,0,4
	.byte	'Os_TaskType',0,7,146,3,3
	.word	2557
	.byte	17
	.word	2557
	.byte	3
	.word	2807
	.byte	4
	.byte	'TaskType',0,7,147,3,47
	.word	2812
	.byte	19
	.byte	'Os_TaskStateType',0,7,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,4
	.byte	'TaskStateType',0,7,156,3,31
	.word	2835
	.byte	18,7,167,3,3,4,7
	.byte	'tpmask',0
	.word	2323
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,7
	.byte	'saved_priority',0
	.word	2922
	.byte	4,2,35,0,0,4
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	2945
	.byte	3
	.word	2945
	.byte	17
	.word	3025
	.byte	13
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,7
	.byte	'dynamic',0
	.word	3030
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2323
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,8,0,4
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	3035
	.byte	6,7,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	271
	.byte	4,2,35,8,0,4
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	3134
	.byte	6,7,206,3,9,8,7
	.byte	'Running',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	203
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	271
	.byte	4,2,35,4,0,4
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	3229
	.byte	20
	.word	203
	.byte	1,1,3
	.word	3315
	.byte	4
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	3322
	.byte	13
	.byte	's_swd',0,7,222,3,12,4,7
	.byte	'count',0
	.word	271
	.byte	4,2,35,0,0,18,7,221,3,3,4,7
	.byte	'sw',0
	.word	3358
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3386
	.byte	4,2,35,0,0,4
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	3405
	.byte	3
	.word	3405
	.byte	17
	.word	3483
	.byte	13
	.byte	'Os_CounterType_s',0,7,227,3,16,28,7
	.byte	'dynamic',0
	.word	3488
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3327
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	3134
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	1585
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	203
	.byte	1,2,35,25,0,4
	.byte	'Os_CounterType',0,7,234,3,3
	.word	3493
	.byte	3
	.word	3315
	.byte	17
	.word	3493
	.byte	3
	.word	3645
	.byte	4
	.byte	'CounterType',0,7,235,3,52
	.word	3650
	.byte	19
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,4
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	3676
	.byte	17
	.word	.L6-.L3
	.byte	3
	.word	3876
	.byte	4
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	3881
	.byte	13
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,7
	.byte	'match',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	3886
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	3676
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	234
	.byte	2,2,35,12,0,3
	.word	3913
	.byte	17
	.word	4006
.L6:
	.byte	13
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,7
	.byte	'dynamic',0
	.word	4011
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	3655
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	203
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	234
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	203
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	203
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	203
	.byte	1,2,35,14,0,4
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	4016
	.byte	17
	.word	4016
	.byte	3
	.word	4196
	.byte	17
	.word	3493
	.byte	3
	.word	4206
	.byte	21
	.word	1309
	.byte	21
	.word	2259
	.byte	21
	.word	2156
	.byte	21
	.word	2817
	.byte	21
	.word	2323
	.byte	21
	.word	203
	.byte	21
	.word	2817
	.byte	13
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	740
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4216
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4221
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4226
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4231
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4236
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	1842
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	1639
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	203
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4241
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	911
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	203
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4246
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	911
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	203
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	203
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	203
	.byte	1,2,35,110,0,4
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	4251
	.byte	3
	.word	271
	.byte	17
	.word	1987
	.byte	3
	.word	4707
	.byte	17
	.word	2557
	.byte	3
	.word	4717
	.byte	3
	.word	1639
	.byte	13
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	271
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	271
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	271
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	271
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	860
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	203
	.byte	1,2,35,92,0,4
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	4732
	.byte	4
	.byte	'Can_TxObjPriorityClassType',0,8,219,3,16
	.word	271
	.byte	13
	.byte	'Can_TxHwObjectConfigType',0,8,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	203
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	271
	.byte	4,2,35,4,0,4
	.byte	'Can_TxHwObjectConfigType',0,8,252,3,3
	.word	5009
	.byte	13
	.byte	'Can_RxHwObjectConfigType',0,8,129,4,16,12,7
	.byte	'MaskRef',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	203
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	203
	.byte	1,2,35,9,0,4
	.byte	'Can_RxHwObjectConfigType',0,8,147,4,3
	.word	5145
	.byte	10,4
	.word	203
	.byte	11,3,0,13
	.byte	'Can_ControllerMOMapConfigType',0,8,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	5285
	.byte	4,2,35,0,0,4
	.byte	'Can_ControllerMOMapConfigType',0,8,184,4,3
	.word	5294
	.byte	13
	.byte	'Can_NPCRValueType',0,8,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	234
	.byte	2,2,35,0,0,4
	.byte	'Can_NPCRValueType',0,8,191,4,3
	.word	5395
	.byte	13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	234
	.byte	2,2,35,4,0,4
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,198,4,3
	.word	5470
	.byte	17
	.word	5470
	.byte	3
	.word	5635
	.byte	13
	.byte	'Can_BaudrateConfigPtrType',0,8,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5640
	.byte	4,2,35,0,0,4
	.byte	'Can_BaudrateConfigPtrType',0,8,204,4,3
	.word	5645
	.byte	13
	.byte	'Can_EventHandlingType',0,8,226,4,16,4,7
	.byte	'CanEventType',0
	.word	5285
	.byte	4,2,35,0,0,4
	.byte	'Can_EventHandlingType',0,8,229,4,3
	.word	5745
	.byte	4
	.byte	'Rte_TransformerErrorCode',0,9,130,1,15
	.word	203
	.byte	4
	.byte	'Rte_TransformerClass',0,9,131,1,15
	.word	203
	.byte	6,9,168,1,9,12,7
	.byte	'in',0
	.word	1585
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	1585
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	234
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	203
	.byte	1,2,35,10,0,4
	.byte	'Rte_QDynType',0,9,173,1,3
	.word	5891
	.byte	8,9,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,4
	.byte	'Rte_NotificationType',0,9,182,1,3
	.word	5978
	.byte	3
	.word	5891
	.byte	13
	.byte	'Rte_QCmnType',0,9,184,1,16,24,7
	.byte	'dynamic',0
	.word	6076
	.byte	4,2,35,0,7
	.byte	'copy',0
	.word	203
	.byte	1,2,35,4,7
	.byte	'queue_size',0
	.word	234
	.byte	2,2,35,6,7
	.byte	'element_size',0
	.word	234
	.byte	2,2,35,8,7
	.byte	'buffer_start',0
	.word	1585
	.byte	4,2,35,12,7
	.byte	'buffer_end',0
	.word	1585
	.byte	4,2,35,16,7
	.byte	'notification_type',0
	.word	5978
	.byte	4,2,35,20,0,4
	.byte	'Rte_QCmnType',0,9,192,1,3
	.word	6081
	.byte	4
	.byte	'Rte_AlarmRefType',0,9,224,1,32
	.word	271
	.byte	4
	.byte	'Rte_AlarmIndexType',0,9,226,1,32
	.word	234
	.byte	10,128,8
	.word	203
	.byte	11,255,7,0,4
	.byte	'Impl_NVM_DstPtrType_1024',0,10,50,15
	.word	6319
	.byte	4
	.byte	'CanIf_u32_impl',0,10,69,16
	.word	271
	.byte	4
	.byte	'CanIf_u16_impl',0,10,71,16
	.word	234
	.byte	4
	.byte	'CanIf_u8_impl',0,10,73,15
	.word	203
	.byte	4
	.byte	'CanIf_ControllerModeType_Enum_impl',0,10,88,15
	.word	203
	.byte	4
	.byte	'CanIf_PduModeType_Enum_impl',0,10,90,15
	.word	203
	.byte	6,10,92,9,2,7
	.byte	'DeviceMode',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	203
	.byte	1,2,35,1,0,4
	.byte	'CanIf_ControllerStateType_struct_impl',0,10,95,3
	.word	6510
	.byte	4
	.byte	'CanIf_NotifStatusType_Enum_impl',0,10,100,15
	.word	203
	.byte	4
	.byte	'CanSM_boolean_Impl',0,10,120,15
	.word	203
	.byte	4
	.byte	'CanSM_u8_Impl',0,10,123,15
	.word	203
	.byte	4
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,10,128,1,15
	.word	203
	.byte	4
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,10,132,1,15
	.word	203
	.byte	4
	.byte	'CanSM_u16_Impl',0,10,136,1,16
	.word	234
	.byte	4
	.byte	'CanSM_TimerStateType_Enum_impl',0,10,138,1,15
	.word	203
	.byte	6,10,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	234
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	203
	.byte	1,2,35,2,0,4
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,10,143,1,3
	.word	6851
	.byte	4
	.byte	'Com_impl_u16',0,10,154,1,16
	.word	234
	.byte	4
	.byte	'Com_impl_u8',0,10,157,1,15
	.word	203
	.byte	4
	.byte	'ComM_uint32_Impl',0,10,173,1,16
	.word	271
	.byte	4
	.byte	'ComM_uint16_Impl',0,10,175,1,16
	.word	234
	.byte	4
	.byte	'ComM_uint8_Impl',0,10,177,1,15
	.word	203
	.byte	4
	.byte	'ComM_bool_Impl',0,10,179,1,15
	.word	203
	.byte	6,10,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	234
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	203
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	203
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	203
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	203
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	203
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	203
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	203
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	203
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	203
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	203
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	203
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	203
	.byte	1,2,35,21,0,4
	.byte	'ComM_ChannelStruct_Impl',0,10,197,1,3
	.word	7083
	.byte	6,10,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	234
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	234
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	203
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	203
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	203
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	203
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	203
	.byte	1,2,35,8,0,4
	.byte	'ComM_UserStruct_Impl',0,10,214,1,3
	.word	7587
	.byte	4
	.byte	'Dcm_IOOperationResponseType',0,10,252,1,15
	.word	203
	.byte	4
	.byte	'Dcm_NegativeResponseCodeType',0,10,132,2,15
	.word	203
	.byte	4
	.byte	'Dcm_OpStatusType',0,10,134,2,15
	.word	203
	.byte	4
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	10,138,2,15
	.word	203
	.byte	4
	.byte	'Dcm_SecLevelType',0,10,142,2,15
	.word	203
	.byte	4
	.byte	'Dcm_SesCtrlType',0,10,144,2,15
	.word	203
	.byte	4
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,10,146,2,15
	.word	203
	.byte	4
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,10,150,2,15
	.word	203
	.byte	4
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,10,154,2,15
	.word	203
	.byte	4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,10,243,3,34
	.word	6330
	.byte	10,128,8
	.word	203
	.byte	11,255,7,0,4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,10,246,3,34
	.word	6330
	.byte	4
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,11,37,15
	.word	203
	.byte	4
	.byte	'Dcm_MsgItemType',0,12,182,2,15
	.word	203
	.byte	3
	.word	203
	.byte	4
	.byte	'Dcm_MsgType',0,12,188,2,57
	.word	8594
	.byte	4
	.byte	'Dcm_MsgLenType',0,12,197,2,16
	.word	271
	.byte	6,12,206,2,9,4,7
	.byte	'reqType',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'suppressPosResponse',0
	.word	203
	.byte	1,2,35,1,7
	.byte	'sourceofRequest',0
	.word	203
	.byte	1,2,35,2,0,4
	.byte	'Dcm_MsgAddInfoType',0,12,219,2,2
	.word	8644
	.byte	4
	.byte	'Dcm_IdContextType',0,12,225,2,15
	.word	203
	.byte	6,12,238,5,9,32,7
	.byte	'tx_buffer_pa',0
	.word	8599
	.byte	4,2,35,0,7
	.byte	'rx_mainBuffer_pa',0
	.word	8599
	.byte	4,2,35,4,7
	.byte	'tx_buffer_size_u32',0
	.word	271
	.byte	4,2,35,8,7
	.byte	'rx_buffer_size_u32',0
	.word	271
	.byte	4,2,35,12,7
	.byte	'dataP2TmrAdjust',0
	.word	271
	.byte	4,2,35,16,7
	.byte	'dataP2StarTmrAdjust',0
	.word	271
	.byte	4,2,35,20,7
	.byte	'protocolid_u8',0
	.word	203
	.byte	1,2,35,24,7
	.byte	'sid_tableid_u8',0
	.word	203
	.byte	1,2,35,25,7
	.byte	'premption_level_u8',0
	.word	203
	.byte	1,2,35,26,7
	.byte	'pduinfo_idx_u8',0
	.word	203
	.byte	1,2,35,27,7
	.byte	'nrc21_b',0
	.word	203
	.byte	1,2,35,28,7
	.byte	'sendRespPendTransToBoot',0
	.word	203
	.byte	1,2,35,29,0,4
	.byte	'Dcm_Dsld_protocol_tableType',0,12,143,6,2
	.word	8777
	.byte	3
	.word	203
	.byte	15,1,1,16
	.word	203
	.byte	16
	.word	234
	.byte	16
	.word	234
	.byte	16
	.word	203
	.byte	0,3
	.word	9133
	.byte	4
	.byte	'Dcm_ConfirmationApiType',0,12,145,6,16
	.word	9157
	.byte	3
	.word	203
	.byte	22
	.word	203
	.byte	1,1,16
	.word	9195
	.byte	16
	.word	203
	.byte	16
	.word	203
	.byte	0,3
	.word	9200
	.byte	6,12,240,2,9,28,7
	.byte	'resData',0
	.word	8599
	.byte	4,2,35,0,7
	.byte	'reqData',0
	.word	8599
	.byte	4,2,35,4,7
	.byte	'msgAddInfo',0
	.word	8644
	.byte	4,2,35,8,7
	.byte	'resDataLen',0
	.word	271
	.byte	4,2,35,12,7
	.byte	'reqDataLen',0
	.word	271
	.byte	4,2,35,16,7
	.byte	'resMaxDataLen',0
	.word	271
	.byte	4,2,35,20,7
	.byte	'idContext',0
	.word	203
	.byte	1,2,35,24,7
	.byte	'dcmRxPduId',0
	.word	234
	.byte	2,2,35,26,0,3
	.word	9228
	.byte	22
	.word	203
	.byte	1,1,16
	.word	203
	.byte	16
	.word	9391
	.byte	16
	.word	9195
	.byte	0,3
	.word	9396
	.byte	6,12,158,6,9,20,7
	.byte	'allowed_session_b32',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	9223
	.byte	4,2,35,8,7
	.byte	'SubFunc_fp',0
	.word	9419
	.byte	4,2,35,12,7
	.byte	'subservice_id_u8',0
	.word	203
	.byte	1,2,35,16,7
	.byte	'isDspRDTCSubFnc_b',0
	.word	203
	.byte	1,2,35,17,0,4
	.byte	'Dcm_Dsld_SubServiceType',0,12,169,6,2
	.word	9424
	.byte	17
	.word	9424
	.byte	3
	.word	9636
	.byte	22
	.word	203
	.byte	1,1,16
	.word	9195
	.byte	16
	.word	203
	.byte	0,3
	.word	9646
	.byte	6,12,186,6,9,36,7
	.byte	'allowed_session_b32',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	271
	.byte	4,2,35,4,7
	.byte	'service_handler_fp',0
	.word	9419
	.byte	4,2,35,8,7
	.byte	'Service_init_fp',0
	.word	999
	.byte	4,2,35,12,7
	.byte	'sid_u8',0
	.word	203
	.byte	1,2,35,16,7
	.byte	'subfunction_exist_b',0
	.word	203
	.byte	1,2,35,17,7
	.byte	'servicelocator_b',0
	.word	203
	.byte	1,2,35,18,7
	.byte	'ptr_subservice_table_pcs',0
	.word	9641
	.byte	4,2,35,20,7
	.byte	'num_sf_u8',0
	.word	203
	.byte	1,2,35,24,7
	.byte	'adrUserServiceModeRule_pfct',0
	.word	9664
	.byte	4,2,35,28,7
	.byte	'Dcm_ConfirmationService',0
	.word	9162
	.byte	4,2,35,32,0,4
	.byte	'Dcm_Dsld_ServiceType',0,12,204,6,3
	.word	9669
	.byte	3
	.word	9133
	.byte	17
	.word	9669
	.byte	3
	.word	10017
	.byte	6,12,218,6,9,8,7
	.byte	'ptr_service_table_pcs',0
	.word	10022
	.byte	4,2,35,0,7
	.byte	'num_services_u8',0
	.word	203
	.byte	1,2,35,4,7
	.byte	'nrc_sessnot_supported_u8',0
	.word	203
	.byte	1,2,35,5,7
	.byte	'cdtc_index_u8',0
	.word	203
	.byte	1,2,35,6,0,4
	.byte	'Dcm_Dsld_sid_tableType',0,12,224,6,3
	.word	10027
	.byte	6,12,238,6,9,14,7
	.byte	'protocol_num_u8',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'txpduid_num_u8',0
	.word	234
	.byte	2,2,35,2,7
	.byte	'roetype2_txpdu_u8',0
	.word	234
	.byte	2,2,35,4,7
	.byte	'rdpitype2_txpdu_u8',0
	.word	234
	.byte	2,2,35,6,7
	.byte	'testaddr_u16',0
	.word	234
	.byte	2,2,35,8,7
	.byte	'channel_idx_u8',0
	.word	203
	.byte	1,2,35,10,7
	.byte	'ConnectionIndex_u8',0
	.word	203
	.byte	1,2,35,11,7
	.byte	'NumberOfTxpdu_u8',0
	.word	203
	.byte	1,2,35,12,0,4
	.byte	'Dcm_Dsld_connType',0,12,248,6,3
	.word	10179
	.byte	8,12,146,7,9,4,9
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,9
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,9
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,4
	.byte	'Dcm_Dsld_commodeType',0,12,151,7,2
	.word	10417
	.byte	8,13,200,1,9,4,9
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,9
	.byte	'USE_ASYNCH_FNC',0,1,0,4
	.byte	'DcmDspSecurityUsePort',0,13,204,1,2
	.word	10529
	.byte	8,14,22,9,4,9
	.byte	'DCM_NO_BOOT',0,0,9
	.byte	'DCM_OEM_BOOT',0,1,9
	.byte	'DCM_SYS_BOOT',0,2,0,4
	.byte	'Dcm_SessionForBootType',0,14,27,2
	.word	10611
	.byte	8,15,192,3,9,4,9
	.byte	'DCM_READ_OK',0,0,9
	.byte	'DCM_READ_FAILED',0,1,9
	.byte	'DCM_READ_PENDING',0,2,9
	.byte	'DCM_READ_FORCE_RCRRP',0,3,9
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,4
	.byte	'Dcm_ReadMemoryRet_t',0,15,199,3,3
	.word	10692
	.byte	4
	.byte	'Rte_TaskRefType',0,16,184,1,32
	.word	2817
	.byte	4
	.byte	'Rte_EventRefType',0,16,185,1,32
	.word	203
	.byte	4
	.byte	'Rte_EventType',0,16,186,1,32
	.word	271
	.byte	4
	.byte	'Rte_REActCounterType',0,16,252,1,15
	.word	203
	.byte	3
	.word	203
	.byte	4
	.byte	'Rte_REActCounterRefType',0,16,253,1,58
	.word	10931
	.byte	6,16,255,1,9,8,7
	.byte	'task',0
	.word	10827
	.byte	4,2,35,0,7
	.byte	'acnt',0
	.word	10936
	.byte	4,2,35,4,0,4
	.byte	'Rte_REContainerType',0,16,130,2,3
	.word	10969
	.byte	17
	.word	2557
	.byte	3
	.word	11033
	.byte	3
	.word	203
	.byte	17
	.word	10969
	.byte	3
	.word	11048
	.byte	4
	.byte	'Rte_REContainerRefType',0,16,132,2,60
	.word	11053
	.byte	4
	.byte	'Rte_MSICounterType',0,16,149,2,16
	.word	234
	.byte	3
	.word	234
	.byte	4
	.byte	'Rte_MSICounterRefType',0,16,150,2,56
	.word	11118
	.byte	4
	.byte	'Rte_MSIPendingFlagType',0,16,152,2,17
	.word	203
	.byte	3
	.word	203
	.byte	4
	.byte	'Rte_MSIPendingFlagRefType',0,16,153,2,60
	.word	11186
	.byte	6,16,163,2,9,24,7
	.byte	'counter',0
	.word	11123
	.byte	4,2,35,0,7
	.byte	'incCounter',0
	.word	203
	.byte	1,2,35,4,7
	.byte	'pending',0
	.word	11191
	.byte	4,2,35,8,7
	.byte	'osTask',0
	.word	10827
	.byte	4,2,35,12,7
	.byte	'acnt',0
	.word	10936
	.byte	4,2,35,16,7
	.byte	'osEvent',0
	.word	203
	.byte	1,2,35,20,7
	.byte	'MSIInit',0
	.word	234
	.byte	2,2,35,22,0,4
	.byte	'Rte_MSITableEntry',0,16,172,2,3
	.word	11226
	.byte	3
	.word	234
	.byte	3
	.word	203
	.byte	4
	.byte	'Rte_TaskArrayIndex',0,16,179,2,16
	.word	203
	.byte	4
	.byte	'Rte_NrWaitingTasks',0,16,180,2,16
	.word	203
	.byte	6,16,182,2,9,4,7
	.byte	'pending',0
	.word	203
	.byte	1,2,35,0,7
	.byte	'count',0
	.word	203
	.byte	1,2,35,1,7
	.byte	'firstWaitingTask',0
	.word	203
	.byte	1,2,35,2,0,4
	.byte	'Rte_WaitableDatum',0,16,186,2,3
	.word	11444
	.byte	3
	.word	11444
	.byte	6,16,226,2,9,12,7
	.byte	'event_id',0
	.word	271
	.byte	4,2,35,0,7
	.byte	'wd',0
	.word	11536
	.byte	4,2,35,4,7
	.byte	'timeout',0
	.word	271
	.byte	4,2,35,8,0,4
	.byte	'Rte_WOWP_NotificationType',0,16,230,2,3
	.word	11541
	.byte	17
	.word	11541
	.byte	3
	.word	11630
	.byte	4
	.byte	'Rte_WOWP_NotificationRefType',0,16,232,2,66
	.word	11635
	.byte	4
	.byte	'Rte_ARE_NotificationType',0,16,234,2,29
	.word	10969
	.byte	13
	.byte	'Rte_QTaskType',0,16,243,2,16,28,7
	.byte	'cmn',0
	.word	6081
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	10827
	.byte	4,2,35,24,0,4
	.byte	'Rte_QTaskType',0,16,246,2,3
	.word	11712
	.byte	13
	.byte	'Rte_QREType',0,16,250,2,16,28,7
	.byte	'cmn',0
	.word	6081
	.byte	24,2,35,0,7
	.byte	're',0
	.word	11058
	.byte	4,2,35,24,0,4
	.byte	'Rte_QREType',0,16,253,2,3
	.word	11783
	.byte	17
	.word	10969
	.byte	3
	.word	11848
	.byte	13
	.byte	'Rte_QWWPType',0,16,129,3,16,28,7
	.byte	'cmn',0
	.word	6081
	.byte	24,2,35,0,7
	.byte	'wwp',0
	.word	11640
	.byte	4,2,35,24,0,4
	.byte	'Rte_QWWPType',0,16,132,3,3
	.word	11858
	.byte	17
	.word	11541
	.byte	3
	.word	11926
	.byte	13
	.byte	'Rte_QEvType',0,16,136,3,16,36,7
	.byte	'cmn',0
	.word	6081
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	10827
	.byte	4,2,35,24,7
	.byte	'mask',0
	.word	203
	.byte	1,2,35,28,7
	.byte	'acnt',0
	.word	10936
	.byte	4,2,35,32,0,4
	.byte	'Rte_QEvType',0,16,141,3,3
	.word	11936
	.byte	13
	.byte	'Rte_QMSIType',0,16,145,3,16,48,7
	.byte	'cmn',0
	.word	6081
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	10827
	.byte	4,2,35,24,7
	.byte	'mask',0
	.word	203
	.byte	1,2,35,28,7
	.byte	'acnt',0
	.word	10936
	.byte	4,2,35,32,7
	.byte	'msiCounter',0
	.word	11123
	.byte	4,2,35,36,7
	.byte	'msiPending',0
	.word	11191
	.byte	4,2,35,40,7
	.byte	'msiLimit',0
	.word	234
	.byte	2,2,35,44,0,4
	.byte	'Rte_QMSIType',0,16,153,3,3
	.word	12031
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,1,1,11,15,73,19,0,0,11,33,0,47,15,0,0
	.byte	12,21,0,54,15,39,12,0,0,13,19,1,3,8,58,15,59,15,57,15,11,15,0,0,14,59,0,3,8,0,0,15,21,1,54,15,39,12,0
	.byte	0,16,5,0,73,19,0,0,17,38,0,73,19,0,0,18,23,1,58,15,59,15,57,15,11,15,0,0,19,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,20,21,0,73,19,54,15,39,12,0,0,21,53,0,73,19,0,0,22,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Roe.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     3  #include "DcmDspUds_Roe_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     4  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     5  #if(DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     6  #include "DcmDspUds_Roe_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     7  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     8  #if(DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	     9  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    10  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    11  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    12  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    13   VAR (uint8,DCM_VAR) Dcm_RoeDidIdx_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    14  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    15  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    16  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    17  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    18  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    19  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    20  static VAR(Dcm_DspRoeState_ten, DCM_VAR) Dcm_stDspRoeState_en;                  /* State for ROE state machine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    21  static VAR(Dcm_DspRoeEventState_ten, DCM_VAR) s_DcmOldRoeDtcState;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    22  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    23  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    24  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    25  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    26  static VAR(uint8,  DCM_VAR) Dcm_stRoeEventWindowTime_u8; /* Variable to store the Roe Event window Time */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    27  static VAR(uint8, DCM_VAR) Dcm_stEventType_u8; /* Variable to store the Roe Event Type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    28  static VAR(Dcm_OpStatusType,  DCM_VAR) Dcm_stRoeOpstatus_u8; /* Variable to store the Roe Opstatus*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    29  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    30  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    31  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    32  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    33  static VAR(boolean,     DCM_VAR) Dcm_stDspRoeStorageState_b; /* Variable to store the storage bit information */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    34  static VAR(boolean,     DCM_VAR) Dcm_stDspRoeDidOpStatusIsPending_b; /* Variable to store the storage bit information */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    35  static VAR(boolean,     DCM_VAR) Dcm_stDspRoeDtcOpStatusIsPending_b; /* Variable to store the storage bit information */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    36  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    37  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    38  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    39  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    40  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    41  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    42  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    43  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    44   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    45   * Dcm_StoreRoeDidEventInfo:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    46   * This function is used to provide relevant information to the application.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    47   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    48   * \parameters           dataDoeDidIdx_u8 : Index of the current ROE DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    49   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    50   * \return value         Std_ReturnType :   E_OK: Storing the ROE DTC Info is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    51   *                                          DCM_E_PENDING: Need more time to store the ROE DTC Info
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    52   *                                          E_NOT_OK: Storing the ROE DTC Info is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    53   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    54   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    55   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    56  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    57  static FUNC(Std_ReturnType,DCM_CODE) Dcm_StoreRoeDidEventInfo(VAR(Std_ReturnType, AUTOMATIC) dataDoeDidIdx_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    58          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    59  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    60      VAR(Std_ReturnType,AUTOMATIC) dataRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    61  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    62      if(Dcm_stDspRoeDidOpStatusIsPending_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    63      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    64          /*Inform application regarding the status  change*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    65  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    66          (*(DcmDspRoeDidEvents[dataDoeDidIdx_u8].ROEDID_fp))(DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].RoeEventStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    67  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    68          DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDidEvents[dataDoeDidIdx_u8].RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    69                  DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].RoeEventStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    70  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    71          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    72  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    73      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    74  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    75      dataRetValue_u8=DcmAppl_DcmStoreRoeDidInfo( DcmDspRoeDidEvents[dataDoeDidIdx_u8].RoeEventDid_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    76              DcmDspRoeDidEvents[dataDoeDidIdx_u8].RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    77              DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].RoeEventStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    78              DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].SourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    79              DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    80              Dcm_stRoeOpstatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    81              DcmDspRoeDidStateVariables[dataDoeDidIdx_u8].stDspRoeSessionIsDefault_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    82              dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    83  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    84      if(dataRetValue_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    85      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    86          dataRetValue_u8 = E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    87          *dataNegRespCode_u8 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    88          Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    89          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    90  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    91      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    92      else if(dataRetValue_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    93      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    94          dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    95          Dcm_stDspRoeDidOpStatusIsPending_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    96          Dcm_stRoeOpstatus_u8=DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    97          *dataNegRespCode_u8 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    98          /* Nothing to do. Service will be called again in next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	    99      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   100      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   101      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   102          dataRetValue_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   103          Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   104          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   105          if(*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   106          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   107              /* Set the negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   108              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   109          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   110          /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   111          Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   112      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   113      return dataRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   114  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   115  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   116   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   117   * Dcm_ControlRoeDidEventType:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   118   * This function is called when the event type is of Control Event Type (start/stop/clear ROE).
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   119   * \parameters           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   120   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   121   * \return value         Std_ReturnType :   E_OK: Storing the ROE DID Info is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   122   *                                          DCM_E_PENDING: Need more time to store the ROE DID Info
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   123   *                                          E_NOT_OK: Storing the ROE DID Info is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   124   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   125   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   126   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   127  static FUNC(Std_ReturnType,DCM_CODE) Dcm_ControlRoeDidEventType(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   128          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   129  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   130  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   131      VAR(boolean, AUTOMATIC) dataStoreEventInfo_b; /*Local variable to chk if event of Did in the loop was either
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   132                                                      started/stopped/cleared*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   133      VAR(Dcm_SesCtrlType,AUTOMATIC) dataCurrentSession_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   134      VAR(uint8, AUTOMATIC) dataidxLoop_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   135      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   136      /*Loop through all the ROE dids and obtain the RoeEventStatus from the application */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   137      VAR(Dcm_DspRoeEventState_ten, AUTOMATIC) dataRoeEvtStatus_u8 = DCM_ROE_CLEARED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   138      dataReturnVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   139      dataStoreEventInfo_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   140      *dataNegRespCode_u8 =0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   141      /*Initialise the loop variable based on the operation status*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   142      dataidxLoop_u8 = (Dcm_stDspRoeDidOpStatusIsPending_b == FALSE) ? 0x0u : Dcm_RoeDidIdx_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   143      /*Get the current active session */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   144      dataCurrentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.idxActiveSession_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   145      for(;((dataidxLoop_u8<DCM_MAX_DIDROEEVENTS) && (*dataNegRespCode_u8 == 0x0u));dataidxLoop_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   146      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   147          if(Dcm_stDspRoeDidOpStatusIsPending_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   148          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   149              switch(Dcm_stEventType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   150  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   151              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   152                  case DCM_ROE_STOP:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   153                  if(DCM_ROE_STARTED == DcmDspRoeDidStateVariables[dataidxLoop_u8].RoeEventStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   154                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   155                      dataRoeEvtStatus_u8=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   156                      /*event of Did in the loop was set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   157                      dataStoreEventInfo_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   158                      DcmDspRoeDidStateVariables[dataidxLoop_u8].stDspRoeSessionIsDefault_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   159                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   160                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   161                  case DCM_ROE_START:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   162                  if(DCM_ROE_STOPPED == DcmDspRoeDidStateVariables[dataidxLoop_u8].RoeEventStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   163                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   164                      dataRoeEvtStatus_u8=DCM_ROE_STARTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   165                      /*event of Did in the loop was started*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   166                      dataStoreEventInfo_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   167                      /* If the current session flag is Default session, Set the Session flag to true */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   168                      DcmDspRoeDidStateVariables[dataidxLoop_u8].stDspRoeSessionIsDefault_b =
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   169                              (dataCurrentSession_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX]) ? TRUE:FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   170                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   171                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   172                  case DCM_ROE_CLEAR:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   173                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   174                      dataRoeEvtStatus_u8 = DCM_ROE_CLEARED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   175                      /*event of Did in the loop was cleared*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   176                      dataStoreEventInfo_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   177                      DcmDspRoeDidStateVariables[dataidxLoop_u8].stDspRoeSessionIsDefault_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   178                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   179                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   180                  default:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   181                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   182                      /* do nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   183                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   184                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   185              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   186          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   187          /*Check if any of the DID event has changed the status*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   188          if((dataStoreEventInfo_b != FALSE) ||(Dcm_stDspRoeDidOpStatusIsPending_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   189          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   190              DcmDspRoeDidStateVariables[dataidxLoop_u8].RoeEventStatus=dataRoeEvtStatus_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   191              DcmDspRoeDidStateVariables[dataidxLoop_u8].SourceAddress_u16=
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   192                      Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldMsgContext_st.dcmRxPduId]].testaddr_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   193              DcmDspRoeDidStateVariables[dataidxLoop_u8].stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   194              /*inform application regarding the status change of the event and store the information in the NVM
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   195                via application*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   196              dataReturnVal_u8 = Dcm_StoreRoeDidEventInfo(dataidxLoop_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   197  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   198              if(dataReturnVal_u8 != E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   199              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   200                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   201              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   202          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   203      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   204      Dcm_RoeDidIdx_u8 = (dataReturnVal_u8 == DCM_E_PENDING) ? dataidxLoop_u8 : Dcm_RoeDidIdx_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   205      return (dataReturnVal_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   206  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   207  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   208   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   209   * Dcm_SetUpRoeDidEvent:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   210   * This function is called to Setup OnChangeOfDataIdentifier Event Type request.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   211   * \parameters           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   212   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   213   * \return value         Std_ReturnType :   E_OK: Registering the ROE DID is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   214   *                                          DCM_E_PENDING: Need more time to register the ROE DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   215   *                                          E_NOT_OK: Registering the ROE DID is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   216   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   217   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   218   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   219  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   220  static FUNC(Std_ReturnType,DCM_CODE) Dcm_SetUpRoeDidEvent(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   221          P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   222          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   223  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   224      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   225      VAR(uint16, AUTOMATIC) dataRoeDid_u16; /* Local variable to store Response Length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   226      VAR(uint16, AUTOMATIC) StoreVar_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   227      VAR(uint8, AUTOMATIC) dataidxLoop_u8; /* Index for loop counter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   228      Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   229      dataReturnVal_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   230  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   231      /*Extract the DID information from the request*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   232      StoreVar_u16=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   233      StoreVar_u16=StoreVar_u16<<8u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   234      StoreVar_u16+=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD+1u]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   235      dataRoeDid_u16=StoreVar_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   236      if(Dcm_stDspRoeDidOpStatusIsPending_b != TRUE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   237      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   238          /*Check if the DID is enabled for ROE monitoring*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   239          for(dataidxLoop_u8=0;dataidxLoop_u8<DCM_MAX_DIDROEEVENTS;dataidxLoop_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   240          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   241              if(dataRoeDid_u16 == DcmDspRoeDidEvents[dataidxLoop_u8].RoeEventDid_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   242              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   243                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   244              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   245          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   246  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   247      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   248      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   249      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   250          dataidxLoop_u8 = Dcm_RoeDidIdx_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   251      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   252      if(dataidxLoop_u8<DCM_MAX_DIDROEEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   253      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   254          /* Call the API to register the events */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   255          dataReturnVal_u8 = DcmAppl_DcmSetUpRoeEvent(DcmDspRoeDidEvents[dataidxLoop_u8].RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   256                  Dcm_stEventType_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   257                  Dcm_stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   258                  Dcm_stRoeEventWindowTime_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   259                  &pMsgContext->reqData[DCM_ROE_POSEVENTRECORD],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   260                  &pMsgContext->reqData[DCM_ROE_POSDIDSRVTORESPTORECORD],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   261                  Dcm_stRoeOpstatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   262                  dataNegRespCode_u8 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   263          /* The events are registered */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   264          if(dataReturnVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   265          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   266              *dataNegRespCode_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   267              Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   268              Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   269  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   270              /*DID is configured for ROE monitoring*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   271              DcmDspRoeDidStateVariables[dataidxLoop_u8].stRoeEventWindowTime_u8 = Dcm_stRoeEventWindowTime_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   272              StoreVar_u16=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   273              StoreVar_u16=StoreVar_u16<<8u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   274              StoreVar_u16+=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD+1u]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   275              DcmDspRoeDidStateVariables[dataidxLoop_u8].stRoeEventRecord_u16=StoreVar_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   276              StoreVar_u16=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD+3u]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   277              StoreVar_u16=StoreVar_u16<<8u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   278              StoreVar_u16+=(uint16)(pMsgContext->reqData[DCM_ROE_POSEVENTRECORD+4u]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   279              DcmDspRoeDidStateVariables[dataidxLoop_u8].stSrvToRespDid_u16=StoreVar_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   280  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   281              /*Move the event status to DCM_ROE_STOPPED*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   282              DcmDspRoeDidStateVariables[dataidxLoop_u8].RoeEventStatus=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   283              DcmDspRoeDidStateVariables[dataidxLoop_u8].stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   284  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   285              (*(DcmDspRoeDidEvents[dataidxLoop_u8].ROEDID_fp))(DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   286  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   287              DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDidEvents[dataidxLoop_u8].RoeEventId_u8,DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   288              /* Fill the response buffer with the event and service record parameters */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   289              for(dataidxLoop_u8=(uint8)(pMsgContext->reqDataLen-1u); dataidxLoop_u8 > 0u; dataidxLoop_u8--)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   290              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   291                  /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   292                  pMsgContext->resData[dataidxLoop_u8+0x1u] = pMsgContext->reqData[dataidxLoop_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   293              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   294              /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   295              pMsgContext->resData[0x1] = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   296              pMsgContext->resData[0x0] = pMsgContext->reqData[DCM_DSP_ROE_POSEVENT];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   297              pMsgContext->resDataLen = (pMsgContext->reqDataLen+0x1u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   298              /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   299              Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   300  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   301          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   302          else if(dataReturnVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   303          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   304              /* Nothing to do, service will be called again */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   305              Dcm_stDspRoeDidOpStatusIsPending_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   306              *dataNegRespCode_u8 =0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   307              Dcm_stRoeOpstatus_u8=DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   308              Dcm_RoeDidIdx_u8 =dataidxLoop_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   309  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   310          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   311          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   312          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   313              Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   314              Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   315              if(*dataNegRespCode_u8 == 0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   316              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   317                  /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   318                  *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   319              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   320          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   321      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   322      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   323      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   324          /*DID is not configured set NRC 31*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   325          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   326      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   327      return dataReturnVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   328  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   329  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   330  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   331  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   332  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   333  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   334   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   335   * Dcm_SetUpRoeDtcEvent:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   336   * This function is called to Setup OnDTCStatusChange Event Type request..
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   337   * \parameters           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   338   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   339   * \return value         Std_ReturnType :   E_OK: Registering the ROE Dtc is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   340   *                                          DCM_E_PENDING: Need more time to register the ROE Dtc
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   341   *                                          E_NOT_OK: Registering the ROE Dtc is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   342   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   343   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   344   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   345  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   346  static FUNC(Std_ReturnType,DCM_CODE) Dcm_SetUpRoeDtcEvent(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   347          P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   348          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   349  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   350      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   351      VAR(uint8, AUTOMATIC) dataidxLoop_u8; /* Index for loop counter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   352  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   353      dataReturnVal_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   354  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   355      /* Call the API to register the events */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   356      dataReturnVal_u8 = DcmAppl_DcmSetUpRoeEvent(DcmDspRoeDtcEvent.RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   357              Dcm_stEventType_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   358              Dcm_stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   359              Dcm_stRoeEventWindowTime_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   360              &pMsgContext->reqData[DCM_ROE_POSEVENTRECORD],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   361              &pMsgContext->reqData[DCM_ROE_POSDTCSRVTORESPTORECORD],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   362              Dcm_stRoeOpstatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   363              dataNegRespCode_u8 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   364      /* The events are registered */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   365      if(dataReturnVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   366      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   367          *dataNegRespCode_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   368          Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   369          /*Extract the DTC status mask from the request*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   370  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   371          DcmDspRoeDtcStateVariable.stRoeEventWindowTime_u8 = Dcm_stRoeEventWindowTime_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   372          DcmDspRoeDtcStateVariable.testerReqDTCStatusMask_u8=pMsgContext->reqData[DCM_ROE_POSEVENTRECORD];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   373          DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   374          DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   375          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   376  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   377          (*(DcmDspRoeDtcEvent.ROEDTC_fp))(DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   378  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   379          DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDtcEvent.RoeEventId_u8,DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   380          /* Fill the response buffer with the event and service record parameters */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   381          for(dataidxLoop_u8=(uint8)(pMsgContext->reqDataLen-1u); dataidxLoop_u8 > 0u; dataidxLoop_u8--)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   382          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   383              /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   384              pMsgContext->resData[dataidxLoop_u8+0x1u] = pMsgContext->reqData[dataidxLoop_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   385          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   386          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   387          /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   388          pMsgContext->resData[0x1] = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   389          pMsgContext->resData[0x0] = pMsgContext->reqData[DCM_DSP_ROE_POSEVENT];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   390          pMsgContext->resDataLen = (pMsgContext->reqDataLen+0x1u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   391          /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   392          Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   393      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   394      else if(dataReturnVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   395      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   396          /* Nothing to do, service will be called again */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   397          *dataNegRespCode_u8 =0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   398          Dcm_stRoeOpstatus_u8=DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   399          Dcm_stDspRoeDtcOpStatusIsPending_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   400      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   401      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   402      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   403          Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   404          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   405          if(*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   406          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   407              /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   408              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   409          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   410      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   411      return dataReturnVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   412  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   413  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   414  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   415   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   416   * Dcm_StoreRoeDtcEventInfo:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   417   * This function is used to provide relevant information to the application
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   418   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   419   * \parameters           dataReturnVal_u8 : The return type of DcmAppl_DcmStoreRoeDidInfo() is E_OK
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   420   *                                          or DCM_E_PENDING or E_NOT_OK.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   421   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   422   * \return value         Std_ReturnType :   E_OK: Storing the ROE DTC Info is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   423   *                                          DCM_E_PENDING: Need more time to store the ROE DTC Info
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   424   *                                          E_NOT_OK: Storing the ROE DTC Info is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   425   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   426   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   427   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   428  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   429  static FUNC(Std_ReturnType,DCM_CODE) Dcm_StoreRoeDtcEventInfo(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   430          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   431  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   432      VAR(Std_ReturnType,AUTOMATIC) dataRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   433  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   434      /*Request the application to store the roe event information in the Nvm*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   435      dataRetValue_u8=DcmAppl_DcmStoreRoeDTCInfo (DcmDspRoeDtcEvent.RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   436              DcmDspRoeDtcStateVariable.RoeEventStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   437              DcmDspRoeDtcStateVariable.SourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   438              DcmDspRoeDtcStateVariable.testerReqDTCStatusMask_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   439              DcmDspRoeDtcStateVariable.stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   440              Dcm_stRoeOpstatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   441              DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   442              dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   443  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   444      if(dataRetValue_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   445      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   446          dataRetValue_u8 = E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   447  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   448          if(Dcm_stDspRoeDtcOpStatusIsPending_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   449          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   450              /*Inform application regarding the status change of the ROE event*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   451  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   452              (*(DcmDspRoeDtcEvent.ROEDTC_fp))(DcmDspRoeDtcStateVariable.RoeEventStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   453  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   454              DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDtcEvent.RoeEventId_u8,DcmDspRoeDtcStateVariable.RoeEventStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   455  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   456              Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   457          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   458  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   459          *dataNegRespCode_u8 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   460          Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   461          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   462          /*Reset the service state machine and the service opstatus*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   463  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   464      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   465      else if(dataRetValue_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   466      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   467          dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   468          Dcm_stDspRoeDtcOpStatusIsPending_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   469          Dcm_stRoeOpstatus_u8=DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   470          *dataNegRespCode_u8 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   471          /* Nothing to do. Service will be called again in next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   472      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   473      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   474      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   475          dataRetValue_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   476  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   477          DcmDspRoeDtcStateVariable.RoeEventStatus = s_DcmOldRoeDtcState;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   478          Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   479          Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   480          if(*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   481          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   482              /* Set the negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   483              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   484          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   485          /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   486          Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   487      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   488      return dataRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   489  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   490  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   491   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   492   * Dcm_ControlRoeDtcEventType:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   493   * This function is called when the event type is of Control Event Type (start/stop/clear ROE)..
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   494   * \parameters           dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   495   * \return value         Std_ReturnType :   E_OK: Storing the ROE DTC Info is successful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   496   *                                          DCM_E_PENDING: Need more time to store the ROE DTC Info
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   497   *                                          E_NOT_OK: Storing the ROE DTC Info is unsuccessful
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   498   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   499   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   500   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   501  static FUNC(Std_ReturnType,DCM_CODE) Dcm_ControlRoeDtcEventType(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   502          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   503  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   504      VAR(boolean, AUTOMATIC) dataDtcStatusflag_b = FALSE; /*Local variable to chk if event of Did in the loop was
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   505                                                             either started/stopped/cleared*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   506      VAR(Dcm_SesCtrlType,AUTOMATIC) dataCurrentSession_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   507      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8 = E_NOT_OK; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   508  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   509      if ( Dcm_stDspRoeDtcOpStatusIsPending_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   510      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   511          /*Get the current active session */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   512          dataCurrentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.idxActiveSession_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   513          /*Get the Tester Source Address */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   514          DcmDspRoeDtcStateVariable.SourceAddress_u16=
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   515                  Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldMsgContext_st.dcmRxPduId]].testaddr_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   516          s_DcmOldRoeDtcState = DcmDspRoeDtcStateVariable.RoeEventStatus;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   517          /*Make sure the stop request received for a roe event is already setup or started*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   518          if((DCM_ROE_STOP==Dcm_stEventType_u8) && (DCM_ROE_STARTED==DcmDspRoeDtcStateVariable.RoeEventStatus))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   519          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   520              /*Update the Roe event varaibles*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   521              DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   522              DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   523              dataDtcStatusflag_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   524              DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   525          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   526          /*Make sure the start request received for a roe event is already setup or stopped*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   527          else if((DCM_ROE_START==Dcm_stEventType_u8) && (DCM_ROE_STOPPED==DcmDspRoeDtcStateVariable.RoeEventStatus))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   528          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   529              /*Update the Roe event varaibles*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   530              DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_STARTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   531              DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   532              dataDtcStatusflag_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   533              DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b =FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   534  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   535              /* If the current session flag is Default session, Set the Session flag to true */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   536              if(dataCurrentSession_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX])
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   537              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   538                  DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b =TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   539              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   540          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   541          else if(DCM_ROE_CLEAR == Dcm_stEventType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   542          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   543              /*Update the Roe event varaibles*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   544              DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_CLEARED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   545              DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   546              dataDtcStatusflag_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   547              DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   548  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   549          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   550          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   551          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   552              /*Do nothing flag status already updated*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   553          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   554      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   555      /*Enter only if the Dtc which was either started/stopped/cleared*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   556      if((dataDtcStatusflag_b != FALSE) || ( Dcm_stDspRoeDtcOpStatusIsPending_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   557      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   558  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   559          DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=Dcm_stDspRoeStorageState_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   560  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   561          dataReturnVal_u8 =Dcm_StoreRoeDtcEventInfo(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   562      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   563  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   564      return dataReturnVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   565  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   566  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   567  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   568  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   569  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   570   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   571   * Dcm_CheckRoeEventType:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   572   * This function is used to check if the event type is to Start/Stop/Clear event or SetUp event
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   573   * or ReportActiveEvents and assign the correct state to state machine .
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   574   * \parameters           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   575   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   576   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   577   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   578   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   579  static FUNC(void,DCM_CODE) Dcm_CheckRoeEventType(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   580  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   581      /* EventType is a control eventType (Start/Stop/Clear event) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   582      if((Dcm_stEventType_u8 == DCM_ROE_STOP) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   583              (Dcm_stEventType_u8 == DCM_ROE_START)||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   584              (Dcm_stEventType_u8 == DCM_ROE_CLEAR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   585      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   586          /* Change the state to control the event */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   587          Dcm_stDspRoeState_en = DCM_DSP_ROE_CONTROLEVENT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   588      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   589      /* EventType is OnDTCStatusChange or OnChangeOfDataIdentifier */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   590      else if((Dcm_stEventType_u8 == DCM_ROE_ONDTCSTATUSCHANGE)||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   591              (Dcm_stEventType_u8 == DCM_ROE_ONCHANGEOFDID))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   592      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   593          /* Change the state to setup an event */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   594          Dcm_stDspRoeState_en = DCM_DSP_ROE_SETUPEVENT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   595      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   596      /* EventType is ReportActivatedEvents */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   597      else if(Dcm_stEventType_u8 == DCM_ROE_REPORTACTIVEEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   598      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   599          /* Change the state to read the events activated */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   600          Dcm_stDspRoeState_en = DCM_DSP_ROE_REPORTEVENTS;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   601      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   602      /* Incorrect Event type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   603      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   604      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   605          /* The code should not reach here - dummy else */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   606      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   607  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   608  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   609   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   610   * Dcm_RoeLengthCheck:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   611   * This function is used to check if the request length received in the request is correct or not.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   612   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   613   * \parameters           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   614   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   615   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   616   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   617   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   618   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   619  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   620  static FUNC(void,DCM_CODE) Dcm_RoeLengthCheck(P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   621          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   622  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   623      VAR(uint16, AUTOMATIC) dataReqLen_u16; /* Local variable to store Response Length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   624  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   625      /* Copy event type to local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   626      Dcm_stEventType_u8 = pMsgContext->reqData[DCM_DSP_ROE_POSEVENT];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   627  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   628      /* Extract the storage state from the eventType */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   629      Dcm_stDspRoeStorageState_b = ((Dcm_stEventType_u8 & DCM_DSP_ROE_STORAGEBIT_MSK) != 0x00u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   630  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   631      /* Clear the storage state bit in the local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   632      Dcm_stEventType_u8 = (Dcm_stEventType_u8 & ((uint8)(~DCM_DSP_ROE_STORAGEBIT_MSK)));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   633  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   634      /* Set the minimum request length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   635      dataReqLen_u16 = 0x02u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   636  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   637      /* Check if the eventType sent in the request is DCM_ROE_ONCHANGEOFDID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   638      if(Dcm_stEventType_u8 == DCM_ROE_ONCHANGEOFDID)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   639      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   640          /* Calculate the actual request length considering event record length and service record length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   641          dataReqLen_u16 = (dataReqLen_u16 + DCM_DSP_ROE_DIDRECORDLEN);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   642      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   643      /* Check if the eventType sent in the request is DCM_ROE_ONDTCSTATUSCHANGE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   644      else if(Dcm_stEventType_u8 == DCM_ROE_ONDTCSTATUSCHANGE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   645      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   646          /* Calculate the actual request length considering event record length and service record length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   647          dataReqLen_u16 = (dataReqLen_u16 + DCM_DSP_ROE_DTCRECORDLEN);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   648      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   649      /* Check if the request length for an event type is correct */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   650  #if(DCM_CFG_ROE_WINTIMEINREPEVENTSREQ == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   651      /* If the event type requested is reportActiveEvents */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   652      else if(Dcm_stEventType_u8 == DCM_ROE_REPORTACTIVEEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   653      { /* Set the minimum request length to 1 byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   654          dataReqLen_u16 = DCM_DSP_ROE_MINREQLEN;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   655      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   656  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   657      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   658      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   659          /* Do nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   660      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   661      /* Check for the request length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   662      if(pMsgContext->reqDataLen == dataReqLen_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   663      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   664          /* Call Dcm_CheckRoeEventType() to check if the is Event Type is Start/Stop/Clear event or
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   665             Setup event or ReportActivatedEvents*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   666          Dcm_CheckRoeEventType();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   667      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   668      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   669      { /* The request either fails maxmimum length check or minimum length check, so set Negative response code  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   670          *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   671      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   672  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   673  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   674  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   675   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   676   * Dcm_ReportRoeEvents:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   677   * This function is called when Event Type is reportActiveEvents.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   678   * \parameters           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   679   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   680   * \return value         none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   681   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   682   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   683   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   684  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   685  static FUNC(void,DCM_CODE) Dcm_ReportRoeEvents(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   686  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   687  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   688      VAR(uint8, AUTOMATIC) idxReportEvents_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   689      VAR(uint8, AUTOMATIC) idxRoeResponse_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   690  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   691      VAR(uint8, AUTOMATIC) dataidxLoop_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   692      VAR(uint16, AUTOMATIC) dataID_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   693  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   694  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   695      idxReportEvents_u8 =0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   696      /* Initialise the response length to zero */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   697  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   698      /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   699      pMsgContext->resData[0x0] = pMsgContext->reqData[DCM_DSP_ROE_POSEVENT];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   700      idxRoeResponse_u8=0x2u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   701  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   702  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   703  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   704  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   705      /*Check if the DID is enabled for ROE monitoring*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   706      for(dataidxLoop_u8=0;(dataidxLoop_u8<DCM_MAX_DIDROEEVENTS);dataidxLoop_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   707      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   708          if(DcmDspRoeDidStateVariables[dataidxLoop_u8].RoeEventStatus == DCM_ROE_STARTED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   709          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   710              dataID_u16 = DcmDspRoeDidStateVariables[dataidxLoop_u8].stRoeEventRecord_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   711              /*Update the event type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   712              pMsgContext->resData[idxRoeResponse_u8] = DCM_ROE_ONCHANGEOFDID;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   713              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   714              /*Update the event windowtime*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   715              pMsgContext->resData[idxRoeResponse_u8] = DcmDspRoeDidStateVariables[dataidxLoop_u8].stRoeEventWindowTime_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   716              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   717              /*Update the event type record DID  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   718              pMsgContext->resData[idxRoeResponse_u8] = (uint8)(dataID_u16>>8u);/*Copy the MSB*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   719              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   720              pMsgContext->resData[idxRoeResponse_u8] =(uint8) dataID_u16;/*Copy the LSB*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   721              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   722              pMsgContext->resData[idxRoeResponse_u8] = 0x22u;/*Adding service ID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   723              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   724              pMsgContext->resData[idxRoeResponse_u8] = (uint8)(DcmDspRoeDidEvents[dataidxLoop_u8].RoeEventDid_u16>>8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   725              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   726              pMsgContext->resData[idxRoeResponse_u8] = (uint8)(DcmDspRoeDidEvents[dataidxLoop_u8].RoeEventDid_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   727              idxRoeResponse_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   728              idxReportEvents_u8++;/*Increment the counter for active events*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   729          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   730  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   731      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   732  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   733  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   734      if(DcmDspRoeDtcStateVariable.RoeEventStatus == DCM_ROE_STARTED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   735      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   736          pMsgContext->resData[idxRoeResponse_u8] = DCM_ROE_ONDTCSTATUSCHANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   737          idxRoeResponse_u8=idxRoeResponse_u8+1;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   738          pMsgContext->resData[idxRoeResponse_u8] = DcmDspRoeDtcStateVariable.stRoeEventWindowTime_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   739          idxRoeResponse_u8=idxRoeResponse_u8+1;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   740          pMsgContext->resData[idxRoeResponse_u8] = DcmDspRoeDtcStateVariable.testerReqDTCStatusMask_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   741          idxRoeResponse_u8=idxRoeResponse_u8+1;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   742          pMsgContext->resData[idxRoeResponse_u8] = 0x19u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   743          idxRoeResponse_u8=idxRoeResponse_u8+1;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   744          pMsgContext->resData[idxRoeResponse_u8] = 0x0Eu;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   745          idxRoeResponse_u8=idxRoeResponse_u8+1;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   746          idxReportEvents_u8++;/*Increment the counter for active events*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   747      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   748  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   749      pMsgContext->resData[0x1] = idxReportEvents_u8; /*  Update the number of activated events */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   750      pMsgContext->resDataLen = idxRoeResponse_u8;/*Update the response length*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   751  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   752  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   753   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   754   * Dcm_RoeCtrlConditionAndSequenceCheck:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   755   * This function is used to check if the control request leads to NRC 0x22 or 0x24 when validated
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   756   * against the existing states of the roe events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   757   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   758   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   759   * \parameters           dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   760   * \return value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   761   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   762   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   763   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   764  static FUNC(void,DCM_CODE)Dcm_RoeCtrlConditionAndSequenceCheck(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   765          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   766  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   767  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   768      VAR(uint8, AUTOMATIC) dataidxLoop_u8;/*loop varaible*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   769  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   770      if(Dcm_stEventType_u8 == DCM_ROE_START)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   771      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   772          /*multiple client handling,atleast one of the event is started already and if the new start request came
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   773            from a different protocol then the request shall be rejected with NRC 0x22*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   774  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   775  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   776          if((DCM_ROE_STARTED==DcmDspRoeDtcStateVariable.RoeEventStatus)&&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   777             (DcmDspRoeDtcStateVariable.SourceAddress_u16!=
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   778                     Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldMsgContext_st.dcmRxPduId]].testaddr_u16))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   779          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   780              *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   781          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   782  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   783  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   784  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   785          
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   786          for(dataidxLoop_u8=0x0u;((dataidxLoop_u8<DCM_MAX_DIDROEEVENTS) && (*dataNegRespCode_u8 == 0x0u));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   787                  dataidxLoop_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   788          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   789              if((DCM_ROE_STARTED==DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus)&&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   790                 (DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].SourceAddress_u16!=
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   791                         Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldMsgContext_st.dcmRxPduId]].testaddr_u16))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   792              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   793                  *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   794                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   795              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   796          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   797  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   798      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   799      /*checking request sequence error ;if start or stop is requested and if all the events are in the cleared state
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   800        NRC ox24 needs to be sent*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   801      if((Dcm_stEventType_u8 == DCM_ROE_START) ||(Dcm_stEventType_u8 == DCM_ROE_STOP))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   802      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   803  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   804          if(DcmDspRoeDtcStateVariable.RoeEventStatus==DCM_ROE_CLEARED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   805  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   806          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   807  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   808  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   809              for(dataidxLoop_u8=0x0u;dataidxLoop_u8<DCM_MAX_DIDROEEVENTS;dataidxLoop_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   810              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   811                  if(DCM_ROE_CLEARED!=DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   812                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   813                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   814                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   815              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   816              if(dataidxLoop_u8==DCM_MAX_DIDROEEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   817  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   818              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   819                  *dataNegRespCode_u8 = DCM_E_REQUESTSEQUENCEERROR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   820              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   821          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   822      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   823  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   824  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   825  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   826   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   827   * Dcm_DcmResponseOnEventIni:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   828   * Initialisation function for Response On Event Service.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   829   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   830   * \parameters           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   831   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   832   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   833   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   834   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   835  FUNC(void,DCM_CODE) Dcm_DcmResponseOnEventIni (void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   836  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   837      VAR(Dcm_NegativeResponseCodeType, AUTOMATIC) NegRespCode_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   838      if((DCM_PENDING == Dcm_stRoeOpstatus_u8) && (Dcm_stDspRoeState_en == DCM_DSP_ROE_SETUPEVENT))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   839      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   840  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   841          if (Dcm_stDspRoeDidOpStatusIsPending_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   842          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   843              /*Call DcmAppl_DcmSetUpRoeEvent with OpStatus DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   844              (void)DcmAppl_DcmSetUpRoeEvent(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   845                      Dcm_stEventType_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   846                      FALSE,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   847                      0x0u,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   848                      NULL_PTR,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   849                      NULL_PTR,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   850                      DCM_CANCEL,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   851                      &NegRespCode_u8 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   852              Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   853          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   854  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   855  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   856          if(Dcm_stDspRoeDtcOpStatusIsPending_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   857          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   858              (void)DcmAppl_DcmSetUpRoeEvent(DcmDspRoeDtcEvent.RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   859                      Dcm_stEventType_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   860                      Dcm_stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   861                      Dcm_stRoeEventWindowTime_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   862                      NULL_PTR,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   863                      NULL_PTR,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   864                      DCM_CANCEL,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   865                      &NegRespCode_u8 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   866              Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   867          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   868  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   869      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   870      else if ((DCM_PENDING == Dcm_stRoeOpstatus_u8) && (Dcm_stDspRoeState_en == DCM_DSP_ROE_CONTROLEVENT))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   871      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   872  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   873          if(Dcm_stDspRoeDidOpStatusIsPending_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   874          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   875              /*Call  DcmAppl_DcmStoreRoeDidInfo with OpStatus DCM_CANCEL*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   876              (void)DcmAppl_DcmStoreRoeDidInfo(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].RoeEventDid_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   877                      DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   878                      DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   879                      DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].SourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   880                      DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   881                      DCM_CANCEL,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   882                      DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].stDspRoeSessionIsDefault_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   883                      &NegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   884              Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   885          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   886  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   887  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   888          if(Dcm_stDspRoeDtcOpStatusIsPending_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   889          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   890              /*Call  DcmAppl_DcmStoreRDTCInfo with OpStatus DCM_CANCEL*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   891  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   892              (void)DcmAppl_DcmStoreRoeDTCInfo (DcmDspRoeDtcEvent.RoeEventId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   893                      DcmDspRoeDtcStateVariable.RoeEventStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   894                      DcmDspRoeDtcStateVariable.SourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   895                      DcmDspRoeDtcStateVariable.testerReqDTCStatusMask_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   896                      DcmDspRoeDtcStateVariable.stDspRoeStorageState_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   897                      DCM_CANCEL,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   898                      DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   899                      &NegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   900              Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   901          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   902  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   903      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   904      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   905      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   906          /* Do nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   907      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   908  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   909      Dcm_stRoeOpstatus_u8=DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   910      Dcm_stDspRoeDidOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   911      Dcm_stDspRoeDtcOpStatusIsPending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   912      /* Reset the ROE state to default state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   913      Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   914      /* Reset all the static global variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   915  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   916      Dcm_stDspRoeStorageState_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   917      (void)NegRespCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   918  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   919  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   920  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   921  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   922   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   923   * Dcm_ResetRoeOnDtcevents:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   924   * This function is used to unactivate all the Roeevents which was started iin a particular session
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   925   * before transistioning to new session.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   926   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   927   * \parameters           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   928   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   929   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   930   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   931   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   932  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   933  FUNC(void,DCM_CODE)Dcm_ResetRoeOnDtcevents(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   934  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   935      VAR(Dcm_SesCtrlType,AUTOMATIC) dataCurrentSession_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   936      dataCurrentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.idxActiveSession_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   937  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   938      DcmDspRoeDtcStateVariable.SourceAddress_u16=0xFFu;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   939      DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   940      /*Initialize the Variable to store the storage bit information is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   941      DcmDspRoeDtcStateVariable.stDspRoeStorageState_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   942      DcmDspRoeDtcStateVariable.testerReqDTCStatusMask_u8=0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   943  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   944  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   945      (*(DcmDspRoeDtcEvent.ROEDTC_fp))(DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   946  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   947      DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDtcEvent.RoeEventId_u8,DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   948  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   949      if ((DcmDspRoeDtcStateVariable.stDspRoeSessionIsDefault_b != FALSE) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   950              (dataCurrentSession_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX]))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   951      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   952          DcmDspRoeDtcStateVariable.RoeEventStatus=DCM_ROE_STARTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   953  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   954          (*(DcmDspRoeDtcEvent.ROEDTC_fp))(DCM_ROE_STARTED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   955  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   956          DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDtcEvent.RoeEventId_u8,DCM_ROE_STARTED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   957      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   958  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   959  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   960  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   961  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   962  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   963  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   964   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   965   * Dcm_ResetRoeDidevents:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   966   * This function is used to unactivate all the Roeevents which was started in a particular session
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   967   * before transistioning to new session.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   968   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   969   * \parameters           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   970   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   971   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   972   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   973   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   974  FUNC(void,DCM_CODE) Dcm_ResetRoeDidevents(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   975  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   976      VAR(Dcm_SesCtrlType,AUTOMATIC) dataCurrentSession_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   977      dataCurrentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.idxActiveSession_u8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   978  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   979      /*Loop through all the ROE dids and invoke its Xxx_activate event indicating appication that the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   980       * ROE event is unactivated because of session transtion, it needs to send one start event to
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   981       * activate the same now. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   982      Dcm_RoeDidIdx_u8=0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   983      while(Dcm_RoeDidIdx_u8<DCM_MAX_DIDROEEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   984      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   985          if(DCM_ROE_STARTED==DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   986          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   987              /*If the application activates the ROE event for a particular DID, set the state machine of that
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   988               * particular DID to start.*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   989              /*Trigger the activate event to the application*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   990              /*activate event successful, move the state variables to stopped state, otherwise remain in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   991               * old state since activate was not successful*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   992  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   993              DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus=DCM_ROE_STOPPED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   994  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   995              (*(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].ROEDID_fp))(DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   996  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   997              DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].RoeEventId_u8,DCM_ROE_STOPPED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   998          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	   999          if ((DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].stDspRoeSessionIsDefault_b != FALSE) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1000                  (dataCurrentSession_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX]))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1001          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1002              DcmDspRoeDidStateVariables[Dcm_RoeDidIdx_u8].RoeEventStatus=DCM_ROE_STARTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1003  #if (DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1004              (*(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].ROEDID_fp))(DCM_ROE_STARTED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1005  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1006              DcmAppl_Switch_DcmResponseOnEvent(DcmDspRoeDidEvents[Dcm_RoeDidIdx_u8].RoeEventId_u8,DCM_ROE_STARTED);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1007          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1008          Dcm_RoeDidIdx_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1009      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1010  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1011  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1012  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1013   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1014   * Dcm_Prv_DcmRoe_Controlevent : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1015   * transmission of responses on a Control event and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1016   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1017   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1018   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1019   * \parameters           pMsgContext: Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1020   *                                   (input : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1021   *                                   (output: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1022   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1023   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1024   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1025   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1026   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1027  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1028  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_DcmRoe_Controlevent (
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1029                                                      P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1030                                     P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1031  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1032      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1033  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1034      dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1035  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1036      /* Copy the event window time to static  variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1037      Dcm_stRoeEventWindowTime_u8 = pMsgContext->reqData[DCM_DSP_ROE_POSWINDOWTIME];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1038      if(Dcm_stRoeOpstatus_u8!=DCM_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1039      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1040          Dcm_RoeCtrlConditionAndSequenceCheck(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1041      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1042  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1043      if((*dataNegRespCode_u8 == 0x0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1044      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1045  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1046  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1047          if( ((Dcm_stRoeOpstatus_u8==DCM_INITIAL)&&( Dcm_stDspRoeDidOpStatusIsPending_b == FALSE)) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1048                  ( Dcm_stDspRoeDtcOpStatusIsPending_b == TRUE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1049          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1050              dataReturnVal_u8 = Dcm_ControlRoeDtcEventType(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1051          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1052  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1053          if((((Dcm_stRoeOpstatus_u8==DCM_INITIAL)&&( Dcm_stDspRoeDtcOpStatusIsPending_b == FALSE)) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1054                  ( Dcm_stDspRoeDidOpStatusIsPending_b == TRUE)) && (*dataNegRespCode_u8 == 0x0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1055          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1056  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1057  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1058              dataReturnVal_u8 = Dcm_ControlRoeDidEventType(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1059  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1060  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1061          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1062          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1063          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1064              /* Do nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1065          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1066          if((dataReturnVal_u8==E_OK) &&(*dataNegRespCode_u8 == 0x0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1067          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1068  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1069              /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1070              pMsgContext->resData[2] = Dcm_stRoeEventWindowTime_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1071              pMsgContext->resData[1] = 0x0u; /* Number of Identified events are zero for start/stop/clear */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1072              pMsgContext->resData[0] = pMsgContext->reqData[DCM_DSP_ROE_POSEVENT];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1073              pMsgContext->resDataLen = 0x03u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1074  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1075          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1076  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1077      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1078  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1079      return(dataReturnVal_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1080  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1081  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1082   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1083   * Dcm_Prv_DcmRoe_SetUpevent_WindowTime : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1084   * transmission of responses on a SetUp event and Event Window Time and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1085   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1086   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1087   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1088   * \parameters           dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1089   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1090   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1091   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1092   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1093  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1094  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_DcmRoe_SetUpevent_WindowTime (
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1095          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1096  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1097  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1098      if((Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_INFINITE) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1099              (Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_CURRENT_CYCLE) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1100              (Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_CURRENT_AND_FOLLOWING_CYCLE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1101      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1102          if(((Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_INFINITE) && (DCM_ROE_VALIDATE_STORAGESTATE_INFINITE == TRUE)) ||\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1103           ((Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_CURRENT_CYCLE) && (DCM_ROE_VALIDATE_STORAGESTATE_CURRENT == TRUE)) ||\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1104           ((Dcm_stRoeEventWindowTime_u8 == DCM_ROE_EVENTWINDOWTIME_CURRENT_AND_FOLLOWING_CYCLE) && (DCM_ROE_VALIDATE_STORAGESTATE_CURRENT_FOLLOWING == TRUE)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1105  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1106          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1107              /*Check if the storage state is set for event window time any other than INFINITY & CURRENT_FOLLOWING
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1108                cycles*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1109              if(( ((Dcm_stRoeEventWindowTime_u8 == 0x02u) || (Dcm_stRoeEventWindowTime_u8 == 0x04u)) && (Dcm_stDspRoeStorageState_b == FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1110                      ||((Dcm_stRoeEventWindowTime_u8 == 0x03u) &&(Dcm_stDspRoeStorageState_b != FALSE) ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1111              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1112                  /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1113                  *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1114              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1115  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1116          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1117      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1118      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1119      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1120          /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1121          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1122      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1123  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1124      return(*dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1125  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1126  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1127   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1128   * Dcm_Prv_DcmRoe_SetUpevent_ONCHANGEOFDID : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1129   * transmission of responses on a SetUp event and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1130   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1131   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1132   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1133   * \parameters           pMsgContext: Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1134   *                                   (input : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1135   *                                   (output: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1136   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1137   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1138   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1139   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1140   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1141  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1142  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_DcmRoe_SetUpevent_ONCHANGEOFDID (
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1143          /* MR12 RULE 8.13 VIOLATION: The pointers cannot be made constants since they are being modified in other configurtions */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1144                                        P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1145                                        P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1146  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1147      VAR(Std_ReturnType, AUTOMATIC)   dataReturnVal_u8;             /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1148  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1149      dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1150  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1151  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1152      if(pMsgContext->reqData[4] == 0x22u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1153      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1154      /* Call the API to register the events */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1155      dataReturnVal_u8 = Dcm_SetUpRoeDidEvent(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1156  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1157      if(dataReturnVal_u8 != DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1158      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1159          if(dataReturnVal_u8!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1160          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1161              /*Check whether any NRC is set already*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1162              if(*dataNegRespCode_u8 ==0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1163              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1164  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1165                  *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1166              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1167  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1168          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1169          /*Reset the service state machine and the service opstatus*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1170          Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1171          Dcm_stRoeOpstatus_u8 =DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1172      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1173      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1174      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1175      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1176          /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1177          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1178      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1179  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1180      (void)pMsgContext;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1181      (void)dataNegRespCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1182  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1183      return(dataReturnVal_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1184  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1185  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1186   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1187   * Dcm_Prv_DcmRoe_SetUpevent_ONDTCSTATUSCHANGE : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1188   * transmission of responses on a SetUp event and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1189   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1190   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1191   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1192   * \parameters           pMsgContext: Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1193   *                                   (input : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1194   *                                   (output: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1195   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1196   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1197   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1198   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1199   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1200  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1201  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_DcmRoe_SetUpevent_ONDTCSTATUSCHANGE (
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1202                                       P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1203                                       P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1204  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1205      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1206  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1207      dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1208  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1209  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1210      if((pMsgContext->reqData[3] == 0x19u) && (pMsgContext->reqData[4] == 0x0Eu))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1211      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1212          /* Call the API to register the events */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1213          dataReturnVal_u8 = Dcm_SetUpRoeDtcEvent(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1214  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1215          if(dataReturnVal_u8 != DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1216          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1217              if(dataReturnVal_u8!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1218              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1219                  /*Check whether any NRC is set already*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1220                  if(*dataNegRespCode_u8 ==0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1221                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1222  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1223                      *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1224                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1225                  /*Reset the service state machine and the service opstatus*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1226                  Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1227                  Dcm_stRoeOpstatus_u8 =DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1228              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1229          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1230      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1231      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1232      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1233          /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1234          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1235      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1236  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1237      return(dataReturnVal_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1238  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1239  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1240   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1241   * Dcm_Prv_DcmRoe_SetUpevent : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1242   * transmission of responses on a SetUp event and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1243   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1244   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1245   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1246   * \parameters           pMsgContext: Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1247   *                                   (input : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1248   *                                   (output: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1249   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1250   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1251   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1252   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1253   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1254  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1255  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_DcmRoe_SetUpevent (
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1256          P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1257          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1258  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1259      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1260  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1261      dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1262  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1263      /* Copy the event window time to static  variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1264      Dcm_stRoeEventWindowTime_u8 = pMsgContext->reqData[DCM_DSP_ROE_POSWINDOWTIME];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1265  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1266      if((*dataNegRespCode_u8 == 0u) && (Dcm_stRoeEventWindowTime_u8 != 0u) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1267      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1268  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1269          if (Dcm_stRoeOpstatus_u8 == DCM_INITIAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1270          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1271              *dataNegRespCode_u8 = Dcm_Prv_DcmRoe_SetUpevent_WindowTime(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1272          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1273  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1274          if(*dataNegRespCode_u8 == 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1275          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1276  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1277              if(Dcm_stEventType_u8 == DCM_ROE_ONCHANGEOFDID)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1278              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1279                  dataReturnVal_u8 = Dcm_Prv_DcmRoe_SetUpevent_ONCHANGEOFDID(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1280              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1281              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1282              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1283                  if(Dcm_stEventType_u8 == DCM_ROE_ONDTCSTATUSCHANGE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1284                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1285                      dataReturnVal_u8 = Dcm_Prv_DcmRoe_SetUpevent_ONDTCSTATUSCHANGE(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1286                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1287              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1288          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1289  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1290      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1291  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1292      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1293      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1294          /*Set negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1295          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1296      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1297  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1298      return(dataReturnVal_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1299  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1300  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1301   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1302   * Dcm_DcmResponseOnEvent : The ResponseOnEvent service requests a server to start stop or clear
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1303   * transmission of responses on a specified event and setting up of events.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1304   * This service provides the possibility of automatically executing a diagnostic service in the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1305   * event that a specified event occurs in the server.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1306   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1307   * \parameters           pMsgContext: Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1308   *                                   (input : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1309   *                                   (output: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1310   *                       dataNegRespCode_u8 : Parameter to update the NRC value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1311   *                       OpStatus           : Information regarding the status of the service processing
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1312   * \return value         None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1313   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1314   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1315   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1316  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1317  FUNC(Std_ReturnType,DCM_CODE) Dcm_DcmResponseOnEvent (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1318          P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1319          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1320  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1321  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1322      VAR(Std_ReturnType, AUTOMATIC) dataReturnVal_u8; /* Local variable to store return from DcmAppl API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1323  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1324      *dataNegRespCode_u8 = 0x0u; /* Local variable initialisation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1325      dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1326      /*Opstatus possed by the central statemachine is unused currently, opstatus variables related to service needs to be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1327       removed and the one passed by the central statemachine needs to be used, this would be taken care with task XXXXX*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1328      DCM_UNUSED_PARAM(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1329  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1330      if(DCM_CANCEL == OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1331      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1332  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1333          Dcm_DcmResponseOnEventIni();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1334          dataReturnVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1335      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1336      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1337      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1338  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1339          /* Initialised state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1340          if(Dcm_stDspRoeState_en == DCM_DSP_ROE_INIT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1341          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1342              Dcm_RoeLengthCheck(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1343  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1344          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1345  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1346          /* EventType is startROE, stopROE or clearROE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1347          if(Dcm_stDspRoeState_en == DCM_DSP_ROE_CONTROLEVENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1348          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1349              dataReturnVal_u8 = Dcm_Prv_DcmRoe_Controlevent(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1350          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1351          /* Event Type is OnDTCStatusChange or OnChangeOfDataIdentifier */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1352          if(Dcm_stDspRoeState_en == DCM_DSP_ROE_SETUPEVENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1353          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1354              dataReturnVal_u8 = Dcm_Prv_DcmRoe_SetUpevent(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1355          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1356  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1357          /* Event Type is reportActiveEvents */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1358          if(Dcm_stDspRoeState_en == DCM_DSP_ROE_REPORTEVENTS)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1359          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1360              dataReturnVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1361              Dcm_ReportRoeEvents(pMsgContext);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1362              Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1363          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1364  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1365          /* Check if Negative response code is set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1366          if(*dataNegRespCode_u8 != 0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1367          { /* Retrun E_NOT_OK from the service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1368              dataReturnVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1369              /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1370              Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1371          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1372          if(dataReturnVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1373          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1374              /* Reset ROE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1375              Dcm_stDspRoeState_en = DCM_DSP_ROE_INIT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1376              Dcm_stRoeOpstatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1377          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1378      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1379      return dataReturnVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1380  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1381  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1382  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1383  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1384  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1385  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1386  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1387  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1388  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Roe.c	  1389  

	; Module end
