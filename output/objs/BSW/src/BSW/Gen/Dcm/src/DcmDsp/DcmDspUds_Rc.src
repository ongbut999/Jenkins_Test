	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15024a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Rc.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c'

	
$TC16X
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Dsp_RC_Ini',code,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.text.DcmDspUds_Rc.Dcm_Dsp_RC_Ini'
	.align	2
	
	.global	Dcm_Dsp_RC_Ini

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     3  #include "DcmDspUds_Rc_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     4  #include "DcmDspUds_Uds_Prot.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     5  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     6  #if(DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     7  #if(DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     8  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	     9  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    10  P2VAR(uint8,DCM_VAR,DCM_INTERN_DATA)                                        Dcm_RCInPtr_pu8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    11  P2VAR(uint8,DCM_VAR,DCM_INTERN_DATA)                                        Dcm_RCOutPtr_pu8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    12  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    13  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    14  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    15  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    16  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    17  static P2CONST(Dcm_DspRoutineType_tst, DCM_VAR, DCM_INTERN_CONST)           Dcm_adrRoutinePtr_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    18  static P2CONST(Dcm_DspRoutineType_tst, AUTOMATIC, DCM_INTERN_CONST)         s_adrRoutine_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    19  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    20  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    21  static P2CONST(Dcm_DspRoutineRangeType_tst, DCM_VAR, DCM_INTERN_CONST)      Dcm_adrRoutineRangePtr_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    22  static P2CONST(Dcm_DspRoutineRangeType_tst, AUTOMATIC, DCM_INTERN_CONST)    s_adrRoutineRange_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    23  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    24  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    25  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    26  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    27  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    28  static VAR(Dcm_DspRCStateType_ten, DCM_VAR)                                 Dcm_stDspRCState_en;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    29  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    30  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    31  #define DCM_START_SEC_VAR_CLEARED_16/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    32  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    33  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    34  static VAR(uint16,DCM_VAR)                                                  s_dataRidRange_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    35  static VAR(uint16,DCM_VAR)                                                  s_PendingRidRange_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    36  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    37  static VAR(uint16,DCM_VAR)                                                  s_dataStatusIdx_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    38  #define DCM_STOP_SEC_VAR_CLEARED_16/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    39  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    40  #define DCM_START_SEC_VAR_CLEARED_8/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    41  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    42  static VAR(uint8,DCM_VAR)                                                   Dcm_dataRCSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    43  #define DCM_STOP_SEC_VAR_CLEARED_8/*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    44  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    45  #define DCM_START_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    46  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    47  VAR(uint16,DCM_VAR)                                                         Dcm_RCCurrDataLength_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    48  #define DCM_STOP_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    49  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    50  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    51  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    52  VAR(Dcm_NegativeResponseCodeType,DCM_VAR)                                   Dcm_RCNegResCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    53  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    54  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    55  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    56  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    57  VAR(Dcm_OpStatusType,DCM_VAR)                                               Dcm_RCOpStatus_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    58  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    59  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    60  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    61  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    62  static VAR(boolean,DCM_VAR)                                                 s_IsRCSubfunctionCalled_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    63  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    64  /* Flag to indicate if RID is supported in a range routine or it is a single routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    65  static VAR(boolean, DCM_VAR)                                                s_IsRidRange_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    66  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    67  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    68  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    69  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    70  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    71  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    72  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    73  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    74   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    75   * Dcm_Dsp_RC_Ini :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    76   *  Service Initialization for initializing Routine Control Service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    77   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    78   * \param           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    79   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    80   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    81   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    82   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    83  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    84  FUNC(void,DCM_CODE) Dcm_Dsp_RC_Ini ( void )
; Function Dcm_Dsp_RC_Ini
.L146:
Dcm_Dsp_RC_Ini:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    85  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    86      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    87      Dcm_RCOpStatus_u8 = DCM_CANCEL;
	movh.a	a12,#@his(Dcm_RCOpStatus_u8)
	lea	a12,[a12]@los(Dcm_RCOpStatus_u8)
.L480:
	mov	d15,#2
.L481:
	st.b	[a12],d15
.L482:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    88      if ( Dcm_stDspRCState_en == DCM_RC_PENDING )
	movh.a	a13,#@his(Dcm_stDspRCState_en)
	lea	a13,[a13]@los(Dcm_stDspRCState_en)
	ld.w	d15,[a13]
.L483:
	jne	d15,#2,.L2
.L484:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    89      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    90          /* Service Initialization may have been triggered due to protocol preemption, thus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    91          it is required to inform the Application/RTE about the CANCEL operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    92          /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    93           * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    94          /*Set the flag for s_IsRCSubfunctionCalled_b is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    95          s_IsRCSubfunctionCalled_b = TRUE;
	movh.a	a14,#@his(s_IsRCSubfunctionCalled_b)
	lea	a14,[a14]@los(s_IsRCSubfunctionCalled_b)
.L485:
	mov	d15,#1
.L486:
	st.b	[a14],d15
.L487:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    96  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    97          /* Check whether the supported RID is present in a Range or it is a single Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    98          if(s_IsRidRange_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	    99          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   100              (void)(*Dcm_adrRoutineRangePtr_pcst->adrCallRoutine_pfct)(Dcm_dataRCSubFunc_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   101          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   102          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   103  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   104          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   105  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   106              (void)(*Dcm_adrRoutinePtr_pcst->adrCallRoutine_pfct)(Dcm_dataRCSubFunc_u8);
	movh.a	a15,#@his(Dcm_adrRoutinePtr_pcst)
	lea	a15,[a15]@los(Dcm_adrRoutinePtr_pcst)
	ld.a	a15,[a15]
.L488:
	ld.a	a15,[a15]8
.L489:
	movh.a	a2,#@his(Dcm_dataRCSubFunc_u8)
	lea	a2,[a2]@los(Dcm_dataRCSubFunc_u8)
	ld.bu	d4,[a2]
	calli	a15
.L490:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   107  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   108          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   109          /*Set the flag for s_IsRCSubfunctionCalled_b is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   110          s_IsRCSubfunctionCalled_b = FALSE;
	mov	d15,#0
.L491:
	st.b	[a14],d15
.L2:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   111      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   112  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   113  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   114      /* Initialise the RoutinePtr to the first routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   115      s_adrRoutine_pcst =  &Dcm_DspRoutine_cast[0];
	movh.a	a14,#@his(s_adrRoutine_pcst)
	lea	a14,[a14]@los(s_adrRoutine_pcst)
.L492:
	movh.a	a15,#@his(Dcm_DspRoutine_cast)
	lea	a15,[a15]@los(Dcm_DspRoutine_cast)
.L493:
	st.a	[a14],a15
.L494:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   116  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   117      /* Search through the complete list of Routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   118      for ( idxLoop_qu16 = 0 ; idxLoop_qu16 < DCM_CFG_RC_NUMRIDS ; idxLoop_qu16++ )
	mov	d8,#0
.L320:
	j	.L3
.L4:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   119      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   120  #if(DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   121          /*Check the status of the routine;if it is  DCM_ROUTINE_STOP_PENDING, call the StopRoutine function with Opstatus set to CANCEL*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   122          if ( (s_adrRoutine_pcst->flgStopRoutine_b!= FALSE) && (s_adrRoutine_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineStatus_aen[idxLoop_qu16]== DCM_ROUTINE_STOP_PENDING )  )
	ld.a	a2,[a14]
.L495:
	ld.bu	d15,[a2]13
.L496:
	jeq	d15,#0,.L5
.L497:
	ld.bu	d15,[a2]14
.L498:
	jeq	d15,#0,.L6
.L499:
	movh.a	a15,#@his(Dcm_RoutineStatus_aen)
	lea	a15,[a15]@los(Dcm_RoutineStatus_aen)
.L500:
	addsc.a	a15,a15,d8,#2
	ld.w	d15,[a15]
.L501:
	jne	d15,#3,.L7
.L502:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   123          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   124              /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   125               * Hence there is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   126              /*Set the flag for s_IsRCSubfunctionCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   127              s_IsRCSubfunctionCalled_b = TRUE;
	movh.a	a15,#@his(s_IsRCSubfunctionCalled_b)
	lea	a15,[a15]@los(s_IsRCSubfunctionCalled_b)
.L503:
	mov	d15,#1
.L504:
	st.b	[a15],d15
.L505:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   128              (void)(*s_adrRoutine_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
	ld.a	a2,[a2]8
.L506:
	mov	d4,#2
	calli	a2
.L507:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   129              /*Set the flag for s_IsRCSubfunctionCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   130              s_IsRCSubfunctionCalled_b = FALSE;
	mov	d15,#0
.L508:
	st.b	[a15],d15
.L7:
.L6:
.L5:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   131          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   132  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   133          if (Dcm_DsldGlobal_st.cntrWaitpendCounter_u8 >= DCM_CFG_MAX_WAITPEND)
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L509:
	ld.bu	d15,[a15]10
.L510:
	jlt.u	d15,#5,.L8
.L511:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   134          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   135              /* Do nothing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   136              /* Service ini is called because of general reject.no need to reset the status of started  routines*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   137          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   138          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   139          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   140              /*Now set the status of the routine to default*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   141              Dcm_RoutineStatus_aen[idxLoop_qu16] = DCM_ROUTINE_IDLE;
	movh.a	a15,#@his(Dcm_RoutineStatus_aen)
	lea	a15,[a15]@los(Dcm_RoutineStatus_aen)
.L512:
	addsc.a	a15,a15,d8,#2
.L513:
	mov	d15,#0
.L514:
	st.w	[a15],d15
.L9:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   142          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   143          /* Increment the pointer to point to the next RId */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   144          s_adrRoutine_pcst++;
	ld.a	a15,[a14]
.L515:
	lea	a15,[a15]20
	st.a	[a14],a15
.L516:
	add	d8,#1
.L3:
	jeq	d8,#0,.L4
.L517:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   145      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   146  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   147  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   148  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   149  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   150      /* Initialise the RoutineRangePtr to the first Range routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   151      s_adrRoutineRange_pcst = &Dcm_DspRoutineRange_cast[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   152      /* Initialize the routine range flag to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   153      s_IsRidRange_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   154  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   155      /* Search through the complete list of Range Routines to find if the received RID is found within any of the configured routine ranges */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   156      for (idxLoop_qu16 = 0; idxLoop_qu16 < DCM_CFG_RC_RANGE_NUMRIDS; idxLoop_qu16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   157      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   158  #if (DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   159          /* Check the status of the routine range if it is  DCM_ROUTINE_STOP_PENDING, call the StopRoutine function with Opstatus set to CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   160          if((s_adrRoutineRange_pcst->flgStopRoutine_b!= FALSE)&& (s_adrRoutineRange_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineRangeStatus_aen[idxLoop_qu16] == DCM_ROUTINE_STOP_PENDING))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   161          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   162              /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   163               * Hence there is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   164              /*Set the flag for s_IsRCSubfunctionCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   165              s_IsRCSubfunctionCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   166              (void)(*s_adrRoutineRange_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   167              /*Set the flag for s_IsRCSubfunctionCalled as FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   168              s_IsRCSubfunctionCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   169          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   170  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   171          if (Dcm_DsldGlobal_st.cntrWaitpendCounter_u8 >= DCM_CFG_MAX_WAITPEND)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   172          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   173              /* Do nothing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   174              /* Service Ini is called because of general reject. No need to reset the status of started routines*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   175          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   176          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   177          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   178              /*Now set the status of the routine to default*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   179              Dcm_RoutineRangeStatus_aen[idxLoop_qu16] = DCM_ROUTINE_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   180          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   181          /* Increment the pointer to point to the next Range Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   182          s_adrRoutineRange_pcst++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   183      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   184  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   185      Dcm_RCOpStatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L518:
	st.b	[a12],d15
.L519:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   186      Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L520:
	st.w	[a13],d15
.L521:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   187  }
	ret
.L264:
	
__Dcm_Dsp_RC_Ini_function_end:
	.size	Dcm_Dsp_RC_Ini,__Dcm_Dsp_RC_Ini_function_end-Dcm_Dsp_RC_Ini
.L185:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Prv_RcIsRIDSingleRoutine',code,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.text.DcmDspUds_Rc.Dcm_Prv_RcIsRIDSingleRoutine'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   188  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   189  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   190  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   191  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   192   ********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   193   * Dcm_Prv_RcIsRIDRangeRoutine :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   194   *  This function is used to check if the RID is supported in the Ranges
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   195   * \param  [in]     dataRId_u16     : Requested RID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   196   *         [out]    idxLoop_qu16    : index of the Rid in Routine or Routine Range structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   197   *         [out]    NRC_u8          : NRC Value if RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   198   *         [out]    flgProcessReq_b : TRUE --> RID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   199   *                                    FALSE --> RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   200   * \retval Std_ReturnType  Retval   : E_OK --> RID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   201   *                                    E_NOT_OK --> RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   202   *******************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   203  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcIsRIDRangeRoutine(P2VAR(boolean,AUTOMATIC,DCM_INTERN_DATA) flgRidSupported_b,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   204          VAR(uint16,AUTOMATIC)dataRId_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   205          P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) idxLoop_qu16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   206          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) NRC_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   207  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   208      /* Return value to store the result of IsRidAvailable function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   209      VAR(Std_ReturnType, AUTOMATIC) RetVal;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   210      /* Initialize the return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   211      RetVal = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   212      /* Set the routine range flag to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   213      s_IsRidRange_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   214      /* Initialise the RoutineRangePtr to the first Range routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   215      s_adrRoutineRange_pcst = &Dcm_DspRoutineRange_cast[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   216  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   217  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   218      /* Search through the complete list of Range Routines to find if the received RID is found within any of the configured routine ranges */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   219      for (*idxLoop_qu16 = 0; *idxLoop_qu16 < DCM_CFG_RC_RANGE_NUMRIDS; (*idxLoop_qu16)++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   220      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   221          if((dataRId_u16 >= s_adrRoutineRange_pcst->RidRangeLowerLimit_u16) && (dataRId_u16 <= s_adrRoutineRange_pcst->RidRangeUpperLimit_u16))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   222          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   223              /* RID is found within the current range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   224              s_IsRidRange_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   225              /* Update the RangeRID in the static variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   226              s_dataRidRange_u16 = dataRId_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   227              /* Check if the RID range has gaps or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   228              if(s_adrRoutineRange_pcst->RoutineRangeHasGaps_b == TRUE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   229              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   230                  RetVal = (*(s_adrRoutineRange_pcst->IsRIDRangeAvailFnc_pf))(dataRId_u16,NRC_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   231                  /* The Range has gaps. All routines in this range are not supported.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   232                   * Call IsRIDRangeAvailFnc_pf function to check if the passed RID is supported in the range or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   233                  if(RetVal == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   234                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   235                      /* Requested RID is available */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   236                      *flgRidSupported_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   237                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   238                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   239                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   240                      /* RID is not supported in the current range. Check if it is supported in the single Routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   241                      s_IsRidRange_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   242                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   243              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   244              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   245              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   246                  /* The Range does not have gaps. All routines in this range are supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   247                  *flgRidSupported_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   248              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   249  #if (DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   250              /*If NRC is set to 0x00 and stop routine flag is set to TRUE for the routine session and Dcm Routine stop call returns pending */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   251              if((*NRC_u8 ==0x00) && (s_adrRoutineRange_pcst->flgStopRoutine_b!= FALSE)&& (s_adrRoutineRange_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineRangeStatus_aen[*idxLoop_qu16] == DCM_ROUTINE_STOP_PENDING ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   252              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   253                  /*Since the status of the Routine is DCM_ROUTINE_STOP_PENDING ,call the StopRoutine with OpStatus set to DCM_CANCEL  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   254                  Dcm_RCOpStatus_u8 = DCM_CANCEL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   255                  /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   256                   * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   257                  /*Set the flag for s_IsRCSubfunctionCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   258                  s_IsRCSubfunctionCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   259                  (void)(*s_adrRoutineRange_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   260                  /*Set the flag for s_IsRCSubfunctionCalled and flgRidSupported_b as FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   261                  s_IsRCSubfunctionCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   262                  *flgRidSupported_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   263                  s_IsRidRange_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   264                  Dcm_RoutineRangeStatus_aen[*idxLoop_qu16] = DCM_ROUTINE_STOP;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   265              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   266              Dcm_RCOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   267  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   268              /* If NRC is not set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   269              if(*NRC_u8 == 0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   270              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   271                  /*Store the index for getting the status in the next main function call*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   272                  s_dataStatusIdx_u16 = (uint16)(*idxLoop_qu16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   273              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   274              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   275          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   276          /* Increment the pointer to point to the next Range Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   277          s_adrRoutineRange_pcst++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   278      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   279  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   280      return RetVal;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   281  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   282  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   283  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   284  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   285  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   286   ********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   287   * Dcm_Prv_RcIsRIDSingleRoutine :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   288   *  This function is used to check if the RID is supported in the single routines
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   289   * \param  [in]     dataRId_u16     : Requested RID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   290   *         [out]    idxLoop_qu16    : index of the Rid in Routine or Routine Range structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   291   *         [out]    NRC_u8          : NRC Value if RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   292   *         [out]    flgProcessReq_b : TRUE --> RID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   293   *                                    FALSE --> RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   294   * \retval Std_ReturnType  Retval   : E_OK --> RID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   295   *                                    E_NOT_OK --> RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   296   *******************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   297  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcIsRIDSingleRoutine(P2VAR(boolean,AUTOMATIC,DCM_INTERN_DATA) flgRidSupported_b,
; Function Dcm_Prv_RcIsRIDSingleRoutine
.L148:
Dcm_Prv_RcIsRIDSingleRoutine:	.type	func
	sub.a	a10,#8
.L321:
	st.a	[a10],a4
.L325:
	mov.aa	a12,a5
.L326:
	mov.aa	a13,a6
.L327:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   298          VAR(uint16,AUTOMATIC)dataRId_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   299          P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) idxLoop_qu16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   300          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) NRC_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   301  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   302      /* Return value to store the result of IsRidAvailable function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   303      VAR(Std_ReturnType, AUTOMATIC) RetVal;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   304      /* Initialize the return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   305      RetVal = E_NOT_OK;
	mov	d8,#1
.L328:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   306      /* Initialise the RoutinePtr to the first routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   307      s_adrRoutine_pcst =  &Dcm_DspRoutine_cast[0];
	movh.a	a15,#@his(s_adrRoutine_pcst)
	lea	a15,[a15]@los(s_adrRoutine_pcst)
.L563:
	movh.a	a2,#@his(Dcm_DspRoutine_cast)
	lea	a2,[a2]@los(Dcm_DspRoutine_cast)
.L564:
	st.a	[a15],a2
.L565:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   308  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   309      /* Search through the complete list of Routines to find if the received RID matches with any of the configured RIDs */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   310      for (*idxLoop_qu16 = 0; *idxLoop_qu16 < DCM_CFG_RC_NUMRIDS; (*idxLoop_qu16)++ )
	mov	d15,#0
.L566:
	st.h	[a12],d15
.L567:
	j	.L10
.L11:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   311      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   312          if (dataRId_u16 == s_adrRoutine_pcst->dataRId_u16)
	ld.a	a2,[a15]
.L568:
	ld.hu	d15,[a2]0
.L569:
	jne	d15,d4,.L12
.L570:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   313          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   314              /* Match found, break free from the for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   315              *flgRidSupported_b = TRUE;
	mov	d15,#1
.L571:
	ld.a	a2,[a10]
.L324:
	st.b	[a2],d15
.L572:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   316              RetVal = E_OK;
	mov	d8,#0
.L573:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   317  #if(DCM_CFG_DSP_NUMISRIDAVAIL>0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   318              /* Check if the RID is supported in current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   319              if(*Dcm_RIDIsAvail[s_adrRoutine_pcst->idxRIDSupportedFnc_u16] != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   320              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   321                  if((*(IsRIDAvailFnc_pf)(Dcm_RIDIsAvail[s_adrRoutine_pcst->idxRIDSupportedFnc_u16]))(s_adrRoutine_pcst->dataRId_u16)!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   322                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   323                      /* Routine Identifier is not supported  in the current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   324                      *NRC_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   325                      *flgRidSupported_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   326                      RetVal = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   327                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   328              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   329  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   330              DCM_UNUSED_PARAM(NRC_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   331  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   332  #if (DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   333              /*If NRC is set to 0x00 and stop routine flag is set to TRUE for the routine session and Dcm Routine stop call returns pending */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   334              if((*NRC_u8 ==0x00) && (s_adrRoutine_pcst->flgStopRoutine_b!= FALSE)&& (s_adrRoutine_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineStatus_aen[*idxLoop_qu16] == DCM_ROUTINE_STOP_PENDING ))
	ld.bu	d15,[a13]
.L574:
	jne	d15,#0,.L13
.L575:
	ld.a	a2,[a15]
.L329:
	ld.bu	d15,[a2]13
.L576:
	jeq	d15,#0,.L14
.L577:
	ld.bu	d15,[a2]14
.L578:
	jeq	d15,#0,.L15
.L579:
	movh.a	a14,#@his(Dcm_RoutineStatus_aen)
	lea	a14,[a14]@los(Dcm_RoutineStatus_aen)
.L580:
	ld.hu	d15,[a12]0
.L581:
	addsc.a	a15,a14,d15,#2
	ld.w	d15,[a15]
.L582:
	jne	d15,#3,.L16
.L583:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   335              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   336                  /*Since the status of the Routine is DCM_ROUTINE_STOP_PENDING ,call the StopRoutine with OpStatus set to DCM_CANCEL  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   337                  Dcm_RCOpStatus_u8 = DCM_CANCEL;
	movh.a	a15,#@his(Dcm_RCOpStatus_u8)
	lea	a15,[a15]@los(Dcm_RCOpStatus_u8)
.L584:
	mov	d15,#2
.L585:
	st.b	[a15],d15
.L586:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   338                  /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   339                   * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   340                  /*Set the flag for s_IsRCSubfunctionCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   341                  s_IsRCSubfunctionCalled_b = TRUE;
	movh.a	a15,#@his(s_IsRCSubfunctionCalled_b)
	lea	a15,[a15]@los(s_IsRCSubfunctionCalled_b)
.L587:
	mov	d15,#1
.L588:
	st.b	[a15],d15
.L589:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   342                  (void)(*s_adrRoutine_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
	ld.a	a2,[a2]8
.L590:
	mov	d4,#2
.L323:
	calli	a2
.L322:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   343                  /*Set the flag for s_IsRCSubfunctionCalled and flgRidSupported_b as FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   344                  s_IsRCSubfunctionCalled_b = FALSE;
	mov	d15,#0
.L591:
	st.b	[a15],d15
.L592:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   345                  *flgRidSupported_b = FALSE;
	mov	d15,#0
.L593:
	ld.a	a15,[a10]
.L330:
	st.b	[a15],d15
.L594:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   346                  Dcm_RoutineStatus_aen[*idxLoop_qu16] = DCM_ROUTINE_STOP;
	ld.hu	d15,[a12]0
.L595:
	addsc.a	a15,a14,d15,#2
.L331:
	mov	d15,#1
.L596:
	st.w	[a15],d15
.L16:
.L15:
.L14:
.L13:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   347              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   348              Dcm_RCOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_RCOpStatus_u8)
	lea	a15,[a15]@los(Dcm_RCOpStatus_u8)
.L597:
	mov	d15,#0
.L598:
	st.b	[a15],d15
.L599:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   349  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   350              /* If NRC is not set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   351              if(*NRC_u8 ==0x00)
	ld.bu	d15,[a13]
.L600:
	jne	d15,#0,.L17
.L601:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   352              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   353                  /*Store the index for getting the status in the next main function call*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   354                  s_dataStatusIdx_u16 = (uint16)(*idxLoop_qu16);
	movh.a	a15,#@his(s_dataStatusIdx_u16)
	lea	a15,[a15]@los(s_dataStatusIdx_u16)
.L602:
	ld.hu	d15,[a12]0
.L603:
	st.h	[a15],d15
.L17:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   355              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   356              break;
	j	.L18
.L12:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   357          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   358          /* Increment the pointer to point to the next dataRId_u16 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   359          s_adrRoutine_pcst++;
	lea	a2,[a2]20
	st.a	[a15],a2
.L604:
	ld.hu	d15,[a12]0
.L605:
	add	d15,#1
	st.h	[a12],d15
.L10:
	ld.hu	d15,[a12]0
.L606:
	jeq	d15,#0,.L11

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   360      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   361  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   362      if((*idxLoop_qu16 == DCM_CFG_RC_NUMRIDS) && (*NRC_u8 == 0x00))
.L18:
	ld.hu	d15,[a12]0
.L607:
	jne	d15,#1,.L19
.L608:
	ld.bu	d15,[a13]
.L609:
	jne	d15,#0,.L20
.L610:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   363      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   364          *NRC_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L611:
	st.b	[a13],d15
.L20:
.L19:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   365      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   366  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   367      return RetVal;
	mov	d2,d8
.L332:
	j	.L21

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   368  }
.L21:
	ret
.L274:
	
__Dcm_Prv_RcIsRIDSingleRoutine_function_end:
	.size	Dcm_Prv_RcIsRIDSingleRoutine,__Dcm_Prv_RcIsRIDSingleRoutine_function_end-Dcm_Prv_RcIsRIDSingleRoutine
.L200:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Prv_RcIsRIDSupported',code,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.text.DcmDspUds_Rc.Dcm_Prv_RcIsRIDSupported'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   369  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   370  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   371  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   372   *******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   373   * Dcm_RcIsRIDSupported :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   374   *  This function is used to check if the RID is supported in the Ranges or single Routines.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   375   * \param  [in]     dataRId_u16     : Requested RID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   376   *         [out]    idxLoop_qu16    : index of the Rid in Routine or Routine Range structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   377   *         [out]    NRC_u8          : NRC Value if RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   378   * \retval boolean  flgProcessReq_b : TRUE --> RID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   379   *                                   FALSE --> RID is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   380   *******************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   381  static FUNC(boolean,DCM_CODE) Dcm_Prv_RcIsRIDSupported (VAR(uint16,AUTOMATIC)dataRId_u16,
; Function Dcm_Prv_RcIsRIDSupported
.L150:
Dcm_Prv_RcIsRIDSupported:	.type	func
	sub.a	a10,#8
.L333:
	mov.aa	a15,a4
.L337:
	mov.aa	a12,a5
.L338:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   382          P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) idxLoop_qu16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   383          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) NRC_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   384  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   385      /* Return value to store the result of IsRidAvailable function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   386      VAR(Std_ReturnType, AUTOMATIC) RetVal;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   387      /* Return variable to indicate if RID is supported or not. Initialize it to FALSE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   388      VAR(boolean, AUTOMATIC) flgRidSupported_b = FALSE;
	mov	d15,#0
.L339:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   389      /* Initialize the variable for RID structure index to default value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   390      s_dataStatusIdx_u16 = 0xFFFF;
	movh.a	a2,#@his(s_dataStatusIdx_u16)
	lea	a2,[a2]@los(s_dataStatusIdx_u16)
.L616:
	mov.u	d0,#65535
.L617:
	st.h	[a2],d0
.L618:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   391      /* Initialize the return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   392      RetVal = E_NOT_OK;
	mov	d2,#1
.L340:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   393  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   394  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   395      RetVal = Dcm_Prv_RcIsRIDRangeRoutine(&flgRidSupported_b,dataRId_u16,idxLoop_qu16,NRC_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   396  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   397  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   398      /* If RID was not found within the Range Routines, then search in single routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   399      if((!flgRidSupported_b)
	jne	d15,#0,.L22
.L619:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   400  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   401              && (!s_IsRidRange_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   402  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   403      )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   404      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   405  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   406          RetVal = Dcm_Prv_RcIsRIDSingleRoutine(&flgRidSupported_b,dataRId_u16,idxLoop_qu16,NRC_u8);
	st.b	[a10],d15
	lea	a4,[a10]0
.L336:
	mov.aa	a5,a15
.L334:
	mov.aa	a6,a12
.L342:
	call	Dcm_Prv_RcIsRIDSingleRoutine
.L335:
	ld.bu	d15,[a10]
.L22:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   407  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   408      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   409  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   410      /* Send NRC if RID was not found within the Range Routines and single routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   411      if((!flgRidSupported_b) && ((RetVal == E_NOT_OK) && (*NRC_u8 == 0x00)))
	jne	d15,#0,.L23
.L620:
	jne	d2,#1,.L24
.L621:
	ld.bu	d0,[a12]
.L622:
	jne	d0,#0,.L25
.L623:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   412      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   413          /* Set NRC 0x31 if RID is not supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   414          *NRC_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d0,#49
.L624:
	st.b	[a12],d0
.L25:
.L23:
.L24:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   415      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   416  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   417      return flgRidSupported_b;
	mov	d2,d15
.L341:
	j	.L26

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   418  }
.L26:
	ret
.L281:
	
__Dcm_Prv_RcIsRIDSupported_function_end:
	.size	Dcm_Prv_RcIsRIDSupported,__Dcm_Prv_RcIsRIDSupported_function_end-Dcm_Prv_RcIsRIDSupported
.L205:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Prv_RcProcessRoutine',code,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.text.DcmDspUds_Rc.Dcm_Prv_RcProcessRoutine'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   419  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   420  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   421  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   422   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   423   Function name    : Dcm_Prv_RcProcessRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   424   Syntax           : Dcm_Prv_RcProcessRoutine(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   425   Description      : This Function is used to process the Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   426   Parameter        :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   427   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   428  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   429  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcProcessRoutine(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; Function Dcm_Prv_RcProcessRoutine
.L152:
Dcm_Prv_RcProcessRoutine:	.type	func
	sub.a	a10,#8
.L343:
	mov.aa	a12,a4
.L345:
	mov.aa	a13,a5
.L346:
	mov	d8,d4
.L347:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   430          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   431          VAR(uint16,AUTOMATIC) dataRId_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   432  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   433      P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_CONST)  adrSignal_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   434      VAR(uint32, AUTOMATIC) dataSessionBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   435      VAR(uint32, AUTOMATIC) dataSecurityBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   436  #if (DCM_CFG_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   437      VAR(uint32, AUTOMATIC)  dataSigVal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   438      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   439  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   440      VAR(uint16,AUTOMATIC) nrCtrlOptRecSize_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   441      VAR(uint8,AUTOMATIC) dataSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   442      VAR(uint8,AUTOMATIC) nrSig_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   443      VAR(boolean, AUTOMATIC) flgReqSequenceError_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   444      VAR(boolean, AUTOMATIC) flgModeRetVal_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   445      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   446  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   447      /*Initialize the flag for Request sequence error is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   448      flgReqSequenceError_b = FALSE;
	mov	d9,#0
.L349:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   449      /*Initialize the flag for mode return value is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   450      flgModeRetVal_b =TRUE;
	mov	d10,#1
.L350:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   451      adrSignal_pcst = NULL_PTR;
	mov.a	a14,#0
.L351:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   452      dataRetVal_u8=DCM_E_PENDING;
	mov	d11,#10
.L352:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   453      dataSubFunc_u8 = pMsgContext->reqData[0];
	ld.a	a2,[a12]4
.L629:
	ld.bu	d12,[a2]
.L354:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   454      /* From the received length indicated to this service check what is left after these three bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   455      nrCtrlOptRecSize_u16 = (uint16)(pMsgContext->reqDataLen - 3u);
	ld.w	d15,[a12]16
.L630:
	add	d0,d15,#-3
.L631:
	extr.u	d13,d0,#0,#16
.L355:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   456      dataSessionBitMask_u32 = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataSessBitMask_u32;
	movh.a	a15,#@his(s_adrRoutine_pcst)
	lea	a15,[a15]@los(s_adrRoutine_pcst)
	ld.a	a2,[a15]
.L632:
	add.a	a2,#4
	ld.a	a2,[a2]
.L633:
	ld.w	d15,[a2]4
.L356:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   457  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   458      /* If dataRId_u16 is valid, then check if its allowed to execute that Routine in the active session and check if it is available in current DCM configuration if post build is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   459      if(((Dcm_DsldGetActiveSessionMask_u32() & dataSessionBitMask_u32) != 0u)
	call	Dcm_DsldGetActiveSessionMask_u32
.L344:
	and	d2,d15
.L634:
	jeq	d2,#0,.L27
.L635:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   460  #if (DCM_CFG_POSTBUILD_SUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   461              && ((Dcm_ActiveConfiguration_u8 & Dcm_DspRoutine_cast[s_dataStatusIdx_u16].dataConfigMask_u8)!= 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   462  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   463      )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   464      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   465          /* Check now if its allowed to execute that Routine in the active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   466          dataSecurityBitMask_u32 = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataSecBitMask_u32;
	ld.a	a2,[a15]
.L636:
	add.a	a2,#4
	ld.a	a2,[a2]
.L637:
	ld.w	d15,[a2]
.L357:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   467  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   468          /* Check now if its allowed to execute that Routine in the active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   469          if((Dcm_DsldGetActiveSecurityMask_u32() & dataSecurityBitMask_u32) != 0u)
	call	Dcm_DsldGetActiveSecurityMask_u32
.L638:
	and	d2,d15
.L639:
	jeq	d2,#0,.L28
.L640:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   470          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   471  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   472              /* StartRoutine sub-function is a mandatory for any routine, but RequestResults and StopRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   473               * aren't. Thus, it is required to check if requested sub-function is supported for that routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   474               * which was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   475              if (( ( dataSubFunc_u8 == 0x01u ) && ( s_adrRoutine_pcst->flgStartRoutine_b != FALSE ))||
	jne	d12,#1,.L29
.L641:
	ld.a	a4,[a15]
.L642:
	ld.bu	d15,[a4]12
.L358:
	jne	d15,#0,.L30
.L29:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   476                      ( ( dataSubFunc_u8 == 0x02u ) && ( s_adrRoutine_pcst->flgStopRoutine_b != FALSE ))||
	jne	d12,#2,.L31
.L643:
	ld.a	a4,[a15]
.L644:
	ld.bu	d15,[a4]13
.L645:
	jne	d15,#0,.L32
.L31:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   477                      ( ( dataSubFunc_u8 == 0x03u ) && ( s_adrRoutine_pcst->dataReqRslt_b != FALSE ) ) )
	jne	d12,#3,.L33
.L646:
	ld.a	a4,[a15]
.L647:
	ld.bu	d15,[a4]16
.L648:
	jeq	d15,#0,.L34
.L32:
.L30:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   478              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   479                  /* Initialize the global variables to retain the values in case of DCM_E_PENDING */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   480                  Dcm_adrRoutinePtr_pcst = s_adrRoutine_pcst;
	movh.a	a2,#@his(Dcm_adrRoutinePtr_pcst)
	lea	a2,[a2]@los(Dcm_adrRoutinePtr_pcst)
.L649:
	st.a	[a2],a4
.L650:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   481                  Dcm_dataRCSubFunc_u8 = dataSubFunc_u8;
	movh.a	a2,#@his(Dcm_dataRCSubFunc_u8)
	lea	a2,[a2]@los(Dcm_dataRCSubFunc_u8)
.L651:
	st.b	[a2],d12
.L652:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   482                  Dcm_RCOpStatus_u8 = DCM_INITIAL;
	movh.a	a2,#@his(Dcm_RCOpStatus_u8)
	lea	a2,[a2]@los(Dcm_RCOpStatus_u8)
.L653:
	mov	d15,#0
.L654:
	st.b	[a2],d15
.L655:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   483                  Dcm_RCNegResCode_u8 = 0;
	movh.a	a2,#@his(Dcm_RCNegResCode_u8)
	lea	a2,[a2]@los(Dcm_RCNegResCode_u8)
.L656:
	mov	d15,#0
.L657:
	st.b	[a2],d15
.L658:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   484                  Dcm_RCCurrDataLength_u16 = 0;
	movh.a	a6,#@his(Dcm_RCCurrDataLength_u16)
	lea	a6,[a6]@los(Dcm_RCCurrDataLength_u16)
.L659:
	mov	d15,#0
.L660:
	st.h	[a6],d15
.L661:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   485                  Dcm_stDspRCState_en = DCM_RC_PENDING;
	movh.a	a2,#@his(Dcm_stDspRCState_en)
	lea	a2,[a2]@los(Dcm_stDspRCState_en)
	st.a	[a10],a2
.L662:
	mov	d15,#2
.L663:
	st.w	[a2],d15
.L664:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   486                  nrSig_u8 = 0;
	mov	d14,#0
.L359:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   487  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   488                  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   489                   * Now check if the total request length is valid based on
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   490                   * 1. If that routine is FixedLength or not
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   491                   *   a. If FixedLength is TRUE, then the match should be for the exact length
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   492                   *   b. If FixedLength is FALSE, then the check should be that the received length is not more
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   493                   *   than the maximum length, but also not less to miss out the fixed signals within that dataRId_u16
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   494                   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   495                  if ( ( dataSubFunc_u8 == 0x01u ) &&
	jne	d12,#1,.L35
.L665:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   496                          ( ( nrCtrlOptRecSize_u16 == s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStart_u16 ) ||
	mov.aa	a5,a4
	add.a	a5,#4
	ld.a	a2,[a5]
.L666:
	ld.hu	d0,[a2]36
.L667:
	jeq	d13,d0,.L36
.L668:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   497                                  ( ( s_adrRoutine_pcst->dataFixedLen_b == FALSE ) &&
	ld.bu	d15,[a4]2
.L669:
	jne	d15,#0,.L37
.L670:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   498                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStart_u16 ) &&
	jlt.u	d0,d13,.L38
.L671:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   499                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16 ) ) ) )
	ld.hu	d15,[a2]48
.L672:
	jlt.u	d13,d15,.L39
.L36:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   500                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   501  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   502  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   503  #if(DCM_CFG_STARTSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   504                      adrSignal_pcst = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrStartInSignalRef_cpcst;
	ld.a	a14,[a2]12
.L673:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   505                      nrSig_u8 = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->nrStartInSignals_u8;
	ld.bu	d14,[a2]60
.L674:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   506                      Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16);
	ld.hu	d15,[a2]48
.L675:
	sub	d0,d13,d15
.L676:
	st.h	[a6],d0
.L677:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   507                      Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16]);
	movh.a	a2,#@his(Dcm_RCInPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCInPtr_pu8)
.L678:
	ld.a	a4,[a12]4
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L679:
	st.a	[a2],a4
.L680:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   508                      Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStart_u16]);
	movh.a	a2,#@his(Dcm_RCOutPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCOutPtr_pu8)
.L681:
	ld.a	a4,[a12]
.L682:
	ld.a	a5,[a5]
.L683:
	ld.hu	d15,[a5]54
.L684:
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L685:
	st.a	[a2],a4
.L686:
	j	.L40
.L39:
.L35:
.L38:
.L37:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   509  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   510                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   511  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   512  #if(DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   513                  else if ( ( dataSubFunc_u8 == 0x02u ) &&
	jne	d12,#2,.L41
.L687:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   514                          ( ( nrCtrlOptRecSize_u16 == s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStop_u16 ) ||
	mov.aa	a5,a4
	add.a	a5,#4
	ld.a	a7,[a5]
.L688:
	ld.hu	d0,[a7]38
.L689:
	jeq	d13,d0,.L42
.L690:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   515                                  ( ( s_adrRoutine_pcst->dataFixedLen_b == FALSE ) &&
	ld.bu	d15,[a4]2
.L691:
	jne	d15,#0,.L43
.L692:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   516                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStop_u16 ) &&
	jlt.u	d0,d13,.L44
.L693:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   517                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16 ) ) ) )
	ld.hu	d15,[a7]50
.L694:
	jlt.u	d13,d15,.L45
.L42:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   518                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   519                      /* Process the Stop request in case -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   520                       * 1.If Stop request comes without a start request in case Start routine is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   521                       * 2.If Stop request comes without a start request or after a stop request in case RequestSequenceError is disabled and Start Routine is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   522                       * 3.If Stop request comes after a start request or start and request results request in case RequestSequenceError is enabled or disabled
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   523                       */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   524  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   525                      if (((DCM_ROUTINE_IDLE == Dcm_RoutineStatus_aen[s_dataStatusIdx_u16])&& (s_adrRoutine_pcst->flgStartRoutine_b==FALSE ))||
	movh.a	a2,#@his(s_dataStatusIdx_u16)
	lea	a2,[a2]@los(s_dataStatusIdx_u16)
	ld.hu	d15,[a2]0
.L695:
	movh.a	a2,#@his(Dcm_RoutineStatus_aen)
	lea	a2,[a2]@los(Dcm_RoutineStatus_aen)
.L696:
	addsc.a	a2,a2,d15,#2
	ld.w	d15,[a2]
.L697:
	jne	d15,#0,.L46
.L698:
	ld.bu	d0,[a4]12
.L699:
	jeq	d0,#0,.L47
.L46:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   526                              (((DCM_ROUTINE_IDLE == Dcm_RoutineStatus_aen[s_dataStatusIdx_u16]) || (DCM_ROUTINE_STOP == Dcm_RoutineStatus_aen[s_dataStatusIdx_u16]))&& ( s_adrRoutine_pcst->flgReqSequenceErrorSupported_b==FALSE))||
	jeq	d15,#0,.L48
.L700:
	jne	d15,#1,.L49
.L48:
	ld.bu	d0,[a4]15
.L701:
	jeq	d0,#0,.L50
.L49:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   527                              ((DCM_ROUTINE_IDLE != Dcm_RoutineStatus_aen[s_dataStatusIdx_u16]) &&(DCM_ROUTINE_STOP != Dcm_RoutineStatus_aen[s_dataStatusIdx_u16])))
	jeq	d15,#0,.L51
.L702:
	jeq	d15,#1,.L52
.L50:
.L47:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   528                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   529                          adrSignal_pcst = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrStopInSignalRef_cpcst;
	ld.a	a14,[a7]16
.L703:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   530                          nrSig_u8 = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->nrStopInSignals_u8;
	ld.bu	d14,[a7]61
.L704:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   531                          Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16);
	ld.hu	d15,[a7]50
.L705:
	sub	d0,d13,d15
.L706:
	st.h	[a6],d0
.L707:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   532                          Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16]);
	movh.a	a2,#@his(Dcm_RCInPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCInPtr_pu8)
.L708:
	ld.a	a4,[a12]4
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L709:
	st.a	[a2],a4
.L710:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   533                          Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStop_u16]);
	movh.a	a2,#@his(Dcm_RCOutPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCOutPtr_pu8)
.L711:
	ld.a	a4,[a12]
.L712:
	ld.a	a5,[a5]
.L713:
	ld.hu	d15,[a5]56
.L714:
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L715:
	st.a	[a2],a4
.L716:
	j	.L53
.L52:
.L51:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   534                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   535                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   536                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   537                          /* Checking for the request sequence error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   538                          /*Flag for request Sequence Error is set TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   539                          flgReqSequenceError_b = TRUE;
	mov	d9,#1
.L53:
	j	.L54
.L45:
.L41:
.L44:
.L43:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   540                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   541                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   542  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   543  #if(DCM_CFG_REQRESULTSSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   544                  /*Special case:Request results with control option record*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   545                  else if  ((dataSubFunc_u8 == 0x03u) &&
	jne	d12,#3,.L55
.L717:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   546                          (( nrCtrlOptRecSize_u16 == s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeReqRslt_u16) ||
	mov.aa	a5,a4
	add.a	a5,#4
	ld.a	a7,[a5]
.L718:
	ld.hu	d0,[a7]40
.L719:
	jeq	d13,d0,.L56
.L720:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   547                                  ( ( s_adrRoutine_pcst->dataFixedLen_b == FALSE ) &&
	ld.bu	d15,[a4]2
.L721:
	jne	d15,#0,.L57
.L722:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   548                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeReqRslt_u16  ) &&
	jlt.u	d0,d13,.L58
.L723:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   549                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16 ) ) ))
	ld.hu	d15,[a7]52
.L724:
	jlt.u	d13,d15,.L59
.L56:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   550  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   551                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   552                      /* Process the requestResults request -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   553                       * 1. If Request results request comes without a start request for routines which so not support Start Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   554                       * 2. If Request results request comes for a Routine which is not started but supports Start Routine and RequestSequenceError is disabled
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   555                       * 3. If Request results request comes for a Routine which is stared irrespective of whether RequestSequence error is enabled/disabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   556                      if (((DCM_ROUTINE_IDLE == Dcm_RoutineStatus_aen[s_dataStatusIdx_u16]) && (s_adrRoutine_pcst->flgStartRoutine_b==FALSE) )||
	movh.a	a2,#@his(s_dataStatusIdx_u16)
	lea	a2,[a2]@los(s_dataStatusIdx_u16)
	ld.hu	d15,[a2]0
.L725:
	movh.a	a2,#@his(Dcm_RoutineStatus_aen)
	lea	a2,[a2]@los(Dcm_RoutineStatus_aen)
.L726:
	addsc.a	a2,a2,d15,#2
	ld.w	d0,[a2]
.L727:
	jne	d0,#0,.L60
.L728:
	ld.bu	d15,[a4]12
.L729:
	jeq	d15,#0,.L61
.L60:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   557                              (( DCM_ROUTINE_IDLE == Dcm_RoutineStatus_aen[s_dataStatusIdx_u16])&& ( s_adrRoutine_pcst->flgReqSequenceErrorSupported_b==FALSE))||
	jne	d0,#0,.L62
.L730:
	ld.bu	d15,[a4]15
.L731:
	jeq	d15,#0,.L63
.L62:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   558                              ((DCM_ROUTINE_IDLE != Dcm_RoutineStatus_aen[s_dataStatusIdx_u16])))
	jeq	d0,#0,.L64
.L63:
.L61:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   559                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   560                          adrSignal_pcst = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrReqRslInSignalRef_cpcst;
	ld.a	a14,[a7]20
.L732:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   561                          nrSig_u8 = s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->nrReqRslInSignals_u8;
	ld.bu	d14,[a7]62
.L733:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   562                          Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16);
	ld.hu	d15,[a7]52
.L734:
	sub	d0,d13,d15
.L735:
	st.h	[a6],d0
.L736:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   563                          Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16]);
	movh.a	a2,#@his(Dcm_RCInPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCInPtr_pu8)
.L737:
	ld.a	a4,[a12]4
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L738:
	st.a	[a2],a4
.L739:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   564                          Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeReqRslt_u16]);
	movh.a	a2,#@his(Dcm_RCOutPtr_pu8)
	lea	a2,[a2]@los(Dcm_RCOutPtr_pu8)
.L740:
	ld.a	a4,[a12]
.L741:
	ld.a	a5,[a5]
.L742:
	ld.hu	d15,[a5]58
.L743:
	addsc.a	a4,a4,d15,#0
	add.a	a4,#3
.L744:
	st.a	[a2],a4
.L745:
	j	.L65
.L64:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   565                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   566                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   567                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   568                          /* Checking for the request sequence error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   569                          /*Flag for request Sequence Error is set TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   570                          flgReqSequenceError_b = TRUE;
	mov	d9,#1
.L65:
	j	.L66
.L59:
.L55:
.L58:
.L57:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   571                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   572                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   573  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   574                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   575                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   576                      /* Received message has a invalid length for this RID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   577                      *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L746:
	st.b	[a13],d15
.L747:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   578                      /* Reset the RC State back to IDLE so that it does not process the request further */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   579                      Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L748:
	ld.a	a2,[a10]
	st.w	[a2],d15
.L66:
.L54:
.L40:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   580                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   581  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   582                  if(*dataNegRespCode_u8 == 0)
	ld.bu	d15,[a13]
.L749:
	jne	d15,#0,.L67
.L750:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   583                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   584                      /*If control option record is present in the request call the appl function to check the validity */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   585                      if(nrCtrlOptRecSize_u16 > 0)
	jeq	d13,#0,.L68
.L751:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   586                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   587                          dataRetVal_u8 = DcmAppl_DcmCheckRoutineControlOptionRecord(dataRId_u16,dataSubFunc_u8,&pMsgContext->reqData[3],nrCtrlOptRecSize_u16);
	ld.a	a4,[a12]4
.L752:
	add.a	a4,#3
.L753:
	mov	e4,d12,d8
	mov	d6,d13
.L360:
	call	DcmAppl_DcmCheckRoutineControlOptionRecord
.L353:
	mov	d11,d2
.L361:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   588                          if (E_OK != dataRetVal_u8)
	jeq	d11,#0,.L69
.L754:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   589                          {   /*Control option record is incorrect.*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   590                              *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L755:
	st.b	[a13],d15
.L756:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   591                              Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L757:
	ld.a	a2,[a10]
	st.w	[a2],d15
.L69:
.L68:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   592                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   593                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   594                      if(*dataNegRespCode_u8 == 0)
	ld.bu	d15,[a13]
.L758:
	jne	d15,#0,.L70
.L759:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   595                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   596                          /**********Mode rule Check*************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   597                          if(s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrUserRidModeRule_pfct!=NULL_PTR)
	ld.a	a15,[a15]
.L760:
	ld.a	a15,[a15]4
.L761:
	ld.a	a15,[a15]8
.L762:
	jz.a	a15,.L71
.L763:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   598                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   599                              /* Call the configured Dcm Appl API to do RID specific checks */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   600                              dataRetVal_u8 = (*s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrUserRidModeRule_pfct)(dataNegRespCode_u8,dataRId_u16,dataSubFunc_u8);
	mov.aa	a4,a13
.L363:
	mov	e4,d12,d8
	calli	a15
.L362:
	mov	d11,d2
.L364:
	j	.L72
.L71:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   601                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   602                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   603                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   604                              /* Call the user Dcm Appl API to do RID specific checks */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   605                              dataRetVal_u8 = DcmAppl_UserRIDModeRuleService(dataNegRespCode_u8,dataRId_u16,dataSubFunc_u8);
	mov.aa	a4,a13
.L366:
	mov	e4,d12,d8
	call	DcmAppl_UserRIDModeRuleService
.L365:
	mov	d11,d2
.L72:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   606                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   607                          /* Ignore the NRC in case the DcmAppl API returns TRUE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   608                          if(dataRetVal_u8 !=E_OK)
	jeq	d11,#0,.L73
.L764:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   609                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   610                              if(*dataNegRespCode_u8==0x00)
	ld.bu	d15,[a13]
.L765:
	jne	d15,#0,.L74
.L766:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   611                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   612                                  *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L767:
	st.b	[a13],d15
.L74:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   613                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   614                              flgModeRetVal_b = FALSE;
	mov	d10,#0
.L768:
	j	.L75
.L73:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   615                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   616                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   617                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   618                              *dataNegRespCode_u8=0x00;
	mov	d15,#0
.L769:
	st.b	[a13],d15
.L75:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   619                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   620  #if(DCM_CFG_DSP_MODERULEFORROUTINES != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   621                          if(*dataNegRespCode_u8 == 0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   622                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   623                              if (( dataSubFunc_u8 == 0x01u ) && (s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStart_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   624                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   625  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   626                                  flgModeRetVal_b=(*(s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStart_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   627                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   628                              else if (( dataSubFunc_u8 == 0x02u ) && (s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStop_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   629  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   630                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   631                                  flgModeRetVal_b=(*(s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStop_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   632                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   633                              else if (( dataSubFunc_u8 == 0x03u ) && (s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForRequestResult_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   634                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   635                                  flgModeRetVal_b=(*(s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForRequestResult_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   636                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   637                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   638                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   639                                  /*dummy else */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   640                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   641                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   642  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   643                          if(flgModeRetVal_b == FALSE)
	jne	d10,#0,.L76
.L770:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   644                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   645                              Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L771:
	ld.a	a15,[a10]
	st.w	[a15],d15
.L772:
	j	.L77
.L76:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   646                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   647                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   648                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   649                              /* Request sequence error check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   650  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   651                              if(flgReqSequenceError_b !=FALSE)
	jeq	d9,#0,.L78
.L773:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   652                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   653                                  *dataNegRespCode_u8 = DCM_E_REQUESTSEQUENCEERROR;
	mov	d15,#36
.L774:
	st.b	[a13],d15
.L775:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   654                                  Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L776:
	ld.a	a15,[a10]
	st.w	[a15],d15
.L777:
	j	.L79
.L78:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   655                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   656                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   657                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   658                                  /*DCM_CFG_ROUTINEVARLENGTH shall be DCM_CFG_ON only if all the RIDs are of variable length and no fixed length signals are configured under them*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   659  #if (DCM_CFG_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   660                                  for ( idxLoop_qu16 = 0 ; ( ( idxLoop_qu16 < nrSig_u8 ) && (*dataNegRespCode_u8==0x00)&& (adrSignal_pcst!=NULL_PTR) &&( adrSignal_pcst->dataType_u8 != DCM_VARIABLE_LENGTH ) ) ; idxLoop_qu16++ )
	mov	d8,#0
.L348:
	j	.L80
.L81:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   661                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   662  #if (DCM_CFG_ROUTINEARRAY_INSIG != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   663                                      if(adrSignal_pcst->dataType_u8 >= DCM_RCARRAYINDEX)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   664                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   665                                          Dcm_RcSetSignalArray(adrSignal_pcst,&(pMsgContext->reqData[3]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   666                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   667                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   668  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   669                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   670                                          dataSigVal_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   671                                          dataSigVal_u32 = Dcm_GetSignal_u32(adrSignal_pcst->dataType_u8, adrSignal_pcst->posnStart_u16, &(pMsgContext->reqData[3]),adrSignal_pcst->dataEndianness_u8);
	ld.bu	d4,[a14]7
.L778:
	ld.hu	d5,[a14]0
.L779:
	ld.a	a4,[a12]4
.L780:
	add.a	a4,#3
.L781:
	ld.bu	d6,[a14]6
	call	Dcm_GetSignal_u32
.L368:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   672                                          Dcm_RCSetSigVal(adrSignal_pcst->dataType_u8,adrSignal_pcst->idxSignal_u16,dataSigVal_u32);
	ld.bu	d4,[a14]7
.L782:
	ld.hu	d5,[a14]4
.L783:
	mov	d6,d2
.L370:
	call	Dcm_RCSetSigVal
.L369:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   673                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   674                                      adrSignal_pcst++;
	lea	a14,[a14]8
.L784:
	add	d8,#1
.L367:
	extr.u	d8,d8,#0,#16
.L80:
	jge.u	d8,d14,.L82
.L785:
	ld.bu	d15,[a13]
.L786:
	jne	d15,#0,.L83
.L787:
	jz.a	a14,.L84
.L788:
	ld.bu	d15,[a14]7
.L789:
	jne	d15,#7,.L81
.L84:
.L83:
.L82:
.L79:
.L77:
.L70:
.L67:
	j	.L85
.L34:
.L33:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   675                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   676  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   677  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   678  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   679                                  if(adrSignal_pcst != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   680                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   681                                      /* Copy Varialble length Control Option Record into buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   682                                      if((adrSignal_pcst->dataType_u8 == DCM_VARIABLE_LENGTH) && (Dcm_RCCurrDataLength_u16 != 0x00))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   683                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   684                                          /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   685                                          DCM_MEMCOPY(&(Dcm_InParameterBuf_au8[0]),Dcm_RCInPtr_pu8 ,Dcm_RCCurrDataLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   686                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   687                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   688  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   689                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   690                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   691                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   692                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   693              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   694              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   695              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   696                  /* Requested Sub-Function is not supported for this RID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   697                  *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
	mov	d15,#18
.L790:
	st.b	[a13],d15
.L85:
	j	.L86
.L28:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   698              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   699          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   700          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   701          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   702              /* Routine Control has failed the Security Check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   703              *dataNegRespCode_u8 = DCM_E_SECURITYACCESSDENIED;
	mov	d15,#51
.L371:
	st.b	[a13],d15
.L86:
	j	.L87
.L27:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   704          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   705      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   706      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   707      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   708          /* Routine Identifier is not supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   709          *dataNegRespCode_u8=DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L372:
	st.b	[a13],d15
.L87:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   710      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   711      return dataRetVal_u8;
	mov	d2,d11
.L373:
	j	.L88

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   712  }
.L88:
	ret
.L287:
	
__Dcm_Prv_RcProcessRoutine_function_end:
	.size	Dcm_Prv_RcProcessRoutine,__Dcm_Prv_RcProcessRoutine_function_end-Dcm_Prv_RcProcessRoutine
.L210:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Prv_RcPendingRoutine',code,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.text.DcmDspUds_Rc.Dcm_Prv_RcPendingRoutine'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   713  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   714  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   715  **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   716   Function name    : Dcm_Prv_RcPendingRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   717   Syntax           : Dcm_Prv_RcPendingRoutine(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   718   Description      : This Function is used to process the Pending Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   719   Parameter        :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   720   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   721  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   722  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcPendingRoutine(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; Function Dcm_Prv_RcPendingRoutine
.L154:
Dcm_Prv_RcPendingRoutine:	.type	func
	sub.a	a10,#8
.L374:
	mov.aa	a14,a4
.L377:
	mov.aa	a12,a5
.L378:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   723          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   724  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   725      P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_CONST)  adrSignal_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   726  #if (DCM_CFG_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   727      VAR(uint32, AUTOMATIC)                                          dataSigVal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   728  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   729      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   730      VAR(uint8,AUTOMATIC) nrSig_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   731      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   732      adrSignal_pcst = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   733      dataRetVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   734  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   735      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   736       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   737      /*Set the Flag for s_IsRCSubfunctionCalled_b is set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   738      s_IsRCSubfunctionCalled_b = TRUE;
	movh.a	a15,#@his(s_IsRCSubfunctionCalled_b)
	lea	a15,[a15]@los(s_IsRCSubfunctionCalled_b)
.L795:
	mov	d15,#1
.L796:
	st.b	[a15],d15
.L797:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   739      dataRetVal_u8 = (*Dcm_adrRoutinePtr_pcst->adrCallRoutine_pfct)(Dcm_dataRCSubFunc_u8);
	movh.a	a4,#@his(Dcm_dataRCSubFunc_u8)
.L376:
	lea	a4,[a4]@los(Dcm_dataRCSubFunc_u8)
	st.a	[a10],a4
.L798:
	movh.a	a13,#@his(Dcm_adrRoutinePtr_pcst)
	lea	a13,[a13]@los(Dcm_adrRoutinePtr_pcst)
	ld.a	a2,[a13]
.L799:
	ld.a	a2,[a2]8
.L800:
	ld.bu	d4,[a4]
	calli	a2
.L375:
	mov	d8,d2
.L381:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   740      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   741       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   742      s_IsRCSubfunctionCalled_b = FALSE;
	mov	d0,#0
.L801:
	st.b	[a15],d0
.L802:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   743      /*Check for Infrastructure Error present or not and use routine port is supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   744      if((Dcm_IsInfrastructureErrorPresent_b(dataRetVal_u8) != FALSE) && (Dcm_adrRoutinePtr_pcst->UsePort != FALSE))
	mov	d4,d8
.L380:
	call	Dcm_IsInfrastructureErrorPresent_b
.L382:
	jeq	d2,#0,.L89
.L803:
	ld.a	a15,[a13]
.L804:
	ld.bu	d15,[a15]3
.L805:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   745      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   746          dataRetVal_u8 = DCM_INFRASTRUCTURE_ERROR;
	seln	d8,d15,d8,#128
.L90:
.L89:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   747      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   748      if (dataRetVal_u8 == E_OK)
	jne	d8,#0,.L91
.L806:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   749      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   750          if ( Dcm_dataRCSubFunc_u8 == 0x01 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   751          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   752  #if(DCM_CFG_STARTSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   753              adrSignal_pcst = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->adrStartOutSignalRef_cpcst;
	ld.a	a15,[a13]
.L807:
	ld.a	a15,[a15]4
.L808:
	ld.a	a2,[a10]
	ld.bu	d15,[a2]
.L809:
	jne	d15,#1,.L92
.L810:
	ld.a	a12,[a15]24
.L379:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   754              nrSig_u8 = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->nrStartOutSignals_u8;
	ld.bu	d9,[a15]63
.L383:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   755              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStart_u16;
	ld.hu	d0,[a15]54
.L811:
	add	d15,d0,#3
.L812:
	st.w	[a14]12,d15
.L813:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   756  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   757              /*Routine is Started  ,Set the status to RC_START_OK  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   758              Dcm_RoutineStatus_aen[s_dataStatusIdx_u16] = DCM_ROUTINE_STARTED;
	movh.a	a15,#@his(s_dataStatusIdx_u16)
	lea	a15,[a15]@los(s_dataStatusIdx_u16)
	ld.hu	d15,[a15]0
.L814:
	movh.a	a15,#@his(Dcm_RoutineStatus_aen)
	lea	a15,[a15]@los(Dcm_RoutineStatus_aen)
.L815:
	addsc.a	a15,a15,d15,#2
.L816:
	mov	d0,#2
.L817:
	st.w	[a15],d0
.L818:
	j	.L93
.L92:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   759  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   760          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   761  #if(DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   762          else if ( Dcm_dataRCSubFunc_u8 == 0x02 )
	jne	d15,#2,.L94
.L819:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   763          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   764              adrSignal_pcst = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->adrStopOutSignalRef_cpcst;
	ld.a	a12,[a15]28
.L384:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   765              nrSig_u8 = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->nrStopOutSignals_u8;
	ld.bu	d9,[a15]64
.L385:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   766              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStop_u16;
	ld.hu	d0,[a15]56
.L820:
	add	d15,d0,#3
.L821:
	st.w	[a14]12,d15
.L822:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   767              /*Routine is Stopped   ,Set the  status to default status DCM_ROUTINE_STOP  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   768              Dcm_RoutineStatus_aen[s_dataStatusIdx_u16] = DCM_ROUTINE_STOP;
	movh.a	a15,#@his(s_dataStatusIdx_u16)
	lea	a15,[a15]@los(s_dataStatusIdx_u16)
	ld.hu	d15,[a15]0
.L823:
	movh.a	a15,#@his(Dcm_RoutineStatus_aen)
	lea	a15,[a15]@los(Dcm_RoutineStatus_aen)
.L824:
	addsc.a	a15,a15,d15,#2
.L825:
	mov	d15,#1
.L826:
	st.w	[a15],d15
.L827:
	j	.L95
.L94:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   769          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   770  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   771          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   772          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   773  #if(DCM_CFG_REQRESULTSSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   774              adrSignal_pcst = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->adrReqRsltOutSignalRef_cpcst;
	ld.a	a12,[a15]32
.L386:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   775              nrSig_u8 = Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->nrReqRsltOutSignals_u8;
	ld.bu	d9,[a15]65
.L387:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   776              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutinePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeReqRslt_u16;
	ld.hu	d15,[a15]58
.L828:
	add	d15,#3
.L829:
	st.w	[a14]12,d15
.L95:
.L93:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   777  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   778          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   779          for ( idxLoop_qu16 = 0 ; ( ( idxLoop_qu16 < nrSig_u8 ) && ( adrSignal_pcst->dataType_u8 != DCM_VARIABLE_LENGTH ) ) ; idxLoop_qu16++ )
	mov	d10,#0
.L388:
	j	.L96
.L97:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   780          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   781  #if(DCM_CFG_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   782  #if(DCM_CFG_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   783              if(adrSignal_pcst->dataType_u8 >= DCM_RCARRAYINDEX)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   784              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   785                  Dcm_RcStoreSignalArray(adrSignal_pcst,&(pMsgContext->resData[3]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   786              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   787              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   788  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   789              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   790                  dataSigVal_u32 = Dcm_RCGetSigVal_u32 ( adrSignal_pcst->dataType_u8, adrSignal_pcst->idxSignal_u16 );
	ld.bu	d4,[a12]7
.L830:
	ld.hu	d5,[a12]4
	call	Dcm_RCGetSigVal_u32
.L390:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   791                  Dcm_StoreSignal(adrSignal_pcst->dataType_u8, adrSignal_pcst->posnStart_u16, &(pMsgContext->resData[3]), dataSigVal_u32, adrSignal_pcst->dataEndianness_u8 );
	ld.bu	d4,[a12]7
.L831:
	ld.hu	d5,[a12]0
.L832:
	ld.a	a4,[a14]
.L833:
	add.a	a4,#3
.L834:
	ld.bu	d7,[a12]6
	mov	d6,d2
.L392:
	call	Dcm_StoreSignal
.L391:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   792              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   793  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   794              adrSignal_pcst++;
	lea	a12,[a12]8
.L835:
	add	d10,#1
.L389:
	extr.u	d10,d10,#0,#16
.L96:
	jge.u	d10,d9,.L98
.L836:
	ld.bu	d15,[a12]7
.L837:
	jne	d15,#7,.L97
.L98:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   795          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   796  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   797          if ( idxLoop_qu16 != nrSig_u8 )
	jeq	d10,d9,.L99
.L838:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   798          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   799              /* You enter here only if the last signal has dynamic or variable length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   800              pMsgContext->resDataLen = pMsgContext->resDataLen + Dcm_RCCurrDataLength_u16;
	ld.w	d15,[a14]12
.L839:
	movh.a	a15,#@his(Dcm_RCCurrDataLength_u16)
	lea	a15,[a15]@los(Dcm_RCCurrDataLength_u16)
	ld.hu	d0,[a15]0
.L840:
	add	d15,d0
.L841:
	st.w	[a14]12,d15
.L99:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   801          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   802  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   803          /* First byte after Service Id is the routineControlType or Sub-function byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   804          pMsgContext->resData[0] = Dcm_dataRCSubFunc_u8;
	ld.a	a15,[a14]
.L842:
	ld.a	a2,[a10]
	ld.bu	d15,[a2]
.L843:
	st.b	[a15],d15
.L844:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   805          /* Second and third byte is the two byte dataRId_u16 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   806          pMsgContext->resData[1] = ( uint8 )( Dcm_adrRoutinePtr_pcst->dataRId_u16 >> 8u ) ;
	ld.a	a2,[a13]
.L845:
	ld.a	a15,[a14]
.L846:
	ld.hu	d15,[a2]0
.L847:
	sha	d15,#-8
.L848:
	st.b	[a15]1,d15
.L849:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   807          pMsgContext->resData[2] = ( uint8 )( Dcm_adrRoutinePtr_pcst->dataRId_u16 & 0x00ffu ) ;
	ld.a	a15,[a14]
.L850:
	ld.hu	d15,[a2]0
.L851:
	st.b	[a15]2,d15
.L852:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   808  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   809          Dcm_stDspRCState_en = DCM_RC_IDLE;
	movh.a	a15,#@his(Dcm_stDspRCState_en)
	lea	a15,[a15]@los(Dcm_stDspRCState_en)
.L853:
	mov	d15,#1
.L854:
	st.w	[a15],d15
.L855:
	j	.L100
.L91:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   810      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   811      else if (dataRetVal_u8 == E_NOT_OK)
	jne	d8,#1,.L101
.L856:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   812      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   813          /* Copy the NRC value which has been updated by Application to the local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   814          if ( Dcm_RCNegResCode_u8 != 0 )
	movh.a	a15,#@his(Dcm_RCNegResCode_u8)
	lea	a15,[a15]@los(Dcm_RCNegResCode_u8)
	ld.bu	d15,[a15]
.L857:
	jeq	d15,#0,.L102
.L858:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   815          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   816              *dataNegRespCode_u8 = Dcm_RCNegResCode_u8;
	st.b	[a12],d15
.L859:
	j	.L103
.L102:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   817          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   818          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   819          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   820              /* Conditions Not Correct is set as the Application did not fill in any NegativeResponseCode but have returned E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   821              *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L860:
	st.b	[a12],d15
.L103:
	j	.L104
.L101:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   822          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   823      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   824      else if (dataRetVal_u8 == DCM_E_PENDING)
	mov	d15,#10
.L861:
	jne	d15,d8,.L105
.L862:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   825      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   826          /* Nothing to be done here except for setting the OpStatus, DSL/DSD shall trigger this service again in the next main function call */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   827          Dcm_RCOpStatus_u8 = DCM_PENDING;
	movh.a	a15,#@his(Dcm_RCOpStatus_u8)
	lea	a15,[a15]@los(Dcm_RCOpStatus_u8)
.L863:
	mov	d15,#1
.L864:
	st.b	[a15],d15
.L865:
	j	.L106
.L105:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   828  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   829          /* As NRC code has been updated, terminate processing and send NRC to tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   830      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   831      else if (dataRetVal_u8 == DCM_E_FORCE_RCRRP)
	mov	d15,#12
.L866:
	jne	d15,d8,.L107
.L867:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   832      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   833          /*Do nothing NRC78 is triggered from the Statemachine*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   834          Dcm_RCOpStatus_u8=DCM_FORCE_RCRRP_OK;
	movh.a	a15,#@his(Dcm_RCOpStatus_u8)
	lea	a15,[a15]@los(Dcm_RCOpStatus_u8)
.L868:
	mov	d15,#3
.L869:
	st.b	[a15],d15
.L870:
	j	.L108
.L107:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   835      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   836      else if ((dataRetVal_u8 == DCM_INFRASTRUCTURE_ERROR) && (Dcm_adrRoutinePtr_pcst->UsePort != FALSE))
	mov	d15,#128
.L871:
	jne	d15,d8,.L109
.L872:
	ld.a	a15,[a13]
.L873:
	ld.bu	d15,[a15]3
.L874:
	jeq	d15,#0,.L110
.L875:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   837      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   838          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L876:
	st.b	[a12],d15
.L877:
	j	.L111
.L110:
.L109:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   839      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   840      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   841      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   842          if ( Dcm_RCNegResCode_u8 == 0 )
	movh.a	a15,#@his(Dcm_RCNegResCode_u8)
	lea	a15,[a15]@los(Dcm_RCNegResCode_u8)
	ld.bu	d15,[a15]
.L878:
	jne	d15,#0,.L112
.L879:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   843          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   844              /* Function returns a return value not defined within Routine Control service, but hasn't set NRC */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   845              *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L880:
	st.b	[a12],d15
.L881:
	j	.L113
.L112:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   846          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   847          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   848          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   849              /* As NRC code has been updated, terminate processing and send NRC to tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   850              *dataNegRespCode_u8 = Dcm_RCNegResCode_u8;
	st.b	[a12],d15
.L113:
.L111:
.L108:
.L106:
.L104:
.L100:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   851          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   852      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   853      return dataRetVal_u8;
	mov	d2,d8
.L393:
	j	.L114

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   854  }
.L114:
	ret
.L304:
	
__Dcm_Prv_RcPendingRoutine_function_end:
	.size	Dcm_Prv_RcPendingRoutine,__Dcm_Prv_RcPendingRoutine_function_end-Dcm_Prv_RcPendingRoutine
.L215:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_DcmRoutineControl',code,cluster('Dcm_DcmRoutineControl')
	.sect	'.text.DcmDspUds_Rc.Dcm_DcmRoutineControl'
	.align	2
	
	.global	Dcm_DcmRoutineControl

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   855  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   856  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   857  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   858  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   859   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   860   Function name    : Dcm_Prv_RcProcessRangeRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   861   Syntax           : Dcm_Prv_RcProcessRangeRoutine(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   862   Description      : This Function is used to process the Range Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   863   Parameter        :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   864   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   865  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   866  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcProcessRangeRoutine(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   867          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   868          VAR(uint16,AUTOMATIC) dataRId_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   869  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   870      P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_CONST)  adrSignal_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   871      VAR(uint32, AUTOMATIC) dataSessionBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   872      VAR(uint32, AUTOMATIC) dataSecurityBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   873  #if (DCM_CFG_RCRANGE_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   874      VAR(uint32, AUTOMATIC)  dataSigVal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   875      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   876  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   877      VAR(uint16,AUTOMATIC) nrCtrlOptRecSize_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   878      VAR(uint8,AUTOMATIC) dataSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   879      VAR(uint8,AUTOMATIC) nrSig_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   880      VAR(boolean, AUTOMATIC) flgReqSequenceError_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   881      VAR(boolean, AUTOMATIC) flgModeRetVal_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   882      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   883  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   884      /*Initialize the flag for Request sequence error is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   885      flgReqSequenceError_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   886      /*Initialize the flag for mode return value is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   887      flgModeRetVal_b =TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   888      adrSignal_pcst = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   889      dataRetVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   890      dataSubFunc_u8 = pMsgContext->reqData[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   891      /* From the received length indicated to this service check what is left after these three bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   892      nrCtrlOptRecSize_u16 = (uint16)(pMsgContext->reqDataLen - 3u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   893      dataSessionBitMask_u32 = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataSessBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   894  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   895      /* If dataRId_u16 is valid, then check if its allowed to execute that Routine in the active session and check if it is available in current DCM configuration if post build is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   896      if(((Dcm_DsldGetActiveSessionMask_u32() & dataSessionBitMask_u32) != 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   897  #if (DCM_CFG_POSTBUILD_SUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   898              && ((Dcm_ActiveConfiguration_u8 & Dcm_DspRoutineRange_cast[s_dataStatusIdx_u16].dataConfigMask_u8)!= 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   899  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   900      )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   901      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   902          /* Check now if its allowed to execute that Routine in the active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   903          dataSecurityBitMask_u32 = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataSecBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   904  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   905          /* Check now if its allowed to execute that Routine in the active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   906          if((Dcm_DsldGetActiveSecurityMask_u32() & dataSecurityBitMask_u32) != 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   907          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   908  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   909              /* StartRoutine sub-function is a mandatory for any routine, but RequestResults and StopRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   910               * aren't. Thus, it is required to check if requested sub-function is supported for that routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   911               * which was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   912              if (( ( dataSubFunc_u8 == 0x01u ) && ( s_adrRoutineRange_pcst->flgStartRoutine_b != FALSE ))||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   913                      ( ( dataSubFunc_u8 == 0x02u ) && ( s_adrRoutineRange_pcst->flgStopRoutine_b != FALSE ))||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   914                      ( ( dataSubFunc_u8 == 0x03u ) && ( s_adrRoutineRange_pcst->flgReqRsltRoutine_b != FALSE ) ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   915              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   916                  /* Initialize the global variables to retain the values in case of DCM_E_PENDING */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   917                  Dcm_adrRoutineRangePtr_pcst = s_adrRoutineRange_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   918                  s_PendingRidRange_u16 = dataRId_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   919                  Dcm_dataRCSubFunc_u8 = dataSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   920                  Dcm_RCOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   921                  Dcm_RCNegResCode_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   922                  Dcm_RCCurrDataLength_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   923                  Dcm_stDspRCState_en = DCM_RC_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   924                  nrSig_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   925  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   926                  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   927                   * Now check if the total request length is valid based on
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   928                   * 1. If that routine is FixedLength or not
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   929                   *   a. If FixedLength is TRUE, then the match should be for the exact length
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   930                   *   b. If FixedLength is FALSE, then the check should be that the received length is not more
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   931                   *   than the maximum length, but also not less to miss out the fixed signals within that dataRId_u16
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   932                   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   933                  if ( ( dataSubFunc_u8 == 0x01u ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   934                          ( ( nrCtrlOptRecSize_u16 == s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStart_u16 ) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   935                                  ( ( s_adrRoutineRange_pcst->dataFixedLen_b == FALSE ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   936                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStart_u16 ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   937                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16 ) ) ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   938                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   939  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   940  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   941  #if(DCM_CFG_RCRANGE_STARTSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   942                      adrSignal_pcst = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrStartInSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   943                      nrSig_u8 = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->nrStartInSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   944                      Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   945                      Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStart_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   946                      Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStart_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   947  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   948                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   949  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   950  #if(DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   951                  else if ( ( dataSubFunc_u8 == 0x02u ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   952                          ( ( nrCtrlOptRecSize_u16 == s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStop_u16 ) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   953                                  ( ( s_adrRoutineRange_pcst->dataFixedLen_b == FALSE ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   954                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeStop_u16 ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   955                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16 ) ) ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   956                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   957                      /* Process the Stop request in case -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   958                       * 1.If Stop request comes without a start request in case Start routine is not supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   959                       * 2.If Stop request comes without a start request or after a stop request in case RequestSequenceError is disabled and Start Routine is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   960                       * 3.If Stop request comes after a start request or start and request results request in case RequestSequenceError is enabled or disabled
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   961                       */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   962  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   963                      if (((DCM_ROUTINE_IDLE == Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16])&& (s_adrRoutineRange_pcst->flgStartRoutine_b==FALSE ))||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   964                              (((DCM_ROUTINE_IDLE == Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16]) || (DCM_ROUTINE_STOP == Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16]))&& ( s_adrRoutineRange_pcst->flgReqSequenceErrorSupported_b==FALSE))||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   965                              ((DCM_ROUTINE_IDLE != Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16]) &&(DCM_ROUTINE_STOP != Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16])))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   966                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   967                          adrSignal_pcst = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrStopInSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   968                          nrSig_u8 = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->nrStopInSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   969                          Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   970                          Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeStop_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   971                          Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStop_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   972                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   973                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   974                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   975                          /* Checking for the request sequence error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   976                          /*Flag for request Sequence Error is set TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   977                          flgReqSequenceError_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   978                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   979                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   980  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   981  #if(DCM_CFG_RCRANGE_REQRESULTSSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   982                  /*Special case:Request results with control option record*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   983                  else if  ((dataSubFunc_u8 == 0x03u) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   984                          (( nrCtrlOptRecSize_u16 == s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeReqRslt_u16) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   985                                  ( ( s_adrRoutineRange_pcst->dataFixedLen_b == FALSE ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   986                                          ( nrCtrlOptRecSize_u16 <= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataCtrlOptRecSizeReqRslt_u16  ) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   987                                          ( nrCtrlOptRecSize_u16 >= s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16 ) ) ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   988  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   989                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   990                      /* Process the requestResults request -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   991                       * 1. If Request results request comes without a start request for routines which so not support Start Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   992                       * 2. If Request results request comes for a Routine which is not started but supports Start Routine and RequestSequenceError is disabled
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   993                       * 3. If Request results request comes for a Routine which is stared irrespective of whether RequestSequence error is enabled/disabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   994                      if (((DCM_ROUTINE_IDLE == Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16]) && (s_adrRoutineRange_pcst->flgStartRoutine_b==FALSE) )||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   995                              (( DCM_ROUTINE_IDLE == Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16])&& ( s_adrRoutineRange_pcst->flgReqSequenceErrorSupported_b==FALSE))||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   996                              ((DCM_ROUTINE_IDLE != Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16])))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   997                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   998                          adrSignal_pcst = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrReqRslInSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	   999                          nrSig_u8 = s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->nrReqRslInSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1000                          Dcm_RCCurrDataLength_u16 = (uint16)(nrCtrlOptRecSize_u16 - s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1001                          Dcm_RCInPtr_pu8 = &(pMsgContext->reqData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinCtrlOptRecSizeReqRslt_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1002                          Dcm_RCOutPtr_pu8 = &(pMsgContext->resData[3+s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeReqRslt_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1003                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1004                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1005                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1006                          /* Checking for the request sequence error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1007                          /*Flag for request Sequence Error is set TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1008                          flgReqSequenceError_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1009                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1010                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1011  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1012                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1013                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1014                      /* Received message has a invalid length for this RID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1015                      *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1016                      /* Reset the RC State back to IDLE so that it does not process the request further */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1017                      Dcm_stDspRCState_en = DCM_RC_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1018                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1019  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1020                  if(*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1021                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1022                      /*If control option record is present in the request call the appl function to check the validity */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1023                      if(nrCtrlOptRecSize_u16 > 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1024                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1025                          dataRetVal_u8 = DcmAppl_DcmCheckRoutineControlOptionRecord(dataRId_u16,dataSubFunc_u8,&pMsgContext->reqData[3],nrCtrlOptRecSize_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1026                          if (E_OK != dataRetVal_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1027                          {   /*Control option record is incorrect.*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1028                              *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1029                              Dcm_stDspRCState_en = DCM_RC_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1030                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1031                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1032                      if(*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1033                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1034                          /**********Mode rule Check*************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1035                          if(s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrUserRidModeRule_pfct!=NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1036                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1037                              /* Call the configured Dcm Appl API to do RID specific checks */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1038                              dataRetVal_u8 = (*s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrUserRidModeRule_pfct)(dataNegRespCode_u8,dataRId_u16,dataSubFunc_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1039                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1040                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1041                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1042                              /* Call the user Dcm Appl API to do RID specific checks */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1043                              dataRetVal_u8 = DcmAppl_UserRIDModeRuleService(dataNegRespCode_u8,dataRId_u16,dataSubFunc_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1044                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1045                          /* Ignore the NRC in case the DcmAppl API returns TRUE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1046                          if(dataRetVal_u8 !=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1047                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1048                              if(*dataNegRespCode_u8==0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1049                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1050                                  *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1051                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1052                              flgModeRetVal_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1053                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1054                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1055                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1056                              *dataNegRespCode_u8=0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1057                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1058  #if(DCM_CFG_DSP_MODERULEFORRCRANGE != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1059                          if(*dataNegRespCode_u8 == 0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1060                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1061                              if (( dataSubFunc_u8 == 0x01u ) && (s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStart_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1062                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1063  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1064                                  flgModeRetVal_b=(*(s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStart_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1065                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1066                              else if (( dataSubFunc_u8 == 0x02u ) && (s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStop_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1067  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1068                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1069                                  flgModeRetVal_b=(*(s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForStop_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1070                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1071                              else if (( dataSubFunc_u8 == 0x03u ) && (s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForRequestResult_pfct != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1072                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1073                                  flgModeRetVal_b=(*(s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->adrModeRuleForRequestResult_pfct))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1074                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1075                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1076                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1077                                  /*dummy else */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1078                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1079                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1080  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1081                          if(flgModeRetVal_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1082                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1083                              Dcm_stDspRCState_en = DCM_RC_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1084                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1085                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1086                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1087                              /* Request sequence error check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1088  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1089                              if(flgReqSequenceError_b !=FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1090                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1091                                  *dataNegRespCode_u8 = DCM_E_REQUESTSEQUENCEERROR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1092                                  Dcm_stDspRCState_en = DCM_RC_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1093                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1094                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1095                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1096                                  /*DCM_CFG_RCRANGE_ROUTINEVARLENGTH shall be DCM_CFG_ON only if all the RIDs are of variable length and no fixed length signals are configured under them*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1097  #if (DCM_CFG_RCRANGE_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1098                                  for ( idxLoop_qu16 = 0 ; ( ( idxLoop_qu16 < nrSig_u8 ) && (*dataNegRespCode_u8==0x00)&& (adrSignal_pcst!=NULL_PTR) &&( adrSignal_pcst->dataType_u8 != DCM_VARIABLE_LENGTH ) ) ; idxLoop_qu16++ )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1099                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1100  #if (DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1101                                      if(adrSignal_pcst->dataType_u8 >= DCM_RCARRAYINDEX)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1102                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1103                                          Dcm_RcSetSignalArray(adrSignal_pcst,&(pMsgContext->reqData[3]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1104                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1105                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1106  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1107                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1108                                          dataSigVal_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1109                                          dataSigVal_u32 = Dcm_GetSignal_u32(adrSignal_pcst->dataType_u8, adrSignal_pcst->posnStart_u16, &(pMsgContext->reqData[3]),adrSignal_pcst->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1110                                          Dcm_RCSetSigVal(adrSignal_pcst->dataType_u8,adrSignal_pcst->idxSignal_u16,dataSigVal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1111                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1112                                      adrSignal_pcst++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1113                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1114  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1115  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1116  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1117                                  if(adrSignal_pcst != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1118                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1119                                      /* Copy Varialble length Control Option Record into buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1120                                      if((adrSignal_pcst->dataType_u8 == DCM_VARIABLE_LENGTH) && (Dcm_RCCurrDataLength_u16 != 0x00))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1121                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1122                                          /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1123                                          DCM_MEMCOPY(&(Dcm_InParameterBuf_au8[0]),Dcm_RCInPtr_pu8 ,Dcm_RCCurrDataLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1124                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1125                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1126  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1127                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1128                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1129                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1130                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1131              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1132              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1133              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1134                  /* Requested Sub-Function is not supported for this RID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1135                  *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1136              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1137          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1138          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1139          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1140              /* Routine Control has failed the Security Check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1141              *dataNegRespCode_u8 = DCM_E_SECURITYACCESSDENIED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1142          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1143      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1144      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1145      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1146          /* Routine Identifier is not supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1147          *dataNegRespCode_u8=DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1148      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1149      return dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1150  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1151  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1152  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1153   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1154   Function name    : Dcm_Prv_RcPendingRangeRoutine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1155   Syntax           : Dcm_Prv_RcPendingRangeRoutine(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1156   Description      : This Function is used to process the Pending Range Routine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1157   Parameter        :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1158   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1159  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1160  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_RcPendingRangeRoutine(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1161          P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1162  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1163      P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_CONST)  adrSignal_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1164  #if (DCM_CFG_RCRANGE_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1165      VAR(uint32, AUTOMATIC)                                          dataSigVal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1166  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1167      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1168      VAR(uint8,AUTOMATIC) nrSig_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1169      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1170      adrSignal_pcst = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1171      dataRetVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1172  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1173      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1174       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1175      /*Set the Flag for s_IsRCSubfunctionCalled_b is set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1176      s_IsRCSubfunctionCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1177      dataRetVal_u8 = (*Dcm_adrRoutineRangePtr_pcst->adrCallRoutine_pfct)(Dcm_dataRCSubFunc_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1178      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1179       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1180      s_IsRCSubfunctionCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1181      /*Check for Infrastructure Error present or not and use routine port is supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1182      if((Dcm_IsInfrastructureErrorPresent_b(dataRetVal_u8) != FALSE) && (Dcm_adrRoutineRangePtr_pcst->RoutineRangeUsePort_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1183      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1184          dataRetVal_u8 = DCM_INFRASTRUCTURE_ERROR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1185      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1186      if (dataRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1187      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1188          if ( Dcm_dataRCSubFunc_u8 == 0x01 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1189          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1190  #if(DCM_CFG_RCRANGE_STARTSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1191              adrSignal_pcst = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->adrStartOutSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1192              nrSig_u8 = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->nrStartOutSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1193              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStart_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1194  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1195              /*Routine is Started  ,Set the status to RC_START_OK  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1196              Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16] = DCM_ROUTINE_STARTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1197  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1198          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1199  #if(DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1200          else if ( Dcm_dataRCSubFunc_u8 == 0x02 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1201          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1202              adrSignal_pcst = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->adrStopOutSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1203              nrSig_u8 = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->nrStopOutSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1204              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeStop_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1205              /*Routine is Stopped   ,Set the  status to default status DCM_ROUTINE_STOP  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1206              Dcm_RoutineRangeStatus_aen[s_dataStatusIdx_u16] = DCM_ROUTINE_STOP;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1207          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1208  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1209          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1210          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1211  #if(DCM_CFG_RCRANGE_REQRESULTSSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1212              adrSignal_pcst = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->adrReqRsltOutSignalRef_cpcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1213              nrSig_u8 = Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->nrReqRsltOutSignals_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1214              pMsgContext->resDataLen = 3u + (uint32)Dcm_adrRoutineRangePtr_pcst->adrRoutineInfoRef_cpcst->dataMinStsOptRecSizeReqRslt_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1215  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1216          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1217          for ( idxLoop_qu16 = 0 ; ( ( idxLoop_qu16 < nrSig_u8 ) && ( adrSignal_pcst->dataType_u8 != DCM_VARIABLE_LENGTH ) ) ; idxLoop_qu16++ )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1218          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1219  #if(DCM_CFG_RCRANGE_ROUTINEVARLENGTH == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1220  #if(DCM_CFG_RCRANGE_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1221              if(adrSignal_pcst->dataType_u8 >= DCM_RCARRAYINDEX)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1222              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1223                  Dcm_RcStoreSignalArray(adrSignal_pcst,&(pMsgContext->resData[3]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1224              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1225              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1226  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1227              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1228                  dataSigVal_u32 = Dcm_RCGetSigVal_u32 ( adrSignal_pcst->dataType_u8, adrSignal_pcst->idxSignal_u16 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1229                  Dcm_StoreSignal(adrSignal_pcst->dataType_u8, adrSignal_pcst->posnStart_u16, &(pMsgContext->resData[3]), dataSigVal_u32, adrSignal_pcst->dataEndianness_u8 );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1230              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1231  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1232              adrSignal_pcst++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1233          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1234  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1235          if ( idxLoop_qu16 != nrSig_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1236          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1237              /* You enter here only if the last signal has dynamic or variable length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1238              pMsgContext->resDataLen = pMsgContext->resDataLen + Dcm_RCCurrDataLength_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1239          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1240  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1241          /* First byte after Service Id is the routineControlType or Sub-function byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1242          pMsgContext->resData[0] = Dcm_dataRCSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1243          /* Second and third byte is the two byte dataRId_u16 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1244          pMsgContext->resData[1] = ( uint8 )( s_PendingRidRange_u16 >> 8u ) ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1245          pMsgContext->resData[2] = ( uint8 )( s_PendingRidRange_u16 & 0x00ffu ) ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1246  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1247          Dcm_stDspRCState_en = DCM_RC_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1248      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1249      else if (dataRetVal_u8 == E_NOT_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1250      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1251          /* Copy the NRC value which has been updated by Application to the local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1252          if ( Dcm_RCNegResCode_u8 != 0 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1253          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1254              *dataNegRespCode_u8 = Dcm_RCNegResCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1255          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1256          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1257          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1258              /* Conditions Not Correct is set as the Application did not fill in any NegativeResponseCode but have returned E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1259              *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1260          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1261      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1262      else if (dataRetVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1263      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1264          /* Nothing to be done here except for setting the OpStatus, DSL/DSD shall trigger this service again in the next main function call */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1265          Dcm_RCOpStatus_u8 = DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1266  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1267          /* As NRC code has been updated, terminate processing and send NRC to tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1268      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1269      else if (dataRetVal_u8 == DCM_E_FORCE_RCRRP)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1270      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1271          /*Do nothing NRC78 is triggered from the Statemachine*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1272          Dcm_RCOpStatus_u8=DCM_FORCE_RCRRP_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1273      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1274      else if ((dataRetVal_u8 == DCM_INFRASTRUCTURE_ERROR) && (Dcm_adrRoutineRangePtr_pcst->RoutineRangeUsePort_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1275      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1276          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1277      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1278      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1279      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1280          if ( Dcm_RCNegResCode_u8 == 0 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1281          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1282              /* Function returns a return value not defined within Routine Control service, but hasn't set NRC */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1283              *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1284          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1285          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1286          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1287              /* As NRC code has been updated, terminate processing and send NRC to tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1288              *dataNegRespCode_u8 = Dcm_RCNegResCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1289          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1290      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1291      return dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1292  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1293  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1294  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1295  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1296  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1297   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1298   * Dcm_DcmRoutineControl :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1299   *  Service Interpreter for controlling routines.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1300   *  This service is used for activation of routines in ECU from tester.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1301   *  This service has below given sub-functions.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1302   *  dataSubFunc_u8 0x01: 'StartRoutine'. Start the routine specified by RoutineIdentifier
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1303   *  dataSubFunc_u8 0x02: 'StopRoutine'. Stop the routine specified by RoutineIdentifier
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1304   *  dataSubFunc_u8 0x03: 'RequestRoutineResults'. Return the results of the routine specified by RoutineIdentifier
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1305   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1306   * \param           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1307   *                                 (parameter in : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1308   *                                 (parameter out: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1309   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1310   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1311   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1312   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1313   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1314   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1315  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1316  FUNC(Std_ReturnType,DCM_CODE) Dcm_DcmRoutineControl(VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; Function Dcm_DcmRoutineControl
.L156:
Dcm_DcmRoutineControl:	.type	func
	sub.a	a10,#8
.L394:
	mov.aa	a12,a4
.L396:
	mov.aa	a13,a5
.L397:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1317  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1318      VAR(uint16,AUTOMATIC) dataRId_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1319      /* Loop variable to loop through all configured routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1320      VAR(uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1321      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1322      VAR(boolean, AUTOMATIC) flgProcessReq_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1323      *dataNegRespCode_u8 = 0;
	mov	d15,#0
.L452:
	st.b	[a13],d15
.L453:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1324  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1325      /*Initialize the flag for Process request flag is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1326      flgProcessReq_b =TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1327      /*Initialize the index variable to default value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1328      idxLoop_qu16 = 0xFFFF;
	mov.u	d15,#65535
.L454:
	st.h	[a10],d15
.L455:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1329      dataRetVal_u8=DCM_E_PENDING;
	mov	d9,#10
.L398:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1330  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1331      /* If OpStatus is set to DCM_CANCEL then call the ini function for resetting */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1332      if (OpStatus == DCM_CANCEL)
	jne	d4,#2,.L115
.L456:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1333      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1334          /* Call the Ini Function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1335          Dcm_Dsp_RC_Ini();
	call	Dcm_Dsp_RC_Ini
.L395:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1336          /* Set the return value to E_OK as the Ini function will always be serviced  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1337          dataRetVal_u8 = E_OK;
	mov	d9,#0
.L457:
	j	.L116
.L115:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1338      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1339      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1340      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1341          if ( Dcm_stDspRCState_en == DCM_RC_IDLE )
	movh.a	a14,#@his(Dcm_stDspRCState_en)
	lea	a14,[a14]@los(Dcm_stDspRCState_en)
	ld.w	d0,[a14]
.L458:
	jne	d0,#1,.L117
.L459:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1342          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1343              /* Routine Control Service is IDLE i.e. this is the first call of this service for this request */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1344              if ( pMsgContext->reqDataLen >= DSP_RC_MINREQLEN )
	ld.w	d15,[a12]16
.L460:
	jlt.u	d15,#3,.L118
.L461:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1345              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1346                  /* At least the sub-function and two bytes of dataRId_u16 should have been received to validate further */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1347                  /* uint32 variable for storing RID in a single variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1348                  dataRId_u16 = (uint16)((uint16)pMsgContext->reqData[1] <<(uint8)8);
	ld.a	a15,[a12]4
.L462:
	ld.bu	d15,[a15]1
.L463:
	sha	d8,d15,#8
.L403:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1349                  dataRId_u16 = (uint16)(dataRId_u16 | pMsgContext->reqData[2]);
	ld.bu	d15,[a15]2
.L464:
	or	d8,d15
.L465:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1350  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1351                  /* Call the API to check if the RID is supported in ranges or single routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1352                  flgProcessReq_b = Dcm_Prv_RcIsRIDSupported(dataRId_u16,&idxLoop_qu16,dataNegRespCode_u8);
	lea	a4,[a10]0
.L402:
	mov	d4,d8
.L400:
	mov.aa	a5,a13
	call	Dcm_Prv_RcIsRIDSupported
.L401:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1353  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1354                  /*If Process request status is set to TRUE and negative response code is set 0x00 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1355                  if((flgProcessReq_b) && (*dataNegRespCode_u8 ==0x00u))
	jeq	d2,#0,.L119
.L466:
	ld.bu	d15,[a13]
.L467:
	jne	d15,#0,.L120
.L468:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1356                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1357                      /* If dataRId_u16 is valid, then process the Routine checks */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1358  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1359                      /* Check whether the supported RID is present in a Range or it is a single Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1360                      if(s_IsRidRange_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1361                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1362                          /* Call the function to process the Range Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1363                          dataRetVal_u8 = Dcm_Prv_RcProcessRangeRoutine(pMsgContext,dataNegRespCode_u8,dataRId_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1364                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1365                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1366  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1367                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1368  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1369                          /* Call the function to process the Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1370                          dataRetVal_u8 = Dcm_Prv_RcProcessRoutine(pMsgContext,dataNegRespCode_u8,dataRId_u16);
	mov.aa	a4,a12
.L404:
	mov.aa	a5,a13
.L405:
	mov	d4,d8
.L406:
	call	Dcm_Prv_RcProcessRoutine
.L399:
	mov	d9,d2
.L407:
	j	.L121
.L120:
.L119:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1371  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1372                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1373                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1374                  else
.L121:
	j	.L122
.L118:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1375                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1376                      /* Requested RID is not supported (NRC0x31 has been set). Or Routine status was Stop Pending */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1377                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1378              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1379              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1380              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1381                  /* Invalid message length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1382                  *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L469:
	st.b	[a13],d15
.L122:
.L117:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1383              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1384          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1385          if (Dcm_stDspRCState_en == DCM_RC_PENDING)
	ld.w	d15,[a14]
.L470:
	jne	d15,#2,.L123
.L471:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1386          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1387  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1388              /* Check whether the supported RID is present in a Range or it is a single Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1389              if(s_IsRidRange_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1390              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1391                  /* Call the function to process the pending Range Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1392                  dataRetVal_u8 = Dcm_Prv_RcPendingRangeRoutine(pMsgContext, dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1393              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1394              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1395  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1396              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1397  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1398                  /* Call the function to process the pending Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1399                  dataRetVal_u8 = Dcm_Prv_RcPendingRoutine(pMsgContext, dataNegRespCode_u8);
	mov.aa	a4,a12
.L409:
	mov.aa	a5,a13
.L410:
	call	Dcm_Prv_RcPendingRoutine
.L408:
	mov	d9,d2
.L123:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1400  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1401              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1402          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1403  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1404          if (*dataNegRespCode_u8 != 0 )
	ld.bu	d15,[a13]
.L472:
	jeq	d15,#0,.L124
.L473:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1405          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1406              /* dataNegRespCode_u8 has been set, inform DSL-DSD of Negative Response and end the service processing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1407              Dcm_stDspRCState_en = DCM_RC_IDLE;
	mov	d15,#1
.L474:
	st.w	[a14],d15
.L475:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1408              dataRetVal_u8=E_NOT_OK;
	mov	d9,#1
.L124:
.L116:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1409          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1410      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1411      return dataRetVal_u8;
	mov	d2,d9
.L411:
	j	.L125

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1412  }
.L125:
	ret
.L253:
	
__Dcm_DcmRoutineControl_function_end:
	.size	Dcm_DcmRoutineControl,__Dcm_DcmRoutineControl_function_end-Dcm_DcmRoutineControl
.L180:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_DcmcallStopRoutine',code,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.text.DcmDspUds_Rc.Dcm_DcmcallStopRoutine'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1413  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1414  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1415   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1416   * Dcm_DcmcallStopRoutine :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1417   * This API stops all the routines in case there is a session transition.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1418   * The API is called by Dcm_RoutineSetSesCtrlType() function.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1419   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1420   * \param           idxLoop_qu16    index of the Routine that has to be stopped
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1421   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1422   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1423   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1424   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1425   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1426   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1427   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1428  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1429  #if(DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1430  static FUNC(void,DCM_CODE) Dcm_DcmcallStopRoutine(VAR(uint16,AUTOMATIC) idxLoop_qu16)
; Function Dcm_DcmcallStopRoutine
.L158:
Dcm_DcmcallStopRoutine:	.type	func
	mov	d15,d4
.L413:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1431  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1432      VAR(Std_ReturnType, AUTOMATIC) dataRetType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1433      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1434       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1435      /*Set the s_IsRCSubfunctionCalled flag to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1436      s_IsRCSubfunctionCalled_b = TRUE;
	movh.a	a12,#@his(s_IsRCSubfunctionCalled_b)
	lea	a12,[a12]@los(s_IsRCSubfunctionCalled_b)
.L886:
	mov	d0,#1
.L887:
	st.b	[a12],d0
.L888:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1437      dataRetType_u8=(*s_adrRoutine_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
	movh.a	a15,#@his(s_adrRoutine_pcst)
	lea	a15,[a15]@los(s_adrRoutine_pcst)
	ld.a	a15,[a15]
.L889:
	ld.a	a15,[a15]8
.L890:
	mov	d4,#2
.L412:
	calli	a15
.L415:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1438      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1439       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1440      s_IsRCSubfunctionCalled_b = FALSE;
	mov	d0,#0
.L891:
	st.b	[a12],d0
.L892:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1441  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1442      /*If the return value is E_PENDING ,set the status of the routine to  DCM_ROUTINE_STOP_PENDING. that in the next
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1443       * service call for the same RID the stop routine will be called with Opstatus set to DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1444      if(dataRetType_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1445      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1446          /* StopRoutine returned DCM_E_PENDING. Set the routine status to DCM_ROUTINE_STOP_PENDING */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1447          Dcm_RoutineStatus_aen[idxLoop_qu16]  = DCM_ROUTINE_STOP_PENDING;
	movh.a	a15,#@his(Dcm_RoutineStatus_aen)
	lea	a15,[a15]@los(Dcm_RoutineStatus_aen)
.L893:
	addsc.a	a15,a15,d15,#2
.L894:
	mov	d15,#10
.L414:
	jne	d15,d2,.L126
.L895:
	mov	d15,#3
.L896:
	st.w	[a15],d15
.L897:
	j	.L127
.L126:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1448      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1449      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1450      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1451          /* StopRoutine returned return value other than DCM_E_PENDING. Set the routine status to DCM_ROUTINE_STOP */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1452          Dcm_RoutineStatus_aen[idxLoop_qu16]  = DCM_ROUTINE_STOP;
	mov	d15,#1
.L898:
	st.w	[a15],d15
.L127:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1453      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1454  }
	ret
.L312:
	
__Dcm_DcmcallStopRoutine_function_end:
	.size	Dcm_DcmcallStopRoutine,__Dcm_DcmcallStopRoutine_function_end-Dcm_DcmcallStopRoutine
.L220:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_RoutineSetSesCtrlType',code,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.text.DcmDspUds_Rc.Dcm_RoutineSetSesCtrlType'
	.align	2
	
	.global	Dcm_RoutineSetSesCtrlType

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1455  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1456  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1457  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1458  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1459   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1460   * Dcm_DcmCallStopRoutineRange :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1461   * This API stops all the routine ranges in case there is a session transition.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1462   * The API is called by Dcm_RoutineSetSesCtrlType() function.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1463   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1464   * \param           idxLoop_qu16    index of the Routine that has to be stopped
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1465   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1466   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1467   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1468   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1469   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1470   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1471   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1472  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1473  #if(DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1474  static FUNC(void,DCM_CODE) Dcm_DcmCallStopRoutineRange(VAR(uint16,AUTOMATIC) idxLoop_qu16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1475  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1476      VAR(Std_ReturnType, AUTOMATIC) dataRetType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1477      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1478       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1479      /*Set the s_IsRCSubfunctionCalled flag to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1480      s_IsRCSubfunctionCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1481      /* Check whether the supported RID is present in a Range or it is a single Routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1482      dataRetType_u8=(*s_adrRoutineRange_pcst->adrCallRoutine_pfct)(DCM_RC_STOPROUTINE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1483      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1484       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1485      s_IsRCSubfunctionCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1486  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1487      /*If the return value is E_PENDING ,set the status of the routine to  DCM_ROUTINE_STOP_PENDING. that in the next
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1488       * service call for the same RID the stop routine will be called with Opstatus set to DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1489      if(dataRetType_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1490      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1491          /* StopRoutine returned DCM_E_PENDING. Set the routine status to DCM_ROUTINE_STOP_PENDING */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1492          Dcm_RoutineRangeStatus_aen[idxLoop_qu16]  = DCM_ROUTINE_STOP_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1493      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1494      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1495      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1496          /* StopRoutine returned return value other than DCM_E_PENDING. Set the routine status to DCM_ROUTINE_STOP */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1497          Dcm_RoutineRangeStatus_aen[idxLoop_qu16]  = DCM_ROUTINE_STOP;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1498      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1499  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1500  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1501  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1502  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1503  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1504   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1505   * Dcm_RoutineSetSesCtrlType :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1506   * This API stops all the routines in case there is a session transition.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1507   * The API is called by Dcm_SetSesCtrlType() function.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1508   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1509   * \param           dataSesCtrlType_u8    New session control type value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1510   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1511   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1512   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1513   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1514   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1515   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1516   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1517  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1518  FUNC(void,DCM_CODE) Dcm_RoutineSetSesCtrlType (VAR(Dcm_SesCtrlType, AUTOMATIC) dataSesCtrlType_u8)
; Function Dcm_RoutineSetSesCtrlType
.L160:
Dcm_RoutineSetSesCtrlType:	.type	func
	mov	d8,d4
.L416:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1519  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1520      /* Index Variable for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1521      VAR (uint16,AUTOMATIC) idxLoop_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1522  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1523  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1524  #if(DCM_CFG_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1525      /* Initialise the RoutinePtr to the first routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1526      s_adrRoutine_pcst =  &Dcm_DspRoutine_cast[0];
	movh.a	a12,#@his(s_adrRoutine_pcst)
	lea	a12,[a12]@los(s_adrRoutine_pcst)
.L526:
	movh.a	a15,#@his(Dcm_DspRoutine_cast)
	lea	a15,[a15]@los(Dcm_DspRoutine_cast)
.L527:
	st.a	[a12],a15
.L528:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1527  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1528      /* Search through the complete list of Routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1529      for ( idxLoop_qu16 = 0 ; idxLoop_qu16 < DCM_CFG_RC_NUMRIDS ; idxLoop_qu16++ )
	mov	d9,#0
.L417:
	j	.L128
.L129:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1530      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1531          /* Check whether the flgStopRoutineOnSessionChange_b is supported for this RID and the routine is already started
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1532           * The condition will never be satisfied for Routines which does not support Start sub function or Supports  Start start subfunction but sequence error is disabled as
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1533           * the state of thr Routine will be DCM_ROUTINE_STARTED only if a Start request is received */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1534          if ( (s_adrRoutine_pcst->flgStopRoutine_b!= FALSE)&&(s_adrRoutine_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineStatus_aen[idxLoop_qu16] == DCM_ROUTINE_STARTED))
	ld.a	a15,[a12]
.L529:
	ld.bu	d15,[a15]13
.L530:
	jeq	d15,#0,.L130
.L531:
	ld.bu	d15,[a15]14
.L532:
	jeq	d15,#0,.L131
.L533:
	movh.a	a2,#@his(Dcm_RoutineStatus_aen)
	lea	a2,[a2]@los(Dcm_RoutineStatus_aen)
.L534:
	addsc.a	a2,a2,d9,#2
	ld.w	d0,[a2]
.L535:
	jne	d0,#2,.L132
.L536:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1535          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1536              if(dataSesCtrlType_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX])
	movh.a	a2,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a2,[a2]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a2,[a2]
.L537:
	ld.bu	d15,[a2]
.L538:
	jne	d15,d8,.L133
.L539:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1537              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1538                  Dcm_DcmcallStopRoutine(idxLoop_qu16);
	mov	d4,d9
.L418:
	call	Dcm_DcmcallStopRoutine
.L419:
	j	.L134
.L133:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1539              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1540              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1541              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1542                  /* Check whether the RID is supported in the current session and security */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1543                  if (( (Dcm_DsldGetActiveSessionMask_u32() & ( s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataSessBitMask_u32 )) == 0u )|| ( ( Dcm_DsldGetActiveSecurityMask_u32() & ( s_adrRoutine_pcst->adrRoutineInfoRef_cpcst->dataSecBitMask_u32 )) == 0u ) )
	call	Dcm_DsldGetActiveSessionMask_u32
.L540:
	ld.a	a15,[a15]4
.L541:
	ld.w	d15,[a15]4
.L542:
	and	d2,d15
.L543:
	jeq	d2,#0,.L135
.L544:
	ld.a	a15,[a12]
.L545:
	call	Dcm_DsldGetActiveSecurityMask_u32
.L546:
	ld.a	a15,[a15]4
.L547:
	ld.w	d15,[a15]
.L548:
	and	d2,d15
.L549:
	jne	d2,#0,.L136
.L135:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1544                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1545                      /* Call stop routine for the RID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1546                      Dcm_DcmcallStopRoutine(idxLoop_qu16);
	mov	d4,d9
.L420:
	call	Dcm_DcmcallStopRoutine
.L136:
.L134:
.L132:
.L131:
.L130:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1547                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1548              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1549          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1550          /* Increment the pointer to point to the next RId */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1551          s_adrRoutine_pcst++;
	ld.a	a15,[a12]
.L550:
	lea	a15,[a15]20
	st.a	[a12],a15
.L551:
	add	d9,#1
.L128:
	jeq	d9,#0,.L129
.L552:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1552      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1553  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1554  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1555  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1556  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1557  #if(DCM_CFG_RCRANGE_STOPSUPPORTED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1558      /* Initialise the RoutineRangePtr to the first Range routine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1559      s_adrRoutineRange_pcst = &Dcm_DspRoutineRange_cast[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1560  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1561      /* Search through the complete list of Range Routines */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1562      for (idxLoop_qu16 = 0; idxLoop_qu16 < DCM_CFG_RC_RANGE_NUMRIDS; idxLoop_qu16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1563      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1564          /* Check whether the flgStopRoutineOnSessionChange_b is supported for this RID and the routine is already started
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1565           * The condition will never be satisfied for Routines which does not support Start sub function or Supports  Start start subfunction but sequence error is disabled as
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1566           * the state of thr Routine will be DCM_ROUTINE_STARTED only if a Start request is received */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1567          if((s_adrRoutineRange_pcst->flgStopRoutine_b!= FALSE)&&(s_adrRoutineRange_pcst->flgStopRoutineOnSessionChange_b != FALSE) && (Dcm_RoutineRangeStatus_aen[idxLoop_qu16] == DCM_ROUTINE_STARTED))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1568          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1569              if(dataSesCtrlType_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX])
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1570              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1571                  Dcm_DcmCallStopRoutineRange(idxLoop_qu16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1572              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1573              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1574              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1575                  /* Check whether the RID is supported in the current session and security */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1576                  if(((Dcm_DsldGetActiveSessionMask_u32() & (s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataSessBitMask_u32)) == 0u)|| ((Dcm_DsldGetActiveSecurityMask_u32() & (s_adrRoutineRange_pcst->adrRoutineInfoRef_cpcst->dataSecBitMask_u32)) == 0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1577                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1578                      /* Call stop routine for the RID ranges*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1579                      Dcm_DcmCallStopRoutineRange(idxLoop_qu16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1580                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1581              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1582          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1583          /* Increment the pointer to point to the next RId */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1584          s_adrRoutineRange_pcst++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1585      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1586  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1587  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1588  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1589  }
	ret
.L266:
	
__Dcm_RoutineSetSesCtrlType_function_end:
	.size	Dcm_RoutineSetSesCtrlType,__Dcm_RoutineSetSesCtrlType_function_end-Dcm_RoutineSetSesCtrlType
.L190:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_SetFlagforRC',code,cluster('Dcm_SetFlagforRC')
	.sect	'.text.DcmDspUds_Rc.Dcm_SetFlagforRC'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1590  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1591  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1592   *************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1593   * Dcm_SetFlagforRC:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1594   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1595   * This API sets/resets the flag which is required for getting the active RID based on the input parameter
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1596   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1597   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1598   * \param     boolean isFlag_b : parameter for setting or resetting the flag to get the active RID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1599   * \retval    None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1600   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1601   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1602   **************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1603   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1604  static FUNC(void,DCM_CODE) Dcm_SetFlagforRC(VAR (boolean,AUTOMATIC) isFlag_b)
; Function Dcm_SetFlagforRC
.L162:
Dcm_SetFlagforRC:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1605   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1606      /* Setting/resetting the flag so that the application can call GetActiveRID function from DcmAppl_DcmConfirmation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1607      s_IsRCSubfunctionCalled_b = isFlag_b;
	movh.a	a15,#@his(s_IsRCSubfunctionCalled_b)
	lea	a15,[a15]@los(s_IsRCSubfunctionCalled_b)
.L903:
	st.b	[a15],d4
.L904:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1608  }
	ret
.L315:
	
__Dcm_SetFlagforRC_function_end:
	.size	Dcm_SetFlagforRC,__Dcm_SetFlagforRC_function_end-Dcm_SetFlagforRC
.L225:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_Prv_DspRCConfirmation',code,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.text.DcmDspUds_Rc.Dcm_Prv_DspRCConfirmation'
	.align	2
	
	.global	Dcm_Prv_DspRCConfirmation

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1609  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1610   *******************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1611   * Dcm_Prv_DspRCConfirmation : API used for confirmation of response sent for
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1612   *                                      RoutineControl (0x31) service.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1613   * \param           dataIdContext_u8    Service Id
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1614   * \param           dataRxPduId_u8      PDU Id on which request is Received
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1615   * \param           dataSourceAddress_u16    Tester Source address id
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1616   * \param           status_u8                Status of Tx confirmation function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1617   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1618   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1619   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1620   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1621   *******************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1622   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1623   FUNC(void, DCM_CODE) Dcm_Prv_DspRCConfirmation(
; Function Dcm_Prv_DspRCConfirmation
.L164:
Dcm_Prv_DspRCConfirmation:	.type	func
	mov	e8,d5,d4
	mov	e10,d7,d6
.L557:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1624      VAR(Dcm_IdContextType ,AUTOMATIC)dataIdContext_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1625      VAR(PduIdType,AUTOMATIC)dataRxPduId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1626      VAR(uint16,AUTOMATIC)dataSourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1627      VAR(Dcm_ConfirmationStatusType,AUTOMATIC)status_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1628  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1629       if(dataIdContext_u8 == DCM_DSP_SID_ROUTINECONTROL)
	mov	d15,#49
.L422:
	jne	d15,d8,.L137
.L423:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1630       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1631           Dcm_SetFlagforRC(TRUE);
	mov	d4,#1
.L421:
	call	Dcm_SetFlagforRC
.L137:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1632       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1633       DcmAppl_DcmConfirmation(dataIdContext_u8,dataRxPduId_u8,dataSourceAddress_u16,status_u8);
	mov	e4,d9,d8
.L424:
	mov	e6,d11,d10
.L425:
	call	DcmAppl_DcmConfirmation
.L558:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1634       if(dataIdContext_u8 == DCM_DSP_SID_ROUTINECONTROL)
	mov	d15,#49
.L426:
	jne	d15,d8,.L138
.L427:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1635       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1636           Dcm_SetFlagforRC(FALSE);
	mov	d4,#0
	call	Dcm_SetFlagforRC
.L138:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1637       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1638  }
	ret
.L269:
	
__Dcm_Prv_DspRCConfirmation_function_end:
	.size	Dcm_Prv_DspRCConfirmation,__Dcm_Prv_DspRCConfirmation_function_end-Dcm_Prv_DspRCConfirmation
.L195:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Rc.Dcm_GetActiveRid',code,cluster('Dcm_GetActiveRid')
	.sect	'.text.DcmDspUds_Rc.Dcm_GetActiveRid'
	.align	2
	
	.global	Dcm_GetActiveRid

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1639  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1640  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1641   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1642   * Dcm_GetActiveRid :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1643   * API to provide the current active RID.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1644   * This API has to be called from the application callbacks of Start, Stop and Req.Results routine configured for the project and also from the DcmAppl_DcmConfirmation.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1645   * Example scenarios:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1646   *  a) This API has to be called by the application
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1647   *      a.1)during Start, Stop and Request Results operations for the normal tester request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1648   *      a.2)during canceling the pending operations either Start or Stop or Request Results due to CANCEL operation triggered by Dcm by setting the Opstatus to DCM_CANCEL in the RC Ini function.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1649   *      a.3)during the stop of the routines due to session transitions (either due to protocol start/stop or session time out/change).
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1650   * By "Active RID", it means that the active RID index under processing and not the RIDs of already started routines.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1651   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1652   * \param           dataRid_u16    Buffer to get the current active RID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1653  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1654   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1655   * \retval          Std_ReturnType  E_OK : The parameter dataRid_u16 contains valid RID value in this case.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1656   *                                  E_NOT_OK : The parameter dataRid_u16 contains invalid data in case none of the Routine is under processing.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1657   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1658   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1659   ******************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1660   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1661  FUNC(Std_ReturnType,DCM_CODE) Dcm_GetActiveRid(P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) dataRid_u16)
; Function Dcm_GetActiveRid
.L166:
Dcm_GetActiveRid:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1662  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1663      VAR(Std_ReturnType, AUTOMATIC) RetVal;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1664      /* Multicore: There is a constraint on the callback that GetActiveRid can only be called from Start, Stop and Request results subfunction.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1665       * Hence tehre is no data inconsistency involved and the lock is not necessary. */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1666       /*Check if the s_IsRCSubfunctionCalled flag is set to TRUE and current active id is valid*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1667      if ((s_IsRCSubfunctionCalled_b != FALSE) && (dataRid_u16!= NULL_PTR))
	movh.a	a15,#@his(s_IsRCSubfunctionCalled_b)
	lea	a15,[a15]@los(s_IsRCSubfunctionCalled_b)
	ld.bu	d15,[a15]
.L438:
	jeq	d15,#0,.L139
.L439:
	jz.a	a4,.L140
.L440:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1668      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1669  #if (DCM_CFG_RC_RANGE_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1670          if(s_IsRidRange_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1671          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1672  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1673              if (Dcm_stDspRCState_en == DCM_RC_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1674              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1675                  *dataRid_u16 = s_PendingRidRange_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1676              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1677              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1678              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1679                  *dataRid_u16 = s_dataRidRange_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1680              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1681          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1682          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1683  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1684          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1685  #if (DCM_CFG_RC_NUMRIDS > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1686              if (Dcm_stDspRCState_en == DCM_RC_PENDING)
	movh.a	a15,#@his(Dcm_stDspRCState_en)
	lea	a15,[a15]@los(Dcm_stDspRCState_en)
	ld.w	d15,[a15]
.L441:
	jne	d15,#2,.L141
.L442:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1687              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1688                  *dataRid_u16 = Dcm_adrRoutinePtr_pcst->dataRId_u16;
	movh.a	a15,#@his(Dcm_adrRoutinePtr_pcst)
	lea	a15,[a15]@los(Dcm_adrRoutinePtr_pcst)
	ld.a	a15,[a15]
.L443:
	ld.hu	d15,[a15]0
.L444:
	st.h	[a4],d15
.L445:
	j	.L142
.L141:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1689              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1690              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1691              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1692                  *dataRid_u16 = s_adrRoutine_pcst->dataRId_u16 ;
	movh.a	a15,#@his(s_adrRoutine_pcst)
	lea	a15,[a15]@los(s_adrRoutine_pcst)
	ld.a	a15,[a15]
.L446:
	ld.hu	d15,[a15]0
.L447:
	st.h	[a4],d15
.L142:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1693              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1694  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1695          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1696          RetVal = E_OK;
	mov	d2,#0
.L428:
	j	.L143
.L140:
.L139:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1697      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1698      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1699      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1700          RetVal = E_NOT_OK;
	mov	d2,#1
.L143:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1701      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1702      return RetVal;
	j	.L144

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1703  }
.L144:
	ret
.L249:
	
__Dcm_GetActiveRid_function_end:
	.size	Dcm_GetActiveRid,__Dcm_GetActiveRid_function_end-Dcm_GetActiveRid
.L175:
	; End of function
	
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_RCInPtr_pu8',data,cluster('Dcm_RCInPtr_pu8')
	.sect	'.bss.DcmDspUds_Rc.Dcm_RCInPtr_pu8'
	.global	Dcm_RCInPtr_pu8
	.align	4
Dcm_RCInPtr_pu8:	.type	object
	.size	Dcm_RCInPtr_pu8,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_RCOutPtr_pu8',data,cluster('Dcm_RCOutPtr_pu8')
	.sect	'.bss.DcmDspUds_Rc.Dcm_RCOutPtr_pu8'
	.global	Dcm_RCOutPtr_pu8
	.align	4
Dcm_RCOutPtr_pu8:	.type	object
	.size	Dcm_RCOutPtr_pu8,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_adrRoutinePtr_pcst',data,cluster('Dcm_adrRoutinePtr_pcst')
	.sect	'.bss.DcmDspUds_Rc.Dcm_adrRoutinePtr_pcst'
	.align	4
Dcm_adrRoutinePtr_pcst:	.type	object
	.size	Dcm_adrRoutinePtr_pcst,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Rc.s_adrRoutine_pcst',data,cluster('s_adrRoutine_pcst')
	.sect	'.bss.DcmDspUds_Rc.s_adrRoutine_pcst'
	.align	4
s_adrRoutine_pcst:	.type	object
	.size	s_adrRoutine_pcst,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_stDspRCState_en',data,cluster('Dcm_stDspRCState_en')
	.sect	'.bss.DcmDspUds_Rc.Dcm_stDspRCState_en'
	.align	4
Dcm_stDspRCState_en:	.type	object
	.size	Dcm_stDspRCState_en,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Rc.s_dataStatusIdx_u16',data,cluster('s_dataStatusIdx_u16')
	.sect	'.bss.DcmDspUds_Rc.s_dataStatusIdx_u16'
	.align	2
s_dataStatusIdx_u16:	.type	object
	.size	s_dataStatusIdx_u16,2
	.space	2
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_dataRCSubFunc_u8',data,cluster('Dcm_dataRCSubFunc_u8')
	.sect	'.bss.DcmDspUds_Rc.Dcm_dataRCSubFunc_u8'
Dcm_dataRCSubFunc_u8:	.type	object
	.size	Dcm_dataRCSubFunc_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_RCCurrDataLength_u16',data,cluster('Dcm_RCCurrDataLength_u16')
	.sect	'.bss.DcmDspUds_Rc.Dcm_RCCurrDataLength_u16'
	.global	Dcm_RCCurrDataLength_u16
	.align	2
Dcm_RCCurrDataLength_u16:	.type	object
	.size	Dcm_RCCurrDataLength_u16,2
	.space	2
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_RCNegResCode_u8',data,cluster('Dcm_RCNegResCode_u8')
	.sect	'.bss.DcmDspUds_Rc.Dcm_RCNegResCode_u8'
	.global	Dcm_RCNegResCode_u8
Dcm_RCNegResCode_u8:	.type	object
	.size	Dcm_RCNegResCode_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Rc.Dcm_RCOpStatus_u8',data,cluster('Dcm_RCOpStatus_u8')
	.sect	'.bss.DcmDspUds_Rc.Dcm_RCOpStatus_u8'
	.global	Dcm_RCOpStatus_u8
Dcm_RCOpStatus_u8:	.type	object
	.size	Dcm_RCOpStatus_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Rc.s_IsRCSubfunctionCalled_b',data,cluster('s_IsRCSubfunctionCalled_b')
	.sect	'.bss.DcmDspUds_Rc.s_IsRCSubfunctionCalled_b'
s_IsRCSubfunctionCalled_b:	.type	object
	.size	s_IsRCSubfunctionCalled_b,1
	.space	1
	.calls	'Dcm_Dsp_RC_Ini','__INDIRECT__'
	.calls	'Dcm_Prv_RcIsRIDSingleRoutine','__INDIRECT__'
	.calls	'Dcm_Prv_RcIsRIDSupported','Dcm_Prv_RcIsRIDSingleRoutine'
	.calls	'Dcm_Prv_RcProcessRoutine','Dcm_DsldGetActiveSessionMask_u32'
	.calls	'Dcm_Prv_RcProcessRoutine','Dcm_DsldGetActiveSecurityMask_u32'
	.calls	'Dcm_Prv_RcProcessRoutine','DcmAppl_DcmCheckRoutineControlOptionRecord'
	.calls	'Dcm_Prv_RcProcessRoutine','__INDIRECT__'
	.calls	'Dcm_Prv_RcProcessRoutine','DcmAppl_UserRIDModeRuleService'
	.calls	'Dcm_Prv_RcProcessRoutine','Dcm_GetSignal_u32'
	.calls	'Dcm_Prv_RcProcessRoutine','Dcm_RCSetSigVal'
	.calls	'Dcm_Prv_RcPendingRoutine','__INDIRECT__'
	.calls	'Dcm_Prv_RcPendingRoutine','Dcm_IsInfrastructureErrorPresent_b'
	.calls	'Dcm_Prv_RcPendingRoutine','Dcm_RCGetSigVal_u32'
	.calls	'Dcm_Prv_RcPendingRoutine','Dcm_StoreSignal'
	.calls	'Dcm_DcmRoutineControl','Dcm_Dsp_RC_Ini'
	.calls	'Dcm_DcmRoutineControl','Dcm_Prv_RcIsRIDSupported'
	.calls	'Dcm_DcmRoutineControl','Dcm_Prv_RcProcessRoutine'
	.calls	'Dcm_DcmRoutineControl','Dcm_Prv_RcPendingRoutine'
	.calls	'Dcm_DcmcallStopRoutine','__INDIRECT__'
	.calls	'Dcm_RoutineSetSesCtrlType','Dcm_DcmcallStopRoutine'
	.calls	'Dcm_RoutineSetSesCtrlType','Dcm_DsldGetActiveSessionMask_u32'
	.calls	'Dcm_RoutineSetSesCtrlType','Dcm_DsldGetActiveSecurityMask_u32'
	.calls	'Dcm_Prv_DspRCConfirmation','Dcm_SetFlagforRC'
	.calls	'Dcm_Prv_DspRCConfirmation','DcmAppl_DcmConfirmation'
	.calls	'Dcm_Dsp_RC_Ini','',0
	.calls	'Dcm_Prv_RcIsRIDSingleRoutine','',8
	.calls	'Dcm_Prv_RcIsRIDSupported','',8
	.calls	'Dcm_Prv_RcProcessRoutine','',8
	.calls	'Dcm_Prv_RcPendingRoutine','',8
	.calls	'Dcm_DcmRoutineControl','',8
	.calls	'Dcm_DcmcallStopRoutine','',0
	.calls	'Dcm_RoutineSetSesCtrlType','',0
	.calls	'Dcm_SetFlagforRC','',0
	.calls	'Dcm_Prv_DspRCConfirmation','',0
	.extern	Dcm_IsInfrastructureErrorPresent_b
	.extern	DcmAppl_UserRIDModeRuleService
	.extern	Dcm_DsldGetActiveSecurityMask_u32
	.extern	Dcm_DsldGetActiveSessionMask_u32
	.extern	Dcm_DsldGlobal_st
	.extern	Dcm_DsldSessionTable_pcu8
	.extern	Dcm_GetSignal_u32
	.extern	Dcm_StoreSignal
	.extern	Dcm_RoutineStatus_aen
	.extern	Dcm_DspRoutine_cast
	.extern	Dcm_RCGetSigVal_u32
	.extern	Dcm_RCSetSigVal
	.extern	DcmAppl_DcmConfirmation
	.extern	DcmAppl_DcmCheckRoutineControlOptionRecord
	.extern	__INDIRECT__
	.calls	'Dcm_GetActiveRid','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L168:
	.word	18251
	.half	3
	.word	.L169
	.byte	4
.L167:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L170
.L248:
	.byte	2
	.byte	'unsigned char',0,1,8
.L317:
	.byte	3
	.word	155
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	172
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	172
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	155
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	155
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	155
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	172
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	155
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	155
	.byte	6,0
.L259:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L250:
	.byte	3
	.word	485
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	507
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	507
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	155
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	485
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	485
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	507
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	155
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	155
	.byte	6,0
.L293:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	824
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	840
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	840
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	155
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	824
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	824
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	155
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	840
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	155
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	155
	.byte	6,0,8
	.byte	'Dcm_IsInfrastructureErrorPresent_b',0,4,200,10,31
	.word	155
	.byte	1,1,1,1,5
	.byte	'dataInfrastrutureCode_u8',0,4,200,10,87
	.word	155
	.byte	0,3
	.word	155
	.byte	9
	.byte	'Dcm_MsgType',0,4,188,2,57
	.word	1240
	.byte	10,4,206,2,9,4,11
	.byte	'reqType',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'suppressPosResponse',0
	.word	155
	.byte	1,2,35,1,11
	.byte	'sourceofRequest',0
	.word	155
	.byte	1,2,35,2,0,10,4,240,2,9,28,11
	.byte	'resData',0
	.word	1245
	.byte	4,2,35,0,11
	.byte	'reqData',0
	.word	1245
	.byte	4,2,35,4,11
	.byte	'msgAddInfo',0
	.word	1266
	.byte	4,2,35,8,11
	.byte	'resDataLen',0
	.word	824
	.byte	4,2,35,12,11
	.byte	'reqDataLen',0
	.word	824
	.byte	4,2,35,16,11
	.byte	'resMaxDataLen',0
	.word	824
	.byte	4,2,35,20,11
	.byte	'idContext',0
	.word	155
	.byte	1,2,35,24,11
	.byte	'dcmRxPduId',0
	.word	485
	.byte	2,2,35,26,0
.L255:
	.byte	3
	.word	1344
	.byte	3
	.word	155
.L257:
	.byte	3
	.word	155
	.byte	8
	.byte	'DcmAppl_UserRIDModeRuleService',0,5,38,43
	.word	155
	.byte	1,1,1,1,5
	.byte	'Nrc_u8',0,5,38,136,1
	.word	1517
	.byte	5
	.byte	'rid_u16',0,5,38,166,1
	.word	485
	.byte	5
	.byte	'subfunction_u8',0,5,38,196,1
	.word	155
	.byte	0,12
	.byte	'Dcm_DsldGetActiveSecurityMask_u32',0,6,189,1,31
	.word	824
	.byte	1,1,1,1,12
	.byte	'Dcm_DsldGetActiveSessionMask_u32',0,6,190,1,31
	.word	824
	.byte	1,1,1,1,13
	.word	155
	.byte	3
	.word	1716
	.byte	8
	.byte	'Dcm_GetSignal_u32',0,6,168,6,30
	.word	824
	.byte	1,1,1,1,5
	.byte	'xDataType_u8',0,6,168,6,69
	.word	155
	.byte	5
	.byte	'posnStart_u16',0,6,169,6,66
	.word	485
	.byte	5
	.byte	'adrReqBuffer_u8',0,6,170,6,87
	.word	1721
	.byte	5
	.byte	'dataEndianness_u8',0,6,171,6,65
	.word	155
	.byte	0,14
	.byte	'Dcm_StoreSignal',0,6,182,6,28,1,1,1,1,5
	.byte	'xDataType_u8',0,6,182,6,65
	.word	155
	.byte	5
	.byte	'posnStart_u16',0,6,183,6,66
	.word	485
	.byte	5
	.byte	'adrRespBuffer_u8',0,6,184,6,85
	.word	172
	.byte	5
	.byte	'dataSignalValue_u32',0,6,185,6,66
	.word	824
	.byte	5
	.byte	'dataEndianness_u8',0,6,186,6,65
	.word	155
	.byte	0,8
	.byte	'Dcm_RCGetSigVal_u32',0,7,174,1,30
	.word	824
	.byte	1,1,1,1,5
	.byte	'dataSigType_en',0,7,174,1,73
	.word	155
	.byte	5
	.byte	'idxSignalIndex_u16',0,7,174,1,111
	.word	485
	.byte	0,14
	.byte	'Dcm_RCSetSigVal',0,7,175,1,28,1,1,1,1,5
	.byte	'dataSigType_en',0,7,175,1,67
	.word	155
	.byte	5
	.byte	'idxSignalIndex_u16',0,7,175,1,105
	.word	485
	.byte	5
	.byte	'dataSigVal_u32',0,7,175,1,147,1
	.word	824
	.byte	0,15
	.word	177
	.byte	16
	.word	207
	.byte	16
	.word	222
	.byte	6,0,15
	.word	245
	.byte	16
	.word	277
	.byte	16
	.word	292
	.byte	6,0,15
	.word	315
	.byte	16
	.word	355
	.byte	16
	.word	369
	.byte	6,0,15
	.word	392
	.byte	16
	.word	425
	.byte	16
	.word	439
	.byte	16
	.word	460
	.byte	6,0,15
	.word	512
	.byte	16
	.word	543
	.byte	16
	.word	558
	.byte	6,0,15
	.word	581
	.byte	16
	.word	614
	.byte	16
	.word	629
	.byte	6,0,15
	.word	652
	.byte	16
	.word	693
	.byte	16
	.word	707
	.byte	6,0,15
	.word	730
	.byte	16
	.word	764
	.byte	16
	.word	778
	.byte	16
	.word	799
	.byte	6,0,15
	.word	845
	.byte	16
	.word	876
	.byte	16
	.word	891
	.byte	6,0,15
	.word	914
	.byte	16
	.word	947
	.byte	16
	.word	962
	.byte	6,0,15
	.word	985
	.byte	16
	.word	1026
	.byte	16
	.word	1040
	.byte	6,0,15
	.word	1063
	.byte	16
	.word	1097
	.byte	16
	.word	1111
	.byte	16
	.word	1132
	.byte	6,0,14
	.byte	'DcmAppl_DcmConfirmation',0,8,98,33,1,1,1,1,5
	.byte	'idContext',0,8,100,38
	.word	155
	.byte	5
	.byte	'dcmRxPduId',0,8,101,30
	.word	485
	.byte	5
	.byte	'SourceAddress',0,8,102,27
	.word	485
	.byte	5
	.byte	'status',0,8,103,47
	.word	155
	.byte	0,8
	.byte	'DcmAppl_DcmCheckRoutineControlOptionRecord',0,8,169,3,38
	.word	155
	.byte	1,1,1,1,5
	.byte	'nrRID_u16',0,8,169,3,103
	.word	485
	.byte	5
	.byte	'dataSubFunc_u8',0,8,170,3,65
	.word	155
	.byte	5
	.byte	'adrRoutineCtrlOptRec_pcst',0,8,170,3,121
	.word	1721
	.byte	5
	.byte	'dataRoutineCtrlOptRecSize_u16',0,8,170,3,169,1
	.word	485
	.byte	0
.L275:
	.byte	3
	.word	155
	.byte	10,7,26,9,8,11
	.byte	'posnStart_u16',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'dataLength_u16',0
	.word	485
	.byte	2,2,35,2,11
	.byte	'idxSignal_u16',0
	.word	485
	.byte	2,2,35,4,11
	.byte	'dataEndianness_u8',0
	.word	155
	.byte	1,2,35,6,11
	.byte	'dataType_u8',0
	.word	155
	.byte	1,2,35,7,0,13
	.word	2703
.L291:
	.byte	3
	.word	2827
	.byte	17
	.byte	'__INDIRECT__',0,9,1,1,1,1,1,18,1,3
	.word	2857
	.byte	9
	.byte	'__codeptr',0,9,1,1
	.word	2859
	.byte	2
	.byte	'char',0,1,6,9
	.byte	'sint8',0,10,76,25
	.word	2882
	.byte	9
	.byte	'uint8',0,10,81,25
	.word	155
	.byte	9
	.byte	'uint16',0,10,91,25
	.word	485
	.byte	9
	.byte	'uint32',0,10,106,24
	.word	824
	.byte	2
	.byte	'unsigned long long int',0,8,7,9
	.byte	'uint64',0,10,111,30
	.word	2948
	.byte	9
	.byte	'boolean',0,10,127,25
	.word	155
	.byte	2
	.byte	'unsigned long int',0,4,7,9
	.byte	'uint16_least',0,10,147,1,25
	.word	3005
	.byte	9
	.byte	'StatusType',0,11,191,1,27
	.word	155
	.byte	9
	.byte	'Std_ReturnType',0,11,199,1,15
	.word	155
	.byte	10,11,206,1,9,8,11
	.byte	'vendorID',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'moduleID',0
	.word	485
	.byte	2,2,35,2,11
	.byte	'sw_major_version',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'sw_minor_version',0
	.word	155
	.byte	1,2,35,5,11
	.byte	'sw_patch_version',0
	.word	155
	.byte	1,2,35,6,0,9
	.byte	'Std_VersionInfoType',0,11,213,1,3
	.word	3092
	.byte	9
	.byte	'PduIdType',0,12,22,19
	.word	485
	.byte	9
	.byte	'PduLengthType',0,12,26,19
	.word	485
	.byte	10,13,71,9,8,11
	.byte	'SduDataPtr',0
	.word	172
	.byte	4,2,35,0,11
	.byte	'SduLength',0
	.word	485
	.byte	2,2,35,4,0,9
	.byte	'PduInfoType',0,13,75,3
	.word	3282
	.byte	19,13,113,9,4,20
	.byte	'TP_DATACONF',0,0,20
	.byte	'TP_DATARETRY',0,1,20
	.byte	'TP_CONFPENDING',0,2,0,9
	.byte	'TpDataStateType',0,13,118,3
	.word	3347
	.byte	9
	.byte	'NetworkHandleType',0,13,128,1,17
	.word	155
	.byte	9
	.byte	'Can_IdType',0,14,32,16
	.word	824
	.byte	9
	.byte	'Can_HwHandleType',0,14,43,16
	.word	485
	.byte	10,15,93,9,8,11
	.byte	'Class',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'TIN',0
	.word	155
	.byte	1,2,35,1,11
	.byte	'ReturnAddress',0
	.word	824
	.byte	4,2,35,4,0,9
	.byte	'OsTrapInfoType',0,15,97,3
	.word	3494
	.byte	21,68
	.word	824
	.byte	22,16,0,10,15,154,1,9,68,11
	.byte	'store',0
	.word	3574
	.byte	68,2,35,0,0,21,68
	.word	3583
	.byte	22,0,0,9
	.byte	'Os_JumpBufType',0,15,156,1,3
	.word	3605
	.byte	9
	.byte	'Os_StackTraceType',0,15,174,1,18
	.word	824
	.byte	10,15,175,1,9,8,11
	.byte	'sp',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'ctx',0
	.word	824
	.byte	4,2,35,4,0,9
	.byte	'Os_StackValueType',0,15,175,1,63
	.word	3665
	.byte	9
	.byte	'Os_StackSizeType',0,15,176,1,27
	.word	3665
	.byte	23,1,1,3
	.word	3750
	.byte	9
	.byte	'Os_VoidVoidFunctionType',0,15,179,1,16
	.word	3753
	.byte	9
	.byte	'ApplicationType',0,15,193,1,23
	.word	155
	.byte	24
	.byte	'Os_ApplicationConfigurationType_s',0,15,198,1,16,2,11
	.byte	'app_id',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,1,0,9
	.byte	'Os_ApplicationConfigurationType',0,15,201,1,3
	.word	3816
	.byte	9
	.byte	'Os_CoreStateType',0,15,203,1,16
	.word	824
	.byte	9
	.byte	'AreaIdType',0,15,204,1,16
	.word	485
	.byte	9
	.byte	'Os_PeripheralAddressType',0,15,212,1,22
	.word	824
	.byte	9
	.byte	'TickType',0,15,221,1,22
	.word	824
	.byte	9
	.byte	'Os_StopwatchTickType',0,15,225,1,22
	.word	824
	.byte	9
	.byte	'Os_Lockable',0,15,234,1,18
	.word	840
	.byte	9
	.byte	'CoreIdType',0,15,236,1,16
	.word	485
	.byte	9
	.byte	'SpinlockIdType',0,15,237,1,16
	.word	485
	.byte	19,15,239,1,9,4,20
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,20
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,9
	.byte	'TryToGetSpinlockType',0,15,239,1,74
	.word	4123
	.byte	19,15,174,2,9,4,20
	.byte	'APPLICATION_ACCESSIBLE',0,0,20
	.byte	'APPLICATION_RESTARTING',0,1,20
	.byte	'APPLICATION_TERMINATED',0,2,0,9
	.byte	'ApplicationStateType',0,15,174,2,92
	.word	4216
	.byte	25
	.byte	'void',0,3
	.word	4328
	.byte	26,1,1,27
	.word	155
	.byte	27
	.word	4334
	.byte	0,3
	.word	4339
	.byte	9
	.byte	'Os_FunctionEntryType',0,15,183,2,16
	.word	4353
	.byte	24
	.byte	'Os_MeterInfoType_s',0,15,193,2,16,48,11
	.byte	'elapsed',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'previous',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'max',0
	.word	824
	.byte	4,2,35,8,11
	.byte	'cumulative',0
	.word	824
	.byte	4,2,35,12,11
	.byte	'stackbase',0
	.word	3665
	.byte	8,2,35,16,11
	.byte	'stackusage',0
	.word	3665
	.byte	8,2,35,24,11
	.byte	'stackmax',0
	.word	3665
	.byte	8,2,35,32,11
	.byte	'stackbudget',0
	.word	3665
	.byte	8,2,35,40,0,9
	.byte	'Os_MeterInfoType',0,15,202,2,3
	.word	4388
	.byte	3
	.word	4388
	.byte	9
	.byte	'Os_MeterInfoRefType',0,15,203,2,50
	.word	4586
	.byte	9
	.byte	'EventMaskType',0,15,206,2,15
	.word	155
	.byte	9
	.byte	'Os_imaskType',0,15,211,2,16
	.word	824
	.byte	24
	.byte	'Os_ISRDynType_s',0,15,213,2,16,48,11
	.byte	'meter',0
	.word	4388
	.byte	48,2,35,0,0,9
	.byte	'Os_ISRDynType',0,15,215,2,3
	.word	4665
	.byte	3
	.word	4665
	.byte	13
	.word	4726
	.byte	24
	.byte	'Os_ISRType_s',0,15,216,2,16,24,11
	.byte	'entry_function',0
	.word	3758
	.byte	4,2,35,0,11
	.byte	'dynamic',0
	.word	4731
	.byte	4,2,35,4,11
	.byte	'imask',0
	.word	824
	.byte	4,2,35,8,11
	.byte	'stackbudget',0
	.word	3665
	.byte	8,2,35,12,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,20,11
	.byte	'application',0
	.word	155
	.byte	1,2,35,21,0,9
	.byte	'Os_ISRType',0,15,223,2,3
	.word	4736
	.byte	3
	.word	3750
	.byte	13
	.word	4736
	.byte	3
	.word	4895
	.byte	9
	.byte	'ISRType',0,15,224,2,46
	.word	4900
	.byte	9
	.byte	'Os_bitmask',0,15,239,2,22
	.word	824
	.byte	9
	.byte	'Os_pset0Type',0,15,240,2,20
	.word	824
	.byte	9
	.byte	'Os_pset1Type',0,15,241,2,20
	.word	824
	.byte	9
	.byte	'Os_pset2Type',0,15,242,2,20
	.word	824
	.byte	28,15,243,2,9,4,11
	.byte	'p0',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'p1',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'p2',0
	.word	824
	.byte	4,2,35,0,0,9
	.byte	'Os_psetType',0,15,247,2,3
	.word	5008
	.byte	28,15,249,2,9,4,11
	.byte	't0',0
	.word	824
	.byte	4,2,35,0,11
	.byte	't1',0
	.word	824
	.byte	4,2,35,0,11
	.byte	't2',0
	.word	824
	.byte	4,2,35,0,0,9
	.byte	'Os_tpmaskType',0,15,253,2,3
	.word	5072
	.byte	9
	.byte	'Os_ActivationCountType',0,15,254,2,23
	.word	155
	.byte	24
	.byte	'Os_TaskDynType_s',0,15,128,3,16,120,11
	.byte	'terminate_jump_buf',0
	.word	3614
	.byte	68,2,35,0,11
	.byte	'meter',0
	.word	4388
	.byte	48,2,35,68,11
	.byte	'activation_count',0
	.word	155
	.byte	1,2,35,116,0,9
	.byte	'Os_TaskDynType',0,15,132,3,3
	.word	5170
	.byte	21,68
	.word	3583
	.byte	22,0,0,3
	.word	5170
	.byte	13
	.word	5296
	.byte	24
	.byte	'Os_TaskType_s',0,15,134,3,16,40,11
	.byte	'dynamic',0
	.word	5301
	.byte	4,2,35,0,11
	.byte	'entry_function',0
	.word	3758
	.byte	4,2,35,4,11
	.byte	'pset',0
	.word	5008
	.byte	4,2,35,8,11
	.byte	'base_tpmask',0
	.word	5072
	.byte	4,2,35,12,11
	.byte	'tpmask',0
	.word	5072
	.byte	4,2,35,16,11
	.byte	'core_id',0
	.word	485
	.byte	2,2,35,20,11
	.byte	'index',0
	.word	824
	.byte	4,2,35,24,11
	.byte	'stackbudget',0
	.word	3665
	.byte	8,2,35,28,11
	.byte	'activation_count',0
	.word	155
	.byte	1,2,35,36,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,37,11
	.byte	'application',0
	.word	155
	.byte	1,2,35,38,0,9
	.byte	'Os_TaskType',0,15,146,3,3
	.word	5306
	.byte	13
	.word	5306
	.byte	3
	.word	5556
	.byte	9
	.byte	'TaskType',0,15,147,3,47
	.word	5561
	.byte	29
	.byte	'Os_TaskStateType',0,15,155,3,6,4,20
	.byte	'SUSPENDED',0,0,20
	.byte	'READY',0,1,20
	.byte	'WAITING',0,2,20
	.byte	'RUNNING',0,3,0,9
	.byte	'TaskStateType',0,15,156,3,31
	.word	5584
	.byte	28,15,167,3,3,4,11
	.byte	'tpmask',0
	.word	5072
	.byte	4,2,35,0,0,24
	.byte	'Os_ResourceDynType_s',0,15,166,3,16,4,11
	.byte	'saved_priority',0
	.word	5671
	.byte	4,2,35,0,0,9
	.byte	'Os_ResourceDynType',0,15,170,3,3
	.word	5694
	.byte	3
	.word	5694
	.byte	13
	.word	5774
	.byte	24
	.byte	'Os_ResourceType_s',0,15,171,3,16,12,11
	.byte	'dynamic',0
	.word	5779
	.byte	4,2,35,0,11
	.byte	'tpmask',0
	.word	5072
	.byte	4,2,35,4,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,8,0,9
	.byte	'Os_ResourceType',0,15,175,3,3
	.word	5784
	.byte	10,15,181,3,9,12,11
	.byte	'maxallowedvalue',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'ticksperbase',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'mincycle',0
	.word	824
	.byte	4,2,35,8,0,9
	.byte	'AlarmBaseType',0,15,185,3,3
	.word	5883
	.byte	10,15,206,3,9,8,11
	.byte	'Running',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'Pending',0
	.word	155
	.byte	1,2,35,1,11
	.byte	'Delay',0
	.word	824
	.byte	4,2,35,4,0,9
	.byte	'Os_CounterStatusType',0,15,210,3,3
	.word	5978
	.byte	30
	.word	155
	.byte	1,1,3
	.word	6064
	.byte	9
	.byte	'Os_CounterIncrAdvType',0,15,217,3,22
	.word	6071
	.byte	24
	.byte	's_swd',0,15,222,3,12,4,11
	.byte	'count',0
	.word	824
	.byte	4,2,35,0,0,28,15,221,3,3,4,11
	.byte	'sw',0
	.word	6107
	.byte	4,2,35,0,0,24
	.byte	'Os_CounterDynType_s',0,15,220,3,16,4,11
	.byte	'type_dependent',0
	.word	6135
	.byte	4,2,35,0,0,9
	.byte	'Os_CounterDynType',0,15,226,3,3
	.word	6154
	.byte	3
	.word	6154
	.byte	13
	.word	6232
	.byte	24
	.byte	'Os_CounterType_s',0,15,227,3,16,28,11
	.byte	'dynamic',0
	.word	6237
	.byte	4,2,35,0,11
	.byte	'advincr',0
	.word	6076
	.byte	4,2,35,4,11
	.byte	'base',0
	.word	5883
	.byte	12,2,35,8,11
	.byte	'core',0
	.word	4334
	.byte	4,2,35,20,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,24,11
	.byte	'application',0
	.word	155
	.byte	1,2,35,25,0,9
	.byte	'Os_CounterType',0,15,234,3,3
	.word	6242
	.byte	3
	.word	6064
	.byte	13
	.word	6242
	.byte	3
	.word	6394
	.byte	9
	.byte	'CounterType',0,15,235,3,52
	.word	6399
	.byte	29
	.byte	'Os_ScheduleTableStatusType',0,15,240,3,6,4,20
	.byte	'SCHEDULETABLE_STOPPED',0,0,20
	.byte	'SCHEDULETABLE_NEXT',0,1,20
	.byte	'SCHEDULETABLE_WAITING',0,2,20
	.byte	'SCHEDULETABLE_RUNNING',0,3,20
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,9
	.byte	'ScheduleTableStatusType',0,15,241,3,41
	.word	6425
	.byte	13
	.word	.L429-.L168
	.byte	3
	.word	6625
	.byte	9
	.byte	'ScheduleTableType',0,15,128,4,58
	.word	6630
	.byte	24
	.byte	'Os_ScheduleTableDynType_s',0,15,130,4,16,16,11
	.byte	'match',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'next',0
	.word	6635
	.byte	4,2,35,4,11
	.byte	'state',0
	.word	6425
	.byte	4,2,35,8,11
	.byte	'config',0
	.word	485
	.byte	2,2,35,12,0,3
	.word	6662
	.byte	13
	.word	6755
.L429:
	.byte	24
	.byte	'Os_ScheduleTableType_s',0,15,247,3,16,16,11
	.byte	'dynamic',0
	.word	6760
	.byte	4,2,35,0,11
	.byte	'counter',0
	.word	6404
	.byte	4,2,35,4,11
	.byte	'repeat',0
	.word	155
	.byte	1,2,35,8,11
	.byte	'config',0
	.word	485
	.byte	2,2,35,10,11
	.byte	'initial',0
	.word	155
	.byte	1,2,35,12,11
	.byte	'access',0
	.word	155
	.byte	1,2,35,13,11
	.byte	'application',0
	.word	155
	.byte	1,2,35,14,0,9
	.byte	'Os_ScheduleTableType',0,15,255,3,3
	.word	6765
	.byte	13
	.word	6765
	.byte	3
	.word	6945
	.byte	13
	.word	6242
	.byte	3
	.word	6955
	.byte	31
	.word	4058
	.byte	31
	.word	5008
	.byte	31
	.word	4905
	.byte	31
	.word	5566
	.byte	31
	.word	5072
	.byte	31
	.word	155
	.byte	31
	.word	5566
	.byte	24
	.byte	'Os_ControlledCoreType_s',0,15,251,6,16,112,11
	.byte	'TrapInfo',0
	.word	3494
	.byte	8,2,35,0,11
	.byte	'lock_taskaccess',0
	.word	6965
	.byte	4,2,35,8,11
	.byte	'ReadyTasks',0
	.word	6970
	.byte	4,2,35,12,11
	.byte	'RunningISR',0
	.word	6975
	.byte	4,2,35,16,11
	.byte	'RunningTask',0
	.word	6980
	.byte	4,2,35,20,11
	.byte	'RunningTPMask',0
	.word	6985
	.byte	4,2,35,24,11
	.byte	'CurrentMeteredObject',0
	.word	4591
	.byte	4,2,35,28,11
	.byte	'IdleMeter',0
	.word	4388
	.byte	48,2,35,32,11
	.byte	'AppAccess',0
	.word	155
	.byte	1,2,35,80,11
	.byte	'AppOverride',0
	.word	6990
	.byte	1,2,35,81,11
	.byte	'GetStackValueAdjust',0
	.word	3665
	.byte	8,2,35,84,11
	.byte	'InErrorHook',0
	.word	155
	.byte	1,2,35,92,11
	.byte	'ChainTaskRef',0
	.word	6995
	.byte	4,2,35,96,11
	.byte	'GetStackUsageAdjust',0
	.word	3665
	.byte	8,2,35,100,11
	.byte	'InProtectionHook',0
	.word	155
	.byte	1,2,35,108,11
	.byte	'CoreIsActive',0
	.word	155
	.byte	1,2,35,109,11
	.byte	'InShutdownHook',0
	.word	155
	.byte	1,2,35,110,0,9
	.byte	'Os_ControlledCoreType',0,15,141,7,3
	.word	7000
	.byte	3
	.word	824
	.byte	13
	.word	4736
	.byte	3
	.word	7456
	.byte	13
	.word	5306
	.byte	3
	.word	7466
	.byte	3
	.word	4388
	.byte	24
	.byte	'Os_AnyCoreType_s',0,15,151,7,16,96,11
	.byte	'DisableAllImask',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'SuspendAllImask',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'SuspendOSImask',0
	.word	824
	.byte	4,2,35,8,11
	.byte	'DisableAllCount',0
	.word	824
	.byte	4,2,35,12,11
	.byte	'SuspendAllCount',0
	.word	824
	.byte	4,2,35,16,11
	.byte	'SuspendOSCount',0
	.word	824
	.byte	4,2,35,20,11
	.byte	'RestartJumpBuf',0
	.word	3614
	.byte	68,2,35,24,11
	.byte	'Restartable',0
	.word	155
	.byte	1,2,35,92,0,9
	.byte	'Os_AnyCoreType',0,15,160,7,3
	.word	7481
	.byte	9
	.byte	'Can_TxObjPriorityClassType',0,16,219,3,16
	.word	824
	.byte	24
	.byte	'Can_TxHwObjectConfigType',0,16,231,3,16,8,11
	.byte	'MsgObjId',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'HwControllerId',0
	.word	155
	.byte	1,2,35,1,11
	.byte	'TxObjPriorityClass',0
	.word	824
	.byte	4,2,35,4,0,9
	.byte	'Can_TxHwObjectConfigType',0,16,252,3,3
	.word	7758
	.byte	24
	.byte	'Can_RxHwObjectConfigType',0,16,129,4,16,12,11
	.byte	'MaskRef',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'MsgId',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'MsgObjId',0
	.word	155
	.byte	1,2,35,8,11
	.byte	'HwControllerId',0
	.word	155
	.byte	1,2,35,9,0,9
	.byte	'Can_RxHwObjectConfigType',0,16,147,4,3
	.word	7894
	.byte	21,4
	.word	155
	.byte	22,3,0,24
	.byte	'Can_ControllerMOMapConfigType',0,16,181,4,16,4,11
	.byte	'ControllerMOMap',0
	.word	8034
	.byte	4,2,35,0,0,9
	.byte	'Can_ControllerMOMapConfigType',0,16,184,4,3
	.word	8043
	.byte	24
	.byte	'Can_NPCRValueType',0,16,188,4,16,2,11
	.byte	'Can_NPCRValue',0
	.word	485
	.byte	2,2,35,0,0,9
	.byte	'Can_NPCRValueType',0,16,191,4,3
	.word	8144
	.byte	24
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,194,4,16,8,11
	.byte	'CanControllerBaudrate',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'CanControllerBaudrateCfg',0
	.word	485
	.byte	2,2,35,4,0,9
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,198,4,3
	.word	8219
	.byte	13
	.word	8219
	.byte	3
	.word	8384
	.byte	24
	.byte	'Can_BaudrateConfigPtrType',0,16,201,4,16,4,11
	.byte	'Can_kBaudrateConfigPtr',0
	.word	8389
	.byte	4,2,35,0,0,9
	.byte	'Can_BaudrateConfigPtrType',0,16,204,4,3
	.word	8394
	.byte	24
	.byte	'Can_EventHandlingType',0,16,226,4,16,4,11
	.byte	'CanEventType',0
	.word	8034
	.byte	4,2,35,0,0,9
	.byte	'Can_EventHandlingType',0,16,229,4,3
	.word	8494
	.byte	9
	.byte	'Rte_TransformerErrorCode',0,17,130,1,15
	.word	155
	.byte	9
	.byte	'Rte_TransformerClass',0,17,131,1,15
	.word	155
	.byte	10,17,168,1,9,12,11
	.byte	'in',0
	.word	4334
	.byte	4,2,35,0,11
	.byte	'out',0
	.word	4334
	.byte	4,2,35,4,11
	.byte	'used',0
	.word	485
	.byte	2,2,35,8,11
	.byte	'lost_data',0
	.word	155
	.byte	1,2,35,10,0,9
	.byte	'Rte_QDynType',0,17,173,1,3
	.word	8640
	.byte	19,17,175,1,9,4,20
	.byte	'RTE_DRA',0,0,20
	.byte	'RTE_WOWP',0,1,20
	.byte	'RTE_TASK',0,2,20
	.byte	'RTE_ARE',0,3,20
	.byte	'RTE_EV',0,4,20
	.byte	'RTE_MSI',0,5,0,9
	.byte	'Rte_NotificationType',0,17,182,1,3
	.word	8727
	.byte	3
	.word	8640
	.byte	24
	.byte	'Rte_QCmnType',0,17,184,1,16,24,11
	.byte	'dynamic',0
	.word	8825
	.byte	4,2,35,0,11
	.byte	'copy',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'queue_size',0
	.word	485
	.byte	2,2,35,6,11
	.byte	'element_size',0
	.word	485
	.byte	2,2,35,8,11
	.byte	'buffer_start',0
	.word	4334
	.byte	4,2,35,12,11
	.byte	'buffer_end',0
	.word	4334
	.byte	4,2,35,16,11
	.byte	'notification_type',0
	.word	8727
	.byte	4,2,35,20,0,9
	.byte	'Rte_QCmnType',0,17,192,1,3
	.word	8830
	.byte	9
	.byte	'Rte_AlarmRefType',0,17,224,1,32
	.word	824
	.byte	9
	.byte	'Rte_AlarmIndexType',0,17,226,1,32
	.word	485
	.byte	21,128,8
	.word	155
	.byte	22,255,7,0,9
	.byte	'Impl_NVM_DstPtrType_1024',0,18,50,15
	.word	9068
	.byte	9
	.byte	'CanIf_u32_impl',0,18,69,16
	.word	824
	.byte	9
	.byte	'CanIf_u16_impl',0,18,71,16
	.word	485
	.byte	9
	.byte	'CanIf_u8_impl',0,18,73,15
	.word	155
	.byte	9
	.byte	'CanIf_ControllerModeType_Enum_impl',0,18,88,15
	.word	155
	.byte	9
	.byte	'CanIf_PduModeType_Enum_impl',0,18,90,15
	.word	155
	.byte	10,18,92,9,2,11
	.byte	'DeviceMode',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'ChannelMode',0
	.word	155
	.byte	1,2,35,1,0,9
	.byte	'CanIf_ControllerStateType_struct_impl',0,18,95,3
	.word	9259
	.byte	9
	.byte	'CanIf_NotifStatusType_Enum_impl',0,18,100,15
	.word	155
	.byte	9
	.byte	'CanSM_boolean_Impl',0,18,120,15
	.word	155
	.byte	9
	.byte	'CanSM_u8_Impl',0,18,123,15
	.word	155
	.byte	9
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,18,128,1,15
	.word	155
	.byte	9
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,18,132,1,15
	.word	155
	.byte	9
	.byte	'CanSM_u16_Impl',0,18,136,1,16
	.word	485
	.byte	9
	.byte	'CanSM_TimerStateType_Enum_impl',0,18,138,1,15
	.word	155
	.byte	10,18,140,1,9,4,11
	.byte	'cntTick_u16',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'stTimer',0
	.word	155
	.byte	1,2,35,2,0,9
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,18,143,1,3
	.word	9600
	.byte	9
	.byte	'Com_impl_u16',0,18,154,1,16
	.word	485
	.byte	9
	.byte	'Com_impl_u8',0,18,157,1,15
	.word	155
	.byte	9
	.byte	'ComM_uint32_Impl',0,18,173,1,16
	.word	824
	.byte	9
	.byte	'ComM_uint16_Impl',0,18,175,1,16
	.word	485
	.byte	9
	.byte	'ComM_uint8_Impl',0,18,177,1,15
	.word	155
	.byte	9
	.byte	'ComM_bool_Impl',0,18,179,1,15
	.word	155
	.byte	10,18,181,1,9,24,11
	.byte	'ChannelState_e',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'LightTimeoutCtr_u32',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	485
	.byte	2,2,35,8,11
	.byte	'ChannelMode_u8',0
	.word	155
	.byte	1,2,35,10,11
	.byte	'BusSmMode_u8',0
	.word	155
	.byte	1,2,35,11,11
	.byte	'UserRequestCtr_u8',0
	.word	155
	.byte	1,2,35,12,11
	.byte	'PassiveRequestState_u8',0
	.word	155
	.byte	1,2,35,13,11
	.byte	'PncRequestCtr_u8',0
	.word	155
	.byte	1,2,35,14,11
	.byte	'InhibitionReqStatus_u8',0
	.word	155
	.byte	1,2,35,15,11
	.byte	'NmNetworkRequestStatus_b',0
	.word	155
	.byte	1,2,35,16,11
	.byte	'DiagnosticRequestState_b',0
	.word	155
	.byte	1,2,35,17,11
	.byte	'CommunicationAllowed_b',0
	.word	155
	.byte	1,2,35,18,11
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	155
	.byte	1,2,35,19,11
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	155
	.byte	1,2,35,20,11
	.byte	'NmNetworkModeStatus_b',0
	.word	155
	.byte	1,2,35,21,0,9
	.byte	'ComM_ChannelStruct_Impl',0,18,197,1,3
	.word	9832
	.byte	10,18,206,1,9,10,11
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'LimitToNoComCtr_u16',0
	.word	485
	.byte	2,2,35,2,11
	.byte	'RequestedUserMode_t',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'IndicatedUserMode_t',0
	.word	155
	.byte	1,2,35,5,11
	.byte	'numChannelsInFullCom_u8',0
	.word	155
	.byte	1,2,35,6,11
	.byte	'numChannelsInSilentCom_u8',0
	.word	155
	.byte	1,2,35,7,11
	.byte	'numChannelsInNoCom_u8',0
	.word	155
	.byte	1,2,35,8,0,9
	.byte	'ComM_UserStruct_Impl',0,18,214,1,3
	.word	10336
	.byte	9
	.byte	'Dcm_ConfirmationStatusType',0,18,243,1,15
	.word	155
	.byte	9
	.byte	'Dcm_IOOperationResponseType',0,18,252,1,15
	.word	155
	.byte	9
	.byte	'Dcm_NegativeResponseCodeType',0,18,132,2,15
	.word	155
	.byte	9
	.byte	'Dcm_OpStatusType',0,18,134,2,15
	.word	155
	.byte	9
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	18,138,2,15
	.word	155
	.byte	9
	.byte	'Dcm_SecLevelType',0,18,142,2,15
	.word	155
	.byte	9
	.byte	'Dcm_SesCtrlType',0,18,144,2,15
	.word	155
	.byte	9
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,18,146,2,15
	.word	155
	.byte	9
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,18,150,2,15
	.word	155
	.byte	9
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,18,154,2,15
	.word	155
	.byte	9
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,18,243,3,34
	.word	9079
	.byte	21,128,8
	.word	155
	.byte	22,255,7,0,9
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,18,246,3,34
	.word	9079
	.byte	9
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,19,37,15
	.word	155
	.byte	9
	.byte	'Dcm_SrvOpStatusType',0,4,62,15
	.word	155
	.byte	9
	.byte	'Dcm_MsgItemType',0,4,182,2,15
	.word	155
	.byte	9
	.byte	'Dcm_MsgLenType',0,4,197,2,16
	.word	824
	.byte	9
	.byte	'Dcm_MsgAddInfoType',0,4,219,2,2
	.word	1266
	.byte	9
	.byte	'Dcm_IdContextType',0,4,225,2,15
	.word	155
	.byte	9
	.byte	'Dcm_MsgContextType',0,4,188,3,2
	.word	1344
	.byte	10,4,238,5,9,32,11
	.byte	'tx_buffer_pa',0
	.word	1245
	.byte	4,2,35,0,11
	.byte	'rx_mainBuffer_pa',0
	.word	1245
	.byte	4,2,35,4,11
	.byte	'tx_buffer_size_u32',0
	.word	824
	.byte	4,2,35,8,11
	.byte	'rx_buffer_size_u32',0
	.word	824
	.byte	4,2,35,12,11
	.byte	'dataP2TmrAdjust',0
	.word	824
	.byte	4,2,35,16,11
	.byte	'dataP2StarTmrAdjust',0
	.word	824
	.byte	4,2,35,20,11
	.byte	'protocolid_u8',0
	.word	155
	.byte	1,2,35,24,11
	.byte	'sid_tableid_u8',0
	.word	155
	.byte	1,2,35,25,11
	.byte	'premption_level_u8',0
	.word	155
	.byte	1,2,35,26,11
	.byte	'pduinfo_idx_u8',0
	.word	155
	.byte	1,2,35,27,11
	.byte	'nrc21_b',0
	.word	155
	.byte	1,2,35,28,11
	.byte	'sendRespPendTransToBoot',0
	.word	155
	.byte	1,2,35,29,0,9
	.byte	'Dcm_Dsld_protocol_tableType',0,4,143,6,2
	.word	11514
	.byte	26,1,1,27
	.word	155
	.byte	27
	.word	485
	.byte	27
	.word	485
	.byte	27
	.word	155
	.byte	0,3
	.word	11865
	.byte	9
	.byte	'Dcm_ConfirmationApiType',0,4,145,6,16
	.word	11889
	.byte	3
	.word	155
	.byte	32
	.word	155
	.byte	1,1,27
	.word	11927
	.byte	27
	.word	155
	.byte	27
	.word	155
	.byte	0,3
	.word	11932
	.byte	3
	.word	1344
	.byte	32
	.word	155
	.byte	1,1,27
	.word	155
	.byte	27
	.word	11960
	.byte	27
	.word	11927
	.byte	0,3
	.word	11965
	.byte	10,4,158,6,9,20,11
	.byte	'allowed_session_b32',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	11955
	.byte	4,2,35,8,11
	.byte	'SubFunc_fp',0
	.word	11988
	.byte	4,2,35,12,11
	.byte	'subservice_id_u8',0
	.word	155
	.byte	1,2,35,16,11
	.byte	'isDspRDTCSubFnc_b',0
	.word	155
	.byte	1,2,35,17,0,9
	.byte	'Dcm_Dsld_SubServiceType',0,4,169,6,2
	.word	11993
	.byte	13
	.word	11993
	.byte	3
	.word	12205
	.byte	32
	.word	155
	.byte	1,1,27
	.word	11927
	.byte	27
	.word	155
	.byte	0,3
	.word	12215
	.byte	10,4,186,6,9,36,11
	.byte	'allowed_session_b32',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'service_handler_fp',0
	.word	11988
	.byte	4,2,35,8,11
	.byte	'Service_init_fp',0
	.word	3753
	.byte	4,2,35,12,11
	.byte	'sid_u8',0
	.word	155
	.byte	1,2,35,16,11
	.byte	'subfunction_exist_b',0
	.word	155
	.byte	1,2,35,17,11
	.byte	'servicelocator_b',0
	.word	155
	.byte	1,2,35,18,11
	.byte	'ptr_subservice_table_pcs',0
	.word	12210
	.byte	4,2,35,20,11
	.byte	'num_sf_u8',0
	.word	155
	.byte	1,2,35,24,11
	.byte	'adrUserServiceModeRule_pfct',0
	.word	12233
	.byte	4,2,35,28,11
	.byte	'Dcm_ConfirmationService',0
	.word	11894
	.byte	4,2,35,32,0,9
	.byte	'Dcm_Dsld_ServiceType',0,4,204,6,3
	.word	12238
	.byte	3
	.word	11865
	.byte	13
	.word	12238
	.byte	3
	.word	12586
	.byte	10,4,218,6,9,8,11
	.byte	'ptr_service_table_pcs',0
	.word	12591
	.byte	4,2,35,0,11
	.byte	'num_services_u8',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'nrc_sessnot_supported_u8',0
	.word	155
	.byte	1,2,35,5,11
	.byte	'cdtc_index_u8',0
	.word	155
	.byte	1,2,35,6,0,9
	.byte	'Dcm_Dsld_sid_tableType',0,4,224,6,3
	.word	12596
	.byte	10,4,238,6,9,14,11
	.byte	'protocol_num_u8',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'txpduid_num_u8',0
	.word	485
	.byte	2,2,35,2,11
	.byte	'roetype2_txpdu_u8',0
	.word	485
	.byte	2,2,35,4,11
	.byte	'rdpitype2_txpdu_u8',0
	.word	485
	.byte	2,2,35,6,11
	.byte	'testaddr_u16',0
	.word	485
	.byte	2,2,35,8,11
	.byte	'channel_idx_u8',0
	.word	155
	.byte	1,2,35,10,11
	.byte	'ConnectionIndex_u8',0
	.word	155
	.byte	1,2,35,11,11
	.byte	'NumberOfTxpdu_u8',0
	.word	155
	.byte	1,2,35,12,0,9
	.byte	'Dcm_Dsld_connType',0,4,248,6,3
	.word	12748
	.byte	19,4,146,7,9,4,20
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,20
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,20
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,9
	.byte	'Dcm_Dsld_commodeType',0,4,151,7,2
	.word	12986
	.byte	19,20,200,1,9,4,20
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,20
	.byte	'USE_ASYNCH_FNC',0,1,0,9
	.byte	'DcmDspSecurityUsePort',0,20,204,1,2
	.word	13098
	.byte	19,21,22,9,4,20
	.byte	'DCM_NO_BOOT',0,0,20
	.byte	'DCM_OEM_BOOT',0,1,20
	.byte	'DCM_SYS_BOOT',0,2,0,9
	.byte	'Dcm_SessionForBootType',0,21,27,2
	.word	13180
	.byte	19,22,192,3,9,4,20
	.byte	'DCM_READ_OK',0,0,20
	.byte	'DCM_READ_FAILED',0,1,20
	.byte	'DCM_READ_PENDING',0,2,20
	.byte	'DCM_READ_FORCE_RCRRP',0,3,20
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,9
	.byte	'Dcm_ReadMemoryRet_t',0,22,199,3,3
	.word	13261
	.byte	19,23,21,9,4,20
	.byte	'DSD_IDLE',0,0,20
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,20
	.byte	'DSD_CALL_SERVICE',0,2,20
	.byte	'DSD_WAITFORTXCONF',0,3,20
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,9
	.byte	'Dcm_DsdStatesType_ten',0,23,28,2
	.word	13396
	.byte	19,6,215,2,9,4,20
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,20
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,9
	.byte	'Dcm_DsldResponseType_ten',0,6,219,2,2
	.word	13533
	.byte	10,6,229,2,9,40,11
	.byte	'dataActiveRxPduId_u8',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'nrActiveConn_u8',0
	.word	155
	.byte	1,2,35,2,11
	.byte	'idxActiveSession_u8',0
	.word	155
	.byte	1,2,35,3,11
	.byte	'flgMonitorP3timer_b',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'idxCurrentProtocol_u8',0
	.word	155
	.byte	1,2,35,5,11
	.byte	'dataActiveTxPduId_u8',0
	.word	485
	.byte	2,2,35,6,11
	.byte	'datActiveSrvtable_u8',0
	.word	155
	.byte	1,2,35,8,11
	.byte	'flgCommActive_b',0
	.word	155
	.byte	1,2,35,9,11
	.byte	'cntrWaitpendCounter_u8',0
	.word	155
	.byte	1,2,35,10,11
	.byte	'stResponseType_en',0
	.word	13533
	.byte	4,2,35,12,11
	.byte	'idxActiveSecurity_u8',0
	.word	155
	.byte	1,2,35,16,11
	.byte	'dataResult_u8',0
	.word	155
	.byte	1,2,35,17,11
	.byte	'idxService_u8',0
	.word	155
	.byte	1,2,35,18,11
	.byte	'dataResponseByDsd_b',0
	.word	155
	.byte	1,2,35,19,11
	.byte	'dataSid_u8',0
	.word	155
	.byte	1,2,35,20,11
	.byte	'dataRequestLength_u16',0
	.word	485
	.byte	2,2,35,22,11
	.byte	'dataOldtxPduId_u8',0
	.word	485
	.byte	2,2,35,24,11
	.byte	'adrActiveTxBuffer_tpu8',0
	.word	1245
	.byte	4,2,35,28,11
	.byte	'dataTimeoutMonitor_u32',0
	.word	824
	.byte	4,2,35,32,11
	.byte	'PreviousSessionIndex',0
	.word	155
	.byte	1,2,35,36,0,9
	.byte	'Dcm_DsldInternalStructureType_tst',0,6,157,3,2
	.word	13622
	.byte	33
	.byte	'Dcm_DsldGlobal_st',0,6,159,4,55
	.word	13622
	.byte	1,1,33
	.byte	'Dcm_DsldSessionTable_pcu8',0,6,197,4,50
	.word	1721
	.byte	1,1
.L319:
	.byte	19,7,19,9,4,20
	.byte	'DCM_RC_IDLE',0,1,20
	.byte	'DCM_RC_PENDING',0,2,20
	.byte	'DCM_RC_CANCEL',0,3,0,9
	.byte	'Dcm_DspRCStateType_ten',0,7,24,2
	.word	14303
	.byte	9
	.byte	'Dcm_DspRoutineSignalInfo_tst',0,7,33,3
	.word	2703
	.byte	32
	.word	155
	.byte	1,1,27
	.word	11927
	.byte	27
	.word	485
	.byte	27
	.word	155
	.byte	0,3
	.word	14424
	.byte	13
	.word	2832
	.byte	13
	.word	2832
	.byte	13
	.word	2832
	.byte	13
	.word	2832
	.byte	13
	.word	2832
	.byte	13
	.word	2832
	.byte	10,7,35,9,68,11
	.byte	'dataSecBitMask_u32',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'dataSessBitMask_u32',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'adrUserRidModeRule_pfct',0
	.word	14447
	.byte	4,2,35,8,11
	.byte	'adrStartInSignalRef_cpcst',0
	.word	14452
	.byte	4,2,35,12,11
	.byte	'adrStopInSignalRef_cpcst',0
	.word	14457
	.byte	4,2,35,16,11
	.byte	'adrReqRslInSignalRef_cpcst',0
	.word	14462
	.byte	4,2,35,20,11
	.byte	'adrStartOutSignalRef_cpcst',0
	.word	14467
	.byte	4,2,35,24,11
	.byte	'adrStopOutSignalRef_cpcst',0
	.word	14472
	.byte	4,2,35,28,11
	.byte	'adrReqRsltOutSignalRef_cpcst',0
	.word	14477
	.byte	4,2,35,32,11
	.byte	'dataCtrlOptRecSizeStart_u16',0
	.word	485
	.byte	2,2,35,36,11
	.byte	'dataCtrlOptRecSizeStop_u16',0
	.word	485
	.byte	2,2,35,38,11
	.byte	'dataCtrlOptRecSizeReqRslt_u16',0
	.word	485
	.byte	2,2,35,40,11
	.byte	'dataStsOptRecSizeStart_u16',0
	.word	485
	.byte	2,2,35,42,11
	.byte	'dataStsOptRecSizeStop_u16',0
	.word	485
	.byte	2,2,35,44,11
	.byte	'dataStsOptRecSizeReqRslt_u16',0
	.word	485
	.byte	2,2,35,46,11
	.byte	'dataMinCtrlOptRecSizeStart_u16',0
	.word	485
	.byte	2,2,35,48,11
	.byte	'dataMinCtrlOptRecSizeStop_u16',0
	.word	485
	.byte	2,2,35,50,11
	.byte	'dataMinCtrlOptRecSizeReqRslt_u16',0
	.word	485
	.byte	2,2,35,52,11
	.byte	'dataMinStsOptRecSizeStart_u16',0
	.word	485
	.byte	2,2,35,54,11
	.byte	'dataMinStsOptRecSizeStop_u16',0
	.word	485
	.byte	2,2,35,56,11
	.byte	'dataMinStsOptRecSizeReqRslt_u16',0
	.word	485
	.byte	2,2,35,58,11
	.byte	'nrStartInSignals_u8',0
	.word	155
	.byte	1,2,35,60,11
	.byte	'nrStopInSignals_u8',0
	.word	155
	.byte	1,2,35,61,11
	.byte	'nrReqRslInSignals_u8',0
	.word	155
	.byte	1,2,35,62,11
	.byte	'nrStartOutSignals_u8',0
	.word	155
	.byte	1,2,35,63,11
	.byte	'nrStopOutSignals_u8',0
	.word	155
	.byte	1,2,35,64,11
	.byte	'nrReqRsltOutSignals_u8',0
	.word	155
	.byte	1,2,35,65,0,9
	.byte	'Dcm_DspRoutineInfoType_tst',0,7,69,3
	.word	14482
	.byte	19,7,72,9,4,20
	.byte	'DCM_ROUTINE_IDLE',0,0,20
	.byte	'DCM_ROUTINE_STOP',0,1,20
	.byte	'DCM_ROUTINE_STARTED',0,2,20
	.byte	'DCM_ROUTINE_STOP_PENDING',0,3,0,9
	.byte	'Dcm_DspRoutineStatusType_ten',0,7,77,2
	.word	15465
	.byte	13
	.word	14482
	.byte	3
	.word	15595
	.byte	13
	.word	15600
	.byte	32
	.word	155
	.byte	1,1,27
	.word	155
	.byte	0,3
	.word	15610
	.byte	10,7,83,9,20,11
	.byte	'dataRId_u16',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'dataFixedLen_b',0
	.word	155
	.byte	1,2,35,2,11
	.byte	'UsePort',0
	.word	155
	.byte	1,2,35,3,11
	.byte	'adrRoutineInfoRef_cpcst',0
	.word	15605
	.byte	4,2,35,4,11
	.byte	'adrCallRoutine_pfct',0
	.word	15623
	.byte	4,2,35,8,11
	.byte	'flgStartRoutine_b',0
	.word	155
	.byte	1,2,35,12,11
	.byte	'flgStopRoutine_b',0
	.word	155
	.byte	1,2,35,13,11
	.byte	'flgStopRoutineOnSessionChange_b',0
	.word	155
	.byte	1,2,35,14,11
	.byte	'flgReqSequenceErrorSupported_b',0
	.word	155
	.byte	1,2,35,15,11
	.byte	'dataReqRslt_b',0
	.word	155
	.byte	1,2,35,16,0,9
	.byte	'Dcm_DspRoutineType_tst',0,7,102,3
	.word	15628
	.byte	21,4
	.word	15465
	.byte	22,0,0,33
	.byte	'Dcm_RoutineStatus_aen',0,7,131,1,51
	.word	15946
	.byte	1,1,21,20
	.word	15628
	.byte	22,0,0,13
	.word	15988
	.byte	33
	.byte	'Dcm_DspRoutine_cast',0,7,144,1,49
	.word	15997
	.byte	1,1,9
	.byte	'Rte_TaskRefType',0,24,184,1,32
	.word	5566
	.byte	9
	.byte	'Rte_EventRefType',0,24,185,1,32
	.word	155
	.byte	9
	.byte	'Rte_EventType',0,24,186,1,32
	.word	824
	.byte	9
	.byte	'Rte_REActCounterType',0,24,252,1,15
	.word	155
	.byte	3
	.word	155
	.byte	9
	.byte	'Rte_REActCounterRefType',0,24,253,1,58
	.word	16137
	.byte	10,24,255,1,9,8,11
	.byte	'task',0
	.word	16033
	.byte	4,2,35,0,11
	.byte	'acnt',0
	.word	16142
	.byte	4,2,35,4,0,9
	.byte	'Rte_REContainerType',0,24,130,2,3
	.word	16175
	.byte	13
	.word	5306
	.byte	3
	.word	16239
	.byte	3
	.word	155
	.byte	13
	.word	16175
	.byte	3
	.word	16254
	.byte	9
	.byte	'Rte_REContainerRefType',0,24,132,2,60
	.word	16259
	.byte	9
	.byte	'Rte_MSICounterType',0,24,149,2,16
	.word	485
	.byte	3
	.word	485
	.byte	9
	.byte	'Rte_MSICounterRefType',0,24,150,2,56
	.word	16324
	.byte	9
	.byte	'Rte_MSIPendingFlagType',0,24,152,2,17
	.word	155
	.byte	3
	.word	155
	.byte	9
	.byte	'Rte_MSIPendingFlagRefType',0,24,153,2,60
	.word	16392
	.byte	10,24,163,2,9,24,11
	.byte	'counter',0
	.word	16329
	.byte	4,2,35,0,11
	.byte	'incCounter',0
	.word	155
	.byte	1,2,35,4,11
	.byte	'pending',0
	.word	16397
	.byte	4,2,35,8,11
	.byte	'osTask',0
	.word	16033
	.byte	4,2,35,12,11
	.byte	'acnt',0
	.word	16142
	.byte	4,2,35,16,11
	.byte	'osEvent',0
	.word	155
	.byte	1,2,35,20,11
	.byte	'MSIInit',0
	.word	485
	.byte	2,2,35,22,0,9
	.byte	'Rte_MSITableEntry',0,24,172,2,3
	.word	16432
	.byte	3
	.word	485
	.byte	3
	.word	155
	.byte	9
	.byte	'Rte_TaskArrayIndex',0,24,179,2,16
	.word	155
	.byte	9
	.byte	'Rte_NrWaitingTasks',0,24,180,2,16
	.word	155
	.byte	10,24,182,2,9,4,11
	.byte	'pending',0
	.word	155
	.byte	1,2,35,0,11
	.byte	'count',0
	.word	155
	.byte	1,2,35,1,11
	.byte	'firstWaitingTask',0
	.word	155
	.byte	1,2,35,2,0,9
	.byte	'Rte_WaitableDatum',0,24,186,2,3
	.word	16650
	.byte	3
	.word	16650
	.byte	10,24,226,2,9,12,11
	.byte	'event_id',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'wd',0
	.word	16742
	.byte	4,2,35,4,11
	.byte	'timeout',0
	.word	824
	.byte	4,2,35,8,0,9
	.byte	'Rte_WOWP_NotificationType',0,24,230,2,3
	.word	16747
	.byte	13
	.word	16747
	.byte	3
	.word	16836
	.byte	9
	.byte	'Rte_WOWP_NotificationRefType',0,24,232,2,66
	.word	16841
	.byte	9
	.byte	'Rte_ARE_NotificationType',0,24,234,2,29
	.word	16175
	.byte	24
	.byte	'Rte_QTaskType',0,24,243,2,16,28,11
	.byte	'cmn',0
	.word	8830
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	16033
	.byte	4,2,35,24,0,9
	.byte	'Rte_QTaskType',0,24,246,2,3
	.word	16918
	.byte	24
	.byte	'Rte_QREType',0,24,250,2,16,28,11
	.byte	'cmn',0
	.word	8830
	.byte	24,2,35,0,11
	.byte	're',0
	.word	16264
	.byte	4,2,35,24,0,9
	.byte	'Rte_QREType',0,24,253,2,3
	.word	16989
	.byte	13
	.word	16175
	.byte	3
	.word	17054
	.byte	24
	.byte	'Rte_QWWPType',0,24,129,3,16,28,11
	.byte	'cmn',0
	.word	8830
	.byte	24,2,35,0,11
	.byte	'wwp',0
	.word	16846
	.byte	4,2,35,24,0,9
	.byte	'Rte_QWWPType',0,24,132,3,3
	.word	17064
	.byte	13
	.word	16747
	.byte	3
	.word	17132
	.byte	24
	.byte	'Rte_QEvType',0,24,136,3,16,36,11
	.byte	'cmn',0
	.word	8830
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	16033
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	155
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	16142
	.byte	4,2,35,32,0,9
	.byte	'Rte_QEvType',0,24,141,3,3
	.word	17142
	.byte	24
	.byte	'Rte_QMSIType',0,24,145,3,16,48,11
	.byte	'cmn',0
	.word	8830
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	16033
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	155
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	16142
	.byte	4,2,35,32,11
	.byte	'msiCounter',0
	.word	16329
	.byte	4,2,35,36,11
	.byte	'msiPending',0
	.word	16397
	.byte	4,2,35,40,11
	.byte	'msiLimit',0
	.word	485
	.byte	2,2,35,44,0,9
	.byte	'Rte_QMSIType',0,24,153,3,3
	.word	17237
	.byte	19,25,148,1,9,4,20
	.byte	'DCM_ROE_CLEARED',0,0,20
	.byte	'DCM_ROE_STOPPED',0,1,20
	.byte	'DCM_ROE_STARTED',0,2,0,9
	.byte	'Dcm_DspRoeEventState_ten',0,25,153,1,2
	.word	17392
	.byte	19,25,231,1,9,4,20
	.byte	'DCM_CONTROLMASK_NO',0,0,20
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,20
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,9
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,25,236,1,2
	.word	17487
	.byte	19,22,203,1,9,4,20
	.byte	'DCM_SUPPORT_READ',0,0,20
	.byte	'DCM_SUPPORT_WRITE',0,1,20
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,32
	.word	155
	.byte	1,1,27
	.word	11927
	.byte	27
	.word	485
	.byte	27
	.word	17604
	.byte	0,3
	.word	17674
	.byte	10,25,239,1,9,44,11
	.byte	'dataAllowedSessRead_u32',0
	.word	824
	.byte	4,2,35,0,11
	.byte	'dataAllowedSecRead_u32',0
	.word	824
	.byte	4,2,35,4,11
	.byte	'adrUserReadModeRule_pfct',0
	.word	17697
	.byte	4,2,35,8,11
	.byte	'dataAllowedSessWrite_u32',0
	.word	824
	.byte	4,2,35,12,11
	.byte	'dataAllowedSecWrite_u32',0
	.word	824
	.byte	4,2,35,16,11
	.byte	'adrUserWriteModeRule_pfct',0
	.word	17697
	.byte	4,2,35,20,11
	.byte	'dataSessBitMask_u32',0
	.word	824
	.byte	4,2,35,24,11
	.byte	'dataSecBitMask_u32',0
	.word	824
	.byte	4,2,35,28,11
	.byte	'adrUserControlModeRule_pfct',0
	.word	17697
	.byte	4,2,35,32,11
	.byte	'dataCtrlMask_en',0
	.word	17487
	.byte	4,2,35,36,11
	.byte	'dataCtrlMaskSize_u8',0
	.word	155
	.byte	1,2,35,40,11
	.byte	'dataIocbirst_b',0
	.word	155
	.byte	1,2,35,41,11
	.byte	'statusmaskIOControl_u8',0
	.word	155
	.byte	1,2,35,42,0,9
	.byte	'Dcm_ExtendedDIDConfig_tst',0,25,141,2,3
	.word	17702
	.byte	10,25,200,2,9,4,11
	.byte	'posnSigBit_u16',0
	.word	485
	.byte	2,2,35,0,11
	.byte	'idxDcmDspDatainfo_u16',0
	.word	485
	.byte	2,2,35,2,0,9
	.byte	'Dcm_SignalDIDConfig_tst',0,25,204,2,3
	.word	18149
	.byte	13
	.word	15628
.L318:
	.byte	3
	.word	18244
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	9,22,0,3,8,58,15,59,15,57,15,73,19,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,12,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,13,38,0,73,19,0,0,14,46,1,3,8,58
	.byte	15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,15,46,1,49,19,0,0,16,5,0,49,19,0,0,17,46,0,3,8,58,15,59,15
	.byte	57,15,54,15,63,12,60,12,0,0,18,21,0,54,15,0,0,19,4,1,58,15,59,15,57,15,11,15,0,0,20,40,0,3,8,28,13,0,0
	.byte	21,1,1,11,15,73,19,0,0,22,33,0,47,15,0,0,23,21,0,54,15,39,12,0,0,24,19,1,3,8,58,15,59,15,57,15,11,15,0
	.byte	0,25,59,0,3,8,0,0,26,21,1,54,15,39,12,0,0,27,5,0,73,19,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0,29,4,1
	.byte	3,8,58,15,59,15,57,15,11,15,0,0,30,21,0,73,19,54,15,39,12,0,0,31,53,0,73,19,0,0,32,21,1,73,19,54,15,39
	.byte	12,0,0,33,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L170:
	.word	.L431-.L430
.L430:
	.half	3
	.word	.L433-.L432
.L432:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Lcfg_DslDsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc_Prot.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0,0
.L433:
.L431:
	.sdecl	'.debug_info',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_info'
.L171:
	.word	258
	.half	3
	.word	.L172
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L174,.L173
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_GetActiveRid',0,1,253,12,31
	.word	.L248
	.byte	1,1,1
	.word	.L166,.L249,.L165
	.byte	4
	.byte	'dataRid_u16',0,1,253,12,88
	.word	.L250,.L251
	.byte	5
	.word	.L166,.L249
	.byte	6
	.byte	'RetVal',0,1,255,12,36
	.word	.L248,.L252
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_abbrev'
.L172:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_line'
.L173:
	.word	.L435-.L434
.L434:
	.half	3
	.word	.L437-.L436
.L436:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L437:
	.byte	5,10,7,0,5,2
	.word	.L166
	.byte	3,130,13,1,5,9,9
	.half	.L438-.L166
	.byte	1,5,61,7,9
	.half	.L439-.L438
	.byte	1,5,17,7,9
	.half	.L440-.L439
	.byte	3,19,1,5,13,9
	.half	.L441-.L440
	.byte	1,5,32,7,9
	.half	.L442-.L441
	.byte	3,2,1,5,54,9
	.half	.L443-.L442
	.byte	1,5,30,9
	.half	.L444-.L443
	.byte	1,5,67,9
	.half	.L445-.L444
	.byte	1,5,32,9
	.half	.L141-.L445
	.byte	3,4,1,5,49,9
	.half	.L446-.L141
	.byte	1,5,30,9
	.half	.L447-.L446
	.byte	1,5,16,9
	.half	.L142-.L447
	.byte	3,4,1,5,22,9
	.half	.L428-.L142
	.byte	1,5,16,9
	.half	.L139-.L428
	.byte	3,4,1,5,5,9
	.half	.L143-.L139
	.byte	3,2,1,5,1,9
	.half	.L144-.L143
	.byte	3,1,1,7,9
	.half	.L175-.L144
	.byte	0,1,1
.L435:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_ranges'
.L174:
	.word	-1,.L166,0,.L175-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_info'
.L176:
	.word	406
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L179,.L178
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_DcmRoutineControl',0,1,164,10,31
	.word	.L248
	.byte	1,1,1
	.word	.L156,.L253,.L155
	.byte	4
	.byte	'OpStatus',0,1,164,10,88
	.word	.L248,.L254
	.byte	4
	.byte	'pMsgContext',0,1,164,10,149,1
	.word	.L255,.L256
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,164,10,223,1
	.word	.L257,.L258
	.byte	5
	.word	.L156,.L253
	.byte	6
	.byte	'dataRId_u16',0,1,166,10,27
	.word	.L259,.L260
	.byte	6
	.byte	'idxLoop_qu16',0,1,168,10,27
	.word	.L259,.L261
	.byte	6
	.byte	'dataRetVal_u8',0,1,169,10,35
	.word	.L248,.L262
	.byte	6
	.byte	'flgProcessReq_b',0,1,170,10,29
	.word	.L248,.L263
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_line'
.L178:
	.word	.L449-.L448
.L448:
	.half	3
	.word	.L451-.L450
.L450:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L451:
	.byte	5,31,7,0,5,2
	.word	.L156
	.byte	3,163,10,1,5,27,9
	.half	.L397-.L156
	.byte	3,7,1,5,25,9
	.half	.L452-.L397
	.byte	1,5,20,9
	.half	.L453-.L452
	.byte	3,5,1,5,18,9
	.half	.L454-.L453
	.byte	1,9
	.half	.L455-.L454
	.byte	3,1,1,5,5,9
	.half	.L398-.L455
	.byte	3,3,1,5,23,7,9
	.half	.L456-.L398
	.byte	3,3,1,9
	.half	.L395-.L456
	.byte	3,2,1,5,25,9
	.half	.L457-.L395
	.byte	3,126,1,5,14,9
	.half	.L115-.L457
	.byte	3,6,1,5,9,9
	.half	.L458-.L115
	.byte	1,5,29,7,9
	.half	.L459-.L458
	.byte	3,3,1,5,13,9
	.half	.L460-.L459
	.byte	1,5,59,7,9
	.half	.L461-.L460
	.byte	3,4,1,5,68,9
	.half	.L462-.L461
	.byte	1,5,72,9
	.half	.L463-.L462
	.byte	1,5,74,9
	.half	.L403-.L463
	.byte	3,1,1,5,52,9
	.half	.L464-.L403
	.byte	1,5,73,9
	.half	.L465-.L464
	.byte	3,3,1,5,86,9
	.half	.L402-.L465
	.byte	1,5,20,9
	.half	.L401-.L402
	.byte	3,3,1,5,42,7,9
	.half	.L466-.L401
	.byte	1,5,62,9
	.half	.L467-.L466
	.byte	1,5,97,7,9
	.half	.L468-.L467
	.byte	3,15,1,5,39,9
	.half	.L399-.L468
	.byte	1,5,109,9
	.half	.L407-.L399
	.byte	1,5,17,9
	.half	.L121-.L407
	.byte	3,4,1,5,39,9
	.half	.L118-.L121
	.byte	3,8,1,5,37,9
	.half	.L469-.L118
	.byte	1,5,13,9
	.half	.L117-.L469
	.byte	3,3,1,5,9,9
	.half	.L470-.L117
	.byte	1,5,71,7,9
	.half	.L471-.L470
	.byte	3,14,1,5,31,9
	.half	.L408-.L471
	.byte	1,5,13,9
	.half	.L123-.L408
	.byte	3,5,1,5,9,9
	.half	.L472-.L123
	.byte	1,5,35,7,9
	.half	.L473-.L472
	.byte	3,3,1,5,33,9
	.half	.L474-.L473
	.byte	1,5,26,9
	.half	.L475-.L474
	.byte	3,1,1,5,5,9
	.half	.L116-.L475
	.byte	3,3,1,5,1,9
	.half	.L125-.L116
	.byte	3,1,1,7,9
	.half	.L180-.L125
	.byte	0,1,1
.L449:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_ranges'
.L179:
	.word	-1,.L156,0,.L180-.L156,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_info'
.L181:
	.word	231
	.half	3
	.word	.L182
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L184,.L183
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Dsp_RC_Ini',0,1,84,21,1,1,1
	.word	.L146,.L264,.L145
	.byte	4
	.word	.L146,.L264
	.byte	5
	.byte	'idxLoop_qu16',0,1,86,27
	.word	.L259,.L265
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_abbrev'
.L182:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_line'
.L183:
	.word	.L477-.L476
.L476:
	.half	3
	.word	.L479-.L478
.L478:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L479:
	.byte	5,5,7,0,5,2
	.word	.L146
	.byte	3,214,0,1,5,25,9
	.half	.L480-.L146
	.byte	1,5,23,9
	.half	.L481-.L480
	.byte	1,5,10,9
	.half	.L482-.L481
	.byte	3,1,1,5,5,9
	.half	.L483-.L482
	.byte	1,5,9,7,9
	.half	.L484-.L483
	.byte	3,7,1,5,37,9
	.half	.L485-.L484
	.byte	1,5,35,9
	.half	.L486-.L485
	.byte	1,5,21,9
	.half	.L487-.L486
	.byte	3,11,1,5,43,9
	.half	.L488-.L487
	.byte	1,5,66,9
	.half	.L489-.L488
	.byte	1,5,37,9
	.half	.L490-.L489
	.byte	3,4,1,5,35,9
	.half	.L491-.L490
	.byte	1,5,5,9
	.half	.L2-.L491
	.byte	3,5,1,5,27,9
	.half	.L492-.L2
	.byte	1,5,23,9
	.half	.L493-.L492
	.byte	1,5,24,9
	.half	.L494-.L493
	.byte	3,3,1,5,64,9
	.half	.L320-.L494
	.byte	1,5,15,9
	.half	.L4-.L320
	.byte	3,4,1,5,32,9
	.half	.L495-.L4
	.byte	1,5,14,9
	.half	.L496-.L495
	.byte	1,5,81,7,9
	.half	.L497-.L496
	.byte	1,5,115,9
	.half	.L498-.L497
	.byte	1,5,129,1,7,9
	.half	.L499-.L498
	.byte	1,5,150,1,9
	.half	.L500-.L499
	.byte	1,5,164,1,9
	.half	.L501-.L500
	.byte	1,5,13,7,9
	.half	.L502-.L501
	.byte	3,5,1,5,41,9
	.half	.L503-.L502
	.byte	1,5,39,9
	.half	.L504-.L503
	.byte	1,5,38,9
	.half	.L505-.L504
	.byte	3,1,1,5,61,9
	.half	.L506-.L505
	.byte	1,5,41,9
	.half	.L507-.L506
	.byte	3,2,1,5,39,9
	.half	.L508-.L507
	.byte	1,5,13,9
	.half	.L5-.L508
	.byte	3,3,1,5,30,9
	.half	.L509-.L5
	.byte	1,5,9,9
	.half	.L510-.L509
	.byte	1,7,9
	.half	.L511-.L510
	.byte	1,5,13,9
	.half	.L8-.L511
	.byte	3,8,1,5,34,9
	.half	.L512-.L8
	.byte	1,5,51,9
	.half	.L513-.L512
	.byte	1,5,49,9
	.half	.L514-.L513
	.byte	1,5,9,9
	.half	.L9-.L514
	.byte	3,3,1,5,26,9
	.half	.L515-.L9
	.byte	1,5,78,9
	.half	.L516-.L515
	.byte	3,102,1,5,64,9
	.half	.L3-.L516
	.byte	1,5,25,7,9
	.half	.L517-.L3
	.byte	3,195,0,1,5,23,9
	.half	.L518-.L517
	.byte	1,5,27,9
	.half	.L519-.L518
	.byte	3,1,1,5,25,9
	.half	.L520-.L519
	.byte	1,5,1,9
	.half	.L521-.L520
	.byte	3,1,1,7,9
	.half	.L185-.L521
	.byte	0,1,1
.L477:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_ranges'
.L184:
	.word	-1,.L146,0,.L185-.L146,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_info'
.L186:
	.word	276
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L189,.L188
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_RoutineSetSesCtrlType',0,1,238,11,21,1,1,1
	.word	.L160,.L266,.L159
	.byte	4
	.byte	'dataSesCtrlType_u8',0,1,238,11,80
	.word	.L248,.L267
	.byte	5
	.word	.L160,.L266
	.byte	6
	.byte	'idxLoop_qu16',0,1,241,11,28
	.word	.L259,.L268
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_line'
.L188:
	.word	.L523-.L522
.L522:
	.half	3
	.word	.L525-.L524
.L524:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L525:
	.byte	5,21,7,0,5,2
	.word	.L160
	.byte	3,237,11,1,5,5,9
	.half	.L416-.L160
	.byte	3,8,1,5,27,9
	.half	.L526-.L416
	.byte	1,5,23,9
	.half	.L527-.L526
	.byte	1,5,24,9
	.half	.L528-.L527
	.byte	3,3,1,5,64,9
	.half	.L417-.L528
	.byte	1,5,15,9
	.half	.L129-.L417
	.byte	3,5,1,5,32,9
	.half	.L529-.L129
	.byte	1,5,14,9
	.half	.L530-.L529
	.byte	1,5,79,7,9
	.half	.L531-.L530
	.byte	1,5,113,9
	.half	.L532-.L531
	.byte	1,5,127,7,9
	.half	.L533-.L532
	.byte	1,5,148,1,9
	.half	.L534-.L533
	.byte	1,5,163,1,9
	.half	.L535-.L534
	.byte	1,5,38,7,9
	.half	.L536-.L535
	.byte	3,2,1,5,63,9
	.half	.L537-.L536
	.byte	1,5,13,9
	.half	.L538-.L537
	.byte	1,5,40,7,9
	.half	.L539-.L538
	.byte	3,2,1,5,53,9
	.half	.L419-.L539
	.byte	1,5,56,9
	.half	.L133-.L419
	.byte	3,5,1,5,80,9
	.half	.L540-.L133
	.byte	1,5,105,9
	.half	.L541-.L540
	.byte	1,5,59,9
	.half	.L542-.L541
	.byte	1,5,21,9
	.half	.L543-.L542
	.byte	1,5,184,1,7,9
	.half	.L544-.L543
	.byte	1,5,177,1,9
	.half	.L545-.L544
	.byte	1,5,201,1,9
	.half	.L546-.L545
	.byte	1,5,226,1,9
	.half	.L547-.L546
	.byte	1,5,180,1,9
	.half	.L548-.L547
	.byte	1,5,250,1,9
	.half	.L549-.L548
	.byte	1,5,44,7,9
	.half	.L135-.L549
	.byte	3,3,1,5,9,9
	.half	.L130-.L135
	.byte	3,5,1,5,26,9
	.half	.L550-.L130
	.byte	1,5,78,9
	.half	.L551-.L550
	.byte	3,106,1,5,64,9
	.half	.L128-.L551
	.byte	1,5,1,7,9
	.half	.L552-.L128
	.byte	3,60,1,7,9
	.half	.L190-.L552
	.byte	0,1,1
.L523:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_ranges'
.L189:
	.word	-1,.L160,0,.L190-.L160,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_info'
.L191:
	.word	333
	.half	3
	.word	.L192
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L194,.L193
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Prv_DspRCConfirmation',0,1,215,12,23,1,1,1
	.word	.L164,.L269,.L163
	.byte	4
	.byte	'dataIdContext_u8',0,1,216,12,38
	.word	.L248,.L270
	.byte	4
	.byte	'dataRxPduId_u8',0,1,217,12,29
	.word	.L259,.L271
	.byte	4
	.byte	'dataSourceAddress_u16',0,1,218,12,26
	.word	.L259,.L272
	.byte	4
	.byte	'status_u8',0,1,219,12,46
	.word	.L248,.L273
	.byte	5
	.word	.L164,.L269
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_abbrev'
.L192:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_line'
.L193:
	.word	.L554-.L553
.L553:
	.half	3
	.word	.L556-.L555
.L555:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L556:
	.byte	5,23,7,0,5,2
	.word	.L164
	.byte	3,214,12,1,5,29,9
	.half	.L557-.L164
	.byte	3,6,1,5,6,9
	.half	.L422-.L557
	.byte	1,5,27,7,9
	.half	.L423-.L422
	.byte	3,2,1,5,84,9
	.half	.L137-.L423
	.byte	3,2,1,5,29,9
	.half	.L558-.L137
	.byte	3,1,1,5,6,9
	.half	.L426-.L558
	.byte	1,5,27,7,9
	.half	.L427-.L426
	.byte	3,2,1,5,1,9
	.half	.L138-.L427
	.byte	3,2,1,7,9
	.half	.L195-.L138
	.byte	0,1,1
.L554:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_ranges'
.L194:
	.word	-1,.L164,0,.L195-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_info'
.L196:
	.word	346
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L199,.L198
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Prv_RcIsRIDSingleRoutine',0,1,169,2,38
	.word	.L248
	.byte	1,1
	.word	.L148,.L274,.L147
	.byte	4
	.byte	'flgRidSupported_b',0,1,169,2,108
	.word	.L275,.L276
	.byte	4
	.byte	'dataRId_u16',0,1,170,2,30
	.word	.L259,.L277
	.byte	4
	.byte	'idxLoop_qu16',0,1,171,2,49
	.word	.L250,.L278
	.byte	4
	.byte	'NRC_u8',0,1,172,2,71
	.word	.L257,.L279
	.byte	5
	.word	.L148,.L274
	.byte	6
	.byte	'RetVal',0,1,175,2,36
	.word	.L248,.L280
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_line'
.L198:
	.word	.L560-.L559
.L559:
	.half	3
	.word	.L562-.L561
.L561:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L562:
	.byte	5,38,7,0,5,2
	.word	.L148
	.byte	3,168,2,1,5,12,9
	.half	.L327-.L148
	.byte	3,8,1,5,5,9
	.half	.L328-.L327
	.byte	3,2,1,5,27,9
	.half	.L563-.L328
	.byte	1,5,23,9
	.half	.L564-.L563
	.byte	1,5,26,9
	.half	.L565-.L564
	.byte	3,3,1,5,24,9
	.half	.L566-.L565
	.byte	1,5,63,9
	.half	.L567-.L566
	.byte	1,5,28,9
	.half	.L11-.L567
	.byte	3,2,1,5,45,9
	.half	.L568-.L11
	.byte	1,5,9,9
	.half	.L569-.L568
	.byte	1,5,34,7,9
	.half	.L570-.L569
	.byte	3,3,1,5,32,9
	.half	.L571-.L570
	.byte	1,5,20,9
	.half	.L572-.L571
	.byte	3,1,1,5,17,9
	.half	.L573-.L572
	.byte	3,18,1,5,16,9
	.half	.L574-.L573
	.byte	1,5,37,7,9
	.half	.L575-.L574
	.byte	1,5,54,9
	.half	.L329-.L575
	.byte	1,5,72,9
	.half	.L576-.L329
	.byte	1,5,102,7,9
	.half	.L577-.L576
	.byte	1,5,136,1,9
	.half	.L578-.L577
	.byte	1,5,150,1,7,9
	.half	.L579-.L578
	.byte	1,5,172,1,9
	.half	.L580-.L579
	.byte	1,5,171,1,9
	.half	.L581-.L580
	.byte	1,5,187,1,9
	.half	.L582-.L581
	.byte	1,5,17,7,9
	.half	.L583-.L582
	.byte	3,3,1,5,37,9
	.half	.L584-.L583
	.byte	1,5,35,9
	.half	.L585-.L584
	.byte	1,5,17,9
	.half	.L586-.L585
	.byte	3,4,1,5,45,9
	.half	.L587-.L586
	.byte	1,5,43,9
	.half	.L588-.L587
	.byte	1,5,42,9
	.half	.L589-.L588
	.byte	3,1,1,5,65,9
	.half	.L590-.L589
	.byte	1,5,45,9
	.half	.L322-.L590
	.byte	3,2,1,5,43,9
	.half	.L591-.L322
	.byte	1,5,38,9
	.half	.L592-.L591
	.byte	3,1,1,5,36,9
	.half	.L593-.L592
	.byte	1,5,39,9
	.half	.L594-.L593
	.byte	3,1,1,5,38,9
	.half	.L595-.L594
	.byte	1,5,56,9
	.half	.L331-.L595
	.byte	1,5,54,9
	.half	.L596-.L331
	.byte	1,5,13,9
	.half	.L13-.L596
	.byte	3,2,1,5,33,9
	.half	.L597-.L13
	.byte	1,5,31,9
	.half	.L598-.L597
	.byte	1,5,16,9
	.half	.L599-.L598
	.byte	3,3,1,5,13,9
	.half	.L600-.L599
	.byte	1,5,17,7,9
	.half	.L601-.L600
	.byte	3,3,1,5,48,9
	.half	.L602-.L601
	.byte	1,5,37,9
	.half	.L603-.L602
	.byte	1,5,13,9
	.half	.L17-.L603
	.byte	3,2,1,5,26,9
	.half	.L12-.L17
	.byte	3,3,1,5,67,9
	.half	.L604-.L12
	.byte	3,79,1,5,80,9
	.half	.L605-.L604
	.byte	1,5,29,9
	.half	.L10-.L605
	.byte	1,5,63,9
	.half	.L606-.L10
	.byte	1,5,9,7,9
	.half	.L18-.L606
	.byte	3,52,1,5,8,9
	.half	.L607-.L18
	.byte	1,5,50,7,9
	.half	.L608-.L607
	.byte	1,5,58,9
	.half	.L609-.L608
	.byte	1,5,19,7,9
	.half	.L610-.L609
	.byte	3,2,1,5,17,9
	.half	.L611-.L610
	.byte	1,5,5,9
	.half	.L19-.L611
	.byte	3,3,1,5,1,9
	.half	.L21-.L19
	.byte	3,1,1,7,9
	.half	.L200-.L21
	.byte	0,1,1
.L560:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_ranges'
.L199:
	.word	-1,.L148,0,.L200-.L148,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_info'
.L201:
	.word	342
	.half	3
	.word	.L202
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L204,.L203
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Prv_RcIsRIDSupported',0,1,253,2,31
	.word	.L248
	.byte	1,1
	.word	.L150,.L281,.L149
	.byte	4
	.byte	'dataRId_u16',0,1,253,2,78
	.word	.L259,.L282
	.byte	4
	.byte	'idxLoop_qu16',0,1,254,2,49
	.word	.L250,.L283
	.byte	4
	.byte	'NRC_u8',0,1,255,2,71
	.word	.L257,.L284
	.byte	5
	.word	.L150,.L281
	.byte	6
	.byte	'RetVal',0,1,130,3,36
	.word	.L248,.L285
	.byte	6
	.byte	'flgRidSupported_b',0,1,132,3,29
	.word	.L248,.L286
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_abbrev'
.L202:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_line'
.L203:
	.word	.L613-.L612
.L612:
	.half	3
	.word	.L615-.L614
.L614:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L615:
	.byte	5,31,7,0,5,2
	.word	.L150
	.byte	3,252,2,1,5,47,9
	.half	.L338-.L150
	.byte	3,7,1,5,5,9
	.half	.L339-.L338
	.byte	3,2,1,5,27,9
	.half	.L616-.L339
	.byte	1,5,25,9
	.half	.L617-.L616
	.byte	1,5,12,9
	.half	.L618-.L617
	.byte	3,2,1,5,10,9
	.half	.L340-.L618
	.byte	3,7,1,5,48,7,9
	.half	.L619-.L340
	.byte	3,7,1,5,91,9
	.half	.L336-.L619
	.byte	1,5,48,9
	.half	.L335-.L336
	.byte	1,5,10,9
	.half	.L22-.L335
	.byte	3,5,1,5,33,7,9
	.half	.L620-.L22
	.byte	1,5,58,7,9
	.half	.L621-.L620
	.byte	1,5,66,9
	.half	.L622-.L621
	.byte	1,5,19,7,9
	.half	.L623-.L622
	.byte	3,3,1,5,17,9
	.half	.L624-.L623
	.byte	1,5,5,9
	.half	.L24-.L624
	.byte	3,3,1,5,1,9
	.half	.L26-.L24
	.byte	3,1,1,7,9
	.half	.L205-.L26
	.byte	0,1,1
.L613:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_ranges'
.L204:
	.word	-1,.L150,0,.L205-.L150,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_info'
.L206:
	.word	632
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L209,.L208
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Prv_RcProcessRoutine',0,1,173,3,38
	.word	.L248
	.byte	1,1
	.word	.L152,.L287,.L151
	.byte	4
	.byte	'pMsgContext',0,1,173,3,115
	.word	.L255,.L288
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,174,3,71
	.word	.L257,.L289
	.byte	4
	.byte	'dataRId_u16',0,1,175,3,31
	.word	.L259,.L290
	.byte	5
	.word	.L152,.L287
	.byte	6
	.byte	'adrSignal_pcst',0,1,177,3,73
	.word	.L291,.L292
	.byte	6
	.byte	'dataSessionBitMask_u32',0,1,178,3,28
	.word	.L293,.L294
	.byte	6
	.byte	'dataSecurityBitMask_u32',0,1,179,3,28
	.word	.L293,.L295
	.byte	6
	.byte	'dataSigVal_u32',0,1,181,3,29
	.word	.L293,.L296
	.byte	6
	.byte	'idxLoop_qu16',0,1,182,3,27
	.word	.L259,.L297
	.byte	6
	.byte	'nrCtrlOptRecSize_u16',0,1,184,3,27
	.word	.L259,.L298
	.byte	6
	.byte	'dataSubFunc_u8',0,1,185,3,26
	.word	.L248,.L299
	.byte	6
	.byte	'nrSig_u8',0,1,186,3,26
	.word	.L248,.L300
	.byte	6
	.byte	'flgReqSequenceError_b',0,1,187,3,29
	.word	.L248,.L301
	.byte	6
	.byte	'flgModeRetVal_b',0,1,188,3,29
	.word	.L248,.L302
	.byte	6
	.byte	'dataRetVal_u8',0,1,189,3,35
	.word	.L248,.L303
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_line'
.L208:
	.word	.L626-.L625
.L625:
	.half	3
	.word	.L628-.L627
.L627:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L628:
	.byte	5,38,7,0,5,2
	.word	.L152
	.byte	3,172,3,1,5,27,9
	.half	.L347-.L152
	.byte	3,19,1,5,21,9
	.half	.L349-.L347
	.byte	3,2,1,5,20,9
	.half	.L350-.L349
	.byte	3,1,1,5,18,9
	.half	.L351-.L350
	.byte	3,1,1,5,33,9
	.half	.L352-.L351
	.byte	3,1,1,5,42,9
	.half	.L629-.L352
	.byte	1,5,48,9
	.half	.L354-.L629
	.byte	3,2,1,5,61,9
	.half	.L630-.L354
	.byte	1,5,28,9
	.half	.L631-.L630
	.byte	1,5,30,9
	.half	.L355-.L631
	.byte	3,1,1,5,47,9
	.half	.L632-.L355
	.byte	1,5,72,9
	.half	.L633-.L632
	.byte	1,5,42,9
	.half	.L356-.L633
	.byte	3,3,1,5,45,9
	.half	.L344-.L356
	.byte	1,5,5,9
	.half	.L634-.L344
	.byte	1,5,35,7,9
	.half	.L635-.L634
	.byte	3,7,1,5,52,9
	.half	.L636-.L635
	.byte	1,5,77,9
	.half	.L637-.L636
	.byte	1,5,46,9
	.half	.L357-.L637
	.byte	3,3,1,5,49,9
	.half	.L638-.L357
	.byte	1,5,9,9
	.half	.L639-.L638
	.byte	1,5,19,7,9
	.half	.L640-.L639
	.byte	3,6,1,5,52,7,9
	.half	.L641-.L640
	.byte	1,5,69,9
	.half	.L642-.L641
	.byte	1,5,89,9
	.half	.L358-.L642
	.byte	1,5,23,7,9
	.half	.L29-.L358
	.byte	3,1,1,5,56,7,9
	.half	.L643-.L29
	.byte	1,5,73,9
	.half	.L644-.L643
	.byte	1,5,92,9
	.half	.L645-.L644
	.byte	1,5,23,7,9
	.half	.L31-.L645
	.byte	3,1,1,5,56,7,9
	.half	.L646-.L31
	.byte	1,5,73,9
	.half	.L647-.L646
	.byte	1,5,89,9
	.half	.L648-.L647
	.byte	1,5,17,7,9
	.half	.L30-.L648
	.byte	3,3,1,5,40,9
	.half	.L649-.L30
	.byte	1,5,17,9
	.half	.L650-.L649
	.byte	3,1,1,5,38,9
	.half	.L651-.L650
	.byte	1,5,17,9
	.half	.L652-.L651
	.byte	3,1,1,5,37,9
	.half	.L653-.L652
	.byte	1,5,35,9
	.half	.L654-.L653
	.byte	1,5,17,9
	.half	.L655-.L654
	.byte	3,1,1,5,39,9
	.half	.L656-.L655
	.byte	1,5,37,9
	.half	.L657-.L656
	.byte	1,5,17,9
	.half	.L658-.L657
	.byte	3,1,1,5,44,9
	.half	.L659-.L658
	.byte	1,5,42,9
	.half	.L660-.L659
	.byte	1,5,17,9
	.half	.L661-.L660
	.byte	3,1,1,5,39,9
	.half	.L662-.L661
	.byte	1,5,37,9
	.half	.L663-.L662
	.byte	1,5,26,9
	.half	.L664-.L663
	.byte	3,1,1,5,22,9
	.half	.L359-.L664
	.byte	3,9,1,5,70,7,9
	.half	.L665-.L359
	.byte	3,1,1,5,95,9
	.half	.L666-.L665
	.byte	1,5,27,9
	.half	.L667-.L666
	.byte	1,5,54,7,9
	.half	.L668-.L667
	.byte	3,1,1,5,35,9
	.half	.L669-.L668
	.byte	1,5,64,7,9
	.half	.L670-.L669
	.byte	3,1,1,5,109,7,9
	.half	.L671-.L670
	.byte	3,1,1,5,64,9
	.half	.L672-.L671
	.byte	1,5,80,7,9
	.half	.L36-.L672
	.byte	3,5,1,5,74,9
	.half	.L673-.L36
	.byte	3,1,1,5,122,9
	.half	.L674-.L673
	.byte	3,1,1,5,78,9
	.half	.L675-.L674
	.byte	1,5,46,9
	.half	.L676-.L675
	.byte	1,5,21,9
	.half	.L677-.L676
	.byte	3,1,1,5,52,9
	.half	.L678-.L677
	.byte	1,5,37,9
	.half	.L679-.L678
	.byte	1,5,21,9
	.half	.L680-.L679
	.byte	3,1,1,5,53,9
	.half	.L681-.L680
	.byte	1,5,82,9
	.half	.L682-.L681
	.byte	1,5,107,9
	.half	.L683-.L682
	.byte	1,5,53,9
	.half	.L684-.L683
	.byte	1,5,38,9
	.half	.L685-.L684
	.byte	1,5,107,9
	.half	.L686-.L685
	.byte	3,124,1,5,27,9
	.half	.L37-.L686
	.byte	3,9,1,5,70,7,9
	.half	.L687-.L37
	.byte	3,1,1,5,95,9
	.half	.L688-.L687
	.byte	1,5,27,9
	.half	.L689-.L688
	.byte	1,5,54,7,9
	.half	.L690-.L689
	.byte	3,1,1,5,35,9
	.half	.L691-.L690
	.byte	1,5,64,7,9
	.half	.L692-.L691
	.byte	3,1,1,5,109,7,9
	.half	.L693-.L692
	.byte	3,1,1,5,64,9
	.half	.L694-.L693
	.byte	1,5,69,7,9
	.half	.L42-.L694
	.byte	3,8,1,5,47,9
	.half	.L695-.L42
	.byte	1,5,68,9
	.half	.L696-.L695
	.byte	1,5,26,9
	.half	.L697-.L696
	.byte	1,5,111,7,9
	.half	.L698-.L697
	.byte	1,5,130,1,9
	.half	.L699-.L698
	.byte	1,5,31,7,9
	.half	.L46-.L699
	.byte	3,1,1,5,117,7,9
	.half	.L700-.L46
	.byte	1,5,186,1,7,9
	.half	.L48-.L700
	.byte	1,5,218,1,9
	.half	.L701-.L48
	.byte	1,5,30,7,9
	.half	.L49-.L701
	.byte	3,1,1,5,115,7,9
	.half	.L702-.L49
	.byte	1,5,84,7,9
	.half	.L47-.L702
	.byte	3,2,1,5,78,9
	.half	.L703-.L47
	.byte	3,1,1,5,126,9
	.half	.L704-.L703
	.byte	3,1,1,5,82,9
	.half	.L705-.L704
	.byte	1,5,50,9
	.half	.L706-.L705
	.byte	1,5,25,9
	.half	.L707-.L706
	.byte	3,1,1,5,56,9
	.half	.L708-.L707
	.byte	1,5,41,9
	.half	.L709-.L708
	.byte	1,5,25,9
	.half	.L710-.L709
	.byte	3,1,1,5,57,9
	.half	.L711-.L710
	.byte	1,5,86,9
	.half	.L712-.L711
	.byte	1,5,111,9
	.half	.L713-.L712
	.byte	1,5,57,9
	.half	.L714-.L713
	.byte	1,5,42,9
	.half	.L715-.L714
	.byte	1,5,110,9
	.half	.L716-.L715
	.byte	3,124,1,5,47,9
	.half	.L51-.L716
	.byte	3,10,1,5,21,9
	.half	.L53-.L51
	.byte	3,124,1,5,27,9
	.half	.L43-.L53
	.byte	3,10,1,5,69,7,9
	.half	.L717-.L43
	.byte	3,1,1,5,94,9
	.half	.L718-.L717
	.byte	1,5,26,9
	.half	.L719-.L718
	.byte	1,5,54,7,9
	.half	.L720-.L719
	.byte	3,1,1,5,35,9
	.half	.L721-.L720
	.byte	1,5,64,7,9
	.half	.L722-.L721
	.byte	3,1,1,5,109,7,9
	.half	.L723-.L722
	.byte	3,1,1,5,64,9
	.half	.L724-.L723
	.byte	1,5,69,7,9
	.half	.L56-.L724
	.byte	3,7,1,5,47,9
	.half	.L725-.L56
	.byte	1,5,68,9
	.half	.L726-.L725
	.byte	1,5,26,9
	.half	.L727-.L726
	.byte	1,5,112,7,9
	.half	.L728-.L727
	.byte	1,5,131,1,9
	.half	.L729-.L728
	.byte	1,5,30,7,9
	.half	.L60-.L729
	.byte	3,1,1,5,117,7,9
	.half	.L730-.L60
	.byte	1,5,149,1,9
	.half	.L731-.L730
	.byte	1,5,48,7,9
	.half	.L62-.L731
	.byte	3,1,1,5,84,7,9
	.half	.L61-.L62
	.byte	3,2,1,5,78,9
	.half	.L732-.L61
	.byte	3,1,1,5,126,9
	.half	.L733-.L732
	.byte	3,1,1,5,82,9
	.half	.L734-.L733
	.byte	1,5,50,9
	.half	.L735-.L734
	.byte	1,5,25,9
	.half	.L736-.L735
	.byte	3,1,1,5,56,9
	.half	.L737-.L736
	.byte	1,5,41,9
	.half	.L738-.L737
	.byte	1,5,25,9
	.half	.L739-.L738
	.byte	3,1,1,5,57,9
	.half	.L740-.L739
	.byte	1,5,86,9
	.half	.L741-.L740
	.byte	1,5,111,9
	.half	.L742-.L741
	.byte	1,5,57,9
	.half	.L743-.L742
	.byte	1,5,42,9
	.half	.L744-.L743
	.byte	1,5,112,9
	.half	.L745-.L744
	.byte	3,124,1,5,47,9
	.half	.L64-.L745
	.byte	3,10,1,5,21,9
	.half	.L65-.L64
	.byte	3,124,1,5,43,9
	.half	.L57-.L65
	.byte	3,11,1,5,41,9
	.half	.L746-.L57
	.byte	1,5,43,9
	.half	.L747-.L746
	.byte	3,2,1,5,41,9
	.half	.L748-.L747
	.byte	1,5,20,9
	.half	.L40-.L748
	.byte	3,3,1,5,17,9
	.half	.L749-.L40
	.byte	1,5,21,7,9
	.half	.L750-.L749
	.byte	3,3,1,5,123,7,9
	.half	.L751-.L750
	.byte	3,2,1,5,132,1,9
	.half	.L752-.L751
	.byte	1,5,136,1,9
	.half	.L753-.L752
	.byte	1,5,39,9
	.half	.L353-.L753
	.byte	1,5,25,9
	.half	.L361-.L353
	.byte	3,1,1,5,51,7,9
	.half	.L754-.L361
	.byte	3,2,1,5,49,9
	.half	.L755-.L754
	.byte	1,5,51,9
	.half	.L756-.L755
	.byte	3,1,1,5,49,9
	.half	.L757-.L756
	.byte	1,5,24,9
	.half	.L68-.L757
	.byte	3,3,1,5,21,9
	.half	.L758-.L68
	.byte	1,5,28,7,9
	.half	.L759-.L758
	.byte	3,3,1,5,45,9
	.half	.L760-.L759
	.byte	1,5,70,9
	.half	.L761-.L760
	.byte	1,5,25,9
	.half	.L762-.L761
	.byte	1,5,147,1,7,9
	.half	.L763-.L762
	.byte	3,3,1,5,43,9
	.half	.L362-.L763
	.byte	1,5,162,1,9
	.half	.L364-.L362
	.byte	1,5,107,9
	.half	.L71-.L364
	.byte	3,5,1,5,43,9
	.half	.L365-.L71
	.byte	1,5,25,9
	.half	.L72-.L365
	.byte	3,3,1,5,32,7,9
	.half	.L764-.L72
	.byte	3,2,1,5,29,9
	.half	.L765-.L764
	.byte	1,5,55,7,9
	.half	.L766-.L765
	.byte	3,2,1,5,53,9
	.half	.L767-.L766
	.byte	1,5,45,9
	.half	.L74-.L767
	.byte	3,2,1,5,52,9
	.half	.L768-.L74
	.byte	1,5,49,9
	.half	.L73-.L768
	.byte	3,4,1,5,48,9
	.half	.L769-.L73
	.byte	1,5,25,9
	.half	.L75-.L769
	.byte	3,25,1,5,51,7,9
	.half	.L770-.L75
	.byte	3,2,1,5,49,9
	.half	.L771-.L770
	.byte	1,5,62,9
	.half	.L772-.L771
	.byte	1,5,29,9
	.half	.L76-.L772
	.byte	3,6,1,5,55,7,9
	.half	.L773-.L76
	.byte	3,2,1,5,53,9
	.half	.L774-.L773
	.byte	1,5,55,9
	.half	.L775-.L774
	.byte	3,1,1,5,53,9
	.half	.L776-.L775
	.byte	1,5,81,9
	.half	.L777-.L776
	.byte	3,127,1,5,52,9
	.half	.L78-.L777
	.byte	3,7,1,5,207,1,9
	.half	.L348-.L78
	.byte	1,5,90,9
	.half	.L81-.L348
	.byte	3,11,1,5,119,9
	.half	.L778-.L81
	.byte	1,5,149,1,9
	.half	.L779-.L778
	.byte	1,5,158,1,9
	.half	.L780-.L779
	.byte	1,5,177,1,9
	.half	.L781-.L780
	.byte	1,5,71,9
	.half	.L368-.L781
	.byte	3,1,1,5,99,9
	.half	.L782-.L368
	.byte	1,5,115,9
	.half	.L783-.L782
	.byte	1,5,51,9
	.half	.L369-.L783
	.byte	3,2,1,5,221,1,9
	.half	.L784-.L369
	.byte	3,114,1,5,60,9
	.half	.L80-.L784
	.byte	1,5,92,7,9
	.half	.L785-.L80
	.byte	1,5,111,9
	.half	.L786-.L785
	.byte	1,5,136,1,7,9
	.half	.L787-.L786
	.byte	1,5,166,1,7,9
	.half	.L788-.L787
	.byte	1,5,180,1,9
	.half	.L789-.L788
	.byte	1,5,17,7,9
	.half	.L67-.L789
	.byte	3,178,127,1,5,39,9
	.half	.L33-.L67
	.byte	3,243,0,1,5,37,9
	.half	.L790-.L33
	.byte	1,5,13,9
	.half	.L85-.L790
	.byte	3,125,1,5,35,9
	.half	.L28-.L85
	.byte	3,9,1,5,33,9
	.half	.L371-.L28
	.byte	1,5,9,9
	.half	.L86-.L371
	.byte	3,125,1,5,29,9
	.half	.L27-.L86
	.byte	3,9,1,5,28,9
	.half	.L372-.L27
	.byte	1,5,5,9
	.half	.L87-.L372
	.byte	3,2,1,5,1,9
	.half	.L88-.L87
	.byte	3,1,1,7,9
	.half	.L210-.L88
	.byte	0,1,1
.L626:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_ranges'
.L209:
	.word	-1,.L152,0,.L210-.L152,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_info'
.L211:
	.word	408
	.half	3
	.word	.L212
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L214,.L213
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_Prv_RcPendingRoutine',0,1,210,5,38
	.word	.L248
	.byte	1,1
	.word	.L154,.L304,.L153
	.byte	4
	.byte	'pMsgContext',0,1,210,5,115
	.word	.L255,.L305
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,211,5,71
	.word	.L257,.L306
	.byte	5
	.word	.L154,.L304
	.byte	6
	.byte	'adrSignal_pcst',0,1,213,5,73
	.word	.L291,.L307
	.byte	6
	.byte	'dataSigVal_u32',0,1,215,5,69
	.word	.L293,.L308
	.byte	6
	.byte	'idxLoop_qu16',0,1,217,5,27
	.word	.L259,.L309
	.byte	6
	.byte	'nrSig_u8',0,1,218,5,26
	.word	.L248,.L310
	.byte	6
	.byte	'dataRetVal_u8',0,1,219,5,35
	.word	.L248,.L311
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_abbrev'
.L212:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_line'
.L213:
	.word	.L792-.L791
.L791:
	.half	3
	.word	.L794-.L793
.L793:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L794:
	.byte	5,38,7,0,5,2
	.word	.L154
	.byte	3,209,5,1,5,5,9
	.half	.L378-.L154
	.byte	3,16,1,5,33,9
	.half	.L795-.L378
	.byte	1,5,31,9
	.half	.L796-.L795
	.byte	1,5,68,9
	.half	.L797-.L796
	.byte	3,1,1,5,23,9
	.half	.L798-.L797
	.byte	1,5,45,9
	.half	.L799-.L798
	.byte	1,5,68,9
	.half	.L800-.L799
	.byte	1,5,19,9
	.half	.L375-.L800
	.byte	1,5,33,9
	.half	.L381-.L375
	.byte	3,3,1,5,31,9
	.half	.L801-.L381
	.byte	1,5,44,9
	.half	.L802-.L801
	.byte	3,2,1,5,8,9
	.half	.L382-.L802
	.byte	1,5,73,7,9
	.half	.L803-.L382
	.byte	1,5,95,9
	.half	.L804-.L803
	.byte	1,5,23,9
	.half	.L805-.L804
	.byte	3,2,1,5,5,9
	.half	.L89-.L805
	.byte	3,2,1,5,30,7,9
	.half	.L806-.L89
	.byte	3,5,1,5,52,9
	.half	.L807-.L806
	.byte	1,5,14,9
	.half	.L808-.L807
	.byte	3,125,1,5,9,9
	.half	.L809-.L808
	.byte	1,5,77,7,9
	.half	.L810-.L809
	.byte	3,3,1,5,71,9
	.half	.L379-.L810
	.byte	3,1,1,5,99,9
	.half	.L383-.L379
	.byte	3,1,1,5,42,9
	.half	.L811-.L383
	.byte	1,5,37,9
	.half	.L812-.L811
	.byte	1,5,35,9
	.half	.L813-.L812
	.byte	3,3,1,5,13,9
	.half	.L814-.L813
	.byte	1,5,34,9
	.half	.L815-.L814
	.byte	1,5,58,9
	.half	.L816-.L815
	.byte	1,5,56,9
	.half	.L817-.L816
	.byte	1,5,105,9
	.half	.L818-.L817
	.byte	3,123,1,5,14,9
	.half	.L92-.L818
	.byte	3,9,1,5,77,7,9
	.half	.L819-.L92
	.byte	3,2,1,5,71,9
	.half	.L384-.L819
	.byte	3,1,1,5,99,9
	.half	.L385-.L384
	.byte	3,1,1,5,42,9
	.half	.L820-.L385
	.byte	1,5,37,9
	.half	.L821-.L820
	.byte	1,5,35,9
	.half	.L822-.L821
	.byte	3,2,1,5,13,9
	.half	.L823-.L822
	.byte	1,5,34,9
	.half	.L824-.L823
	.byte	1,5,58,9
	.half	.L825-.L824
	.byte	1,5,56,9
	.half	.L826-.L825
	.byte	1,5,104,9
	.half	.L827-.L826
	.byte	3,124,1,5,77,9
	.half	.L94-.L827
	.byte	3,10,1,5,71,9
	.half	.L386-.L94
	.byte	3,1,1,5,99,9
	.half	.L387-.L386
	.byte	3,1,1,5,42,9
	.half	.L828-.L387
	.byte	1,5,37,9
	.half	.L829-.L828
	.byte	1,5,28,9
	.half	.L93-.L829
	.byte	3,3,1,5,124,9
	.half	.L388-.L93
	.byte	1,5,70,9
	.half	.L97-.L388
	.byte	3,11,1,5,99,9
	.half	.L830-.L97
	.byte	1,5,47,9
	.half	.L390-.L830
	.byte	3,1,1,5,76,9
	.half	.L831-.L390
	.byte	1,5,106,9
	.half	.L832-.L831
	.byte	1,5,115,9
	.half	.L833-.L832
	.byte	1,5,151,1,9
	.half	.L834-.L833
	.byte	1,5,27,9
	.half	.L391-.L834
	.byte	3,3,1,5,138,1,9
	.half	.L835-.L391
	.byte	3,113,1,5,36,9
	.half	.L96-.L835
	.byte	1,5,83,7,9
	.half	.L836-.L96
	.byte	1,5,97,9
	.half	.L837-.L836
	.byte	1,5,9,7,9
	.half	.L98-.L837
	.byte	3,18,1,5,50,7,9
	.half	.L838-.L98
	.byte	3,3,1,5,65,9
	.half	.L839-.L838
	.byte	1,5,63,9
	.half	.L840-.L839
	.byte	1,5,37,9
	.half	.L841-.L840
	.byte	1,5,20,9
	.half	.L99-.L841
	.byte	3,4,1,5,35,9
	.half	.L842-.L99
	.byte	1,5,33,9
	.half	.L843-.L842
	.byte	1,5,46,9
	.half	.L844-.L843
	.byte	3,2,1,5,20,9
	.half	.L845-.L844
	.byte	1,5,68,9
	.half	.L846-.L845
	.byte	1,5,82,9
	.half	.L847-.L846
	.byte	1,5,33,9
	.half	.L848-.L847
	.byte	1,5,20,9
	.half	.L849-.L848
	.byte	3,1,1,5,68,9
	.half	.L850-.L849
	.byte	1,5,33,9
	.half	.L851-.L850
	.byte	1,5,9,9
	.half	.L852-.L851
	.byte	3,2,1,5,31,9
	.half	.L853-.L852
	.byte	1,5,29,9
	.half	.L854-.L853
	.byte	1,5,55,9
	.half	.L855-.L854
	.byte	3,123,1,5,10,9
	.half	.L91-.L855
	.byte	3,7,1,5,14,7,9
	.half	.L856-.L91
	.byte	3,3,1,5,9,9
	.half	.L857-.L856
	.byte	1,5,33,7,9
	.half	.L858-.L857
	.byte	3,2,1,5,54,9
	.half	.L859-.L858
	.byte	1,5,35,9
	.half	.L102-.L859
	.byte	3,5,1,5,33,9
	.half	.L860-.L102
	.byte	1,5,9,9
	.half	.L103-.L860
	.byte	3,125,1,5,31,9
	.half	.L101-.L103
	.byte	3,6,1,5,10,9
	.half	.L861-.L101
	.byte	1,5,9,7,9
	.half	.L862-.L861
	.byte	3,3,1,5,29,9
	.half	.L863-.L862
	.byte	1,5,27,9
	.half	.L864-.L863
	.byte	1,5,40,9
	.half	.L865-.L864
	.byte	1,5,31,9
	.half	.L105-.L865
	.byte	3,4,1,5,10,9
	.half	.L866-.L105
	.byte	1,5,9,7,9
	.half	.L867-.L866
	.byte	3,3,1,5,27,9
	.half	.L868-.L867
	.byte	1,5,26,9
	.half	.L869-.L868
	.byte	1,5,45,9
	.half	.L870-.L869
	.byte	1,5,32,9
	.half	.L107-.L870
	.byte	3,2,1,5,14,9
	.half	.L871-.L107
	.byte	1,5,62,7,9
	.half	.L872-.L871
	.byte	1,5,84,9
	.half	.L873-.L872
	.byte	1,5,94,9
	.half	.L874-.L873
	.byte	1,5,31,7,9
	.half	.L875-.L874
	.byte	3,2,1,5,29,9
	.half	.L876-.L875
	.byte	1,5,50,9
	.half	.L877-.L876
	.byte	1,5,14,9
	.half	.L109-.L877
	.byte	3,4,1,5,9,9
	.half	.L878-.L109
	.byte	1,5,35,7,9
	.half	.L879-.L878
	.byte	3,3,1,5,33,9
	.half	.L880-.L879
	.byte	1,5,61,9
	.half	.L881-.L880
	.byte	1,5,33,9
	.half	.L112-.L881
	.byte	3,5,1,5,5,9
	.half	.L100-.L112
	.byte	3,3,1,5,1,9
	.half	.L114-.L100
	.byte	3,1,1,7,9
	.half	.L215-.L114
	.byte	0,1,1
.L792:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_ranges'
.L214:
	.word	-1,.L154,0,.L215-.L154,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_info'
.L216:
	.word	268
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L219,.L218
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_DcmcallStopRoutine',0,1,150,11,28,1,1
	.word	.L158,.L312,.L157
	.byte	4
	.byte	'idxLoop_qu16',0,1,150,11,73
	.word	.L259,.L313
	.byte	5
	.word	.L158,.L312
	.byte	6
	.byte	'dataRetType_u8',0,1,152,11,36
	.word	.L248,.L314
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_line'
.L218:
	.word	.L883-.L882
.L882:
	.half	3
	.word	.L885-.L884
.L884:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L885:
	.byte	5,28,7,0,5,2
	.word	.L158
	.byte	3,149,11,1,5,5,9
	.half	.L413-.L158
	.byte	3,6,1,5,33,9
	.half	.L886-.L413
	.byte	1,5,31,9
	.half	.L887-.L886
	.byte	1,5,22,9
	.half	.L888-.L887
	.byte	3,1,1,5,39,9
	.half	.L889-.L888
	.byte	1,5,62,9
	.half	.L890-.L889
	.byte	1,5,33,9
	.half	.L415-.L890
	.byte	3,3,1,5,31,9
	.half	.L891-.L415
	.byte	1,5,9,9
	.half	.L892-.L891
	.byte	3,7,1,5,30,9
	.half	.L893-.L892
	.byte	1,5,26,9
	.half	.L894-.L893
	.byte	3,125,1,5,5,9
	.half	.L414-.L894
	.byte	1,5,48,7,9
	.half	.L895-.L414
	.byte	3,3,1,5,46,9
	.half	.L896-.L895
	.byte	1,5,72,9
	.half	.L897-.L896
	.byte	1,5,48,9
	.half	.L126-.L897
	.byte	3,5,1,5,46,9
	.half	.L898-.L126
	.byte	1,5,1,9
	.half	.L127-.L898
	.byte	3,2,1,7,9
	.half	.L220-.L127
	.byte	0,1,1
.L883:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_ranges'
.L219:
	.word	-1,.L158,0,.L220-.L158,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_info'
.L221:
	.word	229
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L167
	.byte	3
	.byte	'Dcm_SetFlagforRC',0,1,196,12,28,1,1
	.word	.L162,.L315,.L161
	.byte	4
	.byte	'isFlag_b',0,1,196,12,69
	.word	.L248,.L316
	.byte	5
	.word	.L162,.L315
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_line'
.L223:
	.word	.L900-.L899
.L899:
	.half	3
	.word	.L902-.L901
.L901:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0,0,0,0,0
.L902:
	.byte	5,5,7,0,5,2
	.word	.L162
	.byte	3,198,12,1,5,31,9
	.half	.L903-.L162
	.byte	1,5,1,9
	.half	.L904-.L903
	.byte	3,1,1,7,9
	.half	.L225-.L904
	.byte	0,1,1
.L900:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L162,0,.L225-.L162,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RCNegResCode_u8')
	.sect	'.debug_info'
.L226:
	.word	188
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_RCNegResCode_u8',0,9,52,77
	.word	.L248
	.byte	1,5,3
	.word	Dcm_RCNegResCode_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RCNegResCode_u8')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RCCurrDataLength_u16')
	.sect	'.debug_info'
.L228:
	.word	193
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_RCCurrDataLength_u16',0,9,47,77
	.word	.L259
	.byte	1,5,3
	.word	Dcm_RCCurrDataLength_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RCCurrDataLength_u16')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RCOpStatus_u8')
	.sect	'.debug_info'
.L230:
	.word	186
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_RCOpStatus_u8',0,9,57,77
	.word	.L248
	.byte	1,5,3
	.word	Dcm_RCOpStatus_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RCOpStatus_u8')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RCInPtr_pu8')
	.sect	'.debug_info'
.L232:
	.word	184
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_RCInPtr_pu8',0,9,10,77
	.word	.L317
	.byte	1,5,3
	.word	Dcm_RCInPtr_pu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RCInPtr_pu8')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_RCOutPtr_pu8')
	.sect	'.debug_info'
.L234:
	.word	185
	.half	3
	.word	.L235
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_RCOutPtr_pu8',0,9,11,77
	.word	.L317
	.byte	1,5,3
	.word	Dcm_RCOutPtr_pu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_RCOutPtr_pu8')
	.sect	'.debug_abbrev'
.L235:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_adrRoutinePtr_pcst')
	.sect	'.debug_info'
.L236:
	.word	190
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_adrRoutinePtr_pcst',0,9,17,77
	.word	.L318
	.byte	5,3
	.word	Dcm_adrRoutinePtr_pcst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_adrRoutinePtr_pcst')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_adrRoutine_pcst')
	.sect	'.debug_info'
.L238:
	.word	185
	.half	3
	.word	.L239
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	's_adrRoutine_pcst',0,9,18,77
	.word	.L318
	.byte	5,3
	.word	s_adrRoutine_pcst
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_adrRoutine_pcst')
	.sect	'.debug_abbrev'
.L239:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_stDspRCState_en')
	.sect	'.debug_info'
.L240:
	.word	187
	.half	3
	.word	.L241
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_stDspRCState_en',0,9,28,77
	.word	.L319
	.byte	5,3
	.word	Dcm_stDspRCState_en
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_stDspRCState_en')
	.sect	'.debug_abbrev'
.L241:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_dataStatusIdx_u16')
	.sect	'.debug_info'
.L242:
	.word	187
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	's_dataStatusIdx_u16',0,9,37,77
	.word	.L259
	.byte	5,3
	.word	s_dataStatusIdx_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_dataStatusIdx_u16')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_dataRCSubFunc_u8')
	.sect	'.debug_info'
.L244:
	.word	188
	.half	3
	.word	.L245
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	'Dcm_dataRCSubFunc_u8',0,9,42,77
	.word	.L248
	.byte	5,3
	.word	Dcm_dataRCSubFunc_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_dataRCSubFunc_u8')
	.sect	'.debug_abbrev'
.L245:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_IsRCSubfunctionCalled_b')
	.sect	'.debug_info'
.L246:
	.word	193
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L167
	.byte	3
	.byte	's_IsRCSubfunctionCalled_b',0,9,62,77
	.word	.L248
	.byte	5,3
	.word	s_IsRCSubfunctionCalled_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_IsRCSubfunctionCalled_b')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_loc'
.L155:
	.word	-1,.L156,0,.L394-.L156
	.half	2
	.byte	138,0
	.word	.L394-.L156,.L253-.L156
	.half	2
	.byte	138,8
	.word	.L253-.L156,.L253-.L156
	.half	2
	.byte	138,0
	.word	0,0
.L254:
	.word	-1,.L156,0,.L395-.L156
	.half	1
	.byte	84
	.word	.L115-.L156,.L400-.L156
	.half	1
	.byte	84
	.word	.L118-.L156,.L117-.L156
	.half	1
	.byte	84
	.word	0,0
.L258:
	.word	-1,.L156,0,.L395-.L156
	.half	1
	.byte	101
	.word	.L397-.L156,.L253-.L156
	.half	1
	.byte	109
	.word	.L115-.L156,.L401-.L156
	.half	1
	.byte	101
	.word	.L405-.L156,.L399-.L156
	.half	1
	.byte	101
	.word	.L118-.L156,.L117-.L156
	.half	1
	.byte	101
	.word	.L410-.L156,.L408-.L156
	.half	1
	.byte	101
	.word	0,0
.L260:
	.word	-1,.L156,.L403-.L156,.L118-.L156
	.half	1
	.byte	88
	.word	.L400-.L156,.L401-.L156
	.half	1
	.byte	84
	.word	.L406-.L156,.L399-.L156
	.half	1
	.byte	84
	.word	0,0
.L262:
	.word	-1,.L156,.L398-.L156,.L399-.L156
	.half	1
	.byte	89
	.word	.L399-.L156,.L121-.L156
	.half	1
	.byte	82
	.word	.L407-.L156,.L408-.L156
	.half	1
	.byte	89
	.word	.L408-.L156,.L123-.L156
	.half	1
	.byte	82
	.word	.L123-.L156,.L253-.L156
	.half	1
	.byte	89
	.word	.L411-.L156,.L253-.L156
	.half	1
	.byte	82
	.word	0,0
.L263:
	.word	-1,.L156,.L401-.L156,.L399-.L156
	.half	1
	.byte	82
	.word	0,0
.L261:
	.word	-1,.L156,0,.L253-.L156
	.half	2
	.byte	145,120
	.word	0,0
.L256:
	.word	-1,.L156,0,.L395-.L156
	.half	1
	.byte	100
	.word	.L396-.L156,.L253-.L156
	.half	1
	.byte	108
	.word	.L115-.L156,.L402-.L156
	.half	1
	.byte	100
	.word	.L404-.L156,.L399-.L156
	.half	1
	.byte	100
	.word	.L118-.L156,.L117-.L156
	.half	1
	.byte	100
	.word	.L409-.L156,.L408-.L156
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L158,0,.L312-.L158
	.half	2
	.byte	138,0
	.word	0,0
.L314:
	.word	-1,.L158,.L415-.L158,.L312-.L158
	.half	1
	.byte	82
	.word	0,0
.L313:
	.word	-1,.L158,0,.L412-.L158
	.half	1
	.byte	84
	.word	.L413-.L158,.L414-.L158
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_loc'
.L145:
	.word	-1,.L146,0,.L264-.L146
	.half	2
	.byte	138,0
	.word	0,0
.L265:
	.word	-1,.L146,.L320-.L146,.L264-.L146
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_loc'
.L165:
	.word	-1,.L166,0,.L249-.L166
	.half	2
	.byte	138,0
	.word	0,0
.L252:
	.word	-1,.L166,.L428-.L166,.L139-.L166
	.half	1
	.byte	82
	.word	.L143-.L166,.L249-.L166
	.half	1
	.byte	82
	.word	0,0
.L251:
	.word	-1,.L166,0,.L249-.L166
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_loc'
.L163:
	.word	-1,.L164,0,.L269-.L164
	.half	2
	.byte	138,0
	.word	0,0
.L270:
	.word	-1,.L164,0,.L421-.L164
	.half	1
	.byte	84
	.word	.L422-.L164,.L423-.L164
	.half	1
	.byte	88
	.word	.L137-.L164,.L424-.L164
	.half	1
	.byte	88
	.word	.L426-.L164,.L427-.L164
	.half	1
	.byte	88
	.word	0,0
.L271:
	.word	-1,.L164,0,.L137-.L164
	.half	1
	.byte	85
	.word	.L137-.L164,.L424-.L164
	.half	1
	.byte	89
	.word	0,0
.L272:
	.word	-1,.L164,0,.L137-.L164
	.half	1
	.byte	86
	.word	.L424-.L164,.L425-.L164
	.half	1
	.byte	90
	.word	0,0
.L273:
	.word	-1,.L164,0,.L137-.L164
	.half	1
	.byte	87
	.word	.L424-.L164,.L425-.L164
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_loc'
.L147:
	.word	-1,.L148,0,.L321-.L148
	.half	2
	.byte	138,0
	.word	.L321-.L148,.L274-.L148
	.half	2
	.byte	138,8
	.word	.L274-.L148,.L274-.L148
	.half	2
	.byte	138,0
	.word	0,0
.L279:
	.word	-1,.L148,0,.L322-.L148
	.half	1
	.byte	102
	.word	.L327-.L148,.L274-.L148
	.half	1
	.byte	109
	.word	.L12-.L148,.L18-.L148
	.half	1
	.byte	102
	.word	0,0
.L280:
	.word	-1,.L148,.L328-.L148,.L274-.L148
	.half	1
	.byte	88
	.word	.L332-.L148,.L274-.L148
	.half	1
	.byte	82
	.word	0,0
.L277:
	.word	-1,.L148,0,.L323-.L148
	.half	1
	.byte	84
	.word	.L12-.L148,.L18-.L148
	.half	1
	.byte	84
	.word	0,0
.L276:
	.word	-1,.L148,0,.L324-.L148
	.half	1
	.byte	100
	.word	.L325-.L148,.L274-.L148
	.half	2
	.byte	145,120
	.word	.L324-.L148,.L329-.L148
	.half	1
	.byte	98
	.word	.L330-.L148,.L331-.L148
	.half	1
	.byte	111
	.word	.L12-.L148,.L18-.L148
	.half	1
	.byte	100
	.word	0,0
.L278:
	.word	-1,.L148,0,.L322-.L148
	.half	1
	.byte	101
	.word	.L326-.L148,.L274-.L148
	.half	1
	.byte	108
	.word	.L12-.L148,.L18-.L148
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_loc'
.L149:
	.word	-1,.L150,0,.L333-.L150
	.half	2
	.byte	138,0
	.word	.L333-.L150,.L281-.L150
	.half	2
	.byte	138,8
	.word	.L281-.L150,.L281-.L150
	.half	2
	.byte	138,0
	.word	0,0
.L284:
	.word	-1,.L150,0,.L334-.L150
	.half	1
	.byte	101
	.word	.L338-.L150,.L281-.L150
	.half	1
	.byte	108
	.word	.L342-.L150,.L335-.L150
	.half	1
	.byte	102
	.word	0,0
.L285:
	.word	-1,.L150,.L340-.L150,.L341-.L150
	.half	1
	.byte	82
	.word	0,0
.L282:
	.word	-1,.L150,0,.L335-.L150
	.half	1
	.byte	84
	.word	0,0
.L286:
	.word	-1,.L150,.L339-.L150,.L281-.L150
	.half	1
	.byte	95
	.word	.L341-.L150,.L281-.L150
	.half	1
	.byte	82
	.word	0,0
.L283:
	.word	-1,.L150,0,.L336-.L150
	.half	1
	.byte	100
	.word	.L337-.L150,.L281-.L150
	.half	1
	.byte	111
	.word	.L334-.L150,.L335-.L150
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_loc'
.L153:
	.word	-1,.L154,0,.L374-.L154
	.half	2
	.byte	138,0
	.word	.L374-.L154,.L304-.L154
	.half	2
	.byte	138,8
	.word	.L304-.L154,.L304-.L154
	.half	2
	.byte	138,0
	.word	0,0
.L307:
	.word	-1,.L154,.L379-.L154,.L92-.L154
	.half	1
	.byte	108
	.word	.L384-.L154,.L94-.L154
	.half	1
	.byte	108
	.word	.L386-.L154,.L91-.L154
	.half	1
	.byte	108
	.word	0,0
.L306:
	.word	-1,.L154,0,.L375-.L154
	.half	1
	.byte	101
	.word	.L378-.L154,.L379-.L154
	.half	1
	.byte	108
	.word	.L92-.L154,.L384-.L154
	.half	1
	.byte	108
	.word	.L94-.L154,.L386-.L154
	.half	1
	.byte	108
	.word	.L91-.L154,.L100-.L154
	.half	1
	.byte	108
	.word	0,0
.L311:
	.word	-1,.L154,.L375-.L154,.L380-.L154
	.half	1
	.byte	82
	.word	.L381-.L154,.L304-.L154
	.half	1
	.byte	88
	.word	.L380-.L154,.L382-.L154
	.half	1
	.byte	84
	.word	.L393-.L154,.L304-.L154
	.half	1
	.byte	82
	.word	0,0
.L308:
	.word	-1,.L154,.L390-.L154,.L391-.L154
	.half	1
	.byte	82
	.word	.L392-.L154,.L391-.L154
	.half	1
	.byte	86
	.word	0,0
.L309:
	.word	-1,.L154,.L388-.L154,.L389-.L154
	.half	1
	.byte	90
	.word	.L96-.L154,.L91-.L154
	.half	1
	.byte	90
	.word	0,0
.L310:
	.word	-1,.L154,.L383-.L154,.L92-.L154
	.half	1
	.byte	89
	.word	.L385-.L154,.L94-.L154
	.half	1
	.byte	89
	.word	.L387-.L154,.L91-.L154
	.half	1
	.byte	89
	.word	0,0
.L305:
	.word	-1,.L154,0,.L376-.L154
	.half	1
	.byte	100
	.word	.L377-.L154,.L304-.L154
	.half	1
	.byte	110
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_loc'
.L151:
	.word	-1,.L152,0,.L343-.L152
	.half	2
	.byte	138,0
	.word	.L343-.L152,.L287-.L152
	.half	2
	.byte	138,8
	.word	.L287-.L152,.L287-.L152
	.half	2
	.byte	138,0
	.word	0,0
.L292:
	.word	-1,.L152,.L351-.L152,.L287-.L152
	.half	1
	.byte	110
	.word	0,0
.L289:
	.word	-1,.L152,0,.L344-.L152
	.half	1
	.byte	101
	.word	.L346-.L152,.L287-.L152
	.half	1
	.byte	109
	.word	.L363-.L152,.L362-.L152
	.half	1
	.byte	100
	.word	.L366-.L152,.L365-.L152
	.half	1
	.byte	100
	.word	0,0
.L290:
	.word	-1,.L152,0,.L344-.L152
	.half	1
	.byte	84
	.word	.L347-.L152,.L348-.L152
	.half	1
	.byte	88
	.word	.L33-.L152,.L85-.L152
	.half	1
	.byte	88
	.word	.L28-.L152,.L86-.L152
	.half	1
	.byte	88
	.word	.L27-.L152,.L87-.L152
	.half	1
	.byte	88
	.word	0,0
.L303:
	.word	-1,.L152,.L352-.L152,.L353-.L152
	.half	1
	.byte	91
	.word	.L353-.L152,.L68-.L152
	.half	1
	.byte	82
	.word	.L361-.L152,.L362-.L152
	.half	1
	.byte	91
	.word	.L362-.L152,.L71-.L152
	.half	1
	.byte	82
	.word	.L364-.L152,.L365-.L152
	.half	1
	.byte	91
	.word	.L365-.L152,.L72-.L152
	.half	1
	.byte	82
	.word	.L72-.L152,.L287-.L152
	.half	1
	.byte	91
	.word	.L373-.L152,.L287-.L152
	.half	1
	.byte	82
	.word	0,0
.L295:
	.word	-1,.L152,.L357-.L152,.L358-.L152
	.half	1
	.byte	95
	.word	.L28-.L152,.L371-.L152
	.half	1
	.byte	95
	.word	0,0
.L294:
	.word	-1,.L152,.L356-.L152,.L357-.L152
	.half	1
	.byte	95
	.word	.L27-.L152,.L372-.L152
	.half	1
	.byte	95
	.word	0,0
.L296:
	.word	-1,.L152,.L368-.L152,.L369-.L152
	.half	1
	.byte	82
	.word	.L370-.L152,.L369-.L152
	.half	1
	.byte	86
	.word	0,0
.L299:
	.word	-1,.L152,.L354-.L152,.L287-.L152
	.half	1
	.byte	92
	.word	0,0
.L302:
	.word	-1,.L152,.L350-.L152,.L287-.L152
	.half	1
	.byte	90
	.word	0,0
.L301:
	.word	-1,.L152,.L349-.L152,.L287-.L152
	.half	1
	.byte	89
	.word	0,0
.L297:
	.word	-1,.L152,.L348-.L152,.L367-.L152
	.half	1
	.byte	88
	.word	.L80-.L152,.L67-.L152
	.half	1
	.byte	88
	.word	0,0
.L298:
	.word	-1,.L152,.L355-.L152,.L287-.L152
	.half	1
	.byte	93
	.word	.L360-.L152,.L353-.L152
	.half	1
	.byte	86
	.word	0,0
.L300:
	.word	-1,.L152,.L359-.L152,.L33-.L152
	.half	1
	.byte	94
	.word	0,0
.L288:
	.word	-1,.L152,0,.L344-.L152
	.half	1
	.byte	100
	.word	.L345-.L152,.L287-.L152
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_loc'
.L159:
	.word	-1,.L160,0,.L266-.L160
	.half	2
	.byte	138,0
	.word	0,0
.L267:
	.word	-1,.L160,0,.L129-.L160
	.half	1
	.byte	84
	.word	.L416-.L160,.L266-.L160
	.half	1
	.byte	88
	.word	0,0
.L268:
	.word	-1,.L160,.L417-.L160,.L266-.L160
	.half	1
	.byte	89
	.word	.L418-.L160,.L419-.L160
	.half	1
	.byte	84
	.word	.L420-.L160,.L130-.L160
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_loc'
.L161:
	.word	-1,.L162,0,.L315-.L162
	.half	2
	.byte	138,0
	.word	0,0
.L316:
	.word	-1,.L162,0,.L315-.L162
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L905:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Dsp_RC_Ini')
	.sect	'.debug_frame'
	.word	12
	.word	.L905,.L146,.L264-.L146
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_RcIsRIDSingleRoutine')
	.sect	'.debug_frame'
	.word	36
	.word	.L905,.L148,.L274-.L148
	.byte	4
	.word	(.L321-.L148)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L274-.L321)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_RcIsRIDSupported')
	.sect	'.debug_frame'
	.word	36
	.word	.L905,.L150,.L281-.L150
	.byte	4
	.word	(.L333-.L150)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L281-.L333)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_RcProcessRoutine')
	.sect	'.debug_frame'
	.word	36
	.word	.L905,.L152,.L287-.L152
	.byte	4
	.word	(.L343-.L152)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L287-.L343)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_RcPendingRoutine')
	.sect	'.debug_frame'
	.word	36
	.word	.L905,.L154,.L304-.L154
	.byte	4
	.word	(.L374-.L154)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L304-.L374)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_DcmRoutineControl')
	.sect	'.debug_frame'
	.word	36
	.word	.L905,.L156,.L253-.L156
	.byte	4
	.word	(.L394-.L156)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L253-.L394)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_DcmcallStopRoutine')
	.sect	'.debug_frame'
	.word	12
	.word	.L905,.L158,.L312-.L158
	.sdecl	'.debug_frame',debug,cluster('Dcm_RoutineSetSesCtrlType')
	.sect	'.debug_frame'
	.word	12
	.word	.L905,.L160,.L266-.L160
	.sdecl	'.debug_frame',debug,cluster('Dcm_SetFlagforRC')
	.sect	'.debug_frame'
	.word	24
	.word	.L905,.L162,.L315-.L162
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_DspRCConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L905,.L164,.L269-.L164
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetActiveRid')
	.sect	'.debug_frame'
	.word	24
	.word	.L905,.L166,.L249-.L166
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1704  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1705  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1706  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1707  #endif      /* DCM_CFG_DSP_ROUTINECONTROL_ENABLED */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rc.c	  1708  #endif

	; Module end
