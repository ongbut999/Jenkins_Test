	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc12148a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Wdbi.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c'

	
$TC16X
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WDBIINIT_Pending',code,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WDBIINIT_Pending'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     3  #include "DcmDspUds_Wdbi_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     4  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     5  #if(DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     6  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     7  #include "DcmDspUds_Wdbi_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     8  #include "DcmDspUds_Wdbi_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	     9  /* Global varibale declaration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    10  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    11  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    12  static VAR(Dcm_OpStatusType,  DCM_VAR) Dcm_stDspWdbiOpStatus_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    13  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    14  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    15  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    16  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    17  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    18  static VAR (boolean,DCM_VAR) Dcm_flgNvmWritePending_b;          /* variable to hold the NVM write status*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    19  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    20  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    21  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    22  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    23  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    24  static VAR (Dcm_DIDIndexType_tst,DCM_VAR) s_Dcm_idxwdbiDidIndexType;    /*Store the index of DID of either Dcm_DidConfig or Dcm_DIDRangeCOnfig structure*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    25  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    26  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    27  #define DCM_START_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    28  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    29  static VAR(uint16,DCM_VAR)  s_dataDID_u16; /*Store the DID value sent from the tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    30  #define DCM_STOP_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    31  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    32  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    33  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    34  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    35  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    36  static VAR(boolean,DCM_VAR) s_loopbreak_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    37  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    38  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    39  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    40  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    41  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    42  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    43  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    44  static VAR(Dcm_SupportRet_t,AUTOMATIC) dataRetWriteSupport_en;      /* Return from Dcm_GetSupportOfIndex */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    45  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    46  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    47  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    48  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    49  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    50  static VAR(Std_ReturnType,AUTOMATIC)   dataRetWriteFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    51  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    52  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    53  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    54  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    55  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    56  /***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    57  * Dcm_Prv_WDBIINIT_Pending : Initialisaton function for Write Data By Identifier (0x2E) Service when
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    58  *                            request is pending
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    59  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    60  * \param           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    61  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    62  * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    63  * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    64  * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    65  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    66  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    67  static FUNC(void,DCM_CODE) Dcm_Prv_WDBIINIT_Pending(void)
; Function Dcm_Prv_WDBIINIT_Pending
.L111:
Dcm_Prv_WDBIINIT_Pending:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    68          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    69      VAR(Dcm_NegativeResponseCodeType,AUTOMATIC) dataNegResCode;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    70      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)  ptrWriteFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    71  #if((DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF)||(DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF)||   \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    72          (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    73      P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    74      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    75      P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrControlSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    76  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    77      ptrWriteFnc=NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    78      dataNegResCode = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    79  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    80  #if((DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF)||(DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF)||   \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    81          (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    82  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    83      ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    84          ptrSigConfig  = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    85          ptrControlSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    86  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    87  #if(DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    88  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    89          if(ptrSigConfig->idxDcmDspControlInfo_u16 > 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    90          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    91              ptrWriteFnc   = ptrControlSigConfig->adrWriteFnc_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    92              /* If the DID use the Asynchronous operations */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    93              if((ptrWriteFnc != NULL_PTR) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    94              #if(DCM_CFG_RDBIPAGEDBUFFERSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    95              ||(ptrSigConfig->usePort_u8 == USE_DATA_RDBI_PAGED_FNC)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    96              #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    97              ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    98              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	    99  #if(DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   100                  /*Check if Fixed length or obtainable using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   101                  if(ptrDidConfig->dataFixedLength_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   102                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   103  #if(DCM_CFG_DSP_WRITE_FIXED_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   104                      /* Call function to cancel the pending condition check operation for a DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   105                      /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   106                      (void)(*(WdbiFnc4_pfct)(ptrWriteFnc))(NULL_PTR,DCM_CANCEL,&dataNegResCode);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   107  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   108                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   109                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   110                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   111  #if(DCM_CFG_DSP_WRITE_VARIABLE_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   112                      /* Call function to cancel the pending condition check operation for a DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   113                      /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   114                      (void)(*(WdbiFnc3_pfct)(ptrWriteFnc))(NULL_PTR,0x0,DCM_CANCEL,&dataNegResCode);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   115  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   116                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   117  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   118              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   119  #if(DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   120              /*Check if write function is not NULL and use post is asynchronous*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   121              else if ((ptrWriteFnc != NULL_PTR)&& (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   122              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   123                  /*Check if Fixed length or obtainable using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   124                  if(ptrDidConfig->dataFixedLength_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   125                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   126  #if(DCM_CFG_DSP_WRITE_FIXED_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   127                      /* Call function to cancel the pending condition check operation for a DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   128                      /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   129                       (void)(*(WdbiFnc21_pfct)(ptrWriteFnc))(NULL_PTR,DCM_CANCEL,&dataNegResCode);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   130  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   131                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   132                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   133                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   134  #if(DCM_CFG_DSP_WRITE_VARIABLE_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   135                      /* Call function to cancel the pending condition check operation for a DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   136                      /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   137                       (void)(*(WdbiFnc20_pfct)(ptrWriteFnc))(NULL_PTR,0x0,DCM_CANCEL,&dataNegResCode);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   138  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   139                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   140  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   141              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   142  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   143              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   144              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   145                  (void)dataNegResCode;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   146                  /* Do nothing. Added to avoid MISRA warning */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   147              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   148          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   149          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   150          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   151              (void)dataNegResCode;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   152          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   153  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   154  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   155  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   156  #if ((DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   157          if(ptrSigConfig->usePort_u8 == USE_BLOCK_ID)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   158          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   159              /* Locking the unlocked block */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   160              NvM_SetBlockLockStatus(ptrSigConfig->dataNvmBlockId_u16,TRUE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   161          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   162  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   163  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   164  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   165          }
	ret
.L251:
	
__Dcm_Prv_WDBIINIT_Pending_function_end:
	.size	Dcm_Prv_WDBIINIT_Pending,__Dcm_Prv_WDBIINIT_Pending_function_end-Dcm_Prv_WDBIINIT_Pending
.L165:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Dcm_WDBIInit',code,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Dcm_WDBIInit'
	.align	2
	
	.global	Dcm_Dcm_WDBIInit

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   166   /***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   167   * Dcm_Dcm_WDBIInit : Initialisaton function for Write Data By Identifier (0x2E) Service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   168   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   169   * \param           None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   170   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   171   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   172   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   173   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   174   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   175   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   176  FUNC(void,DCM_CODE) Dcm_Dcm_WDBIInit (void)
; Function Dcm_Dcm_WDBIInit
.L113:
Dcm_Dcm_WDBIInit:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   177  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   178  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   179  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   180      P2CONST(Dcm_DIDRangeConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidRangeConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   181      VAR(Dcm_NegativeResponseCodeType,AUTOMATIC) dataNegResCode=0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   182      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)  ptrWriteFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   183  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   184  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   185      dataRetWriteFunc_u8=0x00;
	movh.a	a15,#@his(dataRetWriteFunc_u8)
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L483:
	mov	d15,#0
.L484:
	st.b	[a15],d15
.L485:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   186  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   187      /* Check if there are any pending operations and if the did is a range did or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   188  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   189      if((Dcm_stDspWdbiOpStatus_u8 == DCM_PENDING) && (s_Dcm_idxwdbiDidIndexType.dataRange_b== FALSE))
	movh.a	a12,#@his(Dcm_stDspWdbiOpStatus_u8)
	lea	a12,[a12]@los(Dcm_stDspWdbiOpStatus_u8)
	ld.bu	d15,[a12]
.L486:
	jne	d15,#1,.L2
.L487:
	movh.a	a15,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a15,[a15]@los(s_Dcm_idxwdbiDidIndexType)
.L488:
	ld.bu	d15,[a15]9
.L489:
	jne	d15,#0,.L3
.L490:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   190      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   191         /* MR12 RULE 2.2 VIOLATION : The function is redundant with no side effects and this required for implementation. MISRA C:2012 Rule-2.2 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   192         Dcm_Prv_WDBIINIT_Pending();
	call	Dcm_Prv_WDBIINIT_Pending
.L491:
	j	.L4
.L3:
.L2:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   193  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   194      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   195      else
.L4:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   196      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   197  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   198          ptrDidRangeConfig=&Dcm_DIDRangeConfig_cast[s_Dcm_idxwdbiDidIndexType.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   199          ptrWriteFnc      = ptrDidRangeConfig->adrWriteFnc_pfct;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   200          /*Check if pointer to write function is not NULL and if the did is a range did or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   201          if ((ptrWriteFnc != NULL_PTR) && (s_Dcm_idxwdbiDidIndexType.dataRange_b!=FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   202          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   203  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   204  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   205  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   206                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   207                  (void)(*(WriteFncRange1_pfct)(ptrWriteFnc))(0x0,NULL_PTR,DCM_CANCEL,0x0,&dataNegResCode);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   208  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   209          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   210          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   211          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   212  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   213              (void)dataNegResCode;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   214  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   215          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   216  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   217      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   218      /* Initialize the state of WDBI to IDLE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   219      Dcm_SrvOpstatus_u8 =  DCM_INITIAL;
	movh.a	a15,#@his(Dcm_SrvOpstatus_u8)
	lea	a15,[a15]@los(Dcm_SrvOpstatus_u8)
.L492:
	mov	d15,#0
.L493:
	st.b	[a15],d15
.L494:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   220      /* Reset the Signal index to 0 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   221      Dcm_DidSignalIdx_u16 = 0x0;
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L495:
	mov	d15,#0
.L496:
	st.h	[a15],d15
.L497:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   222  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   223      /*Update the flag Dcm_flgNvmWritePending_b is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   224      Dcm_flgNvmWritePending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   225  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   226      /* Reset the OpStatus */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   227      Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L498:
	st.b	[a12],d15
.L499:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   228      Dcm_ResetDIDIndexstruct(&s_Dcm_idxwdbiDidIndexType);        /*This function is invoked to reset all the elements of DID index structure to its default value*/
	movh.a	a4,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a4,[a4]@los(s_Dcm_idxwdbiDidIndexType)
	call	Dcm_ResetDIDIndexstruct
.L500:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   229  }
	ret
.L246:
	
__Dcm_Dcm_WDBIInit_function_end:
	.size	Dcm_Dcm_WDBIInit,__Dcm_Dcm_WDBIInit_function_end-Dcm_Dcm_WDBIInit
.L155:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_SenderReceiverVariableSignalGetBuffer',code,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_SenderReceiverVariableSignalGetBuffer'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   230  //#if ((DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   231  #if(DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   232  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   233  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   234   Function name    : Dcm_Prv_SenderReceiverVariableSignalGetBuffer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   235   Syntax           : Dcm_Prv_SenderReceiverVariableSignalGetBuffer(pMsgContext,ptrDidConfig,ptrSigConfig,nrElements_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   236   Description      : TRACE[[SWS_Dcm_00639],[SWS_Dcm_00687] This function gets the requested Write siganl fromthe request and
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   237                      store into the buffer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   238   Parameter        : Dcm_DIDConfig_tst: Pointer to DID configuration structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   239                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   240                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   241                      nrElements_u16:  size of signals data
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   242   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   243  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   244  static FUNC(void,DCM_CODE) Dcm_Prv_SenderReceiverVariableSignalGetBuffer
; Function Dcm_Prv_SenderReceiverVariableSignalGetBuffer
.L115:
Dcm_Prv_SenderReceiverVariableSignalGetBuffer:	.type	func
	mov.aa	a12,a4
.L351:
	mov.aa	a13,a5
.L352:
	mov.aa	a15,a6
.L353:
	mov	d8,d4
.L354:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   245                              (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   246                               P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   247                               P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   248                               VAR(uint16, AUTOMATIC) nrElements_u16
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   249                               )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   250   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   251  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   252      VAR (uint16, AUTOMATIC) idxLoop_u16 = 0u; /* Number of elements in the signal */
	mov	d9,#0

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   253      VAR (uint32, AUTOMATIC) dataSignal_u32 = 0u;    /* counter to loop the array of signals */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   254  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   255      do
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   256      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   257          switch(ptrSigConfig->dataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   258          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   259  #if(DCM_CFG_DSP_WRITE_UINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   260             case DCM_UINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   261                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   262                                  (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16 +(uint16)(idxLoop_u16*8)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   263                                   &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   264                  /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   265                  Dcm_DspArraySignal_au8[idxLoop_u16]=(uint8)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   266                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   267  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   268  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   269  #if(DCM_CFG_DSP_WRITE_UINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   270             case DCM_UINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   271                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   272                                (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16 +(uint16)(idxLoop_u16*16)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   273                                &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   274                  /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   275                  Dcm_DspArraySignal_au16[idxLoop_u16]=(uint16)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   276                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   277  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   278  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   279  #if(DCM_CFG_DSP_WRITE_UINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   280             case DCM_UINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   281                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   282                                (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16+(uint16)(idxLoop_u16*32)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   283                                &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   284                  /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   285                  Dcm_DspArraySignal_au32[idxLoop_u16]=dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   286                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   287  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   288  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   289  #if(DCM_CFG_DSP_WRITE_SINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   290             case DCM_SINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   291                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   292                                 (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16+(uint16)(idxLoop_u16*8)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   293                                 &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   294                  /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   295                  Dcm_DspArraySignal_as8[idxLoop_u16]=(sint8)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   296                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   297  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   298  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   299  #if(DCM_CFG_DSP_WRITE_SINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   300             case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   301                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   302                                   (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16+(uint16)(idxLoop_u16*16)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   303                                   &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   304                   /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   305                  Dcm_DspArraySignal_as16[idxLoop_u16]=(sint16)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   306                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   307  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   308  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   309  #if(DCM_CFG_DSP_WRITE_SINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   310             case DCM_SINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   311                  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   312                                  (ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16+(uint16)(idxLoop_u16*32)),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   313                                  &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   314                  /* Copy the part of the signal to the local Signal array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   315                  Dcm_DspArraySignal_as32[idxLoop_u16]=(sint32)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   316                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   317  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   318  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   319             default:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   320                    {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   321                    /*empty default*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   322                    break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   323                    }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   324               }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   325         idxLoop_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   326          /* loop for all the elements of the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   327      }while((idxLoop_u16 < nrElements_u16));
.L5:
	ld.bu	d4,[a15]10
.L522:
	mov	d15,#1
	jeq	d15,d4,.L6
	j	.L7
.L6:
	ld.a	a2,[a13]8
.L523:
	movh.a	a4,#@his(Dcm_DidSignalIdx_u16)
	lea	a4,[a4]@los(Dcm_DidSignalIdx_u16)
	ld.hu	d15,[a4]0
.L524:
	addsc.a	a2,a2,d15,#2
.L525:
	ld.hu	d15,[a2]0
.L526:
	sha	d0,d9,#3
.L527:
	add	d15,d0
	extr.u	d5,d15,#0,#16
.L528:
	ld.a	a4,[a12]4
.L529:
	add.a	a4,#2
.L530:
	ld.bu	d6,[a15]12
	call	Dcm_GetSignal_u32
.L356:
	movh.a	a2,#@his(Dcm_DspArraySignal_au8)
	lea	a2,[a2]@los(Dcm_DspArraySignal_au8)
.L531:
	addsc.a	a2,a2,d9,#0
.L532:
	st.b	[a2],d2
.L533:
	j	.L8
.L7:
	j	.L9
.L9:
.L8:
	add	d9,#1
.L355:
	extr.u	d9,d9,#0,#16
.L357:
	jlt.u	d9,d8,.L5
.L534:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   328  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   329  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   330  }
	ret
.L255:
	
__Dcm_Prv_SenderReceiverVariableSignalGetBuffer_function_end:
	.size	Dcm_Prv_SenderReceiverVariableSignalGetBuffer,__Dcm_Prv_SenderReceiverVariableSignalGetBuffer_function_end-Dcm_Prv_SenderReceiverVariableSignalGetBuffer
.L170:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverVariableLengthSignal',code,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverVariableLengthSignal'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   331  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   332  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   333  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   334   Function name    : Dcm_Prv_WriteSenderReceiverVariableLengthSignal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   335   Syntax           : Dcm_Prv_WriteSenderReceiverVariableLengthSignal( pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc,nrElements_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   336   Description      : TRACE[SWS_Dcm_00687]This function writes DID signal using SenderReceiver interface for Variable length signal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   337   Parameter        : Dcm_DIDConfig_tst: Pointer to DID configuration structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   338                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   339                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   340                      ptrWriteFnc:  Pointer to Write function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   341                      nrElements_u16 : Size of Variable length Signal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   342   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   343  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   344  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   345  static FUNC(void,DCM_CODE) Dcm_Prv_WriteSenderReceiverVariableLengthSignal
; Function Dcm_Prv_WriteSenderReceiverVariableLengthSignal
.L117:
Dcm_Prv_WriteSenderReceiverVariableLengthSignal:	.type	func
	mov.aa	a15,a6
.L359:
	mov.aa	a12,a7
.L361:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   346                              (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   347                               P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   348                               P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   349  							 /* MR12 RULE 8.13 VIOLATION: cast may discard const qualifier. So used as non constant pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   350                               P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   351                               VAR (uint16, AUTOMATIC) nrElements_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   352   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   353     /* Get the signal value from the request buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   354     Dcm_Prv_SenderReceiverVariableSignalGetBuffer (pMsgContext,ptrDidConfig,ptrSigConfig,nrElements_u16);
	mov.aa	a6,a15
	call	Dcm_Prv_SenderReceiverVariableSignalGetBuffer
.L358:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   355  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   356    switch(ptrSigConfig->dataType_u8)
	ld.bu	d15,[a15]10
.L539:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   357           {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   358  #if(DCM_CFG_DSP_WRITE_UINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   359           /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   360           case DCM_UINT8:
	mov	d0,#1
	jeq	d15,d0,.L10
	j	.L11
.L10:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   361              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   362              dataRetWriteFunc_u8 = (*(WdbiFnc12_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_au8);
	movh.a	a15,#@his(dataRetWriteFunc_u8)
.L360:
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L540:
	movh.a	a4,#@his(Dcm_DspArraySignal_au8)
	lea	a4,[a4]@los(Dcm_DspArraySignal_au8)
	calli	a12
.L541:
	st.b	[a15],d2
.L542:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   363              break;
	j	.L12

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   364  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   365  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   366  #if(DCM_CFG_DSP_WRITE_UINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   367            /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   368           case DCM_UINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   369              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   370              dataRetWriteFunc_u8 = (*(WdbiFnc13_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_au16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   371              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   372  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   373  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   374  #if(DCM_CFG_DSP_WRITE_UINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   375            /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   376           case DCM_UINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   377               /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   378              dataRetWriteFunc_u8 = (*(WdbiFnc14_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_au32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   379              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   380  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   381  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   382  #if(DCM_CFG_DSP_WRITE_SINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   383              /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   384          case DCM_SINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   385              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   386              dataRetWriteFunc_u8 = (*(WdbiFnc15_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_as8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   387              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   388  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   389  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   390  #if(DCM_CFG_DSP_WRITE_SINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   391              /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   392          case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   393              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   394              dataRetWriteFunc_u8 = (*(WdbiFnc16_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_as16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   395              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   396  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   397  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   398  #if(DCM_CFG_DSP_WRITE_SINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   399              /* Call the configured callback to write the signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   400          case DCM_SINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   401              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   402              dataRetWriteFunc_u8 = (*(WdbiFnc17_pfct)(ptrWriteFnc))(Dcm_DspArraySignal_as32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   403              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   404  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   405  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   406          default:
.L11:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   407              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   408              /*empty default*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   409              break;
	j	.L13

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   410              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   411  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   412           }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   413    }
.L13:
.L12:
	ret
.L267:
	
__Dcm_Prv_WriteSenderReceiverVariableLengthSignal_function_end:
	.size	Dcm_Prv_WriteSenderReceiverVariableLengthSignal,__Dcm_Prv_WriteSenderReceiverVariableLengthSignal_function_end-Dcm_Prv_WriteSenderReceiverVariableLengthSignal
.L175:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverFixedLengthSignal',code,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverFixedLengthSignal'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   414  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   415  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   416  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   417   Function name    : Dcm_Prv_WriteSenderReceiverFixedLengthSignal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   418   Syntax           : Dcm_Prv_WriteSenderReceiverFixedLengthSignal(pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   419   Description      : TRACE[SWS_Dcm_00639],[SWS_Dcm_00687] This function writed DID signal using SenderReceiver interface
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   420   Parameter        : Dcm_DIDConfig_tst: Pointer to DID configuration structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   421                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   422                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   423                      ptrWriteFnc:  Pointer to Write function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   424   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   425  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   426  static FUNC(void,DCM_CODE) Dcm_Prv_WriteSenderReceiverFixedLengthSignal
; Function Dcm_Prv_WriteSenderReceiverFixedLengthSignal
.L119:
Dcm_Prv_WriteSenderReceiverFixedLengthSignal:	.type	func
	mov.aa	a15,a6
.L365:
	mov.aa	a12,a7
.L367:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   427                              (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   428                               P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   429                               P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   430  							 /* MR12 RULE 8.13 VIOLATION: cast may discard const qualifier. So used as non constant pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   431                               P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   432   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   433  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   434  /* Get the signal value from the request buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   435  VAR (uint32, AUTOMATIC) dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   436  #if(DCM_CFG_DSP_WRITE_SINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   437      /* Local variable for sint32 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   438      VAR (sint32, AUTOMATIC) dataSignal_s32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   439  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   440  #if(DCM_CFG_DSP_WRITE_UINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   441      /* Local variable for uint16 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   442      VAR (uint16, AUTOMATIC) dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   443  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   444  #if(DCM_CFG_DSP_WRITE_SINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   445      /* Local variable for sint16 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   446      VAR (sint16, AUTOMATIC) dataSignal_s16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   447  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   448  #if(DCM_CFG_DSP_WRITE_UINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   449      /* Local variable for uint8 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   450      VAR (uint8,  AUTOMATIC) dataSignal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   451  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   452  #if(DCM_CFG_DSP_WRITE_SINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   453      /* Local variable for sint8 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   454      VAR (sint8,  AUTOMATIC) dataSignal_s8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   455  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   456  #if(DCM_CFG_DSP_WRITE_BOOLEAN_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   457      /* Local variable for boolean signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   458      VAR (boolean,AUTOMATIC) dataSignal_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   459  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   460  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   461  dataSignal_u32 = Dcm_GetSignal_u32(ptrSigConfig->dataType_u8,\ 
	ld.bu	d4,[a15]10
.L547:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   462                                     ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16,\ 
	ld.a	a2,[a5]8
.L548:
	movh.a	a5,#@his(Dcm_DidSignalIdx_u16)
.L363:
	lea	a5,[a5]@los(Dcm_DidSignalIdx_u16)
	ld.hu	d15,[a5]0
.L549:
	addsc.a	a2,a2,d15,#2
.L550:
	ld.hu	d5,[a2]0
.L551:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   463                                     &pMsgContext->reqData[0x02],ptrSigConfig->dataEndianness_u8);
	ld.a	a4,[a4]4
.L362:
	add.a	a4,#2
.L552:
	ld.bu	d6,[a15]12
	call	Dcm_GetSignal_u32
.L364:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   464     switch(ptrSigConfig->dataType_u8)
	ld.bu	d15,[a15]10
.L553:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   465      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   466  #if(DCM_CFG_DSP_WRITE_BOOLEAN_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   467          case DCM_BOOLEAN:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   468              /* Check if the signal value if True/false */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   469                dataSignal_b = (dataSignal_u32 != 0u) ? (TRUE):(FALSE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   470              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   471                  dataRetWriteFunc_u8 = (*(WdbiFnc5_pfct)(ptrWriteFnc))(dataSignal_b);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   472                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   473  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   474  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   475  #if(DCM_CFG_DSP_WRITE_UINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   476          case DCM_UINT8:
	mov	d0,#1
	jeq	d15,d0,.L14
	j	.L15
.L14:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   477                  /* Extract uint8 value from uint32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   478                  dataSignal_u8 = (uint8)dataSignal_u32;
	extr.u	d4,d2,#0,#8
.L369:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   479                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   480                   dataRetWriteFunc_u8 = (*(WdbiFnc6_pfct)(ptrWriteFnc))(dataSignal_u8);
	movh.a	a15,#@his(dataRetWriteFunc_u8)
.L366:
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L554:
	calli	a12
.L368:
	st.b	[a15],d2
.L555:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   481                   break;
	j	.L16

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   482  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   483  #if(DCM_CFG_DSP_WRITE_UINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   484          case DCM_UINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   485                  /* Extract uint16 value from uint32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   486                  dataSignal_u16 = (uint16)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   487                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   488                  dataRetWriteFunc_u8 = (*(WdbiFnc7_pfct)(ptrWriteFnc))(dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   489                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   490  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   491  #if(DCM_CFG_DSP_WRITE_UINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   492  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   493          case DCM_UINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   494                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   495                 dataRetWriteFunc_u8 = (*(WdbiFnc8_pfct)(ptrWriteFnc))(dataSignal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   496                 break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   497  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   498  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   499  #if(DCM_CFG_DSP_WRITE_SINT8_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   500          case DCM_SINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   501                  /* Extract sint8 value from uint32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   502                  dataSignal_s8 = (sint8)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   503                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   504                  dataRetWriteFunc_u8 = (*(WdbiFnc9_pfct)(ptrWriteFnc))(dataSignal_s8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   505                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   506  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   507  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   508  #if(DCM_CFG_DSP_WRITE_SINT16_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   509          case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   510                  /* Extract sint16 value from uint32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   511                dataSignal_s16 = (sint16)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   512                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   513                dataRetWriteFunc_u8 = (*(WdbiFnc10_pfct)(ptrWriteFnc))(dataSignal_s16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   514                break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   515  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   516  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   517  #if(DCM_CFG_DSP_WRITE_SINT32_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   518          case DCM_SINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   519                 /* Extract sint32 value from uint32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   520                dataSignal_s32 = (sint32)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   521                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   522                dataRetWriteFunc_u8 = (*(WdbiFnc11_pfct)(ptrWriteFnc))(dataSignal_s32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   523                break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   524  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   525            default:
.L15:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   526            /* No operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   527              break;
	j	.L17

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   528  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   529      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   530  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   531  }
.L17:
.L16:
	ret
.L273:
	
__Dcm_Prv_WriteSenderReceiverFixedLengthSignal_function_end:
	.size	Dcm_Prv_WriteSenderReceiverFixedLengthSignal,__Dcm_Prv_WriteSenderReceiverFixedLengthSignal_function_end-Dcm_Prv_WriteSenderReceiverFixedLengthSignal
.L180:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverSignal',code,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteSenderReceiverSignal'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   532  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   533  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   534  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   535   Function name    : Dcm_Prv_WriteSenderReceiverSignal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   536   Syntax           : Dcm_Prv_WriteSenderReceiverSignal(pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   537   Description      : TRACE[SWS_Dcm_00639],[SWS_Dcm_00687] This function writed DID signal using SenderReceiver interface
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   538   Parameter        : Dcm_DIDConfig_tst: Pointer to DID configuration structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   539                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   540                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   541                      ptrWriteFnc:  Pointer to Write function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   542   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   543  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   544  static FUNC(void,DCM_CODE) Dcm_Prv_WriteSenderReceiverSignal
; Function Dcm_Prv_WriteSenderReceiverSignal
.L121:
Dcm_Prv_WriteSenderReceiverSignal:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   545                              (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   546                               P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   547                               P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   548  							 /* MR12 RULE 8.13 VIOLATION: cast may discard const qualifier. So used as non constant pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   549                               P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   550  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   551      VAR(uint16, AUTOMATIC) nrElements_u16 = 0;
	mov	d4,#0
.L371:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   552  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   553  /* Check for Sender Receiver  fixed length Signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   554  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   555      if(Dcm_Prv_SenderReceiverFixedLength(ptrSigConfig->dataSize_u16,ptrSigConfig->dataType_u8))
	ld.hu	d0,[a6]4
.L560:
	ld.bu	d15,[a6]10
.L287:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     3  #ifndef DCMDSPUDS_WDBI_PRIV_H
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     4  #define DCMDSPUDS_WDBI_PRIV_H
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     5  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     6  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     7  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     8  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     9   ***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    10              Write Data by Identifier service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    11   ***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    12   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    13  #if(DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    14  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    15  #define DCM_DSP_WDBI_MINREQLEN 0x03u /* Minimum Request length for WDBI service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    16  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    17  #if(DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    18  LOCAL_INLINE boolean Dcm_Prv_SenderReceiverFixedLength(uint32  Datasize_u, uint8 DataType)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    19  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    20      boolean Status = FALSE;
	mov	d1,#0
.L372:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    21      if( ((Datasize_u == 1u) && (DataType == DCM_BOOLEAN)) ||      (inlined)
	jne	d0,#1,.L18
.L561:
	jeq	d15,#0,.L19
.L18:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    21      if( ((Datasize_u == 1u) && (DataType == DCM_BOOLEAN)) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    22            ((Datasize_u == 8u) &&
	mov	d2,#8
.L562:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    22            ((Datasize_u == 8u) &&      (inlined)
	jne	d0,d2,.L20
.L563:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    23            ((DataType == DCM_UINT8) || (DataType == DCM_SINT8)))  ||      (inlined)
	jeq	d15,#1,.L21
.L564:
	jeq	d15,#4,.L22

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    22            ((Datasize_u == 8u) &&      (inlined)
.L20:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    23            ((DataType == DCM_UINT8) || (DataType == DCM_SINT8)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    24            ((Datasize_u == 16u) &&
	mov	d2,#16
.L565:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    24            ((Datasize_u == 16u) &&      (inlined)
	jne	d0,d2,.L23
.L566:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    25            ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||      (inlined)
	jeq	d15,#2,.L24
.L567:
	jeq	d15,#5,.L25

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    24            ((Datasize_u == 16u) &&      (inlined)
.L23:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    25            ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    26            ((Datasize_u == 32u) &&
	mov	d2,#32
.L568:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    26            ((Datasize_u == 32u) &&      (inlined)
	jne	d0,d2,.L26
.L569:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    27            ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )      (inlined)
	jeq	d15,#3,.L27
.L570:
	jne	d15,#6,.L28
.L27:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    25            ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||      (inlined)
.L25:
.L22:
.L19:
.L21:
.L24:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    27            ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    28  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    29              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    30                 Status=TRUE;
	mov	d1,#1

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    21      if( ((Datasize_u == 1u) && (DataType == DCM_BOOLEAN)) ||      (inlined)
.L28:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    27            ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )      (inlined)
.L26:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    34       return Status;      (inlined)
	j	.L29

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    35  }      (inlined)
.L29:
	jeq	d1,#0,.L30
.L288:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   556       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   557  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   558             Dcm_Prv_WriteSenderReceiverFixedLengthSignal (pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc);
	call	Dcm_Prv_WriteSenderReceiverFixedLengthSignal
.L370:
	j	.L31
.L30:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     3  #ifndef DCMDSPUDS_WDBI_PRIV_H
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     4  #define DCMDSPUDS_WDBI_PRIV_H
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     5  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     6  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     7  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     8  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	     9   ***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    10              Write Data by Identifier service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    11   ***************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    12   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    13  #if(DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    14  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    15  #define DCM_DSP_WDBI_MINREQLEN 0x03u /* Minimum Request length for WDBI service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    16  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    17  #if(DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    18  LOCAL_INLINE boolean Dcm_Prv_SenderReceiverFixedLength(uint32  Datasize_u, uint8 DataType)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    19  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    20      boolean Status = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    21      if( ((Datasize_u == 1u) && (DataType == DCM_BOOLEAN)) ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    22            ((Datasize_u == 8u) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    23            ((DataType == DCM_UINT8) || (DataType == DCM_SINT8)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    24            ((Datasize_u == 16u) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    25            ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    26            ((Datasize_u == 32u) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    27            ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    28  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    29              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    30                 Status=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    31  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    32              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    33  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    34       return Status;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    35  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    36  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    37  LOCAL_INLINE boolean Dcm_Prv_SenderReceiverVariableLength(uint32  Datasize_u, uint8 DataType)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    38  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    39      boolean Status = FALSE;
	mov	d1,#0
.L373:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    40      if(((Datasize_u > 8u) &&      (inlined)
	jlt.u	d0,#9,.L32
.L571:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    41        ((DataType == DCM_UINT8) || (DataType == DCM_SINT8)))  ||      (inlined)
	jeq	d15,#1,.L33
.L572:
	jeq	d15,#4,.L34

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    40      if(((Datasize_u > 8u) &&      (inlined)
.L32:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    40      if(((Datasize_u > 8u) &&
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    41        ((DataType == DCM_UINT8) || (DataType == DCM_SINT8)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    42        ((Datasize_u > 16u) &&
	mov	d2,#16
.L573:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    42        ((Datasize_u > 16u) &&      (inlined)
	jge.u	d2,d0,.L35
.L574:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    43        ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||      (inlined)
	jeq	d15,#2,.L36
.L575:
	jeq	d15,#5,.L37

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    42        ((Datasize_u > 16u) &&      (inlined)
.L35:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    43        ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    44        ((Datasize_u > 32u) &&
	mov	d2,#32
.L576:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    44        ((Datasize_u > 32u) &&      (inlined)
	jge.u	d2,d0,.L38
.L577:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    45        ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )      (inlined)
	jeq	d15,#3,.L39
.L578:
	jne	d15,#6,.L40
.L39:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    43        ((DataType == DCM_UINT16) || (DataType == DCM_SINT16)))  ||      (inlined)
.L37:
.L34:
.L33:
.L36:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    45        ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    46  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    47           {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    48  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    49           Status=TRUE;
	mov	d1,#1

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    40      if(((Datasize_u > 8u) &&      (inlined)
.L40:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    45        ((DataType == DCM_UINT32) || (DataType == DCM_SINT32))) )      (inlined)
.L38:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    53      return Status;      (inlined)
	j	.L41

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi_Priv.h	    55  }      (inlined)
.L41:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   559       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   560        /* Check for Sender Receiver  variable length Signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   561        else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   562         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   563  		   if(Dcm_Prv_SenderReceiverVariableLength(ptrSigConfig->dataSize_u16,ptrSigConfig->dataType_u8) )
	jeq	d1,#0,.L42
.L296:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   564  		   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   565  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   566             /*MR12 RULE 13.5 VIOLATION:Right hand operand of '&&' or '||' is an expression with possible side effects. MISRA C:2012 Rule-13.5*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   567                 switch(ptrSigConfig->dataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   568                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   569  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   570  #if((DCM_CFG_DSP_WRITE_UINT8_SR_ENABLED != DCM_CFG_OFF) || (DCM_CFG_DSP_WRITE_SINT8_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   571                 /*Calculate the number of elements in the Array of UINT8/SINT8 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   572                 case DCM_UINT8:
	mov	d1,#1
.L374:
	jeq	d15,d1,.L43
.L579:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   573                 case DCM_SINT8:
	mov	d1,#4
	jeq	d15,d1,.L44
	j	.L45
.L43:
.L44:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   574                     nrElements_u16 = (ptrSigConfig->dataSize_u16)/8u;
	sh	d4,d0,#-3
.L580:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   575                     break;
	j	.L46

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   576  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   577  #if((DCM_CFG_DSP_WRITE_UINT16_SR_ENABLED != DCM_CFG_OFF) || (DCM_CFG_DSP_WRITE_SINT16_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   578                 /*Calculate the number of elements in the Array of UINT8/SINT8 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   579                 case DCM_UINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   580                 case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   581                     nrElements_u16 = (ptrSigConfig->dataSize_u16)/16u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   582                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   583  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   584  #if((DCM_CFG_DSP_WRITE_UINT32_SR_ENABLED != DCM_CFG_OFF) || (DCM_CFG_DSP_WRITE_SINT32_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   585                 /* Calculate the number of elements in the Array of UINT8/SINT8 signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   586                 case DCM_UINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   587                 case DCM_SINT32:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   588                     nrElements_u16 = (ptrSigConfig->dataSize_u16)/32u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   589                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   590  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   591                 default:
.L45:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   592                   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   593                     /*empty default*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   594                     break;
	j	.L47

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   595                   }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   596                }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   597  		   }
.L47:
.L46:
.L42:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   598  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   599             Dcm_Prv_WriteSenderReceiverVariableLengthSignal( pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc,nrElements_u16);
	call	Dcm_Prv_WriteSenderReceiverVariableLengthSignal
.L31:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   600         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   601  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   602  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   603  }
	ret
.L280:
	
__Dcm_Prv_WriteSenderReceiverSignal_function_end:
	.size	Dcm_Prv_WriteSenderReceiverSignal,__Dcm_Prv_WriteSenderReceiverSignal_function_end-Dcm_Prv_WriteSenderReceiverSignal
.L185:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDidUsePort',code,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDidUsePort'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   604  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   605  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   606  #if((DCM_CFG_DSP_WRITE_SYNCH_FNC_ENABLED != DCM_CFG_OFF) || (DCM_CFG_DSP_WRITE_SYNCH_CS_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   607   /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   608    Function name    : Dcm_Prv_WriteSYNCDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   609    Syntax           : Dcm_Prv_WriteSYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   610    Description      : TRACE[[SWS_Dcm_00794]] This function writed DID signal using SYNC interface
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   611    Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   612                       Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   613                       Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   614                       posnDidSignal_u16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   615    Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   616   ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   617   static FUNC(void,DCM_CODE) Dcm_Prv_WriteSYNCDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   618                               (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   619                                P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   620                                /* MR12 RULE 8.13 VIOLATION: cast may discard const qualifier. So used as non constant pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   621                                P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   622                                P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   623                                VAR (uint16,  AUTOMATIC) posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   624   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   625       /*Check if Fixed length or obtainable using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   626       if(ptrDidConfig->dataFixedLength_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   627       {    /* Call configured requested DID write function to write DID data  into the server */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   628           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   629            *  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   630  #if(DCM_CFG_DSP_WRITE_FIXED_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   631           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   632           dataRetWriteFunc_u8 = (*(WdbiFnc2_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   633                                   (&pMsgContext->reqData[posnDidSignal_u16], dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   634  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   635  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   636       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   637  #if(DCM_CFG_DSP_WRITE_VARIABLE_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   638       else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   639       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   640  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   641          /* Call configured requested DID write function to write DID data  into the server */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   642  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   643           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   644                     * Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   645           dataRetWriteFunc_u8 = (*(WdbiFnc1_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   646                                  (&pMsgContext->reqData[posnDidSignal_u16],\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   647                                   (uint16)(pMsgContext->reqDataLen-0x02u),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   648  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   649       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   650  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   651   }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   652  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   653  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   654  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   655  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   656  #if((DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF) || (DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF)\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   657      || ((DCM_CFG_RDBIPAGEDBUFFERSUPPORT != DCM_CFG_OFF )&& (DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   658  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   659   /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   660    Function name    : Dcm_Prv_WriteASYNCDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   661    Syntax           : Dcm_Prv_WriteASYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   662    Description      : TRACE[[SWS_Dcm_00794]] This function writed DID signal using ASYNC interface
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   663    Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   664                       Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   665                       Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   666                       posnDidSignal_u16:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   667    Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   668   ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   669  static FUNC(void,DCM_CODE) Dcm_Prv_WriteASYNCDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   670                             (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   671                              P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   672                              /* MR12 RULE 8.13 VIOLATION: cast may discard const qualifier. So used as non constant pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   673                              P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   674                              P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   675                              VAR (uint16,  AUTOMATIC) posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   676  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   677  /*Check if Fixed length or obtainable using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   678       if(ptrDidConfig->dataFixedLength_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   679       {   /* Call configured requested DID write function to write DID data  into the server */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   680  #if(DCM_CFG_DSP_WRITE_FIXED_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   681           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   682            * Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   683           dataRetWriteFunc_u8 = (*(WdbiFnc4_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   684                                 (&pMsgContext->reqData[posnDidSignal_u16],Dcm_stDspWdbiOpStatus_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   685  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   686       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   687       else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   688       {   /* Call configured requested DID write function to write DID data  into the server */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   689  #if(DCM_CFG_DSP_WRITE_VARIABLE_LENGTH != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   690           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   691            * Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   692           dataRetWriteFunc_u8 = (*(WdbiFnc3_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   693                                 (&pMsgContext->reqData[posnDidSignal_u16],(uint16)(pMsgContext->reqDataLen-0x02u),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   694                                 Dcm_stDspWdbiOpStatus_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   695  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   696       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   697   }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   698  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   699  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   700  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   701   Function name    : Dcm_Prv_WriteDidUsePort
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   702   Syntax           : Dcm_Prv_WriteDidUsePort(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   703   Description      : TRACE[SWS_Dcm_00395] This function writes DID signal using ASYNC/SYNC/SenderReceiver interface
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   704   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   705                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   706                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   707                      posnDidSignal_u16: : Postion of Requested DID in DID configured table
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   708   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   709  *******************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   710  static FUNC(void,DCM_CODE) Dcm_Prv_WriteDidUsePort
; Function Dcm_Prv_WriteDidUsePort
.L123:
Dcm_Prv_WriteDidUsePort:	.type	func
	mov.aa	a15,a6
.L379:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   711                             (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   712                              P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   713                              P2VAR(void,AUTOMATIC, DCM_INTERN_CONST)  ptrWriteFnc,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   714                              P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   715                              VAR (uint16,  AUTOMATIC) posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   716  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   717     /* Synchronous interface is used for writing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   718  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   719      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   720      ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
	ld.a	a2,[a7]8
.L585:
	movh.a	a4,#@his(Dcm_DidSignalIdx_u16)
.L375:
	lea	a4,[a4]@los(Dcm_DidSignalIdx_u16)
	ld.hu	d15,[a4]0
.L586:
	addsc.a	a2,a2,d15,#2
.L587:
	ld.hu	d15,[a2]2
	sha	d15,#4
.L588:
	movh.a	a2,#@his(Dcm_DspDataInfo_st)
	lea	a2,[a2]@los(Dcm_DspDataInfo_st)
.L589:
	addsc.a	a6,a2,d15,#0
.L378:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   721  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   722  #if(DCM_CFG_DSP_WRITE_SYNCH_FNC_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   723      if((ptrWriteFnc != NULL_PTR) && (ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   724      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   725          Dcm_Prv_WriteSYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   726      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   727  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   728  #if(DCM_CFG_DSP_WRITE_SYNCH_CS_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   729      if((ptrWriteFnc != NULL_PTR) && (ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   730      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   731          Dcm_Prv_WriteSYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   732      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   733  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   734              /* Asynchronous interface is used for writing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   735  #if((DCM_CFG_DSP_WRITE_ASYNCH_FNC_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   736      if((ptrWriteFnc != NULL_PTR) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   737  #if((DCM_CFG_RDBIPAGEDBUFFERSUPPORT != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   738              || (ptrSigConfig->usePort_u8 == USE_DATA_RDBI_PAGED_FNC)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   739  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   740      ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   741      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   742          Dcm_Prv_WriteASYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   743      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   744  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   745  #if(DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   746      if((ptrWriteFnc != NULL_PTR) && (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   747      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   748          Dcm_Prv_WriteASYNCDID(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   749      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   750  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   751  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   752              /* Sender Receiver  interface is used for writing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   753  #if(DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   754     if(((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)||(ptrSigConfig->usePort_u8 ==USE_DATA_SENDER_RECEIVER_AS_SERVICE))
	ld.bu	d15,[a6]11
.L590:
	jeq	d15,#2,.L48
.L591:
	jne	d15,#3,.L49
.L48:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   755             && (ptrWriteFnc != NULL_PTR))
	jz.a	a15,.L50
.L592:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   756     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   757         Dcm_Prv_WriteSenderReceiverSignal (pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc);
	mov.aa	a4,a5
.L380:
	mov.aa	a5,a7
.L376:
	mov.aa	a7,a15
.L377:
	call	Dcm_Prv_WriteSenderReceiverSignal
.L50:
.L49:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   758     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   759  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   760  }
	ret
.L303:
	
__Dcm_Prv_WriteDidUsePort_function_end:
	.size	Dcm_Prv_WriteDidUsePort,__Dcm_Prv_WriteDidUsePort_function_end-Dcm_Prv_WriteDidUsePort
.L190:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteNormalDID',code,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteNormalDID'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   761  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   762  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   763  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   764  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   765  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   766   Function name    : Dcm_Prv_WriteDIDNvRam
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   767   Syntax           : Dcm_Prv_WriteDIDNvRam(pMsgContext,ptrDidConfig,ptrSigConfig,ptrWriteFnc)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   768   Description      : TRACE[SWS_Dcm_00541] This function writed DID signal using NVRAM BLOCK
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   769   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   770                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   771                      Dcm_DataInfoConfig_tst: Pointer to DID config Structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   772                      posnDidSignal_u16:Position of DID in configured table
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   773   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   774  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   775   static FUNC(void,DCM_CODE) Dcm_Prv_WriteDIDNvRam
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   776                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   777                               P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   778                               P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   779                               VAR (uint16,  AUTOMATIC) posnDidSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   780   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   781  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   782  VAR(Std_ReturnType, AUTOMATIC) dataNvmWriteBlockRetVal_u8;/*Return value for Nvm_WriteBlock*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   783  VAR(Std_ReturnType, AUTOMATIC) dataNvmGetErrorRetVal_u8;/*Return value for NvM_GetErrorStatus*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   784  VAR(NvM_RequestResultType, AUTOMATIC) dataRequestResult_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   785  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   786  /*Check if the flag Dcm_flgNvmWritePending_b is set to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   787      if(Dcm_flgNvmWritePending_b ==FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   788      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   789          NvM_SetBlockLockStatus(ptrSigConfig->dataNvmBlockId_u16,FALSE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   790          /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as NvM_WriteBlock takes void pointer as input
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   791           * and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   792          dataNvmWriteBlockRetVal_u8=NvM_WriteBlock(ptrSigConfig->dataNvmBlockId_u16,&pMsgContext->reqData[posnDidSignal_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   793          if(dataNvmWriteBlockRetVal_u8 != E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   794          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   795              /* According to  ISO 14229-1;2013 - General Programming failure has to be returned in case of NvmWrite Failure */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   796              *dataNegRespCode_u8 = DCM_E_GENERALPROGRAMMINGFAILURE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   797              /*Set the flag Dcm_flgNvmWritePending_b is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   798              Dcm_flgNvmWritePending_b=FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   799              /* Locking the unlocked block */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   800              NvM_SetBlockLockStatus(ptrSigConfig->dataNvmBlockId_u16,TRUE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   801          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   802          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   803          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   804              /*Set the flag Dcm_flgNvmWritePending_b to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   805              Dcm_flgNvmWritePending_b=TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   806              dataRetWriteFunc_u8 =DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   807          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   808          s_loopbreak_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   809  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   810      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   811      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   812      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   813          dataNvmGetErrorRetVal_u8= NvM_GetErrorStatus(ptrSigConfig->dataNvmBlockId_u16,&dataRequestResult_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   814          /*Set the flag Dcm_flgNvmWritePending_b to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   815          Dcm_flgNvmWritePending_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   816          if(dataNvmGetErrorRetVal_u8 != E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   817          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   818              /* According to  ISO 14229-1;2013 - General Programming failure has to be returned in case of NvmWrite Failure */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   819              *dataNegRespCode_u8 =DCM_E_GENERALPROGRAMMINGFAILURE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   820              /* Locking the unlocked block */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   821              NvM_SetBlockLockStatus(ptrSigConfig->dataNvmBlockId_u16,TRUE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   822              s_loopbreak_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   823          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   824          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   825          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   826               switch(dataRequestResult_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   827               {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   828                   case NVM_REQ_PENDING:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   829                           /*Set the flag Dcm_flgNvmWritePending_b to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   830                           Dcm_flgNvmWritePending_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   831                           dataRetWriteFunc_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   832                           break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   833                   case NVM_REQ_OK:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   834                           dataRetWriteFunc_u8 =E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   835                           break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   836                   default:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   837                           *dataNegRespCode_u8 = DCM_E_GENERALPROGRAMMINGFAILURE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   838                           break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   839               }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   840          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   841          if((dataRequestResult_u8 != NVM_REQ_PENDING) && (dataNvmGetErrorRetVal_u8==E_OK))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   842          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   843              /* Locking the unlocked block */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   844              NvM_SetBlockLockStatus(ptrSigConfig->dataNvmBlockId_u16,TRUE);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   845          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   846          if(dataRequestResult_u8!=NVM_REQ_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   847          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   848              s_loopbreak_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   849          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   850        }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   851  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   852  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   853  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   854  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   855  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   856   Function name    : Dcm_Prv_WriteNormalDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   857   Syntax           : Dcm_Prv_WriteNormalDID(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   858   Description      : TRACE[[SWS_Dcm_00395],[SWS_Dcm_00541] This function performs write opeartion for Normal DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   859                      (i.e which is not a range DID)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   860   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   861                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   862   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   863  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   864  static FUNC(void,DCM_CODE) Dcm_Prv_WriteNormalDID
; Function Dcm_Prv_WriteNormalDID
.L125:
Dcm_Prv_WriteNormalDID:	.type	func
	sub.a	a10,#8
.L381:
	mov.aa	a12,a4
.L382:
	st.a	[a10]4,a5
.L383:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   865                          (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   866                           P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   867  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   868    /* Pointers  to DID  configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   869  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   870    P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16];
	movh.a	a15,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a15,[a15]@los(s_Dcm_idxwdbiDidIndexType)
.L597:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L598:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L599:
	addsc.a	a13,a15,d15,#0
.L384:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   871    P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   872    P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrControlSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   873  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   874    P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)  ptrWriteFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   875    /* Local variable for the signal position of did in terms of byte numbers*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   876    VAR (uint16,  AUTOMATIC) posnDidSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   877    VAR (uint16,  AUTOMATIC) loopIndex_u16 = Dcm_DidSignalIdx_u16;
	movh.a	a2,#@his(Dcm_DidSignalIdx_u16)
	lea	a2,[a2]@los(Dcm_DidSignalIdx_u16)
	st.a	[a10],a2
	ld.hu	d8,[a2]0
.L385:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   878    VAR(boolean,  AUTOMATIC) Rtn_InfrastureError;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   879  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   880  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   881      for(;((loopIndex_u16 < ptrDidConfig->nrSig_u16) && (dataRetWriteFunc_u8 == E_OK)); loopIndex_u16++)
	j	.L51
.L52:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   882      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   883          Dcm_DidSignalIdx_u16 = loopIndex_u16;
	ld.a	a2,[a10]
	st.h	[a2],d8
.L600:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   884          ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
	ld.a	a15,[a13]8
.L601:
	addsc.a	a2,a15,d8,#2
.L602:
	ld.hu	d0,[a2]2
	sha	d0,#4
.L603:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L604:
	addsc.a	a15,a15,d0,#0
.L387:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   885          ptrControlSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
	ld.hu	d15,[a15]8
	sha	d0,d15,#4
.L605:
	movh.a	a4,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a4,[a4]@los(Dcm_DspDid_ControlInfo_st)
.L606:
	addsc.a	a4,a4,d0,#0
.L389:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   886          /*Calculate the signal position of did in terms of byte numbers*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   887          posnDidSignal_u16 = (uint16)((ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16/8u) +2u);
	ld.hu	d0,[a2]0
	sh	d0,#-3
.L607:
	add	d4,d0,#2
.L391:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   888          /* Find the port configured for the Signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   889          if(ptrSigConfig->idxDcmDspControlInfo_u16 > 0u)
	jeq	d15,#0,.L53
.L608:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   890          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   891              ptrWriteFnc = ptrControlSigConfig->adrWriteFnc_cpv;
	ld.a	a6,[a4]8
.L393:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   892              /*Write DID using ASYNC/SYNC/Sender Receiver port*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   893              Dcm_Prv_WriteDidUsePort(dataNegRespCode_u8,pMsgContext,ptrWriteFnc,ptrDidConfig,posnDidSignal_u16);
	mov.aa	a4,a12
.L390:
	ld.a	a5,[a10]4
.L394:
	mov.aa	a7,a13
.L395:
	call	Dcm_Prv_WriteDidUsePort
.L392:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   894              if(dataRetWriteFunc_u8 != E_OK)
	ld.bu	d4,[a14]
.L609:
	jeq	d4,#0,.L54
.L610:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   895               {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   896  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   897                  Rtn_InfrastureError=Dcm_IsInfrastructureErrorPresent_b(dataRetWriteFunc_u8);
	call	Dcm_IsInfrastructureErrorPresent_b
.L396:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   898  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   899                   if ((((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) ||
	ld.bu	d15,[a15]11
.L611:
	jeq	d15,#1,.L55
.L612:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   900                       (ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER) ||
	jeq	d15,#4,.L56
.L613:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   901                        ((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE))))&&(Rtn_InfrastureError == TRUE))
	jeq	d15,#2,.L57
.L614:
	jne	d15,#3,.L58
.L57:
.L56:
.L55:
	jne	d2,#1,.L59
.L615:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   902  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   903                    {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   904  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   905  #if((DCM_CFG_DSP_WRITE_ASYNCH_CS_ENABLED != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   906                            (DCM_CFG_DSP_WRITE_SYNCH_CS_ENABLED != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   907                             (DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   908                            /* General Reject is sent when there is Infrastructure error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   909                            *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L616:
	st.b	[a12],d15
.L617:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   910                            dataRetWriteFunc_u8 = DCM_INFRASTRUCTURE_ERROR;
	mov	d15,#128
.L618:
	st.b	[a14],d15
.L59:
.L58:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   911  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   912                    }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   913                  /*Set the variable to TRUE to break for loop*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   914                   s_loopbreak_b =TRUE;
	movh.a	a15,#@his(s_loopbreak_b)
.L388:
	lea	a15,[a15]@los(s_loopbreak_b)
.L619:
	mov	d15,#1
.L620:
	st.b	[a15],d15
.L621:
	j	.L60
.L54:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   915               }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   916               else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   917               {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   918                   /* Write Operation successfull*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   919                    *dataNegRespCode_u8=0x00;
	mov	d15,#0
.L622:
	st.b	[a12],d15
.L623:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   920                    Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_stDspWdbiOpStatus_u8)
.L397:
	lea	a15,[a15]@los(Dcm_stDspWdbiOpStatus_u8)
.L624:
	mov	d15,#0
.L625:
	st.b	[a15],d15
.L60:
	j	.L61
.L53:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   921               }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   922          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   923          else
.L61:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   924          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   925  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   926              if((ptrSigConfig->usePort_u8 == USE_BLOCK_ID))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   927              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   928                  /* NvRam  interface is used for writing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   929                  Dcm_Prv_WriteDIDNvRam(dataNegRespCode_u8,pMsgContext,ptrSigConfig,posnDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   930              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   931  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   932          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   933          if(s_loopbreak_b == TRUE)
	movh.a	a15,#@his(s_loopbreak_b)
	lea	a15,[a15]@los(s_loopbreak_b)
	ld.bu	d15,[a15]
.L626:
	jne	d15,#1,.L62
.L627:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   934          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   935              /* Write Operation is not successfull or pending*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   936              s_loopbreak_b = FALSE;
	movh.a	a15,#@his(s_loopbreak_b)
	lea	a15,[a15]@los(s_loopbreak_b)
.L628:
	mov	d15,#0
.L629:
	st.b	[a15],d15
.L630:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   937              break;
	j	.L63
.L62:
	add	d8,#1
.L386:
	extr.u	d8,d8,#0,#16
.L51:
	ld.hu	d15,[a13]2
.L631:
	jge.u	d8,d15,.L64
.L632:
	movh.a	a14,#@his(dataRetWriteFunc_u8)
	lea	a14,[a14]@los(dataRetWriteFunc_u8)
	ld.bu	d15,[a14]
.L633:
	jeq	d15,#0,.L52
.L64:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   938          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   939      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   940  }
.L63:
	ret
.L310:
	
__Dcm_Prv_WriteNormalDID_function_end:
	.size	Dcm_Prv_WriteNormalDID,__Dcm_Prv_WriteNormalDID_function_end-Dcm_Prv_WriteNormalDID
.L195:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDidMaxLenCheck',code,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDidMaxLenCheck'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   941  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   942  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   943  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   944   Function name    : Dcm_Prv_WriteDidMaxLenCheck
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   945   Syntax           : Dcm_Prv_WriteDidMaxLenCheck(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   946   Description      : TRACE[SWS_Dcm_00473] This function checks the requested maximum DID Data length from the request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   947                      If requested data length exceeds the maximum data length as per configured max data size then
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   948                      this function sets negative repsonse  DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   949   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   950                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   951   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   952  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   953  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   954  static FUNC(void,DCM_CODE) Dcm_Prv_WriteDidMaxLenCheck
; Function Dcm_Prv_WriteDidMaxLenCheck
.L127:
Dcm_Prv_WriteDidMaxLenCheck:	.type	func
	mov.aa	a12,a4
.L399:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   955                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   956                               P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   957  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   958      /* Variable to store the length of data record */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   959  VAR(uint16,AUTOMATIC)  nrLenDataRec_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   960  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   961  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   962        /*Check if the did is a range did or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   963        if(s_Dcm_idxwdbiDidIndexType.dataRange_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   964  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   965          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   966             /* Copy the total valid length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   967             nrLenDataRec_u16 = (Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].dataMaxDidLen_u16+2u);
	movh.a	a15,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a15,[a15]@los(s_Dcm_idxwdbiDidIndexType)
.L638:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L639:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L640:
	addsc.a	a15,a15,d15,#0
.L641:
	ld.hu	d15,[a15]4
.L642:
	add	d15,#2
	extr.u	d0,d15,#0,#16
.L400:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   968             /* Check for fixed length signals is  using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   969             if(Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].dataFixedLength_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   970             {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   971                 /* Check for exact length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   972                  if(pMsgContext->reqDataLen != nrLenDataRec_u16)
	ld.w	d15,[a5]16
.L643:
	ld.bu	d1,[a15]6
.L644:
	jeq	d1,#0,.L65
.L645:
	jeq	d15,d0,.L66
.L646:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   973                  {   /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   974                      *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L647:
	st.b	[a12],d15
.L66:
	j	.L67
.L65:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   975                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   976             }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   977             else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   978             {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   979                 /* Check for length within max range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   980                 if(pMsgContext->reqDataLen > nrLenDataRec_u16)
	jge.u	d0,d15,.L68
.L648:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   981                 {   /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   982                     *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L649:
	st.b	[a12],d15
.L650:
	j	.L69
.L68:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   983                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   984                 else  if(DcmAppl_DcmCheckWDBIReqLen(s_dataDID_u16,(pMsgContext->reqDataLen-2u))!= E_OK)
	movh.a	a15,#@his(s_dataDID_u16)
	lea	a15,[a15]@los(s_dataDID_u16)
	ld.hu	d4,[a15]0
.L651:
	add	d5,d15,#-2
	call	DcmAppl_DcmCheckWDBIReqLen
.L398:
	jeq	d2,#0,.L70
.L652:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   985                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   986                     /* For application to do the exact length check in case of varaible length signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   987                    /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   988                     *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L653:
	st.b	[a12],d15
.L654:
	j	.L71
.L70:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   989                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   990                 else
.L71:
.L69:
.L67:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   991                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   992                  /*Do nothing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   993                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   994             }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   995          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   996  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   997          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   998          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	   999             nrLenDataRec_u16 = (uint16)(Dcm_DIDRangeConfig_cast[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].dataMaxDidLen_u16+2u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1000             /*Check Requested Range  DID Length check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1001             if(pMsgContext->reqDataLen > nrLenDataRec_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1002             {   /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1003                 *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1004             }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1005             else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1006             {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1007  			   if(DcmAppl_DcmCheckWDBIReqLen(s_dataDID_u16,(pMsgContext->reqDataLen-2u))!= E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1008  			   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1009                 /* For application to do the exact length check in case of varaible length signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1010                 /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1011                *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1012  			   }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1013             }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1014          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1015  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1016  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1017  }
	ret
.L321:
	
__Dcm_Prv_WriteDidMaxLenCheck_function_end:
	.size	Dcm_Prv_WriteDidMaxLenCheck,__Dcm_Prv_WriteDidMaxLenCheck_function_end-Dcm_Prv_WriteDidMaxLenCheck
.L200:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Priv_DidWriteSupport',code,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Priv_DidWriteSupport'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1018  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1019  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1020   Function name    : Dcm_Priv_DidWriteSupport
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1021   Syntax           : Dcm_Priv_DidWriteSupport(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1022   Description      : TRACE[SWS_Dcm_00469],[SWS_Dcm_00470],[SWS_Dcm_00822]This function checks the Maximum data length for
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1023                      requested Did , Session check , security check and mode rule check.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1024                      If any of the check fails it will update corresponding negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1025   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1026                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1027   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1028  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1029  static FUNC(void,DCM_CODE) Dcm_Priv_DidWriteSupport
; Function Dcm_Priv_DidWriteSupport
.L129:
Dcm_Priv_DidWriteSupport:	.type	func
	mov.aa	a12,a4
.L402:
	mov.aa	a13,a5
.L403:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1030                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1031                               P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1032                               )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1033  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1034  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1035  /* Variable to hold the configured sessions value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1036  VAR (uint32,AUTOMATIC) dataSessionMask_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1037  /* Pointer to extended configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1038  P2CONST(Dcm_ExtendedDIDConfig_tst,AUTOMATIC,DCM_INTERN_CONST) adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1039  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1040  #if ( DCM_CFG_DIDRANGE_EXTENSION != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1041       if(s_Dcm_idxwdbiDidIndexType.dataRange_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1042       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1043  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1044  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1045          adrExtendedConfig_pcst = Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].adrExtendedConfig_pcst;
	movh.a	a14,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a14,[a14]@los(s_Dcm_idxwdbiDidIndexType)
.L659:
	ld.hu	d15,[a14]6
	sha	d15,#4
.L660:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L661:
	addsc.a	a15,a15,d15,#0
.L662:
	ld.a	a15,[a15]12
.L404:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1046  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1047  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1048  #if ( DCM_CFG_DIDRANGE_EXTENSION != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1049       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1050       else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1051       {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1052          adrExtendedConfig_pcst = Dcm_DIDRangeConfig_cast[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1053       }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1054  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1055      /* Copy the session level for write configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1056      dataSessionMask_u32  = adrExtendedConfig_pcst->dataAllowedSessWrite_u32;
	ld.w	d15,[a15]12
.L406:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1057      /* Check if The Write Access is configured for DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1058      if (((Dcm_DsldGetActiveSessionMask_u32 () & dataSessionMask_u32) != 0x0uL))
	call	Dcm_DsldGetActiveSessionMask_u32
.L401:
	and	d2,d15
.L663:
	jeq	d2,#0,.L72
.L664:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1059      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1060          Dcm_Prv_WriteDidMaxLenCheck(dataNegRespCode_u8,pMsgContext);
	mov.aa	a4,a12
.L408:
	mov.aa	a5,a13
.L410:
	call	Dcm_Prv_WriteDidMaxLenCheck
.L409:
	j	.L73
.L72:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1061  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1062  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1063      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1064      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1065      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1066          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L407:
	st.b	[a12],d15
.L73:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1067      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1068  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1069      if(*dataNegRespCode_u8 == 0)
	ld.bu	d15,[a12]
.L665:
	jne	d15,#0,.L74
.L666:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1070      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1071        /* Call the function to see if there is a write support of the DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1072        dataRetWriteSupport_en = Dcm_GetSupportOfIndex(&s_Dcm_idxwdbiDidIndexType, DCM_SUPPORT_WRITE,dataNegRespCode_u8);
	movh.a	a15,#@his(dataRetWriteSupport_en)
.L405:
	lea	a15,[a15]@los(dataRetWriteSupport_en)
.L667:
	mov	d4,#1
.L668:
	mov.aa	a4,a14
	mov.aa	a5,a12
.L411:
	call	Dcm_GetSupportOfIndex
.L412:
	st.w	[a15],d2
.L669:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1073        /* If the conditions of writing is supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1074        if(dataRetWriteSupport_en == DCM_SUPPORT_OK)
	ld.w	d15,[a15]
.L670:
	jne	d15,#0,.L75
.L671:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1075        {   /*As all chekcs are passed with session and security  Move the state to DCM_PROCESSSERVICE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1076            Dcm_stDspWdbiOpStatus_u8  = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_stDspWdbiOpStatus_u8)
	lea	a15,[a15]@los(Dcm_stDspWdbiOpStatus_u8)
.L672:
	mov	d15,#0
.L673:
	st.b	[a15],d15
.L674:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1077            Dcm_SrvOpstatus_u8 = DCM_PROCESSSERVICE;
	movh.a	a15,#@his(Dcm_SrvOpstatus_u8)
	lea	a15,[a15]@los(Dcm_SrvOpstatus_u8)
.L675:
	mov	d15,#5
.L676:
	st.b	[a15],d15
.L677:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1078            dataRetWriteFunc_u8 = E_OK;
	movh.a	a15,#@his(dataRetWriteFunc_u8)
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L678:
	mov	d15,#0
.L679:
	st.b	[a15],d15
.L75:
.L74:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1079        }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1080      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1081  }
	ret
.L325:
	
__Dcm_Priv_DidWriteSupport_function_end:
	.size	Dcm_Priv_DidWriteSupport,__Dcm_Priv_DidWriteSupport_function_end-Dcm_Priv_DidWriteSupport
.L205:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Priv_DidWriteFuncAvailableCheck',code,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Priv_DidWriteFuncAvailableCheck'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1082  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1083  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1084   Function name    :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1085   Syntax           : Dcm_Priv_DidWriteFuncAvailableCheck(dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1086   Description      : TRACE[SWS_Dcm_00468] This function checks if  Write function  is configured  for requested DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1087   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1088   Return value     : E_OK : Write Function is configured for DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1089                      E_NOT_OK : Write Fucntion is not configured for DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1090  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1091  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Priv_DidWriteFuncAvailableCheck
; Function Dcm_Priv_DidWriteFuncAvailableCheck
.L131:
Dcm_Priv_DidWriteFuncAvailableCheck:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1092                             (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1093  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1094  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1095  /* Loacal variable to set return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1096  VAR(Std_ReturnType, AUTOMATIC) dataRetVal_u8 = E_NOT_OK;
	mov	d8,#1
.L413:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1097  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1098   /* Local Loop variable for DID Signal index  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1099  VAR(uint16,AUTOMATIC)  idxDidSignal_u16 = 0;
	mov	d15,#0
.L414:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1100  /* Local  variable for Number of  Signals in DID  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1101  VAR(uint16,AUTOMATIC)  nrDidSignal_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1102  /* Local variable for Configured DID Signal port  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1103  VAR(uint8,AUTOMATIC)   useDidPort_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1104  /* Local variable for active session  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1105  VAR(uint32,AUTOMATIC)  alloweWritedSession_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1106  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1107  /* Local pointer for DID Signal write function  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1108  P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)  ptrWriteFnc = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1109  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1110  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1111  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1112      /*Check if the DID currently under process is a normal DID or range DID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1113      if(s_Dcm_idxwdbiDidIndexType.dataRange_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1114  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1115      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1116  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1117          nrDidSignal_u16 = Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].nrSig_u16;
	movh.a	a15,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a15,[a15]@los(s_Dcm_idxwdbiDidIndexType)
.L684:
	ld.hu	d0,[a15]6
	sha	d0,#4
.L685:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L686:
	addsc.a	a15,a15,d0,#0
.L687:
	ld.hu	d0,[a15]2
.L416:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1118  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1119          useDidPort_u8 = Dcm_DspDataInfo_st[Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].\ 
	ld.a	a2,[a15]8
.L688:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1120                          adrDidSignalConfig_pcst[idxDidSignal_u16].idxDcmDspDatainfo_u16].usePort_u8;
	addsc.a	a2,a2,d15,#2
.L689:
	ld.hu	d15,[a2]2
.L415:
	sha	d15,#4
.L690:
	movh.a	a2,#@his(Dcm_DspDataInfo_st)
	lea	a2,[a2]@los(Dcm_DspDataInfo_st)
.L691:
	addsc.a	a2,a2,d15,#0
.L692:
	ld.bu	d1,[a2]11
.L417:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1121  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1122          alloweWritedSession_u32 = Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].\ 
	ld.a	a15,[a15]12
.L693:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1123                                      adrExtendedConfig_pcst->dataAllowedSessWrite_u32;
	ld.w	d2,[a15]12
.L418:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1124  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1125          ptrWriteFnc = Dcm_DspDid_ControlInfo_st[Dcm_DspDataInfo_st[Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1126                        adrDidSignalConfig_pcst[idxDidSignal_u16].idxDcmDspDatainfo_u16].idxDcmDspControlInfo_u16].adrWriteFnc_cpv;
	ld.hu	d15,[a2]8
	sha	d15,#4
.L694:
	movh.a	a15,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a15,[a15]@los(Dcm_DspDid_ControlInfo_st)
.L695:
	addsc.a	a15,a15,d15,#0
.L696:
	ld.a	a15,[a15]8
.L419:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1127  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1128          /* Check if the Write function is configured for all signals */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1129          for(idxDidSignal_u16=0x0; idxDidSignal_u16 < nrDidSignal_u16; idxDidSignal_u16++)
	mov	d15,#0
.L420:
	j	.L76
.L77:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1130          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1131              if((useDidPort_u8 != USE_BLOCK_ID)&&(alloweWritedSession_u32 >0x00u)&&(ptrWriteFnc == NULL_PTR ))
	jeq	d1,#0,.L78
.L697:
	jeq	d2,#0,.L79
.L698:
	jnz.a	a15,.L80
.L699:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1132              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1133                      break;
	j	.L81
.L80:
.L79:
.L78:
	add	d15,#1
.L421:
	extr.u	d15,d15,#0,#16
.L76:
	jlt.u	d15,d0,.L77

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1134              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1135          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1136          if(idxDidSignal_u16 == nrDidSignal_u16)
.L81:
	jne	d15,d0,.L82
.L700:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1137          {   /* Write fucntion is configured for DID signal */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1138              dataRetVal_u8 =E_OK;
	mov	d8,#0
.L701:
	j	.L83
.L82:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1139          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1140          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1141          {   /*DID sent from tester has no Write Access - Set NRC Request Out Of Range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1142              *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L422:
	st.b	[a4],d15
.L702:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1143              /* Report development error "DCM_E_NO_WRITE_ACCESS " */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1144              DCM_DET_ERROR(DCM_WDBI_ID , DCM_E_NO_WRITE_ACCESS )
	mov	d4,#53
	mov	d5,#0
	mov	d6,#158
	mov	d7,#27
	call	Det_ReportError
.L83:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1145          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1146  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1147      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1148  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1149      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1150      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1151           ptrWriteFnc = Dcm_DIDRangeConfig_cast[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].adrWriteFnc_pfct;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1152            if(ptrWriteFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1153            {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1154                dataRetVal_u8 = E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1155            }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1156            else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1157            {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1158                /*DID sent from tester has no Write Access - Set NRC Request Out Of Range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1159                *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1160                /* Report development error "DCM_E_NO_WRITE_ACCESS " */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1161                DCM_DET_ERROR(DCM_WDBI_ID , DCM_E_NO_WRITE_ACCESS )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1162            }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1163      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1164  # endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1165  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1166   return dataRetVal_u8;
	mov	d2,d8
.L423:
	j	.L84

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1167  }
.L84:
	ret
.L331:
	
__Dcm_Priv_DidWriteFuncAvailableCheck_function_end:
	.size	Dcm_Priv_DidWriteFuncAvailableCheck,__Dcm_Priv_DidWriteFuncAvailableCheck_function_end-Dcm_Priv_DidWriteFuncAvailableCheck
.L210:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_DidAvailableCheck',code,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_DidAvailableCheck'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1168  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1169  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1170   Function name    : Dcm_Prv_DidAvailableCheck
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1171   Syntax           : Dcm_Prv_DidAvailableCheck(dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1172   Description      : TRACE[SWS_Dcm_00467] This function checks if requested DID is configured in server and
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1173                      Update negative response code  if not available .
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1174   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1175  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1176  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1177  static FUNC(void,DCM_CODE) Dcm_Prv_DidAvailableCheck
; Function Dcm_Prv_DidAvailableCheck
.L133:
Dcm_Prv_DidAvailableCheck:	.type	func
	mov.aa	a15,a4
.L425:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1178                                      (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1179  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1180  /* Local  Variable to store the return value of Dcm_GetIndexOfDID function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1181      VAR(Std_ReturnType,AUTOMATIC)   dataRetGetDID_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1182  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1183      /* Check if the DID sent from tester is configured in Server */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1184      dataRetGetDID_u8 = Dcm_GetIndexOfDID(s_dataDID_u16, &s_Dcm_idxwdbiDidIndexType);
	movh.a	a2,#@his(s_dataDID_u16)
	lea	a2,[a2]@los(s_dataDID_u16)
	ld.hu	d4,[a2]0
.L707:
	movh.a	a4,#@his(s_Dcm_idxwdbiDidIndexType)
.L424:
	lea	a4,[a4]@los(s_Dcm_idxwdbiDidIndexType)
	call	Dcm_GetIndexOfDID
.L427:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1185  #if(DCM_CFG_DSP_NUMISDIDAVAIL>0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1186      /*Check if Requested DID is configured and if the did is a range did or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1187      if ((dataRetGetDID_u8 == E_OK)&& (s_Dcm_idxwdbiDidIndexType.dataRange_b==FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1188      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1189          /* Check if the DID is supported in current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1190          if(*Dcm_DIDIsAvail[Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].idxDIDSupportedFnc_u16] != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1191          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1192              if((*(IsDIDAvailFnc_pf)(Dcm_DIDIsAvail[Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1193                                                     idxDIDSupportedFnc_u16]))(s_dataDID_u16)!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1194              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1195                  dataRetGetDID_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1196              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1197          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1198      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1199  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1200      /* Requested DID is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1201      if(dataRetGetDID_u8 == E_OK)
	jne	d2,#0,.L85
.L708:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1202      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1203          /*DID is cofigure for Write Access*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1204          dataRetGetDID_u8 = Dcm_Priv_DidWriteFuncAvailableCheck(dataNegRespCode_u8);
	mov.aa	a4,a15
.L428:
	call	Dcm_Priv_DidWriteFuncAvailableCheck
.L429:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1205  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1206  		    if(dataRetGetDID_u8 == E_OK)
	jne	d2,#0,.L86
.L709:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1207              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1208                 /* If DID is available and Witer funtion is configured move the state to next*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1209                 Dcm_SrvOpstatus_u8 = DCM_CHECKDATA;
	movh.a	a15,#@his(Dcm_SrvOpstatus_u8)
.L426:
	lea	a15,[a15]@los(Dcm_SrvOpstatus_u8)
.L710:
	mov	d15,#4
.L711:
	st.b	[a15],d15
.L86:
	j	.L87
.L85:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1210                 /* Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1211              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1212      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1213      else if(dataRetGetDID_u8 == DCM_E_PENDING)
	mov	d15,#10
.L712:
	jne	d15,d2,.L88
.L713:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1214      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1215          dataRetWriteFunc_u8 = DCM_E_PENDING;
	movh.a	a15,#@his(dataRetWriteFunc_u8)
.L430:
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L714:
	mov	d15,#10
.L715:
	st.b	[a15],d15
.L716:
	j	.L89
.L88:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1216      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1217      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1218      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1219          /*DID sent from tester is incorrect - Set NRC Request Out Of Range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1220          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
	mov	d15,#49
.L717:
	st.b	[a15],d15
.L89:
.L87:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1221         /* Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1222      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1223  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1224  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1225  }
	ret
.L339:
	
__Dcm_Prv_DidAvailableCheck_function_end:
	.size	Dcm_Prv_DidAvailableCheck,__Dcm_Prv_DidAvailableCheck_function_end-Dcm_Prv_DidAvailableCheck
.L215:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WdbiStateProcessing',code,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WdbiStateProcessing'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1226  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1227  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1228  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1229  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1230  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1231   Function name    : Dcm_Prv_WriteRangeDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1232   Syntax           : Dcm_Prv_WriteRangeDID(pMsgContext,dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1233   Description      : TRACE[[SWS_Dcm_00805]] This function perform write opration if requested DID is Range DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1234   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1235                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1236   Return value     : none
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1237  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1238  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1239  static FUNC(void,DCM_CODE) Dcm_Prv_WriteRangeDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1240                          (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1241                           P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1242                          )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1243  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1244  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1245   P2CONST(Dcm_DIDRangeConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidRangeConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1246   P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)  ptrWriteFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1247   ptrDidRangeConfig = &Dcm_DIDRangeConfig_cast[s_Dcm_idxwdbiDidIndexType.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1248   ptrWriteFnc = ptrDidRangeConfig->adrWriteFnc_pfct;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1249   if(ptrWriteFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1250   {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1251      /*Check if Fixed length or obtainable using ReadDataLengthFnc*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1252      if(ptrDidRangeConfig->nrRangeUsePort_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1253      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1254          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1255           * RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1256          dataRetWriteFunc_u8 = (*(WriteFncRange1_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1257                                (s_dataDID_u16,&pMsgContext->reqData[0x2],Dcm_stDspWdbiOpStatus_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1258                                (uint16)(pMsgContext->reqDataLen-0x02u),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1259          /* Check for infrastructure error  incase of case RTE use ports */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1260  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1261          if((Dcm_IsInfrastructureErrorPresent_b(dataRetWriteFunc_u8) != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1262  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1263          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1264              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1265              Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1266          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1267      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1268      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1269      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1270          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1271           *  RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1272          dataRetWriteFunc_u8 = (*(WriteFncRange1_pfct)(ptrWriteFnc))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1273                                (s_dataDID_u16,&pMsgContext->reqData[0x2],Dcm_stDspWdbiOpStatus_u8,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1274                                (uint16)(pMsgContext->reqDataLen-0x02u),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1275      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1276   }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1277  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1278  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1279  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1280  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1281   Function name    : Dcm_Prv_WdbiStateProcessing
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1282   Syntax           : Dcm_Prv_WdbiStateProcessing(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1283   Description      : TRACE[SWS_CanTp_00210] This function chekcs the DCM states while processing the WDBI service request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1284   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1285                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1286  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1287   Return value     : void
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1288  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1289  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1290  static FUNC(void,DCM_CODE) Dcm_Prv_WdbiStateProcessing
; Function Dcm_Prv_WdbiStateProcessing
.L135:
Dcm_Prv_WdbiStateProcessing:	.type	func
	mov.aa	a12,a4
.L433:
	mov.aa	a15,a5
.L434:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1291                                      ( P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1292                                        P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1293                                       )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1294  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1295  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1296  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1297  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1298     /* Check WDBI State Machine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1299     if(Dcm_SrvOpstatus_u8 == DCM_INITIAL)
	movh.a	a13,#@his(Dcm_SrvOpstatus_u8)
	lea	a13,[a13]@los(Dcm_SrvOpstatus_u8)
	ld.bu	d15,[a13]
.L722:
	jne	d15,#0,.L90
.L723:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1300     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1301         /* Check for the minimum request length equal to 0x03 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1302         /* 2 bytes DID + 1 Byte Data */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1303         if(pMsgContext->reqDataLen >= DCM_DSP_WDBI_MINREQLEN)
	ld.w	d15,[a15]16
.L724:
	jlt.u	d15,#3,.L91
.L725:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1304         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1305             /* Extract the DID information from the request*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1306             s_dataDID_u16 = (uint16)(pMsgContext->reqData[0]);
	ld.a	a2,[a15]4
.L726:
	movh.a	a4,#@his(s_dataDID_u16)
.L431:
	lea	a4,[a4]@los(s_dataDID_u16)
.L727:
	ld.bu	d15,[a2]
.L728:
	st.h	[a4],d15
.L729:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1307             s_dataDID_u16 = s_dataDID_u16 <<8u;
	ld.hu	d15,[a4]0
.L730:
	sha	d15,d15,#8
.L731:
	st.h	[a4],d15
.L732:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1308             s_dataDID_u16 |= (uint16)(pMsgContext->reqData[1]);
	ld.hu	d0,[a4]0
.L733:
	ld.bu	d15,[a2]1
.L734:
	or	d0,d15
	st.h	[a4],d0
.L735:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1309  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1310             /* DID is available in Server Configuration*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1311              Dcm_Prv_DidAvailableCheck(dataNegRespCode_u8);
	mov.aa	a4,a12
.L435:
	call	Dcm_Prv_DidAvailableCheck
.L432:
	j	.L92
.L91:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1312         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1313         else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1314         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1315             /*Set NRC Request Length incorrect */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1316             *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L736:
	st.b	[a12],d15
.L92:
.L90:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1317         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1318     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1319  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1320     if(Dcm_SrvOpstatus_u8 == DCM_CHECKDATA)
	ld.bu	d15,[a13]
.L737:
	jne	d15,#4,.L93
.L738:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1321     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1322        Dcm_Priv_DidWriteSupport(dataNegRespCode_u8, pMsgContext);
	mov.aa	a4,a12
.L436:
	mov.aa	a5,a15
.L437:
	call	Dcm_Priv_DidWriteSupport
.L93:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1323     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1324  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1325  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1326     if(Dcm_SrvOpstatus_u8 == DCM_PROCESSSERVICE)
	ld.bu	d15,[a13]
.L739:
	jne	d15,#5,.L94
.L740:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1327     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1328         /* loop for all signals for this DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1329  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1330         /*Check if the did is a range did or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1331         if(s_Dcm_idxwdbiDidIndexType.dataRange_b == FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1332  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1333         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1334  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1335             Dcm_Prv_WriteNormalDID(dataNegRespCode_u8,pMsgContext);
	mov.aa	a4,a12
.L438:
	mov.aa	a5,a15
.L439:
	call	Dcm_Prv_WriteNormalDID
.L94:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1336  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1337         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1338  #if (DCM_CFG_DIDRANGE_EXTENSION!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1339         else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1340         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1341             Dcm_Prv_WriteRangeDID(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1342         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1343  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1344     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1345  }
	ret
.L342:
	
__Dcm_Prv_WdbiStateProcessing_function_end:
	.size	Dcm_Prv_WdbiStateProcessing,__Dcm_Prv_WdbiStateProcessing_function_end-Dcm_Prv_WdbiStateProcessing
.L220:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDIDServevice_status',code,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_Prv_WriteDIDServevice_status'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1346  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1347  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1348   Function name    : Dcm_Prv_WriteDIDServevice_status
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1349   Syntax           : Dcm_Prv_WriteDIDServevice_status(dataNegRespCode_u8,pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1350   Description      : TRACE[SWS_CanTp_00210] This function updated the status of WDBI Service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1351   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1352                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1353  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1354   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1355  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1356  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1357  static FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_WriteDIDServevice_status
; Function Dcm_Prv_WriteDIDServevice_status
.L137:
Dcm_Prv_WriteDIDServevice_status:	.type	func
	mov.aa	a6,a4
.L442:
	mov.aa	a15,a5
.L443:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1358                                      (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1359                                       P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1360                                       )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1361  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1362  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1363  /* Loacal variable to set return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1364  VAR(Std_ReturnType, AUTOMATIC) dataRetVal_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1365  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1366  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1367  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1368      if( (dataRetWriteFunc_u8 == E_OK) && (*dataNegRespCode_u8 == 0x00) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1369      {   /* Frame the positive response by updating DID in response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1370          pMsgContext->resData[0] = pMsgContext->reqData[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1371          pMsgContext->resData[1] = pMsgContext->reqData[1];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1372          pMsgContext->resDataLen = 0x02;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1373          /* Reset the state of WDBI state machine to IDLE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1374          Dcm_SrvOpstatus_u8  = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1375          Dcm_DidSignalIdx_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1376          Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
	movh.a	a5,#@his(Dcm_stDspWdbiOpStatus_u8)
.L441:
	lea	a5,[a5]@los(Dcm_stDspWdbiOpStatus_u8)
.L745:
	movh.a	a2,#@his(dataRetWriteFunc_u8)
	lea	a2,[a2]@los(dataRetWriteFunc_u8)
	ld.bu	d0,[a2]
.L746:
	jne	d0,#0,.L95
.L747:
	ld.bu	d15,[a6]
.L748:
	jne	d15,#0,.L96
.L749:
	ld.a	a2,[a15]
.L750:
	ld.a	a4,[a15]4
.L440:
	ld.bu	d15,[a4]
.L751:
	st.b	[a2],d15
.L752:
	ld.a	a2,[a15]
.L753:
	ld.a	a4,[a15]4
.L754:
	ld.bu	d15,[a4]1
.L755:
	st.b	[a2]1,d15
.L756:
	mov	d15,#2
.L757:
	st.w	[a15]12,d15
.L758:
	movh.a	a15,#@his(Dcm_SrvOpstatus_u8)
.L444:
	lea	a15,[a15]@los(Dcm_SrvOpstatus_u8)
.L759:
	mov	d15,#0
.L760:
	st.b	[a15],d15
.L761:
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L762:
	mov	d15,#0
.L763:
	st.h	[a15],d15
.L764:
	mov	d15,#0
.L765:
	st.b	[a5],d15
.L766:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1377          dataRetVal_u8=E_OK;
	mov	d2,#0
.L445:
	j	.L97
.L96:
.L95:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1378      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1379      /* If the write Function needs more time for writing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1380      else if((dataRetWriteFunc_u8 == DCM_E_PENDING) || (dataRetWriteSupport_en == DCM_SUPPORT_CONDITION_PENDING))
	mov	d15,#10
.L767:
	jeq	d15,d0,.L98
.L768:
	movh.a	a15,#@his(dataRetWriteSupport_en)
.L446:
	lea	a15,[a15]@los(dataRetWriteSupport_en)
	ld.w	d15,[a15]
.L769:
	jne	d15,#4,.L99
.L98:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1381      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1382          /* Remain in the same state, Write function will be called again in next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1383          Dcm_stDspWdbiOpStatus_u8 = DCM_PENDING;
	mov	d15,#1
.L770:
	st.b	[a5],d15
.L771:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1384          *dataNegRespCode_u8=0x00;
	mov	d15,#0
.L772:
	st.b	[a6],d15
.L773:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1385          dataRetVal_u8=DCM_E_PENDING;
	mov	d2,#10
.L447:
	j	.L100
.L99:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1386      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1387      else /* Return is E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1388      {   /*Set Negative response code to DCM_E_GENERALREJECT*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1389          if(*dataNegRespCode_u8 == 0x00)
	ld.bu	d15,[a6]
.L774:
	jne	d15,#0,.L101
.L775:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1390          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1391              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L776:
	st.b	[a6],d15
.L101:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1392          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1393  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1394          Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L777:
	st.b	[a5],d15
.L778:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1395          dataRetVal_u8=E_NOT_OK;
	mov	d2,#1
.L100:
.L97:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1396      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1397      /* Check if Negative response is set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1398      if(*dataNegRespCode_u8 != 0x0)
	ld.bu	d15,[a6]
.L779:
	jeq	d15,#0,.L102
.L780:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1399      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1400        dataRetVal_u8=E_NOT_OK;
	mov	d2,#1
.L781:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1401        /* Reset the state of WDBI state machine to IDLE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1402        Dcm_SrvOpstatus_u8  = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_SrvOpstatus_u8)
	lea	a15,[a15]@los(Dcm_SrvOpstatus_u8)
.L782:
	mov	d15,#0
.L783:
	st.b	[a15],d15
.L784:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1403        Dcm_DidSignalIdx_u16 = 0x0;
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L785:
	mov	d15,#0
.L786:
	st.h	[a15],d15
.L787:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1404        Dcm_stDspWdbiOpStatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L788:
	st.b	[a5],d15
.L102:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1405      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1406  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1407  return dataRetVal_u8;
	j	.L103

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1408  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1409  }
.L103:
	ret
.L345:
	
__Dcm_Prv_WriteDIDServevice_status_function_end:
	.size	Dcm_Prv_WriteDIDServevice_status,__Dcm_Prv_WriteDIDServevice_status_function_end-Dcm_Prv_WriteDIDServevice_status
.L225:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_DcmWriteDataByIdentifier',code,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_DcmWriteDataByIdentifier'
	.align	2
	
	.global	Dcm_DcmWriteDataByIdentifier

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1410  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1411  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1412   Function name    : Dcm_DcmWriteDataByIdentifier
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1413   Syntax           : Dcm_DcmWriteDataByIdentifier(OpStatus,pMsgContext,dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1414   Description      : TRACE[SWS_Dcm_00255] This function is called by DSD, when SID is set to 0x2E, this service is
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1415                      provided in DSP module and configured in Service table.The WriteDataByIdentifier service allows the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1416                      client to write information into the server at an internal location specified by the  provided
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1417                      data identifier.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1418   Parameter        : Dcm_NegativeResponseCodeType: Pointer to negative response code
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1419                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1420                      Dcm_SrvOpStatusType: Service Opstatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1421   Return value     : Std_ReturnType
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1422  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1423  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1424  FUNC(Std_ReturnType,DCM_CODE) Dcm_DcmWriteDataByIdentifier
; Function Dcm_DcmWriteDataByIdentifier
.L139:
Dcm_DcmWriteDataByIdentifier:	.type	func
	mov.aa	a12,a4
.L449:
	mov.aa	a13,a5
.L450:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1425                                  (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1426                                   P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1427                                   P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1428  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1429  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1430  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1431      VAR(Std_ReturnType, AUTOMATIC) dataRetVal_u8;/*Return value for Nvm_WriteBlock*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1432  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1433  #if (DCM_CFG_DIDSUPPORT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1434      s_loopbreak_b = FALSE;
	movh.a	a15,#@his(s_loopbreak_b)
	lea	a15,[a15]@los(s_loopbreak_b)
.L467:
	mov	d15,#0
.L468:
	st.b	[a15],d15
.L469:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1435  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1436      /* Initilaization of local variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1437      *dataNegRespCode_u8 = 0x0;
	mov	d15,#0
.L470:
	st.b	[a13],d15
.L471:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1438      dataRetWriteFunc_u8 = E_OK;
	movh.a	a15,#@his(dataRetWriteFunc_u8)
	lea	a15,[a15]@los(dataRetWriteFunc_u8)
.L472:
	mov	d15,#0
.L473:
	st.b	[a15],d15
.L474:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1439      dataRetWriteSupport_en = DCM_SUPPORT_OK;
	movh.a	a15,#@his(dataRetWriteSupport_en)
	lea	a15,[a15]@los(dataRetWriteSupport_en)
.L475:
	mov	d15,#0
.L476:
	st.w	[a15],d15
.L477:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1440      dataRetVal_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1441      /* If OpStatus is set to DCM_CANCEL then call the ini function for resetting */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1442      if (OpStatus == DCM_CANCEL)
	jne	d4,#2,.L104
.L478:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1443      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1444          /* Call the Ini Function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1445          Dcm_Dcm_WDBIInit();
	call	Dcm_Dcm_WDBIInit
.L448:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1446          /* Set the return value to E_OK as the Ini function will always be serviced  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1447          dataRetVal_u8 = E_OK;
	mov	d2,#0
.L451:
	j	.L105
.L104:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1448      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1449      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1450      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1451          /* Process the WDBI Service Request  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1452          Dcm_Prv_WdbiStateProcessing(dataNegRespCode_u8,pMsgContext);
	mov.aa	a4,a13
.L453:
	mov.aa	a5,a12
.L454:
	call	Dcm_Prv_WdbiStateProcessing
.L452:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1453          /* Update the Service Return value and negative  response*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1454          dataRetVal_u8  =   Dcm_Prv_WriteDIDServevice_status(dataNegRespCode_u8,pMsgContext);
	mov.aa	a4,a13
.L455:
	mov.aa	a5,a12
.L456:
	call	Dcm_Prv_WriteDIDServevice_status
.L105:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1455      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1456          return dataRetVal_u8;
	j	.L106

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1457  }
.L106:
	ret
.L239:
	
__Dcm_DcmWriteDataByIdentifier_function_end:
	.size	Dcm_DcmWriteDataByIdentifier,__Dcm_DcmWriteDataByIdentifier_function_end-Dcm_DcmWriteDataByIdentifier
.L150:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Wdbi.Dcm_GetActiveWDBIDid',code,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.text.DcmDspUds_Wdbi.Dcm_GetActiveWDBIDid'
	.align	2
	
	.global	Dcm_GetActiveWDBIDid

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1458  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1459  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1460   Function name    : Dcm_GetActiveWDBIDid
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1461   Syntax           : Dcm_GetActiveWDBIDid(P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) dataDid_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1462   Description      : TRACE[SWS_Dcm_00255] his API returns the active DID being processed when WDBI service request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1463                      is being processed. This function is called from the Dcm API Dcm_GetActiveDid
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1464   Parameter        : dataDid_u16:  Parameter for updating of the DID under processing
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1465                      Dcm_MsgContextType : Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1466   Return value     : E_OK The parameter dataDid_u16 contains valid DID value in this case
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1467                      E_NOT_OK  The parameter dataDid_u16 contains invalid data in this case
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1468  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1469  FUNC(Std_ReturnType,DCM_CODE) Dcm_GetActiveWDBIDid(P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) dataDid_u16)
; Function Dcm_GetActiveWDBIDid
.L141:
Dcm_GetActiveWDBIDid:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1470  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1471      VAR(Std_ReturnType,AUTOMATIC) dataRetVal_u8; /* Variable to store the return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1472  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1473      /* Initialisation of local variables  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1474      dataRetVal_u8 = E_NOT_OK;
	mov	d2,#1
.L457:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1475  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1476      /* Check if the DID currently under process is a normal DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1477  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1478      if(s_Dcm_idxwdbiDidIndexType.dataRange_b==FALSE)
	movh.a	a15,#@his(s_Dcm_idxwdbiDidIndexType)
	lea	a15,[a15]@los(s_Dcm_idxwdbiDidIndexType)
.L505:
	ld.bu	d15,[a15]9
.L506:
	jne	d15,#0,.L107
.L507:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1479      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1480          /* Update the DID value currently under process */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1481          *dataDid_u16 = Dcm_DIDConfig[s_Dcm_idxwdbiDidIndexType.idxIndex_u16].dataDid_u16;
	ld.hu	d15,[a15]6
	sha	d15,#4
.L508:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L509:
	addsc.a	a15,a15,d15,#0
.L510:
	ld.hu	d15,[a15]0
.L511:
	st.h	[a4],d15
.L512:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1482          /* Update the return value to E_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1483          dataRetVal_u8 = E_OK;
	mov	d2,#0
.L513:
	j	.L108
.L107:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1484      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1485      else
.L108:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1486      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1487  #if (DCM_CFG_DIDRANGE_EXTENSION != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1488          /* Update the DID value currently under process */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1489          *dataDid_u16 = s_Dcm_idxwdbiDidIndexType.dataRangeDid_16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1490          /* Update the return value to E_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1491          dataRetVal_u8 = E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1492  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1493      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1494      return (dataRetVal_u8);
	j	.L109

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1495  }
.L109:
	ret
.L247:
	
__Dcm_GetActiveWDBIDid_function_end:
	.size	Dcm_GetActiveWDBIDid,__Dcm_GetActiveWDBIDid_function_end-Dcm_GetActiveWDBIDid
.L160:
	; End of function
	
	.sdecl	'.bss.DcmDspUds_Wdbi.Dcm_stDspWdbiOpStatus_u8',data,cluster('Dcm_stDspWdbiOpStatus_u8')
	.sect	'.bss.DcmDspUds_Wdbi.Dcm_stDspWdbiOpStatus_u8'
Dcm_stDspWdbiOpStatus_u8:	.type	object
	.size	Dcm_stDspWdbiOpStatus_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Wdbi.s_Dcm_idxwdbiDidIndexType',data,cluster('s_Dcm_idxwdbiDidIndexType')
	.sect	'.bss.DcmDspUds_Wdbi.s_Dcm_idxwdbiDidIndexType'
	.align	4
s_Dcm_idxwdbiDidIndexType:	.type	object
	.size	s_Dcm_idxwdbiDidIndexType,12
	.space	12
	.sdecl	'.bss.DcmDspUds_Wdbi.s_dataDID_u16',data,cluster('s_dataDID_u16')
	.sect	'.bss.DcmDspUds_Wdbi.s_dataDID_u16'
	.align	2
s_dataDID_u16:	.type	object
	.size	s_dataDID_u16,2
	.space	2
	.sdecl	'.bss.DcmDspUds_Wdbi.s_loopbreak_b',data,cluster('s_loopbreak_b')
	.sect	'.bss.DcmDspUds_Wdbi.s_loopbreak_b'
s_loopbreak_b:	.type	object
	.size	s_loopbreak_b,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Wdbi.dataRetWriteSupport_en',data,cluster('dataRetWriteSupport_en')
	.sect	'.bss.DcmDspUds_Wdbi.dataRetWriteSupport_en'
	.align	4
dataRetWriteSupport_en:	.type	object
	.size	dataRetWriteSupport_en,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Wdbi.dataRetWriteFunc_u8',data,cluster('dataRetWriteFunc_u8')
	.sect	'.bss.DcmDspUds_Wdbi.dataRetWriteFunc_u8'
dataRetWriteFunc_u8:	.type	object
	.size	dataRetWriteFunc_u8,1
	.space	1
	.calls	'Dcm_Dcm_WDBIInit','Dcm_Prv_WDBIINIT_Pending'
	.calls	'Dcm_Dcm_WDBIInit','Dcm_ResetDIDIndexstruct'
	.calls	'Dcm_Prv_SenderReceiverVariableSignalGetBuffer','Dcm_GetSignal_u32'
	.calls	'Dcm_Prv_WriteSenderReceiverVariableLengthSignal','Dcm_Prv_SenderReceiverVariableSignalGetBuffer'
	.calls	'Dcm_Prv_WriteSenderReceiverVariableLengthSignal','__INDIRECT__'
	.calls	'Dcm_Prv_WriteSenderReceiverFixedLengthSignal','Dcm_GetSignal_u32'
	.calls	'Dcm_Prv_WriteSenderReceiverFixedLengthSignal','__INDIRECT__'
	.calls	'Dcm_Prv_WriteSenderReceiverSignal','Dcm_Prv_WriteSenderReceiverFixedLengthSignal'
	.calls	'Dcm_Prv_WriteSenderReceiverSignal','Dcm_Prv_WriteSenderReceiverVariableLengthSignal'
	.calls	'Dcm_Prv_WriteDidUsePort','Dcm_Prv_WriteSenderReceiverSignal'
	.calls	'Dcm_Prv_WriteNormalDID','Dcm_Prv_WriteDidUsePort'
	.calls	'Dcm_Prv_WriteNormalDID','Dcm_IsInfrastructureErrorPresent_b'
	.calls	'Dcm_Prv_WriteDidMaxLenCheck','DcmAppl_DcmCheckWDBIReqLen'
	.calls	'Dcm_Priv_DidWriteSupport','Dcm_DsldGetActiveSessionMask_u32'
	.calls	'Dcm_Priv_DidWriteSupport','Dcm_Prv_WriteDidMaxLenCheck'
	.calls	'Dcm_Priv_DidWriteSupport','Dcm_GetSupportOfIndex'
	.calls	'Dcm_Priv_DidWriteFuncAvailableCheck','Det_ReportError'
	.calls	'Dcm_Prv_DidAvailableCheck','Dcm_GetIndexOfDID'
	.calls	'Dcm_Prv_DidAvailableCheck','Dcm_Priv_DidWriteFuncAvailableCheck'
	.calls	'Dcm_Prv_WdbiStateProcessing','Dcm_Prv_DidAvailableCheck'
	.calls	'Dcm_Prv_WdbiStateProcessing','Dcm_Priv_DidWriteSupport'
	.calls	'Dcm_Prv_WdbiStateProcessing','Dcm_Prv_WriteNormalDID'
	.calls	'Dcm_DcmWriteDataByIdentifier','Dcm_Dcm_WDBIInit'
	.calls	'Dcm_DcmWriteDataByIdentifier','Dcm_Prv_WdbiStateProcessing'
	.calls	'Dcm_DcmWriteDataByIdentifier','Dcm_Prv_WriteDIDServevice_status'
	.calls	'Dcm_Prv_WDBIINIT_Pending','',0
	.calls	'Dcm_Dcm_WDBIInit','',0
	.calls	'Dcm_Prv_SenderReceiverVariableSignalGetBuffer','',0
	.calls	'Dcm_Prv_WriteSenderReceiverVariableLengthSignal','',0
	.calls	'Dcm_Prv_WriteSenderReceiverFixedLengthSignal','',0
	.calls	'Dcm_Prv_WriteSenderReceiverSignal','',0
	.calls	'Dcm_Prv_WriteDidUsePort','',0
	.calls	'Dcm_Prv_WriteNormalDID','',8
	.calls	'Dcm_Prv_WriteDidMaxLenCheck','',0
	.calls	'Dcm_Priv_DidWriteSupport','',0
	.calls	'Dcm_Priv_DidWriteFuncAvailableCheck','',0
	.calls	'Dcm_Prv_DidAvailableCheck','',0
	.calls	'Dcm_Prv_WdbiStateProcessing','',0
	.calls	'Dcm_Prv_WriteDIDServevice_status','',0
	.calls	'Dcm_DcmWriteDataByIdentifier','',0
	.extern	Dcm_DspArraySignal_au8
	.extern	Dcm_IsInfrastructureErrorPresent_b
	.extern	Dcm_GetIndexOfDID
	.extern	Dcm_GetSupportOfIndex
	.extern	Dcm_SrvOpstatus_u8
	.extern	Det_ReportError
	.extern	Dcm_DsldGetActiveSessionMask_u32
	.extern	Dcm_GetSignal_u32
	.extern	Dcm_ResetDIDIndexstruct
	.extern	Dcm_DIDConfig
	.extern	Dcm_DspDataInfo_st
	.extern	Dcm_DspDid_ControlInfo_st
	.extern	Dcm_DidSignalIdx_u16
	.extern	DcmAppl_DcmCheckWDBIReqLen
	.extern	__INDIRECT__
	.calls	'Dcm_GetActiveWDBIDid','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L143:
	.word	16923
	.half	3
	.word	.L144
	.byte	4
.L142:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L145
.L238:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	157
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	174
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	174
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	157
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	157
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	174
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	157
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	157
	.byte	6,0
.L262:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L248:
	.byte	3
	.word	487
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	509
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	509
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	487
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	487
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	509
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	157
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	157
	.byte	6,0
.L265:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	826
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	842
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	842
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	826
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	826
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	842
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	157
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	157
	.byte	6,0
.L286:
	.byte	7
	.byte	'Dcm_Prv_SenderReceiverFixedLength',0,3,4,18,22
	.word	157
	.byte	1,1
.L289:
	.byte	5
	.byte	'Datasize_u',0,4,18,64
	.word	826
.L291:
	.byte	5
	.byte	'DataType',0,4,18,82
	.word	157
.L293:
	.byte	6,0
.L295:
	.byte	7
	.byte	'Dcm_Prv_SenderReceiverVariableLength',0,3,4,37,22
	.word	157
	.byte	1,1
.L297:
	.byte	5
	.byte	'Datasize_u',0,4,37,67
	.word	826
.L299:
	.byte	5
	.byte	'DataType',0,4,37,85
	.word	157
.L301:
	.byte	6,0,8
	.byte	'Dcm_IsInfrastructureErrorPresent_b',0,5,200,10,31
	.word	157
	.byte	1,1,1,1,5
	.byte	'dataInfrastrutureCode_u8',0,5,200,10,87
	.word	157
	.byte	0
.L349:
	.byte	9,6,239,1,9,12,10
	.byte	'dataSignalLengthInfo_u32',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'nrNumofSignalsRead_u16',0
	.word	487
	.byte	2,2,35,4,10
	.byte	'idxIndex_u16',0
	.word	487
	.byte	2,2,35,6,10
	.byte	'dataNegRespCode_u8',0
	.word	157
	.byte	1,2,35,8,10
	.byte	'dataRange_b',0
	.word	157
	.byte	1,2,35,9,10
	.byte	'flgNvmReadPending_b',0
	.word	157
	.byte	1,2,35,10,10
	.byte	'dataopstatus_b',0
	.word	157
	.byte	1,2,35,11,0,3
	.word	1411
	.byte	8
	.byte	'Dcm_GetIndexOfDID',0,6,144,2,39
	.word	157
	.byte	1,1,1,1,5
	.byte	'did',0,6,145,2,38
	.word	487
	.byte	5
	.byte	'idxDidIndexType_st',0,6,146,2,70
	.word	1608
	.byte	0
.L350:
	.byte	11,6,225,1,9,4,12
	.byte	'DCM_SUPPORT_OK',0,0,12
	.byte	'DCM_SUPPORT_SESSION_VIOLATED',0,1,12
	.byte	'DCM_SUPPORT_SECURITY_VIOLATED',0,2,12
	.byte	'DCM_SUPPORT_CONDITION_VIOLATED',0,3,12
	.byte	'DCM_SUPPORT_CONDITION_PENDING',0,4,0,11,6,203,1,9,4,12
	.byte	'DCM_SUPPORT_READ',0,0,12
	.byte	'DCM_SUPPORT_WRITE',0,1,12
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0
.L243:
	.byte	3
	.word	157
	.byte	8
	.byte	'Dcm_GetSupportOfIndex',0,6,167,2,41
	.word	1686
	.byte	1,1,1,1,5
	.byte	'idxDidIndexType_st',0,6,167,2,124
	.word	1608
	.byte	5
	.byte	'direction',0,6,168,2,53
	.word	1838
	.byte	5
	.byte	'dataNegRespCode_u8',0,6,169,2,83
	.word	1908
	.byte	0,3
	.word	157
	.byte	13
	.byte	'Dcm_MsgType',0,5,188,2,57
	.word	2024
	.byte	9,5,206,2,9,4,10
	.byte	'reqType',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'suppressPosResponse',0
	.word	157
	.byte	1,2,35,1,10
	.byte	'sourceofRequest',0
	.word	157
	.byte	1,2,35,2,0,9,5,240,2,9,28,10
	.byte	'resData',0
	.word	2029
	.byte	4,2,35,0,10
	.byte	'reqData',0
	.word	2029
	.byte	4,2,35,4,10
	.byte	'msgAddInfo',0
	.word	2050
	.byte	4,2,35,8,10
	.byte	'resDataLen',0
	.word	826
	.byte	4,2,35,12,10
	.byte	'reqDataLen',0
	.word	826
	.byte	4,2,35,16,10
	.byte	'resMaxDataLen',0
	.word	826
	.byte	4,2,35,20,10
	.byte	'idContext',0
	.word	157
	.byte	1,2,35,24,10
	.byte	'dcmRxPduId',0
	.word	487
	.byte	2,2,35,26,0
.L241:
	.byte	3
	.word	2128
	.byte	3
	.word	157
	.byte	8
	.byte	'Det_ReportError',0,7,112,16
	.word	157
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,7,112,39
	.word	487
	.byte	5
	.byte	'InstanceId',0,7,112,55
	.word	157
	.byte	5
	.byte	'ApiId',0,7,112,73
	.word	157
	.byte	5
	.byte	'ErrorId',0,7,112,86
	.word	157
	.byte	0,14
	.byte	'Dcm_DsldGetActiveSessionMask_u32',0,8,190,1,31
	.word	826
	.byte	1,1,1,1,15
	.word	157
	.byte	3
	.word	2442
	.byte	8
	.byte	'Dcm_GetSignal_u32',0,8,168,6,30
	.word	826
	.byte	1,1,1,1,5
	.byte	'xDataType_u8',0,8,168,6,69
	.word	157
	.byte	5
	.byte	'posnStart_u16',0,8,169,6,66
	.word	487
	.byte	5
	.byte	'adrReqBuffer_u8',0,8,170,6,87
	.word	2447
	.byte	5
	.byte	'dataEndianness_u8',0,8,171,6,65
	.word	157
	.byte	0,16
	.byte	'Dcm_ResetDIDIndexstruct',0,9,32,28,1,1,1,1,5
	.byte	'idxDidIndexType_st',0,9,32,108
	.word	1608
	.byte	0,17
	.word	179
	.byte	18
	.word	209
	.byte	18
	.word	224
	.byte	6,0,17
	.word	247
	.byte	18
	.word	279
	.byte	18
	.word	294
	.byte	6,0,17
	.word	317
	.byte	18
	.word	357
	.byte	18
	.word	371
	.byte	6,0,17
	.word	394
	.byte	18
	.word	427
	.byte	18
	.word	441
	.byte	18
	.word	462
	.byte	6,0,17
	.word	514
	.byte	18
	.word	545
	.byte	18
	.word	560
	.byte	6,0,17
	.word	583
	.byte	18
	.word	616
	.byte	18
	.word	631
	.byte	6,0,17
	.word	654
	.byte	18
	.word	695
	.byte	18
	.word	709
	.byte	6,0,17
	.word	732
	.byte	18
	.word	766
	.byte	18
	.word	780
	.byte	18
	.word	801
	.byte	6,0,17
	.word	847
	.byte	18
	.word	878
	.byte	18
	.word	893
	.byte	6,0,17
	.word	916
	.byte	18
	.word	949
	.byte	18
	.word	964
	.byte	6,0,17
	.word	987
	.byte	18
	.word	1028
	.byte	18
	.word	1042
	.byte	6,0,17
	.word	1065
	.byte	18
	.word	1099
	.byte	18
	.word	1113
	.byte	18
	.word	1134
	.byte	6,0,8
	.byte	'DcmAppl_DcmCheckWDBIReqLen',0,10,218,1,43
	.word	157
	.byte	1,1,1,1,5
	.byte	'nrDID_u16',0,10,218,1,92
	.word	487
	.byte	5
	.byte	'dataReqLen_u32',0,10,218,1,125
	.word	826
	.byte	0,17
	.word	1159
	.byte	18
	.word	1204
	.byte	18
	.word	1223
	.byte	6,0,17
	.word	1242
	.byte	18
	.word	1290
	.byte	18
	.word	1309
	.byte	6,0,19
	.byte	'void',0
.L253:
	.byte	3
	.word	2978
	.byte	15
	.word	2128
.L256:
	.byte	3
	.word	2989
	.byte	9,9,200,2,9,4,10
	.byte	'posnSigBit_u16',0
	.word	487
	.byte	2,2,35,0,10
	.byte	'idxDcmDspDatainfo_u16',0
	.word	487
	.byte	2,2,35,2,0,15
	.word	2999
	.byte	3
	.word	3061
	.byte	3
	.word	157
	.byte	20
	.word	157
	.byte	1,1,21
	.word	3071
	.byte	21
	.word	487
	.byte	21
	.word	1838
	.byte	0,3
	.word	3076
	.byte	11,9,231,1,9,4,12
	.byte	'DCM_CONTROLMASK_NO',0,0,12
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,12
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,9,9,239,1,9,44,10
	.byte	'dataAllowedSessRead_u32',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'dataAllowedSecRead_u32',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'adrUserReadModeRule_pfct',0
	.word	3099
	.byte	4,2,35,8,10
	.byte	'dataAllowedSessWrite_u32',0
	.word	826
	.byte	4,2,35,12,10
	.byte	'dataAllowedSecWrite_u32',0
	.word	826
	.byte	4,2,35,16,10
	.byte	'adrUserWriteModeRule_pfct',0
	.word	3099
	.byte	4,2,35,20,10
	.byte	'dataSessBitMask_u32',0
	.word	826
	.byte	4,2,35,24,10
	.byte	'dataSecBitMask_u32',0
	.word	826
	.byte	4,2,35,28,10
	.byte	'adrUserControlModeRule_pfct',0
	.word	3099
	.byte	4,2,35,32,10
	.byte	'dataCtrlMask_en',0
	.word	3104
	.byte	4,2,35,36,10
	.byte	'dataCtrlMaskSize_u8',0
	.word	157
	.byte	1,2,35,40,10
	.byte	'dataIocbirst_b',0
	.word	157
	.byte	1,2,35,41,10
	.byte	'statusmaskIOControl_u8',0
	.word	157
	.byte	1,2,35,42,0,15
	.word	3186
.L329:
	.byte	3
	.word	3598
	.byte	9,9,214,2,9,16,10
	.byte	'dataDid_u16',0
	.word	487
	.byte	2,2,35,0,10
	.byte	'nrSig_u16',0
	.word	487
	.byte	2,2,35,2,10
	.byte	'dataMaxDidLen_u16',0
	.word	487
	.byte	2,2,35,4,10
	.byte	'dataFixedLength_b',0
	.word	157
	.byte	1,2,35,6,10
	.byte	'dataDynamicDid_b',0
	.word	157
	.byte	1,2,35,7,10
	.byte	'adrDidSignalConfig_pcst',0
	.word	3066
	.byte	4,2,35,8,10
	.byte	'adrExtendedConfig_pcst',0
	.word	3603
	.byte	4,2,35,12,0,15
	.word	3608
.L258:
	.byte	3
	.word	3800
	.byte	15
	.word	2984
	.byte	9,9,181,2,9,16,10
	.byte	'adrReadFnc_cpv',0
	.word	3810
	.byte	4,2,35,0,10
	.byte	'dataSize_u16',0
	.word	487
	.byte	2,2,35,4,10
	.byte	'dataNvmBlockId_u16',0
	.word	487
	.byte	2,2,35,6,10
	.byte	'idxDcmDspControlInfo_u16',0
	.word	487
	.byte	2,2,35,8,10
	.byte	'dataType_u8',0
	.word	157
	.byte	1,2,35,10,10
	.byte	'usePort_u8',0
	.word	157
	.byte	1,2,35,11,10
	.byte	'dataEndianness_u8',0
	.word	157
	.byte	1,2,35,12,10
	.byte	'dataFixedLength_b',0
	.word	157
	.byte	1,2,35,13,0,15
	.word	3815
.L260:
	.byte	3
	.word	4025
	.byte	15
	.word	2984
	.byte	15
	.word	2984
	.byte	15
	.word	2984
	.byte	9,9,160,2,9,16,10
	.byte	'adrCondChkRdFnc_cpv',0
	.word	4035
	.byte	4,2,35,0,10
	.byte	'adrReadDataLengthFnc_pfct',0
	.word	4040
	.byte	4,2,35,4,10
	.byte	'adrWriteFnc_cpv',0
	.word	4045
	.byte	4,2,35,8,10
	.byte	'idxDcmDspIocbiInfo_u16',0
	.word	487
	.byte	2,2,35,12,0,15
	.word	4050
.L315:
	.byte	3
	.word	4178
	.byte	22
	.byte	'__INDIRECT__',0,11,1,1,1,1,1,23,1,3
	.word	4208
	.byte	13
	.byte	'__codeptr',0,11,1,1
	.word	4210
	.byte	2
	.byte	'char',0,1,6,13
	.byte	'sint8',0,12,76,25
	.word	4233
	.byte	13
	.byte	'uint8',0,12,81,25
	.word	157
	.byte	13
	.byte	'uint16',0,12,91,25
	.word	487
	.byte	13
	.byte	'uint32',0,12,106,24
	.word	826
	.byte	2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'uint64',0,12,111,30
	.word	4299
	.byte	13
	.byte	'boolean',0,12,127,25
	.word	157
	.byte	2
	.byte	'unsigned long int',0,4,7,13
	.byte	'uint16_least',0,12,147,1,25
	.word	4356
	.byte	13
	.byte	'StatusType',0,13,191,1,27
	.word	157
	.byte	13
	.byte	'Std_ReturnType',0,13,199,1,15
	.word	157
	.byte	9,13,206,1,9,8,10
	.byte	'vendorID',0
	.word	487
	.byte	2,2,35,0,10
	.byte	'moduleID',0
	.word	487
	.byte	2,2,35,2,10
	.byte	'sw_major_version',0
	.word	157
	.byte	1,2,35,4,10
	.byte	'sw_minor_version',0
	.word	157
	.byte	1,2,35,5,10
	.byte	'sw_patch_version',0
	.word	157
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,13,213,1,3
	.word	4443
	.byte	13
	.byte	'PduIdType',0,14,22,19
	.word	487
	.byte	13
	.byte	'PduLengthType',0,14,26,19
	.word	487
	.byte	9,15,71,9,8,10
	.byte	'SduDataPtr',0
	.word	174
	.byte	4,2,35,0,10
	.byte	'SduLength',0
	.word	487
	.byte	2,2,35,4,0,13
	.byte	'PduInfoType',0,15,75,3
	.word	4633
	.byte	11,15,113,9,4,12
	.byte	'TP_DATACONF',0,0,12
	.byte	'TP_DATARETRY',0,1,12
	.byte	'TP_CONFPENDING',0,2,0,13
	.byte	'TpDataStateType',0,15,118,3
	.word	4698
	.byte	13
	.byte	'NetworkHandleType',0,15,128,1,17
	.word	157
	.byte	24
	.word	157
	.byte	25,0,26
	.byte	'Dcm_DspArraySignal_au8',0,16,199,1,31
	.word	4801
	.byte	1,1,13
	.byte	'Can_IdType',0,17,32,16
	.word	826
	.byte	13
	.byte	'Can_HwHandleType',0,17,43,16
	.word	487
	.byte	9,18,93,9,8,10
	.byte	'Class',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'TIN',0
	.word	157
	.byte	1,2,35,1,10
	.byte	'ReturnAddress',0
	.word	826
	.byte	4,2,35,4,0,13
	.byte	'OsTrapInfoType',0,18,97,3
	.word	4886
	.byte	27,68
	.word	826
	.byte	28,16,0,9,18,154,1,9,68,10
	.byte	'store',0
	.word	4966
	.byte	68,2,35,0,0,27,68
	.word	4975
	.byte	28,0,0,13
	.byte	'Os_JumpBufType',0,18,156,1,3
	.word	4997
	.byte	13
	.byte	'Os_StackTraceType',0,18,174,1,18
	.word	826
	.byte	9,18,175,1,9,8,10
	.byte	'sp',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'ctx',0
	.word	826
	.byte	4,2,35,4,0,13
	.byte	'Os_StackValueType',0,18,175,1,63
	.word	5057
	.byte	13
	.byte	'Os_StackSizeType',0,18,176,1,27
	.word	5057
	.byte	29,1,1,3
	.word	5142
	.byte	13
	.byte	'Os_VoidVoidFunctionType',0,18,179,1,16
	.word	5145
	.byte	13
	.byte	'ApplicationType',0,18,193,1,23
	.word	157
	.byte	30
	.byte	'Os_ApplicationConfigurationType_s',0,18,198,1,16,2,10
	.byte	'app_id',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,1,0,13
	.byte	'Os_ApplicationConfigurationType',0,18,201,1,3
	.word	5208
	.byte	13
	.byte	'Os_CoreStateType',0,18,203,1,16
	.word	826
	.byte	13
	.byte	'AreaIdType',0,18,204,1,16
	.word	487
	.byte	13
	.byte	'Os_PeripheralAddressType',0,18,212,1,22
	.word	826
	.byte	13
	.byte	'TickType',0,18,221,1,22
	.word	826
	.byte	13
	.byte	'Os_StopwatchTickType',0,18,225,1,22
	.word	826
	.byte	13
	.byte	'Os_Lockable',0,18,234,1,18
	.word	842
	.byte	13
	.byte	'CoreIdType',0,18,236,1,16
	.word	487
	.byte	13
	.byte	'SpinlockIdType',0,18,237,1,16
	.word	487
	.byte	11,18,239,1,9,4,12
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,12
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,13
	.byte	'TryToGetSpinlockType',0,18,239,1,74
	.word	5515
	.byte	11,18,174,2,9,4,12
	.byte	'APPLICATION_ACCESSIBLE',0,0,12
	.byte	'APPLICATION_RESTARTING',0,1,12
	.byte	'APPLICATION_TERMINATED',0,2,0,13
	.byte	'ApplicationStateType',0,18,174,2,92
	.word	5608
	.byte	31,1,1,21
	.word	157
	.byte	21
	.word	2984
	.byte	0,3
	.word	5720
	.byte	13
	.byte	'Os_FunctionEntryType',0,18,183,2,16
	.word	5734
	.byte	30
	.byte	'Os_MeterInfoType_s',0,18,193,2,16,48,10
	.byte	'elapsed',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'previous',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'max',0
	.word	826
	.byte	4,2,35,8,10
	.byte	'cumulative',0
	.word	826
	.byte	4,2,35,12,10
	.byte	'stackbase',0
	.word	5057
	.byte	8,2,35,16,10
	.byte	'stackusage',0
	.word	5057
	.byte	8,2,35,24,10
	.byte	'stackmax',0
	.word	5057
	.byte	8,2,35,32,10
	.byte	'stackbudget',0
	.word	5057
	.byte	8,2,35,40,0,13
	.byte	'Os_MeterInfoType',0,18,202,2,3
	.word	5769
	.byte	3
	.word	5769
	.byte	13
	.byte	'Os_MeterInfoRefType',0,18,203,2,50
	.word	5967
	.byte	13
	.byte	'EventMaskType',0,18,206,2,15
	.word	157
	.byte	13
	.byte	'Os_imaskType',0,18,211,2,16
	.word	826
	.byte	30
	.byte	'Os_ISRDynType_s',0,18,213,2,16,48,10
	.byte	'meter',0
	.word	5769
	.byte	48,2,35,0,0,13
	.byte	'Os_ISRDynType',0,18,215,2,3
	.word	6046
	.byte	3
	.word	6046
	.byte	15
	.word	6107
	.byte	30
	.byte	'Os_ISRType_s',0,18,216,2,16,24,10
	.byte	'entry_function',0
	.word	5150
	.byte	4,2,35,0,10
	.byte	'dynamic',0
	.word	6112
	.byte	4,2,35,4,10
	.byte	'imask',0
	.word	826
	.byte	4,2,35,8,10
	.byte	'stackbudget',0
	.word	5057
	.byte	8,2,35,12,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,20,10
	.byte	'application',0
	.word	157
	.byte	1,2,35,21,0,13
	.byte	'Os_ISRType',0,18,223,2,3
	.word	6117
	.byte	3
	.word	5142
	.byte	15
	.word	6117
	.byte	3
	.word	6276
	.byte	13
	.byte	'ISRType',0,18,224,2,46
	.word	6281
	.byte	13
	.byte	'Os_bitmask',0,18,239,2,22
	.word	826
	.byte	13
	.byte	'Os_pset0Type',0,18,240,2,20
	.word	826
	.byte	13
	.byte	'Os_pset1Type',0,18,241,2,20
	.word	826
	.byte	13
	.byte	'Os_pset2Type',0,18,242,2,20
	.word	826
	.byte	32,18,243,2,9,4,10
	.byte	'p0',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'p1',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'p2',0
	.word	826
	.byte	4,2,35,0,0,13
	.byte	'Os_psetType',0,18,247,2,3
	.word	6389
	.byte	32,18,249,2,9,4,10
	.byte	't0',0
	.word	826
	.byte	4,2,35,0,10
	.byte	't1',0
	.word	826
	.byte	4,2,35,0,10
	.byte	't2',0
	.word	826
	.byte	4,2,35,0,0,13
	.byte	'Os_tpmaskType',0,18,253,2,3
	.word	6453
	.byte	13
	.byte	'Os_ActivationCountType',0,18,254,2,23
	.word	157
	.byte	30
	.byte	'Os_TaskDynType_s',0,18,128,3,16,120,10
	.byte	'terminate_jump_buf',0
	.word	5006
	.byte	68,2,35,0,10
	.byte	'meter',0
	.word	5769
	.byte	48,2,35,68,10
	.byte	'activation_count',0
	.word	157
	.byte	1,2,35,116,0,13
	.byte	'Os_TaskDynType',0,18,132,3,3
	.word	6551
	.byte	27,68
	.word	4975
	.byte	28,0,0,3
	.word	6551
	.byte	15
	.word	6677
	.byte	30
	.byte	'Os_TaskType_s',0,18,134,3,16,40,10
	.byte	'dynamic',0
	.word	6682
	.byte	4,2,35,0,10
	.byte	'entry_function',0
	.word	5150
	.byte	4,2,35,4,10
	.byte	'pset',0
	.word	6389
	.byte	4,2,35,8,10
	.byte	'base_tpmask',0
	.word	6453
	.byte	4,2,35,12,10
	.byte	'tpmask',0
	.word	6453
	.byte	4,2,35,16,10
	.byte	'core_id',0
	.word	487
	.byte	2,2,35,20,10
	.byte	'index',0
	.word	826
	.byte	4,2,35,24,10
	.byte	'stackbudget',0
	.word	5057
	.byte	8,2,35,28,10
	.byte	'activation_count',0
	.word	157
	.byte	1,2,35,36,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,37,10
	.byte	'application',0
	.word	157
	.byte	1,2,35,38,0,13
	.byte	'Os_TaskType',0,18,146,3,3
	.word	6687
	.byte	15
	.word	6687
	.byte	3
	.word	6937
	.byte	13
	.byte	'TaskType',0,18,147,3,47
	.word	6942
	.byte	33
	.byte	'Os_TaskStateType',0,18,155,3,6,4,12
	.byte	'SUSPENDED',0,0,12
	.byte	'READY',0,1,12
	.byte	'WAITING',0,2,12
	.byte	'RUNNING',0,3,0,13
	.byte	'TaskStateType',0,18,156,3,31
	.word	6965
	.byte	32,18,167,3,3,4,10
	.byte	'tpmask',0
	.word	6453
	.byte	4,2,35,0,0,30
	.byte	'Os_ResourceDynType_s',0,18,166,3,16,4,10
	.byte	'saved_priority',0
	.word	7052
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType',0,18,170,3,3
	.word	7075
	.byte	3
	.word	7075
	.byte	15
	.word	7155
	.byte	30
	.byte	'Os_ResourceType_s',0,18,171,3,16,12,10
	.byte	'dynamic',0
	.word	7160
	.byte	4,2,35,0,10
	.byte	'tpmask',0
	.word	6453
	.byte	4,2,35,4,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,8,0,13
	.byte	'Os_ResourceType',0,18,175,3,3
	.word	7165
	.byte	9,18,181,3,9,12,10
	.byte	'maxallowedvalue',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'ticksperbase',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'mincycle',0
	.word	826
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,18,185,3,3
	.word	7264
	.byte	9,18,206,3,9,8,10
	.byte	'Running',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'Pending',0
	.word	157
	.byte	1,2,35,1,10
	.byte	'Delay',0
	.word	826
	.byte	4,2,35,4,0,13
	.byte	'Os_CounterStatusType',0,18,210,3,3
	.word	7359
	.byte	34
	.word	157
	.byte	1,1,3
	.word	7445
	.byte	13
	.byte	'Os_CounterIncrAdvType',0,18,217,3,22
	.word	7452
	.byte	30
	.byte	's_swd',0,18,222,3,12,4,10
	.byte	'count',0
	.word	826
	.byte	4,2,35,0,0,32,18,221,3,3,4,10
	.byte	'sw',0
	.word	7488
	.byte	4,2,35,0,0,30
	.byte	'Os_CounterDynType_s',0,18,220,3,16,4,10
	.byte	'type_dependent',0
	.word	7516
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType',0,18,226,3,3
	.word	7535
	.byte	3
	.word	7535
	.byte	15
	.word	7613
	.byte	30
	.byte	'Os_CounterType_s',0,18,227,3,16,28,10
	.byte	'dynamic',0
	.word	7618
	.byte	4,2,35,0,10
	.byte	'advincr',0
	.word	7457
	.byte	4,2,35,4,10
	.byte	'base',0
	.word	7264
	.byte	12,2,35,8,10
	.byte	'core',0
	.word	2984
	.byte	4,2,35,20,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,24,10
	.byte	'application',0
	.word	157
	.byte	1,2,35,25,0,13
	.byte	'Os_CounterType',0,18,234,3,3
	.word	7623
	.byte	3
	.word	7445
	.byte	15
	.word	7623
	.byte	3
	.word	7775
	.byte	13
	.byte	'CounterType',0,18,235,3,52
	.word	7780
	.byte	33
	.byte	'Os_ScheduleTableStatusType',0,18,240,3,6,4,12
	.byte	'SCHEDULETABLE_STOPPED',0,0,12
	.byte	'SCHEDULETABLE_NEXT',0,1,12
	.byte	'SCHEDULETABLE_WAITING',0,2,12
	.byte	'SCHEDULETABLE_RUNNING',0,3,12
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,18,241,3,41
	.word	7806
	.byte	15
	.word	.L458-.L143
	.byte	3
	.word	8006
	.byte	13
	.byte	'ScheduleTableType',0,18,128,4,58
	.word	8011
	.byte	30
	.byte	'Os_ScheduleTableDynType_s',0,18,130,4,16,16,10
	.byte	'match',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'next',0
	.word	8016
	.byte	4,2,35,4,10
	.byte	'state',0
	.word	7806
	.byte	4,2,35,8,10
	.byte	'config',0
	.word	487
	.byte	2,2,35,12,0,3
	.word	8043
	.byte	15
	.word	8136
.L458:
	.byte	30
	.byte	'Os_ScheduleTableType_s',0,18,247,3,16,16,10
	.byte	'dynamic',0
	.word	8141
	.byte	4,2,35,0,10
	.byte	'counter',0
	.word	7785
	.byte	4,2,35,4,10
	.byte	'repeat',0
	.word	157
	.byte	1,2,35,8,10
	.byte	'config',0
	.word	487
	.byte	2,2,35,10,10
	.byte	'initial',0
	.word	157
	.byte	1,2,35,12,10
	.byte	'access',0
	.word	157
	.byte	1,2,35,13,10
	.byte	'application',0
	.word	157
	.byte	1,2,35,14,0,13
	.byte	'Os_ScheduleTableType',0,18,255,3,3
	.word	8146
	.byte	15
	.word	8146
	.byte	3
	.word	8326
	.byte	15
	.word	7623
	.byte	3
	.word	8336
	.byte	35
	.word	5450
	.byte	35
	.word	6389
	.byte	35
	.word	6286
	.byte	35
	.word	6947
	.byte	35
	.word	6453
	.byte	35
	.word	157
	.byte	35
	.word	6947
	.byte	30
	.byte	'Os_ControlledCoreType_s',0,18,251,6,16,112,10
	.byte	'TrapInfo',0
	.word	4886
	.byte	8,2,35,0,10
	.byte	'lock_taskaccess',0
	.word	8346
	.byte	4,2,35,8,10
	.byte	'ReadyTasks',0
	.word	8351
	.byte	4,2,35,12,10
	.byte	'RunningISR',0
	.word	8356
	.byte	4,2,35,16,10
	.byte	'RunningTask',0
	.word	8361
	.byte	4,2,35,20,10
	.byte	'RunningTPMask',0
	.word	8366
	.byte	4,2,35,24,10
	.byte	'CurrentMeteredObject',0
	.word	5972
	.byte	4,2,35,28,10
	.byte	'IdleMeter',0
	.word	5769
	.byte	48,2,35,32,10
	.byte	'AppAccess',0
	.word	157
	.byte	1,2,35,80,10
	.byte	'AppOverride',0
	.word	8371
	.byte	1,2,35,81,10
	.byte	'GetStackValueAdjust',0
	.word	5057
	.byte	8,2,35,84,10
	.byte	'InErrorHook',0
	.word	157
	.byte	1,2,35,92,10
	.byte	'ChainTaskRef',0
	.word	8376
	.byte	4,2,35,96,10
	.byte	'GetStackUsageAdjust',0
	.word	5057
	.byte	8,2,35,100,10
	.byte	'InProtectionHook',0
	.word	157
	.byte	1,2,35,108,10
	.byte	'CoreIsActive',0
	.word	157
	.byte	1,2,35,109,10
	.byte	'InShutdownHook',0
	.word	157
	.byte	1,2,35,110,0,13
	.byte	'Os_ControlledCoreType',0,18,141,7,3
	.word	8381
	.byte	3
	.word	826
	.byte	15
	.word	6117
	.byte	3
	.word	8837
	.byte	15
	.word	6687
	.byte	3
	.word	8847
	.byte	3
	.word	5769
	.byte	30
	.byte	'Os_AnyCoreType_s',0,18,151,7,16,96,10
	.byte	'DisableAllImask',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'SuspendAllImask',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'SuspendOSImask',0
	.word	826
	.byte	4,2,35,8,10
	.byte	'DisableAllCount',0
	.word	826
	.byte	4,2,35,12,10
	.byte	'SuspendAllCount',0
	.word	826
	.byte	4,2,35,16,10
	.byte	'SuspendOSCount',0
	.word	826
	.byte	4,2,35,20,10
	.byte	'RestartJumpBuf',0
	.word	5006
	.byte	68,2,35,24,10
	.byte	'Restartable',0
	.word	157
	.byte	1,2,35,92,0,13
	.byte	'Os_AnyCoreType',0,18,160,7,3
	.word	8862
	.byte	13
	.byte	'Can_TxObjPriorityClassType',0,19,219,3,16
	.word	826
	.byte	30
	.byte	'Can_TxHwObjectConfigType',0,19,231,3,16,8,10
	.byte	'MsgObjId',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'HwControllerId',0
	.word	157
	.byte	1,2,35,1,10
	.byte	'TxObjPriorityClass',0
	.word	826
	.byte	4,2,35,4,0,13
	.byte	'Can_TxHwObjectConfigType',0,19,252,3,3
	.word	9139
	.byte	30
	.byte	'Can_RxHwObjectConfigType',0,19,129,4,16,12,10
	.byte	'MaskRef',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'MsgId',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'MsgObjId',0
	.word	157
	.byte	1,2,35,8,10
	.byte	'HwControllerId',0
	.word	157
	.byte	1,2,35,9,0,13
	.byte	'Can_RxHwObjectConfigType',0,19,147,4,3
	.word	9275
	.byte	27,4
	.word	157
	.byte	28,3,0,30
	.byte	'Can_ControllerMOMapConfigType',0,19,181,4,16,4,10
	.byte	'ControllerMOMap',0
	.word	9415
	.byte	4,2,35,0,0,13
	.byte	'Can_ControllerMOMapConfigType',0,19,184,4,3
	.word	9424
	.byte	30
	.byte	'Can_NPCRValueType',0,19,188,4,16,2,10
	.byte	'Can_NPCRValue',0
	.word	487
	.byte	2,2,35,0,0,13
	.byte	'Can_NPCRValueType',0,19,191,4,3
	.word	9525
	.byte	30
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,19,194,4,16,8,10
	.byte	'CanControllerBaudrate',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'CanControllerBaudrateCfg',0
	.word	487
	.byte	2,2,35,4,0,13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,19,198,4,3
	.word	9600
	.byte	15
	.word	9600
	.byte	3
	.word	9765
	.byte	30
	.byte	'Can_BaudrateConfigPtrType',0,19,201,4,16,4,10
	.byte	'Can_kBaudrateConfigPtr',0
	.word	9770
	.byte	4,2,35,0,0,13
	.byte	'Can_BaudrateConfigPtrType',0,19,204,4,3
	.word	9775
	.byte	30
	.byte	'Can_EventHandlingType',0,19,226,4,16,4,10
	.byte	'CanEventType',0
	.word	9415
	.byte	4,2,35,0,0,13
	.byte	'Can_EventHandlingType',0,19,229,4,3
	.word	9875
	.byte	13
	.byte	'Rte_TransformerErrorCode',0,20,130,1,15
	.word	157
	.byte	13
	.byte	'Rte_TransformerClass',0,20,131,1,15
	.word	157
	.byte	9,20,168,1,9,12,10
	.byte	'in',0
	.word	2984
	.byte	4,2,35,0,10
	.byte	'out',0
	.word	2984
	.byte	4,2,35,4,10
	.byte	'used',0
	.word	487
	.byte	2,2,35,8,10
	.byte	'lost_data',0
	.word	157
	.byte	1,2,35,10,0,13
	.byte	'Rte_QDynType',0,20,173,1,3
	.word	10021
	.byte	11,20,175,1,9,4,12
	.byte	'RTE_DRA',0,0,12
	.byte	'RTE_WOWP',0,1,12
	.byte	'RTE_TASK',0,2,12
	.byte	'RTE_ARE',0,3,12
	.byte	'RTE_EV',0,4,12
	.byte	'RTE_MSI',0,5,0,13
	.byte	'Rte_NotificationType',0,20,182,1,3
	.word	10108
	.byte	3
	.word	10021
	.byte	30
	.byte	'Rte_QCmnType',0,20,184,1,16,24,10
	.byte	'dynamic',0
	.word	10206
	.byte	4,2,35,0,10
	.byte	'copy',0
	.word	157
	.byte	1,2,35,4,10
	.byte	'queue_size',0
	.word	487
	.byte	2,2,35,6,10
	.byte	'element_size',0
	.word	487
	.byte	2,2,35,8,10
	.byte	'buffer_start',0
	.word	2984
	.byte	4,2,35,12,10
	.byte	'buffer_end',0
	.word	2984
	.byte	4,2,35,16,10
	.byte	'notification_type',0
	.word	10108
	.byte	4,2,35,20,0,13
	.byte	'Rte_QCmnType',0,20,192,1,3
	.word	10211
	.byte	13
	.byte	'Rte_AlarmRefType',0,20,224,1,32
	.word	826
	.byte	13
	.byte	'Rte_AlarmIndexType',0,20,226,1,32
	.word	487
	.byte	27,128,8
	.word	157
	.byte	28,255,7,0,13
	.byte	'Impl_NVM_DstPtrType_1024',0,21,50,15
	.word	10449
	.byte	13
	.byte	'CanIf_u32_impl',0,21,69,16
	.word	826
	.byte	13
	.byte	'CanIf_u16_impl',0,21,71,16
	.word	487
	.byte	13
	.byte	'CanIf_u8_impl',0,21,73,15
	.word	157
	.byte	13
	.byte	'CanIf_ControllerModeType_Enum_impl',0,21,88,15
	.word	157
	.byte	13
	.byte	'CanIf_PduModeType_Enum_impl',0,21,90,15
	.word	157
	.byte	9,21,92,9,2,10
	.byte	'DeviceMode',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'ChannelMode',0
	.word	157
	.byte	1,2,35,1,0,13
	.byte	'CanIf_ControllerStateType_struct_impl',0,21,95,3
	.word	10640
	.byte	13
	.byte	'CanIf_NotifStatusType_Enum_impl',0,21,100,15
	.word	157
	.byte	13
	.byte	'CanSM_boolean_Impl',0,21,120,15
	.word	157
	.byte	13
	.byte	'CanSM_u8_Impl',0,21,123,15
	.word	157
	.byte	13
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,21,128,1,15
	.word	157
	.byte	13
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,21,132,1,15
	.word	157
	.byte	13
	.byte	'CanSM_u16_Impl',0,21,136,1,16
	.word	487
	.byte	13
	.byte	'CanSM_TimerStateType_Enum_impl',0,21,138,1,15
	.word	157
	.byte	9,21,140,1,9,4,10
	.byte	'cntTick_u16',0
	.word	487
	.byte	2,2,35,0,10
	.byte	'stTimer',0
	.word	157
	.byte	1,2,35,2,0,13
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,21,143,1,3
	.word	10981
	.byte	13
	.byte	'Com_impl_u16',0,21,154,1,16
	.word	487
	.byte	13
	.byte	'Com_impl_u8',0,21,157,1,15
	.word	157
	.byte	13
	.byte	'ComM_uint32_Impl',0,21,173,1,16
	.word	826
	.byte	13
	.byte	'ComM_uint16_Impl',0,21,175,1,16
	.word	487
	.byte	13
	.byte	'ComM_uint8_Impl',0,21,177,1,15
	.word	157
	.byte	13
	.byte	'ComM_bool_Impl',0,21,179,1,15
	.word	157
	.byte	9,21,181,1,9,24,10
	.byte	'ChannelState_e',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'LightTimeoutCtr_u32',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	487
	.byte	2,2,35,8,10
	.byte	'ChannelMode_u8',0
	.word	157
	.byte	1,2,35,10,10
	.byte	'BusSmMode_u8',0
	.word	157
	.byte	1,2,35,11,10
	.byte	'UserRequestCtr_u8',0
	.word	157
	.byte	1,2,35,12,10
	.byte	'PassiveRequestState_u8',0
	.word	157
	.byte	1,2,35,13,10
	.byte	'PncRequestCtr_u8',0
	.word	157
	.byte	1,2,35,14,10
	.byte	'InhibitionReqStatus_u8',0
	.word	157
	.byte	1,2,35,15,10
	.byte	'NmNetworkRequestStatus_b',0
	.word	157
	.byte	1,2,35,16,10
	.byte	'DiagnosticRequestState_b',0
	.word	157
	.byte	1,2,35,17,10
	.byte	'CommunicationAllowed_b',0
	.word	157
	.byte	1,2,35,18,10
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	157
	.byte	1,2,35,19,10
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	157
	.byte	1,2,35,20,10
	.byte	'NmNetworkModeStatus_b',0
	.word	157
	.byte	1,2,35,21,0,13
	.byte	'ComM_ChannelStruct_Impl',0,21,197,1,3
	.word	11213
	.byte	9,21,206,1,9,10,10
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	487
	.byte	2,2,35,0,10
	.byte	'LimitToNoComCtr_u16',0
	.word	487
	.byte	2,2,35,2,10
	.byte	'RequestedUserMode_t',0
	.word	157
	.byte	1,2,35,4,10
	.byte	'IndicatedUserMode_t',0
	.word	157
	.byte	1,2,35,5,10
	.byte	'numChannelsInFullCom_u8',0
	.word	157
	.byte	1,2,35,6,10
	.byte	'numChannelsInSilentCom_u8',0
	.word	157
	.byte	1,2,35,7,10
	.byte	'numChannelsInNoCom_u8',0
	.word	157
	.byte	1,2,35,8,0,13
	.byte	'ComM_UserStruct_Impl',0,21,214,1,3
	.word	11717
	.byte	13
	.byte	'Dcm_ConfirmationStatusType',0,21,243,1,15
	.word	157
	.byte	13
	.byte	'Dcm_IOOperationResponseType',0,21,252,1,15
	.word	157
	.byte	13
	.byte	'Dcm_NegativeResponseCodeType',0,21,132,2,15
	.word	157
	.byte	13
	.byte	'Dcm_OpStatusType',0,21,134,2,15
	.word	157
	.byte	13
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	21,138,2,15
	.word	157
	.byte	13
	.byte	'Dcm_SecLevelType',0,21,142,2,15
	.word	157
	.byte	13
	.byte	'Dcm_SesCtrlType',0,21,144,2,15
	.word	157
	.byte	13
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,21,146,2,15
	.word	157
	.byte	13
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,21,150,2,15
	.word	157
	.byte	13
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,21,154,2,15
	.word	157
	.byte	13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,21,243,3,34
	.word	10460
	.byte	27,128,8
	.word	157
	.byte	28,255,7,0,13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,21,246,3,34
	.word	10460
	.byte	13
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,22,37,15
	.word	157
	.byte	13
	.byte	'Dcm_SrvOpStatusType',0,5,62,15
	.word	157
	.byte	13
	.byte	'Dcm_MsgItemType',0,5,182,2,15
	.word	157
	.byte	13
	.byte	'Dcm_MsgLenType',0,5,197,2,16
	.word	826
	.byte	13
	.byte	'Dcm_MsgAddInfoType',0,5,219,2,2
	.word	2050
	.byte	13
	.byte	'Dcm_IdContextType',0,5,225,2,15
	.word	157
	.byte	13
	.byte	'Dcm_MsgContextType',0,5,188,3,2
	.word	2128
	.byte	9,5,238,5,9,32,10
	.byte	'tx_buffer_pa',0
	.word	2029
	.byte	4,2,35,0,10
	.byte	'rx_mainBuffer_pa',0
	.word	2029
	.byte	4,2,35,4,10
	.byte	'tx_buffer_size_u32',0
	.word	826
	.byte	4,2,35,8,10
	.byte	'rx_buffer_size_u32',0
	.word	826
	.byte	4,2,35,12,10
	.byte	'dataP2TmrAdjust',0
	.word	826
	.byte	4,2,35,16,10
	.byte	'dataP2StarTmrAdjust',0
	.word	826
	.byte	4,2,35,20,10
	.byte	'protocolid_u8',0
	.word	157
	.byte	1,2,35,24,10
	.byte	'sid_tableid_u8',0
	.word	157
	.byte	1,2,35,25,10
	.byte	'premption_level_u8',0
	.word	157
	.byte	1,2,35,26,10
	.byte	'pduinfo_idx_u8',0
	.word	157
	.byte	1,2,35,27,10
	.byte	'nrc21_b',0
	.word	157
	.byte	1,2,35,28,10
	.byte	'sendRespPendTransToBoot',0
	.word	157
	.byte	1,2,35,29,0,13
	.byte	'Dcm_Dsld_protocol_tableType',0,5,143,6,2
	.word	12895
	.byte	31,1,1,21
	.word	157
	.byte	21
	.word	487
	.byte	21
	.word	487
	.byte	21
	.word	157
	.byte	0,3
	.word	13246
	.byte	13
	.byte	'Dcm_ConfirmationApiType',0,5,145,6,16
	.word	13270
	.byte	20
	.word	157
	.byte	1,1,21
	.word	3071
	.byte	21
	.word	157
	.byte	21
	.word	157
	.byte	0,3
	.word	13308
	.byte	3
	.word	2128
	.byte	20
	.word	157
	.byte	1,1,21
	.word	157
	.byte	21
	.word	13336
	.byte	21
	.word	3071
	.byte	0,3
	.word	13341
	.byte	9,5,158,6,9,20,10
	.byte	'allowed_session_b32',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'allowed_security_b32',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	13331
	.byte	4,2,35,8,10
	.byte	'SubFunc_fp',0
	.word	13364
	.byte	4,2,35,12,10
	.byte	'subservice_id_u8',0
	.word	157
	.byte	1,2,35,16,10
	.byte	'isDspRDTCSubFnc_b',0
	.word	157
	.byte	1,2,35,17,0,13
	.byte	'Dcm_Dsld_SubServiceType',0,5,169,6,2
	.word	13369
	.byte	15
	.word	13369
	.byte	3
	.word	13581
	.byte	20
	.word	157
	.byte	1,1,21
	.word	3071
	.byte	21
	.word	157
	.byte	0,3
	.word	13591
	.byte	9,5,186,6,9,36,10
	.byte	'allowed_session_b32',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'allowed_security_b32',0
	.word	826
	.byte	4,2,35,4,10
	.byte	'service_handler_fp',0
	.word	13364
	.byte	4,2,35,8,10
	.byte	'Service_init_fp',0
	.word	5145
	.byte	4,2,35,12,10
	.byte	'sid_u8',0
	.word	157
	.byte	1,2,35,16,10
	.byte	'subfunction_exist_b',0
	.word	157
	.byte	1,2,35,17,10
	.byte	'servicelocator_b',0
	.word	157
	.byte	1,2,35,18,10
	.byte	'ptr_subservice_table_pcs',0
	.word	13586
	.byte	4,2,35,20,10
	.byte	'num_sf_u8',0
	.word	157
	.byte	1,2,35,24,10
	.byte	'adrUserServiceModeRule_pfct',0
	.word	13609
	.byte	4,2,35,28,10
	.byte	'Dcm_ConfirmationService',0
	.word	13275
	.byte	4,2,35,32,0,13
	.byte	'Dcm_Dsld_ServiceType',0,5,204,6,3
	.word	13614
	.byte	3
	.word	13246
	.byte	15
	.word	13614
	.byte	3
	.word	13962
	.byte	9,5,218,6,9,8,10
	.byte	'ptr_service_table_pcs',0
	.word	13967
	.byte	4,2,35,0,10
	.byte	'num_services_u8',0
	.word	157
	.byte	1,2,35,4,10
	.byte	'nrc_sessnot_supported_u8',0
	.word	157
	.byte	1,2,35,5,10
	.byte	'cdtc_index_u8',0
	.word	157
	.byte	1,2,35,6,0,13
	.byte	'Dcm_Dsld_sid_tableType',0,5,224,6,3
	.word	13972
	.byte	9,5,238,6,9,14,10
	.byte	'protocol_num_u8',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'txpduid_num_u8',0
	.word	487
	.byte	2,2,35,2,10
	.byte	'roetype2_txpdu_u8',0
	.word	487
	.byte	2,2,35,4,10
	.byte	'rdpitype2_txpdu_u8',0
	.word	487
	.byte	2,2,35,6,10
	.byte	'testaddr_u16',0
	.word	487
	.byte	2,2,35,8,10
	.byte	'channel_idx_u8',0
	.word	157
	.byte	1,2,35,10,10
	.byte	'ConnectionIndex_u8',0
	.word	157
	.byte	1,2,35,11,10
	.byte	'NumberOfTxpdu_u8',0
	.word	157
	.byte	1,2,35,12,0,13
	.byte	'Dcm_Dsld_connType',0,5,248,6,3
	.word	14124
	.byte	11,5,146,7,9,4,12
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,12
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,12
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,13
	.byte	'Dcm_Dsld_commodeType',0,5,151,7,2
	.word	14362
	.byte	11,23,200,1,9,4,12
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,12
	.byte	'USE_ASYNCH_FNC',0,1,0,13
	.byte	'DcmDspSecurityUsePort',0,23,204,1,2
	.word	14474
	.byte	11,24,22,9,4,12
	.byte	'DCM_NO_BOOT',0,0,12
	.byte	'DCM_OEM_BOOT',0,1,12
	.byte	'DCM_SYS_BOOT',0,2,0,13
	.byte	'Dcm_SessionForBootType',0,24,27,2
	.word	14556
	.byte	13
	.byte	'Dcm_Direction_t',0,6,208,1,3
	.word	1838
	.byte	13
	.byte	'Dcm_SupportRet_t',0,6,232,1,3
	.word	1686
	.byte	13
	.byte	'Dcm_DIDIndexType_tst',0,6,254,1,3
	.word	1411
	.byte	11,6,192,3,9,4,12
	.byte	'DCM_READ_OK',0,0,12
	.byte	'DCM_READ_FAILED',0,1,12
	.byte	'DCM_READ_PENDING',0,2,12
	.byte	'DCM_READ_FORCE_RCRRP',0,3,12
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,13
	.byte	'Dcm_ReadMemoryRet_t',0,6,199,3,3
	.word	14718
	.byte	26
	.byte	'Dcm_SrvOpstatus_u8',0,25,80,28
	.word	157
	.byte	1,1,11,26,21,9,4,12
	.byte	'DSD_IDLE',0,0,12
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,12
	.byte	'DSD_CALL_SERVICE',0,2,12
	.byte	'DSD_WAITFORTXCONF',0,3,12
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,13
	.byte	'Dcm_DsdStatesType_ten',0,26,28,2
	.word	14882
	.byte	11,8,215,2,9,4,12
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,12
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,13
	.byte	'Dcm_DsldResponseType_ten',0,8,219,2,2
	.word	15019
	.byte	11,9,148,1,9,4,12
	.byte	'DCM_ROE_CLEARED',0,0,12
	.byte	'DCM_ROE_STOPPED',0,1,12
	.byte	'DCM_ROE_STARTED',0,2,0,13
	.byte	'Dcm_DspRoeEventState_ten',0,9,153,1,2
	.word	15108
	.byte	13
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,9,236,1,2
	.word	3104
	.byte	13
	.byte	'Dcm_ExtendedDIDConfig_tst',0,9,141,2,3
	.word	3186
	.byte	13
	.byte	'Dcm_SignalDIDSubStructConfig_tst',0,9,178,2,2
	.word	4050
	.byte	13
	.byte	'Dcm_DataInfoConfig_tst',0,9,197,2,2
	.word	3815
	.byte	13
	.byte	'Dcm_SignalDIDConfig_tst',0,9,204,2,3
	.word	2999
	.byte	13
	.byte	'Dcm_DIDConfig_tst',0,9,229,2,3
	.word	3608
	.byte	24
	.word	3608
	.byte	25,0,15
	.word	15407
	.byte	26
	.byte	'Dcm_DIDConfig',0,9,234,3,44
	.word	15414
	.byte	1,1,24
	.word	3815
	.byte	25,0,15
	.word	15444
	.byte	26
	.byte	'Dcm_DspDataInfo_st',0,9,235,3,50
	.word	15451
	.byte	1,1,24
	.word	4050
	.byte	25,0,15
	.word	15486
	.byte	26
	.byte	'Dcm_DspDid_ControlInfo_st',0,9,236,3,60
	.word	15493
	.byte	1,1,26
	.byte	'Dcm_DidSignalIdx_u16',0,9,145,4,29
	.word	487
	.byte	1,1,13
	.byte	'Rte_TaskRefType',0,27,184,1,32
	.word	6947
	.byte	13
	.byte	'Rte_EventRefType',0,27,185,1,32
	.word	157
	.byte	13
	.byte	'Rte_EventType',0,27,186,1,32
	.word	826
	.byte	13
	.byte	'Rte_REActCounterType',0,27,252,1,15
	.word	157
	.byte	3
	.word	157
	.byte	13
	.byte	'Rte_REActCounterRefType',0,27,253,1,58
	.word	15671
	.byte	9,27,255,1,9,8,10
	.byte	'task',0
	.word	15567
	.byte	4,2,35,0,10
	.byte	'acnt',0
	.word	15676
	.byte	4,2,35,4,0,13
	.byte	'Rte_REContainerType',0,27,130,2,3
	.word	15709
	.byte	15
	.word	6687
	.byte	3
	.word	15773
	.byte	3
	.word	157
	.byte	15
	.word	15709
	.byte	3
	.word	15788
	.byte	13
	.byte	'Rte_REContainerRefType',0,27,132,2,60
	.word	15793
	.byte	13
	.byte	'Rte_MSICounterType',0,27,149,2,16
	.word	487
	.byte	3
	.word	487
	.byte	13
	.byte	'Rte_MSICounterRefType',0,27,150,2,56
	.word	15858
	.byte	13
	.byte	'Rte_MSIPendingFlagType',0,27,152,2,17
	.word	157
	.byte	3
	.word	157
	.byte	13
	.byte	'Rte_MSIPendingFlagRefType',0,27,153,2,60
	.word	15926
	.byte	9,27,163,2,9,24,10
	.byte	'counter',0
	.word	15863
	.byte	4,2,35,0,10
	.byte	'incCounter',0
	.word	157
	.byte	1,2,35,4,10
	.byte	'pending',0
	.word	15931
	.byte	4,2,35,8,10
	.byte	'osTask',0
	.word	15567
	.byte	4,2,35,12,10
	.byte	'acnt',0
	.word	15676
	.byte	4,2,35,16,10
	.byte	'osEvent',0
	.word	157
	.byte	1,2,35,20,10
	.byte	'MSIInit',0
	.word	487
	.byte	2,2,35,22,0,13
	.byte	'Rte_MSITableEntry',0,27,172,2,3
	.word	15966
	.byte	3
	.word	487
	.byte	3
	.word	157
	.byte	13
	.byte	'Rte_TaskArrayIndex',0,27,179,2,16
	.word	157
	.byte	13
	.byte	'Rte_NrWaitingTasks',0,27,180,2,16
	.word	157
	.byte	9,27,182,2,9,4,10
	.byte	'pending',0
	.word	157
	.byte	1,2,35,0,10
	.byte	'count',0
	.word	157
	.byte	1,2,35,1,10
	.byte	'firstWaitingTask',0
	.word	157
	.byte	1,2,35,2,0,13
	.byte	'Rte_WaitableDatum',0,27,186,2,3
	.word	16184
	.byte	3
	.word	16184
	.byte	9,27,226,2,9,12,10
	.byte	'event_id',0
	.word	826
	.byte	4,2,35,0,10
	.byte	'wd',0
	.word	16276
	.byte	4,2,35,4,10
	.byte	'timeout',0
	.word	826
	.byte	4,2,35,8,0,13
	.byte	'Rte_WOWP_NotificationType',0,27,230,2,3
	.word	16281
	.byte	15
	.word	16281
	.byte	3
	.word	16370
	.byte	13
	.byte	'Rte_WOWP_NotificationRefType',0,27,232,2,66
	.word	16375
	.byte	13
	.byte	'Rte_ARE_NotificationType',0,27,234,2,29
	.word	15709
	.byte	30
	.byte	'Rte_QTaskType',0,27,243,2,16,28,10
	.byte	'cmn',0
	.word	10211
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	15567
	.byte	4,2,35,24,0,13
	.byte	'Rte_QTaskType',0,27,246,2,3
	.word	16452
	.byte	30
	.byte	'Rte_QREType',0,27,250,2,16,28,10
	.byte	'cmn',0
	.word	10211
	.byte	24,2,35,0,10
	.byte	're',0
	.word	15798
	.byte	4,2,35,24,0,13
	.byte	'Rte_QREType',0,27,253,2,3
	.word	16523
	.byte	15
	.word	15709
	.byte	3
	.word	16588
	.byte	30
	.byte	'Rte_QWWPType',0,27,129,3,16,28,10
	.byte	'cmn',0
	.word	10211
	.byte	24,2,35,0,10
	.byte	'wwp',0
	.word	16380
	.byte	4,2,35,24,0,13
	.byte	'Rte_QWWPType',0,27,132,3,3
	.word	16598
	.byte	15
	.word	16281
	.byte	3
	.word	16666
	.byte	30
	.byte	'Rte_QEvType',0,27,136,3,16,36,10
	.byte	'cmn',0
	.word	10211
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	15567
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	157
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	15676
	.byte	4,2,35,32,0,13
	.byte	'Rte_QEvType',0,27,141,3,3
	.word	16676
	.byte	30
	.byte	'Rte_QMSIType',0,27,145,3,16,48,10
	.byte	'cmn',0
	.word	10211
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	15567
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	157
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	15676
	.byte	4,2,35,32,10
	.byte	'msiCounter',0
	.word	15863
	.byte	4,2,35,36,10
	.byte	'msiPending',0
	.word	15931
	.byte	4,2,35,40,10
	.byte	'msiLimit',0
	.word	487
	.byte	2,2,35,44,0,13
	.byte	'Rte_QMSIType',0,27,153,3,3
	.word	16771
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	9,19,1,58,15,59,15,57,15,11,15,0,0,10,13,0,3,8,73,19,11,15,56,9,0,0,11,4,1,58,15,59,15,57,15,11,15,0,0
	.byte	12,40,0,3,8,28,13,0,0,13,22,0,3,8,58,15,59,15,57,15,73,19,0,0,14,46,0,3,8,58,15,59,15,57,15,73,19,54,15
	.byte	39,12,63,12,60,12,0,0,15,38,0,73,19,0,0,16,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,17,46
	.byte	1,49,19,0,0,18,5,0,49,19,0,0,19,59,0,3,8,0,0,20,21,1,73,19,54,15,39,12,0,0,21,5,0,73,19,0,0,22,46,0,3
	.byte	8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,23,21,0,54,15,0,0,24,1,1,73,19,0,0,25,33,0,0,0,26,52,0,3,8,58
	.byte	15,59,15,57,15,73,19,63,12,60,12,0,0,27,1,1,11,15,73,19,0,0,28,33,0,47,15,0,0,29,21,0,54,15,39,12,0,0
	.byte	30,19,1,3,8,58,15,59,15,57,15,11,15,0,0,31,21,1,54,15,39,12,0,0,32,23,1,58,15,59,15,57,15,11,15,0,0,33
	.byte	4,1,3,8,58,15,59,15,57,15,11,15,0,0,34,21,0,73,19,54,15,39,12,0,0,35,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L145:
	.word	.L460-.L459
.L459:
	.half	3
	.word	.L462-.L461
.L461:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi_Priv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Cfg_DslDsd.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\Dcm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L462:
.L460:
	.sdecl	'.debug_info',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_info'
.L146:
	.word	333
	.half	3
	.word	.L147
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L149,.L148
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_DcmWriteDataByIdentifier',0,1,144,11,31
	.word	.L238
	.byte	1,1,1
	.word	.L139,.L239,.L138
	.byte	4
	.byte	'OpStatus',0,1,145,11,69
	.word	.L238,.L240
	.byte	4
	.byte	'pMsgContext',0,1,146,11,86
	.word	.L241,.L242
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,147,11,96
	.word	.L243,.L244
	.byte	5
	.word	.L139,.L239
	.byte	6
	.byte	'dataRetVal_u8',0,1,151,11,36
	.word	.L238,.L245
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_abbrev'
.L147:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_line'
.L148:
	.word	.L464-.L463
.L463:
	.half	3
	.word	.L466-.L465
.L465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L466:
	.byte	5,31,7,0,5,2
	.word	.L139
	.byte	3,143,11,1,5,5,9
	.half	.L450-.L139
	.byte	3,10,1,5,21,9
	.half	.L467-.L450
	.byte	1,5,19,9
	.half	.L468-.L467
	.byte	1,5,27,9
	.half	.L469-.L468
	.byte	3,3,1,5,25,9
	.half	.L470-.L469
	.byte	1,5,5,9
	.half	.L471-.L470
	.byte	3,1,1,5,27,9
	.half	.L472-.L471
	.byte	1,5,25,9
	.half	.L473-.L472
	.byte	1,5,5,9
	.half	.L474-.L473
	.byte	3,1,1,5,30,9
	.half	.L475-.L474
	.byte	1,5,28,9
	.half	.L476-.L475
	.byte	1,5,5,9
	.half	.L477-.L476
	.byte	3,3,1,5,25,7,9
	.half	.L478-.L477
	.byte	3,3,1,5,23,9
	.half	.L448-.L478
	.byte	3,2,1,5,27,9
	.half	.L451-.L448
	.byte	3,126,1,5,56,9
	.half	.L104-.L451
	.byte	3,7,1,5,80,9
	.half	.L452-.L104
	.byte	3,2,1,5,9,9
	.half	.L105-.L452
	.byte	3,2,1,5,1,9
	.half	.L106-.L105
	.byte	3,1,1,7,9
	.half	.L150-.L106
	.byte	0,1,1
.L464:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_ranges'
.L149:
	.word	-1,.L139,0,.L150-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_info'
.L151:
	.word	210
	.half	3
	.word	.L152
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L154,.L153
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Dcm_WDBIInit',0,1,176,1,21,1,1,1
	.word	.L113,.L246,.L112
	.byte	4
	.word	.L113,.L246
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_abbrev'
.L152:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_line'
.L153:
	.word	.L480-.L479
.L479:
	.half	3
	.word	.L482-.L481
.L481:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L482:
	.byte	5,5,7,0,5,2
	.word	.L113
	.byte	3,184,1,1,5,25,9
	.half	.L483-.L113
	.byte	1,5,24,9
	.half	.L484-.L483
	.byte	1,5,9,9
	.half	.L485-.L484
	.byte	3,4,1,5,8,9
	.half	.L486-.L485
	.byte	1,5,54,7,9
	.half	.L487-.L486
	.byte	1,5,79,9
	.half	.L488-.L487
	.byte	1,5,91,9
	.half	.L489-.L488
	.byte	1,5,32,7,9
	.half	.L490-.L489
	.byte	3,3,1,5,34,9
	.half	.L491-.L490
	.byte	1,5,5,9
	.half	.L4-.L491
	.byte	3,27,1,5,27,9
	.half	.L492-.L4
	.byte	1,5,24,9
	.half	.L493-.L492
	.byte	1,5,5,9
	.half	.L494-.L493
	.byte	3,2,1,5,28,9
	.half	.L495-.L494
	.byte	1,5,26,9
	.half	.L496-.L495
	.byte	1,5,32,9
	.half	.L497-.L496
	.byte	3,6,1,5,30,9
	.half	.L498-.L497
	.byte	1,9
	.half	.L499-.L498
	.byte	3,1,1,5,1,9
	.half	.L500-.L499
	.byte	3,1,1,7,9
	.half	.L155-.L500
	.byte	0,1,1
.L480:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_ranges'
.L154:
	.word	-1,.L113,0,.L155-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_info'
.L156:
	.word	271
	.half	3
	.word	.L157
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L159,.L158
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_GetActiveWDBIDid',0,1,189,11,31
	.word	.L238
	.byte	1,1,1
	.word	.L141,.L247,.L140
	.byte	4
	.byte	'dataDid_u16',0,1,189,11,92
	.word	.L248,.L249
	.byte	5
	.word	.L141,.L247
	.byte	6
	.byte	'dataRetVal_u8',0,1,191,11,35
	.word	.L238,.L250
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_abbrev'
.L157:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_line'
.L158:
	.word	.L502-.L501
.L501:
	.half	3
	.word	.L504-.L503
.L503:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L504:
	.byte	5,19,7,0,5,2
	.word	.L141
	.byte	3,193,11,1,5,8,9
	.half	.L457-.L141
	.byte	3,4,1,5,33,9
	.half	.L505-.L457
	.byte	1,5,5,9
	.half	.L506-.L505
	.byte	1,5,63,7,9
	.half	.L507-.L506
	.byte	3,3,1,5,24,9
	.half	.L508-.L507
	.byte	1,5,37,9
	.half	.L509-.L508
	.byte	1,5,77,9
	.half	.L510-.L509
	.byte	1,5,22,9
	.half	.L511-.L510
	.byte	1,5,23,9
	.half	.L512-.L511
	.byte	3,2,1,5,89,9
	.half	.L513-.L512
	.byte	3,126,1,5,5,9
	.half	.L108-.L513
	.byte	3,13,1,5,1,9
	.half	.L109-.L108
	.byte	3,1,1,7,9
	.half	.L160-.L109
	.byte	0,1,1
.L502:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_ranges'
.L159:
	.word	-1,.L141,0,.L160-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_info'
.L161:
	.word	268
	.half	3
	.word	.L162
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L164,.L163
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WDBIINIT_Pending',0,1,67,28,1,1
	.word	.L111,.L251,.L110
	.byte	4
	.word	.L111,.L251
	.byte	5
	.byte	'dataNegResCode',0,1,69,49
	.word	.L238,.L252
	.byte	5
	.byte	'ptrWriteFnc',0,1,70,45
	.word	.L253,.L254
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_abbrev'
.L162:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_line'
.L163:
	.word	.L515-.L514
.L514:
	.half	3
	.word	.L517-.L516
.L516:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L517:
	.byte	5,9,7,0,5,2
	.word	.L111
	.byte	3,164,1,1,7,9
	.half	.L165-.L111
	.byte	0,1,1
.L515:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_ranges'
.L164:
	.word	-1,.L111,0,.L165-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_info'
.L166:
	.word	397
	.half	3
	.word	.L167
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L169,.L168
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_SenderReceiverVariableSignalGetBuffer',0,1,244,1,28,1,1
	.word	.L115,.L255,.L114
	.byte	4
	.byte	'pMsgContext',0,1,245,1,85
	.word	.L256,.L257
	.byte	4
	.byte	'ptrDidConfig',0,1,246,1,84
	.word	.L258,.L259
	.byte	4
	.byte	'ptrSigConfig',0,1,247,1,89
	.word	.L260,.L261
	.byte	4
	.byte	'nrElements_u16',0,1,248,1,53
	.word	.L262,.L263
	.byte	5
	.word	.L115,.L255
	.byte	6
	.byte	'idxLoop_u16',0,1,252,1,29
	.word	.L262,.L264
	.byte	6
	.byte	'dataSignal_u32',0,1,253,1,29
	.word	.L265,.L266
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_abbrev'
.L167:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_line'
.L168:
	.word	.L519-.L518
.L518:
	.half	3
	.word	.L521-.L520
.L520:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L521:
	.byte	5,28,7,0,5,2
	.word	.L115
	.byte	3,243,1,1,5,41,9
	.half	.L354-.L115
	.byte	3,8,1,5,28,9
	.half	.L5-.L354
	.byte	3,5,1,5,17,9
	.half	.L522-.L5
	.byte	3,3,1,5,46,9
	.half	.L6-.L522
	.byte	3,2,1,5,72,9
	.half	.L523-.L6
	.byte	1,5,71,9
	.half	.L524-.L523
	.byte	1,5,93,9
	.half	.L525-.L524
	.byte	1,5,119,9
	.half	.L526-.L525
	.byte	1,5,109,9
	.half	.L527-.L526
	.byte	1,5,46,9
	.half	.L528-.L527
	.byte	3,1,1,5,55,9
	.half	.L529-.L528
	.byte	1,5,74,9
	.half	.L530-.L529
	.byte	1,5,17,9
	.half	.L356-.L530
	.byte	3,2,1,5,39,9
	.half	.L531-.L356
	.byte	1,5,52,9
	.half	.L532-.L531
	.byte	1,5,17,9
	.half	.L533-.L532
	.byte	3,1,1,5,19,9
	.half	.L7-.L533
	.byte	3,56,1,9
	.half	.L8-.L7
	.byte	3,3,1,5,43,9
	.half	.L357-.L8
	.byte	3,2,1,5,1,7,9
	.half	.L534-.L357
	.byte	3,3,1,7,9
	.half	.L170-.L534
	.byte	0,1,1
.L519:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_ranges'
.L169:
	.word	-1,.L115,0,.L170-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_info'
.L171:
	.word	370
	.half	3
	.word	.L172
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L174,.L173
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteSenderReceiverVariableLengthSignal',0,1,217,2,28,1,1
	.word	.L117,.L267,.L116
	.byte	4
	.byte	'pMsgContext',0,1,218,2,85
	.word	.L256,.L268
	.byte	4
	.byte	'ptrDidConfig',0,1,219,2,84
	.word	.L258,.L269
	.byte	4
	.byte	'ptrSigConfig',0,1,220,2,89
	.word	.L260,.L270
	.byte	4
	.byte	'ptrWriteFnc',0,1,222,2,71
	.word	.L253,.L271
	.byte	4
	.byte	'nrElements_u16',0,1,223,2,54
	.word	.L262,.L272
	.byte	5
	.word	.L117,.L267
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_abbrev'
.L172:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_line'
.L173:
	.word	.L536-.L535
.L535:
	.half	3
	.word	.L538-.L537
.L537:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L538:
	.byte	5,28,7,0,5,2
	.word	.L117
	.byte	3,216,2,1,5,89,9
	.half	.L361-.L117
	.byte	3,9,1,5,22,9
	.half	.L358-.L361
	.byte	3,2,1,5,15,9
	.half	.L539-.L358
	.byte	3,4,1,5,13,9
	.half	.L10-.L539
	.byte	3,2,1,5,68,9
	.half	.L540-.L10
	.byte	1,5,33,9
	.half	.L541-.L540
	.byte	1,5,13,9
	.half	.L542-.L541
	.byte	3,1,1,9
	.half	.L11-.L542
	.byte	3,46,1,5,3,9
	.half	.L12-.L11
	.byte	3,4,1,7,9
	.half	.L175-.L12
	.byte	0,1,1
.L536:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_ranges'
.L174:
	.word	-1,.L117,0,.L175-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_info'
.L176:
	.word	395
	.half	3
	.word	.L177
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L179,.L178
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteSenderReceiverFixedLengthSignal',0,1,170,3,28,1,1
	.word	.L119,.L273,.L118
	.byte	4
	.byte	'pMsgContext',0,1,171,3,85
	.word	.L256,.L274
	.byte	4
	.byte	'ptrDidConfig',0,1,172,3,84
	.word	.L258,.L275
	.byte	4
	.byte	'ptrSigConfig',0,1,173,3,89
	.word	.L260,.L276
	.byte	4
	.byte	'ptrWriteFnc',0,1,175,3,71
	.word	.L253,.L277
	.byte	5
	.word	.L119,.L273
	.byte	6
	.byte	'dataSignal_u32',0,1,179,3,25
	.word	.L265,.L278
	.byte	6
	.byte	'dataSignal_u8',0,1,194,3,29
	.word	.L238,.L279
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_abbrev'
.L177:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_line'
.L178:
	.word	.L544-.L543
.L543:
	.half	3
	.word	.L546-.L545
.L545:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L546:
	.byte	5,28,7,0,5,2
	.word	.L119
	.byte	3,169,3,1,5,48,9
	.half	.L367-.L119
	.byte	3,35,1,9
	.half	.L547-.L367
	.byte	3,1,1,5,74,9
	.half	.L548-.L547
	.byte	1,5,73,9
	.half	.L549-.L548
	.byte	1,5,95,9
	.half	.L550-.L549
	.byte	1,5,48,9
	.half	.L551-.L550
	.byte	3,1,1,5,57,9
	.half	.L362-.L551
	.byte	1,5,76,9
	.half	.L552-.L362
	.byte	1,5,23,9
	.half	.L364-.L552
	.byte	3,1,1,5,14,9
	.half	.L553-.L364
	.byte	3,12,1,5,33,9
	.half	.L14-.L553
	.byte	3,2,1,5,18,9
	.half	.L369-.L14
	.byte	3,2,1,5,72,9
	.half	.L554-.L369
	.byte	1,5,38,9
	.half	.L368-.L554
	.byte	1,5,18,9
	.half	.L555-.L368
	.byte	3,1,1,5,13,9
	.half	.L15-.L555
	.byte	3,46,1,5,1,9
	.half	.L16-.L15
	.byte	3,4,1,7,9
	.half	.L180-.L16
	.byte	0,1,1
.L544:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_ranges'
.L179:
	.word	-1,.L119,0,.L180-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_info'
.L181:
	.word	487
	.half	3
	.word	.L182
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L184,.L183
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteSenderReceiverSignal',0,1,160,4,28,1,1
	.word	.L121,.L280,.L120
	.byte	4
	.byte	'pMsgContext',0,1,161,4,85
	.word	.L256,.L281
	.byte	4
	.byte	'ptrDidConfig',0,1,162,4,84
	.word	.L258,.L282
	.byte	4
	.byte	'ptrSigConfig',0,1,163,4,89
	.word	.L260,.L283
	.byte	4
	.byte	'ptrWriteFnc',0,1,165,4,71
	.word	.L253,.L284
	.byte	5
	.word	.L121,.L280
	.byte	6
	.byte	'nrElements_u16',0,1,167,4,28
	.word	.L262,.L285
	.byte	7
	.word	.L286,.L287,.L288
	.byte	8
	.word	.L289,.L290
	.byte	8
	.word	.L291,.L292
	.byte	9
	.word	.L293,.L287,.L288
	.byte	6
	.byte	'Status',0,2,20,13
	.word	.L238,.L294
	.byte	0,0,7
	.word	.L295,.L30,.L296
	.byte	8
	.word	.L297,.L298
	.byte	8
	.word	.L299,.L300
	.byte	9
	.word	.L301,.L30,.L296
	.byte	6
	.byte	'Status',0,2,39,13
	.word	.L238,.L302
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_abbrev'
.L182:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_line'
.L183:
	.word	.L557-.L556
.L556:
	.half	3
	.word	.L559-.L558
.L558:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi_Priv.h',0,0,0,0,0
.L559:
	.byte	5,43,7,0,5,2
	.word	.L121
	.byte	3,166,4,1,5,54,9
	.half	.L371-.L121
	.byte	3,4,1,5,81,9
	.half	.L560-.L371
	.byte	1,4,2,5,20,9
	.half	.L287-.L560
	.byte	3,233,123,1,5,10,9
	.half	.L372-.L287
	.byte	3,1,1,5,42,7,9
	.half	.L561-.L372
	.byte	1,5,27,7,9
	.half	.L18-.L561
	.byte	3,1,1,5,12,9
	.half	.L562-.L18
	.byte	1,7,9
	.half	.L563-.L562
	.byte	3,1,1,5,49,7,9
	.half	.L564-.L563
	.byte	1,5,27,7,9
	.half	.L20-.L564
	.byte	3,1,1,5,12,9
	.half	.L565-.L20
	.byte	1,7,9
	.half	.L566-.L565
	.byte	3,1,1,5,50,7,9
	.half	.L567-.L566
	.byte	1,5,27,7,9
	.half	.L23-.L567
	.byte	3,1,1,5,12,9
	.half	.L568-.L23
	.byte	1,7,9
	.half	.L569-.L568
	.byte	3,1,1,5,50,7,9
	.half	.L570-.L569
	.byte	1,5,22,7,9
	.half	.L24-.L570
	.byte	3,3,1,5,6,9
	.half	.L26-.L24
	.byte	3,4,1,4,1,5,5,9
	.half	.L29-.L26
	.byte	3,137,4,1,5,96,7,9
	.half	.L288-.L29
	.byte	3,3,1,5,108,9
	.half	.L370-.L288
	.byte	1,4,2,5,20,9
	.half	.L30-.L370
	.byte	3,249,123,1,5,9,9
	.half	.L373-.L30
	.byte	3,1,1,5,8,7,9
	.half	.L571-.L373
	.byte	3,1,1,5,45,7,9
	.half	.L572-.L571
	.byte	1,5,22,7,9
	.half	.L32-.L572
	.byte	3,1,1,5,8,9
	.half	.L573-.L32
	.byte	1,7,9
	.half	.L574-.L573
	.byte	3,1,1,5,46,7,9
	.half	.L575-.L574
	.byte	1,5,22,7,9
	.half	.L35-.L575
	.byte	3,1,1,5,8,9
	.half	.L576-.L35
	.byte	1,7,9
	.half	.L577-.L576
	.byte	3,1,1,5,46,7,9
	.half	.L578-.L577
	.byte	1,5,16,7,9
	.half	.L36-.L578
	.byte	3,4,1,5,5,9
	.half	.L38-.L36
	.byte	3,4,1,4,1,5,6,9
	.half	.L41-.L38
	.byte	3,254,3,1,5,21,7,9
	.half	.L296-.L41
	.byte	3,9,1,9
	.half	.L579-.L296
	.byte	3,1,1,5,50,9
	.half	.L44-.L579
	.byte	3,1,1,5,20,9
	.half	.L580-.L44
	.byte	3,1,1,9
	.half	.L45-.L580
	.byte	3,19,1,5,111,9
	.half	.L42-.L45
	.byte	3,5,1,5,1,9
	.half	.L31-.L42
	.byte	3,4,1,7,9
	.half	.L185-.L31
	.byte	0,1,1
.L557:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_ranges'
.L184:
	.word	-1,.L121,0,.L185-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_info'
.L186:
	.word	382
	.half	3
	.word	.L187
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L189,.L188
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteDidUsePort',0,1,198,5,28,1,1
	.word	.L123,.L303,.L122
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,199,5,91
	.word	.L243,.L304
	.byte	4
	.byte	'pMsgContext',0,1,200,5,84
	.word	.L256,.L305
	.byte	4
	.byte	'ptrWriteFnc',0,1,201,5,70
	.word	.L253,.L306
	.byte	4
	.byte	'ptrDidConfig',0,1,202,5,83
	.word	.L258,.L307
	.byte	4
	.byte	'posnDidSignal_u16',0,1,203,5,54
	.word	.L262,.L308
	.byte	5
	.word	.L123,.L303
	.byte	6
	.byte	'ptrSigConfig',0,1,207,5,64
	.word	.L260,.L309
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_abbrev'
.L187:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_line'
.L188:
	.word	.L582-.L581
.L581:
	.half	3
	.word	.L584-.L583
.L583:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L584:
	.byte	5,28,7,0,5,2
	.word	.L123
	.byte	3,197,5,1,5,52,9
	.half	.L379-.L123
	.byte	3,10,1,5,78,9
	.half	.L585-.L379
	.byte	1,5,77,9
	.half	.L586-.L585
	.byte	1,5,99,9
	.half	.L587-.L586
	.byte	1,5,21,9
	.half	.L588-.L587
	.byte	1,5,39,9
	.half	.L589-.L588
	.byte	1,5,21,9
	.half	.L378-.L589
	.byte	3,34,1,5,8,9
	.half	.L590-.L378
	.byte	1,5,90,7,9
	.half	.L591-.L590
	.byte	1,5,28,7,9
	.half	.L48-.L591
	.byte	3,1,1,5,81,7,9
	.half	.L592-.L48
	.byte	3,2,1,5,1,9
	.half	.L49-.L592
	.byte	3,3,1,7,9
	.half	.L190-.L49
	.byte	0,1,1
.L582:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_ranges'
.L189:
	.word	-1,.L123,0,.L190-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_info'
.L191:
	.word	474
	.half	3
	.word	.L192
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L194,.L193
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteNormalDID',0,1,224,6,28,1,1
	.word	.L125,.L310,.L124
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,225,6,88
	.word	.L243,.L311
	.byte	4
	.byte	'pMsgContext',0,1,226,6,81
	.word	.L256,.L312
	.byte	5
	.word	.L125,.L310
	.byte	6
	.byte	'ptrDidConfig',0,1,230,6,57
	.word	.L258,.L313
	.byte	6
	.byte	'ptrSigConfig',0,1,231,6,62
	.word	.L260,.L314
	.byte	6
	.byte	'ptrControlSigConfig',0,1,232,6,73
	.word	.L315,.L316
	.byte	6
	.byte	'ptrWriteFnc',0,1,234,6,43
	.word	.L253,.L317
	.byte	6
	.byte	'posnDidSignal_u16',0,1,236,6,28
	.word	.L262,.L318
	.byte	6
	.byte	'loopIndex_u16',0,1,237,6,28
	.word	.L262,.L319
	.byte	6
	.byte	'Rtn_InfrastureError',0,1,238,6,28
	.word	.L238,.L320
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_abbrev'
.L192:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_line'
.L193:
	.word	.L594-.L593
.L593:
	.half	3
	.word	.L596-.L595
.L595:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L596:
	.byte	5,28,7,0,5,2
	.word	.L125
	.byte	3,223,6,1,5,87,9
	.half	.L383-.L125
	.byte	3,6,1,5,112,9
	.half	.L597-.L383
	.byte	1,5,73,9
	.half	.L598-.L597
	.byte	1,5,86,9
	.half	.L599-.L598
	.byte	1,5,44,9
	.half	.L384-.L599
	.byte	3,7,1,5,86,9
	.half	.L385-.L384
	.byte	3,4,1,5,30,9
	.half	.L52-.L385
	.byte	3,2,1,5,56,9
	.half	.L600-.L52
	.byte	3,1,1,5,81,9
	.half	.L601-.L600
	.byte	1,5,103,9
	.half	.L602-.L601
	.byte	1,5,25,9
	.half	.L603-.L602
	.byte	1,5,43,9
	.half	.L604-.L603
	.byte	1,5,70,9
	.half	.L387-.L604
	.byte	3,1,1,5,32,9
	.half	.L605-.L387
	.byte	1,5,57,9
	.half	.L606-.L605
	.byte	1,5,98,9
	.half	.L389-.L606
	.byte	3,2,1,5,118,9
	.half	.L607-.L389
	.byte	1,5,9,9
	.half	.L391-.L607
	.byte	3,2,1,5,46,7,9
	.half	.L608-.L391
	.byte	3,2,1,5,93,9
	.half	.L393-.L608
	.byte	3,2,1,5,16,9
	.half	.L392-.L393
	.byte	3,1,1,5,13,9
	.half	.L609-.L392
	.byte	1,5,72,7,9
	.half	.L610-.L609
	.byte	3,3,1,5,37,9
	.half	.L396-.L610
	.byte	3,2,1,5,24,9
	.half	.L611-.L396
	.byte	1,5,48,7,9
	.half	.L612-.L611
	.byte	3,1,1,5,24,7,9
	.half	.L613-.L612
	.byte	3,1,1,5,106,7,9
	.half	.L614-.L613
	.byte	1,5,171,1,7,9
	.half	.L55-.L614
	.byte	1,5,49,7,9
	.half	.L615-.L55
	.byte	3,8,1,5,47,9
	.half	.L616-.L615
	.byte	1,5,49,9
	.half	.L617-.L616
	.byte	3,1,1,5,47,9
	.half	.L618-.L617
	.byte	1,5,18,9
	.half	.L58-.L618
	.byte	3,4,1,5,33,9
	.half	.L619-.L58
	.byte	1,5,32,9
	.half	.L620-.L619
	.byte	1,5,37,9
	.half	.L621-.L620
	.byte	1,5,39,9
	.half	.L54-.L621
	.byte	3,5,1,5,38,9
	.half	.L622-.L54
	.byte	1,5,19,9
	.half	.L623-.L622
	.byte	3,1,1,5,46,9
	.half	.L624-.L623
	.byte	1,5,44,9
	.half	.L625-.L624
	.byte	1,5,14,9
	.half	.L60-.L625
	.byte	3,124,1,5,12,9
	.half	.L61-.L60
	.byte	3,17,1,5,9,9
	.half	.L626-.L61
	.byte	1,5,13,7,9
	.half	.L627-.L626
	.byte	3,3,1,5,29,9
	.half	.L628-.L627
	.byte	1,5,27,9
	.half	.L629-.L628
	.byte	1,5,13,9
	.half	.L630-.L629
	.byte	3,1,1,5,101,9
	.half	.L62-.L630
	.byte	3,72,1,5,40,9
	.half	.L51-.L62
	.byte	1,5,11,9
	.half	.L631-.L51
	.byte	1,5,57,7,9
	.half	.L632-.L631
	.byte	1,5,77,9
	.half	.L633-.L632
	.byte	1,5,1,7,9
	.half	.L63-.L633
	.byte	3,59,1,7,9
	.half	.L195-.L63
	.byte	0,1,1
.L594:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_ranges'
.L194:
	.word	-1,.L125,0,.L195-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_info'
.L196:
	.word	308
	.half	3
	.word	.L197
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L199,.L198
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteDidMaxLenCheck',0,1,186,7,28,1,1
	.word	.L127,.L321,.L126
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,187,7,92
	.word	.L243,.L322
	.byte	4
	.byte	'pMsgContext',0,1,188,7,85
	.word	.L256,.L323
	.byte	5
	.word	.L127,.L321
	.byte	6
	.byte	'nrLenDataRec_u16',0,1,191,7,24
	.word	.L262,.L324
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_line'
.L198:
	.word	.L635-.L634
.L634:
	.half	3
	.word	.L637-.L636
.L636:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L637:
	.byte	5,28,7,0,5,2
	.word	.L127
	.byte	3,185,7,1,5,46,9
	.half	.L399-.L127
	.byte	3,13,1,5,71,9
	.half	.L638-.L399
	.byte	1,5,32,9
	.half	.L639-.L638
	.byte	1,5,45,9
	.half	.L640-.L639
	.byte	1,5,85,9
	.half	.L641-.L640
	.byte	1,5,103,9
	.half	.L642-.L641
	.byte	1,5,31,9
	.half	.L400-.L642
	.byte	3,5,1,5,68,9
	.half	.L643-.L400
	.byte	3,125,1,5,12,9
	.half	.L644-.L643
	.byte	1,5,17,7,9
	.half	.L645-.L644
	.byte	3,3,1,5,43,7,9
	.half	.L646-.L645
	.byte	3,2,1,5,41,9
	.half	.L647-.L646
	.byte	1,5,17,9
	.half	.L66-.L647
	.byte	3,126,1,5,16,9
	.half	.L65-.L66
	.byte	3,8,1,5,42,7,9
	.half	.L648-.L65
	.byte	3,2,1,5,40,9
	.half	.L649-.L648
	.byte	1,5,85,9
	.half	.L650-.L649
	.byte	1,5,52,9
	.half	.L68-.L650
	.byte	3,2,1,5,90,9
	.half	.L651-.L68
	.byte	1,5,22,9
	.half	.L398-.L651
	.byte	1,5,42,7,9
	.half	.L652-.L398
	.byte	3,4,1,5,40,9
	.half	.L653-.L652
	.byte	1,5,85,9
	.half	.L654-.L653
	.byte	1,5,1,9
	.half	.L67-.L654
	.byte	3,29,1,7,9
	.half	.L200-.L67
	.byte	0,1,1
.L635:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_ranges'
.L199:
	.word	-1,.L127,0,.L200-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_info'
.L201:
	.word	344
	.half	3
	.word	.L202
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L204,.L203
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Priv_DidWriteSupport',0,1,133,8,28,1,1
	.word	.L129,.L325,.L128
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,134,8,92
	.word	.L243,.L326
	.byte	4
	.byte	'pMsgContext',0,1,135,8,85
	.word	.L256,.L327
	.byte	5
	.word	.L129,.L325
	.byte	6
	.byte	'dataSessionMask_u32',0,1,140,8,24
	.word	.L265,.L328
	.byte	6
	.byte	'adrExtendedConfig_pcst',0,1,142,8,63
	.word	.L329,.L330
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_abbrev'
.L202:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_line'
.L203:
	.word	.L656-.L655
.L655:
	.half	3
	.word	.L658-.L657
.L657:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L658:
	.byte	5,28,7,0,5,2
	.word	.L129
	.byte	3,132,8,1,5,48,9
	.half	.L403-.L129
	.byte	3,16,1,5,73,9
	.half	.L659-.L403
	.byte	1,5,34,9
	.half	.L660-.L659
	.byte	1,5,47,9
	.half	.L661-.L660
	.byte	1,5,87,9
	.half	.L662-.L661
	.byte	1,5,50,9
	.half	.L404-.L662
	.byte	3,11,1,5,44,9
	.half	.L406-.L404
	.byte	3,2,1,5,47,9
	.half	.L401-.L406
	.byte	1,5,5,9
	.half	.L663-.L401
	.byte	1,5,56,7,9
	.half	.L664-.L663
	.byte	3,2,1,5,68,9
	.half	.L409-.L664
	.byte	1,5,31,9
	.half	.L72-.L409
	.byte	3,6,1,5,29,9
	.half	.L407-.L72
	.byte	1,5,8,9
	.half	.L73-.L407
	.byte	3,3,1,5,5,9
	.half	.L665-.L73
	.byte	1,5,7,7,9
	.half	.L666-.L665
	.byte	3,3,1,5,82,9
	.half	.L667-.L666
	.byte	1,5,100,9
	.half	.L668-.L667
	.byte	1,5,30,9
	.half	.L412-.L668
	.byte	1,5,10,9
	.half	.L669-.L412
	.byte	3,2,1,5,7,9
	.half	.L670-.L669
	.byte	1,5,11,7,9
	.half	.L671-.L670
	.byte	3,2,1,5,39,9
	.half	.L672-.L671
	.byte	1,5,37,9
	.half	.L673-.L672
	.byte	1,5,11,9
	.half	.L674-.L673
	.byte	3,1,1,5,32,9
	.half	.L675-.L674
	.byte	1,5,30,9
	.half	.L676-.L675
	.byte	1,5,11,9
	.half	.L677-.L676
	.byte	3,1,1,5,33,9
	.half	.L678-.L677
	.byte	1,5,31,9
	.half	.L679-.L678
	.byte	1,5,1,9
	.half	.L74-.L679
	.byte	3,3,1,7,9
	.half	.L205-.L74
	.byte	0,1,1
.L656:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_ranges'
.L204:
	.word	-1,.L129,0,.L205-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_info'
.L206:
	.word	440
	.half	3
	.word	.L207
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L209,.L208
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Priv_DidWriteFuncAvailableCheck',0,1,195,8,38
	.word	.L238
	.byte	1,1
	.word	.L131,.L331,.L130
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,196,8,91
	.word	.L243,.L332
	.byte	5
	.word	.L131,.L331
	.byte	6
	.byte	'dataRetVal_u8',0,1,200,8,32
	.word	.L238,.L333
	.byte	6
	.byte	'idxDidSignal_u16',0,1,203,8,24
	.word	.L262,.L334
	.byte	6
	.byte	'nrDidSignal_u16',0,1,205,8,24
	.word	.L262,.L335
	.byte	6
	.byte	'useDidPort_u8',0,1,207,8,24
	.word	.L238,.L336
	.byte	6
	.byte	'alloweWritedSession_u32',0,1,209,8,24
	.word	.L265,.L337
	.byte	6
	.byte	'ptrWriteFnc',0,1,212,8,41
	.word	.L253,.L338
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_abbrev'
.L207:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_line'
.L208:
	.word	.L681-.L680
.L680:
	.half	3
	.word	.L683-.L682
.L682:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L683:
	.byte	5,46,7,0,5,2
	.word	.L131
	.byte	3,199,8,1,5,41,9
	.half	.L413-.L131
	.byte	3,3,1,9
	.half	.L414-.L413
	.byte	3,18,1,5,66,9
	.half	.L684-.L414
	.byte	1,5,27,9
	.half	.L685-.L684
	.byte	1,5,40,9
	.half	.L686-.L685
	.byte	1,5,80,9
	.half	.L687-.L686
	.byte	1,5,97,9
	.half	.L416-.L687
	.byte	3,2,1,5,48,9
	.half	.L688-.L416
	.byte	3,1,1,5,66,9
	.half	.L689-.L688
	.byte	1,5,25,9
	.half	.L690-.L689
	.byte	3,127,1,5,43,9
	.half	.L691-.L690
	.byte	1,5,89,9
	.half	.L692-.L691
	.byte	3,1,1,5,88,9
	.half	.L417-.L692
	.byte	3,2,1,5,59,9
	.half	.L693-.L417
	.byte	3,1,1,5,87,9
	.half	.L418-.L693
	.byte	3,3,1,5,23,9
	.half	.L694-.L418
	.byte	3,127,1,5,48,9
	.half	.L695-.L694
	.byte	1,5,113,9
	.half	.L696-.L695
	.byte	3,1,1,5,29,9
	.half	.L419-.L696
	.byte	3,3,1,5,69,9
	.half	.L420-.L419
	.byte	1,5,16,9
	.half	.L77-.L420
	.byte	3,2,1,5,74,7,9
	.half	.L697-.L77
	.byte	1,5,96,7,9
	.half	.L698-.L697
	.byte	1,5,21,7,9
	.half	.L699-.L698
	.byte	3,2,1,5,87,9
	.half	.L78-.L699
	.byte	3,124,1,5,69,9
	.half	.L76-.L78
	.byte	1,5,9,7,9
	.half	.L81-.L76
	.byte	3,7,1,5,27,7,9
	.half	.L700-.L81
	.byte	3,2,1,5,32,9
	.half	.L701-.L700
	.byte	1,5,35,9
	.half	.L82-.L701
	.byte	3,4,1,5,33,9
	.half	.L422-.L82
	.byte	1,5,13,9
	.half	.L702-.L422
	.byte	3,2,1,5,2,9
	.half	.L83-.L702
	.byte	3,22,1,5,1,9
	.half	.L84-.L83
	.byte	3,1,1,7,9
	.half	.L210-.L84
	.byte	0,1,1
.L681:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_ranges'
.L209:
	.word	-1,.L131,0,.L210-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_info'
.L211:
	.word	281
	.half	3
	.word	.L212
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L214,.L213
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_DidAvailableCheck',0,1,153,9,28,1,1
	.word	.L133,.L339,.L132
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,154,9,100
	.word	.L243,.L340
	.byte	5
	.word	.L133,.L339
	.byte	6
	.byte	'dataRetGetDID_u8',0,1,157,9,37
	.word	.L238,.L341
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_abbrev'
.L212:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_line'
.L213:
	.word	.L704-.L703
.L703:
	.half	3
	.word	.L706-.L705
.L705:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L706:
	.byte	5,28,7,0,5,2
	.word	.L133
	.byte	3,152,9,1,5,42,9
	.half	.L425-.L133
	.byte	3,7,1,5,58,9
	.half	.L707-.L425
	.byte	1,5,5,9
	.half	.L427-.L707
	.byte	3,17,1,5,64,7,9
	.half	.L708-.L427
	.byte	3,3,1,5,7,9
	.half	.L429-.L708
	.byte	3,2,1,5,16,7,9
	.half	.L709-.L429
	.byte	3,3,1,5,37,9
	.half	.L710-.L709
	.byte	1,5,35,9
	.half	.L711-.L710
	.byte	1,5,7,9
	.half	.L86-.L711
	.byte	3,125,1,5,33,9
	.half	.L85-.L86
	.byte	3,7,1,5,10,9
	.half	.L712-.L85
	.byte	1,5,9,7,9
	.half	.L713-.L712
	.byte	3,2,1,5,31,9
	.half	.L714-.L713
	.byte	1,5,29,9
	.half	.L715-.L714
	.byte	1,5,44,9
	.half	.L716-.L715
	.byte	1,5,31,9
	.half	.L88-.L716
	.byte	3,5,1,5,29,9
	.half	.L717-.L88
	.byte	1,5,1,9
	.half	.L87-.L717
	.byte	3,5,1,7,9
	.half	.L215-.L87
	.byte	0,1,1
.L704:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_ranges'
.L214:
	.word	-1,.L133,0,.L215-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_info'
.L216:
	.word	277
	.half	3
	.word	.L217
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L219,.L218
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WdbiStateProcessing',0,1,138,10,28,1,1
	.word	.L135,.L342,.L134
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,139,10,101
	.word	.L243,.L343
	.byte	4
	.byte	'pMsgContext',0,1,140,10,94
	.word	.L256,.L344
	.byte	5
	.word	.L135,.L342
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_abbrev'
.L217:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_line'
.L218:
	.word	.L719-.L718
.L718:
	.half	3
	.word	.L721-.L720
.L720:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L721:
	.byte	5,28,7,0,5,2
	.word	.L135
	.byte	3,137,10,1,5,7,9
	.half	.L434-.L135
	.byte	3,9,1,5,4,9
	.half	.L722-.L434
	.byte	1,5,22,7,9
	.half	.L723-.L722
	.byte	3,4,1,5,8,9
	.half	.L724-.L723
	.byte	1,5,48,7,9
	.half	.L725-.L724
	.byte	3,3,1,5,12,9
	.half	.L726-.L725
	.byte	1,5,57,9
	.half	.L727-.L726
	.byte	1,5,26,9
	.half	.L728-.L727
	.byte	1,5,28,9
	.half	.L729-.L728
	.byte	3,1,1,5,42,9
	.half	.L730-.L729
	.byte	1,5,26,9
	.half	.L731-.L730
	.byte	1,5,12,9
	.half	.L732-.L731
	.byte	3,1,1,5,58,9
	.half	.L733-.L732
	.byte	1,5,26,9
	.half	.L734-.L733
	.byte	1,5,39,9
	.half	.L735-.L734
	.byte	3,3,1,5,61,9
	.half	.L432-.L735
	.byte	3,123,1,5,34,9
	.half	.L91-.L432
	.byte	3,10,1,5,32,9
	.half	.L736-.L91
	.byte	1,5,7,9
	.half	.L90-.L736
	.byte	3,4,1,5,4,9
	.half	.L737-.L90
	.byte	1,5,52,7,9
	.half	.L738-.L737
	.byte	3,2,1,5,7,9
	.half	.L93-.L738
	.byte	3,4,1,5,4,9
	.half	.L739-.L93
	.byte	1,5,54,7,9
	.half	.L740-.L739
	.byte	3,9,1,5,1,9
	.half	.L94-.L740
	.byte	3,10,1,7,9
	.half	.L220-.L94
	.byte	0,1,1
.L719:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_ranges'
.L219:
	.word	-1,.L135,0,.L220-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_info'
.L221:
	.word	314
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L142
	.byte	3
	.byte	'Dcm_Prv_WriteDIDServevice_status',0,1,205,10,38
	.word	.L238
	.byte	1,1
	.word	.L137,.L345,.L136
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,206,10,100
	.word	.L243,.L346
	.byte	4
	.byte	'pMsgContext',0,1,207,10,90
	.word	.L241,.L347
	.byte	5
	.word	.L137,.L345
	.byte	6
	.byte	'dataRetVal_u8',0,1,212,10,32
	.word	.L238,.L348
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_line'
.L223:
	.word	.L742-.L741
.L741:
	.half	3
	.word	.L744-.L743
.L743:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0,0,0,0,0
.L744:
	.byte	5,38,7,0,5,2
	.word	.L137
	.byte	3,204,10,1,5,9,9
	.half	.L443-.L137
	.byte	3,19,1,5,10,9
	.half	.L745-.L443
	.byte	3,120,1,5,9,9
	.half	.L746-.L745
	.byte	1,5,43,7,9
	.half	.L747-.L746
	.byte	1,5,63,9
	.half	.L748-.L747
	.byte	1,5,20,7,9
	.half	.L749-.L748
	.byte	3,2,1,5,46,9
	.half	.L750-.L749
	.byte	1,5,55,9
	.half	.L440-.L750
	.byte	1,5,33,9
	.half	.L751-.L440
	.byte	1,5,20,9
	.half	.L752-.L751
	.byte	3,1,1,5,46,9
	.half	.L753-.L752
	.byte	1,5,55,9
	.half	.L754-.L753
	.byte	1,5,33,9
	.half	.L755-.L754
	.byte	1,5,35,9
	.half	.L756-.L755
	.byte	3,1,1,5,33,9
	.half	.L757-.L756
	.byte	1,5,9,9
	.half	.L758-.L757
	.byte	3,2,1,5,31,9
	.half	.L759-.L758
	.byte	1,5,29,9
	.half	.L760-.L759
	.byte	1,5,9,9
	.half	.L761-.L760
	.byte	3,1,1,5,32,9
	.half	.L762-.L761
	.byte	1,5,30,9
	.half	.L763-.L762
	.byte	1,5,36,9
	.half	.L764-.L763
	.byte	3,1,1,5,34,9
	.half	.L765-.L764
	.byte	1,5,22,9
	.half	.L766-.L765
	.byte	3,1,1,5,58,9
	.half	.L445-.L766
	.byte	3,121,1,5,37,9
	.half	.L95-.L445
	.byte	3,10,1,5,13,9
	.half	.L767-.L95
	.byte	1,5,56,7,9
	.half	.L768-.L767
	.byte	1,5,79,9
	.half	.L769-.L768
	.byte	1,5,36,7,9
	.half	.L98-.L769
	.byte	3,3,1,5,34,9
	.half	.L770-.L98
	.byte	1,5,29,9
	.half	.L771-.L770
	.byte	3,1,1,5,28,9
	.half	.L772-.L771
	.byte	1,5,22,9
	.half	.L773-.L772
	.byte	3,1,1,5,47,9
	.half	.L447-.L773
	.byte	3,126,1,5,12,9
	.half	.L99-.L447
	.byte	3,6,1,5,9,9
	.half	.L774-.L99
	.byte	1,5,35,7,9
	.half	.L775-.L774
	.byte	3,2,1,5,33,9
	.half	.L776-.L775
	.byte	1,5,36,9
	.half	.L101-.L776
	.byte	3,3,1,5,34,9
	.half	.L777-.L101
	.byte	1,5,22,9
	.half	.L778-.L777
	.byte	3,1,1,5,8,9
	.half	.L97-.L778
	.byte	3,3,1,5,5,9
	.half	.L779-.L97
	.byte	1,5,20,7,9
	.half	.L780-.L779
	.byte	3,2,1,5,7,9
	.half	.L781-.L780
	.byte	3,2,1,5,29,9
	.half	.L782-.L781
	.byte	1,5,27,9
	.half	.L783-.L782
	.byte	1,5,7,9
	.half	.L784-.L783
	.byte	3,1,1,5,30,9
	.half	.L785-.L784
	.byte	1,5,28,9
	.half	.L786-.L785
	.byte	1,5,34,9
	.half	.L787-.L786
	.byte	3,1,1,5,32,9
	.half	.L788-.L787
	.byte	1,5,1,9
	.half	.L102-.L788
	.byte	3,3,1,9
	.half	.L103-.L102
	.byte	3,2,1,7,9
	.half	.L225-.L103
	.byte	0,1,1
.L742:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L137,0,.L225-.L137,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_stDspWdbiOpStatus_u8')
	.sect	'.debug_info'
.L226:
	.word	194
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	'Dcm_stDspWdbiOpStatus_u8',0,11,12,40
	.word	.L238
	.byte	5,3
	.word	Dcm_stDspWdbiOpStatus_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_stDspWdbiOpStatus_u8')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_Dcm_idxwdbiDidIndexType')
	.sect	'.debug_info'
.L228:
	.word	195
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	's_Dcm_idxwdbiDidIndexType',0,11,24,43
	.word	.L349
	.byte	5,3
	.word	s_Dcm_idxwdbiDidIndexType
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_Dcm_idxwdbiDidIndexType')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_dataDID_u16')
	.sect	'.debug_info'
.L230:
	.word	183
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	's_dataDID_u16',0,11,29,29
	.word	.L262
	.byte	5,3
	.word	s_dataDID_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_dataDID_u16')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_loopbreak_b')
	.sect	'.debug_info'
.L232:
	.word	183
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	's_loopbreak_b',0,11,36,29
	.word	.L238
	.byte	5,3
	.word	s_loopbreak_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_loopbreak_b')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('dataRetWriteSupport_en')
	.sect	'.debug_info'
.L234:
	.word	192
	.half	3
	.word	.L235
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	'dataRetWriteSupport_en',0,11,44,40
	.word	.L350
	.byte	5,3
	.word	dataRetWriteSupport_en
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('dataRetWriteSupport_en')
	.sect	'.debug_abbrev'
.L235:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('dataRetWriteFunc_u8')
	.sect	'.debug_info'
.L236:
	.word	189
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Wdbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L142
	.byte	3
	.byte	'dataRetWriteFunc_u8',0,11,50,40
	.word	.L238
	.byte	5,3
	.word	dataRetWriteFunc_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('dataRetWriteFunc_u8')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L239-.L139
	.half	2
	.byte	138,0
	.word	0,0
.L240:
	.word	-1,.L139,0,.L448-.L139
	.half	1
	.byte	84
	.word	.L104-.L139,.L452-.L139
	.half	1
	.byte	84
	.word	0,0
.L244:
	.word	-1,.L139,0,.L448-.L139
	.half	1
	.byte	101
	.word	.L450-.L139,.L239-.L139
	.half	1
	.byte	109
	.word	.L104-.L139,.L453-.L139
	.half	1
	.byte	101
	.word	.L453-.L139,.L452-.L139
	.half	1
	.byte	100
	.word	.L455-.L139,.L105-.L139
	.half	1
	.byte	100
	.word	0,0
.L245:
	.word	-1,.L139,.L451-.L139,.L104-.L139
	.half	1
	.byte	82
	.word	.L105-.L139,.L239-.L139
	.half	1
	.byte	82
	.word	0,0
.L242:
	.word	-1,.L139,0,.L448-.L139
	.half	1
	.byte	100
	.word	.L449-.L139,.L239-.L139
	.half	1
	.byte	108
	.word	.L104-.L139,.L453-.L139
	.half	1
	.byte	100
	.word	.L454-.L139,.L452-.L139
	.half	1
	.byte	101
	.word	.L456-.L139,.L105-.L139
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_loc'
.L112:
	.word	-1,.L113,0,.L246-.L113
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L247-.L141
	.half	2
	.byte	138,0
	.word	0,0
.L249:
	.word	-1,.L141,0,.L247-.L141
	.half	1
	.byte	100
	.word	0,0
.L250:
	.word	-1,.L141,.L457-.L141,.L247-.L141
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_loc'
.L130:
	.word	-1,.L131,0,.L331-.L131
	.half	2
	.byte	138,0
	.word	0,0
.L337:
	.word	-1,.L131,.L418-.L131,.L83-.L131
	.half	1
	.byte	82
	.word	0,0
.L332:
	.word	-1,.L131,0,.L83-.L131
	.half	1
	.byte	100
	.word	0,0
.L333:
	.word	-1,.L131,.L413-.L131,.L331-.L131
	.half	1
	.byte	88
	.word	.L423-.L131,.L331-.L131
	.half	1
	.byte	82
	.word	0,0
.L334:
	.word	-1,.L131,.L414-.L131,.L415-.L131
	.half	1
	.byte	95
	.word	.L420-.L131,.L421-.L131
	.half	1
	.byte	95
	.word	.L76-.L131,.L422-.L131
	.half	1
	.byte	95
	.word	0,0
.L335:
	.word	-1,.L131,.L416-.L131,.L83-.L131
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L338:
	.word	-1,.L131,.L419-.L131,.L331-.L131
	.half	1
	.byte	111
	.word	0,0
.L336:
	.word	-1,.L131,.L417-.L131,.L83-.L131
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_loc'
.L128:
	.word	-1,.L129,0,.L325-.L129
	.half	2
	.byte	138,0
	.word	0,0
.L330:
	.word	-1,.L129,.L404-.L129,.L405-.L129
	.half	1
	.byte	111
	.word	0,0
.L326:
	.word	-1,.L129,0,.L401-.L129
	.half	1
	.byte	100
	.word	.L402-.L129,.L325-.L129
	.half	1
	.byte	108
	.word	.L408-.L129,.L409-.L129
	.half	1
	.byte	100
	.word	.L411-.L129,.L412-.L129
	.half	1
	.byte	101
	.word	0,0
.L328:
	.word	-1,.L129,.L406-.L129,.L407-.L129
	.half	1
	.byte	95
	.word	0,0
.L327:
	.word	-1,.L129,0,.L401-.L129
	.half	1
	.byte	101
	.word	.L403-.L129,.L325-.L129
	.half	1
	.byte	109
	.word	.L410-.L129,.L409-.L129
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L133,0,.L339-.L133
	.half	2
	.byte	138,0
	.word	0,0
.L340:
	.word	-1,.L133,0,.L424-.L133
	.half	1
	.byte	100
	.word	.L425-.L133,.L426-.L133
	.half	1
	.byte	111
	.word	.L428-.L133,.L429-.L133
	.half	1
	.byte	100
	.word	.L85-.L133,.L430-.L133
	.half	1
	.byte	111
	.word	.L88-.L133,.L87-.L133
	.half	1
	.byte	111
	.word	0,0
.L341:
	.word	-1,.L133,.L427-.L133,.L87-.L133
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_loc'
.L114:
	.word	-1,.L115,0,.L255-.L115
	.half	2
	.byte	138,0
	.word	0,0
.L266:
	.word	-1,.L115,.L356-.L115,.L7-.L115
	.half	1
	.byte	82
	.word	0,0
.L264:
	.word	-1,.L115,.L5-.L115,.L355-.L115
	.half	1
	.byte	89
	.word	.L357-.L115,.L255-.L115
	.half	1
	.byte	89
	.word	0,0
.L263:
	.word	-1,.L115,0,.L5-.L115
	.half	1
	.byte	84
	.word	.L354-.L115,.L255-.L115
	.half	1
	.byte	88
	.word	0,0
.L257:
	.word	-1,.L115,0,.L5-.L115
	.half	1
	.byte	100
	.word	.L351-.L115,.L255-.L115
	.half	1
	.byte	108
	.word	0,0
.L259:
	.word	-1,.L115,0,.L5-.L115
	.half	1
	.byte	101
	.word	.L352-.L115,.L255-.L115
	.half	1
	.byte	109
	.word	0,0
.L261:
	.word	-1,.L115,0,.L5-.L115
	.half	1
	.byte	102
	.word	.L353-.L115,.L255-.L115
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L111,0,.L251-.L111
	.half	2
	.byte	138,0
	.word	0,0
.L252:
	.word	0,0
.L254:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_loc'
.L134:
	.word	-1,.L135,0,.L342-.L135
	.half	2
	.byte	138,0
	.word	0,0
.L343:
	.word	-1,.L135,0,.L431-.L135
	.half	1
	.byte	100
	.word	.L433-.L135,.L342-.L135
	.half	1
	.byte	108
	.word	.L435-.L135,.L432-.L135
	.half	1
	.byte	100
	.word	.L91-.L135,.L90-.L135
	.half	1
	.byte	100
	.word	.L436-.L135,.L93-.L135
	.half	1
	.byte	100
	.word	.L438-.L135,.L94-.L135
	.half	1
	.byte	100
	.word	0,0
.L344:
	.word	-1,.L135,0,.L432-.L135
	.half	1
	.byte	101
	.word	.L434-.L135,.L342-.L135
	.half	1
	.byte	111
	.word	.L91-.L135,.L90-.L135
	.half	1
	.byte	101
	.word	.L437-.L135,.L93-.L135
	.half	1
	.byte	101
	.word	.L439-.L135,.L94-.L135
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_loc'
.L136:
	.word	-1,.L137,0,.L345-.L137
	.half	2
	.byte	138,0
	.word	0,0
.L346:
	.word	-1,.L137,0,.L440-.L137
	.half	1
	.byte	100
	.word	.L442-.L137,.L345-.L137
	.half	1
	.byte	102
	.word	.L95-.L137,.L97-.L137
	.half	1
	.byte	100
	.word	0,0
.L348:
	.word	-1,.L137,.L445-.L137,.L95-.L137
	.half	1
	.byte	82
	.word	.L447-.L137,.L99-.L137
	.half	1
	.byte	82
	.word	.L97-.L137,.L345-.L137
	.half	1
	.byte	82
	.word	0,0
.L347:
	.word	-1,.L137,0,.L441-.L137
	.half	1
	.byte	101
	.word	.L443-.L137,.L444-.L137
	.half	1
	.byte	111
	.word	.L95-.L137,.L446-.L137
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L127,0,.L321-.L127
	.half	2
	.byte	138,0
	.word	0,0
.L322:
	.word	-1,.L127,0,.L398-.L127
	.half	1
	.byte	100
	.word	.L399-.L127,.L321-.L127
	.half	1
	.byte	108
	.word	0,0
.L324:
	.word	-1,.L127,.L400-.L127,.L398-.L127
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L323:
	.word	-1,.L127,0,.L398-.L127
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L123,0,.L303-.L123
	.half	2
	.byte	138,0
	.word	0,0
.L304:
	.word	-1,.L123,0,.L375-.L123
	.half	1
	.byte	100
	.word	0,0
.L305:
	.word	-1,.L123,0,.L376-.L123
	.half	1
	.byte	101
	.word	.L380-.L123,.L49-.L123
	.half	1
	.byte	100
	.word	0,0
.L308:
	.word	-1,.L123,0,.L49-.L123
	.half	1
	.byte	84
	.word	0,0
.L307:
	.word	-1,.L123,0,.L377-.L123
	.half	1
	.byte	103
	.word	.L376-.L123,.L49-.L123
	.half	1
	.byte	101
	.word	0,0
.L309:
	.word	-1,.L123,.L378-.L123,.L49-.L123
	.half	1
	.byte	102
	.word	0,0
.L306:
	.word	-1,.L123,0,.L378-.L123
	.half	1
	.byte	102
	.word	.L379-.L123,.L303-.L123
	.half	1
	.byte	111
	.word	.L377-.L123,.L49-.L123
	.half	1
	.byte	103
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_loc'
.L124:
	.word	-1,.L125,0,.L381-.L125
	.half	2
	.byte	138,0
	.word	.L381-.L125,.L310-.L125
	.half	2
	.byte	138,8
	.word	.L310-.L125,.L310-.L125
	.half	2
	.byte	138,0
	.word	0,0
.L320:
	.word	-1,.L125,.L396-.L125,.L54-.L125
	.half	1
	.byte	82
	.word	0,0
.L311:
	.word	-1,.L125,0,.L52-.L125
	.half	1
	.byte	100
	.word	.L382-.L125,.L310-.L125
	.half	1
	.byte	108
	.word	.L390-.L125,.L392-.L125
	.half	1
	.byte	100
	.word	0,0
.L319:
	.word	-1,.L125,.L385-.L125,.L386-.L125
	.half	1
	.byte	88
	.word	.L51-.L125,.L310-.L125
	.half	1
	.byte	88
	.word	0,0
.L312:
	.word	-1,.L125,0,.L52-.L125
	.half	1
	.byte	101
	.word	.L383-.L125,.L310-.L125
	.half	2
	.byte	145,124
	.word	.L394-.L125,.L392-.L125
	.half	1
	.byte	101
	.word	0,0
.L318:
	.word	-1,.L125,.L391-.L125,.L392-.L125
	.half	1
	.byte	84
	.word	0,0
.L316:
	.word	-1,.L125,.L389-.L125,.L390-.L125
	.half	1
	.byte	100
	.word	0,0
.L313:
	.word	-1,.L125,.L384-.L125,.L310-.L125
	.half	1
	.byte	109
	.word	.L395-.L125,.L392-.L125
	.half	1
	.byte	103
	.word	0,0
.L314:
	.word	-1,.L125,.L387-.L125,.L388-.L125
	.half	1
	.byte	111
	.word	.L54-.L125,.L397-.L125
	.half	1
	.byte	111
	.word	0,0
.L317:
	.word	-1,.L125,.L393-.L125,.L392-.L125
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L119,0,.L273-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L278:
	.word	-1,.L119,.L364-.L119,.L368-.L119
	.half	1
	.byte	82
	.word	.L15-.L119,.L16-.L119
	.half	1
	.byte	82
	.word	0,0
.L279:
	.word	-1,.L119,.L369-.L119,.L368-.L119
	.half	1
	.byte	84
	.word	0,0
.L274:
	.word	-1,.L119,0,.L362-.L119
	.half	1
	.byte	100
	.word	0,0
.L275:
	.word	-1,.L119,0,.L363-.L119
	.half	1
	.byte	101
	.word	0,0
.L276:
	.word	-1,.L119,0,.L364-.L119
	.half	1
	.byte	102
	.word	.L365-.L119,.L366-.L119
	.half	1
	.byte	111
	.word	.L15-.L119,.L16-.L119
	.half	1
	.byte	111
	.word	0,0
.L277:
	.word	-1,.L119,0,.L364-.L119
	.half	1
	.byte	103
	.word	.L367-.L119,.L273-.L119
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_loc'
.L292:
	.word	0,0
.L300:
	.word	0,0
.L290:
	.word	0,0
.L298:
	.word	0,0
.L120:
	.word	-1,.L121,0,.L280-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L294:
	.word	-1,.L121,.L372-.L121,.L370-.L121
	.half	1
	.byte	81
	.word	.L30-.L121,.L373-.L121
	.half	1
	.byte	81
	.word	0,0
.L302:
	.word	-1,.L121,.L373-.L121,.L374-.L121
	.half	1
	.byte	81
	.word	0,0
.L285:
	.word	-1,.L121,.L371-.L121,.L370-.L121
	.half	1
	.byte	84
	.word	.L30-.L121,.L31-.L121
	.half	1
	.byte	84
	.word	0,0
.L281:
	.word	-1,.L121,0,.L370-.L121
	.half	1
	.byte	100
	.word	.L30-.L121,.L31-.L121
	.half	1
	.byte	100
	.word	0,0
.L282:
	.word	-1,.L121,0,.L370-.L121
	.half	1
	.byte	101
	.word	.L30-.L121,.L31-.L121
	.half	1
	.byte	101
	.word	0,0
.L283:
	.word	-1,.L121,0,.L370-.L121
	.half	1
	.byte	102
	.word	.L30-.L121,.L31-.L121
	.half	1
	.byte	102
	.word	0,0
.L284:
	.word	-1,.L121,0,.L370-.L121
	.half	1
	.byte	103
	.word	.L30-.L121,.L31-.L121
	.half	1
	.byte	103
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_loc'
.L116:
	.word	-1,.L117,0,.L267-.L117
	.half	2
	.byte	138,0
	.word	0,0
.L272:
	.word	-1,.L117,0,.L358-.L117
	.half	1
	.byte	84
	.word	0,0
.L268:
	.word	-1,.L117,0,.L358-.L117
	.half	1
	.byte	100
	.word	0,0
.L269:
	.word	-1,.L117,0,.L358-.L117
	.half	1
	.byte	101
	.word	0,0
.L270:
	.word	-1,.L117,0,.L358-.L117
	.half	1
	.byte	102
	.word	.L359-.L117,.L360-.L117
	.half	1
	.byte	111
	.word	.L11-.L117,.L12-.L117
	.half	1
	.byte	111
	.word	0,0
.L271:
	.word	-1,.L117,0,.L358-.L117
	.half	1
	.byte	103
	.word	.L361-.L117,.L267-.L117
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L789:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WDBIINIT_Pending')
	.sect	'.debug_frame'
	.word	24
	.word	.L789,.L111,.L251-.L111
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Dcm_WDBIInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L113,.L246-.L113
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SenderReceiverVariableSignalGetBuffer')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L115,.L255-.L115
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteSenderReceiverVariableLengthSignal')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L117,.L267-.L117
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteSenderReceiverFixedLengthSignal')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L119,.L273-.L119
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteSenderReceiverSignal')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L121,.L280-.L121
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteDidUsePort')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L123,.L303-.L123
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteNormalDID')
	.sect	'.debug_frame'
	.word	36
	.word	.L789,.L125,.L310-.L125
	.byte	4
	.word	(.L381-.L125)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L310-.L381)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteDidMaxLenCheck')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L127,.L321-.L127
	.sdecl	'.debug_frame',debug,cluster('Dcm_Priv_DidWriteSupport')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L129,.L325-.L129
	.sdecl	'.debug_frame',debug,cluster('Dcm_Priv_DidWriteFuncAvailableCheck')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L131,.L331-.L131
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_DidAvailableCheck')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L133,.L339-.L133
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WdbiStateProcessing')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L135,.L342-.L135
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_WriteDIDServevice_status')
	.sect	'.debug_frame'
	.word	16
	.word	.L789,.L137,.L345-.L137
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_DcmWriteDataByIdentifier')
	.sect	'.debug_frame'
	.word	12
	.word	.L789,.L139,.L239-.L139
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetActiveWDBIDid')
	.sect	'.debug_frame'
	.word	24
	.word	.L789,.L141,.L247-.L141
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1496  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1497  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1498  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Wdbi.c	  1499  #endif

	; Module end
