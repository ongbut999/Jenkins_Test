	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14756a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	14594
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	184
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	201
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	201
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	184
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	184
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	184
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	201
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	184
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	184
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	514
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	536
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	536
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	184
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	514
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	514
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	536
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	184
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	184
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	853
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	869
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	869
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	184
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	853
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	853
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	184
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	869
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	184
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	184
	.byte	6,0,8
	.word	206
	.byte	9
	.word	236
	.byte	9
	.word	251
	.byte	6,0,8
	.word	274
	.byte	9
	.word	306
	.byte	9
	.word	321
	.byte	6,0,8
	.word	344
	.byte	9
	.word	384
	.byte	9
	.word	398
	.byte	6,0,8
	.word	421
	.byte	9
	.word	454
	.byte	9
	.word	468
	.byte	9
	.word	489
	.byte	6,0,8
	.word	541
	.byte	9
	.word	572
	.byte	9
	.word	587
	.byte	6,0,8
	.word	610
	.byte	9
	.word	643
	.byte	9
	.word	658
	.byte	6,0,8
	.word	681
	.byte	9
	.word	722
	.byte	9
	.word	736
	.byte	6,0,8
	.word	759
	.byte	9
	.word	793
	.byte	9
	.word	807
	.byte	9
	.word	828
	.byte	6,0,8
	.word	874
	.byte	9
	.word	905
	.byte	9
	.word	920
	.byte	6,0,8
	.word	943
	.byte	9
	.word	976
	.byte	9
	.word	991
	.byte	6,0,8
	.word	1014
	.byte	9
	.word	1055
	.byte	9
	.word	1069
	.byte	6,0,8
	.word	1092
	.byte	9
	.word	1126
	.byte	9
	.word	1140
	.byte	9
	.word	1161
	.byte	6,0,10,1,3
	.word	1405
	.byte	11
	.byte	'__codeptr',0,4,1,1
	.word	1407
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,5,76,25
	.word	1430
	.byte	11
	.byte	'uint8',0,5,81,25
	.word	184
	.byte	11
	.byte	'uint16',0,5,91,25
	.word	514
	.byte	11
	.byte	'uint32',0,5,106,24
	.word	853
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,5,111,30
	.word	1496
	.byte	11
	.byte	'boolean',0,5,127,25
	.word	184
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint16_least',0,5,147,1,25
	.word	1553
	.byte	11
	.byte	'StatusType',0,6,191,1,27
	.word	184
	.byte	11
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	184
	.byte	12,6,206,1,9,8,13
	.byte	'vendorID',0
	.word	514
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	514
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	184
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	184
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	184
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	1640
	.byte	11
	.byte	'PduIdType',0,7,22,19
	.word	514
	.byte	11
	.byte	'PduLengthType',0,7,26,19
	.word	514
	.byte	12,8,71,9,8,13
	.byte	'SduDataPtr',0
	.word	201
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	514
	.byte	2,2,35,4,0,11
	.byte	'PduInfoType',0,8,75,3
	.word	1830
	.byte	14,8,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,8,118,3
	.word	1895
	.byte	11
	.byte	'NetworkHandleType',0,8,128,1,17
	.word	184
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	853
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	514
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	184
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	853
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	2042
	.byte	16,68
	.word	853
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	2122
	.byte	68,2,35,0,0,16,68
	.word	2131
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	2153
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	853
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	853
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2213
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2213
	.byte	18,1,1,3
	.word	2298
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2301
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	184
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2364
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	853
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	514
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	853
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	853
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	853
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	869
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	514
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	514
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2671
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2764
	.byte	20
	.byte	'void',0,3
	.word	2876
	.byte	21,1,1,22
	.word	184
	.byte	22
	.word	2882
	.byte	0,3
	.word	2887
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2901
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	853
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	853
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2213
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2213
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2213
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2213
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2936
	.byte	3
	.word	2936
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	3134
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	184
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	853
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2936
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3213
	.byte	3
	.word	3213
	.byte	23
	.word	3274
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2306
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3279
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	853
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2213
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	184
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3284
	.byte	3
	.word	2298
	.byte	23
	.word	3284
	.byte	3
	.word	3443
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3448
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	853
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	853
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	853
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	853
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	853
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3556
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	853
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	853
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	853
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3620
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	184
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	2162
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2936
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	184
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3718
	.byte	16,68
	.word	2131
	.byte	17,0,0,3
	.word	3718
	.byte	23
	.word	3844
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3849
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2306
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3556
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3620
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3620
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	514
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	853
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2213
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	184
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	184
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3854
	.byte	23
	.word	3854
	.byte	3
	.word	4104
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	4109
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	4132
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3620
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4219
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4242
	.byte	3
	.word	4242
	.byte	23
	.word	4322
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4327
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3620
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4332
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	853
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4431
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	184
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	853
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4526
	.byte	26
	.word	184
	.byte	1,1,3
	.word	4612
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4619
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	853
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4655
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4683
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4702
	.byte	3
	.word	4702
	.byte	23
	.word	4780
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4785
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4624
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4431
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2882
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	184
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4790
	.byte	3
	.word	4612
	.byte	23
	.word	4790
	.byte	3
	.word	4942
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4947
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4973
	.byte	23
	.word	.L6-.L3
	.byte	3
	.word	5173
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5178
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5183
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4973
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	514
	.byte	2,2,35,12,0,3
	.word	5210
	.byte	23
	.word	5303
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5308
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4952
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	184
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	514
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	184
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	184
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	184
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5313
	.byte	23
	.word	5313
	.byte	3
	.word	5493
	.byte	23
	.word	4790
	.byte	3
	.word	5503
	.byte	27
	.word	2606
	.byte	27
	.word	3556
	.byte	27
	.word	3453
	.byte	27
	.word	4114
	.byte	27
	.word	3620
	.byte	27
	.word	184
	.byte	27
	.word	4114
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	2042
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5513
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5518
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5523
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5528
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5533
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	3139
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2936
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	184
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5538
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2213
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	184
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5543
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2213
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	184
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	184
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	184
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5548
	.byte	3
	.word	853
	.byte	23
	.word	3284
	.byte	3
	.word	6004
	.byte	23
	.word	3854
	.byte	3
	.word	6014
	.byte	3
	.word	2936
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	853
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	853
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	853
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	853
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	2162
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	184
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	6029
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	853
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	184
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	853
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6306
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	184
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	184
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6442
	.byte	16,4
	.word	184
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6582
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6591
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	514
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6692
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	514
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6767
	.byte	23
	.word	6767
	.byte	3
	.word	6932
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6937
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6942
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6582
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	7042
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	184
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	184
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2882
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2882
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	514
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	184
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7188
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7275
	.byte	3
	.word	7188
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7373
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	184
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	514
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	514
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2882
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2882
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7275
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7378
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	853
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	514
	.byte	16,128,8
	.word	184
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7616
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	853
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	514
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	184
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	184
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	184
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	184
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7807
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	184
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	184
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	184
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	184
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	184
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	514
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	184
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	514
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	184
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	8148
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	514
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	184
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	853
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	514
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	184
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	184
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	514
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	184
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	184
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	184
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	184
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	184
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	184
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	184
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	184
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	184
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	184
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	184
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	184
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8380
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	514
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	514
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	184
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	184
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	184
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	184
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	184
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8884
	.byte	11
	.byte	'Dcm_ConfirmationStatusType',0,13,243,1,15
	.word	184
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	184
	.byte	11
	.byte	'Dcm_NegativeResponseCodeType',0,13,132,2,15
	.word	184
	.byte	11
	.byte	'Dcm_OpStatusType',0,13,134,2,15
	.word	184
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	184
	.byte	11
	.byte	'Dcm_SecLevelType',0,13,142,2,15
	.word	184
	.byte	11
	.byte	'Dcm_SesCtrlType',0,13,144,2,15
	.word	184
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	184
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	184
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	184
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7627
	.byte	16,128,8
	.word	184
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7627
	.byte	11
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,14,37,15
	.word	184
	.byte	11
	.byte	'Dcm_MsgItemType',0,15,182,2,15
	.word	184
	.byte	3
	.word	184
	.byte	11
	.byte	'Dcm_MsgType',0,15,188,2,57
	.word	9927
	.byte	11
	.byte	'Dcm_MsgLenType',0,15,197,2,16
	.word	853
	.byte	12,15,206,2,9,4,13
	.byte	'reqType',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'suppressPosResponse',0
	.word	184
	.byte	1,2,35,1,13
	.byte	'sourceofRequest',0
	.word	184
	.byte	1,2,35,2,0,11
	.byte	'Dcm_MsgAddInfoType',0,15,219,2,2
	.word	9977
	.byte	11
	.byte	'Dcm_IdContextType',0,15,225,2,15
	.word	184
	.byte	12,15,238,5,9,32,13
	.byte	'tx_buffer_pa',0
	.word	9932
	.byte	4,2,35,0,13
	.byte	'rx_mainBuffer_pa',0
	.word	9932
	.byte	4,2,35,4,13
	.byte	'tx_buffer_size_u32',0
	.word	853
	.byte	4,2,35,8,13
	.byte	'rx_buffer_size_u32',0
	.word	853
	.byte	4,2,35,12,13
	.byte	'dataP2TmrAdjust',0
	.word	853
	.byte	4,2,35,16,13
	.byte	'dataP2StarTmrAdjust',0
	.word	853
	.byte	4,2,35,20,13
	.byte	'protocolid_u8',0
	.word	184
	.byte	1,2,35,24,13
	.byte	'sid_tableid_u8',0
	.word	184
	.byte	1,2,35,25,13
	.byte	'premption_level_u8',0
	.word	184
	.byte	1,2,35,26,13
	.byte	'pduinfo_idx_u8',0
	.word	184
	.byte	1,2,35,27,13
	.byte	'nrc21_b',0
	.word	184
	.byte	1,2,35,28,13
	.byte	'sendRespPendTransToBoot',0
	.word	184
	.byte	1,2,35,29,0,11
	.byte	'Dcm_Dsld_protocol_tableType',0,15,143,6,2
	.word	10110
	.byte	3
	.word	184
	.byte	21,1,1,22
	.word	184
	.byte	22
	.word	514
	.byte	22
	.word	514
	.byte	22
	.word	184
	.byte	0,3
	.word	10466
	.byte	11
	.byte	'Dcm_ConfirmationApiType',0,15,145,6,16
	.word	10490
	.byte	3
	.word	184
	.byte	28
	.word	184
	.byte	1,1,22
	.word	10528
	.byte	22
	.word	184
	.byte	22
	.word	184
	.byte	0,3
	.word	10533
	.byte	12,15,240,2,9,28,13
	.byte	'resData',0
	.word	9932
	.byte	4,2,35,0,13
	.byte	'reqData',0
	.word	9932
	.byte	4,2,35,4,13
	.byte	'msgAddInfo',0
	.word	9977
	.byte	4,2,35,8,13
	.byte	'resDataLen',0
	.word	853
	.byte	4,2,35,12,13
	.byte	'reqDataLen',0
	.word	853
	.byte	4,2,35,16,13
	.byte	'resMaxDataLen',0
	.word	853
	.byte	4,2,35,20,13
	.byte	'idContext',0
	.word	184
	.byte	1,2,35,24,13
	.byte	'dcmRxPduId',0
	.word	514
	.byte	2,2,35,26,0,3
	.word	10561
	.byte	28
	.word	184
	.byte	1,1,22
	.word	184
	.byte	22
	.word	10724
	.byte	22
	.word	10528
	.byte	0,3
	.word	10729
	.byte	12,15,158,6,9,20,13
	.byte	'allowed_session_b32',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'allowed_security_b32',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	10556
	.byte	4,2,35,8,13
	.byte	'SubFunc_fp',0
	.word	10752
	.byte	4,2,35,12,13
	.byte	'subservice_id_u8',0
	.word	184
	.byte	1,2,35,16,13
	.byte	'isDspRDTCSubFnc_b',0
	.word	184
	.byte	1,2,35,17,0,11
	.byte	'Dcm_Dsld_SubServiceType',0,15,169,6,2
	.word	10757
	.byte	23
	.word	10757
	.byte	3
	.word	10969
	.byte	28
	.word	184
	.byte	1,1,22
	.word	10528
	.byte	22
	.word	184
	.byte	0,3
	.word	10979
	.byte	12,15,186,6,9,36,13
	.byte	'allowed_session_b32',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'allowed_security_b32',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'service_handler_fp',0
	.word	10752
	.byte	4,2,35,8,13
	.byte	'Service_init_fp',0
	.word	2301
	.byte	4,2,35,12,13
	.byte	'sid_u8',0
	.word	184
	.byte	1,2,35,16,13
	.byte	'subfunction_exist_b',0
	.word	184
	.byte	1,2,35,17,13
	.byte	'servicelocator_b',0
	.word	184
	.byte	1,2,35,18,13
	.byte	'ptr_subservice_table_pcs',0
	.word	10974
	.byte	4,2,35,20,13
	.byte	'num_sf_u8',0
	.word	184
	.byte	1,2,35,24,13
	.byte	'adrUserServiceModeRule_pfct',0
	.word	10997
	.byte	4,2,35,28,13
	.byte	'Dcm_ConfirmationService',0
	.word	10495
	.byte	4,2,35,32,0,11
	.byte	'Dcm_Dsld_ServiceType',0,15,204,6,3
	.word	11002
	.byte	3
	.word	10466
	.byte	23
	.word	11002
	.byte	3
	.word	11350
	.byte	12,15,218,6,9,8,13
	.byte	'ptr_service_table_pcs',0
	.word	11355
	.byte	4,2,35,0,13
	.byte	'num_services_u8',0
	.word	184
	.byte	1,2,35,4,13
	.byte	'nrc_sessnot_supported_u8',0
	.word	184
	.byte	1,2,35,5,13
	.byte	'cdtc_index_u8',0
	.word	184
	.byte	1,2,35,6,0,11
	.byte	'Dcm_Dsld_sid_tableType',0,15,224,6,3
	.word	11360
	.byte	12,15,238,6,9,14,13
	.byte	'protocol_num_u8',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'txpduid_num_u8',0
	.word	514
	.byte	2,2,35,2,13
	.byte	'roetype2_txpdu_u8',0
	.word	514
	.byte	2,2,35,4,13
	.byte	'rdpitype2_txpdu_u8',0
	.word	514
	.byte	2,2,35,6,13
	.byte	'testaddr_u16',0
	.word	514
	.byte	2,2,35,8,13
	.byte	'channel_idx_u8',0
	.word	184
	.byte	1,2,35,10,13
	.byte	'ConnectionIndex_u8',0
	.word	184
	.byte	1,2,35,11,13
	.byte	'NumberOfTxpdu_u8',0
	.word	184
	.byte	1,2,35,12,0,11
	.byte	'Dcm_Dsld_connType',0,15,248,6,3
	.word	11512
	.byte	14,15,146,7,9,4,15
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,15
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,15
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,11
	.byte	'Dcm_Dsld_commodeType',0,15,151,7,2
	.word	11750
	.byte	14,16,200,1,9,4,15
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,15
	.byte	'USE_ASYNCH_FNC',0,1,0,11
	.byte	'DcmDspSecurityUsePort',0,16,204,1,2
	.word	11862
	.byte	14,17,22,9,4,15
	.byte	'DCM_NO_BOOT',0,0,15
	.byte	'DCM_OEM_BOOT',0,1,15
	.byte	'DCM_SYS_BOOT',0,2,0,11
	.byte	'Dcm_SessionForBootType',0,17,27,2
	.word	11944
	.byte	14,18,192,3,9,4,15
	.byte	'DCM_READ_OK',0,0,15
	.byte	'DCM_READ_FAILED',0,1,15
	.byte	'DCM_READ_PENDING',0,2,15
	.byte	'DCM_READ_FORCE_RCRRP',0,3,15
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,11
	.byte	'Dcm_ReadMemoryRet_t',0,18,199,3,3
	.word	12025
	.byte	11
	.byte	'Rte_TaskRefType',0,19,184,1,32
	.word	4114
	.byte	11
	.byte	'Rte_EventRefType',0,19,185,1,32
	.word	184
	.byte	11
	.byte	'Rte_EventType',0,19,186,1,32
	.word	853
	.byte	11
	.byte	'Rte_REActCounterType',0,19,252,1,15
	.word	184
	.byte	3
	.word	184
	.byte	11
	.byte	'Rte_REActCounterRefType',0,19,253,1,58
	.word	12264
	.byte	12,19,255,1,9,8,13
	.byte	'task',0
	.word	12160
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	12269
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,19,130,2,3
	.word	12302
	.byte	23
	.word	3854
	.byte	3
	.word	12366
	.byte	3
	.word	184
	.byte	23
	.word	12302
	.byte	3
	.word	12381
	.byte	11
	.byte	'Rte_REContainerRefType',0,19,132,2,60
	.word	12386
	.byte	11
	.byte	'Rte_MSICounterType',0,19,149,2,16
	.word	514
	.byte	3
	.word	514
	.byte	11
	.byte	'Rte_MSICounterRefType',0,19,150,2,56
	.word	12451
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,19,152,2,17
	.word	184
	.byte	3
	.word	184
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,19,153,2,60
	.word	12519
	.byte	12,19,163,2,9,24,13
	.byte	'counter',0
	.word	12456
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	184
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	12524
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	12160
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	12269
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	184
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	514
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,19,172,2,3
	.word	12559
	.byte	3
	.word	514
	.byte	3
	.word	184
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,19,179,2,16
	.word	184
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,19,180,2,16
	.word	184
	.byte	12,19,182,2,9,4,13
	.byte	'pending',0
	.word	184
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	184
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	184
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,19,186,2,3
	.word	12777
	.byte	3
	.word	12777
	.byte	12,19,226,2,9,12,13
	.byte	'event_id',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	12869
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	853
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,19,230,2,3
	.word	12874
	.byte	23
	.word	12874
	.byte	3
	.word	12963
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,19,232,2,66
	.word	12968
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,19,234,2,29
	.word	12302
	.byte	19
	.byte	'Rte_QTaskType',0,19,243,2,16,28,13
	.byte	'cmn',0
	.word	7378
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12160
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,19,246,2,3
	.word	13045
	.byte	19
	.byte	'Rte_QREType',0,19,250,2,16,28,13
	.byte	'cmn',0
	.word	7378
	.byte	24,2,35,0,13
	.byte	're',0
	.word	12391
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,19,253,2,3
	.word	13116
	.byte	23
	.word	12302
	.byte	3
	.word	13181
	.byte	19
	.byte	'Rte_QWWPType',0,19,129,3,16,28,13
	.byte	'cmn',0
	.word	7378
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	12973
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,19,132,3,3
	.word	13191
	.byte	23
	.word	12874
	.byte	3
	.word	13259
	.byte	19
	.byte	'Rte_QEvType',0,19,136,3,16,36,13
	.byte	'cmn',0
	.word	7378
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12160
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	184
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	12269
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,19,141,3,3
	.word	13269
	.byte	19
	.byte	'Rte_QMSIType',0,19,145,3,16,48,13
	.byte	'cmn',0
	.word	7378
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	12160
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	184
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	12269
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	12456
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	12524
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	514
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,19,153,3,3
	.word	13364
	.byte	14,20,21,9,4,15
	.byte	'DSD_IDLE',0,0,15
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,15
	.byte	'DSD_CALL_SERVICE',0,2,15
	.byte	'DSD_WAITFORTXCONF',0,3,15
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,11
	.byte	'Dcm_DsdStatesType_ten',0,20,28,2
	.word	13519
	.byte	14,21,215,2,9,4,15
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,15
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,11
	.byte	'Dcm_DsldResponseType_ten',0,21,219,2,2
	.word	13656
	.byte	14,22,148,1,9,4,15
	.byte	'DCM_ROE_CLEARED',0,0,15
	.byte	'DCM_ROE_STOPPED',0,1,15
	.byte	'DCM_ROE_STARTED',0,2,0,11
	.byte	'Dcm_DspRoeEventState_ten',0,22,153,1,2
	.word	13745
	.byte	14,22,231,1,9,4,15
	.byte	'DCM_CONTROLMASK_NO',0,0,15
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,15
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,11
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,22,236,1,2
	.word	13840
	.byte	14,18,203,1,9,4,15
	.byte	'DCM_SUPPORT_READ',0,0,15
	.byte	'DCM_SUPPORT_WRITE',0,1,15
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,28
	.word	184
	.byte	1,1,22
	.word	10528
	.byte	22
	.word	514
	.byte	22
	.word	13957
	.byte	0,3
	.word	14027
	.byte	12,22,239,1,9,44,13
	.byte	'dataAllowedSessRead_u32',0
	.word	853
	.byte	4,2,35,0,13
	.byte	'dataAllowedSecRead_u32',0
	.word	853
	.byte	4,2,35,4,13
	.byte	'adrUserReadModeRule_pfct',0
	.word	14050
	.byte	4,2,35,8,13
	.byte	'dataAllowedSessWrite_u32',0
	.word	853
	.byte	4,2,35,12,13
	.byte	'dataAllowedSecWrite_u32',0
	.word	853
	.byte	4,2,35,16,13
	.byte	'adrUserWriteModeRule_pfct',0
	.word	14050
	.byte	4,2,35,20,13
	.byte	'dataSessBitMask_u32',0
	.word	853
	.byte	4,2,35,24,13
	.byte	'dataSecBitMask_u32',0
	.word	853
	.byte	4,2,35,28,13
	.byte	'adrUserControlModeRule_pfct',0
	.word	14050
	.byte	4,2,35,32,13
	.byte	'dataCtrlMask_en',0
	.word	13840
	.byte	4,2,35,36,13
	.byte	'dataCtrlMaskSize_u8',0
	.word	184
	.byte	1,2,35,40,13
	.byte	'dataIocbirst_b',0
	.word	184
	.byte	1,2,35,41,13
	.byte	'statusmaskIOControl_u8',0
	.word	184
	.byte	1,2,35,42,0,11
	.byte	'Dcm_ExtendedDIDConfig_tst',0,22,141,2,3
	.word	14055
	.byte	12,22,200,2,9,4,13
	.byte	'posnSigBit_u16',0
	.word	514
	.byte	2,2,35,0,13
	.byte	'idxDcmDspDatainfo_u16',0
	.word	514
	.byte	2,2,35,2,0,11
	.byte	'Dcm_SignalDIDConfig_tst',0,22,204,2,3
	.word	14502
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4
	.byte	1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0,54
	.byte	15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0,73
	.byte	19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0,26
	.byte	21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     3  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     4  #include "DcmDspUds_Rdtc_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     5  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     6  #if(DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     7  #include "DcmDspUds_Rdtc_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     8  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	     9  #if(DCM_CFG_DSP_RDTCSUBFUNC_0x05_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    10  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    11  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    12  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    13  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    14   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    15   * Dcm_Dsp_GetFreezeFrameDataByRecord :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    16   * The  function implements the RDTC subfunction 0x05.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    17   * This function will invoke the Dem APIs Dem_GetFreezeFrameDataByRecord and Dem_GetStatusOfDTC to get the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    18   * freeze frame data,DTC and DTC status related to the record  number send by the tester.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    19   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    20   * \param           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    21   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    22   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    23   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    24   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    25   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    26  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    27  FUNC(Std_ReturnType,DCM_CODE) Dcm_Dsp_GetFreezeFrameDataByRecord (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    28  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    29      VAR(Std_ReturnType,                             AUTOMATIC) retVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    30      VAR(boolean,                                    AUTOMATIC) isNRCSet_b;/*Variable to be set when a negative return type is returned from Dem API in case of record number 0xFF*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    31      VAR(uint8,                                      AUTOMATIC) stDTCStatus_u8;        /* Variable to store the DTC status */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    32      VAR(uint8,                                      AUTOMATIC) dataRDTCSubFunc_u8;     /* Local variable to store sub function*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    33      VAR(uint8,                                      AUTOMATIC) dataRecordNum_u8;           /* Variable to store Record Number */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    34      VAR(Dem_ReturnGetStatusOfDTCType,               AUTOMATIC) stRetGetStatusOfDTC_u8;    /* Return type of Dem_GetStatusOfDTC */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    35      VAR(Dem_ReturnGetFreezeFrameDataByRecordType,   AUTOMATIC) dataRetGetFreezeFrameDataByRecordType_u8; /* Return type of Dem_GetExtendedDataRecordByDTC*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    36      VAR(uint8,                                      AUTOMATIC) idxLoop_u8;            /* Loop counter index for record numbers*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    37      VAR(uint8,                                      AUTOMATIC) NoDTCrecordCounter_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    38      VAR(uint8,                                      AUTOMATIC) WrongDTCCounter_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    39      VAR(uint16,                                     AUTOMATIC) dataAvailableBuffLen_u16;/*Local variable to store and send available buffer size for Dem api Dem_GetFreezeFrameDataByRecord*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    40      VAR(uint32,                                     AUTOMATIC) dataDTC_u32;            /* Variable to store DTC */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    41      VAR(Dcm_MsgLenType,                             AUTOMATIC) dataFillRespLen_u32;     /* Local variable to store the response length filled*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    42      VAR(Dcm_MsgLenType,                             AUTOMATIC) dataRemainBuffer_u32;    /* Local variable for maximum response buffer available*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    43  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    44      /*Initialize negative response code to ZERO*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    45      *dataNegRespCode_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    46      /* Initialization of variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    47      /*Initialize the variable isNRCSet_b to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    48      isNRCSet_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    49      dataFillRespLen_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    50      dataRetGetFreezeFrameDataByRecordType_u8 = DEM_GET_FFBYRECORD_OK ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    51      stRetGetStatusOfDTC_u8  = DEM_STATUS_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    52      retVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    53      /*Opstatus possed by the central statemachine is unused currently, opstatus variables related to service needs to be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    54       * removed and the one passed by the central statemachine needs to be used, this would be taken care with task XXXXX*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    55      DCM_UNUSED_PARAM(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    56      /*Copy subfunction value from the request to local variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    57      dataRDTCSubFunc_u8 = pMsgContext->reqData[DSP_RDTC_POSSUBFUNC];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    58      /*Check if the subfunction received is RDTC subfunction 0x05*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    59      if(DSP_REPORT_DTC_STORED_DATA_BY_RECORD_NUMBER == dataRDTCSubFunc_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    60      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    61          /* Check if request length is correct(max request length ) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    62          if(DSP_RDTC_05_REQLEN == pMsgContext->reqDataLen)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    63          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    64              /*Copy record number from request to local variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    65              dataRecordNum_u8 = pMsgContext->reqData[DSP_RDTC_POSSUBFUNC +1u];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    66              /*store the subfunction value to response buffer and update the request length*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    67              pMsgContext->resData[0] = DSP_REPORT_DTC_STORED_DATA_BY_RECORD_NUMBER;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    68              pMsgContext->resDataLen = 0x01;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    69              /*Reserve 5 bytes for storing Record number(1 byte),DTC(3 bytes)and DTC status(1 byte) in the response buffer before passing the buffer to Dem API to fill the DataRecord*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    70              dataFillRespLen_u32 = 6;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    71              /*IF the  record number is 0xFF ,loop through all the records and call Dem Apis to  get data record,DTC and DTC status */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    72              if(0xFF == dataRecordNum_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    73              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    74                  idxLoop_u8 = 0x00 ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    75              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    76              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    77              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    78                  /*set the loop index to the requested record number*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    79                  idxLoop_u8 = dataRecordNum_u8 ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    80              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    81              do
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    82              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    83                  /* Calculate the remaining buffer length available */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    84                  if (pMsgContext->resMaxDataLen > dataFillRespLen_u32)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    85                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    86                      dataRemainBuffer_u32 = (pMsgContext->resMaxDataLen - dataFillRespLen_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    87                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    88                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    89                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    90                      dataRemainBuffer_u32 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    91                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    92                  /* Copy the existing buffer size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    93                  dataAvailableBuffLen_u16 = (uint16)dataRemainBuffer_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    94  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    95                  dataRetGetFreezeFrameDataByRecordType_u8 = Dem_GetFreezeFrameDataByRecord(idxLoop_u8,DEM_DTC_ORIGIN_PRIMARY_MEMORY,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    96                          &dataDTC_u32,&pMsgContext->resData[dataFillRespLen_u32],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    97                          &dataAvailableBuffLen_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    98  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	    99                  /*DEM_GET_FFBYRECORD_OK from Dem_GetFreezeFrameDataByRecord*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   100                  if( DEM_GET_FFBYRECORD_OK == dataRetGetFreezeFrameDataByRecordType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   101                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   102                      /* Call DEM API to get the status of DTC sent from tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   103                      stRetGetStatusOfDTC_u8 = Dem_GetStatusOfDTC( dataDTC_u32,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   104                              DEM_DTC_KIND_ALL_DTCS,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   105                              DEM_DTC_ORIGIN_PRIMARY_MEMORY,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   106                              &stDTCStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   107  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   108                      if(DEM_STATUS_OK ==stRetGetStatusOfDTC_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   109                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   110                          /*Dem_GetStatusOfDTCreturned ok.Now fill the record number,DTC and DTC status in the response buffer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   111                          pMsgContext->resData[dataFillRespLen_u32-5u] = idxLoop_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   112                          pMsgContext->resData[dataFillRespLen_u32-4u] = (uint8)(dataDTC_u32>>16u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   113                          pMsgContext->resData[dataFillRespLen_u32-3u] = (uint8)(dataDTC_u32>>8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   114                          pMsgContext->resData[dataFillRespLen_u32-2u] = (uint8)(dataDTC_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   115                          pMsgContext->resData[dataFillRespLen_u32-1u] = stDTCStatus_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   116                          /*Update response data length*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   117                          pMsgContext->resDataLen = dataFillRespLen_u32+dataAvailableBuffLen_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   118                          if(0xFF == dataRecordNum_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   119                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   120                              /*Update  dataFillRespLen_u32 where the next data can be written*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   121                              dataFillRespLen_u32 = dataFillRespLen_u32 + dataAvailableBuffLen_u16 + 5u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   122                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   123                          else{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   124                              retVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   125                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   126                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   127                      /* If the DTC sent by the tester is not correct */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   128                      else if(DEM_STATUS_FAILED==stRetGetStatusOfDTC_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   129                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   130                          /*When DEM_STATUS_FAILED Dcm should send an positive response with SID and subfunction alone*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   131                          pMsgContext->resData[0x00] = pMsgContext->reqData[0x00];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   132                          /* Update the Response data length information */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   133                          pMsgContext->resDataLen = 0x01;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   134                          retVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   135                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   136                      /* If the DTC sent by the tester is not correct */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   137                      else if((DEM_STATUS_WRONG_DTC == stRetGetStatusOfDTC_u8)||(DEM_STATUS_WRONG_DTCORIGIN== stRetGetStatusOfDTC_u8)||       \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   138                              (DEM_STATUS_WRONG_DTCKIND== stRetGetStatusOfDTC_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   139                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   140                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   141                          /*Set isNRCSet_b = TRUE,so that in the Record number FF case ,Dcm can send the NRC in case atleast  one wrong return value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   142                           *  is returned from Dem_GetStatusOfDTC for a DTC which is related to a valid REcord number   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   143  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   144                          isNRCSet_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   145                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   146                      /*If DEM returns any invalid value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   147                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   148                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   149                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   150                          /*Set isNRCSet_b = TRUE,so that in the Record number FF case ,Dcm can send the NRC in case atleast  one wrong return value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   151                           *  is returned from Dem_GetStatusOfDTC for a DTC which is related to a valid REcord number   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   152  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   153                          isNRCSet_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   154                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   155                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   156                  /* Record number send by tester is wrong */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   157                  else if(DEM_GET_FFBYRECORD_WRONG_RECORD == dataRetGetFreezeFrameDataByRecordType_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   158                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   159                      /* set Negative Response*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   160                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   161  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   162                          NoDTCrecordCounter_u8++ ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   163                          WrongDTCCounter_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   164  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   165  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   166  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   167                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   168                  else if(DEM_GET_FFBYRECORD_NO_DTC_FOR_RECORD == dataRetGetFreezeFrameDataByRecordType_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   169                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   170                      retVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   171                      NoDTCrecordCounter_u8++ ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   172  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   173                      /*DTCStoredDataRecordNumber  specified by the client is valid and supported by the server, but have no DTCStoredDataRecord data associated with it */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   174                      /* send positive response with only record number*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   175                      if(0xFF != dataRecordNum_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   176                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   177  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   178                          pMsgContext->resData[1] = dataRecordNum_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   179                          pMsgContext->resDataLen =2;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   180                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   181                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   182  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   183                  else if(DEM_GET_FFBYRECORD_WRONG_BUFFERSIZE == dataRetGetFreezeFrameDataByRecordType_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   184                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   185                      /* Response length is too long */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   186                      *dataNegRespCode_u8 = DCM_E_RESPONSETOOLONG;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   187  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   188                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   189                  /*If the DTC Origin is not correct, or if DEM returns any other value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   190                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   191                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   192                      if(0xFF != dataRecordNum_u8 )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   193                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   194                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   195                          /*MR12 RULE VIOLATION: The is required for implementation*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   196                          isNRCSet_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   197                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   198                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   199  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   200  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   201                  if ((DEM_GET_FFBYRECORD_OK == dataRetGetFreezeFrameDataByRecordType_u8) && (DEM_STATUS_FAILED == stRetGetStatusOfDTC_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   202                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   203                      /*Break from loop so that positive respone with only record number can be sent directly*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   204                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   205                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   206  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   207                  if(0xFF != dataRecordNum_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   208                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   209                      /*For record number other than 0xFF set idxLoop_u8 to zero  to come out of the loop immediately*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   210                      idxLoop_u8 = 0xFF;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   211                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   212                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   213                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   214                      idxLoop_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   215                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   216                  /*Check for the negative response code and if current index is less than 0xFF and check if nrc is set ot not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   217              }while((*dataNegRespCode_u8 != DCM_E_RESPONSETOOLONG )&&(idxLoop_u8 < 0xFFu)&& (isNRCSet_b != TRUE) );
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   218  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   219             /*Send positive responce with 0xFF Record Number, when Record number is 0xFF and NO DTC record available for all record number*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   220              if((NoDTCrecordCounter_u8 == 0xFF) && (WrongDTCCounter_u8 != 0xFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   221              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   222                  pMsgContext->resData[1] = dataRecordNum_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   223                  pMsgContext->resDataLen =2;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   224              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   225  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   226              /*In case of record 0xFF positive response  check whether any  NRC other than DCM_E_RESPONSETOOLONG  is returned for any record and reset it*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   227              if((0xFF == dataRecordNum_u8) && (pMsgContext->resDataLen >= 2u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   228              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   229                  /*Check if negative response code is not ZERO and isNRCSet_b is set to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   230                  if((*dataNegRespCode_u8 !=0u) &&  (*dataNegRespCode_u8 != DCM_E_RESPONSETOOLONG) && (isNRCSet_b != TRUE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   231                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   232                      *dataNegRespCode_u8 = 0;/* reset NRC*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   233                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   234              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   235          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   236          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   237          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   238              /*Incorrect request message length*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   239              *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   240          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   241      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   242  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   243      if(0x0 != (*dataNegRespCode_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   244      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   245          retVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   246      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   247  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   248      return retVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   249  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   250  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   251  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   252  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   253  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Rdtc_GetFreezeFrameDataByRecord.c	   254  #endif

	; Module end
