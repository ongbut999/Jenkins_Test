	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15064a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dcm_Dsl_RxIndication.src BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c'

	
$TC16X
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ResetCopyRxDataStatus',code,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ResetCopyRxDataStatus'
	.align	2
	
	.global	Dcm_Prv_ResetCopyRxDataStatus

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     1  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     2  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     3  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     5   * Includes
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     7  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     8  #include "DcmCore_DslDsd_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	     9  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    10  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    11  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    12   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    13   * Defines/Macros
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    14   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    15  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    16  #define DCM_KWP_PROTOCOL         (0x80u)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    17  #define DCM_KWP_MASK             (0xF0u)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    18  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    19  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    20  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    21   *    FUNCTIONLIKE MACROS
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    22  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    23  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    24  #define Dcm_Prv_isHighPrioRequestReceived(DcmRxPduId)                (DcmRxPduId == Dcm_DsldGlobal_st.dataNewRxPduId_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    25  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    26  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    27      #define Dcm_Prv_isHighPrioReqReceivedWhileRoeEvent(DcmRxPduId)   (DcmRxPduId == Dcm_DsldGlobal_st.dataPassRxPduId_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    28  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    29  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    30  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    31  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    32  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    33  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    34  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    35   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    36   * Variables
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    37   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    38  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    39  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    40  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    41  VAR(PduInfoType,DCM_VAR) Dcm_DsldPduInfo_st;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    42  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    43  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    44  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    45  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    46  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    47  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    48   *    Inline Function Definitions
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    49   **********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    50  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    51  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    52   Function name    : Dcm_Prv_CheckLowPriorityRequestReceived
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    53   Syntax           : Dcm_Prv_CheckLowPriorityRequestReceived(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    54   Description      : This Inline function is used to check whether request received in Low Priority than current protocol
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    55   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    56   Return value     : boolean
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    57  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    58  LOCAL_INLINE FUNC(boolean,DCM_CODE) Dcm_Prv_CheckLowPriorityRequestReceived(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    59  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    60      return (Dcm_DsldProtocol_pcst[Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8].nrc21_b);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    61  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    62  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    63  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    64  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    65  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    66  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    67  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    68   Function name    : Dcm_Prv_isConsecutiveRequestReceived
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    69   Syntax           : Dcm_Prv_isConsecutiveRequestReceived(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    70   Description      : This Inline Function is used to check whether request is consecutive request
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    71   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    72   Return value     : boolean
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    73  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    74  LOCAL_INLINE FUNC(boolean,DCM_CODE) Dcm_Prv_isConsecutiveRequestReceived(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    75  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    76  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    77      (void)DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    78  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    79  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    80      /*If the Communication Protocol is Active */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    81      return((Dcm_DsldGlobal_st.flgCommActive_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    82  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    83         && (DcmRxPduId != Dcm_DsldGlobal_st.dataNewRxPduId_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    84  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    85         );
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    86  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    87  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    88  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    89  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    90  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    91  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    92  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    93  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    94   Function name    : Dcm_Prv_isKWPRequestReceived
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    95   Syntax           : Dcm_Prv_isKWPRequestReceived(idxProtocol_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    96   Description      : This Inline function is used to Check if Request received is of KWP protocol
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    97   Parameter        : uint8
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    98   Return value     : boolean
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    99  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   100  LOCAL_INLINE FUNC(boolean,DCM_CODE) Dcm_Prv_isKWPRequestReceived(VAR(uint8,AUTOMATIC) idxProtocol_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   101  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   102      return((Dcm_DsldProtocol_pcst[idxProtocol_u8].protocolid_u8 & DCM_KWP_MASK) == DCM_KWP_PROTOCOL);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   103  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   104  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   105  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   106  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   107  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   108  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   109  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   110   Function name    : Dcm_Prv_StartP2Timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   111   Syntax           : Dcm_Prv_StartP2Timer(void)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   112   Description      : This Inline function is used to Reload P2 Timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   113   Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   114   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   115  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   116  LOCAL_INLINE FUNC(void,DCM_CODE) Dcm_Prv_StartP2Timer(void)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   117  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   118      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32,
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   119                    (Dcm_DsldTimer_st.dataTimeoutP2max_u32 - \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   120                            Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].dataP2TmrAdjust),
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   121                     Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   122  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   123  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   124  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   125  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   126  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   127  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   128  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   129   Function name    : Dcm_Prv_GetRequestLength
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   130   Syntax           : Dcm_Prv_GetRequestLength(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   131   Description      : This Inline Function is used to get the request length
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   132   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   133   Return value     : PduLengthType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   134  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   135  LOCAL_INLINE FUNC(PduLengthType,DCM_CODE) Dcm_Prv_GetRequestLength(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   136  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   137      VAR(PduLengthType,AUTOMATIC) RequestLength = Dcm_DsldGlobal_st.dataRequestLength_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   138  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   139  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   140      if(FALSE != Dcm_Prv_isHighPrioRequestReceived(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   141      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   142          RequestLength = Dcm_DsldGlobal_st.dataNewdataRequestLength_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   143      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   144      #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   145          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   146          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   147              if(FALSE != Dcm_Prv_isHighPrioReqReceivedWhileRoeEvent(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   148              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   149                  RequestLength = Dcm_DsldGlobal_st.dataPassdataRequestLength_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   150              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   151          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   152      #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   153  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   154      (void)DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   155  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   156  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   157      return RequestLength;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   158  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   159  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   160  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   161  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   162  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   163   *    Function Definitions
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   164   **********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   165  #define DCM_START_SEC_CODE
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   166  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   167  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   168  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   169  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   170   Function name    : Dcm_Prv_ResetCopyRxDataStatus
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   171   Syntax           : Dcm_Prv_ResetCopyRxDataStatus(Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   172   Description      : Function to reset CopyRxData status of all other dataRxPduId_u8 except that dataRxPduId_u8 which
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   173                      has been passed as parameter
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   174   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   175   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   176  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   177  FUNC(void, DCM_CODE) Dcm_Prv_ResetCopyRxDataStatus (VAR(PduIdType,AUTOMATIC) RxPduId)
; Function Dcm_Prv_ResetCopyRxDataStatus
.L42:
Dcm_Prv_ResetCopyRxDataStatus:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   178  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   179      VAR(PduIdType,AUTOMATIC) idxRxPduid;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   180  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   181      for ( idxRxPduid = 0 ; idxRxPduid < DCM_CFG_NUM_RX_PDUID ; idxRxPduid++ )
	mov	d0,#0
.L174:
	j	.L2
.L3:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   182      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   183          /*Check if the CopyRxData status is set and dataRxPduId_u8 which has been not passed as parameter */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   184          if ((idxRxPduid != RxPduId) && (Dcm_DslRxPduArray_ast[idxRxPduid].Dcm_DslCopyRxData_b != FALSE))
	jeq	d0,d4,.L4
.L220:
	mul	d15,d0,#12
.L221:
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
.L222:
	addsc.a	a15,a15,d15,#0
.L223:
	lea	a15,[a15]10
	ld.bu	d15,[a15]
.L224:
	jeq	d15,#0,.L5
.L225:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   185          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   186              Dcm_DslRxPduArray_ast[idxRxPduid].Dcm_DslCopyRxData_b = FALSE;
	mov	d15,#0
.L226:
	st.b	[a15],d15
.L5:
.L4:
	add	d0,#1
.L2:
	jlt.u	d0,#2,.L3
.L227:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   187          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   188      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   189  }
	ret
.L122:
	
__Dcm_Prv_ResetCopyRxDataStatus_function_end:
	.size	Dcm_Prv_ResetCopyRxDataStatus,__Dcm_Prv_ResetCopyRxDataStatus_function_end-Dcm_Prv_ResetCopyRxDataStatus
.L74:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_DiscardRequest',code,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_DiscardRequest'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   190  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   191  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   192  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   193  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   194  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   195  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   196   Function name    : Dcm_Prv_DiscardRequest
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   197   Syntax           : Dcm_Prv_DiscardRequest(DcmRxPduId,Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   198   Description      : This Function is used to Discard the request by Resetting the DSL states and reloading the s3 timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   199   Parameter        : PduIdType,Std_ReturnType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   200   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   201  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   202  static FUNC(void,DCM_CODE) Dcm_Prv_DiscardRequest(VAR(PduIdType, AUTOMATIC) DcmRxPduId,
; Function Dcm_Prv_DiscardRequest
.L44:
Dcm_Prv_DiscardRequest:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   203          VAR(Std_ReturnType, AUTOMATIC) Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   204  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   205  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   206  #if(DCM_CALLAPPLICATIONONREQRX_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   207      if(FALSE != Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslCopyRxData_b)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   208      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   209          (void)DcmAppl_TpRxIndication(DcmRxPduId,Result);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   210      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   211  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   212      (void)Result;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   213  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   214  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   215      Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b  = FALSE;
	mul	d15,d4,#12
.L232:
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
.L233:
	addsc.a	a15,a15,d15,#0
.L234:
	mov	d15,#0
.L235:
	st.b	[a15]9,d15
.L236:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   216      Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslServiceId_u8        = DCM_SERVICEID_DEFAULT_VALUE;
	mov	d15,#255
.L237:
	st.b	[a15]8,d15
.L238:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   217  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   218      if((Dcm_DsldGlobal_st.dataActiveRxPduId_u8 == DcmRxPduId) && \ 
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L239:
	ld.hu	d15,[a15]0
.L240:
	jne	d15,d4,.L6
.L241:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   219              (Dcm_Prv_GetDslState() == DSL_STATE_WAITING_FOR_RXINDICATION))
	movh.a	a2,#@his(Dcm_DslState_u8)
	lea	a2,[a2]@los(Dcm_DslState_u8)
	ld.bu	d15,[a2]
.L242:
	jne	d15,#1,.L7
.L243:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   220      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   221          Dcm_Prv_SetDslState(DSL_STATE_IDLE);
	mov	d15,#0
	st.b	[a2],d15
.L244:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   222          Dcm_Prv_SetDslSubState(DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING);
	movh.a	a2,#@his(Dcm_DslSubState_u8)
	lea	a2,[a2]@los(Dcm_DslSubState_u8)
	mov	d15,#0
	st.b	[a2],d15
.L129:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     3  #ifndef DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     4  #define DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     6  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     7  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     8  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     9  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    11  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    12   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    13   * Dcm_Prv_ReloadS3Timer :  Inline function to start P3 timer monitoring
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    14   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    15   * \param           None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    16   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    17   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    18   * \retval          None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    19   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    20   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    21   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    23  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    25  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    26  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    27  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    28  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    29  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    30  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    31      if(DCM_IS_KWPPROT_ACTIVE() != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    32      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    33          /* if KWP is running protocol start P3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    35          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, Dcm_DsldTimer_st.dataTimeoutP3max_u32,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    36      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    37      else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    38      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    39          /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    40  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    41          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    42      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    43  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    44      /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    45  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    46      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
	mov	d15,#5000
	st.w	[a15]32,d15
.L7:
.L6:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   223          /*TRACE[SWS_Dcm_00141]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   224          Dcm_Prv_ReloadS3Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   225      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   226  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   227  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   228      if(FALSE != Dcm_Prv_isHighPrioRequestReceived(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   229      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   230          Dcm_DsldGlobal_st.dataNewRxPduId_u8 = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   231          Dcm_Prv_SetDslPreemptionState(DSL_STATE_IDLE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   232      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   233      #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   234          if(FALSE != Dcm_Prv_isHighPrioReqReceivedWhileRoeEvent(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   235          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   236              Dcm_DsldGlobal_st.dataPassRxPduId_u8 = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   237              Dcm_Prv_SetDslState(DSL_STATE_IDLE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   238  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   239              /* If ROE TxConfirmation has come; then the DSL state would be changes to RECEIVING.. */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   240              /* In case of Discarded RxIndication; The DSL next State has to be reset back to READY FOR RECEPTION */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   241              if(Dcm_Prv_GetDslState() != DSL_STATE_WAITING_FOR_RXINDICATION)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   242              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   243                  Dcm_Prv_SetDslNextState(DSL_STATE_IDLE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   244                  Dcm_Prv_SetDslNextSubState(DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   245              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   246              /*TRACE[SWS_Dcm_00141]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   247              Dcm_Prv_ReloadS3Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   248          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   249  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   250      #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   251  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   252  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   253  }
	ret
.L125:
	
__Dcm_Prv_DiscardRequest_function_end:
	.size	Dcm_Prv_DiscardRequest,__Dcm_Prv_DiscardRequest_function_end-Dcm_Prv_DiscardRequest
.L79:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ReloadP2maxValue',code,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ReloadP2maxValue'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   254  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   255  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   256  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   257  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   258  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   259  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   260   Function name    : Dcm_Prv_ProcessHighPriorityRequest
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   261   Syntax           : Dcm_Prv_ProcessHighPriorityRequest(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   262   Description      : This Function is used to do following activities
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   263                      1) Update preemption state
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   264                      2) Inactivate channel for previous protocol
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   265                      3) Start P2* timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   266   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   267   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   268  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   269  static FUNC(void,DCM_CODE) Dcm_Prv_ProcessHighPriorityRequest(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   270  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   271      VAR(PduIdType,AUTOMATIC) dataActiveRxPduId_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   272      VAR(uint8,AUTOMATIC)idxProtocol_u8 = Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   273  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   274      /* Store the active tx pdu id number */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   275      Dcm_DsldGlobal_st.dataOldtxPduId_u8 = \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   276      Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldGlobal_st.dataActiveRxPduId_u8]].txpduid_num_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   277  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   278      /* Multicore: Lock needed here to avoid reception of ROE/RDPI events when the DSL has already become free */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   279      SchM_Enter_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   280  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   281      /*Dont change this sequence in future*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   282      Dcm_DsldGlobal_st.dataActiveTxPduId_u8    = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   283      Dcm_Prv_SetDslPreemptionState(DSL_SUBSTATE_STOP_PROTOCOL);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   284      dataActiveRxPduId_u8 = Dcm_DsldGlobal_st.dataActiveRxPduId_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   285      Dcm_DsldGlobal_st.dataActiveRxPduId_u8    = DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   286  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   287      SchM_Exit_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   288  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   289      /* Invoke ComM_Inactive Diagnosis for the old protocol */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   290      if(Dcm_active_commode_e[Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].channel_idx_u8].ComMChannelId != Dcm_active_commode_e[Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[dataActiveRxPduId_u8]].channel_idx_u8].ComMChannelId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   291      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   292          /*TRACE[SWS_Dcm_00168]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   293          ComM_DCM_InactiveDiagnostic (Dcm_active_commode_e[Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[dataActiveRxPduId_u8]].channel_idx_u8].ComMChannelId);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   294      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   295  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   296      Dcm_DsldGlobal_st.dataNewRxPduId_u8 = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   297  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   298  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   299      Dcm_DsldGlobal_st.dataPassRxPduId_u8 = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   300  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   301  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   302      /* Start P2Star timer */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   303      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32,
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   304                    (Dcm_DsldTimer_st.dataTimeoutP2max_u32 - Dcm_DsldProtocol_pcst[idxProtocol_u8].dataP2TmrAdjust),
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   305                     Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   306  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   307  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   308  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   309  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   310  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   311  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   312  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   313  #if((DCM_ROE_ENABLED != DCM_CFG_OFF) && (DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   314  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   315   Function name    : Dcm_Prv_ProcessHighPriorityReqWhileRoeEvent
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   316   Syntax           : Dcm_Prv_ProcessHighPriorityReqWhileRoeEvent(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   317   Description      : This Function is used to do the following activities
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   318                      1)ROE tx confirmation has not yet come; ROE is in processing. Stop Roe by moving
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   319                      Active tx pdu id to a invalid value 0xFF
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   320                      2)setting the Dsl next state to DSL_SUBSTATE_STOP_ROE
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   321                      3)Start P2* timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   322   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   323   Return value     : void
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   324  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   325  static FUNC(void,DCM_CODE) Dcm_Prv_ProcessHighPriorityReqWhileRoeEvent(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   326  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   327      /* Store the active tx pdu id number */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   328      Dcm_DsldGlobal_st.dataOldtxPduId_u8 = \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   329      Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[Dcm_DsldGlobal_st.dataActiveRxPduId_u8]].txpduid_num_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   330  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   331      /* Multicore: Lock needed here to avoid reception of ROE/RDPI events when the DSL has already become free */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   332      SchM_Enter_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   333  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   334      if(Dcm_Prv_GetDslState() == DSL_STATE_WAITING_FOR_RXINDICATION)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   335      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   336          Dcm_Prv_SetDslState(DSL_STATE_REQUEST_RECEIVED);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   337          Dcm_Prv_SetDslSubState(DSL_SUBSTATE_START_PROTOCOL);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   338          Dcm_DsldGlobal_st.dataActiveRxPduId_u8   = DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   339          Dcm_DsldGlobal_st.dataRequestLength_u16  = Dcm_DsldGlobal_st.dataPassdataRequestLength_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   340          Dcm_DsldGlobal_st.dataPassRxPduId_u8     = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   341      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   342      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   343      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   344          Dcm_DsldGlobal_st.dataActiveTxPduId_u8    = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   345          Dcm_Prv_SetDslPreemptionState(DSL_SUBSTATE_STOP_ROE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   346          Dcm_DsldGlobal_st.dataRequestLength_u16   = Dcm_DsldGlobal_st.dataPassdataRequestLength_u16;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   347          Dcm_DsldGlobal_st.dataActiveRxPduId_u8    = DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   348          Dcm_DsldGlobal_st.dataPassRxPduId_u8      = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   349  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   350          /* After Stopping ROE , the Active service table has to be restored from the old Service Table */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   351          /* Change the service table to originally active table */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   352          if(Dcm_DsldMsgContext_st.msgAddInfo.sourceofRequest == DCM_ROE_SOURCE)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   353          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   354              Dcm_DsldGlobal_st.datActiveSrvtable_u8  = Dcm_DsldGlobal_st.dataOldSrvtable_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   355          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   356          Dcm_DsldSrvTable_pcst = Dcm_Dsld_Conf_cs.sid_table_pcs[Dcm_DsldGlobal_st.datActiveSrvtable_u8].ptr_service_table_pcs;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   357      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   358      SchM_Exit_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   359  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   360      /* Start P2 timer */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   361      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   362                    (Dcm_DsldTimer_st.dataTimeoutP2max_u32 -   \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   363                    Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].dataP2TmrAdjust), \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   364                    Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   365  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   366  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   367  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   368  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   369  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   370  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   371  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   372  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   373  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   374   Function name   : Dcm_Prv_ReloadP2maxValue
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   375   Syntax          : Dcm_Prv_ReloadP2maxValue(DcmRxPduId,idxProtocol_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   376   Description     : If it is new UDS protocol then we need to start P2 timer with default P2 max.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   377                     If it is new KWP then we need to start P2 timer with P2 max from corresponding protocol
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   378                     Do nothing for consecutive requests.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   379                     If protocol preemption is not enabled and KWP protocol is not present then only UDS protocol is present
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   380                     So already the UDS P2 timing is updated during Initialization. As a result no need to load the time again
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   381                     Also after transition from non default to default session, default P2 timer is loaded in Dcm_Prv_SetSesCtrlType API
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   382   Parameter       : PduIdType,uint8
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   383   Return value    : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   384  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   385  static FUNC(void,DCM_CODE) Dcm_Prv_ReloadP2maxValue(VAR(PduIdType, AUTOMATIC) DcmRxPduId,VAR(uint8,AUTOMATIC) idxProtocol_u8)
; Function Dcm_Prv_ReloadP2maxValue
.L46:
Dcm_Prv_ReloadP2maxValue:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   386  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   387  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   388      VAR(uint8,AUTOMATIC) idxKwpTiming_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   389  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   390  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   391  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   392      if(FALSE == Dcm_Prv_isConsecutiveRequestReceived(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   393      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   394          if(FALSE != Dcm_Prv_isKWPRequestReceived(idxProtocol_u8))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   395          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   396              /* This is required for the first request of KWP. For consecutive requests  "Dcm_DsldTimer_st.dataTimeoutP2max_u32"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   397               *  get updated in protocol activation and might be get modified by ATP service */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   398              idxKwpTiming_u8 = Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].timings_idx_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   399              Dcm_DsldTimer_st.dataTimeoutP2max_u32 = Dcm_Dsld_default_timings_acs[idxKwpTiming_u8].P2_max_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   400          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   401          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   402          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   403              Dcm_DsldTimer_st.dataTimeoutP2max_u32 = DCM_CFG_DEFAULT_P2MAX_TIME;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   404          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   405      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   406  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   407      #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   408          if(FALSE != Dcm_Prv_isHighPrioRequestReceived(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   409          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   410              Dcm_DsldTimer_st.dataTimeoutP2max_u32 = DCM_CFG_DEFAULT_P2MAX_TIME;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   411          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   412      #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   413          (void)idxProtocol_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   414  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   415  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   416  #if((DCM_CFG_KWP_ENABLED == DCM_CFG_OFF) && (DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   417          (void)DcmRxPduId;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   418  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   419  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   420  }
	ret
.L131:
	
__Dcm_Prv_ReloadP2maxValue_function_end:
	.size	Dcm_Prv_ReloadP2maxValue,__Dcm_Prv_ReloadP2maxValue_function_end-Dcm_Prv_ReloadP2maxValue
.L84:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ProcessRequest',code,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ProcessRequest'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   421  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   422  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   423  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   424  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   425   Function name    : Dcm_Prv_ProcessRequest
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   426   Syntax           : Dcm_Prv_ProcessRequest(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   427   Description      : This Function is used to do the following activities
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   428                      1)Process request
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   429                      2)update DSL states
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   430                      3)Start P2* timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   431   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   432   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   433  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   434  static FUNC(void,DCM_CODE) Dcm_Prv_ProcessRequest(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; Function Dcm_Prv_ProcessRequest
.L48:
Dcm_Prv_ProcessRequest:	.type	func
	mov	d8,d4
.L176:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   435  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   436      VAR(uint8,AUTOMATIC)idxProtocol_u8 = Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8;
	movh.a	a15,#@his(Dcm_DsldRxTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldRxTable_pcu8)
	ld.a	a15,[a15]
.L253:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L254:
	mul	d15,d15,#14
.L255:
	movh.a	a15,#@his(Dcm_DsldConnTable_pcst)
	lea	a15,[a15]@los(Dcm_DsldConnTable_pcst)
	ld.a	a15,[a15]
.L256:
	addsc.a	a15,a15,d15,#0
.L257:
	ld.bu	d5,[a15]
.L177:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   437  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   438      Dcm_Prv_ReloadP2maxValue(DcmRxPduId,idxProtocol_u8);
	mov	d4,d8
	call	Dcm_Prv_ReloadP2maxValue
.L175:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   439  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   440  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   441      if(FALSE != Dcm_Prv_isHighPrioRequestReceived(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   442      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   443          Dcm_Prv_ProcessHighPriorityRequest(DcmRxPduId);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   444      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   445      #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   446          else if(FALSE != Dcm_Prv_isHighPrioReqReceivedWhileRoeEvent(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   447          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   448              Dcm_Prv_ProcessHighPriorityReqWhileRoeEvent(DcmRxPduId);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   449          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   450      #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   451      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   452  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   453      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   454          if(DcmRxPduId == Dcm_DsldGlobal_st.dataActiveRxPduId_u8)
	movh.a	a2,#@his(Dcm_DsldGlobal_st)
	lea	a2,[a2]@los(Dcm_DsldGlobal_st)
.L258:
	ld.hu	d15,[a2]0
.L259:
	jne	d15,d8,.L8
.L260:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   455          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   456              /* updating the buffer pointer with the address which has the request to be processed.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   457                 This buffer is used for further processing of the request.  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   458  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   459              Dcm_DsldGlobal_st.adrBufferPtr_pu8 = Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslBufferPtr_pu8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   460  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   461              Dcm_Prv_SetDslState(DSL_STATE_REQUEST_RECEIVED);
	movh.a	a15,#@his(Dcm_DslState_u8)
	lea	a15,[a15]@los(Dcm_DslState_u8)
	mov	d15,#2
	st.b	[a15],d15
.L261:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   462              Dcm_Prv_SetDslSubState(DSL_SUBSTATE_START_PROTOCOL);
	movh.a	a15,#@his(Dcm_DslSubState_u8)
	lea	a15,[a15]@los(Dcm_DslSubState_u8)
	mov	d15,#5
	st.b	[a15],d15
.L138:
	movh.a	a15,#@his(Dcm_DsldTimer_st)
	lea	a15,[a15]@los(Dcm_DsldTimer_st)
	ld.w	d15,[a15]4
	movh.a	a15,#@his(Dcm_DsldProtocol_pcst)
	lea	a15,[a15]@los(Dcm_DsldProtocol_pcst)
	ld.a	a15,[a15]
	ld.bu	d0,[a2]5
	sha	d0,#5
	addsc.a	a15,a15,d0,#0
	ld.w	d0,[a15]16
	sub	d15,d0
	mov	d0,#1000
	div.u	e0,d15,d0
	st.w	[a2]32,d0
.L8:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   463              Dcm_Prv_StartP2Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   464           }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   465      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   466  }
	ret
.L134:
	
__Dcm_Prv_ProcessRequest_function_end:
	.size	Dcm_Prv_ProcessRequest,__Dcm_Prv_ProcessRequest_function_end-Dcm_Prv_ProcessRequest
.L89:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_SendNrc21',code,cluster('Dcm_Prv_SendNrc21')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_SendNrc21'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   467  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   468  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   469  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   470  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   471  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   472  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   473   Function name    : Dcm_Prv_SendNrc21
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   474   Syntax           : Dcm_Prv_SendNrc21(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   475   Description      : This is the indication of faking complete reception of the low-priority protocol, now trigger NRC-21
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   476   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   477   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   478  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   479  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3355]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   480  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3356]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   481  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3421]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   482  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3422]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   483  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3358]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   484  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-3360]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   485  static FUNC(void,DCM_CODE) Dcm_Prv_SendNrc21(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; Function Dcm_Prv_SendNrc21
.L50:
Dcm_Prv_SendNrc21:	.type	func
	sub.a	a10,#8
.L178:
	mov	d8,d4
.L180:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   486  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   487      VAR(PduInfoType,AUTOMATIC) pduInfo_st = {NULL_PTR,DCM_NEGATIVE_RESPONSE_LENGTH};
	movh.a	a15,#@his(.1.ini)
	lea	a15,[a15]@los(.1.ini)
	ld.da	a2/a3,[a15]0
.L266:
	st.da	[a10]0,a2/a3
.L267:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   488  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   489      if(DCM_CHKFULLCOMM_MODE(Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].channel_idx_u8))
	movh.a	a15,#@his(Dcm_DsldRxTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldRxTable_pcu8)
	ld.a	a15,[a15]
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
	mul	d15,d15,#14
	movh.a	a15,#@his(Dcm_DsldConnTable_pcst)
	lea	a15,[a15]@los(Dcm_DsldConnTable_pcst)
	ld.a	a15,[a15]
	addsc.a	a2,a15,d15,#0
	ld.bu	d15,[a2]10
	movh.a	a15,#@his(Dcm_active_commode_e)
	lea	a15,[a15]@los(Dcm_active_commode_e)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L268:
	jne	d15,#2,.L9
.L269:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   490      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   491          if(E_OK != PduR_DcmTransmit(Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].txpduid_num_u8, &pduInfo_st))
	ld.hu	d4,[a2]2
.L179:
	lea	a4,[a10]0
	call	PduR_DcmTransmit
.L270:
	jeq	d2,#0,.L10
.L271:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   492          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   493              Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslServiceId_u8 = DCM_SERVICEID_DEFAULT_VALUE;
	mul	d15,d8,#12
.L272:
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
.L273:
	addsc.a	a15,a15,d15,#0
.L274:
	mov	d15,#255
.L275:
	st.b	[a15]8,d15
.L10:
	j	.L11
.L9:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   494          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   495      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   496      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   497      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   498          DCM_DET_ERROR(DCM_TPRXIND_ID , DCM_E_FULLCOMM_DISABLED )
	mov	d4,#53
.L181:
	mov	d5,#0
	mov	d6,#147
	mov	d7,#14
	call	Det_ReportError
.L11:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   499      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   500  }
	ret
.L140:
	
__Dcm_Prv_SendNrc21_function_end:
	.size	Dcm_Prv_SendNrc21,__Dcm_Prv_SendNrc21_function_end-Dcm_Prv_SendNrc21
.L94:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_CheckDiagnosticStatus',code,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_CheckDiagnosticStatus'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   501  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   502  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   503  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   504  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   505  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   506  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   507   Function name    : Dcm_Prv_CheckDiagnosticStatus
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   508   Syntax           : Dcm_Prv_CheckDiagnosticStatus(DcmRxPduId,idxProtocol_u8,&RxBuffer_pu8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   509   Description      : This function is used to Check the Diagnostic status and inform ComM module so that channel enters in
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   510                      full communication mode.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   511   Parameter        : PduIdType,uint8,const uint8*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   512   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   513  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   514  /*TRACE[SWS_Dcm_01050][SWS_Dcm_00169]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   515  static FUNC(void,DCM_CODE) Dcm_Prv_CheckDiagnosticStatus(VAR(PduIdType, AUTOMATIC) DcmRxPduId,
; Function Dcm_Prv_CheckDiagnosticStatus
.L52:
Dcm_Prv_CheckDiagnosticStatus:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   516          VAR(uint8,AUTOMATIC) idxProtocol_u8,P2CONST(uint8,AUTOMATIC,DCM_INTERN_DATA) RxBuffer_pu8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   517  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   518      if(FALSE == Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b)
	mul	d15,d4,#12
.L280:
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
.L281:
	addsc.a	a15,a15,d15,#0
.L282:
	ld.bu	d15,[a15]9
.L283:
	jne	d15,#0,.L12
.L284:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   519      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   520          if (idxProtocol_u8 == Dcm_DsldGlobal_st.idxCurrentProtocol_u8)
	movh.a	a2,#@his(Dcm_DsldGlobal_st)
	lea	a2,[a2]@los(Dcm_DsldGlobal_st)
.L285:
	ld.bu	d15,[a2]5
.L286:
	jne	d15,d5,.L13
.L287:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   521          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   522              if((Dcm_DsldGlobal_st.idxActiveSession_u8 == DCM_DEFAULT_SESSION_IDX) && (RxBuffer_pu8 != NULL_PTR))
	ld.bu	d15,[a2]3
.L288:
	jne	d15,#0,.L14
.L289:
	jz.a	a4,.L15
.L290:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   523              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   524                  Dcm_CheckActiveDiagnosticStatus(Dcm_active_commode_e[Dcm_DsldConnTable_pcst[\ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   525                                                  Dcm_DsldRxTable_pcu8[DcmRxPduId]].channel_idx_u8].ComMChannelId);
	movh.a	a15,#@his(Dcm_DsldRxTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldRxTable_pcu8)
	ld.a	a15,[a15]
.L291:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L292:
	mul	d15,d15,#14
.L293:
	movh.a	a15,#@his(Dcm_DsldConnTable_pcst)
	lea	a15,[a15]@los(Dcm_DsldConnTable_pcst)
	ld.a	a15,[a15]
.L294:
	addsc.a	a15,a15,d15,#0
.L295:
	ld.bu	d15,[a15]10
.L296:
	movh.a	a15,#@his(Dcm_active_commode_e)
	lea	a15,[a15]@los(Dcm_active_commode_e)
.L297:
	addsc.a	a15,a15,d15,#3
.L298:
	ld.bu	d4,[a15]
.L182:
	call	Dcm_CheckActiveDiagnosticStatus
.L15:
.L14:
	j	.L16
.L13:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   526              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   527          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   528          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   529          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   530              if(FALSE != Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslCopyRxData_b)
	ld.bu	d15,[a15]10
.L299:
	jeq	d15,#0,.L17
.L300:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   531              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   532                  Dcm_CheckActiveDiagnosticStatus(Dcm_active_commode_e[Dcm_DsldConnTable_pcst[\ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   533                                                      Dcm_DsldRxTable_pcu8[DcmRxPduId]].channel_idx_u8].ComMChannelId);
	movh.a	a15,#@his(Dcm_DsldRxTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldRxTable_pcu8)
	ld.a	a15,[a15]
.L301:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L302:
	mul	d15,d15,#14
.L303:
	movh.a	a15,#@his(Dcm_DsldConnTable_pcst)
	lea	a15,[a15]@los(Dcm_DsldConnTable_pcst)
	ld.a	a15,[a15]
.L304:
	addsc.a	a15,a15,d15,#0
.L305:
	ld.bu	d15,[a15]10
.L306:
	movh.a	a15,#@his(Dcm_active_commode_e)
	lea	a15,[a15]@los(Dcm_active_commode_e)
.L307:
	addsc.a	a15,a15,d15,#3
.L308:
	ld.bu	d4,[a15]
.L183:
	call	Dcm_CheckActiveDiagnosticStatus
.L17:
.L16:
.L12:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   534              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   535          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   536      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   537  }
	ret
.L144:
	
__Dcm_Prv_CheckDiagnosticStatus_function_end:
	.size	Dcm_Prv_CheckDiagnosticStatus,__Dcm_Prv_CheckDiagnosticStatus_function_end-Dcm_Prv_CheckDiagnosticStatus
.L99:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_UpdateDSLstate',code,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_UpdateDSLstate'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   538  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   539  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   540  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   541  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   542  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   543  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   544   Function name    : Dcm_Prv_UpdateDSLstate
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   545   Syntax           : Dcm_Prv_UpdateDSLstate(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   546   Description      : This Function is used to update the DSL state and reset S3 timer when FunctTesterPresent is received
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   547   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   548   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   549  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   550  static FUNC(void,DCM_CODE) Dcm_Prv_UpdateDSLstate(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; Function Dcm_Prv_UpdateDSLstate
.L54:
Dcm_Prv_UpdateDSLstate:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   551  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   552      /* Reset S3 timer only if request received is for running protocol else ignore */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   553      if(Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8 == Dcm_DsldGlobal_st.idxCurrentProtocol_u8)
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L313:
	movh.a	a2,#@his(Dcm_DsldRxTable_pcu8)
	lea	a2,[a2]@los(Dcm_DsldRxTable_pcu8)
	ld.a	a2,[a2]
.L314:
	addsc.a	a2,a2,d4,#0
	ld.bu	d15,[a2]
.L315:
	mul	d15,d15,#14
.L316:
	movh.a	a2,#@his(Dcm_DsldConnTable_pcst)
	lea	a2,[a2]@los(Dcm_DsldConnTable_pcst)
	ld.a	a2,[a2]
.L317:
	addsc.a	a2,a2,d15,#0
.L318:
	ld.bu	d0,[a2]
.L319:
	ld.bu	d15,[a15]5
.L320:
	jne	d15,d0,.L18
.L321:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   554      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   555  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_ROE_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   556          /*Check if High Priority Request is Arrived When Dcm Is Processing Roe Event*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   557          if(FALSE != Dcm_Prv_isHighPrioReqReceivedWhileRoeEvent(DcmRxPduId))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   558          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   559              Dcm_Prv_SetDslNextState(DSL_STATE_IDLE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   560              Dcm_Prv_SetDslNextSubState(DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   561              Dcm_DsldGlobal_st.dataPassRxPduId_u8  = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   562  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   563              if(Dcm_Prv_GetDslState() == DSL_STATE_WAITING_FOR_RXINDICATION)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   564              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   565                  Dcm_Prv_SetDslState(DSL_STATE_IDLE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   566                  Dcm_Prv_SetDslSubState(DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   567              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   568              Dcm_Prv_ReloadS3Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   569          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   570          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   571  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   572  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   573          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   574              Dcm_Prv_SetDslState(DSL_STATE_IDLE);
	movh.a	a2,#@his(Dcm_DslState_u8)
	lea	a2,[a2]@los(Dcm_DslState_u8)
	mov	d15,#0
	st.b	[a2],d15
.L322:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   575              Dcm_Prv_SetDslSubState(DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING);
	movh.a	a2,#@his(Dcm_DslSubState_u8)
	lea	a2,[a2]@los(Dcm_DslSubState_u8)
	mov	d15,#0
	st.b	[a2],d15
.L151:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     3  #ifndef DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     4  #define DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     6  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     7  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     8  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     9  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    11  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    12   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    13   * Dcm_Prv_ReloadS3Timer :  Inline function to start P3 timer monitoring
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    14   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    15   * \param           None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    16   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    17   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    18   * \retval          None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    19   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    20   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    21   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    23  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    25  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    26  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    27  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    28  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    29  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    30  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    31      if(DCM_IS_KWPPROT_ACTIVE() != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    32      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    33          /* if KWP is running protocol start P3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    35          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, Dcm_DsldTimer_st.dataTimeoutP3max_u32,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    36      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    37      else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    38      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    39          /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    40  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    41          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    42      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    43  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    44      /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    45  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    46      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
	mov	d15,#5000
	st.w	[a15]32,d15
.L18:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   576              Dcm_Prv_ReloadS3Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   577          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   578      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   579  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   580      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   581      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   582          /* In case of parallel tester present. The nexRxPdudid has to be reset for two levels of*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   583          /* protocol preemption */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   584          Dcm_DsldGlobal_st.dataNewRxPduId_u8 = DCM_PDUID_DEFAULT_VALUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   585      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   586  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   587  }
	ret
.L149:
	
__Dcm_Prv_UpdateDSLstate_function_end:
	.size	Dcm_Prv_UpdateDSLstate,__Dcm_Prv_UpdateDSLstate_function_end-Dcm_Prv_UpdateDSLstate
.L104:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_isFunctionalTesterPresentProcessed',code,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_isFunctionalTesterPresentProcessed'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   588  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   589  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   590  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   591  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   592  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   593  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   594   Function name    : Dcm_Prv_isFunctionalTesterPresentProcessed
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   595   Syntax           : Dcm_Prv_isFunctionalTesterPresentProcessed(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   596   Description      : This Function is used to do the following activities
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   597                      1) Check if funct Tester present is rceived
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   598                      2) Reload S3 timer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   599                      3) Update DSL state
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   600   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   601   Return value     : boolean
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   602  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   603  /*TRACE[SWS_Dcm_00112][SWS_Dcm_00113][SWS_Dcm_01168]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   604  static FUNC(boolean,DCM_CODE) Dcm_Prv_isFunctionalTesterPresentProcessed(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; Function Dcm_Prv_isFunctionalTesterPresentProcessed
.L56:
Dcm_Prv_isFunctionalTesterPresentProcessed:	.type	func
	mov	d9,d4
.L185:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   605  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   606      VAR(boolean,AUTOMATIC) processStatus_b = FALSE;
	mov	d8,#0
.L186:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   607  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   608      if(FALSE != Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b)
	mul	d15,d9,#12
.L327:
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
.L328:
	addsc.a	a15,a15,d15,#0
.L329:
	lea	a12,[a15]9
	ld.bu	d15,[a12]
.L330:
	jeq	d15,#0,.L19
.L331:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   609      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   610          if(FALSE == Dcm_isRequestTobeProcessedByDSP(DcmRxPduId))
	ld.bu	d15,[a15]10
.L332:
	jne	d15,#0,.L20
.L333:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   611          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   612              processStatus_b = TRUE;
	mov	d8,#1
.L334:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   613              DcmAppl_DcmIndicationFuncTpr();
	call	DcmAppl_DcmIndicationFuncTpr
.L184:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   614              Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b = FALSE;
	mov	d15,#0
.L335:
	st.b	[a12],d15
.L336:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   615              Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslServiceId_u8       = DCM_SERVICEID_DEFAULT_VALUE;
	mov	d15,#255
.L337:
	st.b	[a15]8,d15
.L338:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   616  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   617              if(((Dcm_Prv_GetDslState() == DSL_STATE_IDLE) && (FALSE == Dcm_isFuncTPOnOtherConnection_b)) || \ 
	movh.a	a15,#@his(Dcm_DslState_u8)
	lea	a15,[a15]@los(Dcm_DslState_u8)
	ld.bu	d15,[a15]
.L339:
	jne	d15,#0,.L21
.L340:
	movh.a	a15,#@his(Dcm_isFuncTPOnOtherConnection_b)
	lea	a15,[a15]@los(Dcm_isFuncTPOnOtherConnection_b)
	ld.bu	d0,[a15]
.L341:
	jeq	d0,#0,.L22
.L21:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   618                  (Dcm_Prv_GetDslState() == DSL_STATE_ROETYPE1_RECEIVED))
	jne	d15,#5,.L23
.L22:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     3  #ifndef DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     4  #define DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     6  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     7  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     8  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     9  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    11  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    12   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    13   * Dcm_Prv_ReloadS3Timer :  Inline function to start P3 timer monitoring
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    14   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    15   * \param           None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    16   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    17   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    18   * \retval          None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    19   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    20   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    21   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    23  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    25  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    26  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    27  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    28  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    29  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    30  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    31      if(DCM_IS_KWPPROT_ACTIVE() != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    32      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    33          /* if KWP is running protocol start P3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    35          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, Dcm_DsldTimer_st.dataTimeoutP3max_u32,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    36      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    37      else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    38      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    39          /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    40  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    41          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    42      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    43  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    44      /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    45  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    46      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
	mov	d15,#5000
	st.w	[a15]32,d15
.L23:
	j	.L24
.L20:
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L342:
	ld.hu	d15,[a15]22
.L188:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   157      return RequestLength;      (inlined)
	j	.L25

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   158  }      (inlined)
.L25:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   619              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   620                  Dcm_Prv_ReloadS3Timer();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   621              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   622          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   623          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   624          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   625              if((DCM_DSLD_PARALLEL_DCM_TPR_REQ_LENGTH == Dcm_Prv_GetRequestLength(DcmRxPduId)) && \ 
	jne	d15,#2,.L26
.L156:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     3  #ifndef DCMCORE_DSLDSD_PROT_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     4  #define DCMCORE_DSLDSD_PROT_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     6  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     7  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     8  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     9  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    11  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    12  #include "NvM.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    13  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    14   #if (DCM_CFG_DET_SUPPORT_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    15  #include "Det.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    16  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    17  #include "Dcm_Dsd.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    18  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    19   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    20   *    Internal  definitions
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    21   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    23  /* Endianness conversion for UINT16/SINT16 data */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    25  #define DCM_ENDIANNESSCONVERSION16(data) ((data) = rba_BswSrv_ByteOrderSwap16((uint16)(data)))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    26  /* Endianness conversion for UINT32/SINT32 data */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    27  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    28  #define DCM_ENDIANNESSCONVERSION32(data) ((data) = rba_BswSrv_ByteOrderSwap32(data))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    29  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    30  /* Abstraction to the MemSet and MemCopy Library function */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    31  #define DCM_MEMCOPY(xDest_pv,xSrc_pcv,numBytes_u32)         (void)rba_BswSrv_MemCopy((xDest_pv),(xSrc_pcv),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    32  #define DCM_MEMSET(xDest_pv,xPattern_u32,numBytes_u32)              (void)rba_BswSrv_MemSet((xDest_pv),(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    33  #define DCM_UNUSED_PARAM(P)   ((void)(P))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    35  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    36  /* Types of storing used for Jump to Boot */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    37  #define DCM_NOTVALID_TYPE     0x00u  /* Boot Loader is not active */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    38  #define DCM_WARMREQUEST_TYPE  0x01u  /* Warm Request Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    39  #define DCM_WARMINIT_TYPE     0x02u  /* Warm Init Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    40  #define DCM_WARMRESPONSE_TYPE 0x03u  /* Warm Response Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    41  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    42  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    43  extern VAR(Dcm_ProgConditionsType,  DCM_VAR) Dcm_ProgConditions_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    44  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    45  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    46  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    47  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    48  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    49  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    50  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    51      DCM_BOOT_IDLE = 0,           /* IDLE state */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    52      DCM_BOOT_PROCESS_RESET,      /* Process the Store Type and Trigger Force Response Pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    53      DCM_BOOT_SENDFORCEDRESPPEND, /* State where ForcedRespPend can be triggered */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    54      DCM_BOOT_WAIT,               /* Wait for confirmation of Response Pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    55      DCM_BOOT_STORE_WARMREQ,      /* Store Request for Warm Request type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    56      DCM_BOOT_STORE_WARMINIT,     /* Store protocol information for Warm Init Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    57      DCM_BOOT_STORE_WARMRESP,     /* Store Response for Warm Response Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    58      DCM_BOOT_ERROR,              /* Process the error happened before the jump */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    59      DCM_BOOT_WAIT_FOR_RESET,     /* Wait till the reset happens*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    60      DCM_BOOT_PERFORM_RESET,       /* State to do reset in case of Warm Request/Response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    61      DCM_BOOT_PREPARE_RESET       /* State to check for conditions to send Forced RespPend before reset for  Warm Request/Response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    62  }Dcm_BootLoaderStates_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    63  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    64  #define DCM_JUMPTOOEMBOOTLOADER            0x00u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    65  #define DCM_JUMPTOSYSSUPPLIERBOOTLOADER 0x01u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    66  #define DCM_JUMPDRIVETODRIVE            0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    67  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    68  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    69  extern VAR(Dcm_BootLoaderStates_ten,  DCM_VAR) Dcm_BootLoaderState_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    70  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    71  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    72  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    73  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    74  extern FUNC(void,DCM_CODE) Dcm_JumpToBootLoader(VAR(uint8,AUTOMATIC) dataBootType_u8,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    75  extern FUNC(void,DCM_CODE) Dcm_ResetBootLoader(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    76  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    77  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    78  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    79  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    80  /* API ID for OBD services in order to report development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    81  #define DCM_OBDMODE01_ID    0x81u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    82  #define DCM_OBDMODE02_ID    0x82u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    83  #define DCM_OBDMODE37A_ID   0x83u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    84  #define DCM_OBDMODE04_ID    0x84u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    85  #define DCM_OBDMODE06_ID    0x86u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    86  #define DCM_OBDMODE08_ID    0x88u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    87  #define DCM_OBDMODE09_ID    0x89u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    88  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    89  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    90  /* API ID for read did in order to report development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    91  #define DCM_RDBI_ID         0x8Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    92  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    93  #define DCM_WARMSTART_ID        0x8Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    94  #define DCM_BOOTLOADER_ID       0x8Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    95  #define DCM_COPYRXDATA_ID       0x8Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    96  #define DCM_KWPTIMING_ID        0x8Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    97  #define DCM_PAGEDBUFFER_ID      0x8Fu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    98  #define DCM_RDPI_ID             0x90u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    99  #define DCM_ROE_ID              0x91u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   100  #define DCM_ROEPROCESS_ID       0x92u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   101  #define DCM_TPRXIND_ID          0x93u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   102  #define DCM_SETSRVTABLE_ID      0x94u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   103  #define DCM_SETSESSION_ID       0x95u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   104  #define DCM_PROCESSINGDONE_ID   0x96u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   105  #define DCM_CC_ID               0x97u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   106  #define DCM_CDTCS_ID            0x98u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   107  #define DCM_DDDI_ID             0x99u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   108  #define DCM_DSC_ID              0x9Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   109  #define DCM_GETP2TIMINGS_ID     0x9Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   110  #define DCM_ER_ID               0x9Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   111  #define DCM_IOCBI_ID            0x9Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   112  #define DCM_WDBI_ID             0x9Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   113  #define DCM_COPYTXDATA_ID       0x9Fu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   114  #define DCM_CHKUSEDCOREMAIN_ID  0xA0u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   115  #define DCM_TRANSFERDATA_ID     0xA1u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   116  #define DCM_TRANSFEREXIT_ID     0xA2u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   117  #define DCM_STARTOFRECEPTION_ID 0xA3u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   118  #define DCM_TPTXCONFIRMATION_ID 0xA4u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   119  #define DCM_TPRXINDICATION_ID   0xA5u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   120  #define DCM_SETSECURITYLEVEL    0xA6u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   121  #define DCM_SETSESSIONLEVEL     0xA7u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   122  #define DCM_RDTC_ID             0xA8u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   123  #define DCM_TXCONFIRMATION_ID   0xAAu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   124  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   125  /* error ids for DET API interfaces, OBD services report the development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   126  #define DCM_E_INTERFACE_TIMEOUT                   0x01u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   127  #define DCM_E_INTERFACE_RETURN_VALUE              0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   128  #define DCM_E_INTERFACE_BUFFER_OVERFLOW           0x03u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   129  #define DCM_E_UNINIT                              0x05u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   130  #define DCM_E_PARAM                               0x06u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   131  #define DCM_E_PARAM_POINTER                       0x07u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   132  #define DCM_E_INIT_FAILED                         0x08u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   133  #define DCM_E_SET_PROG_CONDITIONS_FAIL            0x09u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   134  #define DCM_E_MIXED_MODE                          0x0Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   135  #define DCM_E_WRONG_STATUSVALUE                   0x0Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   136  #define DCM_E_PROTOCOL_NOT_FOUND                  0x0Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   137  #define DCM_E_NVM_UPDATION_NOT_OK                 0x0Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   138  #define DCM_E_FULLCOMM_DISABLED                   0x0Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   139  #define DCM_E_PROTOCOL_NOT_STARTED                0x10u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   140  #define DCM_E_PSUEDO_RECEPTION                    0x11u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   141  #define DCM_E_SERVICE_TABLE_NOT_SET               0x12u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   142  #define DCM_E_SESSION_NOT_CONFIGURED              0x13u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   143  #define DCM_E_SUBNET_NOT_SUPPORTED                0x14u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   144  #define DCM_E_DDDI_NOT_CONFIGURED                 0x15u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   145  #define DCM_E_EXCEEDED_MAX_RECORDS                0x16u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   146  #define DCM_E_NOT_SUPPORTED_IN_CURRENT_SESSION    0x17u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   147  #define DCM_E_INVALID_ADDRLENGTH_FORMAT           0x18u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   148  #define DCM_E_CONTROL_FUNC_NOT_CONFIGURED         0x19u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   149  #define DCM_E_INVALID_CONTROL_PARAM               0x1Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   150  #define DCM_E_NO_WRITE_ACCESS                     0x1Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   151  #define DCM_E_RET_E_INFRASTRUCTURE_ERROR          0x1Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   152  #define DCM_E_INVALID_CONTROL_DATA                0x1Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   153  /* error Ids for DET API interfaces, Rdbi service report the development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   154  #define DCM_E_RET_E_NOT_OK                        0x1Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   155  #define DCM_E_DCMRXPDUID_RANGE_EXCEED             0x20u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   156  #define DCM_E_DCMTXPDUID_RANGE_EXCEED             0x21u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   157  #define DCM_E_NO_READ_ACCESS                      0x22u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   158  #define DCM_E_SERVICE_TABLE_OUTOFBOUNDS           0x23u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   159  #define DCM_E_SECURITYLEVEL_OUTOFBOUNDS           0x24u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   160  #define DCM_E_RET_E_PENDING                       0x25u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   161  #define DCM_E_INVALID_LENGTH                      0x26u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   162  #define DCM_E_FORCE_RCRRP_IN_SILENT_COMM          0x27u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   163  #define DCM_MAXNUMRESPONSEPENDING                 0xFFu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   164  typedef uint8  Dcm_ReturnClearDTCType_tu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   165  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   166  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   167  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   168  extern VAR(Std_ReturnType,DCM_VAR) Dcm_retVal_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   169  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   170  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   171  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   172  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   173  /*Service handler uses below mentioned DET API interface function to report the development error to DET Module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   174  #if (DCM_CFG_DET_SUPPORT_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   175  #define     DCM_DET_ERROR(DCM_ApiId, DCM_ErrorId)                                 \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   176                                          (void)Det_ReportError(DCM_MODULE_ID, DCM_INSTANCE_ID, DCM_ApiId, DCM_ErrorId);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   177  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   178  #define     DCM_DET_ERROR(DCM_ApiId, DCM_ErrorId)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   179  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   180  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   181  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   182  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   183   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   184   *    Function prototypes (APIs of DCM which is used only in DSP)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   185   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   186   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   187  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   188  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   189  extern FUNC(uint32, DCM_CODE) Dcm_DsldGetActiveSecurityMask_u32 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   190  extern FUNC(uint32, DCM_CODE) Dcm_DsldGetActiveSessionMask_u32 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   191  extern FUNC(void,DCM_CODE) Dcm_DsldSetsessionTiming(VAR(uint32, AUTOMATIC) nrP2StarMax_u32,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   192                                                        VAR(uint32, AUTOMATIC) nrP2Max_u32);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   193  extern FUNC(void,DCM_CODE) Dcm_Prv_SetSesCtrlType ( VAR(Dcm_SesCtrlType, AUTOMATIC) SesCtrlType_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   194  extern FUNC(void,DCM_CODE) Dcm_Prv_SetSecurityLevel (VAR(Dcm_SecLevelType, AUTOMATIC) dataSecurityLevel_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   195  extern FUNC(void,DCM_CODE) Dcm_Prv_ProcessResetToDefaultSession(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   196  extern FUNC(void,DCM_CODE) Dcm_Prv_ResetDefaultSessionRequestFlag(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   197  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   198  extern FUNC(void,DCM_CODE) Dcm_Prv_ConfirmationRespPendForBootloader(VAR(Dcm_ConfirmationStatusType,AUTOMATIC) Status_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   199  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   200  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   201  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   202  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   203  /* macros to handle the time monitoring */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   204  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   205  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   206  #define DCM_TimerStop(timer)            ((timer)=0xFFFFFFFFu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   207  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   208  #define DCM_TimerElapsed(timer)         ((timer)==0u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   209  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   210  #define DCM_TimerStopped(timer)         ((timer)==0xFFFFFFFFu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   211  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   212  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   213  /* OS Timer usage for Timer handling */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   214  #if ( DCM_CFG_OSTIMER_USE != FALSE )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   215  #define DCM_TimerStart(timer,time,starttime,timerStatus) do                      /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   216                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   217                                              (timerStatus = Dcm_GetCounterValue(DCM_CFG_COUNTERID, (&(starttime)))); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   218                                              SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   219                                              if( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   220                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   221                                                  ((timer) = (time)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   222                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   223                                              else \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   224                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   225                                                  ((timer) = ((time) / DCM_CFG_TASK_TIME_US)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   226                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   227                                              SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   228                                              }while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   229  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   230  #define DCM_TimerProcess(timer,starttime,timerStatus)   do                    /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   231                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   232                                              if ( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   233                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   234                                                  timerStatus = Dcm_GetCounterValue(DCM_CFG_COUNTERID, (&Dcm_CurrTick_u32)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   235                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   236                                                  if ( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   237                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   238                                                      if ( (DCM_CFG_TICKS2US_COUNTER(Dcm_CurrTick_u32 - (starttime))) >= (timer) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   239                                                      { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   240                                                          ((timer) = 0u); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   241                                                      } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   242                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   243                                                  else \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   244                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   245                                                      /* This else part is added for future use */ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   246                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   247                                                  SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   248                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   249                                              else  \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   250                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   251                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   252                                                  if( ((timer)!=0u) && ((timer)!=0xFFFFFFFFu) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   253                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   254                                                      (timer)--; \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   255                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   256                                                  SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   257                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   258                                              }while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   259  /* This Macro used to set the new timing value of running timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   260  /* Eg: After sending the response new value of P2 and P3 max is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   261  /* Setting new P3 time is done in Dsp_DcmTxconfirm() function, before that */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   262  /* old P3 max is set to the monitoring variable. from this Macro new time is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   263  #define DCM_TimerSetNew(timer,time)   SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   264                                      if((timer)!=0u)           \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   265                                      {                         \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   266                                          (timer) = (time);     \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   267                                      }\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   268                                        SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   269  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   270  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   271  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   272  /* Usage of Raster timer for timer monitoring */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   273  #define DCM_TimerStart(timer,time,unused,timerStatus)  ((void)(timerStatus));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   274                                                         SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   275                                                        ((timer) = (uint32)((time) / DCM_CFG_TASK_TIME_US));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   276                                                        SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   277  #define DCM_TimerProcess(timer,unused,timerStatus)          \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   278                                              do                       /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   279                                              {   \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   280                                                  ((void)(timerStatus));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   281                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   282                                              if( ((timer)!=0u) && ((timer)!=0xFFFFFFFFuL) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   283                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   284                                                  (timer)--; \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   285                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   286                                              SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   287                                              }\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   288                                              while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   289  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   290  /* This Macro used to set the new timing value of running timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   291  /* Eg: After sending the response new value of P2 and P3 max is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   292  /* Setting new P3 time is done in Dsp_DcmTxconfirm() function, before that */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   293  /* old P3 max is set to the monitoring variable. from this Macro new time is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   294  #define DCM_TimerSetNew(timer,time)        SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   295                                              ((timer) = ((time) / DCM_CFG_TASK_TIME_US));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   296                                              SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   297  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   298  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   299  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   300  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   301  #define DCM_NEGRESPONSE_INDICATOR       0x7Fu         /* Indication byte of negative response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   302  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   303  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   304  /* Location of default session ID in session array table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   305  #define DCM_DEFAULT_SESSION_IDX                        0x00u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   306  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   307  /* Parallel Tpr  bytes */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   308  #define DCM_DSLD_PARALLEL_TPR_BYTE1                    0x3eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   309  #define DCM_DSLD_PARALLEL_TPR_BYTE2                    0x80u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   310  #define DCM_DSLD_PARALLEL_DCM_TPR_REQ_LENGTH           0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   311  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   312  /* NRC for wait pend negative response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   313  #define DCM_E_REQUESTCORRECTLYRECEIVED_RESPONSEPENDING 0x78u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   314  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   315  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   316  /* Macro to check running protocol is KLINE type  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   317  /* If KLINE is disabled this macro returns FALSE  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   318  #if( DCM_CFG_KLINE_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   319      #define DCM_IS_KLINEPROT_ACTIVE() \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   320      (((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_CARB_ON_KLINE)\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   321  /* FC_VariationPoint_START */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   322      ||((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_OBD_ON_KLINE)\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   323  /* FC_VariationPoint_END */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   324      ||((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_KWP_ON_KLINE))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   325  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   326  #define DCM_IS_KLINEPROT_ACTIVE()    FALSE
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   327  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   328  /* Macro to check whether the ComM is in full communication mode for Drive and boot software */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   329  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   330  #define DCM_CHKFULLCOMM_MODE(idx)  (Dcm_active_commode_e[idx].ComMState == DCM_DSLD_FULL_COM_MODE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   331  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   332  /* Macro to check whether the ComM is not in No communication mode for Drive and boot software */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   333  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   334  #define DCM_CHKNOCOMM_MODE(idx) (Dcm_active_commode_e[idx].ComMState != DCM_DSLD_NO_COM_MODE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   335  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   336  #define DCM_PROTOCOL_ENDIANNESS (Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].Endianness_ConvEnabled_b)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   337  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   338  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   339   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   340   *    Internal DCM Type definitions
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   341   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   342   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   343  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   344  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   345      DCM_DSLD_POS_RESPONSE,                          /* POS response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   346      DCM_DSLD_NEG_RESPONSE                           /* NEG response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   347  }Dcm_DsldResponseType_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   348  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   349  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   350  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   351  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   352      DCM_QUEUE_IDLE,                          /* Queue is idle */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   353      DCM_QUEUE_RUNNING,                       /* QUeuing is taking place */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   354      DCM_QUEUE_COMPLETED                      /* QUeuing is completed, i.e. the second request is received */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   355  }Dcm_DsldQueHandling_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   356  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   357  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   358  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   359  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   360      Dcm_MsgType  adrBufferPtr_pu8;                      /* pointer to hold the address of the processing request buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   361  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   362      PduIdType dataActiveRxPduId_u8;                     /* Rx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   363      uint8 nrActiveConn_u8;                            /* Active Connection number  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   364      uint8 idxActiveSession_u8;                     /* Active sessions index in session lookup table  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   365      boolean flgMonitorP3timer_b;                       /* Bit to indicate P3 timer monitoring required  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   366      uint8 idxCurrentProtocol_u8;                       /* Active protocol index */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   367      PduIdType dataActiveTxPduId_u8;                     /* Tx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   368      uint8 datActiveSrvtable_u8;                        /* Active service table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   369      boolean flgCommActive_b;                           /* Is communication or protocol active? */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   370      uint8 cntrWaitpendCounter_u8;                       /* Wait pend counter */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   371      Dcm_DsldResponseType_ten stResponseType_en;           /* Type of response (POS/NEG) */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   372      uint8 idxActiveSecurity_u8;                    /* Active security index in security lookup table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   373      Std_ReturnType dataResult_u8;                       /* Confirmation result */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   374      uint8 idxService_u8;                            /* Active services index in active service table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   375      boolean dataResponseByDsd_b;                        /* Response given by DSD                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   376      uint8 dataSid_u8;                                    /* Requested Sid  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   377  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   378      uint8  dataOldSrvtable_u8;                          /* Service table which is running when event response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   379  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   380  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   381      boolean flgPagedBufferTxOn_b;                      /* Bit to indicate Paged buffer Tx in progress         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   382  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   383  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   384      PduIdType dataNewRxPduId_u8;                        /* High protocols Rx PDU id */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   385  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   386      PduIdType dataPassRxPduId_u8;                       /* Active Roe's Rx PDU id */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   387  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   388  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   389      PduLengthType dataRequestLength_u16;                /* Length of request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   390      PduIdType dataOldtxPduId_u8;                         /* Copy of the old active Tx PDU in DCM */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   391  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   392      Dcm_MsgLenType dataCurrentPageRespLength_u32;          /* Amount of data filled by the service       */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   393  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   394  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   395      PduLengthType dataNewdataRequestLength_u16;             /* Request length of high priority protocols request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   396  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   397  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   398  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   399      PduLengthType dataPassdataRequestLength_u16;            /* Request length of bypassing ROE request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   400  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   401      uint32 dataTimerTimeout_u32;                      /* If ROE requested service unable to send */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   402  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   403      Dcm_MsgType adrActiveTxBuffer_tpu8;                /* Active Tx buffer pointer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   404      uint32 dataTimeoutMonitor_u32;                      /* It holds the timeout time */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   405  #if(DCM_CFG_ROETYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   406      uint32 datRoeType2Timeout_u32;                   /* Roe timer for type2 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   407  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   408  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   409      uint32 dataPagedBufferTimeout_u32;                 /* Paged buffer timer                                  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   410  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   411      uint8  PreviousSessionIndex;                     /*sessions index for old Session   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   412  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   413  }Dcm_DsldInternalStructureType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   414  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   415  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   416  /* structure for queue handling */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   417  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   418  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   419      Dcm_DsldQueHandling_ten Dcm_QueHandling_en;         /* State handler for queue */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   420      Dcm_MsgType  adrBufferPtr_pu8;                      /* pointer to hold the address of the queuing buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   421      PduLengthType dataQueueReqLength_u16;                /* Length of request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   422      PduIdType dataQueueRxPduId_u8;                     /* Rx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   423      uint8 idxBufferIndex_u8;                          /* index to point to the buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   424  }Dcm_QueueStructure_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   425  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   426  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   427  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   428  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   429      PduInfoType Dcm_DslRxPduBuffer_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   430  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   431      Dcm_MsgType  Dcm_DslBufferPtr_pu8;        /* pointer to hold the address of the normal buffer(non-queue) */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   432  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   433      uint8      Dcm_DslServiceId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   434      boolean     Dcm_DslFuncTesterPresent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   435      boolean     Dcm_DslCopyRxData_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   436  }Dcm_DslRxPduArray_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   437  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   438  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   439  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   440      uint32 dataTimeoutP2StrMax_u32;                     /* P2* max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   441      uint32 dataTimeoutP2max_u32;                        /* P2 max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   442  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   443      uint32 dataTimeoutP3max_u32;                        /* P3 max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   444  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   445  }Dcm_DsldTimingsType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   446  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   447  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   448  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   449      Dcm_MsgType TxBuffer_tpu8;                        /* Pointer to Tx buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   450      Dcm_MsgLenType TxResponseLength_u32 ;             /* Length of response including Sid */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   451      boolean  isForceResponsePendRequested_b;          /* Application triggered wait pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   452  }Dcm_DslTxType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   453  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   454  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   455  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   456   * @ingroup DCMDSP_UDS_EXTENDED
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   457   * ROE structure for logging the info related to the postponement of the ROE event .\n
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   458   * Member elements/n
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   459    * uint8  EventId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   460     * boolean Is_EventTrigerred;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   461  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   462  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   463  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   464      uint8   EventId_u8;/*Event Id reported from the apllication*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   465      boolean Is_Queued;/*Will indocate whether the event is waiting to trigger the service to respond to*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   466      boolean Is_Processed;/*Will indocate whether the event is waiting to trigger the service to respond to*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   467      PduIdType   RxPduId_u8;/*protocol id tobe used for the reported event*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   468  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   469  } Dcm_DcmDspEventWaitlist_t;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   470  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   471  #define DCM_START_SEC_CONST_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   472  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   473  extern CONST(Dcm_Dsld_RoeRxToTestSrcMappingType, DCM_CONST) Dcm_Dsld_RoeRxToTestSrcMappingTable[DCM_CFG_NUM_RX_PDUID];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   474  #define DCM_STOP_SEC_CONST_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   475  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   476  #if( (DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_ROEEVENT_ENABLED != DCM_CFG_OFF) )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   477  #define DCM_START_SEC_VAR_INIT_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   478  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   479  extern VAR(Dcm_DcmDspEventWaitlist_t,AUTOMATIC) Dcm_DcmDspEventQueue [DCM_MAX_SETUPROEEVENTS];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   480  #define DCM_STOP_SEC_VAR_INIT_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   481  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   482  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   483  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   484  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   485  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   486  extern VAR (uint8, DCM_VAR) DcmRoeQueueIndex_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   487  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   488  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   489  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   490  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   491  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   492  extern FUNC(void,DCM_CODE) Dcm_CheckActiveDiagnosticStatus(VAR(uint8,AUTOMATIC) dataNetworkId);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   493  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   494  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   495  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   496  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   497  ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   498  *    Variables prototypes
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   499  ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   500  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   501  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   502  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   503  extern VAR(uint8,DCM_VAR) Dcm_DslWaitPendBuffer_au8[8];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   504  extern VAR(uint8,DCM_VAR) Dcm_CurProtocol_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   505  extern VAR(Dcm_SesCtrlType,DCM_VAR) Dcm_CC_ActiveSession_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   506  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   507  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   508  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   509  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   510  extern P2CONST(Dcm_Dsld_protocol_tableType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldProtocol_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   511  extern P2CONST(uint8, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldRxTable_pcu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   512  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   513  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   514  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   515  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   516  extern VAR(Dcm_DslRxPduArray_tst,DCM_VAR) Dcm_DslRxPduArray_ast[DCM_CFG_NUM_RX_PDUID];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   517  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   518  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   519  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   520  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   521  extern VAR(boolean,DCM_VAR) Dcm_isFuncTPOnOtherConnection_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   522  extern VAR(boolean,DCM_VAR) Dcm_isInitialised_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   523  extern VAR(boolean,DCM_VAR) Dcm_acceptRequests_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   524  extern VAR(boolean,DCM_VAR) Dcm_isCancelTransmitInvoked_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   525  extern VAR(boolean,DCM_VAR) Dcm_isStopProtocolInvoked_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   526  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   527  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   528  #if (DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   529  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   530  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   531  extern VAR(boolean,DCM_VAR) Dcm_ReadyForBoot_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   532  extern VAR(boolean,DCM_VAR) Dcm_SesChgOnWarmResp_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   533  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   534  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   535  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   536  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   537  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   538  extern P2CONST(Dcm_Dsld_connType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldConnTable_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   539  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   540  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   541  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   542  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   543  extern VAR(Dcm_DsldInternalStructureType_tst,DCM_VAR) Dcm_DsldGlobal_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   544  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   545  extern VAR(Dcm_QueueStructure_tst,DCM_VAR) Dcm_QueueStructure_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   546  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   547  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   548  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   549  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   550  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   551  extern VAR(Dcm_DsldTimingsType_tst,DCM_VAR) Dcm_DsldTimer_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   552  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   553  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   554  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   555  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   556  extern VAR(boolean,DCM_VAR) Dcm_isGeneralRejectSent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   557  extern VAR(boolean,DCM_VAR) Dcm_isSessionStored_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   558  #if((DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_SPLITRESPSUPPORTEDFORKWP != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   559  extern VAR(boolean,DCM_VAR) Dcm_isFirstReponseSent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   560  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   561  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   562  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   563  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   564  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   565  extern VAR(PduInfoType,DCM_VAR) Dcm_DsldPduInfo_st ;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   566  extern VAR(Dcm_DslTxType_tst,DCM_VAR) Dcm_DslTransmit_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   567  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   568  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   569  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   570  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   571  extern P2CONST(Dcm_Dsld_ServiceType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldSrvTable_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   572  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   573  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   574  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   575  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   576  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_DsldMsgContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   577  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   578  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   579  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   580  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   581  extern P2CONST(uint8, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldSessionTable_pcu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   582  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   583  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   584  #if(DCM_CFG_ROETYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   585  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   586  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   587  extern VAR(Dcm_DsdStatesType_ten,DCM_VAR) Dcm_DsdRoe2State_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   588  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_Roe2MesContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   589  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   590  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   591  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   592  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   593  #if(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   594  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   595  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   596  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_Rdpi2MesContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   597  extern VAR(Dcm_DsldResponseType_ten,DCM_VAR) Dcm_Rdpi2ResponseType_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   598  extern VAR(PduInfoType,DCM_VAR) Dcm_DsldRdpi2pduinfo_ast[DCM_CFG_NUM_RDPITYPE2_TXPDU];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   599  extern P2CONST(Dcm_ProtocolExtendedInfo_type,DCM_VAR,DCM_INTERN_CONST) Dcm_DsldRdpi2_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   600  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   601  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   602  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   603  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   604  #if (DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   605  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   606  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   607  extern VAR(Dcm_Dsld_KwpTimerServerType,DCM_VAR) Dcm_DsldKwpReqTiming_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   608  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED/*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   609  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   610  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   611  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   612  #if (DCM_CFG_OSTIMER_USE != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   613  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   614  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   615  extern VAR( uint32, DCM_VAR )     Dcm_P2OrS3StartTick_u32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   616  extern VAR( uint32, DCM_VAR )     Dcm_CurrTick_u32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   617  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   618  extern VAR( uint32, DCM_VAR )     Dcm_PagedBufferStartTick_u32;     /* Starting tick value for paged buffer timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   619  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   620  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   621  extern VAR( uint32, DCM_VAR )     Dcm_TimerStartTick_u32;             /* Starting tick value for Roe timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   622  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   623  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   624  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   625  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   626  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   627  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   628  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   629  #if(DCM_CFG_RDPITYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   630  extern VAR( uint32, DCM_VAR )     Dcm_Rdpi2StartTick_u32;            /* Starting tick value for Rdpi timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   631  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   632  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   633  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   634  #if ((DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   635  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   636  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   637  extern VAR( uint32, DCM_VAR ) Dcm_SysPrevTick_u32;   /* Previous tick value */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   638  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   639  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   640  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   641  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   642  extern VAR( uint32, DCM_VAR ) Dcm_SysCurrTick_u32;   /* Current tick value */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   643  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   644  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   645  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   646  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   647  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   648  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   649  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   650  #if(DCM_CFG_RXPDU_SHARING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   651  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   652  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   653  extern VAR (boolean,DCM_VAR) Dcm_isObdRequestReceived_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   654  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   655  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   656  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   657  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   658  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   659  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   660  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   661  extern VAR(StatusType,DCM_VAR) Dcm_P2OrS3TimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   662  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   663  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   664  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   665  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   666  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   667  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   668  extern VAR(StatusType,DCM_VAR) Dcm_PagedBufferTimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   669  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   670  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   671  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   672  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   673  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   674  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   675  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   676  extern VAR(StatusType,DCM_VAR) Dcm_CounterValueTimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   677  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   678  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   679  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   680  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   681  extern VAR(StatusType,DCM_VAR) Dcm_RoeType2TimerStatus_uchr ; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   682  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   683  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   684  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   685  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   686  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   687   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   688   *    Function prototypes
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   689   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   690  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   691  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   692  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   693  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   694  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   695  /************************TRIGGER TRANSMITT*****************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   696  extern FUNC(void,DCM_CODE) Dcm_Prv_TriggerTransmit(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   697  /**********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   698  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   699  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   700  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   701  /************************DSL STATE MACHINE*****************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   702  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   703  #define DCM_NUMBER_OF_DSL_STATES                  (0x08u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   704  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   705  #define DCM_NUMBER_OF_DSL_STATES                  (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   706  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) || (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   707  #define DCM_NUMBER_OF_DSL_STATES                  (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   708  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   709  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   710  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   711  #define DSL_STATE_IDLE                            (0x00u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   712  #define DSL_STATE_WAITING_FOR_RXINDICATION        (0x01u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   713  #define DSL_STATE_REQUEST_RECEIVED                (0x02u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   714  #define DSL_STATE_RESPONSE_TRANSMISSION           (0x03u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   715  #define DSL_STATE_WAITING_FOR_TXCONFIRMATION      (0x04u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   716  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   717  #define DSL_STATE_PROTOCOL_PREEMPTION             (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   718  #define DSL_STATE_PAGEDBUFFER_TRANSMISSION        (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   719  #define DSL_STATE_ROETYPE1_RECEIVED               (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   720  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   721  #define DSL_STATE_PAGEDBUFFER_TRANSMISSION        (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   722  #define DSL_STATE_ROETYPE1_RECEIVED               (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   723  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   724  #define DSL_STATE_PROTOCOL_PREEMPTION             (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   725  #define DSL_STATE_ROETYPE1_RECEIVED               (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   726  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   727  #define DSL_STATE_ROETYPE1_RECEIVED               (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   728  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   729  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   730  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   731  #define DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING      (0x00u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   732  #define DSL_SUBSTATE_S3_OR_P3_TIMEOUT             (0x01u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   733  #define DSL_SUBSTATE_STOP_PROTOCOL                (0x02u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   734  #define DSL_SUBSTATE_STOP_PROTOCOL_RECEIVING      (0x03u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   735  #define DSL_SUBSTATE_STOP_ROE                     (0x04u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   736  #define DSL_SUBSTATE_START_PROTOCOL               (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   737  #define DSL_SUBSTATE_P2MAX_TIMEMONITORING         (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   738  #define DSL_SUBSTATE_SEND_PENDING_RESPONSE        (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   739  #define DSL_SUBSTATE_SEND_GENERAL_REJECT          (0x08u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   740  #define DSL_SUBSTATE_SEND_FINAL_RESPONSE          (0x09u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   741  #define DSL_SUBSTATE_DATA_READY                   (0x0Au)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   742  #define DSL_SUBSTATE_WAIT_FOR_DATA                (0x0Bu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   743  #define DSL_SUBSTATE_WAIT_PAGE_TXCONFIRM          (0x0Cu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   744  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   745  extern FUNC(void,DCM_CODE) Dcm_Prv_DslStateMachine(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   746  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   747  /**********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   748  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   749  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   750  #if ( ( DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF ) && ( DCM_CFG_DSP_COMMUNICATIONCONTROL_ENABLED != DCM_CFG_OFF ) )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   751  extern FUNC(void,DCM_CODE) Dcm_Prv_CC_Mainfunction (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   752  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   753  extern FUNC(void,DCM_CODE) Dcm_Prv_CC_TxConfirmation (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   754  extern FUNC(void,DCM_CODE) Dcm_Prv_SendResponse(P2CONST(PduInfoType,AUTOMATIC,DCM_INTERN_DATA) adrPduStrucutre_pcst);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   755  extern FUNC(void,DCM_CODE) Dcm_DslDsdRestoreSecaTimer(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   756  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   757  extern FUNC(P2VAR(Dcm_MsgItemType,AUTOMATIC,DCM_INTERN_DATA),DCM_CODE) Dcm_Prv_ProvideFreeBuffer(VAR(uint8,AUTOMATIC) idxProtocolIndex_u8,VAR(boolean,AUTOMATIC) isQueuedReq_b);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   758  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   759  extern FUNC(P2VAR(Dcm_MsgItemType,AUTOMATIC,DCM_INTERN_DATA),DCM_CODE) Dcm_GetActiveBuffer(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   760  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   761  extern FUNC(boolean,DCM_CODE) Dcm_Prv_CheckTotalResponseLength(VAR(Dcm_MsgLenType,AUTOMATIC) TotalResLen_u32 );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   762  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   763  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   764  #if (DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   765  extern FUNC(uint8,DCM_CODE) Dcm_GetActiveConnectionIdx_u8 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   766  extern FUNC(void,DCM_CODE) Dcm_DslDsdWarmStart(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   767  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   768  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   769  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   770  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   771  extern FUNC(void, DCM_CODE) Dcm_Prv_PagedBufferTimeout(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   772  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   773  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   774  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   775  extern FUNC(void,DCM_CODE) Dcm_DsldRoeTimeOut(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   776  extern void Dcm_Prv_ROEResetOnConfirmation(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   777  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   778  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   779  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) || (RBA_DCMPMA_CFG_PLANTMODEACTIVATION_ENABLED !=  DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   780  FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_CancelTransmit(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   781  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   782  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   783  #if (DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   784  extern FUNC(void,DCM_CODE) Dcm_DsldResetRDPI(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   785  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   786  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   787  extern FUNC(void, DCM_CODE) Dcm_Prv_ResetCopyRxDataStatus ( VAR(PduIdType,AUTOMATIC) RxPduId );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   788  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   789  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_ROE_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   790  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   791  extern FUNC(BufReq_ReturnType, DCM_CODE) Dcm_DsldPersistentRoeHandling_en(
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   792                                           P2CONST(Dcm_Dsld_protocol_tableType,AUTOMATIC,DCM_INTERN_CONST) adrArrivedProt_pcst,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   793                                           VAR(PduLengthType,AUTOMATIC) nrTpSduLength_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   794                                           VAR(PduIdType,AUTOMATIC) dataRxpduId_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   795                                                       );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   796  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   797  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   798  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   799  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   800  /****************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   801  *        APPLICATION API DECLARATIONS
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   802  ****************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   803  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   804  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   805  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   806  #if (((DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF ))   ||     \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   807       (DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF) && (DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   808  extern FUNC(uint32,DCM_CODE) Dcm_GetSignal_u32(VAR(uint8,AUTOMATIC) xDataType_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   809                                             VAR(uint16,AUTOMATIC) posnStart_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   810                                             P2CONST(uint8, AUTOMATIC, DCM_INTERN_DATA) adrReqBuffer_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   811                                             VAR(uint8,AUTOMATIC) dataEndianness_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   812  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   813  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   814  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   815  #if ( \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   816  /* FC_VariationPoint_START */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   817  ((DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_OBDMODE1_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_DSP_OBDMODE1_SR_ENABLED!=DCM_CFG_OFF)) ||            \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   818  /* FC_VariationPoint_END */ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   819       ((DCM_CFG_DSP_READDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_READ_SR_ENABLED != DCM_CFG_OFF)) ||  \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   820       ((DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF)) || \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   821       (DCM_CFG_RBA_DEM_SR_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   822  extern FUNC(void,DCM_CODE) Dcm_StoreSignal(VAR(uint8,AUTOMATIC) xDataType_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   823                                             VAR(uint16,AUTOMATIC) posnStart_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   824                                             P2VAR(uint8, AUTOMATIC, DCM_INTERN_DATA) adrRespBuffer_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   825                                             VAR(uint32,AUTOMATIC) dataSignalValue_u32,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   826                                             VAR(uint8,AUTOMATIC) dataEndianness_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   827  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   828  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   829  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   830  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   831  #if(DCM_CFG_RDPI_ENABLED!=DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   832  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   833  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   834      DCM_RDPI_NO_TRANMISSION,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   835      DCM_RDPI_SLOW_RATE,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   836      DCM_RDPI_MEDIUM_RATE,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   837      DCM_RDPI_FAST_RATE
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   838  }Dcm_RdpiTxModeType_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   839  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   840  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   841  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   842  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   843    uint32 cntrTime_u32;         /* Increment in each time raster if the overflowValue > 0 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   844    uint16 dataId_u16;             /* periodicId */ /*---dataRdpiId_u16 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   845    uint16 idxPeriodicId_u16;          /* Index of the periodic ID in Dcm_DIDConfig Table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   846    Dcm_RdpiTxModeType_ten dataOverflowValue_en;  /* Off: -1, SlowRate, MediumRate, FastRate */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   847    boolean dataRange_b;          /*Flag to indicate if the did is a range did or not*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   848  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   849  } Dcm_PeriodicInfoType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   850  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   851  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   852  #if(DCM_CFG_MAX_DID_SCHEDULER>0)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   853  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   854  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   855  extern VAR(Dcm_PeriodicInfoType_tst,DCM_CODE) Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   856  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   857  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   858  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   859  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   860  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   861  extern VAR(uint8,       DCM_VAR)      Dcm_NumOfActivePeriodicId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   862  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   863  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   864  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   865  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   866  extern FUNC(void,DCM_CODE) Dcm_DsldPeriodicScheduler(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   867  extern FUNC(void,DCM_CODE) Dcm_RdpiMainFunction(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   868  extern FUNC(void,DCM_CODE) Dcm_DsldPeriodicSchedulerIni(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   869  extern FUNC(void,DCM_CODE) Dcm_GetRdpiType2Index(P2VAR(uint8,AUTOMATIC, DCM_INTERN_DATA) idxRdpi2TxPduId_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   870  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   871  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   872  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   873  #if (DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   874  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   875  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   876  extern FUNC(void,DCM_CODE) Dcm_DsldProcessRoeQueue(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   877  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   878  extern FUNC(void,DCM_CODE) Dcm_RestoreROEDtcEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   879  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   880  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   881  extern FUNC(void,DCM_CODE) Dcm_RestoreROEDidEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   882  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   883  extern FUNC(void,DCM_CODE) Dcm_ResetROEEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   884  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   885  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   886  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   887  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   888  #if((DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_SPLITRESPSUPPORTEDFORKWP != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   889  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   890  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   891  extern FUNC(void,DCM_CODE) Dcm_KWPConfirmationForSplitResp(VAR(Dcm_ConfirmationStatusType,AUTOMATIC) status);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   892  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   893  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   894  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   895  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   896  LOCAL_INLINE FUNC(void,DCM_CODE) Dcm_DspConfirmation
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   897                                         (
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   898                               VAR(Dcm_IdContextType,AUTOMATIC) dataIdContext_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   899                               VAR(PduIdType,AUTOMATIC) dataRxPduId_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   900                               VAR(uint16,AUTOMATIC)dataSourceAddress_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   901                               VAR(Dcm_ConfirmationStatusType,AUTOMATIC) status_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   902                                         )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   903  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   904  {    if(Dcm_DsldSrvTable_pcst[Dcm_DsldGlobal_st.idxService_u8].Dcm_ConfirmationService !=((Dcm_ConfirmationApiType)NULL_PTR))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   905      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   906          (Dcm_DsldSrvTable_pcst[Dcm_DsldGlobal_st.idxService_u8].Dcm_ConfirmationService)(dataIdContext_u8,dataRxPduId_u8,dataSourceAddress_u16,status_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   907      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   908  }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   909  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   910  LOCAL_INLINE FUNC(boolean,DCM_CODE) DCM_IS_KWPPROT_ACTIVE(void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   911  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   912      boolean retval_b = FALSE;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   913  #if( DCM_CFG_KWP_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   914      retval_b = (((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) & 0xF0u) == 0x80u);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   915  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   916      return retval_b;
	mov	d15,#0
.L189:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   916      return retval_b;      (inlined)
	j	.L27

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   917  }      (inlined)
.L27:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   626                      (DCM_IS_KWPPROT_ACTIVE() == FALSE) && (DCM_IS_KLINEPROT_ACTIVE() == FALSE))
	jne	d15,#0,.L28
.L343:
	mov	d15,#1
	jeq	d15,#0,.L29
.L344:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   627              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   628                  processStatus_b = TRUE;
	mov	d8,#1
.L345:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   629                  DcmAppl_DcmIndicationFuncTpr();
	call	DcmAppl_DcmIndicationFuncTpr
.L187:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   630                  Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b = FALSE;
	mov	d15,#0
.L346:
	st.b	[a12],d15
.L347:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   631  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   632                  Dcm_Prv_UpdateDSLstate(DcmRxPduId);
	mov	d4,d9
.L190:
	call	Dcm_Prv_UpdateDSLstate
.L29:
.L28:
.L26:
.L24:
.L19:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   633              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   634          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   635      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   636      return processStatus_b;
	mov	d2,d8
.L191:
	j	.L30

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   637  }
.L30:
	ret
.L152:
	
__Dcm_Prv_isFunctionalTesterPresentProcessed_function_end:
	.size	Dcm_Prv_isFunctionalTesterPresentProcessed,__Dcm_Prv_isFunctionalTesterPresentProcessed_function_end-Dcm_Prv_isFunctionalTesterPresentProcessed
.L109:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ProcessRxIndication',code,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_Prv_ProcessRxIndication'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   638  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   639  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   640  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   641  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   642  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   643  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   644   Function name    : Dcm_Prv_isRequestQueued
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   645   Syntax           : Dcm_Prv_isRequestQueued(DcmRxPduId,Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   646   Description      : This function is used to check whether request is queued and update the Dcm Queue state
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   647   Parameter        : PduIdType,Std_ReturnType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   648   Return value     : boolean
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   649  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   650  static FUNC(boolean,DCM_CODE) Dcm_Prv_isRequestQueued(VAR(PduIdType, AUTOMATIC) DcmRxPduId,
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   651          VAR(Std_ReturnType, AUTOMATIC) Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   652  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   653      VAR(boolean,AUTOMATIC) isRequestQueued = TRUE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   654      VAR(uint8,AUTOMATIC) idxProtocol_u8    = 0;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   655  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   656      if((Dcm_QueueStructure_st.Dcm_QueHandling_en == DCM_QUEUE_IDLE) ||\ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   657                      (Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslFuncTesterPresent_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   658      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   659          isRequestQueued = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   660      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   661      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   662      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   663          /* if the Rx indication is for the queued request */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   664          SchM_Enter_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   665          if((Dcm_QueueStructure_st.Dcm_QueHandling_en == DCM_QUEUE_RUNNING) && \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   666                  (Dcm_Prv_GetDslState() != DSL_STATE_IDLE))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   667          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   668              if(E_OK == Result)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   669              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   670                  /* Queing of the second request is completed */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   671                  Dcm_QueueStructure_st.Dcm_QueHandling_en = DCM_QUEUE_COMPLETED;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   672              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   673              else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   674              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   675                  idxProtocol_u8 = Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   676  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   677                  (void)Dcm_Prv_ProvideFreeBuffer(idxProtocol_u8,TRUE);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   678  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   679                  Dcm_QueueStructure_st.Dcm_QueHandling_en = DCM_QUEUE_IDLE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   680              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   681          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   682          SchM_Exit_Dcm_Global_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   683      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   684  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   685      return isRequestQueued;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   686  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   687  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   688  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   689  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   690  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   691  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   692  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   693  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   694  #if(DCM_CFG_RXPDU_SHARING_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   695  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   696   Function name    : Dcm_Prv_ProcessSharedPduId
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   697   Syntax           : Dcm_Prv_ProcessSharedPduId(&RxPduIdPtr)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   698   Description      : This Function is used to update the shared Pduid
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   699   Parameter        : PduIdType*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   700   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   701  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   702  static FUNC(void,DCM_CODE) Dcm_Prv_ProcessSharedPduId(P2VAR(PduIdType, AUTOMATIC, DCM_APPL_DATA) RxPduIdPtr)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   703  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   704      if(((*RxPduIdPtr) < (DCM_CFG_NUM_RX_PDUID-1u)) && ((*RxPduIdPtr) == DCM_CFG_SHARED_RX_PDUID) && \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   705              (Dcm_isObdRequestReceived_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   706      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   707          *RxPduIdPtr = (DCM_CFG_NUM_RX_PDUID-1u);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   708          Dcm_isObdRequestReceived_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   709      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   710  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   711  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   712  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   713  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   714  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   715  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   716  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   717  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   718  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   719   Function name    : Dcm_Prv_ProcessRxIndication
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   720   Syntax           : Dcm_Prv_ProcessRxIndication(DcmRxPduId)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   721   Description      : This Function is used to Process the request funrther based on the Indication received from the
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   722                      Lower layer
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   723   Parameter        : PduIdType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   724   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   725  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   726  static FUNC(void,DCM_CODE) Dcm_Prv_ProcessRxIndication(VAR(PduIdType, AUTOMATIC) DcmRxPduId)
; Function Dcm_Prv_ProcessRxIndication
.L58:
Dcm_Prv_ProcessRxIndication:	.type	func
	mov	d8,d4
.L193:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   727  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   728      VAR(uint8,AUTOMATIC)idxProtocol_u8  = Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8;
	movh.a	a12,#@his(Dcm_DsldRxTable_pcu8)
	lea	a12,[a12]@los(Dcm_DsldRxTable_pcu8)
.L352:
	movh.a	a13,#@his(Dcm_DsldConnTable_pcst)
	lea	a13,[a13]@los(Dcm_DsldConnTable_pcst)
.L353:
	ld.a	a15,[a12]
.L354:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L355:
	mul	d15,d0,#14
.L356:
	ld.a	a15,[a13]
.L357:
	addsc.a	a15,a15,d15,#0
.L358:
	ld.bu	d5,[a15]
.L194:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   729      P2VAR(uint8,AUTOMATIC,DCM_INTERN_DATA) rxBuffer_pu8 = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   730  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   731  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   732      rxBuffer_pu8 = (Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslBufferPtr_pu8);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   733  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   734      rxBuffer_pu8 = Dcm_DsldProtocol_pcst[idxProtocol_u8].rx_mainBuffer_pa;
	movh.a	a14,#@his(Dcm_DsldProtocol_pcst)
	lea	a14,[a14]@los(Dcm_DsldProtocol_pcst)
	ld.a	a15,[a14]
.L359:
	sha	d15,d5,#5
.L360:
	addsc.a	a15,a15,d15,#0
.L361:
	ld.a	a4,[a15]4
.L195:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   735  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   736  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   737      Dcm_Prv_CheckDiagnosticStatus(DcmRxPduId,idxProtocol_u8,rxBuffer_pu8);
	mov	d4,d8
	call	Dcm_Prv_CheckDiagnosticStatus
.L192:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   738  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   739      if(FALSE == Dcm_isRequestTobeProcessedByDSP(DcmRxPduId))
	mul	d15,d8,#12
	movh.a	a15,#@his(Dcm_DslRxPduArray_ast)
	lea	a15,[a15]@los(Dcm_DslRxPduArray_ast)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]10
.L362:
	jne	d15,#0,.L31
.L363:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   740      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   741          /*This check is for Functional Tester Present which is parallel to the ongoing request*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   742          if(FALSE == Dcm_Prv_isFunctionalTesterPresentProcessed(DcmRxPduId))
	mov	d4,d8
.L196:
	call	Dcm_Prv_isFunctionalTesterPresentProcessed
.L197:
	jne	d2,#0,.L32
.L170:
	ld.a	a15,[a14]
.L364:
	ld.a	a2,[a12]
.L365:
	addsc.a	a2,a2,d8,#0
	ld.bu	d0,[a2]
.L366:
	mul	d15,d0,#14
.L367:
	ld.a	a2,[a13]
.L368:
	addsc.a	a2,a2,d15,#0
.L369:
	ld.bu	d15,[a2]
	sha	d15,#5
.L370:
	addsc.a	a15,a15,d15,#0
.L371:
	ld.bu	d15,[a15]28
.L372:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    60      return (Dcm_DsldProtocol_pcst[Dcm_DsldConnTable_pcst[Dcm_DsldRxTable_pcu8[DcmRxPduId]].protocol_num_u8].nrc21_b);      (inlined)
	j	.L33

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	    61  }      (inlined)
.L33:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   743          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   744              if(FALSE != Dcm_Prv_CheckLowPriorityRequestReceived(DcmRxPduId))
	jeq	d15,#0,.L34
.L373:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   745              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   746                  Dcm_Prv_SendNrc21(DcmRxPduId);
	mov	d4,d8
.L198:
	call	Dcm_Prv_SendNrc21
.L34:
.L32:
	j	.L35
.L31:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   747              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   748          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   749      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   750      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   751      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   752  #if(DCM_CALLAPPLICATIONONREQRX_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   753          (void)DcmAppl_TpRxIndication(DcmRxPduId,E_OK);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   754  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   755          Dcm_DslRxPduArray_ast[DcmRxPduId].Dcm_DslServiceId_u8 = DCM_SERVICEID_DEFAULT_VALUE;
	mov	d15,#255
.L374:
	st.b	[a15]8,d15
.L375:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   756  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   757          /*This check is for Functional Tester Present which is not in parallel to the ongoing request*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   758          if(FALSE == Dcm_Prv_isFunctionalTesterPresentProcessed(DcmRxPduId))
	mov	d4,d8
.L199:
	call	Dcm_Prv_isFunctionalTesterPresentProcessed
.L200:
	jne	d2,#0,.L36
.L376:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   759          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   760              Dcm_Prv_ProcessRequest(DcmRxPduId);
	mov	d4,d8
.L201:
	call	Dcm_Prv_ProcessRequest
.L36:
.L35:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   761          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   762      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   763  }
	ret
.L164:
	
__Dcm_Prv_ProcessRxIndication_function_end:
	.size	Dcm_Prv_ProcessRxIndication,__Dcm_Prv_ProcessRxIndication_function_end-Dcm_Prv_ProcessRxIndication
.L114:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_RxIndication.Dcm_TpRxIndication',code,cluster('Dcm_TpRxIndication')
	.sect	'.text.Dcm_Dsl_RxIndication.Dcm_TpRxIndication'
	.align	2
	
	.global	Dcm_TpRxIndication

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   764  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   765  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   766  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   767   /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   768  ***********************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   769  *  Dcm_TpRxIndication :This function is called by the lower layer (in general the PDU Router):
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   770  *  - with Result = E_OK after the complete DCM I-PDU has successfully been received, i.e. at the very
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   771  *    end of the segmented TP receive cycle or after receiving an unsegmented N-PDU.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   772  *  - with Result = E_NOT_OK it is indicated that an error (e.g. timeout) has occurred during
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   773  *    the reception of the DCM I-PDU. This passes the receive buffer back to DCM and allows error handling.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   774  *    It is undefined which part of the buffer contains valid data in this case, so the DCM shall not evaluate
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   775  *    that buffer. By calling this service only the DCM is allowed to access the buffer.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   776  *
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   777  *  \param:   id             ID of DCM I-PDU that has been received. Identifies the data that has been received.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   778  *            result         Result of the N-PDU reception:
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   779  *                           E_OK if the complete N-PDU has been received.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   780  *                           E_NOT_OK if an error occurred during reception, used to enable
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   781  *                           unlocking of the receive buffer.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   782  *  \retval   None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   783  *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   784  *  \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   785  ***********************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   786  /*TRACE[SWS_Dcm_00093][SWS_Dcm_00345][SWS_Dcm_00111]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   787  FUNC(void,DCM_CODE) Dcm_TpRxIndication (VAR(PduIdType, AUTOMATIC) id,VAR(Std_ReturnType, AUTOMATIC) result)
; Function Dcm_TpRxIndication
.L60:
Dcm_TpRxIndication:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   788  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   789      if (id >= DCM_CFG_NUM_RX_PDUID)
	jlt.u	d4,#2,.L37
.L214:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   790      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   791          DCM_DET_ERROR(DCM_TPRXINDICATION_ID ,DCM_E_DCMRXPDUID_RANGE_EXCEED)
	mov	d4,#53
.L202:
	mov	d5,#0
.L203:
	mov	d6,#165
	mov	d7,#32
	call	Det_ReportError
	j	.L38
.L37:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   792      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   793      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   794      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   795  /*TRACE[BSW_SWS_AR4_2_R2_DiagnosticCommunicationManager_Ext-2858]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   796  #if(DCM_CFG_RXPDU_SHARING_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   797          Dcm_Prv_ProcessSharedPduId(&id);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   798  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   799  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   800  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   801          if(FALSE == Dcm_Prv_isRequestQueued(id,result))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   802  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   803          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   804              if(E_OK == result)
	jne	d5,#0,.L39
.L215:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   805              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   806                  Dcm_Prv_ProcessRxIndication(id);
	call	Dcm_Prv_ProcessRxIndication
.L204:
	j	.L40
.L39:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   807              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   808              else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   809              {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   810                  /*TRACE[SWS_Dcm_00344]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   811                  Dcm_Prv_DiscardRequest(id,result);
	call	Dcm_Prv_DiscardRequest
.L40:
.L38:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   812              }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   813          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   814      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   815  }
	ret
.L117:
	
__Dcm_TpRxIndication_function_end:
	.size	Dcm_TpRxIndication,__Dcm_TpRxIndication_function_end-Dcm_TpRxIndication
.L69:
	; End of function
	
	.sdecl	'.bss.Dcm_Dsl_RxIndication.Dcm_DsldPduInfo_st',data,cluster('Dcm_DsldPduInfo_st')
	.sect	'.bss.Dcm_Dsl_RxIndication.Dcm_DsldPduInfo_st'
	.global	Dcm_DsldPduInfo_st
	.align	4
Dcm_DsldPduInfo_st:	.type	object
	.size	Dcm_DsldPduInfo_st,8
	.space	8
	.sdecl	'.rodata.Dcm_Dsl_RxIndication..1.ini',data,rom
	.sect	'.rodata.Dcm_Dsl_RxIndication..1.ini'
	.align	4
.1.ini:	.type	object
	.size	.1.ini,8
	.space	4
	.half	3
	.space	2
	.calls	'Dcm_Prv_ProcessRequest','Dcm_Prv_ReloadP2maxValue'
	.calls	'Dcm_Prv_SendNrc21','PduR_DcmTransmit'
	.calls	'Dcm_Prv_SendNrc21','Det_ReportError'
	.calls	'Dcm_Prv_CheckDiagnosticStatus','Dcm_CheckActiveDiagnosticStatus'
	.calls	'Dcm_Prv_isFunctionalTesterPresentProcessed','DcmAppl_DcmIndicationFuncTpr'
	.calls	'Dcm_Prv_isFunctionalTesterPresentProcessed','Dcm_Prv_UpdateDSLstate'
	.calls	'Dcm_Prv_ProcessRxIndication','Dcm_Prv_CheckDiagnosticStatus'
	.calls	'Dcm_Prv_ProcessRxIndication','Dcm_Prv_isFunctionalTesterPresentProcessed'
	.calls	'Dcm_Prv_ProcessRxIndication','Dcm_Prv_SendNrc21'
	.calls	'Dcm_Prv_ProcessRxIndication','Dcm_Prv_ProcessRequest'
	.calls	'Dcm_TpRxIndication','Det_ReportError'
	.calls	'Dcm_TpRxIndication','Dcm_Prv_ProcessRxIndication'
	.calls	'Dcm_TpRxIndication','Dcm_Prv_DiscardRequest'
	.calls	'Dcm_Prv_ResetCopyRxDataStatus','',0
	.calls	'Dcm_Prv_DiscardRequest','',0
	.calls	'Dcm_Prv_ReloadP2maxValue','',0
	.calls	'Dcm_Prv_ProcessRequest','',0
	.calls	'Dcm_Prv_SendNrc21','',8
	.calls	'Dcm_Prv_CheckDiagnosticStatus','',0
	.calls	'Dcm_Prv_UpdateDSLstate','',0
	.calls	'Dcm_Prv_isFunctionalTesterPresentProcessed','',0
	.calls	'Dcm_Prv_ProcessRxIndication','',0
	.extern	Dcm_active_commode_e
	.extern	PduR_DcmTransmit
	.extern	Det_ReportError
	.extern	Dcm_CheckActiveDiagnosticStatus
	.extern	Dcm_DsldProtocol_pcst
	.extern	Dcm_DsldRxTable_pcu8
	.extern	Dcm_DslRxPduArray_ast
	.extern	Dcm_isFuncTPOnOtherConnection_b
	.extern	Dcm_DsldConnTable_pcst
	.extern	Dcm_DsldGlobal_st
	.extern	Dcm_DsldTimer_st
	.extern	Dcm_DslState_u8
	.extern	Dcm_DslSubState_u8
	.extern	DcmAppl_DcmIndicationFuncTpr
	.calls	'Dcm_TpRxIndication','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L62:
	.word	18063
	.half	3
	.word	.L63
	.byte	4
.L61:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L64
.L120:
	.byte	2
	.byte	'unsigned char',0,1,8
.L167:
	.byte	3
	.word	150
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	167
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	167
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	150
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	150
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	150
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	167
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	150
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	150
	.byte	6,0
.L118:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.word	480
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	502
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	502
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	150
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	480
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	480
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	502
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	150
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	150
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	819
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	835
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	835
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	150
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	819
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	819
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	150
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	835
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	150
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	150
	.byte	6,0
.L161:
	.byte	7
	.byte	'DCM_IS_KWPPROT_ACTIVE',0,3,4,142,7,37
	.word	150
	.byte	1,1
.L162:
	.byte	6,0
.L128:
	.byte	4
	.byte	'Dcm_Prv_ReloadS3Timer',0,3,5,26,35,1,1
.L130:
	.byte	6,0
.L169:
	.byte	7
	.byte	'Dcm_Prv_CheckLowPriorityRequestReceived',0,3,6,58,37
	.word	150
	.byte	1,1
.L171:
	.byte	5
	.byte	'DcmRxPduId',0,6,58,103
	.word	480
.L173:
	.byte	6,0
.L137:
	.byte	4
	.byte	'Dcm_Prv_StartP2Timer',0,3,6,116,34,1,1
.L139:
	.byte	6,0
.L155:
	.byte	7
	.byte	'Dcm_Prv_GetRequestLength',0,3,6,135,1,43
	.word	480
	.byte	1,1
.L157:
	.byte	5
	.byte	'DcmRxPduId',0,6,135,1,94
	.word	480
.L159:
	.byte	6,0,8
	.word	172
	.byte	9
	.word	202
	.byte	9
	.word	217
	.byte	6,0,8
	.word	240
	.byte	9
	.word	272
	.byte	9
	.word	287
	.byte	6,0,8
	.word	310
	.byte	9
	.word	350
	.byte	9
	.word	364
	.byte	6,0,8
	.word	387
	.byte	9
	.word	420
	.byte	9
	.word	434
	.byte	9
	.word	455
	.byte	6,0,8
	.word	507
	.byte	9
	.word	538
	.byte	9
	.word	553
	.byte	6,0,8
	.word	576
	.byte	9
	.word	609
	.byte	9
	.word	624
	.byte	6,0,8
	.word	647
	.byte	9
	.word	688
	.byte	9
	.word	702
	.byte	6,0,8
	.word	725
	.byte	9
	.word	759
	.byte	9
	.word	773
	.byte	9
	.word	794
	.byte	6,0,8
	.word	840
	.byte	9
	.word	871
	.byte	9
	.word	886
	.byte	6,0,8
	.word	909
	.byte	9
	.word	942
	.byte	9
	.word	957
	.byte	6,0,8
	.word	980
	.byte	9
	.word	1021
	.byte	9
	.word	1035
	.byte	6,0,8
	.word	1058
	.byte	9
	.word	1092
	.byte	9
	.word	1106
	.byte	9
	.word	1127
	.byte	6,0
.L142:
	.byte	10,8,71,9,8,11
	.byte	'SduDataPtr',0
	.word	167
	.byte	4,2,35,0,11
	.byte	'SduLength',0
	.word	480
	.byte	2,2,35,4,0,12
	.word	1599
	.byte	3
	.word	1644
	.byte	13
	.byte	'PduR_DcmTransmit',0,7,41,42
	.word	150
	.byte	1,1,1,1,5
	.byte	'id',0,7,41,86
	.word	480
	.byte	5
	.byte	'ptr',0,7,41,138,1
	.word	1649
	.byte	0,13
	.byte	'Det_ReportError',0,9,112,16
	.word	150
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,9,112,39
	.word	480
	.byte	5
	.byte	'InstanceId',0,9,112,55
	.word	150
	.byte	5
	.byte	'ApiId',0,9,112,73
	.word	150
	.byte	5
	.byte	'ErrorId',0,9,112,86
	.word	150
	.byte	0,14
	.byte	'Dcm_CheckActiveDiagnosticStatus',0,4,236,3,28,1,1,1,1,5
	.byte	'dataNetworkId',0,4,236,3,81
	.word	150
	.byte	0,8
	.word	1152
	.byte	6,0,15
	.byte	'DcmAppl_DcmIndicationFuncTpr',0,10,160,1,33,1,1,1,1,8
	.word	1188
	.byte	6,0,8
	.word	1219
	.byte	9
	.word	1270
	.byte	6,0,8
	.word	1291
	.byte	6,0,8
	.word	1321
	.byte	9
	.word	1358
	.byte	6,0,12
	.word	150
.L147:
	.byte	3
	.word	1951
	.byte	16,1,3
	.word	1961
	.byte	17
	.byte	'__codeptr',0,6,1,1
	.word	1963
	.byte	2
	.byte	'char',0,1,6,17
	.byte	'sint8',0,11,76,25
	.word	1986
	.byte	17
	.byte	'uint8',0,11,81,25
	.word	150
	.byte	17
	.byte	'uint16',0,11,91,25
	.word	480
	.byte	17
	.byte	'uint32',0,11,106,24
	.word	819
	.byte	2
	.byte	'unsigned long long int',0,8,7,17
	.byte	'uint64',0,11,111,30
	.word	2052
	.byte	17
	.byte	'boolean',0,11,127,25
	.word	150
	.byte	2
	.byte	'unsigned long int',0,4,7,17
	.byte	'uint16_least',0,11,147,1,25
	.word	2109
	.byte	17
	.byte	'StatusType',0,12,191,1,27
	.word	150
	.byte	17
	.byte	'Std_ReturnType',0,12,199,1,15
	.word	150
	.byte	10,12,206,1,9,8,11
	.byte	'vendorID',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'moduleID',0
	.word	480
	.byte	2,2,35,2,11
	.byte	'sw_major_version',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'sw_minor_version',0
	.word	150
	.byte	1,2,35,5,11
	.byte	'sw_patch_version',0
	.word	150
	.byte	1,2,35,6,0,17
	.byte	'Std_VersionInfoType',0,12,213,1,3
	.word	2196
	.byte	17
	.byte	'PduIdType',0,13,22,19
	.word	480
	.byte	17
	.byte	'PduLengthType',0,13,26,19
	.word	480
	.byte	17
	.byte	'PduInfoType',0,8,75,3
	.word	1599
	.byte	18,8,113,9,4,19
	.byte	'TP_DATACONF',0,0,19
	.byte	'TP_DATARETRY',0,1,19
	.byte	'TP_CONFPENDING',0,2,0,17
	.byte	'TpDataStateType',0,8,118,3
	.word	2406
	.byte	17
	.byte	'NetworkHandleType',0,8,128,1,17
	.word	150
	.byte	17
	.byte	'Can_IdType',0,14,32,16
	.word	819
	.byte	17
	.byte	'Can_HwHandleType',0,14,43,16
	.word	480
	.byte	10,15,93,9,8,11
	.byte	'Class',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'TIN',0
	.word	150
	.byte	1,2,35,1,11
	.byte	'ReturnAddress',0
	.word	819
	.byte	4,2,35,4,0,17
	.byte	'OsTrapInfoType',0,15,97,3
	.word	2553
	.byte	20,68
	.word	819
	.byte	21,16,0,10,15,154,1,9,68,11
	.byte	'store',0
	.word	2633
	.byte	68,2,35,0,0,20,68
	.word	2642
	.byte	21,0,0,17
	.byte	'Os_JumpBufType',0,15,156,1,3
	.word	2664
	.byte	17
	.byte	'Os_StackTraceType',0,15,174,1,18
	.word	819
	.byte	10,15,175,1,9,8,11
	.byte	'sp',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'ctx',0
	.word	819
	.byte	4,2,35,4,0,17
	.byte	'Os_StackValueType',0,15,175,1,63
	.word	2724
	.byte	17
	.byte	'Os_StackSizeType',0,15,176,1,27
	.word	2724
	.byte	22,1,1,3
	.word	2809
	.byte	17
	.byte	'Os_VoidVoidFunctionType',0,15,179,1,16
	.word	2812
	.byte	17
	.byte	'ApplicationType',0,15,193,1,23
	.word	150
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,15,198,1,16,2,11
	.byte	'app_id',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,1,0,17
	.byte	'Os_ApplicationConfigurationType',0,15,201,1,3
	.word	2875
	.byte	17
	.byte	'Os_CoreStateType',0,15,203,1,16
	.word	819
	.byte	17
	.byte	'AreaIdType',0,15,204,1,16
	.word	480
	.byte	17
	.byte	'Os_PeripheralAddressType',0,15,212,1,22
	.word	819
	.byte	17
	.byte	'TickType',0,15,221,1,22
	.word	819
	.byte	17
	.byte	'Os_StopwatchTickType',0,15,225,1,22
	.word	819
	.byte	17
	.byte	'Os_Lockable',0,15,234,1,18
	.word	835
	.byte	17
	.byte	'CoreIdType',0,15,236,1,16
	.word	480
	.byte	17
	.byte	'SpinlockIdType',0,15,237,1,16
	.word	480
	.byte	18,15,239,1,9,4,19
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,19
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,17
	.byte	'TryToGetSpinlockType',0,15,239,1,74
	.word	3182
	.byte	18,15,174,2,9,4,19
	.byte	'APPLICATION_ACCESSIBLE',0,0,19
	.byte	'APPLICATION_RESTARTING',0,1,19
	.byte	'APPLICATION_TERMINATED',0,2,0,17
	.byte	'ApplicationStateType',0,15,174,2,92
	.word	3275
	.byte	24
	.byte	'void',0,3
	.word	3387
	.byte	25,1,1,26
	.word	150
	.byte	26
	.word	3393
	.byte	0,3
	.word	3398
	.byte	17
	.byte	'Os_FunctionEntryType',0,15,183,2,16
	.word	3412
	.byte	23
	.byte	'Os_MeterInfoType_s',0,15,193,2,16,48,11
	.byte	'elapsed',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'previous',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'max',0
	.word	819
	.byte	4,2,35,8,11
	.byte	'cumulative',0
	.word	819
	.byte	4,2,35,12,11
	.byte	'stackbase',0
	.word	2724
	.byte	8,2,35,16,11
	.byte	'stackusage',0
	.word	2724
	.byte	8,2,35,24,11
	.byte	'stackmax',0
	.word	2724
	.byte	8,2,35,32,11
	.byte	'stackbudget',0
	.word	2724
	.byte	8,2,35,40,0,17
	.byte	'Os_MeterInfoType',0,15,202,2,3
	.word	3447
	.byte	3
	.word	3447
	.byte	17
	.byte	'Os_MeterInfoRefType',0,15,203,2,50
	.word	3645
	.byte	17
	.byte	'EventMaskType',0,15,206,2,15
	.word	150
	.byte	17
	.byte	'Os_imaskType',0,15,211,2,16
	.word	819
	.byte	23
	.byte	'Os_ISRDynType_s',0,15,213,2,16,48,11
	.byte	'meter',0
	.word	3447
	.byte	48,2,35,0,0,17
	.byte	'Os_ISRDynType',0,15,215,2,3
	.word	3724
	.byte	3
	.word	3724
	.byte	12
	.word	3785
	.byte	23
	.byte	'Os_ISRType_s',0,15,216,2,16,24,11
	.byte	'entry_function',0
	.word	2817
	.byte	4,2,35,0,11
	.byte	'dynamic',0
	.word	3790
	.byte	4,2,35,4,11
	.byte	'imask',0
	.word	819
	.byte	4,2,35,8,11
	.byte	'stackbudget',0
	.word	2724
	.byte	8,2,35,12,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,20,11
	.byte	'application',0
	.word	150
	.byte	1,2,35,21,0,17
	.byte	'Os_ISRType',0,15,223,2,3
	.word	3795
	.byte	3
	.word	2809
	.byte	12
	.word	3795
	.byte	3
	.word	3954
	.byte	17
	.byte	'ISRType',0,15,224,2,46
	.word	3959
	.byte	17
	.byte	'Os_bitmask',0,15,239,2,22
	.word	819
	.byte	17
	.byte	'Os_pset0Type',0,15,240,2,20
	.word	819
	.byte	17
	.byte	'Os_pset1Type',0,15,241,2,20
	.word	819
	.byte	17
	.byte	'Os_pset2Type',0,15,242,2,20
	.word	819
	.byte	27,15,243,2,9,4,11
	.byte	'p0',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'p1',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'p2',0
	.word	819
	.byte	4,2,35,0,0,17
	.byte	'Os_psetType',0,15,247,2,3
	.word	4067
	.byte	27,15,249,2,9,4,11
	.byte	't0',0
	.word	819
	.byte	4,2,35,0,11
	.byte	't1',0
	.word	819
	.byte	4,2,35,0,11
	.byte	't2',0
	.word	819
	.byte	4,2,35,0,0,17
	.byte	'Os_tpmaskType',0,15,253,2,3
	.word	4131
	.byte	17
	.byte	'Os_ActivationCountType',0,15,254,2,23
	.word	150
	.byte	23
	.byte	'Os_TaskDynType_s',0,15,128,3,16,120,11
	.byte	'terminate_jump_buf',0
	.word	2673
	.byte	68,2,35,0,11
	.byte	'meter',0
	.word	3447
	.byte	48,2,35,68,11
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,116,0,17
	.byte	'Os_TaskDynType',0,15,132,3,3
	.word	4229
	.byte	20,68
	.word	2642
	.byte	21,0,0,3
	.word	4229
	.byte	12
	.word	4355
	.byte	23
	.byte	'Os_TaskType_s',0,15,134,3,16,40,11
	.byte	'dynamic',0
	.word	4360
	.byte	4,2,35,0,11
	.byte	'entry_function',0
	.word	2817
	.byte	4,2,35,4,11
	.byte	'pset',0
	.word	4067
	.byte	4,2,35,8,11
	.byte	'base_tpmask',0
	.word	4131
	.byte	4,2,35,12,11
	.byte	'tpmask',0
	.word	4131
	.byte	4,2,35,16,11
	.byte	'core_id',0
	.word	480
	.byte	2,2,35,20,11
	.byte	'index',0
	.word	819
	.byte	4,2,35,24,11
	.byte	'stackbudget',0
	.word	2724
	.byte	8,2,35,28,11
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,36,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,37,11
	.byte	'application',0
	.word	150
	.byte	1,2,35,38,0,17
	.byte	'Os_TaskType',0,15,146,3,3
	.word	4365
	.byte	12
	.word	4365
	.byte	3
	.word	4615
	.byte	17
	.byte	'TaskType',0,15,147,3,47
	.word	4620
	.byte	28
	.byte	'Os_TaskStateType',0,15,155,3,6,4,19
	.byte	'SUSPENDED',0,0,19
	.byte	'READY',0,1,19
	.byte	'WAITING',0,2,19
	.byte	'RUNNING',0,3,0,17
	.byte	'TaskStateType',0,15,156,3,31
	.word	4643
	.byte	27,15,167,3,3,4,11
	.byte	'tpmask',0
	.word	4131
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,15,166,3,16,4,11
	.byte	'saved_priority',0
	.word	4730
	.byte	4,2,35,0,0,17
	.byte	'Os_ResourceDynType',0,15,170,3,3
	.word	4753
	.byte	3
	.word	4753
	.byte	12
	.word	4833
	.byte	23
	.byte	'Os_ResourceType_s',0,15,171,3,16,12,11
	.byte	'dynamic',0
	.word	4838
	.byte	4,2,35,0,11
	.byte	'tpmask',0
	.word	4131
	.byte	4,2,35,4,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,8,0,17
	.byte	'Os_ResourceType',0,15,175,3,3
	.word	4843
	.byte	10,15,181,3,9,12,11
	.byte	'maxallowedvalue',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'ticksperbase',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'mincycle',0
	.word	819
	.byte	4,2,35,8,0,17
	.byte	'AlarmBaseType',0,15,185,3,3
	.word	4942
	.byte	10,15,206,3,9,8,11
	.byte	'Running',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'Pending',0
	.word	150
	.byte	1,2,35,1,11
	.byte	'Delay',0
	.word	819
	.byte	4,2,35,4,0,17
	.byte	'Os_CounterStatusType',0,15,210,3,3
	.word	5037
	.byte	29
	.word	150
	.byte	1,1,3
	.word	5123
	.byte	17
	.byte	'Os_CounterIncrAdvType',0,15,217,3,22
	.word	5130
	.byte	23
	.byte	's_swd',0,15,222,3,12,4,11
	.byte	'count',0
	.word	819
	.byte	4,2,35,0,0,27,15,221,3,3,4,11
	.byte	'sw',0
	.word	5166
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,15,220,3,16,4,11
	.byte	'type_dependent',0
	.word	5194
	.byte	4,2,35,0,0,17
	.byte	'Os_CounterDynType',0,15,226,3,3
	.word	5213
	.byte	3
	.word	5213
	.byte	12
	.word	5291
	.byte	23
	.byte	'Os_CounterType_s',0,15,227,3,16,28,11
	.byte	'dynamic',0
	.word	5296
	.byte	4,2,35,0,11
	.byte	'advincr',0
	.word	5135
	.byte	4,2,35,4,11
	.byte	'base',0
	.word	4942
	.byte	12,2,35,8,11
	.byte	'core',0
	.word	3393
	.byte	4,2,35,20,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,24,11
	.byte	'application',0
	.word	150
	.byte	1,2,35,25,0,17
	.byte	'Os_CounterType',0,15,234,3,3
	.word	5301
	.byte	3
	.word	5123
	.byte	12
	.word	5301
	.byte	3
	.word	5453
	.byte	17
	.byte	'CounterType',0,15,235,3,52
	.word	5458
	.byte	28
	.byte	'Os_ScheduleTableStatusType',0,15,240,3,6,4,19
	.byte	'SCHEDULETABLE_STOPPED',0,0,19
	.byte	'SCHEDULETABLE_NEXT',0,1,19
	.byte	'SCHEDULETABLE_WAITING',0,2,19
	.byte	'SCHEDULETABLE_RUNNING',0,3,19
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,17
	.byte	'ScheduleTableStatusType',0,15,241,3,41
	.word	5484
	.byte	12
	.word	.L205-.L62
	.byte	3
	.word	5684
	.byte	17
	.byte	'ScheduleTableType',0,15,128,4,58
	.word	5689
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,15,130,4,16,16,11
	.byte	'match',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'next',0
	.word	5694
	.byte	4,2,35,4,11
	.byte	'state',0
	.word	5484
	.byte	4,2,35,8,11
	.byte	'config',0
	.word	480
	.byte	2,2,35,12,0,3
	.word	5721
	.byte	12
	.word	5814
.L205:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,15,247,3,16,16,11
	.byte	'dynamic',0
	.word	5819
	.byte	4,2,35,0,11
	.byte	'counter',0
	.word	5463
	.byte	4,2,35,4,11
	.byte	'repeat',0
	.word	150
	.byte	1,2,35,8,11
	.byte	'config',0
	.word	480
	.byte	2,2,35,10,11
	.byte	'initial',0
	.word	150
	.byte	1,2,35,12,11
	.byte	'access',0
	.word	150
	.byte	1,2,35,13,11
	.byte	'application',0
	.word	150
	.byte	1,2,35,14,0,17
	.byte	'Os_ScheduleTableType',0,15,255,3,3
	.word	5824
	.byte	12
	.word	5824
	.byte	3
	.word	6004
	.byte	12
	.word	5301
	.byte	3
	.word	6014
	.byte	30
	.word	3117
	.byte	30
	.word	4067
	.byte	30
	.word	3964
	.byte	30
	.word	4625
	.byte	30
	.word	4131
	.byte	30
	.word	150
	.byte	30
	.word	4625
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,15,251,6,16,112,11
	.byte	'TrapInfo',0
	.word	2553
	.byte	8,2,35,0,11
	.byte	'lock_taskaccess',0
	.word	6024
	.byte	4,2,35,8,11
	.byte	'ReadyTasks',0
	.word	6029
	.byte	4,2,35,12,11
	.byte	'RunningISR',0
	.word	6034
	.byte	4,2,35,16,11
	.byte	'RunningTask',0
	.word	6039
	.byte	4,2,35,20,11
	.byte	'RunningTPMask',0
	.word	6044
	.byte	4,2,35,24,11
	.byte	'CurrentMeteredObject',0
	.word	3650
	.byte	4,2,35,28,11
	.byte	'IdleMeter',0
	.word	3447
	.byte	48,2,35,32,11
	.byte	'AppAccess',0
	.word	150
	.byte	1,2,35,80,11
	.byte	'AppOverride',0
	.word	6049
	.byte	1,2,35,81,11
	.byte	'GetStackValueAdjust',0
	.word	2724
	.byte	8,2,35,84,11
	.byte	'InErrorHook',0
	.word	150
	.byte	1,2,35,92,11
	.byte	'ChainTaskRef',0
	.word	6054
	.byte	4,2,35,96,11
	.byte	'GetStackUsageAdjust',0
	.word	2724
	.byte	8,2,35,100,11
	.byte	'InProtectionHook',0
	.word	150
	.byte	1,2,35,108,11
	.byte	'CoreIsActive',0
	.word	150
	.byte	1,2,35,109,11
	.byte	'InShutdownHook',0
	.word	150
	.byte	1,2,35,110,0,17
	.byte	'Os_ControlledCoreType',0,15,141,7,3
	.word	6059
	.byte	3
	.word	819
	.byte	12
	.word	3795
	.byte	3
	.word	6515
	.byte	12
	.word	4365
	.byte	3
	.word	6525
	.byte	3
	.word	3447
	.byte	23
	.byte	'Os_AnyCoreType_s',0,15,151,7,16,96,11
	.byte	'DisableAllImask',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'SuspendAllImask',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'SuspendOSImask',0
	.word	819
	.byte	4,2,35,8,11
	.byte	'DisableAllCount',0
	.word	819
	.byte	4,2,35,12,11
	.byte	'SuspendAllCount',0
	.word	819
	.byte	4,2,35,16,11
	.byte	'SuspendOSCount',0
	.word	819
	.byte	4,2,35,20,11
	.byte	'RestartJumpBuf',0
	.word	2673
	.byte	68,2,35,24,11
	.byte	'Restartable',0
	.word	150
	.byte	1,2,35,92,0,17
	.byte	'Os_AnyCoreType',0,15,160,7,3
	.word	6540
	.byte	17
	.byte	'Can_TxObjPriorityClassType',0,16,219,3,16
	.word	819
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,16,231,3,16,8,11
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,1,11
	.byte	'TxObjPriorityClass',0
	.word	819
	.byte	4,2,35,4,0,17
	.byte	'Can_TxHwObjectConfigType',0,16,252,3,3
	.word	6817
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,16,129,4,16,12,11
	.byte	'MaskRef',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'MsgId',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,8,11
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,9,0,17
	.byte	'Can_RxHwObjectConfigType',0,16,147,4,3
	.word	6953
	.byte	20,4
	.word	150
	.byte	21,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,16,181,4,16,4,11
	.byte	'ControllerMOMap',0
	.word	7093
	.byte	4,2,35,0,0,17
	.byte	'Can_ControllerMOMapConfigType',0,16,184,4,3
	.word	7102
	.byte	23
	.byte	'Can_NPCRValueType',0,16,188,4,16,2,11
	.byte	'Can_NPCRValue',0
	.word	480
	.byte	2,2,35,0,0,17
	.byte	'Can_NPCRValueType',0,16,191,4,3
	.word	7203
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,194,4,16,8,11
	.byte	'CanControllerBaudrate',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'CanControllerBaudrateCfg',0
	.word	480
	.byte	2,2,35,4,0,17
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,198,4,3
	.word	7278
	.byte	12
	.word	7278
	.byte	3
	.word	7443
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,16,201,4,16,4,11
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7448
	.byte	4,2,35,0,0,17
	.byte	'Can_BaudrateConfigPtrType',0,16,204,4,3
	.word	7453
	.byte	23
	.byte	'Can_EventHandlingType',0,16,226,4,16,4,11
	.byte	'CanEventType',0
	.word	7093
	.byte	4,2,35,0,0,17
	.byte	'Can_EventHandlingType',0,16,229,4,3
	.word	7553
	.byte	17
	.byte	'Rte_TransformerErrorCode',0,17,130,1,15
	.word	150
	.byte	17
	.byte	'Rte_TransformerClass',0,17,131,1,15
	.word	150
	.byte	10,17,168,1,9,12,11
	.byte	'in',0
	.word	3393
	.byte	4,2,35,0,11
	.byte	'out',0
	.word	3393
	.byte	4,2,35,4,11
	.byte	'used',0
	.word	480
	.byte	2,2,35,8,11
	.byte	'lost_data',0
	.word	150
	.byte	1,2,35,10,0,17
	.byte	'Rte_QDynType',0,17,173,1,3
	.word	7699
	.byte	18,17,175,1,9,4,19
	.byte	'RTE_DRA',0,0,19
	.byte	'RTE_WOWP',0,1,19
	.byte	'RTE_TASK',0,2,19
	.byte	'RTE_ARE',0,3,19
	.byte	'RTE_EV',0,4,19
	.byte	'RTE_MSI',0,5,0,17
	.byte	'Rte_NotificationType',0,17,182,1,3
	.word	7786
	.byte	3
	.word	7699
	.byte	23
	.byte	'Rte_QCmnType',0,17,184,1,16,24,11
	.byte	'dynamic',0
	.word	7884
	.byte	4,2,35,0,11
	.byte	'copy',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'queue_size',0
	.word	480
	.byte	2,2,35,6,11
	.byte	'element_size',0
	.word	480
	.byte	2,2,35,8,11
	.byte	'buffer_start',0
	.word	3393
	.byte	4,2,35,12,11
	.byte	'buffer_end',0
	.word	3393
	.byte	4,2,35,16,11
	.byte	'notification_type',0
	.word	7786
	.byte	4,2,35,20,0,17
	.byte	'Rte_QCmnType',0,17,192,1,3
	.word	7889
	.byte	17
	.byte	'Rte_AlarmRefType',0,17,224,1,32
	.word	819
	.byte	17
	.byte	'Rte_AlarmIndexType',0,17,226,1,32
	.word	480
	.byte	20,128,8
	.word	150
	.byte	21,255,7,0,17
	.byte	'Impl_NVM_DstPtrType_1024',0,18,50,15
	.word	8127
	.byte	17
	.byte	'CanIf_u32_impl',0,18,69,16
	.word	819
	.byte	17
	.byte	'CanIf_u16_impl',0,18,71,16
	.word	480
	.byte	17
	.byte	'CanIf_u8_impl',0,18,73,15
	.word	150
	.byte	17
	.byte	'CanIf_ControllerModeType_Enum_impl',0,18,88,15
	.word	150
	.byte	17
	.byte	'CanIf_PduModeType_Enum_impl',0,18,90,15
	.word	150
	.byte	10,18,92,9,2,11
	.byte	'DeviceMode',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'ChannelMode',0
	.word	150
	.byte	1,2,35,1,0,17
	.byte	'CanIf_ControllerStateType_struct_impl',0,18,95,3
	.word	8318
	.byte	17
	.byte	'CanIf_NotifStatusType_Enum_impl',0,18,100,15
	.word	150
	.byte	17
	.byte	'CanSM_boolean_Impl',0,18,120,15
	.word	150
	.byte	17
	.byte	'CanSM_u8_Impl',0,18,123,15
	.word	150
	.byte	17
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,18,128,1,15
	.word	150
	.byte	17
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,18,132,1,15
	.word	150
	.byte	17
	.byte	'CanSM_u16_Impl',0,18,136,1,16
	.word	480
	.byte	17
	.byte	'CanSM_TimerStateType_Enum_impl',0,18,138,1,15
	.word	150
	.byte	10,18,140,1,9,4,11
	.byte	'cntTick_u16',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'stTimer',0
	.word	150
	.byte	1,2,35,2,0,17
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,18,143,1,3
	.word	8659
	.byte	17
	.byte	'Com_impl_u16',0,18,154,1,16
	.word	480
	.byte	17
	.byte	'Com_impl_u8',0,18,157,1,15
	.word	150
	.byte	17
	.byte	'ComM_uint32_Impl',0,18,173,1,16
	.word	819
	.byte	17
	.byte	'ComM_uint16_Impl',0,18,175,1,16
	.word	480
	.byte	17
	.byte	'ComM_uint8_Impl',0,18,177,1,15
	.word	150
	.byte	17
	.byte	'ComM_bool_Impl',0,18,179,1,15
	.word	150
	.byte	10,18,181,1,9,24,11
	.byte	'ChannelState_e',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'LightTimeoutCtr_u32',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	480
	.byte	2,2,35,8,11
	.byte	'ChannelMode_u8',0
	.word	150
	.byte	1,2,35,10,11
	.byte	'BusSmMode_u8',0
	.word	150
	.byte	1,2,35,11,11
	.byte	'UserRequestCtr_u8',0
	.word	150
	.byte	1,2,35,12,11
	.byte	'PassiveRequestState_u8',0
	.word	150
	.byte	1,2,35,13,11
	.byte	'PncRequestCtr_u8',0
	.word	150
	.byte	1,2,35,14,11
	.byte	'InhibitionReqStatus_u8',0
	.word	150
	.byte	1,2,35,15,11
	.byte	'NmNetworkRequestStatus_b',0
	.word	150
	.byte	1,2,35,16,11
	.byte	'DiagnosticRequestState_b',0
	.word	150
	.byte	1,2,35,17,11
	.byte	'CommunicationAllowed_b',0
	.word	150
	.byte	1,2,35,18,11
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,19,11
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,20,11
	.byte	'NmNetworkModeStatus_b',0
	.word	150
	.byte	1,2,35,21,0,17
	.byte	'ComM_ChannelStruct_Impl',0,18,197,1,3
	.word	8891
	.byte	10,18,206,1,9,10,11
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'LimitToNoComCtr_u16',0
	.word	480
	.byte	2,2,35,2,11
	.byte	'RequestedUserMode_t',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'IndicatedUserMode_t',0
	.word	150
	.byte	1,2,35,5,11
	.byte	'numChannelsInFullCom_u8',0
	.word	150
	.byte	1,2,35,6,11
	.byte	'numChannelsInSilentCom_u8',0
	.word	150
	.byte	1,2,35,7,11
	.byte	'numChannelsInNoCom_u8',0
	.word	150
	.byte	1,2,35,8,0,17
	.byte	'ComM_UserStruct_Impl',0,18,214,1,3
	.word	9395
	.byte	17
	.byte	'Dcm_ConfirmationStatusType',0,18,243,1,15
	.word	150
	.byte	17
	.byte	'Dcm_IOOperationResponseType',0,18,252,1,15
	.word	150
	.byte	17
	.byte	'Dcm_NegativeResponseCodeType',0,18,132,2,15
	.word	150
	.byte	17
	.byte	'Dcm_OpStatusType',0,18,134,2,15
	.word	150
	.byte	17
	.byte	'Dcm_ProtocolType',0,18,136,2,15
	.word	150
	.byte	17
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	18,138,2,15
	.word	150
	.byte	17
	.byte	'Dcm_SecLevelType',0,18,142,2,15
	.word	150
	.byte	17
	.byte	'Dcm_SesCtrlType',0,18,144,2,15
	.word	150
	.byte	17
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,18,146,2,15
	.word	150
	.byte	17
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,18,150,2,15
	.word	150
	.byte	17
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,18,154,2,15
	.word	150
	.byte	17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,18,243,3,34
	.word	8138
	.byte	20,128,8
	.word	150
	.byte	21,255,7,0,17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,18,246,3,34
	.word	8138
	.byte	17
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,19,37,15
	.word	150
	.byte	17
	.byte	'Dcm_MsgItemType',0,20,182,2,15
	.word	150
	.byte	3
	.word	150
	.byte	17
	.byte	'Dcm_MsgType',0,20,188,2,57
	.word	10464
	.byte	17
	.byte	'Dcm_MsgLenType',0,20,197,2,16
	.word	819
	.byte	10,20,206,2,9,4,11
	.byte	'reqType',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'suppressPosResponse',0
	.word	150
	.byte	1,2,35,1,11
	.byte	'sourceofRequest',0
	.word	150
	.byte	1,2,35,2,0,17
	.byte	'Dcm_MsgAddInfoType',0,20,219,2,2
	.word	10514
	.byte	17
	.byte	'Dcm_IdContextType',0,20,225,2,15
	.word	150
	.byte	10,20,238,5,9,32,11
	.byte	'tx_buffer_pa',0
	.word	10469
	.byte	4,2,35,0,11
	.byte	'rx_mainBuffer_pa',0
	.word	10469
	.byte	4,2,35,4,11
	.byte	'tx_buffer_size_u32',0
	.word	819
	.byte	4,2,35,8,11
	.byte	'rx_buffer_size_u32',0
	.word	819
	.byte	4,2,35,12,11
	.byte	'dataP2TmrAdjust',0
	.word	819
	.byte	4,2,35,16,11
	.byte	'dataP2StarTmrAdjust',0
	.word	819
	.byte	4,2,35,20,11
	.byte	'protocolid_u8',0
	.word	150
	.byte	1,2,35,24,11
	.byte	'sid_tableid_u8',0
	.word	150
	.byte	1,2,35,25,11
	.byte	'premption_level_u8',0
	.word	150
	.byte	1,2,35,26,11
	.byte	'pduinfo_idx_u8',0
	.word	150
	.byte	1,2,35,27,11
	.byte	'nrc21_b',0
	.word	150
	.byte	1,2,35,28,11
	.byte	'sendRespPendTransToBoot',0
	.word	150
	.byte	1,2,35,29,0,17
	.byte	'Dcm_Dsld_protocol_tableType',0,20,143,6,2
	.word	10647
	.byte	3
	.word	150
	.byte	25,1,1,26
	.word	150
	.byte	26
	.word	480
	.byte	26
	.word	480
	.byte	26
	.word	150
	.byte	0,3
	.word	11003
	.byte	17
	.byte	'Dcm_ConfirmationApiType',0,20,145,6,16
	.word	11027
	.byte	3
	.word	150
	.byte	31
	.word	150
	.byte	1,1,26
	.word	11065
	.byte	26
	.word	150
	.byte	26
	.word	150
	.byte	0,3
	.word	11070
	.byte	10,20,240,2,9,28,11
	.byte	'resData',0
	.word	10469
	.byte	4,2,35,0,11
	.byte	'reqData',0
	.word	10469
	.byte	4,2,35,4,11
	.byte	'msgAddInfo',0
	.word	10514
	.byte	4,2,35,8,11
	.byte	'resDataLen',0
	.word	819
	.byte	4,2,35,12,11
	.byte	'reqDataLen',0
	.word	819
	.byte	4,2,35,16,11
	.byte	'resMaxDataLen',0
	.word	819
	.byte	4,2,35,20,11
	.byte	'idContext',0
	.word	150
	.byte	1,2,35,24,11
	.byte	'dcmRxPduId',0
	.word	480
	.byte	2,2,35,26,0,3
	.word	11098
	.byte	31
	.word	150
	.byte	1,1,26
	.word	150
	.byte	26
	.word	11261
	.byte	26
	.word	11065
	.byte	0,3
	.word	11266
	.byte	10,20,158,6,9,20,11
	.byte	'allowed_session_b32',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	11093
	.byte	4,2,35,8,11
	.byte	'SubFunc_fp',0
	.word	11289
	.byte	4,2,35,12,11
	.byte	'subservice_id_u8',0
	.word	150
	.byte	1,2,35,16,11
	.byte	'isDspRDTCSubFnc_b',0
	.word	150
	.byte	1,2,35,17,0,17
	.byte	'Dcm_Dsld_SubServiceType',0,20,169,6,2
	.word	11294
	.byte	12
	.word	11294
	.byte	3
	.word	11506
	.byte	31
	.word	150
	.byte	1,1,26
	.word	11065
	.byte	26
	.word	150
	.byte	0,3
	.word	11516
	.byte	10,20,186,6,9,36,11
	.byte	'allowed_session_b32',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'service_handler_fp',0
	.word	11289
	.byte	4,2,35,8,11
	.byte	'Service_init_fp',0
	.word	2812
	.byte	4,2,35,12,11
	.byte	'sid_u8',0
	.word	150
	.byte	1,2,35,16,11
	.byte	'subfunction_exist_b',0
	.word	150
	.byte	1,2,35,17,11
	.byte	'servicelocator_b',0
	.word	150
	.byte	1,2,35,18,11
	.byte	'ptr_subservice_table_pcs',0
	.word	11511
	.byte	4,2,35,20,11
	.byte	'num_sf_u8',0
	.word	150
	.byte	1,2,35,24,11
	.byte	'adrUserServiceModeRule_pfct',0
	.word	11534
	.byte	4,2,35,28,11
	.byte	'Dcm_ConfirmationService',0
	.word	11032
	.byte	4,2,35,32,0,17
	.byte	'Dcm_Dsld_ServiceType',0,20,204,6,3
	.word	11539
	.byte	3
	.word	11003
	.byte	12
	.word	11539
	.byte	3
	.word	11887
	.byte	10,20,218,6,9,8,11
	.byte	'ptr_service_table_pcs',0
	.word	11892
	.byte	4,2,35,0,11
	.byte	'num_services_u8',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'nrc_sessnot_supported_u8',0
	.word	150
	.byte	1,2,35,5,11
	.byte	'cdtc_index_u8',0
	.word	150
	.byte	1,2,35,6,0,17
	.byte	'Dcm_Dsld_sid_tableType',0,20,224,6,3
	.word	11897
	.byte	10,20,238,6,9,14,11
	.byte	'protocol_num_u8',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'txpduid_num_u8',0
	.word	480
	.byte	2,2,35,2,11
	.byte	'roetype2_txpdu_u8',0
	.word	480
	.byte	2,2,35,4,11
	.byte	'rdpitype2_txpdu_u8',0
	.word	480
	.byte	2,2,35,6,11
	.byte	'testaddr_u16',0
	.word	480
	.byte	2,2,35,8,11
	.byte	'channel_idx_u8',0
	.word	150
	.byte	1,2,35,10,11
	.byte	'ConnectionIndex_u8',0
	.word	150
	.byte	1,2,35,11,11
	.byte	'NumberOfTxpdu_u8',0
	.word	150
	.byte	1,2,35,12,0,17
	.byte	'Dcm_Dsld_connType',0,20,248,6,3
	.word	12049
	.byte	18,20,146,7,9,4,19
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,19
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,19
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,17
	.byte	'Dcm_Dsld_commodeType',0,20,151,7,2
	.word	12287
	.byte	10,20,190,7,9,8,11
	.byte	'ComMChannelId',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'ComMState',0
	.word	12287
	.byte	4,2,35,4,0,17
	.byte	'Dcm_Dsld_ComMChannel',0,20,197,7,2
	.word	12399
	.byte	20,8
	.word	12399
	.byte	21,0,0,32
	.byte	'Dcm_active_commode_e',0,20,152,11,43
	.word	12478
	.byte	1,1,18,21,200,1,9,4,19
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,19
	.byte	'USE_ASYNCH_FNC',0,1,0,17
	.byte	'DcmDspSecurityUsePort',0,21,204,1,2
	.word	12519
	.byte	18,22,22,9,4,19
	.byte	'DCM_NO_BOOT',0,0,19
	.byte	'DCM_OEM_BOOT',0,1,19
	.byte	'DCM_SYS_BOOT',0,2,0,17
	.byte	'Dcm_SessionForBootType',0,22,27,2
	.word	12601
	.byte	18,23,192,3,9,4,19
	.byte	'DCM_READ_OK',0,0,19
	.byte	'DCM_READ_FAILED',0,1,19
	.byte	'DCM_READ_PENDING',0,2,19
	.byte	'DCM_READ_FORCE_RCRRP',0,3,19
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,17
	.byte	'Dcm_ReadMemoryRet_t',0,23,199,3,3
	.word	12682
	.byte	17
	.byte	'rba_BswSrv_uint64',0,24,66,28
	.word	2052
	.byte	17
	.byte	'Rte_TaskRefType',0,25,184,1,32
	.word	4625
	.byte	17
	.byte	'Rte_EventRefType',0,25,185,1,32
	.word	150
	.byte	17
	.byte	'Rte_EventType',0,25,186,1,32
	.word	819
	.byte	17
	.byte	'Rte_REActCounterType',0,25,252,1,15
	.word	150
	.byte	3
	.word	150
	.byte	17
	.byte	'Rte_REActCounterRefType',0,25,253,1,58
	.word	12947
	.byte	10,25,255,1,9,8,11
	.byte	'task',0
	.word	12843
	.byte	4,2,35,0,11
	.byte	'acnt',0
	.word	12952
	.byte	4,2,35,4,0,17
	.byte	'Rte_REContainerType',0,25,130,2,3
	.word	12985
	.byte	12
	.word	4365
	.byte	3
	.word	13049
	.byte	3
	.word	150
	.byte	12
	.word	12985
	.byte	3
	.word	13064
	.byte	17
	.byte	'Rte_REContainerRefType',0,25,132,2,60
	.word	13069
	.byte	17
	.byte	'Rte_MSICounterType',0,25,149,2,16
	.word	480
	.byte	3
	.word	480
	.byte	17
	.byte	'Rte_MSICounterRefType',0,25,150,2,56
	.word	13134
	.byte	17
	.byte	'Rte_MSIPendingFlagType',0,25,152,2,17
	.word	150
	.byte	3
	.word	150
	.byte	17
	.byte	'Rte_MSIPendingFlagRefType',0,25,153,2,60
	.word	13202
	.byte	10,25,163,2,9,24,11
	.byte	'counter',0
	.word	13139
	.byte	4,2,35,0,11
	.byte	'incCounter',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'pending',0
	.word	13207
	.byte	4,2,35,8,11
	.byte	'osTask',0
	.word	12843
	.byte	4,2,35,12,11
	.byte	'acnt',0
	.word	12952
	.byte	4,2,35,16,11
	.byte	'osEvent',0
	.word	150
	.byte	1,2,35,20,11
	.byte	'MSIInit',0
	.word	480
	.byte	2,2,35,22,0,17
	.byte	'Rte_MSITableEntry',0,25,172,2,3
	.word	13242
	.byte	3
	.word	480
	.byte	3
	.word	150
	.byte	17
	.byte	'Rte_TaskArrayIndex',0,25,179,2,16
	.word	150
	.byte	17
	.byte	'Rte_NrWaitingTasks',0,25,180,2,16
	.word	150
	.byte	10,25,182,2,9,4,11
	.byte	'pending',0
	.word	150
	.byte	1,2,35,0,11
	.byte	'count',0
	.word	150
	.byte	1,2,35,1,11
	.byte	'firstWaitingTask',0
	.word	150
	.byte	1,2,35,2,0,17
	.byte	'Rte_WaitableDatum',0,25,186,2,3
	.word	13460
	.byte	3
	.word	13460
	.byte	10,25,226,2,9,12,11
	.byte	'event_id',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'wd',0
	.word	13552
	.byte	4,2,35,4,11
	.byte	'timeout',0
	.word	819
	.byte	4,2,35,8,0,17
	.byte	'Rte_WOWP_NotificationType',0,25,230,2,3
	.word	13557
	.byte	12
	.word	13557
	.byte	3
	.word	13646
	.byte	17
	.byte	'Rte_WOWP_NotificationRefType',0,25,232,2,66
	.word	13651
	.byte	17
	.byte	'Rte_ARE_NotificationType',0,25,234,2,29
	.word	12985
	.byte	23
	.byte	'Rte_QTaskType',0,25,243,2,16,28,11
	.byte	'cmn',0
	.word	7889
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	12843
	.byte	4,2,35,24,0,17
	.byte	'Rte_QTaskType',0,25,246,2,3
	.word	13728
	.byte	23
	.byte	'Rte_QREType',0,25,250,2,16,28,11
	.byte	'cmn',0
	.word	7889
	.byte	24,2,35,0,11
	.byte	're',0
	.word	13074
	.byte	4,2,35,24,0,17
	.byte	'Rte_QREType',0,25,253,2,3
	.word	13799
	.byte	12
	.word	12985
	.byte	3
	.word	13864
	.byte	23
	.byte	'Rte_QWWPType',0,25,129,3,16,28,11
	.byte	'cmn',0
	.word	7889
	.byte	24,2,35,0,11
	.byte	'wwp',0
	.word	13656
	.byte	4,2,35,24,0,17
	.byte	'Rte_QWWPType',0,25,132,3,3
	.word	13874
	.byte	12
	.word	13557
	.byte	3
	.word	13942
	.byte	23
	.byte	'Rte_QEvType',0,25,136,3,16,36,11
	.byte	'cmn',0
	.word	7889
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	12843
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	12952
	.byte	4,2,35,32,0,17
	.byte	'Rte_QEvType',0,25,141,3,3
	.word	13952
	.byte	23
	.byte	'Rte_QMSIType',0,25,145,3,16,48,11
	.byte	'cmn',0
	.word	7889
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	12843
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	12952
	.byte	4,2,35,32,11
	.byte	'msiCounter',0
	.word	13139
	.byte	4,2,35,36,11
	.byte	'msiPending',0
	.word	13207
	.byte	4,2,35,40,11
	.byte	'msiLimit',0
	.word	480
	.byte	2,2,35,44,0,17
	.byte	'Rte_QMSIType',0,25,153,3,3
	.word	14047
	.byte	18,26,21,9,4,19
	.byte	'DSD_IDLE',0,0,19
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,19
	.byte	'DSD_CALL_SERVICE',0,2,19
	.byte	'DSD_WAITFORTXCONF',0,3,19
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,17
	.byte	'Dcm_DsdStatesType_ten',0,26,28,2
	.word	14202
	.byte	18,4,215,2,9,4,19
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,19
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,17
	.byte	'Dcm_DsldResponseType_ten',0,4,219,2,2
	.word	14339
	.byte	10,4,229,2,9,40,11
	.byte	'dataActiveRxPduId_u8',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'nrActiveConn_u8',0
	.word	150
	.byte	1,2,35,2,11
	.byte	'idxActiveSession_u8',0
	.word	150
	.byte	1,2,35,3,11
	.byte	'flgMonitorP3timer_b',0
	.word	150
	.byte	1,2,35,4,11
	.byte	'idxCurrentProtocol_u8',0
	.word	150
	.byte	1,2,35,5,11
	.byte	'dataActiveTxPduId_u8',0
	.word	480
	.byte	2,2,35,6,11
	.byte	'datActiveSrvtable_u8',0
	.word	150
	.byte	1,2,35,8,11
	.byte	'flgCommActive_b',0
	.word	150
	.byte	1,2,35,9,11
	.byte	'cntrWaitpendCounter_u8',0
	.word	150
	.byte	1,2,35,10,11
	.byte	'stResponseType_en',0
	.word	14339
	.byte	4,2,35,12,11
	.byte	'idxActiveSecurity_u8',0
	.word	150
	.byte	1,2,35,16,11
	.byte	'dataResult_u8',0
	.word	150
	.byte	1,2,35,17,11
	.byte	'idxService_u8',0
	.word	150
	.byte	1,2,35,18,11
	.byte	'dataResponseByDsd_b',0
	.word	150
	.byte	1,2,35,19,11
	.byte	'dataSid_u8',0
	.word	150
	.byte	1,2,35,20,11
	.byte	'dataRequestLength_u16',0
	.word	480
	.byte	2,2,35,22,11
	.byte	'dataOldtxPduId_u8',0
	.word	480
	.byte	2,2,35,24,11
	.byte	'adrActiveTxBuffer_tpu8',0
	.word	10469
	.byte	4,2,35,28,11
	.byte	'dataTimeoutMonitor_u32',0
	.word	819
	.byte	4,2,35,32,11
	.byte	'PreviousSessionIndex',0
	.word	150
	.byte	1,2,35,36,0,17
	.byte	'Dcm_DsldInternalStructureType_tst',0,4,157,3,2
	.word	14428
	.byte	10,4,171,3,9,12,11
	.byte	'Dcm_DslRxPduBuffer_st',0
	.word	1599
	.byte	8,2,35,0,11
	.byte	'Dcm_DslServiceId_u8',0
	.word	150
	.byte	1,2,35,8,11
	.byte	'Dcm_DslFuncTesterPresent_b',0
	.word	150
	.byte	1,2,35,9,11
	.byte	'Dcm_DslCopyRxData_b',0
	.word	150
	.byte	1,2,35,10,0,17
	.byte	'Dcm_DslRxPduArray_tst',0,4,180,3,2
	.word	15043
	.byte	10,4,182,3,9,8,11
	.byte	'dataTimeoutP2StrMax_u32',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'dataTimeoutP2max_u32',0
	.word	819
	.byte	4,2,35,4,0,17
	.byte	'Dcm_DsldTimingsType_tst',0,4,189,3,2
	.word	15206
	.byte	12
	.word	10647
	.byte	3
	.word	15309
	.byte	32
	.byte	'Dcm_DsldProtocol_pcst',0,4,254,3,72
	.word	15314
	.byte	1,1,32
	.byte	'Dcm_DsldRxTable_pcu8',0,4,255,3,50
	.word	1956
	.byte	1,1,20,24
	.word	15043
	.byte	21,1,0,32
	.byte	'Dcm_DslRxPduArray_ast',0,4,132,4,43
	.word	15384
	.byte	1,1,32
	.byte	'Dcm_isFuncTPOnOtherConnection_b',0,4,137,4,29
	.word	150
	.byte	1,1,12
	.word	12049
	.byte	3
	.word	15469
	.byte	32
	.byte	'Dcm_DsldConnTable_pcst',0,4,154,4,62
	.word	15474
	.byte	1,1,32
	.byte	'Dcm_DsldGlobal_st',0,4,159,4,55
	.word	14428
	.byte	1,1,32
	.byte	'Dcm_DsldTimer_st',0,4,167,4,45
	.word	15206
	.byte	1,1,32
	.byte	'Dcm_DslState_u8',0,27,53,29
	.word	150
	.byte	1,1,32
	.byte	'Dcm_DslSubState_u8',0,27,54,29
	.word	150
	.byte	1,1,18,28,148,1,9,4,19
	.byte	'DCM_ROE_CLEARED',0,0,19
	.byte	'DCM_ROE_STOPPED',0,1,19
	.byte	'DCM_ROE_STARTED',0,2,0,17
	.byte	'Dcm_DspRoeEventState_ten',0,28,153,1,2
	.word	15625
	.byte	18,28,231,1,9,4,19
	.byte	'DCM_CONTROLMASK_NO',0,0,19
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,19
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,17
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,28,236,1,2
	.word	15720
	.byte	18,23,203,1,9,4,19
	.byte	'DCM_SUPPORT_READ',0,0,19
	.byte	'DCM_SUPPORT_WRITE',0,1,19
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,31
	.word	150
	.byte	1,1,26
	.word	11065
	.byte	26
	.word	480
	.byte	26
	.word	15837
	.byte	0,3
	.word	15907
	.byte	10,28,239,1,9,44,11
	.byte	'dataAllowedSessRead_u32',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'dataAllowedSecRead_u32',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'adrUserReadModeRule_pfct',0
	.word	15930
	.byte	4,2,35,8,11
	.byte	'dataAllowedSessWrite_u32',0
	.word	819
	.byte	4,2,35,12,11
	.byte	'dataAllowedSecWrite_u32',0
	.word	819
	.byte	4,2,35,16,11
	.byte	'adrUserWriteModeRule_pfct',0
	.word	15930
	.byte	4,2,35,20,11
	.byte	'dataSessBitMask_u32',0
	.word	819
	.byte	4,2,35,24,11
	.byte	'dataSecBitMask_u32',0
	.word	819
	.byte	4,2,35,28,11
	.byte	'adrUserControlModeRule_pfct',0
	.word	15930
	.byte	4,2,35,32,11
	.byte	'dataCtrlMask_en',0
	.word	15720
	.byte	4,2,35,36,11
	.byte	'dataCtrlMaskSize_u8',0
	.word	150
	.byte	1,2,35,40,11
	.byte	'dataIocbirst_b',0
	.word	150
	.byte	1,2,35,41,11
	.byte	'statusmaskIOControl_u8',0
	.word	150
	.byte	1,2,35,42,0,17
	.byte	'Dcm_ExtendedDIDConfig_tst',0,28,141,2,3
	.word	15935
	.byte	10,28,200,2,9,4,11
	.byte	'posnSigBit_u16',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'idxDcmDspDatainfo_u16',0
	.word	480
	.byte	2,2,35,2,0,17
	.byte	'Dcm_SignalDIDConfig_tst',0,28,204,2,3
	.word	16382
	.byte	18,29,31,9,4,19
	.byte	'DCM_RESET_NO_BOOT',0,0,19
	.byte	'DCM_RESET_OEM_BOOT',0,1,19
	.byte	'DCM_RESET_SYS_BOOT',0,2,19
	.byte	'DCM_RESET_DRIVE_TO_DRIVE',0,3,0,17
	.byte	'Dcm_ResetForBootType',0,29,37,2
	.word	16477
	.byte	18,30,205,1,9,4,19
	.byte	'DCM_IOCBI_IDLESTATE',0,0,19
	.byte	'DCM_IOCBI_FCS_ACTIVE',0,1,19
	.byte	'DCM_IOCBI_FCS_PENDING',0,2,19
	.byte	'DCM_IOCBI_RTD_ACTIVE',0,3,19
	.byte	'DCM_IOCBI_RTD_PENDING',0,4,19
	.byte	'DCM_IOCBI_STA_ACTIVE',0,5,19
	.byte	'DCM_IOCBI_STA_PENDING',0,6,19
	.byte	'DCM_IOCBI_RCE_ACTIVE',0,7,19
	.byte	'DCM_IOCBI_RCE_PENDING',0,8,0,17
	.byte	'Dcm_Dsp_IocbiDidStatus_ten',0,30,216,1,4
	.word	16601
	.byte	10,31,26,9,8,11
	.byte	'posnStart_u16',0
	.word	480
	.byte	2,2,35,0,11
	.byte	'dataLength_u16',0
	.word	480
	.byte	2,2,35,2,11
	.byte	'idxSignal_u16',0
	.word	480
	.byte	2,2,35,4,11
	.byte	'dataEndianness_u8',0
	.word	150
	.byte	1,2,35,6,11
	.byte	'dataType_u8',0
	.word	150
	.byte	1,2,35,7,0,17
	.byte	'Dcm_DspRoutineSignalInfo_tst',0,31,33,3
	.word	16854
	.byte	31
	.word	150
	.byte	1,1,26
	.word	11065
	.byte	26
	.word	480
	.byte	26
	.word	150
	.byte	0,3
	.word	17015
	.byte	12
	.word	16854
	.byte	3
	.word	17043
	.byte	12
	.word	17048
	.byte	12
	.word	17048
	.byte	12
	.word	17048
	.byte	12
	.word	17048
	.byte	12
	.word	17048
	.byte	12
	.word	17048
	.byte	10,31,35,9,68,11
	.byte	'dataSecBitMask_u32',0
	.word	819
	.byte	4,2,35,0,11
	.byte	'dataSessBitMask_u32',0
	.word	819
	.byte	4,2,35,4,11
	.byte	'adrUserRidModeRule_pfct',0
	.word	17038
	.byte	4,2,35,8,11
	.byte	'adrStartInSignalRef_cpcst',0
	.word	17053
	.byte	4,2,35,12,11
	.byte	'adrStopInSignalRef_cpcst',0
	.word	17058
	.byte	4,2,35,16,11
	.byte	'adrReqRslInSignalRef_cpcst',0
	.word	17063
	.byte	4,2,35,20,11
	.byte	'adrStartOutSignalRef_cpcst',0
	.word	17068
	.byte	4,2,35,24,11
	.byte	'adrStopOutSignalRef_cpcst',0
	.word	17073
	.byte	4,2,35,28,11
	.byte	'adrReqRsltOutSignalRef_cpcst',0
	.word	17078
	.byte	4,2,35,32,11
	.byte	'dataCtrlOptRecSizeStart_u16',0
	.word	480
	.byte	2,2,35,36,11
	.byte	'dataCtrlOptRecSizeStop_u16',0
	.word	480
	.byte	2,2,35,38,11
	.byte	'dataCtrlOptRecSizeReqRslt_u16',0
	.word	480
	.byte	2,2,35,40,11
	.byte	'dataStsOptRecSizeStart_u16',0
	.word	480
	.byte	2,2,35,42,11
	.byte	'dataStsOptRecSizeStop_u16',0
	.word	480
	.byte	2,2,35,44,11
	.byte	'dataStsOptRecSizeReqRslt_u16',0
	.word	480
	.byte	2,2,35,46,11
	.byte	'dataMinCtrlOptRecSizeStart_u16',0
	.word	480
	.byte	2,2,35,48,11
	.byte	'dataMinCtrlOptRecSizeStop_u16',0
	.word	480
	.byte	2,2,35,50,11
	.byte	'dataMinCtrlOptRecSizeReqRslt_u16',0
	.word	480
	.byte	2,2,35,52,11
	.byte	'dataMinStsOptRecSizeStart_u16',0
	.word	480
	.byte	2,2,35,54,11
	.byte	'dataMinStsOptRecSizeStop_u16',0
	.word	480
	.byte	2,2,35,56,11
	.byte	'dataMinStsOptRecSizeReqRslt_u16',0
	.word	480
	.byte	2,2,35,58,11
	.byte	'nrStartInSignals_u8',0
	.word	150
	.byte	1,2,35,60,11
	.byte	'nrStopInSignals_u8',0
	.word	150
	.byte	1,2,35,61,11
	.byte	'nrReqRslInSignals_u8',0
	.word	150
	.byte	1,2,35,62,11
	.byte	'nrStartOutSignals_u8',0
	.word	150
	.byte	1,2,35,63,11
	.byte	'nrStopOutSignals_u8',0
	.word	150
	.byte	1,2,35,64,11
	.byte	'nrReqRsltOutSignals_u8',0
	.word	150
	.byte	1,2,35,65,0,17
	.byte	'Dcm_DspRoutineInfoType_tst',0,31,69,3
	.word	17083
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,19,1,58,15,59,15,57,15,11
	.byte	15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,38,0,73,19,0,0,13,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39
	.byte	12,63,12,60,12,0,0,14,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,15,46,0,3,8,58,15,59,15,57
	.byte	15,54,15,39,12,63,12,60,12,0,0,16,21,0,54,15,0,0,17,22,0,3,8,58,15,59,15,57,15,73,19,0,0,18,4,1,58,15
	.byte	59,15,57,15,11,15,0,0,19,40,0,3,8,28,13,0,0,20,1,1,11,15,73,19,0,0,21,33,0,47,15,0,0,22,21,0,54,15,39
	.byte	12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,59,0,3,8,0,0,25,21,1,54,15,39,12,0,0,26,5,0,73,19,0
	.byte	0,27,23,1,58,15,59,15,57,15,11,15,0,0,28,4,1,3,8,58,15,59,15,57,15,11,15,0,0,29,21,0,73,19,54,15,39,12
	.byte	0,0,30,53,0,73,19,0,0,31,21,1,73,19,54,15,39,12,0,0,32,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0
	.byte	0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L64:
	.word	.L207-.L206
.L206:
	.half	3
	.word	.L209-.L208
.L208:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\PduR\\PduR_Dcm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Priv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Er_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc_Prot.h',0,0,0,0,0
.L209:
.L207:
	.sdecl	'.debug_info',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_info'
.L65:
	.word	241
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L68,.L67
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_TpRxIndication',0,1,147,6,21,1,1,1
	.word	.L60,.L117,.L59
	.byte	4
	.byte	'id',0,1,147,6,67
	.word	.L118,.L119
	.byte	4
	.byte	'result',0,1,147,6,101
	.word	.L120,.L121
	.byte	5
	.word	.L60,.L117
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_line'
.L67:
	.word	.L211-.L210
.L210:
	.half	3
	.word	.L213-.L212
.L212:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L213:
	.byte	5,5,7,0,5,2
	.word	.L60
	.byte	3,148,6,1,5,9,7,9
	.half	.L214-.L60
	.byte	3,2,1,5,13,9
	.half	.L37-.L214
	.byte	3,13,1,5,45,7,9
	.half	.L215-.L37
	.byte	3,2,1,5,48,9
	.half	.L204-.L215
	.byte	1,5,43,9
	.half	.L39-.L204
	.byte	3,5,1,5,1,9
	.half	.L38-.L39
	.byte	3,4,1,7,9
	.half	.L69-.L38
	.byte	0,1,1
.L211:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_ranges'
.L68:
	.word	-1,.L60,0,.L69-.L60,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_info'
.L70:
	.word	262
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_ResetCopyRxDataStatus',0,1,177,1,22,1,1,1
	.word	.L42,.L122,.L41
	.byte	4
	.byte	'RxPduId',0,1,177,1,78
	.word	.L118,.L123
	.byte	5
	.word	.L42,.L122
	.byte	6
	.byte	'idxRxPduid',0,1,179,1,30
	.word	.L118,.L124
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_line'
.L72:
	.word	.L217-.L216
.L216:
	.half	3
	.word	.L219-.L218
.L218:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L219:
	.byte	5,22,7,0,5,2
	.word	.L42
	.byte	3,180,1,1,5,62,9
	.half	.L174-.L42
	.byte	1,5,13,9
	.half	.L3-.L174
	.byte	3,3,1,5,62,7,9
	.half	.L220-.L3
	.byte	1,5,41,9
	.half	.L221-.L220
	.byte	1,5,62,9
	.half	.L222-.L221
	.byte	1,5,74,9
	.half	.L223-.L222
	.byte	1,5,95,9
	.half	.L224-.L223
	.byte	1,5,69,7,9
	.half	.L225-.L224
	.byte	3,2,1,5,67,9
	.half	.L226-.L225
	.byte	1,5,74,9
	.half	.L4-.L226
	.byte	3,123,1,5,62,9
	.half	.L2-.L4
	.byte	1,5,1,7,9
	.half	.L227-.L2
	.byte	3,8,1,7,9
	.half	.L74-.L227
	.byte	0,1,1
.L217:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L42,0,.L74-.L42,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_info'
.L75:
	.word	280
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_DiscardRequest',0,1,202,1,28,1,1
	.word	.L44,.L125,.L43
	.byte	4
	.byte	'DcmRxPduId',0,1,202,1,77
	.word	.L118,.L126
	.byte	4
	.byte	'Result',0,1,203,1,40
	.word	.L120,.L127
	.byte	5
	.word	.L44,.L125
	.byte	6
	.word	.L128,.L129,.L6
	.byte	7
	.word	.L130,.L129,.L6
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49,16,17
	.byte	1,18,1,0,0,7,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_line'
.L77:
	.word	.L229-.L228
.L228:
	.half	3
	.word	.L231-.L230
.L230:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0,0
.L231:
	.byte	5,26,7,0,5,2
	.word	.L44
	.byte	3,214,1,1,5,5,9
	.half	.L232-.L44
	.byte	1,5,26,9
	.half	.L233-.L232
	.byte	1,5,69,9
	.half	.L234-.L233
	.byte	1,5,67,9
	.half	.L235-.L234
	.byte	1,5,68,9
	.half	.L236-.L235
	.byte	3,1,1,5,66,9
	.half	.L237-.L236
	.byte	1,5,9,9
	.half	.L238-.L237
	.byte	3,2,1,5,26,9
	.half	.L239-.L238
	.byte	1,5,8,9
	.half	.L240-.L239
	.byte	1,5,14,7,9
	.half	.L241-.L240
	.byte	3,1,1,5,36,9
	.half	.L242-.L241
	.byte	1,5,9,7,9
	.half	.L243-.L242
	.byte	3,2,1,9
	.half	.L244-.L243
	.byte	3,1,1,4,2,5,5,9
	.half	.L129-.L244
	.byte	3,208,126,1,4,1,5,1,9
	.half	.L6-.L129
	.byte	3,207,1,1,7,9
	.half	.L79-.L6
	.byte	0,1,1
.L229:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L44,0,.L79-.L44,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_info'
.L80:
	.word	262
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_ReloadP2maxValue',0,1,129,3,28,1,1
	.word	.L46,.L131,.L45
	.byte	4
	.byte	'DcmRxPduId',0,1,129,3,79
	.word	.L118,.L132
	.byte	4
	.byte	'idxProtocol_u8',0,1,129,3,111
	.word	.L120,.L133
	.byte	5
	.word	.L46,.L131
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_line'
.L82:
	.word	.L246-.L245
.L245:
	.half	3
	.word	.L248-.L247
.L247:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L248:
	.byte	5,1,7,0,5,2
	.word	.L46
	.byte	3,163,3,1,7,9
	.half	.L84-.L46
	.byte	0,1,1
.L246:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L46,0,.L84-.L46,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_info'
.L85:
	.word	288
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_ProcessRequest',0,1,178,3,28,1,1
	.word	.L48,.L134,.L47
	.byte	4
	.byte	'DcmRxPduId',0,1,178,3,77
	.word	.L118,.L135
	.byte	5
	.word	.L48,.L134
	.byte	6
	.byte	'idxProtocol_u8',0,1,180,3,25
	.word	.L120,.L136
	.byte	7
	.word	.L137,.L138,.L8
	.byte	8
	.word	.L139,.L138,.L8
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_line'
.L87:
	.word	.L250-.L249
.L249:
	.half	3
	.word	.L252-.L251
.L251:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L252:
	.byte	5,28,7,0,5,2
	.word	.L48
	.byte	3,177,3,1,5,65,9
	.half	.L176-.L48
	.byte	3,2,1,5,85,9
	.half	.L253-.L176
	.byte	1,5,64,9
	.half	.L254-.L253
	.byte	1,5,42,9
	.half	.L255-.L254
	.byte	1,5,64,9
	.half	.L256-.L255
	.byte	1,5,98,9
	.half	.L257-.L256
	.byte	1,5,41,9
	.half	.L177-.L257
	.byte	3,2,1,5,26,9
	.half	.L175-.L177
	.byte	3,16,1,5,43,9
	.half	.L258-.L175
	.byte	1,5,9,9
	.half	.L259-.L258
	.byte	1,5,13,7,9
	.half	.L260-.L259
	.byte	3,7,1,9
	.half	.L261-.L260
	.byte	3,1,1,5,5,9
	.half	.L138-.L261
	.byte	3,168,125,1,5,1,9
	.half	.L8-.L138
	.byte	3,220,2,1,7,9
	.half	.L89-.L8
	.byte	0,1,1
.L250:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L48,0,.L89-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_info'
.L90:
	.word	252
	.half	3
	.word	.L91
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L93,.L92
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_SendNrc21',0,1,229,3,28,1,1
	.word	.L50,.L140,.L49
	.byte	4
	.byte	'DcmRxPduId',0,1,229,3,72
	.word	.L118,.L141
	.byte	5
	.word	.L50,.L140
	.byte	6
	.byte	'pduInfo_st',0,1,231,3,32
	.word	.L142,.L143
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_line'
.L92:
	.word	.L263-.L262
.L262:
	.half	3
	.word	.L265-.L264
.L264:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L265:
	.byte	5,28,7,0,5,2
	.word	.L50
	.byte	3,228,3,1,5,45,9
	.half	.L180-.L50
	.byte	3,2,1,5,43,9
	.half	.L266-.L180
	.byte	1,5,8,9
	.half	.L267-.L266
	.byte	3,2,1,5,5,9
	.half	.L268-.L267
	.byte	1,5,93,7,9
	.half	.L269-.L268
	.byte	3,2,1,5,111,9
	.half	.L179-.L269
	.byte	1,5,9,9
	.half	.L270-.L179
	.byte	1,5,34,7,9
	.half	.L271-.L270
	.byte	3,2,1,5,13,9
	.half	.L272-.L271
	.byte	1,5,34,9
	.half	.L273-.L272
	.byte	1,5,69,9
	.half	.L274-.L273
	.byte	1,5,67,9
	.half	.L275-.L274
	.byte	1,5,9,9
	.half	.L10-.L275
	.byte	3,126,1,9
	.half	.L9-.L10
	.byte	3,7,1,5,1,9
	.half	.L11-.L9
	.byte	3,2,1,7,9
	.half	.L94-.L11
	.byte	0,1,1
.L263:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_ranges'
.L93:
	.word	-1,.L50,0,.L94-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_info'
.L95:
	.word	293
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L98,.L97
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_CheckDiagnosticStatus',0,1,131,4,28,1,1
	.word	.L52,.L144,.L51
	.byte	4
	.byte	'DcmRxPduId',0,1,131,4,84
	.word	.L118,.L145
	.byte	4
	.byte	'idxProtocol_u8',0,1,132,4,30
	.word	.L120,.L146
	.byte	4
	.byte	'RxBuffer_pu8',0,1,132,4,86
	.word	.L147,.L148
	.byte	5
	.word	.L52,.L144
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_line'
.L97:
	.word	.L277-.L276
.L276:
	.half	3
	.word	.L279-.L278
.L278:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L279:
	.byte	5,38,7,0,5,2
	.word	.L52
	.byte	3,133,4,1,5,17,9
	.half	.L280-.L52
	.byte	1,5,38,9
	.half	.L281-.L280
	.byte	1,5,50,9
	.half	.L282-.L281
	.byte	1,5,5,9
	.half	.L283-.L282
	.byte	1,5,31,7,9
	.half	.L284-.L283
	.byte	3,2,1,5,48,9
	.half	.L285-.L284
	.byte	1,5,9,9
	.half	.L286-.L285
	.byte	1,5,34,7,9
	.half	.L287-.L286
	.byte	3,2,1,5,16,9
	.half	.L288-.L287
	.byte	1,5,100,7,9
	.half	.L289-.L288
	.byte	1,5,49,7,9
	.half	.L290-.L289
	.byte	3,3,1,5,69,9
	.half	.L291-.L290
	.byte	1,5,92,9
	.half	.L292-.L291
	.byte	3,127,1,5,70,9
	.half	.L293-.L292
	.byte	1,5,92,9
	.half	.L294-.L293
	.byte	1,5,82,9
	.half	.L295-.L294
	.byte	3,1,1,5,49,9
	.half	.L296-.L295
	.byte	3,127,1,5,69,9
	.half	.L297-.L296
	.byte	1,5,98,9
	.half	.L298-.L297
	.byte	3,1,1,5,112,9
	.half	.L14-.L298
	.byte	3,125,1,5,58,9
	.half	.L13-.L14
	.byte	3,8,1,5,13,9
	.half	.L299-.L13
	.byte	1,5,53,7,9
	.half	.L300-.L299
	.byte	3,3,1,5,73,9
	.half	.L301-.L300
	.byte	1,5,92,9
	.half	.L302-.L301
	.byte	3,127,1,5,70,9
	.half	.L303-.L302
	.byte	1,5,92,9
	.half	.L304-.L303
	.byte	1,5,86,9
	.half	.L305-.L304
	.byte	3,1,1,5,49,9
	.half	.L306-.L305
	.byte	3,127,1,5,69,9
	.half	.L307-.L306
	.byte	1,5,102,9
	.half	.L308-.L307
	.byte	3,1,1,5,1,9
	.half	.L12-.L308
	.byte	3,4,1,7,9
	.half	.L99-.L12
	.byte	0,1,1
.L277:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_ranges'
.L98:
	.word	-1,.L52,0,.L99-.L52,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_info'
.L100:
	.word	260
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_UpdateDSLstate',0,1,166,4,28,1,1
	.word	.L54,.L149,.L53
	.byte	4
	.byte	'DcmRxPduId',0,1,166,4,77
	.word	.L118,.L150
	.byte	5
	.word	.L54,.L149
	.byte	6
	.word	.L128,.L151,.L18
	.byte	7
	.word	.L130,.L151,.L18
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49,16,17
	.byte	1,18,1,0,0,7,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_line'
.L102:
	.word	.L310-.L309
.L309:
	.half	3
	.word	.L312-.L311
.L311:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0,0
.L312:
	.byte	5,84,7,0,5,2
	.word	.L54
	.byte	3,168,4,1,5,31,9
	.half	.L313-.L54
	.byte	1,5,51,9
	.half	.L314-.L313
	.byte	1,5,30,9
	.half	.L315-.L314
	.byte	1,5,8,9
	.half	.L316-.L315
	.byte	1,5,30,9
	.half	.L317-.L316
	.byte	1,5,64,9
	.half	.L318-.L317
	.byte	1,5,101,9
	.half	.L319-.L318
	.byte	1,5,5,9
	.half	.L320-.L319
	.byte	1,5,13,7,9
	.half	.L321-.L320
	.byte	3,21,1,9
	.half	.L322-.L321
	.byte	3,1,1,4,2,5,5,9
	.half	.L151-.L322
	.byte	3,239,123,1,4,1,5,1,9
	.half	.L18-.L151
	.byte	3,157,4,1,7,9
	.half	.L104-.L18
	.byte	0,1,1
.L310:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L54,0,.L104-.L54,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_info'
.L105:
	.word	427
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L108,.L107
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_isFunctionalTesterPresentProcessed',0,1,220,4,31
	.word	.L120
	.byte	1,1
	.word	.L56,.L152,.L55
	.byte	4
	.byte	'DcmRxPduId',0,1,220,4,100
	.word	.L118,.L153
	.byte	5
	.word	.L56,.L152
	.byte	6
	.byte	'processStatus_b',0,1,222,4,28
	.word	.L120,.L154
	.byte	7
	.word	.L128,.L22,.L23
	.byte	8
	.word	.L130,.L22,.L23
	.byte	0,7
	.word	.L155,.L20,.L156
	.byte	9
	.word	.L157,.L158
	.byte	10
	.word	.L159,.L20,.L156
	.byte	6
	.byte	'RequestLength',0,1,137,1,34
	.word	.L118,.L160
	.byte	0,0,7
	.word	.L161,.L156,.L27
	.byte	10
	.word	.L162,.L156,.L27
	.byte	6
	.byte	'retval_b',0,2,144,7,13
	.word	.L120,.L163
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,0,49,16,17,1,18,1,0,0,9,5,0,49,16,2
	.byte	6,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_line'
.L107:
	.word	.L324-.L323
.L323:
	.half	3
	.word	.L326-.L325
.L325:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0,0
.L326:
	.byte	5,31,7,0,5,2
	.word	.L56
	.byte	3,219,4,1,5,44,9
	.half	.L185-.L56
	.byte	3,2,1,5,38,9
	.half	.L186-.L185
	.byte	3,2,1,5,17,9
	.half	.L327-.L186
	.byte	1,5,38,9
	.half	.L328-.L327
	.byte	1,5,50,9
	.half	.L329-.L328
	.byte	1,5,5,9
	.half	.L330-.L329
	.byte	1,5,21,7,9
	.half	.L331-.L330
	.byte	3,2,1,5,9,9
	.half	.L332-.L331
	.byte	1,5,29,7,9
	.half	.L333-.L332
	.byte	3,2,1,5,41,9
	.half	.L334-.L333
	.byte	3,1,1,5,76,9
	.half	.L184-.L334
	.byte	3,1,1,5,74,9
	.half	.L335-.L184
	.byte	1,5,75,9
	.half	.L336-.L335
	.byte	3,1,1,5,73,9
	.half	.L337-.L336
	.byte	1,5,18,9
	.half	.L338-.L337
	.byte	3,2,1,5,17,9
	.half	.L339-.L338
	.byte	1,5,72,7,9
	.half	.L340-.L339
	.byte	1,5,69,9
	.half	.L341-.L340
	.byte	1,5,40,7,9
	.half	.L21-.L341
	.byte	3,1,1,4,3,5,5,7,9
	.half	.L22-.L21
	.byte	3,196,123,1,4,1,5,13,9
	.half	.L23-.L22
	.byte	3,187,4,1,5,50,9
	.half	.L20-.L23
	.byte	3,160,124,1,5,67,9
	.half	.L342-.L20
	.byte	1,5,5,9
	.half	.L188-.L342
	.byte	3,20,1,5,16,9
	.half	.L25-.L188
	.byte	3,212,3,1,4,2,5,5,7,9
	.half	.L156-.L25
	.byte	3,163,2,1,4,1,5,46,9
	.half	.L27-.L156
	.byte	3,222,125,1,5,86,7,9
	.half	.L343-.L27
	.byte	1,5,33,9
	.half	.L344-.L343
	.byte	3,2,1,5,45,9
	.half	.L345-.L344
	.byte	3,1,1,5,80,9
	.half	.L187-.L345
	.byte	3,1,1,5,78,9
	.half	.L346-.L187
	.byte	1,5,40,9
	.half	.L347-.L346
	.byte	3,2,1,5,5,9
	.half	.L19-.L347
	.byte	3,4,1,5,1,9
	.half	.L30-.L19
	.byte	3,1,1,7,9
	.half	.L109-.L30
	.byte	0,1,1
.L324:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_ranges'
.L108:
	.word	-1,.L56,0,.L109-.L56,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_info'
.L110:
	.word	328
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L113,.L112
	.byte	2
	.word	.L61
	.byte	3
	.byte	'Dcm_Prv_ProcessRxIndication',0,1,214,5,28,1,1
	.word	.L58,.L164,.L57
	.byte	4
	.byte	'DcmRxPduId',0,1,214,5,82
	.word	.L118,.L165
	.byte	5
	.word	.L58,.L164
	.byte	6
	.byte	'idxProtocol_u8',0,1,216,5,25
	.word	.L120,.L166
	.byte	6
	.byte	'rxBuffer_pu8',0,1,217,5,44
	.word	.L167,.L168
	.byte	7
	.word	.L169,.L170,.L33
	.byte	8
	.word	.L171,.L172
	.byte	9
	.word	.L173,.L170,.L33
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_line'
.L112:
	.word	.L349-.L348
.L348:
	.half	3
	.word	.L351-.L350
.L350:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0,0,0,0,0
.L351:
	.byte	5,28,7,0,5,2
	.word	.L58
	.byte	3,213,5,1,5,66,9
	.half	.L193-.L58
	.byte	3,2,1,5,43,9
	.half	.L352-.L193
	.byte	1,5,66,9
	.half	.L353-.L352
	.byte	1,5,86,9
	.half	.L354-.L353
	.byte	1,5,65,9
	.half	.L355-.L354
	.byte	1,5,43,9
	.half	.L356-.L355
	.byte	1,5,65,9
	.half	.L357-.L356
	.byte	1,5,99,9
	.half	.L358-.L357
	.byte	1,5,20,9
	.half	.L194-.L358
	.byte	3,6,1,5,42,9
	.half	.L359-.L194
	.byte	1,5,41,9
	.half	.L360-.L359
	.byte	1,5,57,9
	.half	.L361-.L360
	.byte	1,5,61,9
	.half	.L195-.L361
	.byte	3,3,1,5,17,9
	.half	.L192-.L195
	.byte	3,2,1,5,5,9
	.half	.L362-.L192
	.byte	1,5,64,7,9
	.half	.L363-.L362
	.byte	3,3,1,5,9,9
	.half	.L197-.L363
	.byte	1,5,13,7,9
	.half	.L170-.L197
	.byte	3,214,122,1,5,58,9
	.half	.L364-.L170
	.byte	1,5,78,9
	.half	.L365-.L364
	.byte	1,5,57,9
	.half	.L366-.L365
	.byte	1,5,35,9
	.half	.L367-.L366
	.byte	1,5,57,9
	.half	.L368-.L367
	.byte	1,5,91,9
	.half	.L369-.L368
	.byte	1,5,34,9
	.half	.L370-.L369
	.byte	1,5,108,9
	.half	.L371-.L370
	.byte	1,5,5,9
	.half	.L372-.L371
	.byte	1,5,13,9
	.half	.L33-.L372
	.byte	3,172,5,1,5,35,7,9
	.half	.L373-.L33
	.byte	3,2,1,5,9,9
	.half	.L32-.L373
	.byte	3,124,1,5,65,9
	.half	.L31-.L32
	.byte	3,13,1,5,63,9
	.half	.L374-.L31
	.byte	1,5,64,9
	.half	.L375-.L374
	.byte	3,3,1,5,9,9
	.half	.L200-.L375
	.byte	1,5,36,7,9
	.half	.L376-.L200
	.byte	3,2,1,5,1,9
	.half	.L35-.L376
	.byte	3,3,1,7,9
	.half	.L114-.L35
	.byte	0,1,1
.L349:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_ranges'
.L113:
	.word	-1,.L58,0,.L114-.L58,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_DsldPduInfo_st')
	.sect	'.debug_info'
.L115:
	.word	182
	.half	3
	.word	.L116
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_RxIndication.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L61
	.byte	3
	.byte	'Dcm_DsldPduInfo_st',0,6,41,26
	.word	.L142
	.byte	1,5,3
	.word	Dcm_DsldPduInfo_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DsldPduInfo_st')
	.sect	'.debug_abbrev'
.L116:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_loc'
.L145:
	.word	-1,.L52,0,.L182-.L52
	.half	1
	.byte	84
	.word	.L13-.L52,.L183-.L52
	.half	1
	.byte	84
	.word	0,0
.L51:
	.word	-1,.L52,0,.L144-.L52
	.half	2
	.byte	138,0
	.word	0,0
.L148:
	.word	-1,.L52,0,.L14-.L52
	.half	1
	.byte	100
	.word	.L13-.L52,.L12-.L52
	.half	1
	.byte	100
	.word	0,0
.L146:
	.word	-1,.L52,0,.L14-.L52
	.half	1
	.byte	85
	.word	.L13-.L52,.L12-.L52
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_loc'
.L126:
	.word	-1,.L44,0,.L125-.L44
	.half	1
	.byte	84
	.word	0,0
.L43:
	.word	-1,.L44,0,.L125-.L44
	.half	2
	.byte	138,0
	.word	0,0
.L127:
	.word	-1,.L44,0,.L125-.L44
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_loc'
.L135:
	.word	-1,.L48,0,.L175-.L48
	.half	1
	.byte	84
	.word	.L176-.L48,.L134-.L48
	.half	1
	.byte	88
	.word	0,0
.L47:
	.word	-1,.L48,0,.L134-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L136:
	.word	-1,.L48,.L177-.L48,.L175-.L48
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_loc'
.L172:
	.word	0,0
.L165:
	.word	-1,.L58,0,.L192-.L58
	.half	1
	.byte	84
	.word	.L193-.L58,.L164-.L58
	.half	1
	.byte	88
	.word	.L196-.L58,.L197-.L58
	.half	1
	.byte	84
	.word	.L198-.L58,.L32-.L58
	.half	1
	.byte	84
	.word	.L199-.L58,.L200-.L58
	.half	1
	.byte	84
	.word	.L201-.L58,.L35-.L58
	.half	1
	.byte	84
	.word	0,0
.L57:
	.word	-1,.L58,0,.L164-.L58
	.half	2
	.byte	138,0
	.word	0,0
.L166:
	.word	-1,.L58,.L194-.L58,.L192-.L58
	.half	1
	.byte	85
	.word	0,0
.L168:
	.word	-1,.L58,.L195-.L58,.L192-.L58
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_loc'
.L132:
	.word	-1,.L46,0,.L131-.L46
	.half	1
	.byte	84
	.word	0,0
.L45:
	.word	-1,.L46,0,.L131-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L133:
	.word	-1,.L46,0,.L131-.L46
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_loc'
.L41:
	.word	-1,.L42,0,.L122-.L42
	.half	2
	.byte	138,0
	.word	0,0
.L123:
	.word	-1,.L42,0,.L122-.L42
	.half	1
	.byte	84
	.word	0,0
.L124:
	.word	-1,.L42,.L174-.L42,.L122-.L42
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_loc'
.L141:
	.word	-1,.L50,0,.L179-.L50
	.half	1
	.byte	84
	.word	.L180-.L50,.L140-.L50
	.half	1
	.byte	88
	.word	.L9-.L50,.L181-.L50
	.half	1
	.byte	84
	.word	0,0
.L49:
	.word	-1,.L50,0,.L178-.L50
	.half	2
	.byte	138,0
	.word	.L178-.L50,.L140-.L50
	.half	2
	.byte	138,8
	.word	.L140-.L50,.L140-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L143:
	.word	-1,.L50,0,.L140-.L50
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_loc'
.L150:
	.word	-1,.L54,0,.L149-.L54
	.half	1
	.byte	84
	.word	0,0
.L53:
	.word	-1,.L54,0,.L149-.L54
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_loc'
.L158:
	.word	0,0
.L153:
	.word	-1,.L56,0,.L184-.L56
	.half	1
	.byte	84
	.word	.L185-.L56,.L152-.L56
	.half	1
	.byte	89
	.word	.L20-.L56,.L187-.L56
	.half	1
	.byte	84
	.word	.L190-.L56,.L19-.L56
	.half	1
	.byte	84
	.word	0,0
.L55:
	.word	-1,.L56,0,.L152-.L56
	.half	2
	.byte	138,0
	.word	0,0
.L160:
	.word	-1,.L56,.L188-.L56,.L189-.L56
	.half	1
	.byte	95
	.word	0,0
.L154:
	.word	-1,.L56,.L186-.L56,.L152-.L56
	.half	1
	.byte	88
	.word	.L191-.L56,.L152-.L56
	.half	1
	.byte	82
	.word	0,0
.L163:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_loc'
.L59:
	.word	-1,.L60,0,.L117-.L60
	.half	2
	.byte	138,0
	.word	0,0
.L119:
	.word	-1,.L60,0,.L202-.L60
	.half	1
	.byte	84
	.word	.L37-.L60,.L204-.L60
	.half	1
	.byte	84
	.word	.L39-.L60,.L38-.L60
	.half	1
	.byte	84
	.word	0,0
.L121:
	.word	-1,.L60,0,.L203-.L60
	.half	1
	.byte	85
	.word	.L37-.L60,.L204-.L60
	.half	1
	.byte	85
	.word	.L39-.L60,.L38-.L60
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L377:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ResetCopyRxDataStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L377,.L42,.L122-.L42
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_DiscardRequest')
	.sect	'.debug_frame'
	.word	24
	.word	.L377,.L44,.L125-.L44
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ReloadP2maxValue')
	.sect	'.debug_frame'
	.word	24
	.word	.L377,.L46,.L131-.L46
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ProcessRequest')
	.sect	'.debug_frame'
	.word	12
	.word	.L377,.L48,.L134-.L48
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SendNrc21')
	.sect	'.debug_frame'
	.word	36
	.word	.L377,.L50,.L140-.L50
	.byte	4
	.word	(.L178-.L50)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L140-.L178)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_CheckDiagnosticStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L377,.L52,.L144-.L52
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_UpdateDSLstate')
	.sect	'.debug_frame'
	.word	24
	.word	.L377,.L54,.L149-.L54
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_isFunctionalTesterPresentProcessed')
	.sect	'.debug_frame'
	.word	12
	.word	.L377,.L56,.L152-.L56
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ProcessRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L377,.L58,.L164-.L58
	.sdecl	'.debug_frame',debug,cluster('Dcm_TpRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L377,.L60,.L117-.L60

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   816  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   817  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   818  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_RxIndication.c	   819  #include "Dcm_Cfg_MemMap.h"

	; Module end
