	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14780a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd_Mode8.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode8.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode8.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	10583
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode8.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	158
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	160
	.byte	5
	.byte	'char',0,1,6,4
	.byte	'sint8',0,2,76,25
	.word	183
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	205
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	236
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	273
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'uint64',0,2,111,30
	.word	304
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	205
	.byte	4
	.byte	'StatusType',0,3,191,1,27
	.word	205
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	205
	.byte	6,3,206,1,9,8,7
	.byte	'vendorID',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	205
	.byte	1,2,35,6,0,4
	.byte	'Std_VersionInfoType',0,3,213,1,3
	.word	405
	.byte	4
	.byte	'PduIdType',0,4,22,19
	.word	236
	.byte	4
	.byte	'PduLengthType',0,4,26,19
	.word	236
	.byte	8,5,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,118,3
	.word	595
	.byte	4
	.byte	'NetworkHandleType',0,5,128,1,17
	.word	205
	.byte	4
	.byte	'Can_IdType',0,6,32,16
	.word	273
	.byte	4
	.byte	'Can_HwHandleType',0,6,43,16
	.word	236
	.byte	6,7,93,9,8,7
	.byte	'Class',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'OsTrapInfoType',0,7,97,3
	.word	742
	.byte	10,68
	.word	273
	.byte	11,16,0,6,7,154,1,9,68,7
	.byte	'store',0
	.word	822
	.byte	68,2,35,0,0,10,68
	.word	831
	.byte	11,0,0,4
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	853
	.byte	4
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	273
	.byte	6,7,175,1,9,8,7
	.byte	'sp',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	913
	.byte	4
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	913
	.byte	12,1,1,3
	.word	998
	.byte	4
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	1001
	.byte	4
	.byte	'ApplicationType',0,7,193,1,23
	.word	205
	.byte	13
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,7
	.byte	'app_id',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,1,0,4
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	1064
	.byte	4
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	273
	.byte	4
	.byte	'AreaIdType',0,7,204,1,16
	.word	236
	.byte	4
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	273
	.byte	4
	.byte	'TickType',0,7,221,1,22
	.word	273
	.byte	4
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	273
	.byte	3
	.word	273
	.byte	4
	.byte	'Os_Lockable',0,7,234,1,18
	.word	1306
	.byte	4
	.byte	'CoreIdType',0,7,236,1,16
	.word	236
	.byte	4
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	236
	.byte	8,7,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,4
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	1376
	.byte	8,7,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,4
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	1469
	.byte	14
	.byte	'void',0,3
	.word	1581
	.byte	15,1,1,16
	.word	205
	.byte	16
	.word	1587
	.byte	0,3
	.word	1592
	.byte	4
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	1606
	.byte	13
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,7
	.byte	'elapsed',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	913
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	913
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	913
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,40,0,4
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	1641
	.byte	3
	.word	1641
	.byte	4
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	1839
	.byte	4
	.byte	'EventMaskType',0,7,206,2,15
	.word	205
	.byte	4
	.byte	'Os_imaskType',0,7,211,2,16
	.word	273
	.byte	13
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,7
	.byte	'meter',0
	.word	1641
	.byte	48,2,35,0,0,4
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	1918
	.byte	3
	.word	1918
	.byte	17
	.word	1979
	.byte	13
	.byte	'Os_ISRType_s',0,7,216,2,16,24,7
	.byte	'entry_function',0
	.word	1006
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	1984
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,21,0,4
	.byte	'Os_ISRType',0,7,223,2,3
	.word	1989
	.byte	3
	.word	998
	.byte	17
	.word	1989
	.byte	3
	.word	2148
	.byte	4
	.byte	'ISRType',0,7,224,2,46
	.word	2153
	.byte	4
	.byte	'Os_bitmask',0,7,239,2,22
	.word	273
	.byte	4
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	273
	.byte	4
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	273
	.byte	4
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	273
	.byte	18,7,243,2,9,4,7
	.byte	'p0',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	273
	.byte	4,2,35,0,0,4
	.byte	'Os_psetType',0,7,247,2,3
	.word	2261
	.byte	18,7,249,2,9,4,7
	.byte	't0',0
	.word	273
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	273
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	273
	.byte	4,2,35,0,0,4
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	2325
	.byte	4
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	205
	.byte	13
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	862
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	1641
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	205
	.byte	1,2,35,116,0,4
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	2423
	.byte	10,68
	.word	831
	.byte	11,0,0,3
	.word	2423
	.byte	17
	.word	2549
	.byte	13
	.byte	'Os_TaskType_s',0,7,134,3,16,40,7
	.byte	'dynamic',0
	.word	2554
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	1006
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2261
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2325
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	236
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	273
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	205
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,38,0,4
	.byte	'Os_TaskType',0,7,146,3,3
	.word	2559
	.byte	17
	.word	2559
	.byte	3
	.word	2809
	.byte	4
	.byte	'TaskType',0,7,147,3,47
	.word	2814
	.byte	19
	.byte	'Os_TaskStateType',0,7,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,4
	.byte	'TaskStateType',0,7,156,3,31
	.word	2837
	.byte	18,7,167,3,3,4,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,7
	.byte	'saved_priority',0
	.word	2924
	.byte	4,2,35,0,0,4
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	2947
	.byte	3
	.word	2947
	.byte	17
	.word	3027
	.byte	13
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,7
	.byte	'dynamic',0
	.word	3032
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,8,0,4
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	3037
	.byte	6,7,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	273
	.byte	4,2,35,8,0,4
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	3136
	.byte	6,7,206,3,9,8,7
	.byte	'Running',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	3231
	.byte	20
	.word	205
	.byte	1,1,3
	.word	3317
	.byte	4
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	3324
	.byte	13
	.byte	's_swd',0,7,222,3,12,4,7
	.byte	'count',0
	.word	273
	.byte	4,2,35,0,0,18,7,221,3,3,4,7
	.byte	'sw',0
	.word	3360
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3388
	.byte	4,2,35,0,0,4
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	3407
	.byte	3
	.word	3407
	.byte	17
	.word	3485
	.byte	13
	.byte	'Os_CounterType_s',0,7,227,3,16,28,7
	.byte	'dynamic',0
	.word	3490
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3329
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	3136
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	1587
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,25,0,4
	.byte	'Os_CounterType',0,7,234,3,3
	.word	3495
	.byte	3
	.word	3317
	.byte	17
	.word	3495
	.byte	3
	.word	3647
	.byte	4
	.byte	'CounterType',0,7,235,3,52
	.word	3652
	.byte	19
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,4
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	3678
	.byte	17
	.word	.L6-.L3
	.byte	3
	.word	3878
	.byte	4
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	3883
	.byte	13
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,7
	.byte	'match',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	3888
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	3678
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	236
	.byte	2,2,35,12,0,3
	.word	3915
	.byte	17
	.word	4008
.L6:
	.byte	13
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,7
	.byte	'dynamic',0
	.word	4013
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	3657
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	205
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	236
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	205
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,14,0,4
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	4018
	.byte	17
	.word	4018
	.byte	3
	.word	4198
	.byte	17
	.word	3495
	.byte	3
	.word	4208
	.byte	21
	.word	1311
	.byte	21
	.word	2261
	.byte	21
	.word	2158
	.byte	21
	.word	2819
	.byte	21
	.word	2325
	.byte	21
	.word	205
	.byte	21
	.word	2819
	.byte	13
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	742
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4218
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4223
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4228
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4233
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4238
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	1844
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	1641
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	205
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4243
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	913
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	205
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4248
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	913
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	205
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	205
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	205
	.byte	1,2,35,110,0,4
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	4253
	.byte	3
	.word	273
	.byte	17
	.word	1989
	.byte	3
	.word	4709
	.byte	17
	.word	2559
	.byte	3
	.word	4719
	.byte	3
	.word	1641
	.byte	13
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	862
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	205
	.byte	1,2,35,92,0,4
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	4734
	.byte	4
	.byte	'Can_TxObjPriorityClassType',0,8,219,3,16
	.word	273
	.byte	13
	.byte	'Can_TxHwObjectConfigType',0,8,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Can_TxHwObjectConfigType',0,8,252,3,3
	.word	5011
	.byte	13
	.byte	'Can_RxHwObjectConfigType',0,8,129,4,16,12,7
	.byte	'MaskRef',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	205
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	205
	.byte	1,2,35,9,0,4
	.byte	'Can_RxHwObjectConfigType',0,8,147,4,3
	.word	5147
	.byte	10,4
	.word	205
	.byte	11,3,0,13
	.byte	'Can_ControllerMOMapConfigType',0,8,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	5287
	.byte	4,2,35,0,0,4
	.byte	'Can_ControllerMOMapConfigType',0,8,184,4,3
	.word	5296
	.byte	13
	.byte	'Can_NPCRValueType',0,8,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	236
	.byte	2,2,35,0,0,4
	.byte	'Can_NPCRValueType',0,8,191,4,3
	.word	5397
	.byte	13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	236
	.byte	2,2,35,4,0,4
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,198,4,3
	.word	5472
	.byte	17
	.word	5472
	.byte	3
	.word	5637
	.byte	13
	.byte	'Can_BaudrateConfigPtrType',0,8,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5642
	.byte	4,2,35,0,0,4
	.byte	'Can_BaudrateConfigPtrType',0,8,204,4,3
	.word	5647
	.byte	13
	.byte	'Can_EventHandlingType',0,8,226,4,16,4,7
	.byte	'CanEventType',0
	.word	5287
	.byte	4,2,35,0,0,4
	.byte	'Can_EventHandlingType',0,8,229,4,3
	.word	5747
	.byte	4
	.byte	'Rte_TransformerErrorCode',0,9,130,1,15
	.word	205
	.byte	4
	.byte	'Rte_TransformerClass',0,9,131,1,15
	.word	205
	.byte	6,9,168,1,9,12,7
	.byte	'in',0
	.word	1587
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	1587
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	205
	.byte	1,2,35,10,0,4
	.byte	'Rte_QDynType',0,9,173,1,3
	.word	5893
	.byte	8,9,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,4
	.byte	'Rte_NotificationType',0,9,182,1,3
	.word	5980
	.byte	10,128,8
	.word	205
	.byte	11,255,7,0,4
	.byte	'Impl_NVM_DstPtrType_1024',0,10,50,15
	.word	6078
	.byte	4
	.byte	'CanIf_u32_impl',0,10,69,16
	.word	273
	.byte	4
	.byte	'CanIf_u16_impl',0,10,71,16
	.word	236
	.byte	4
	.byte	'CanIf_u8_impl',0,10,73,15
	.word	205
	.byte	4
	.byte	'CanIf_ControllerModeType_Enum_impl',0,10,88,15
	.word	205
	.byte	4
	.byte	'CanIf_PduModeType_Enum_impl',0,10,90,15
	.word	205
	.byte	6,10,92,9,2,7
	.byte	'DeviceMode',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	205
	.byte	1,2,35,1,0,4
	.byte	'CanIf_ControllerStateType_struct_impl',0,10,95,3
	.word	6269
	.byte	4
	.byte	'CanIf_NotifStatusType_Enum_impl',0,10,100,15
	.word	205
	.byte	4
	.byte	'CanSM_boolean_Impl',0,10,120,15
	.word	205
	.byte	4
	.byte	'CanSM_u8_Impl',0,10,123,15
	.word	205
	.byte	4
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,10,128,1,15
	.word	205
	.byte	4
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,10,132,1,15
	.word	205
	.byte	4
	.byte	'CanSM_u16_Impl',0,10,136,1,16
	.word	236
	.byte	4
	.byte	'CanSM_TimerStateType_Enum_impl',0,10,138,1,15
	.word	205
	.byte	6,10,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	205
	.byte	1,2,35,2,0,4
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,10,143,1,3
	.word	6610
	.byte	4
	.byte	'Com_impl_u16',0,10,154,1,16
	.word	236
	.byte	4
	.byte	'Com_impl_u8',0,10,157,1,15
	.word	205
	.byte	4
	.byte	'ComM_uint32_Impl',0,10,173,1,16
	.word	273
	.byte	4
	.byte	'ComM_uint16_Impl',0,10,175,1,16
	.word	236
	.byte	4
	.byte	'ComM_uint8_Impl',0,10,177,1,15
	.word	205
	.byte	4
	.byte	'ComM_bool_Impl',0,10,179,1,15
	.word	205
	.byte	6,10,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	205
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	205
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	205
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	205
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	205
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	205
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	205
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	205
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	205
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	205
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	205
	.byte	1,2,35,21,0,4
	.byte	'ComM_ChannelStruct_Impl',0,10,197,1,3
	.word	6842
	.byte	6,10,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	205
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	205
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	205
	.byte	1,2,35,8,0,4
	.byte	'ComM_UserStruct_Impl',0,10,214,1,3
	.word	7346
	.byte	4
	.byte	'Dcm_IOOperationResponseType',0,10,252,1,15
	.word	205
	.byte	4
	.byte	'Dcm_NegativeResponseCodeType',0,10,132,2,15
	.word	205
	.byte	4
	.byte	'Dcm_OpStatusType',0,10,134,2,15
	.word	205
	.byte	4
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	10,138,2,15
	.word	205
	.byte	4
	.byte	'Dcm_SecLevelType',0,10,142,2,15
	.word	205
	.byte	4
	.byte	'Dcm_SesCtrlType',0,10,144,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,10,146,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,10,150,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,10,154,2,15
	.word	205
	.byte	4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,10,243,3,34
	.word	6089
	.byte	10,128,8
	.word	205
	.byte	11,255,7,0,4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,10,246,3,34
	.word	6089
	.byte	4
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,11,37,15
	.word	205
	.byte	4
	.byte	'Dcm_MsgItemType',0,12,182,2,15
	.word	205
	.byte	3
	.word	205
	.byte	4
	.byte	'Dcm_MsgType',0,12,188,2,57
	.word	8353
	.byte	4
	.byte	'Dcm_MsgLenType',0,12,197,2,16
	.word	273
	.byte	6,12,206,2,9,4,7
	.byte	'reqType',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'suppressPosResponse',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'sourceofRequest',0
	.word	205
	.byte	1,2,35,2,0,4
	.byte	'Dcm_MsgAddInfoType',0,12,219,2,2
	.word	8403
	.byte	4
	.byte	'Dcm_IdContextType',0,12,225,2,15
	.word	205
	.byte	6,12,238,5,9,32,7
	.byte	'tx_buffer_pa',0
	.word	8358
	.byte	4,2,35,0,7
	.byte	'rx_mainBuffer_pa',0
	.word	8358
	.byte	4,2,35,4,7
	.byte	'tx_buffer_size_u32',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'rx_buffer_size_u32',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'dataP2TmrAdjust',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'dataP2StarTmrAdjust',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'protocolid_u8',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'sid_tableid_u8',0
	.word	205
	.byte	1,2,35,25,7
	.byte	'premption_level_u8',0
	.word	205
	.byte	1,2,35,26,7
	.byte	'pduinfo_idx_u8',0
	.word	205
	.byte	1,2,35,27,7
	.byte	'nrc21_b',0
	.word	205
	.byte	1,2,35,28,7
	.byte	'sendRespPendTransToBoot',0
	.word	205
	.byte	1,2,35,29,0,4
	.byte	'Dcm_Dsld_protocol_tableType',0,12,143,6,2
	.word	8536
	.byte	3
	.word	205
	.byte	15,1,1,16
	.word	205
	.byte	16
	.word	236
	.byte	16
	.word	236
	.byte	16
	.word	205
	.byte	0,3
	.word	8892
	.byte	4
	.byte	'Dcm_ConfirmationApiType',0,12,145,6,16
	.word	8916
	.byte	3
	.word	205
	.byte	22
	.word	205
	.byte	1,1,16
	.word	8954
	.byte	16
	.word	205
	.byte	16
	.word	205
	.byte	0,3
	.word	8959
	.byte	6,12,240,2,9,28,7
	.byte	'resData',0
	.word	8358
	.byte	4,2,35,0,7
	.byte	'reqData',0
	.word	8358
	.byte	4,2,35,4,7
	.byte	'msgAddInfo',0
	.word	8403
	.byte	4,2,35,8,7
	.byte	'resDataLen',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'reqDataLen',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'resMaxDataLen',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'idContext',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'dcmRxPduId',0
	.word	236
	.byte	2,2,35,26,0,3
	.word	8987
	.byte	22
	.word	205
	.byte	1,1,16
	.word	205
	.byte	16
	.word	9150
	.byte	16
	.word	8954
	.byte	0,3
	.word	9155
	.byte	6,12,158,6,9,20,7
	.byte	'allowed_session_b32',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	8982
	.byte	4,2,35,8,7
	.byte	'SubFunc_fp',0
	.word	9178
	.byte	4,2,35,12,7
	.byte	'subservice_id_u8',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'isDspRDTCSubFnc_b',0
	.word	205
	.byte	1,2,35,17,0,4
	.byte	'Dcm_Dsld_SubServiceType',0,12,169,6,2
	.word	9183
	.byte	17
	.word	9183
	.byte	3
	.word	9395
	.byte	22
	.word	205
	.byte	1,1,16
	.word	8954
	.byte	16
	.word	205
	.byte	0,3
	.word	9405
	.byte	6,12,186,6,9,36,7
	.byte	'allowed_session_b32',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'service_handler_fp',0
	.word	9178
	.byte	4,2,35,8,7
	.byte	'Service_init_fp',0
	.word	1001
	.byte	4,2,35,12,7
	.byte	'sid_u8',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'subfunction_exist_b',0
	.word	205
	.byte	1,2,35,17,7
	.byte	'servicelocator_b',0
	.word	205
	.byte	1,2,35,18,7
	.byte	'ptr_subservice_table_pcs',0
	.word	9400
	.byte	4,2,35,20,7
	.byte	'num_sf_u8',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'adrUserServiceModeRule_pfct',0
	.word	9423
	.byte	4,2,35,28,7
	.byte	'Dcm_ConfirmationService',0
	.word	8921
	.byte	4,2,35,32,0,4
	.byte	'Dcm_Dsld_ServiceType',0,12,204,6,3
	.word	9428
	.byte	3
	.word	8892
	.byte	17
	.word	9428
	.byte	3
	.word	9776
	.byte	6,12,218,6,9,8,7
	.byte	'ptr_service_table_pcs',0
	.word	9781
	.byte	4,2,35,0,7
	.byte	'num_services_u8',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'nrc_sessnot_supported_u8',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'cdtc_index_u8',0
	.word	205
	.byte	1,2,35,6,0,4
	.byte	'Dcm_Dsld_sid_tableType',0,12,224,6,3
	.word	9786
	.byte	6,12,238,6,9,14,7
	.byte	'protocol_num_u8',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'txpduid_num_u8',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'roetype2_txpdu_u8',0
	.word	236
	.byte	2,2,35,4,7
	.byte	'rdpitype2_txpdu_u8',0
	.word	236
	.byte	2,2,35,6,7
	.byte	'testaddr_u16',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'channel_idx_u8',0
	.word	205
	.byte	1,2,35,10,7
	.byte	'ConnectionIndex_u8',0
	.word	205
	.byte	1,2,35,11,7
	.byte	'NumberOfTxpdu_u8',0
	.word	205
	.byte	1,2,35,12,0,4
	.byte	'Dcm_Dsld_connType',0,12,248,6,3
	.word	9938
	.byte	8,12,146,7,9,4,9
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,9
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,9
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,4
	.byte	'Dcm_Dsld_commodeType',0,12,151,7,2
	.word	10176
	.byte	8,13,200,1,9,4,9
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,9
	.byte	'USE_ASYNCH_FNC',0,1,0,4
	.byte	'DcmDspSecurityUsePort',0,13,204,1,2
	.word	10288
	.byte	8,14,22,9,4,9
	.byte	'DCM_NO_BOOT',0,0,9
	.byte	'DCM_OEM_BOOT',0,1,9
	.byte	'DCM_SYS_BOOT',0,2,0,4
	.byte	'Dcm_SessionForBootType',0,14,27,2
	.word	10370
	.byte	8,15,192,3,9,4,9
	.byte	'DCM_READ_OK',0,0,9
	.byte	'DCM_READ_FAILED',0,1,9
	.byte	'DCM_READ_PENDING',0,2,9
	.byte	'DCM_READ_FORCE_RCRRP',0,3,9
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,4
	.byte	'Dcm_ReadMemoryRet_t',0,15,199,3,3
	.word	10451
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,1,1,11,15,73,19,0,0,11,33,0,47,15,0,0
	.byte	12,21,0,54,15,39,12,0,0,13,19,1,3,8,58,15,59,15,57,15,11,15,0,0,14,59,0,3,8,0,0,15,21,1,54,15,39,12,0
	.byte	0,16,5,0,73,19,0,0,17,38,0,73,19,0,0,18,23,1,58,15,59,15,57,15,11,15,0,0,19,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,20,21,0,73,19,54,15,39,12,0,0,21,53,0,73,19,0,0,22,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode8.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     2  #include "DcmDspObd_Mode8_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     3  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     4  #if (DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     5  #if (DCM_CFG_DSP_OBDMODE8_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     6  #include "DcmDspObd_Mode8_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     7  #include "rba_BswSrv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     8  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	     9  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    10  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    11  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    12  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    13  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    14  /****************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    15  * Dcm_DcmObdMode08 :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    16  *The purpose of this service is to enable the external test equipment to control the operation
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    17  *of an on-board system, test or component.By this service $08, following operations can be done,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    18  *when the tester sends corresponding single test id in request format
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    19  *1) Turn on-board system/test/component ON
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    20  *2) Turn on-board system/test/component OFF
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    21  *3) Cycle on-board system/test/component for 'n' seconds.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    22  *This service $08 can also provide supported Test Ids information in ECU,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    23  *when the tester requests with supported Tids in request format
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    24  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    25  * \param           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    26  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    27  * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    28  * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    29  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    30  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    31  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    32  FUNC(Std_ReturnType, DCM_CODE) Dcm_DcmObdMode08 (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    33  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    34      P2VAR(uint8,AUTOMATIC,DCM_INTERN_DATA) adrRespBuf_pu8; /* Pointer to Response buffer                               */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    35      P2VAR(uint8,AUTOMATIC,DCM_INTERN_DATA) adrReqBuf_pu8;  /* Pointer to Request buffer                                */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    36      VAR(uint32,         AUTOMATIC) dataTidMaskVal_u32;      /* For supported TIDs,each TID is bit coded value of 4bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    37      VAR(uint32,         AUTOMATIC) dataCalTidBitMask_u32;   /* Calculated Bit mask based on TID value                   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    38      VAR(Dcm_MsgLenType, AUTOMATIC) nrReqDataLen_u32;      /* Requested data length check                              */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    39      VAR(uint16_least,   AUTOMATIC) idxTidRes_qu16;     /* Index to response buffer for valid TIDs                  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    40      VAR(uint8_least,    AUTOMATIC) nrTid_qu8;      /* Number of TIDs needs to be searched in TID configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    41      VAR(uint8_least,    AUTOMATIC) idxTidStart_qu8;      /* Start index in TID configuration                         */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    42      VAR(uint8_least,    AUTOMATIC) nrNumTids_qu8;          /* Number of TIDs in configuration structure                */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    43      VAR(uint8_least,    AUTOMATIC) nrTidChk_qu8;      /* Number of requested Tids that is to be searched in config structure */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    44      VAR(uint8,          AUTOMATIC) adrTmpBuf_au8[DCM_OBDMODE08_REQ_LEN_MAX]; /* Temp buffer maximum of 6 TIDs         */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    45      VAR(uint8,          AUTOMATIC) idxTID_u8;         /* Tid index in bitmask configuration list                  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    46      VAR(uint8,          AUTOMATIC) nrMultiple_u8;       /* Number of special TIDS requested are multiples of 0x20   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    47      VAR(Std_ReturnType, AUTOMATIC) stRetTID_u8;            /* Return type of TID which triggers turn ON/OFF of test    */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    48      VAR(boolean,        AUTOMATIC) stTIDFound_u8;       /* Set to 1 if requested TID is found in configuration      */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    49      VAR(Std_ReturnType, AUTOMATIC) dataRetval_u8;            /* Return type of TID which triggers turn ON/OFF of test    */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    50  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    51      /* Initialisation of local variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    52      *dataNegRespCode_u8   = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    53      idxTidRes_qu16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    54      nrTid_qu8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    55      idxTidStart_qu8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    56      nrNumTids_qu8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    57      dataCalTidBitMask_u32 = 0;                     /*to remove warning */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    58      adrTmpBuf_au8[0] = 0;                        /*to remove misra warning */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    59      /*Initialize TID to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    60      stTIDFound_u8 = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    61      nrMultiple_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    62      idxTID_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    63      stRetTID_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    64      dataRetval_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    65  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    66      nrReqDataLen_u32 = (pMsgContext->reqDataLen);   /* Copy the requested data length into local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    67  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    68      adrReqBuf_pu8 = pMsgContext->reqData;            /* Pointer to request buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    69      /*Opstatus possed by the central statemachine is unused currently, opstatus variables related to service needs to be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    70       * removed and the one passed by the central statemachine needs to be used, this would be taken care with task XXXXX*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    71      DCM_UNUSED_PARAM(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    72  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    73      /* Check whether requested Tid is multiple of 0x20 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    74      /* For eg: TID 0x20 --> 0010 0000 & 0001 1111 = 0000 0000 hence its supported TID in request format
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    75                TID 0x01 --> 0000 0001 & 0001 1111 = 0000 0001 hence its TID to turn ON/OFF the test/system */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    76      if (((adrReqBuf_pu8[0] & 0x1Fu) != 0x00u) && (nrReqDataLen_u32 > DCM_OBDMODE08_REQ_LEN_MIN))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    77      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    78          /* Calculate the TID  whether TID is supported or not */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    79          /* Set NRC to 0x12- NRC 0x12 is suppressed in DCM module for OBD service since it is functional addressing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    80          *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    81          /* Index for Dcm_Dsp_Mode8Bitmask_acs is calculated based on TID number index number = TID number/0x20 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    82          idxTID_u8 =(uint8) (adrReqBuf_pu8[0] / DCM_OBDMODE08_SUPPTID);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    83          /* Based on TID number,access the TID mask value corresponding to index in Dcm_Dsp_Mode8Bitmask_acs*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    84          dataTidMaskVal_u32 = Dcm_Dsp_Mode8Bitmask_acs[idxTID_u8].BitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    85          /* Based on requested TID value, calculate the corresponding TID Bit mask for the range 01-1F,21-3F .
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    86              For eg: TID 01 is requested then generate BIT mask as 80 00 00 00 since BIT 31 is mapped to TID 01 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    87          dataCalTidBitMask_u32 = ((uint32)1u << ((uint32)32u - ((adrReqBuf_pu8[0]) % 0x20)));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    88  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    89          if((dataTidMaskVal_u32 & dataCalTidBitMask_u32) > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    90          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    91  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    92              /* Requested TID is supported in ECU. Based on the index value in Dcm_Dsp_Mode8Bitmask_acs, get the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    93                 starting index,number of TIDS to be searched in Dcm_Dsp_Mode8TidArray_acs( TID configurations) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    94              idxTidStart_qu8 = Dcm_Dsp_Mode8Bitmask_acs[idxTID_u8].StartIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    95              nrNumTids_qu8 =  Dcm_Dsp_Mode8Bitmask_acs[idxTID_u8].NumTids_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    96              /*Set TID to value FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    97              stTIDFound_u8 = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    98              /* Get the number of TIDS(its number of iterations) for which below for loop has to be looped for
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	    99                 Eg: if in the range TID 01 to 1F, only 5TIDs are supported and TID 01 is requested by tester then
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   100                 its sufficient to search TID 01 in the range TID 01 to 1F with only 5 iterations since only 5 TIDs
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   101                 are configured in that range */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   102              for(nrTid_qu8 = idxTidStart_qu8;((nrTid_qu8 <(idxTidStart_qu8 + nrNumTids_qu8)) &&(stTIDFound_u8 == FALSE));nrTid_qu8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   103              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   104              	/* If TID is found to be configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   105                  if( adrReqBuf_pu8[0] == (Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].Tid_Id_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   106                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   107                      /* Set the TIDFound to 1, this indicates TID is found in configuration structure and not
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   108                      required to continue executing the above for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   109                      stTIDFound_u8 = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   110                      /* Check if response buffer is sufficient to hold the data and the TID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   111  					if(pMsgContext->resMaxDataLen>(uint32)(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].OutBuffer_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   112  					{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   113  						/* Check whether the configured Inbuffer is equal to obtained requested data length
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   114  						  (ReqdataLen - 1 (TID Number)). For eg: 08 01 00 02 is requested by tester, configured Inbuffer is 2bytes
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   115  						   reqdatalen = 3 (Tid number + 2 data bytes) then this valid length check */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   116  						if(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].InBuffer_u8 == (nrReqDataLen_u32 - 1u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   117  						{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   118  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   119  						   /* Copy TID Data Record from Request into Buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   120  						    if(nrReqDataLen_u32 != 1u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   121  						    {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   122  						      /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   123  						        DCM_MEMCOPY(&(Dcm_InParameterBuf_au8[0]), &(adrReqBuf_pu8[1]) ,nrReqDataLen_u32 - 1u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   124  						    }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   125  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   126  						    /* Calculate buffer index to be passed for the data */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   127  							adrRespBuf_pu8 = pMsgContext->resData;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   128  							/*Check whether Useport is Enabled Or Not*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   129  							if(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].UsePort_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   130  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   131                                  /* Call back function which is configured for corresponding TID   pass the parameter
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   132                                     InBuffer --> pointer to request Buffer,OutBuffer -->pointer to Response buffer in
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   133                                     which data bytes can be filled, both Inbuffer & OutBuffer is passed with 1byte less
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   134                                     as it contains 1byte TID number both in request & response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   135  							    if(nrReqDataLen_u32 != 1u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   136  							    {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   137  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   138  							        /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   139  							        stRetTID_u8 = ((*(RequestControl1_pf)(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].adrRequestControl_cpv))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   140                                                                    (&adrRespBuf_pu8[idxTidRes_qu16 + 1u],&Dcm_InParameterBuf_au8[0]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   141  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   142  							    }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   143  							    else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   144  							    {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   145  							        /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   146  							        stRetTID_u8 = ((*(RequestControl1_pf)(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].adrRequestControl_cpv))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   147  							                                                                          (&adrRespBuf_pu8[idxTidRes_qu16 + 1u],NULL_PTR));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   148  							    }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   149  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   150  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   151  							else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   152  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   153                                  /* Call back function which is configured for corresponding TID   pass the parameter
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   154                                     InBuffer --> pointer to request Buffer,OutBuffer -->pointer to Response buffer in
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   155                                     which data bytes can be filled, both Inbuffer & OutBuffer is passed with 1byte less
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   156                                     as it contains 1byte TID number both in request & response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   157  							    if(nrReqDataLen_u32 != 1u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   158  							     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   159  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   160  							         /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   161  							         stRetTID_u8 = ((*(RequestControl2_pf)(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].adrRequestControl_cpv))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   162  							                                                                  (&adrRespBuf_pu8[idxTidRes_qu16 + 1u],&Dcm_InParameterBuf_au8[0]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   163  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   164  							     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   165  							    else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   166  							     {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   167  							          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   168  							          stRetTID_u8 = ((*(RequestControl2_pf)(Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].adrRequestControl_cpv))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   169  							                                                                                                 (&adrRespBuf_pu8[idxTidRes_qu16 + 1u],NULL_PTR));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   170  							     }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   171  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   172  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   173  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   174  							if(stRetTID_u8==E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   175  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   176  									/* Copy the TID number into response buffer and increment the response buffer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   177  									index by 1*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   178  									adrRespBuf_pu8[idxTidRes_qu16] = adrReqBuf_pu8[0];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   179  									idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   180  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   181  									/* In case of other TIDs, response length = TID number + data length configured in
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   182  									   OutBuffer_u8 in Dcm_Dsp_Mode8TidArray_acs*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   183  									idxTidRes_qu16 = (idxTidRes_qu16 +
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   184  													 (Dcm_Dsp_Mode8TidArray_acs[nrTid_qu8].OutBuffer_u8));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   185  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   186  									/* Set the response length for requested TID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   187  									pMsgContext->resDataLen = idxTidRes_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   188  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   189  									/* Send positive response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   190  									*dataNegRespCode_u8   = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   191  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   192  							else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   193  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   194  								/* Set Negative response code NRC 0x22 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   195  								*dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   196  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   197  						}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   198  						else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   199  						{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   200  							/* Requested data length should be TID number + InBuffer size configured then Send Negative
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   201  							response code Request Length Invalid NRC 0x12 is suppressed in DCM module for OBD service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   202  							since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   203  							*dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   204  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   205  							/* Report development error "INVALID LENGTH" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   206  							DCM_DET_ERROR(DCM_OBDMODE08_ID, DCM_E_INVALID_LENGTH)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   207  						}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   208  					}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   209  					else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   210  					{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   211  						/* Set NRC to 0x12 - SubfunctionNotSupported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   212  						*dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   213  						/* Report development error "Buffer overflow" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   214  						DCM_DET_ERROR(DCM_OBDMODE09_ID, DCM_E_INTERFACE_BUFFER_OVERFLOW)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   215  					}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   216  				}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   217              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   218          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   219      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   220      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   221      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   222          /* Length check for supported TIDS - Check if the request Data Length is greater than 0 and less than 7*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   223          if((nrReqDataLen_u32 > DCM_OBDMODE08_REQ_LEN_MIN) && (nrReqDataLen_u32 < DCM_OBDMODE08_REQ_LEN_MAX))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   224          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   225              /* Check if it is pure multiple of 0x20 or pure non multiple of 0x20 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   226              for(nrTidChk_qu8=0;(nrTidChk_qu8 < nrReqDataLen_u32);nrTidChk_qu8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   227              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   228                  /* Check the multiple of 0x20 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   229                  if((adrReqBuf_pu8[nrTidChk_qu8] & 0x1Fu)==0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   230                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   231                      /* It is pure multiple of 0x20 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   232                      nrMultiple_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   233                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   234                  /* Copy TID to temporary buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   235                  adrTmpBuf_au8[nrTidChk_qu8] = adrReqBuf_pu8[nrTidChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   236              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   237              /* If the all requested TIDs are supported TID then the ctMultiple shall be equal to nrReqDataLen_u32 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   238              if (nrMultiple_u8 == nrReqDataLen_u32)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   239              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   240                  /* Set NRC 0x12- NRC 0x12 is suppressed in DCM  for OBD service since it is functional addressing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   241                  *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   242                  /* Calculate buffer index to be passed for the data */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   243                  adrRespBuf_pu8 = pMsgContext->resData;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   244                  /* Check for TIDs which are requested by tester */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   245                  for(nrTidChk_qu8=0;(nrTidChk_qu8 < nrReqDataLen_u32);nrTidChk_qu8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   246                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   247                      /* Index to Dcm_Dsp_Mode8Bitmask_acs is calculated using TID number-> indexnumber=TID number/0x20*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   248                      idxTID_u8 = (uint8)((adrTmpBuf_au8[nrTidChk_qu8]) / DCM_OBDMODE08_SUPPTID);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   249                      /* Based on TID number,access the TID mask value corresponding to index in Dcm_Dsp_Mode8Bitmask_acs*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   250                      dataTidMaskVal_u32 = Dcm_Dsp_Mode8Bitmask_acs[idxTID_u8].BitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   251                      /* Copy the TID number and TIDMask value only if accessed TIDMask value is not 00 00 00 00*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   252                      if(dataTidMaskVal_u32 > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   253                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   254                      	if((pMsgContext->resMaxDataLen - idxTidRes_qu16) > 0x4u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   255                      	{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   256  							/* Copy TID to response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   257  							adrRespBuf_pu8[idxTidRes_qu16] = adrTmpBuf_au8[nrTidChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   258  							idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   259  							/* Increment the response buffer index by 1 since TID number is already filled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   260  							/* Copy bit mask to message buffer of service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   261  							adrRespBuf_pu8[idxTidRes_qu16] = (uint8)(dataTidMaskVal_u32 >> 24u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   262  							idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   263  							adrRespBuf_pu8[idxTidRes_qu16] = (uint8)(dataTidMaskVal_u32 >> 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   264  							idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   265  							adrRespBuf_pu8[idxTidRes_qu16] = (uint8)(dataTidMaskVal_u32 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   266  							idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   267  							adrRespBuf_pu8[idxTidRes_qu16] = (uint8) dataTidMaskVal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   268  							idxTidRes_qu16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   269  							/* Send positive response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   270  							*dataNegRespCode_u8   = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   271                      	}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   272                      	else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   273                      	{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   274      						/* Report development error "Buffer overflow" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   275      						DCM_DET_ERROR(DCM_OBDMODE09_ID, DCM_E_INTERFACE_BUFFER_OVERFLOW)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   276  							/* Update index to request data length to exit out of the for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   277  							break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   278                      	}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   279                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   280                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   281                  /* Set the response length for requested TID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   282                  /* In case of availability of TID, response length = Tid number + 4 data bytes for each requested TID  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   283                  pMsgContext->resDataLen = idxTidRes_qu16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   284              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   285              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   286              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   287                  /* Set Negative response code 0x12 for the combination of both supported TID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   288                  and TID which report data value in single request format
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   289                  NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   290                  *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   291                  /* Report development error "MIXED MODE" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   292                  DCM_DET_ERROR(DCM_OBDMODE08_ID, DCM_E_MIXED_MODE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   293              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   294          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   295          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   296          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   297              /* In case of supported TIDS, the requested data length is invalid then set Negative response code - NRC 0x12
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   298                 NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   299              *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   300              /* Report development error "INVALID LENGTH" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   301              DCM_DET_ERROR(DCM_OBDMODE08_ID, DCM_E_INVALID_LENGTH)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   302          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   303      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   304      /* If negative response code is set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   305      if(*dataNegRespCode_u8 != 0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   306      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   307          /* Call function to set Negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   308          dataRetval_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   309      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   310      else{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   311          /* Call function to set Negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   312          dataRetval_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   313      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   314  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   315      return dataRetval_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   316  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   317  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   318  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   319  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   320  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   321  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   322  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode8.c	   323  

	; Module end
