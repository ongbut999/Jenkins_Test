	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15260a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd_Mode2.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode2.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode2.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	10583
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode2.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	158
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	160
	.byte	5
	.byte	'char',0,1,6,4
	.byte	'sint8',0,2,76,25
	.word	183
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	205
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	236
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	273
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'uint64',0,2,111,30
	.word	304
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	205
	.byte	4
	.byte	'StatusType',0,3,191,1,27
	.word	205
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	205
	.byte	6,3,206,1,9,8,7
	.byte	'vendorID',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	205
	.byte	1,2,35,6,0,4
	.byte	'Std_VersionInfoType',0,3,213,1,3
	.word	405
	.byte	4
	.byte	'PduIdType',0,4,22,19
	.word	236
	.byte	4
	.byte	'PduLengthType',0,4,26,19
	.word	236
	.byte	8,5,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,118,3
	.word	595
	.byte	4
	.byte	'NetworkHandleType',0,5,128,1,17
	.word	205
	.byte	4
	.byte	'Can_IdType',0,6,32,16
	.word	273
	.byte	4
	.byte	'Can_HwHandleType',0,6,43,16
	.word	236
	.byte	6,7,93,9,8,7
	.byte	'Class',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'OsTrapInfoType',0,7,97,3
	.word	742
	.byte	10,68
	.word	273
	.byte	11,16,0,6,7,154,1,9,68,7
	.byte	'store',0
	.word	822
	.byte	68,2,35,0,0,10,68
	.word	831
	.byte	11,0,0,4
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	853
	.byte	4
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	273
	.byte	6,7,175,1,9,8,7
	.byte	'sp',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	913
	.byte	4
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	913
	.byte	12,1,1,3
	.word	998
	.byte	4
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	1001
	.byte	4
	.byte	'ApplicationType',0,7,193,1,23
	.word	205
	.byte	13
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,7
	.byte	'app_id',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,1,0,4
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	1064
	.byte	4
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	273
	.byte	4
	.byte	'AreaIdType',0,7,204,1,16
	.word	236
	.byte	4
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	273
	.byte	4
	.byte	'TickType',0,7,221,1,22
	.word	273
	.byte	4
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	273
	.byte	3
	.word	273
	.byte	4
	.byte	'Os_Lockable',0,7,234,1,18
	.word	1306
	.byte	4
	.byte	'CoreIdType',0,7,236,1,16
	.word	236
	.byte	4
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	236
	.byte	8,7,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,4
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	1376
	.byte	8,7,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,4
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	1469
	.byte	14
	.byte	'void',0,3
	.word	1581
	.byte	15,1,1,16
	.word	205
	.byte	16
	.word	1587
	.byte	0,3
	.word	1592
	.byte	4
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	1606
	.byte	13
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,7
	.byte	'elapsed',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	913
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	913
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	913
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,40,0,4
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	1641
	.byte	3
	.word	1641
	.byte	4
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	1839
	.byte	4
	.byte	'EventMaskType',0,7,206,2,15
	.word	205
	.byte	4
	.byte	'Os_imaskType',0,7,211,2,16
	.word	273
	.byte	13
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,7
	.byte	'meter',0
	.word	1641
	.byte	48,2,35,0,0,4
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	1918
	.byte	3
	.word	1918
	.byte	17
	.word	1979
	.byte	13
	.byte	'Os_ISRType_s',0,7,216,2,16,24,7
	.byte	'entry_function',0
	.word	1006
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	1984
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,21,0,4
	.byte	'Os_ISRType',0,7,223,2,3
	.word	1989
	.byte	3
	.word	998
	.byte	17
	.word	1989
	.byte	3
	.word	2148
	.byte	4
	.byte	'ISRType',0,7,224,2,46
	.word	2153
	.byte	4
	.byte	'Os_bitmask',0,7,239,2,22
	.word	273
	.byte	4
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	273
	.byte	4
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	273
	.byte	4
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	273
	.byte	18,7,243,2,9,4,7
	.byte	'p0',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	273
	.byte	4,2,35,0,0,4
	.byte	'Os_psetType',0,7,247,2,3
	.word	2261
	.byte	18,7,249,2,9,4,7
	.byte	't0',0
	.word	273
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	273
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	273
	.byte	4,2,35,0,0,4
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	2325
	.byte	4
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	205
	.byte	13
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	862
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	1641
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	205
	.byte	1,2,35,116,0,4
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	2423
	.byte	10,68
	.word	831
	.byte	11,0,0,3
	.word	2423
	.byte	17
	.word	2549
	.byte	13
	.byte	'Os_TaskType_s',0,7,134,3,16,40,7
	.byte	'dynamic',0
	.word	2554
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	1006
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2261
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2325
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	236
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	273
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	913
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	205
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,38,0,4
	.byte	'Os_TaskType',0,7,146,3,3
	.word	2559
	.byte	17
	.word	2559
	.byte	3
	.word	2809
	.byte	4
	.byte	'TaskType',0,7,147,3,47
	.word	2814
	.byte	19
	.byte	'Os_TaskStateType',0,7,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,4
	.byte	'TaskStateType',0,7,156,3,31
	.word	2837
	.byte	18,7,167,3,3,4,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,7
	.byte	'saved_priority',0
	.word	2924
	.byte	4,2,35,0,0,4
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	2947
	.byte	3
	.word	2947
	.byte	17
	.word	3027
	.byte	13
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,7
	.byte	'dynamic',0
	.word	3032
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2325
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,8,0,4
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	3037
	.byte	6,7,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	273
	.byte	4,2,35,8,0,4
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	3136
	.byte	6,7,206,3,9,8,7
	.byte	'Running',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	3231
	.byte	20
	.word	205
	.byte	1,1,3
	.word	3317
	.byte	4
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	3324
	.byte	13
	.byte	's_swd',0,7,222,3,12,4,7
	.byte	'count',0
	.word	273
	.byte	4,2,35,0,0,18,7,221,3,3,4,7
	.byte	'sw',0
	.word	3360
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3388
	.byte	4,2,35,0,0,4
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	3407
	.byte	3
	.word	3407
	.byte	17
	.word	3485
	.byte	13
	.byte	'Os_CounterType_s',0,7,227,3,16,28,7
	.byte	'dynamic',0
	.word	3490
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3329
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	3136
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	1587
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,25,0,4
	.byte	'Os_CounterType',0,7,234,3,3
	.word	3495
	.byte	3
	.word	3317
	.byte	17
	.word	3495
	.byte	3
	.word	3647
	.byte	4
	.byte	'CounterType',0,7,235,3,52
	.word	3652
	.byte	19
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,4
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	3678
	.byte	17
	.word	.L6-.L3
	.byte	3
	.word	3878
	.byte	4
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	3883
	.byte	13
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,7
	.byte	'match',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	3888
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	3678
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	236
	.byte	2,2,35,12,0,3
	.word	3915
	.byte	17
	.word	4008
.L6:
	.byte	13
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,7
	.byte	'dynamic',0
	.word	4013
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	3657
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	205
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	236
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	205
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	205
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	205
	.byte	1,2,35,14,0,4
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	4018
	.byte	17
	.word	4018
	.byte	3
	.word	4198
	.byte	17
	.word	3495
	.byte	3
	.word	4208
	.byte	21
	.word	1311
	.byte	21
	.word	2261
	.byte	21
	.word	2158
	.byte	21
	.word	2819
	.byte	21
	.word	2325
	.byte	21
	.word	205
	.byte	21
	.word	2819
	.byte	13
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	742
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4218
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4223
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4228
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4233
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4238
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	1844
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	1641
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	205
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4243
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	913
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	205
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4248
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	913
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	205
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	205
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	205
	.byte	1,2,35,110,0,4
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	4253
	.byte	3
	.word	273
	.byte	17
	.word	1989
	.byte	3
	.word	4709
	.byte	17
	.word	2559
	.byte	3
	.word	4719
	.byte	3
	.word	1641
	.byte	13
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	862
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	205
	.byte	1,2,35,92,0,4
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	4734
	.byte	4
	.byte	'Can_TxObjPriorityClassType',0,8,219,3,16
	.word	273
	.byte	13
	.byte	'Can_TxHwObjectConfigType',0,8,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	273
	.byte	4,2,35,4,0,4
	.byte	'Can_TxHwObjectConfigType',0,8,252,3,3
	.word	5011
	.byte	13
	.byte	'Can_RxHwObjectConfigType',0,8,129,4,16,12,7
	.byte	'MaskRef',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	205
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	205
	.byte	1,2,35,9,0,4
	.byte	'Can_RxHwObjectConfigType',0,8,147,4,3
	.word	5147
	.byte	10,4
	.word	205
	.byte	11,3,0,13
	.byte	'Can_ControllerMOMapConfigType',0,8,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	5287
	.byte	4,2,35,0,0,4
	.byte	'Can_ControllerMOMapConfigType',0,8,184,4,3
	.word	5296
	.byte	13
	.byte	'Can_NPCRValueType',0,8,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	236
	.byte	2,2,35,0,0,4
	.byte	'Can_NPCRValueType',0,8,191,4,3
	.word	5397
	.byte	13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	236
	.byte	2,2,35,4,0,4
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,198,4,3
	.word	5472
	.byte	17
	.word	5472
	.byte	3
	.word	5637
	.byte	13
	.byte	'Can_BaudrateConfigPtrType',0,8,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5642
	.byte	4,2,35,0,0,4
	.byte	'Can_BaudrateConfigPtrType',0,8,204,4,3
	.word	5647
	.byte	13
	.byte	'Can_EventHandlingType',0,8,226,4,16,4,7
	.byte	'CanEventType',0
	.word	5287
	.byte	4,2,35,0,0,4
	.byte	'Can_EventHandlingType',0,8,229,4,3
	.word	5747
	.byte	4
	.byte	'Rte_TransformerErrorCode',0,9,130,1,15
	.word	205
	.byte	4
	.byte	'Rte_TransformerClass',0,9,131,1,15
	.word	205
	.byte	6,9,168,1,9,12,7
	.byte	'in',0
	.word	1587
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	1587
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	205
	.byte	1,2,35,10,0,4
	.byte	'Rte_QDynType',0,9,173,1,3
	.word	5893
	.byte	8,9,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,4
	.byte	'Rte_NotificationType',0,9,182,1,3
	.word	5980
	.byte	10,128,8
	.word	205
	.byte	11,255,7,0,4
	.byte	'Impl_NVM_DstPtrType_1024',0,10,50,15
	.word	6078
	.byte	4
	.byte	'CanIf_u32_impl',0,10,69,16
	.word	273
	.byte	4
	.byte	'CanIf_u16_impl',0,10,71,16
	.word	236
	.byte	4
	.byte	'CanIf_u8_impl',0,10,73,15
	.word	205
	.byte	4
	.byte	'CanIf_ControllerModeType_Enum_impl',0,10,88,15
	.word	205
	.byte	4
	.byte	'CanIf_PduModeType_Enum_impl',0,10,90,15
	.word	205
	.byte	6,10,92,9,2,7
	.byte	'DeviceMode',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	205
	.byte	1,2,35,1,0,4
	.byte	'CanIf_ControllerStateType_struct_impl',0,10,95,3
	.word	6269
	.byte	4
	.byte	'CanIf_NotifStatusType_Enum_impl',0,10,100,15
	.word	205
	.byte	4
	.byte	'CanSM_boolean_Impl',0,10,120,15
	.word	205
	.byte	4
	.byte	'CanSM_u8_Impl',0,10,123,15
	.word	205
	.byte	4
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,10,128,1,15
	.word	205
	.byte	4
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,10,132,1,15
	.word	205
	.byte	4
	.byte	'CanSM_u16_Impl',0,10,136,1,16
	.word	236
	.byte	4
	.byte	'CanSM_TimerStateType_Enum_impl',0,10,138,1,15
	.word	205
	.byte	6,10,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	205
	.byte	1,2,35,2,0,4
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,10,143,1,3
	.word	6610
	.byte	4
	.byte	'Com_impl_u16',0,10,154,1,16
	.word	236
	.byte	4
	.byte	'Com_impl_u8',0,10,157,1,15
	.word	205
	.byte	4
	.byte	'ComM_uint32_Impl',0,10,173,1,16
	.word	273
	.byte	4
	.byte	'ComM_uint16_Impl',0,10,175,1,16
	.word	236
	.byte	4
	.byte	'ComM_uint8_Impl',0,10,177,1,15
	.word	205
	.byte	4
	.byte	'ComM_bool_Impl',0,10,179,1,15
	.word	205
	.byte	6,10,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	205
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	205
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	205
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	205
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	205
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	205
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	205
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	205
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	205
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	205
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	205
	.byte	1,2,35,21,0,4
	.byte	'ComM_ChannelStruct_Impl',0,10,197,1,3
	.word	6842
	.byte	6,10,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	236
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	205
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	205
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	205
	.byte	1,2,35,8,0,4
	.byte	'ComM_UserStruct_Impl',0,10,214,1,3
	.word	7346
	.byte	4
	.byte	'Dcm_IOOperationResponseType',0,10,252,1,15
	.word	205
	.byte	4
	.byte	'Dcm_NegativeResponseCodeType',0,10,132,2,15
	.word	205
	.byte	4
	.byte	'Dcm_OpStatusType',0,10,134,2,15
	.word	205
	.byte	4
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	10,138,2,15
	.word	205
	.byte	4
	.byte	'Dcm_SecLevelType',0,10,142,2,15
	.word	205
	.byte	4
	.byte	'Dcm_SesCtrlType',0,10,144,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,10,146,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,10,150,2,15
	.word	205
	.byte	4
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,10,154,2,15
	.word	205
	.byte	4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,10,243,3,34
	.word	6089
	.byte	10,128,8
	.word	205
	.byte	11,255,7,0,4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,10,246,3,34
	.word	6089
	.byte	4
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,11,37,15
	.word	205
	.byte	4
	.byte	'Dcm_MsgItemType',0,12,182,2,15
	.word	205
	.byte	3
	.word	205
	.byte	4
	.byte	'Dcm_MsgType',0,12,188,2,57
	.word	8353
	.byte	4
	.byte	'Dcm_MsgLenType',0,12,197,2,16
	.word	273
	.byte	6,12,206,2,9,4,7
	.byte	'reqType',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'suppressPosResponse',0
	.word	205
	.byte	1,2,35,1,7
	.byte	'sourceofRequest',0
	.word	205
	.byte	1,2,35,2,0,4
	.byte	'Dcm_MsgAddInfoType',0,12,219,2,2
	.word	8403
	.byte	4
	.byte	'Dcm_IdContextType',0,12,225,2,15
	.word	205
	.byte	6,12,238,5,9,32,7
	.byte	'tx_buffer_pa',0
	.word	8358
	.byte	4,2,35,0,7
	.byte	'rx_mainBuffer_pa',0
	.word	8358
	.byte	4,2,35,4,7
	.byte	'tx_buffer_size_u32',0
	.word	273
	.byte	4,2,35,8,7
	.byte	'rx_buffer_size_u32',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'dataP2TmrAdjust',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'dataP2StarTmrAdjust',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'protocolid_u8',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'sid_tableid_u8',0
	.word	205
	.byte	1,2,35,25,7
	.byte	'premption_level_u8',0
	.word	205
	.byte	1,2,35,26,7
	.byte	'pduinfo_idx_u8',0
	.word	205
	.byte	1,2,35,27,7
	.byte	'nrc21_b',0
	.word	205
	.byte	1,2,35,28,7
	.byte	'sendRespPendTransToBoot',0
	.word	205
	.byte	1,2,35,29,0,4
	.byte	'Dcm_Dsld_protocol_tableType',0,12,143,6,2
	.word	8536
	.byte	3
	.word	205
	.byte	15,1,1,16
	.word	205
	.byte	16
	.word	236
	.byte	16
	.word	236
	.byte	16
	.word	205
	.byte	0,3
	.word	8892
	.byte	4
	.byte	'Dcm_ConfirmationApiType',0,12,145,6,16
	.word	8916
	.byte	3
	.word	205
	.byte	22
	.word	205
	.byte	1,1,16
	.word	8954
	.byte	16
	.word	205
	.byte	16
	.word	205
	.byte	0,3
	.word	8959
	.byte	6,12,240,2,9,28,7
	.byte	'resData',0
	.word	8358
	.byte	4,2,35,0,7
	.byte	'reqData',0
	.word	8358
	.byte	4,2,35,4,7
	.byte	'msgAddInfo',0
	.word	8403
	.byte	4,2,35,8,7
	.byte	'resDataLen',0
	.word	273
	.byte	4,2,35,12,7
	.byte	'reqDataLen',0
	.word	273
	.byte	4,2,35,16,7
	.byte	'resMaxDataLen',0
	.word	273
	.byte	4,2,35,20,7
	.byte	'idContext',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'dcmRxPduId',0
	.word	236
	.byte	2,2,35,26,0,3
	.word	8987
	.byte	22
	.word	205
	.byte	1,1,16
	.word	205
	.byte	16
	.word	9150
	.byte	16
	.word	8954
	.byte	0,3
	.word	9155
	.byte	6,12,158,6,9,20,7
	.byte	'allowed_session_b32',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	8982
	.byte	4,2,35,8,7
	.byte	'SubFunc_fp',0
	.word	9178
	.byte	4,2,35,12,7
	.byte	'subservice_id_u8',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'isDspRDTCSubFnc_b',0
	.word	205
	.byte	1,2,35,17,0,4
	.byte	'Dcm_Dsld_SubServiceType',0,12,169,6,2
	.word	9183
	.byte	17
	.word	9183
	.byte	3
	.word	9395
	.byte	22
	.word	205
	.byte	1,1,16
	.word	8954
	.byte	16
	.word	205
	.byte	0,3
	.word	9405
	.byte	6,12,186,6,9,36,7
	.byte	'allowed_session_b32',0
	.word	273
	.byte	4,2,35,0,7
	.byte	'allowed_security_b32',0
	.word	273
	.byte	4,2,35,4,7
	.byte	'service_handler_fp',0
	.word	9178
	.byte	4,2,35,8,7
	.byte	'Service_init_fp',0
	.word	1001
	.byte	4,2,35,12,7
	.byte	'sid_u8',0
	.word	205
	.byte	1,2,35,16,7
	.byte	'subfunction_exist_b',0
	.word	205
	.byte	1,2,35,17,7
	.byte	'servicelocator_b',0
	.word	205
	.byte	1,2,35,18,7
	.byte	'ptr_subservice_table_pcs',0
	.word	9400
	.byte	4,2,35,20,7
	.byte	'num_sf_u8',0
	.word	205
	.byte	1,2,35,24,7
	.byte	'adrUserServiceModeRule_pfct',0
	.word	9423
	.byte	4,2,35,28,7
	.byte	'Dcm_ConfirmationService',0
	.word	8921
	.byte	4,2,35,32,0,4
	.byte	'Dcm_Dsld_ServiceType',0,12,204,6,3
	.word	9428
	.byte	3
	.word	8892
	.byte	17
	.word	9428
	.byte	3
	.word	9776
	.byte	6,12,218,6,9,8,7
	.byte	'ptr_service_table_pcs',0
	.word	9781
	.byte	4,2,35,0,7
	.byte	'num_services_u8',0
	.word	205
	.byte	1,2,35,4,7
	.byte	'nrc_sessnot_supported_u8',0
	.word	205
	.byte	1,2,35,5,7
	.byte	'cdtc_index_u8',0
	.word	205
	.byte	1,2,35,6,0,4
	.byte	'Dcm_Dsld_sid_tableType',0,12,224,6,3
	.word	9786
	.byte	6,12,238,6,9,14,7
	.byte	'protocol_num_u8',0
	.word	205
	.byte	1,2,35,0,7
	.byte	'txpduid_num_u8',0
	.word	236
	.byte	2,2,35,2,7
	.byte	'roetype2_txpdu_u8',0
	.word	236
	.byte	2,2,35,4,7
	.byte	'rdpitype2_txpdu_u8',0
	.word	236
	.byte	2,2,35,6,7
	.byte	'testaddr_u16',0
	.word	236
	.byte	2,2,35,8,7
	.byte	'channel_idx_u8',0
	.word	205
	.byte	1,2,35,10,7
	.byte	'ConnectionIndex_u8',0
	.word	205
	.byte	1,2,35,11,7
	.byte	'NumberOfTxpdu_u8',0
	.word	205
	.byte	1,2,35,12,0,4
	.byte	'Dcm_Dsld_connType',0,12,248,6,3
	.word	9938
	.byte	8,12,146,7,9,4,9
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,9
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,9
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,4
	.byte	'Dcm_Dsld_commodeType',0,12,151,7,2
	.word	10176
	.byte	8,13,200,1,9,4,9
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,9
	.byte	'USE_ASYNCH_FNC',0,1,0,4
	.byte	'DcmDspSecurityUsePort',0,13,204,1,2
	.word	10288
	.byte	8,14,22,9,4,9
	.byte	'DCM_NO_BOOT',0,0,9
	.byte	'DCM_OEM_BOOT',0,1,9
	.byte	'DCM_SYS_BOOT',0,2,0,4
	.byte	'Dcm_SessionForBootType',0,14,27,2
	.word	10370
	.byte	8,15,192,3,9,4,9
	.byte	'DCM_READ_OK',0,0,9
	.byte	'DCM_READ_FAILED',0,1,9
	.byte	'DCM_READ_PENDING',0,2,9
	.byte	'DCM_READ_FORCE_RCRRP',0,3,9
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,4
	.byte	'Dcm_ReadMemoryRet_t',0,15,199,3,3
	.word	10451
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,1,1,11,15,73,19,0,0,11,33,0,47,15,0,0
	.byte	12,21,0,54,15,39,12,0,0,13,19,1,3,8,58,15,59,15,57,15,11,15,0,0,14,59,0,3,8,0,0,15,21,1,54,15,39,12,0
	.byte	0,16,5,0,73,19,0,0,17,38,0,73,19,0,0,18,23,1,58,15,59,15,57,15,11,15,0,0,19,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,20,21,0,73,19,54,15,39,12,0,0,21,53,0,73,19,0,0,22,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspObd\\DcmDspObd_Mode2.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     3  #include "DcmDspObd_Mode2_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     4  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     5  #if (DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     6  #if (DCM_CFG_DSP_OBDMODE2_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     7  #include "DcmDspObd_Mode2_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     8  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	     9  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    10  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    11  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    12  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    13  /****************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    14  * Dcm_DcmObdMode02 :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    15  The purpose of this service is to allow access to emission-related data values in a freeze frame.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    16  The request message includes parameter identification (PID) value that indicates to the on-board system the specific
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    17  information requested.It's not necessarily to contain the same current data values as the required freeze frame data.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    18  When the tester request for freeze frame data through mode 02. The ECU(s) shall respond to this message by
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    19  transmitting the requested data value stored by the system at the time of fault occurrence in error memory.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    20  All data values returned for sensor readings shall be actual stored readings, not default or substitute values used
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    21  by the system be-cause of a fault with that sensor.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    22  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    23  * \param           pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    24  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    25  * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    26  * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    27  *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    28  **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    29  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    30  FUNC(Std_ReturnType, DCM_CODE) Dcm_DcmObdMode02 (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    31  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    32      P2VAR(uint8,AUTOMATIC,DCM_INTERN_DATA) adrRespBuf_pu8;/* Pointer to Response buffer                                */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    33      P2VAR(uint8,AUTOMATIC,DCM_INTERN_DATA) adrReqBuf_pu8; /* Pointer to Request buffer                                 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    34      VAR(uint32,        AUTOMATIC)   dataPIDBitMask_u32;    /* For supported PIDs,each PID is bit coded value of 4bytes  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    35      VAR(uint32,        AUTOMATIC)   dataCalBitMask_u32;    /* Calculated Bit mask based on PID value                    */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    36      VAR(uint32,        AUTOMATIC)   nrDTC_u32;        /* DTC number for PID 02                                     */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    37      VAR(Dcm_MsgLenType,AUTOMATIC)   nrResDataLen_u32;    /* Response data length                                      */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    38      VAR(Dcm_MsgLenType,AUTOMATIC)   nrReqDataLen_u32;    /* Requested data length check                               */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    39      VAR(Dcm_MsgLenType,AUTOMATIC)   nrResMaxDataLen_u32; /* Maximum available response buffer                         */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    40      VAR(uint16,		   AUTOMATIC)   idxDataSource_u16;/* Index to the data element of a PID                      */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    41      VAR(uint8_least,   AUTOMATIC)   nrPIDChk_qu8;    /* Number of Pids in request format                          */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    42      VAR(uint8_least,   AUTOMATIC)   nrPIDValid_qu8;     /* Number of valid Pids in temp request buffer               */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    43      VAR(uint8_least,   AUTOMATIC)   idxPIDStart_qu8;    /* Start index in PID configuration                          */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    44      VAR(uint8_least,   AUTOMATIC)   idxPIDData_qu8;     /* Start of data index associated with each PID              */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    45      VAR(uint8,         AUTOMATIC)   nrMultiple_u8;     /* Number of special PIDS requested are multiples of 0x20    */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    46      VAR(uint8,         AUTOMATIC)   idxPID_u8;       /* Pid index in bit mask configuration list                  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    47      VAR(uint8,         AUTOMATIC)   adrTmpBuf_au8[3];    /* Temporary buffer maximum of 3PIDs                         */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    48      VAR(uint8,         AUTOMATIC)   nrBufSize_u8;        /* Size of response buffer size                              */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    49      VAR(uint8,         AUTOMATIC)   nrPid_u8;    /* Number of PIDs needs to be searched in PID configuration  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    50      VAR(Std_ReturnType,AUTOMATIC)   dataRetGet_u8;        /* Return type of API Dem_ReadDataOfOBDFreezeFrame           */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    51      VAR(Std_ReturnType,AUTOMATIC)   dataRetVal_u8;        /* Return type of API Dem_ReadDataOfOBDFreezeFrame           */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    52      VAR(boolean,       AUTOMATIC)   isPIDFound_b;      /* If PID is found to be configured  						*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    53      VAR(boolean,       AUTOMATIC)   flgGetDTCNum_b;       /* if TRUE, call DEM API to get DTC,else don't call DEM API  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    54  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    55  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    56      /* Initialization of local variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    57      *dataNegRespCode_u8    		 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    58      nrDTC_u32     		 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    59      adrTmpBuf_au8[0] 		 = 0x00;                       /* To remove Misra warning */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    60      nrReqDataLen_u32       = (pMsgContext->reqDataLen);  /* Copy the requested data length into local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    61      nrPIDValid_qu8        = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    62      nrResDataLen_u32 		 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    63      nrMultiple_u8  		 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    64      /*Initialise flgGetDTCNum with True*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    65      flgGetDTCNum_b          = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    66      idxPIDStart_qu8       = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    67      nrPid_u8       = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    68      idxDataSource_u16 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    69      idxPIDData_qu8        = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    70      /*Initialise PIDFound with false*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    71      isPIDFound_b         = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    72      dataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    73      /*Opstatus possed by the central statemachine is unused currently, opstatus variables related to service needs to be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    74       * removed and the one passed by the central statemachine needs to be used, this would be taken care with task XXXXX*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    75      DCM_UNUSED_PARAM(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    76      /* Check if requested data length is equal to 2 or 4 or 6*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    77      if((nrReqDataLen_u32==0x02uL)||(nrReqDataLen_u32==0x04uL)||(nrReqDataLen_u32==0x06uL))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    78      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    79          /* Pointer to request buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    80          adrReqBuf_pu8 = pMsgContext->reqData;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    81  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    82          /* Check if it is pure multiple of 0x20 or pure non multiple of 0x20
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    83          In mode $02, each PID number is associated with freeze frame number of 1byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    84          for(nrPIDChk_qu8=0;(nrPIDChk_qu8 < nrReqDataLen_u32);nrPIDChk_qu8 +=2u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    85          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    86              /* Check whether requested PIDs are availability PIDS 0x00,0x20,0x40,0x60,0x80,0xa0,0xc0,0xe0
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    87              this check can be done by performing bitwise AND 00011111 with requested PID.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    88              In case of availability PID, pid number BIT 7(MSB),6,5 can be set to 1 and BIT 4,3,2,1,0(LSB)is set to 0
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    89              always */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    90              if((adrReqBuf_pu8[nrPIDChk_qu8] & 0x1Fu)==0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    91              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    92                  /* In case of pure multiple of 0x20, the counter value = reqdatalen/2
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    93                  for eg: request 02 00 00 20 00 40 00, reqdatalen = 6 since all requested PIDs are special PIDs
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    94                  hence the counter is incremented 3times (counter == reqdatalen/2).
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    95                  In case all requested PIDs which reports freeze frame data is requested,then this counter is
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    96                  always zero */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    97                  nrMultiple_u8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    98              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	    99  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   100              /* Check whether freeze frame number is always 00 for all requested PIDs*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   101              if((adrReqBuf_pu8[nrPIDChk_qu8 + 1u]) == 0x00u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   102              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   103                  /* Copy only PID to temporary buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   104                  adrTmpBuf_au8[nrPIDValid_qu8] = adrReqBuf_pu8[nrPIDChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   105  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   106                  /* Increment the index of temporary buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   107                  nrPIDValid_qu8++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   108              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   109  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   110          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   111          /* The request is mixed up with multiple and non multiple of 0x20
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   112          if only availability PID is requested then the counter value == requested data length / 2
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   113          if only PID which report freeze frame data value is requested then the counter value is equal to 0*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   114          if((nrMultiple_u8 == 0u) || (nrMultiple_u8 == (uint8)(nrReqDataLen_u32 >> 1u) ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   115          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   116              /* Pointer to response data buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   117              adrRespBuf_pu8 = pMsgContext->resData;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   118  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   119              /* Set Negative response code 0x12
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   120              NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   121              *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   122  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   123              /* Get the maximum response data length in response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   124              nrResMaxDataLen_u32 = pMsgContext->resMaxDataLen;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   125  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   126              /* Check for only availability PIDS in requested format */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   127              /* Check for PIDs which are requested by tester and which has freeze frame number as 00 associated
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   128              with each PID. nrPIDValid_qu8 has count of valid PIDS which has freeze frame number as 00 for each PID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   129              for(nrPIDChk_qu8=0;(nrPIDChk_qu8 < nrPIDValid_qu8);nrPIDChk_qu8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   130              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   131                  /* Index for Dcm_Dsp_Mode1Bitmask_acs is calculated based on PID number index number = PID number/0x20*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   132                  idxPID_u8 = (uint8)((adrTmpBuf_au8[nrPIDChk_qu8]) / DCM_OBDMODE02_SUPPPID);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   133  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   134                  /* Based on PID number,access the PID mask value corresponding to index in Dcm_Dsp_Mode2Bitmask_acs*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   135                  dataPIDBitMask_u32 = Dcm_Dsp_Mode2Bitmask_acs[idxPID_u8].BitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   136  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   137                  /* If only availability PID is requested then the counter value == requested data length/2
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   138                  if only PID which report freeze frame data value is requested then the counter value is equal to 0*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   139                  if(nrMultiple_u8 != 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   140                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   141                  	if(dataPIDBitMask_u32 > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   142  					{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   143                  		/* Check if the response buffer is sufficient to hold the PID, freeze frame and PID bit mask  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   144                  		if(nrResMaxDataLen_u32>=0x06uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   145                  		{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   146  							/* Copy PID to response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   147  							adrRespBuf_pu8[nrResDataLen_u32] = adrTmpBuf_au8[nrPIDChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   148  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   149  							/* Load the freeze frame number as 0x00 to next byte in response data buffer immediately after PID number */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   150  							adrRespBuf_pu8[nrResDataLen_u32] = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   151  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   152  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   153  							/* Copy bit mask to response buffer of service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   154  							adrRespBuf_pu8[nrResDataLen_u32] = (uint8)(dataPIDBitMask_u32 >> 24u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   155  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   156  							adrRespBuf_pu8[nrResDataLen_u32] = (uint8)(dataPIDBitMask_u32 >> 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   157  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   158  							adrRespBuf_pu8[nrResDataLen_u32] = (uint8)(dataPIDBitMask_u32 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   159  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   160  							adrRespBuf_pu8[nrResDataLen_u32] = (uint8) dataPIDBitMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   161  							nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   162  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   163  							/* Update the maximum response data length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   164  							nrResMaxDataLen_u32 = nrResMaxDataLen_u32 - 0x06uL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   165  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   166  							/* Send positive response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   167  							*dataNegRespCode_u8 = 0x0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   168                  		}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   169                  		/* If response buffer is insufficient */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   170                  		else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   171                  		{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   172                  			/* Report development error "DCM_E_INTERFACE_BUFFER_OVERFLOW" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   173  							DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_INTERFACE_BUFFER_OVERFLOW)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   174  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   175  							/* Set Negative response code 0x12
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   176  							NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   177  							*dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   178  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   179  							break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   180                  		}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   181                  	}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   182                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   183                  /* If the requested PID is to obtain freeze frame data, Eg : PID 0x02,0x03 etc */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   184                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   185                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   186                      /* Calculate the Bit mask based on requested PID For eg: PID 01 is requested, this PID is within
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   187                      the range 01 to 1f hence availability PID is PID 00 & its Bit mask is of 4bytes in which BIT 31
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   188                      is mapped to PID 01.hence calculated bit mask 0x80000000 for PID 01*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   189                  	dataCalBitMask_u32 = ((uint32)1u << ((uint32)32u - ((adrTmpBuf_au8[nrPIDChk_qu8]) % 0x20)));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   190  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   191                      /* If the requested PID is supported */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   192  					if((dataPIDBitMask_u32 & dataCalBitMask_u32)> 0uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   193  					{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   194  						/* If PID requested is $02 if DTC that caused the freeze frame is to be obtained */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   195  					    /*Check whether flgGetDTCNum is True*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   196  						if((DCM_DSPMODE02_PID02 == adrTmpBuf_au8[nrPIDChk_qu8])||(flgGetDTCNum_b != FALSE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   197  						{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   198  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   199  							/* If requested PID is 02, then below DEM API needs to be called to get
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   200  							the DTC number in case of other PID,the below DEM API needs to be executed only
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   201  							once in order to obtain DTC number for eg: Request 07 02 03 00 04 00 05 00,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   202  							 for this request DEM API function can be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   203  							called only once in order to obtain DTC number*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   204  						    /*Update flgGetDTCNum with False */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   205  							flgGetDTCNum_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   206  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   207  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   208  							/* Call the DEM interface function to find whether there is DTC number stored
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   209  							in error memory for which freeze frame data is stored (either PID 02 is requested
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   210  							or not) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   211  							/*PID 02 is requested (read DTC which caused freeze frame to be stored),
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   212  							Dem_GetDTCOfOBDFreezeFrame( ) is called and the parameter passed is record
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   213  							number (its always 00)*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   214  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   215  							if(Dem_GetDTCOfOBDFreezeFrame(0x00, &nrDTC_u32) != E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   216  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   217  								nrDTC_u32 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   218  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   219  						}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   220  						/* DEM API function has returned value E_OK or E_NOT_OK
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   221  						in case of PID 02 is supported then send positive response with DTC number in
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   222  						nrDTC_u32.in case of other PIDS, if DTC number is non zero then use DEM API to get
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   223  						freeze frame data else send no response for other PID (Since DTC number is zero which
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   224  						indicates no freeze frame data is available */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   225  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   226  						/* Check whether special PID 02 which reports DTC number is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   227  						if(DCM_DSPMODE02_PID02 == adrTmpBuf_au8[nrPIDChk_qu8])
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   228  						{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   229  							if(nrResMaxDataLen_u32 >= 0x04uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   230  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   231  								/* Copy the PID 02 number from temporary buffer into response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   232  								adrRespBuf_pu8[nrResDataLen_u32] = adrTmpBuf_au8[nrPIDChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   233  								nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   234  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   235  								/* Fill the freeze frame number as 0x00 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   236  								adrRespBuf_pu8[nrResDataLen_u32] = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   237  								nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   238  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   239  								/* In case if Dem interface function Dem_GetDTCOfOBDFreezeFrame()
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   240  								returns E_OK then DTCnumber is available in parameter nrDTC_u32.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   241  								nrDTC_u32    3 (MSB)       2       1       0(LSB)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   242  											 ---         DTC high  DTC Low  ----
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   243  														  byte     byte
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   244  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   245  								byte 2 of nrDTC_u32 holds DTC high byte
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   246  								byte 1 of nrDTC_u32 holds DTC low byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   247  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   248  								adrRespBuf_pu8[nrResDataLen_u32] = (uint8)(nrDTC_u32 >> 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   249  								nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   250  								adrRespBuf_pu8[nrResDataLen_u32] = (uint8)(nrDTC_u32 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   251  								nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   252  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   253  								/* Update the remaining maximum response data length of response buffer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   254  								nrResMaxDataLen_u32 = nrResMaxDataLen_u32 - 0x04uL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   255  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   256  								/* Send positive response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   257  								*dataNegRespCode_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   258  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   259  							else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   260  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   261  	                			/* Report development error "DCM_E_INTERFACE_BUFFER_OVERFLOW" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   262  								DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_INTERFACE_BUFFER_OVERFLOW)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   263  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   264  								/* Set Negative response code 0x12
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   265  								NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   266  								*dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   267  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   268  								/* Break out of the for loop in case of buffer overflow */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   269  								nrPIDValid_qu8 = nrPIDChk_qu8 ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   270  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   271  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   272  						}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   273  						else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   274  						{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   275  							/* Byte 2,1 gives the DTC number high byte & low byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   276  							if((nrDTC_u32 & 0xFFFF00uL)> 0uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   277  							{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   278  								/* If the DTCNum is non zero then freeze frame data is stored in memory */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   279  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   280  								/* If the requested PID value is other than PID 02 do the following
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   281  								get the maximum available response data length in response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   282  								/*if the available response data length is greater than 255 then pass the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   283  								bufsize as 255bytes to DEM function otherwise pass the remaining buffer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   284  								size to bufsize */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   285  								/* Get the start index from the bit mask array */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   286  								idxPIDStart_qu8 = Dcm_Dsp_Mode2Bitmask_acs[idxPID_u8].StartIndex_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   287  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   288  								/* Set the flag to FALSE to indicate the PID has not been found */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   289  								/*Update PIDFound with False*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   290  								isPIDFound_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   291  							    dataRetGet_u8   = E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   292  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   293  								/* Get the number of PIDS(its number of iterations) for which below for loop has to be
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   294  								looped for. Eg: If in the range PID 01 to 1F, only 5 PIDs are supported and PID 01 is
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   295  								requested by tester then its sufficient to search PID 01 in the range pid 01 to 1F
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   296  								with only 5 iterations since only 5 PIDs are configured in that range*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   297  								for(nrPid_u8 = (uint8)idxPIDStart_qu8;((nrPid_u8 <(idxPIDStart_qu8 +(Dcm_Dsp_Mode2Bitmask_acs[idxPID_u8].NumPids_u8))) && (isPIDFound_b == FALSE));nrPid_u8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   298  								{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   299  									/* If the PID is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   300  									if( adrTmpBuf_au8[nrPIDChk_qu8] == (Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Pid_Id_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   301  									{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   302  										/* Set the PIDFound to TRUE. This indicates PID is found in configuration structure and
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   303  										not required to continue executing the above for loop*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   304  										isPIDFound_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   305  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   306  										/* If response buffer is sufficient to hold the PID data, PID and freeze frame requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   307  										if(nrResMaxDataLen_u32>=(uint32)(Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Pid_Size_u8+2))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   308  										{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   309  											/* Access data index of data structure Dcm_Dsp_Mode1DataPid_acs associated with each requested PID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   310  											idxPIDData_qu8 = Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].DataSourcePid_ArrayIndex_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   311  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   312  											/* Fill the number of bytes corresponding to length of the PID with fill bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   313  											for(idxDataSource_u16=(uint16)(nrResDataLen_u32+2uL);idxDataSource_u16<(nrResDataLen_u32+Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Pid_Size_u8+2u);idxDataSource_u16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   314  											{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   315  												adrRespBuf_pu8[idxDataSource_u16] = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   316  											}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   317  											/* Loop through each of the data elements and call the configured function to read PID data */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   318  											for(idxDataSource_u16= (uint16)idxPIDData_qu8;((idxDataSource_u16<(idxPIDData_qu8+Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Num_DataSourcePids_u8)) && (dataRetGet_u8==E_OK));idxDataSource_u16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   319  											{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   320  												/* Get the maximum length of the data element configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   321  												nrBufSize_u8 = (uint8)Dcm_Dsp_Mode2DataSourcePid_acs[idxDataSource_u16].Length_data_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   322  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   323  												/* call the API to get the data and pass the pointer to the buffer location */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   324  												dataRetGet_u8 = Dem_ReadDataOfOBDFreezeFrame(adrTmpBuf_au8[nrPIDChk_qu8],(uint8)(idxDataSource_u16-idxPIDData_qu8),
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   325  																						  &adrRespBuf_pu8[nrResDataLen_u32 +Dcm_Dsp_Mode2DataSourcePid_acs[idxDataSource_u16].Pos_data_u8+2u],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   326  																						  &nrBufSize_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   327  												/* Check if API returns E_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   328  												if(dataRetGet_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   329  												{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   330  													/* Check if length of data written is greater than the allowed length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   331  													if(nrBufSize_u8 >Dcm_Dsp_Mode2DataSourcePid_acs[idxDataSource_u16].Length_data_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   332  													{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   333  														/* Set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   334  														dataRetGet_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   335  													}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   336  												}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   337  											}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   338  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   339  											if(dataRetGet_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   340  											{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   341  												/* Copy the PID Number from temporary buffer to response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   342  												adrRespBuf_pu8[nrResDataLen_u32] = adrTmpBuf_au8[nrPIDChk_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   343  												nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   344  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   345  												/* Fill the freeze frame number as 0x00 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   346  												adrRespBuf_pu8[nrResDataLen_u32] = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   347  												nrResDataLen_u32++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   348  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   349  												/* Increment the index of response buffer by	PID number(1byte)+freeze frame number(1byte)+Bufsize_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   350  												nrBufSize_u8 is length of data bytes updated into response buffer.This variable is passed as input
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   351  												parameter to DEM function with maximum available response buffer size & DEM function returns the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   352  												exact data value filled in response buffer which is updated in nrBufSize_u8 only if the return value is E_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   353  												nrResDataLen_u32 = nrResDataLen_u32 + Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Pid_Size_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   354  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   355  												/* Update the maximum available response buffer size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   356  												nrResMaxDataLen_u32 =  nrResMaxDataLen_u32 - (2uL + (Dcm_MsgLenType)Dcm_Dsp_Mode2PidArray_acs[nrPid_u8].Pid_Size_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   357  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   358  												/* Send positive response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   359  												*dataNegRespCode_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   360  											}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   361  											else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   362  											{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   363  												/* Report development error "E_NOT_OK" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   364  												DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_RET_E_NOT_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   365  											}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   366  										}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   367  										else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   368  										{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   369  				                			/* Report development error "DCM_E_INTERFACE_BUFFER_OVERFLOW" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   370  											DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_INTERFACE_BUFFER_OVERFLOW)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   371  											/* Set Negative response code 0x12
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   372  											NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   373  												*dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   374  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   375  											/* Update the index to break out of the for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   376  											nrPIDValid_qu8 = nrPIDChk_qu8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   377  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   378  											break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   379  										}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   380  									}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   381  								} /* End of for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   382  							}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   383  						}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   384  					}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   385                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   386              } /* End of for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   387  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   388              /* Set the response length for requested PID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   389              pMsgContext->resDataLen = nrResDataLen_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   390          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   391          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   392          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   393              /*Set Negative response code 0x12 for the combination of both supported PID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   394              and PID which report data value in single request format
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   395              NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   396              *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   397  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   398              /* Report development error "MIXED MODE" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   399              DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_MIXED_MODE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   400          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   401      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   402      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   403      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   404          /* Requested data length is not equal to 2 or 4 or 6 then Send Negative response code Request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   405          Length Invalid NRC 0x12 is suppressed in DCM module for OBD service since its functional addressing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   406          *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   407  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   408          /*report development error "Invalid length" to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   409          DCM_DET_ERROR(DCM_OBDMODE02_ID, DCM_E_INVALID_LENGTH)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   410      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   411  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   412      /* If negative response code is set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   413      if(*dataNegRespCode_u8 != 0x0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   414      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   415          /* Call function to set Negative response code */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   416          dataRetVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   417  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   418      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   419      else{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   420          dataRetVal_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   421      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   422  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   423      return dataRetVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   424  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   425  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   426  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   427  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   428  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   429  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   430  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspObd\DcmDspObd_Mode2.c	   431  

	; Module end
