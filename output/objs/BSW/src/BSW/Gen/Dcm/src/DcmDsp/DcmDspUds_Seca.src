	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14688a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Seca.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c'

	
$TC16X
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_NewSecurityLevelToUnlock',code,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_NewSecurityLevelToUnlock'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     3  #include "DcmDspUds_Seca_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     4  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     5  #if ( ( DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF ) && ( DCM_CFG_DSP_SECURITYACCESS_ENABLED != DCM_CFG_OFF ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     6  #include "DcmDspUds_Seca_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     7  #define DCM_START_SEC_VAR_CLEARED_8                                 /* Adding this for memory mapping   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     8  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	     9  VAR(uint8, DCM_VAR)  Dcm_DspSecTabIdx_u8;                           /* Security table index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    10  VAR(uint8, DCM_VAR)  Dcm_DspSecAccType_u8;                          /* Security Access type requested   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    11  static VAR(uint8, DCM_VAR)   Dcm_Prv_stCmpKey_u8;                   /* Status of comparison of Key      */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    12  static VAR(Dcm_SecLevelType, DCM_VAR)    Dcm_Prv_dataSecLevel_u8;   /* variable to store Security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    13  #define DCM_STOP_SEC_VAR_CLEARED_8                                  /* Adding this for memory mapping   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    14  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    15  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    16  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED                       /* Adding this for memory mapping   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    17  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    18  static VAR(uint8_least, DCM_VAR)  Dcm_Prv_idxSecTab_qu8;            /* variable to store table index    */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    19  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    20  static P2CONST(Dcm_Dsp_Security_t,AUTOMATIC,DCM_INTERN_DATA) Dcm_Prv_ptrSecurityConfig_p;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    21  static P2VAR(void,AUTOMATIC, DCM_INTERN_DATA)   Dcm_Prv_ptrSecaFnc_p;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    22  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    23  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    24  static VAR(uint8,AUTOMATIC)                     Dcm_Prv_dataSecAccType_u8;   /* Local variable to store Access type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    25  static VAR(uint8,AUTOMATIC)                     Dcm_Prv_dataSubFunc_u8;      /* Local variable to store sub-function*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    26  static VAR(uint32,AUTOMATIC)                    Dcm_Prv_nrSeedLen_u32;        /* Local variable to store Seed Length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    27  static VAR(Dcm_Dsp_SecaStates_ten,AUTOMATIC)    Dcm_Prv_substSeca_en;        /* Seca sub status in CHECKDATA state  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    28  static VAR(Std_ReturnType,AUTOMATIC)            Dcm_Prv_dataRetGetSeed_u8;   /* Return type of XXX_GetSeed API  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    29  /* return value of API used for storing security attempt counter in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    30  static VAR(Std_ReturnType,AUTOMATIC)            Dcm_Prv_dataRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    31  static VAR(Std_ReturnType,AUTOMATIC)            Dcm_Prv_secaServRetValue_u8; /* SECA service return variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    32  /* DelayTimer variable for Updated DelayTime */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    33  static VAR(uint32,AUTOMATIC)                    Dcm_Prv_nrDelay_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    34  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    35  static VAR(boolean,AUTOMATIC)                   Dcm_Prv_stBuffer_b;          /* Status Of the Seed Buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    36  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    37  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    38  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED                                 /* Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    39  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    40  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    41  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN                                    /* Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    42  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    43  /* This is set if DcmAppl_StoreDelayCount is called in the pending state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    44  static VAR(boolean, DCM_VAR)      Dcm_Prv_flgApplFuncCall_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    45  #if( DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    46  /* For ASynchronous server call point handling */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    47  static VAR(boolean, DCM_VAR)      Dcm_Prv_Dcm_SecaRteCallPlaced_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    48  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    49  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN                                    /* Adding this for memory mapping */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    50  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    51  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    52  #define DCM_START_SEC_CODE                                                  /* Adding this for memory mapping */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    53  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    54  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    55  #if( DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    56  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    57   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    58   *Function name    : Dcm_ResetAsynchSecaFlags
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    59   *Syntax           : Dcm_ResetAsynchSecaFlag(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    60   *Description      : Reset all the Flags for Asynchronous server call point handling
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    61   *                   This API is invoked by Rdbi_Ini to reset Flags in case of Protocol Preemption
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    62   *Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    63   *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    64   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    65   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    66  FUNC (void,DCM_CODE) Dcm_ResetAsynchSecaFlag(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    67  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    68       /* Reset the Flags defined for Asynchronous server call point handling */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    69       Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    70  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    71  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    72  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    73  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    74  *Function name    : Dcm_Prv_NewSecurityLevelToUnlock
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    75  *Syntax           : Dcm_Prv_NewSecurityLevelToUnlock(Dcm_SrvOpStatusType OpStatus,Dcm_MsgContextType pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    76  *Description      : Function to Unlock the requested New security level
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    77  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType  pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    78  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    79  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    80  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    81  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    82  static FUNC(void,DCM_CODE) Dcm_Prv_NewSecurityLevelToUnlock
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    83                              (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    84                                P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    85  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    86  static FUNC(void,DCM_CODE) Dcm_Prv_NewSecurityLevelToUnlock
; Function Dcm_Prv_NewSecurityLevelToUnlock
.L98:
Dcm_Prv_NewSecurityLevelToUnlock:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    87                              (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    88                                P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    89  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    90  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    91  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    92  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    93      /* Local Loop variable for Seed index  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    94      VAR(uint32,AUTOMATIC)      l_idxSeed_qu32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    95      /* Copy seed length to local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    96      Dcm_Prv_nrSeedLen_u32 = Dcm_Prv_ptrSecurityConfig_p->Seed_size_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    97  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    98      /* Fill the seed stored in Request Seed state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	    99      for(l_idxSeed_qu32 =0; (l_idxSeed_qu32 < Dcm_Prv_nrSeedLen_u32); l_idxSeed_qu32++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   100      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   101      /* Check if SeedBuffer is valid */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   102          if(Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].SeedBuff[l_idxSeed_qu32] != 0x0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   103          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   104          /* SeedBuffer has Valid Data Proceed Restoration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   105          Dcm_Prv_stBuffer_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   106          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   107          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   108      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   109      /* Check for Valid BuffState for Seed Restoration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   110      if(Dcm_Prv_stBuffer_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   111      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   112      /* Fill the seed stored in Request Seed state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   113          for(l_idxSeed_qu32 =0; (l_idxSeed_qu32 < Dcm_Prv_nrSeedLen_u32); l_idxSeed_qu32++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   114          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   115          /* Store the seed in the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   116          pMsgContext->resData[l_idxSeed_qu32 + 0x1u] = Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].SeedBuff[l_idxSeed_qu32];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   117          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   118          /* Fill the Access Type in the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   119          pMsgContext->resData[0] = Dcm_Prv_dataSubFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   120          /* Update response data length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   121          pMsgContext->resDataLen = (Dcm_MsgLenType)(l_idxSeed_qu32 + 1u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   122          Dcm_Prv_secaServRetValue_u8=E_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   123      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   124      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   125  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   126      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   127  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   128      /* Copy Security Access Data Record into Buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   129          if( Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32 != 0x00u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   130          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   131              /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   132              DCM_MEMCOPY(&(Dcm_InParameterBuf_au8[0]), &(pMsgContext->reqData[1]),
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   133              Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   134          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   135  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   136  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   137          /* set state to CHECKDATA */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   138          *OpStatus = DCM_CHECKDATA;
	mov	d15,#4
.L593:
	st.b	[a4],d15
.L594:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   139          /* Set substate to GENSEED */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   140          Dcm_Prv_substSeca_en = DCM_DSP_SECA_GENSEED;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L595:
	mov	d15,#0
.L596:
	st.w	[a15],d15
.L597:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   141          #if((DCM_CFG_DSP_SECA_STORESEED == DCM_CFG_OFF) && (DCM_CFG_IN_PARAM_MAXLEN <= 0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   142          (void)(pMsgContext);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   143          #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   144      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   145  }
	ret
.L366:
	
__Dcm_Prv_NewSecurityLevelToUnlock_function_end:
	.size	Dcm_Prv_NewSecurityLevelToUnlock,__Dcm_Prv_NewSecurityLevelToUnlock_function_end-Dcm_Prv_NewSecurityLevelToUnlock
.L179:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_ReqSecIsCurrentSecurityLevel',code,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_ReqSecIsCurrentSecurityLevel'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   146  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   147  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   148  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   149  *Function name    : Dcm_Prv_ReqSecIsCurrentSecurityLevel
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   150  *Syntax           : Dcm_Prv_ReqSecIsCurrentSecurityLevel(Dcm_SrvOpStatusType OpStatus,Dcm_MsgContextType pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   151  *Description      : Function to be performed in case of SEED request, requested security level matches with the current
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   152  *                   security level
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   153  *Parameter        : Dm_SrvOpStatusType OpStatus, Dcm_MsgContextType  pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   154  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   155  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   156  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   157  static FUNC(void,DCM_CODE) Dcm_Prv_ReqSecIsCurrentSecurityLevel
; Function Dcm_Prv_ReqSecIsCurrentSecurityLevel
.L100:
Dcm_Prv_ReqSecIsCurrentSecurityLevel:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   158                             (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   159                              P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   160  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   161      VAR(uint32,AUTOMATIC)  idxLoopSeed_qu32;    /* Local variable to traverse the loop   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   162      /* Fill the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   163      pMsgContext->resData[0] = Dcm_Prv_dataSecAccType_u8;
	ld.a	a15,[a5]
.L602:
	movh.a	a2,#@his(Dcm_Prv_dataSecAccType_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecAccType_u8)
	ld.bu	d15,[a2]
.L603:
	st.b	[a15],d15
.L604:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   164  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   165      /* Fill 0x00 for all bytes of Seed size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   166      for(idxLoopSeed_qu32=1;(idxLoopSeed_qu32 <=Dcm_Prv_ptrSecurityConfig_p->Seed_size_u32);idxLoopSeed_qu32++)
	mov	d0,#1
.L458:
	j	.L2
.L3:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   167      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   168          pMsgContext->resData[idxLoopSeed_qu32] = 0x00;
	ld.a	a15,[a5]
.L605:
	addsc.a	a15,a15,d0,#0
.L606:
	mov	d15,#0
.L607:
	st.b	[a15],d15
.L608:
	add	d0,#1
.L2:
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
	ld.a	a15,[a15]
.L609:
	ld.w	d15,[a15]20
.L610:
	jge.u	d15,d0,.L3
.L611:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   169      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   170      /* Update Response Data Length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   171      pMsgContext->resDataLen = (uint8)idxLoopSeed_qu32;
	extr.u	d15,d0,#0,#8
.L612:
	st.w	[a5]12,d15
.L613:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   172  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   173      /* Move back to Request seed state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   174      /* stSeca_en =  DCM_DSP_SECA_REQUEST; */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   175      *OpStatus = DCM_INITIAL;
	mov	d15,#0
.L614:
	st.b	[a4],d15
.L615:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   176      /* Resetting Stored AccessType */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   177      Dcm_DspSecAccType_u8 = 0x0;
	movh.a	a15,#@his(Dcm_DspSecAccType_u8)
	lea	a15,[a15]@los(Dcm_DspSecAccType_u8)
.L616:
	mov	d15,#0
.L617:
	st.b	[a15],d15
.L618:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   178      /* Resetting Security Index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   179      Dcm_DspSecTabIdx_u8  = 0x0;
	movh.a	a15,#@his(Dcm_DspSecTabIdx_u8)
	lea	a15,[a15]@los(Dcm_DspSecTabIdx_u8)
.L619:
	mov	d15,#0
.L620:
	st.b	[a15],d15
.L621:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   180      Dcm_Prv_secaServRetValue_u8=E_OK;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L622:
	mov	d15,#0
.L623:
	st.b	[a15],d15
.L624:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   181  }
	ret
.L371:
	
__Dcm_Prv_ReqSecIsCurrentSecurityLevel_function_end:
	.size	Dcm_Prv_ReqSecIsCurrentSecurityLevel,__Dcm_Prv_ReqSecIsCurrentSecurityLevel_function_end-Dcm_Prv_ReqSecIsCurrentSecurityLevel
.L184:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_CurrentSecurityLevel',code,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_CurrentSecurityLevel'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   182  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   183  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   184  *Function name    : Dcm_Prv_CurrentSecurityLevel
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   185  *Syntax           : Dcm_Prv_CurrentSecurityLevel
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   186  *                   (Dcm_MsgContextType pMsgContext,Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   187  *Description      : Function to check current security level in case of a new security request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   188  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   189  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   190  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   191  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   192  static FUNC(void,DCM_CODE) Dcm_Prv_CurrentSecurityLevel
; Function Dcm_Prv_CurrentSecurityLevel
.L102:
Dcm_Prv_CurrentSecurityLevel:	.type	func
	sub.a	a10,#8
.L459:
	mov.aa	a12,a4
.L462:
	mov.aa	a15,a5
.L463:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   193                              (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   194                                  P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   195  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   196      VAR(Dcm_SecLevelType,AUTOMATIC)   dataGetSecurityLevel_u8;  /* Variable for current active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   197      VAR(Std_ReturnType,AUTOMATIC)     dataRetGetSecLevel_u8;    /* return for Dcm_GetSecurityLevel */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   198  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   199      /* Get the current active security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   200      dataRetGetSecLevel_u8 = Dcm_GetSecurityLevel(&dataGetSecurityLevel_u8);
	lea	a4,[a10]0
.L461:
	call	Dcm_GetSecurityLevel
.L460:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   201  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   202      /* if the current security was read without any errors */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   203      if(dataRetGetSecLevel_u8 == E_OK)
	jne	d2,#0,.L4
.L629:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   204      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   205          Dcm_DspSecTabIdx_u8  = (uint8)(Dcm_Prv_idxSecTab_qu8);   /* Update Security table index */
	movh.a	a15,#@his(Dcm_DspSecTabIdx_u8)
.L464:
	lea	a15,[a15]@los(Dcm_DspSecTabIdx_u8)
.L630:
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d15,[a2]
.L631:
	st.b	[a15],d15
.L632:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   206          Dcm_DspSecAccType_u8 = Dcm_Prv_dataSecAccType_u8;        /* Store the Access Type       */
	movh.a	a15,#@his(Dcm_DspSecAccType_u8)
	lea	a15,[a15]@los(Dcm_DspSecAccType_u8)
.L633:
	movh.a	a2,#@his(Dcm_Prv_dataSecAccType_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecAccType_u8)
	ld.bu	d15,[a2]
.L634:
	st.b	[a15],d15
.L635:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   207  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   208          /* Check if the request security is the current active security */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   209          if(dataGetSecurityLevel_u8 == Dcm_Prv_dataSecLevel_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   210          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   211          Dcm_Prv_ReqSecIsCurrentSecurityLevel(&Dcm_SrvOpstatus_u8,pMsgContext);
	movh.a	a4,#@his(Dcm_SrvOpstatus_u8)
	lea	a4,[a4]@los(Dcm_SrvOpstatus_u8)
.L636:
	ld.bu	d15,[a10]
.L637:
	movh.a	a15,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataSecLevel_u8)
	ld.bu	d0,[a15]
.L638:
	jne	d15,d0,.L5
.L639:
	mov.aa	a5,a12
.L466:
	call	Dcm_Prv_ReqSecIsCurrentSecurityLevel
.L465:
	j	.L6
.L5:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   212          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   213          /* New security level is requested to unlock */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   214          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   215          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   216          Dcm_Prv_NewSecurityLevelToUnlock(&Dcm_SrvOpstatus_u8,pMsgContext);
	mov.aa	a5,a12
.L467:
	call	Dcm_Prv_NewSecurityLevelToUnlock
.L6:
	j	.L7
.L4:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   217          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   218      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   219      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   220      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   221      /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   222      *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L640:
	st.b	[a15],d15
.L7:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   223      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   224  }
	ret
.L376:
	
__Dcm_Prv_CurrentSecurityLevel_function_end:
	.size	Dcm_Prv_CurrentSecurityLevel,__Dcm_Prv_CurrentSecurityLevel_function_end-Dcm_Prv_CurrentSecurityLevel
.L189:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecurityLevelConfigured',code,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecurityLevelConfigured'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   225  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   226  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   227  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   228  *Function name    : Dcm_Prv_SecurityLevelConfigured
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   229  *Syntax           : Dcm_Prv_SecurityLevelConfigured
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   230  *                   (Dcm_MsgContextType pMsgContext,Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   231  *Description      : In DCM_INITIAL state for a given SEED request, following checks to be done if requested
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   232  *                   Seecurity level is configured
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   233  *                       a. Check for correct request length
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   234  *                       b. Check if number of attempts exceeds the configured value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   235  *                       c. Check if time monitoring is required for Seed Request and Delay time is active
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   236  *Parameter        : Dcm_MsgContextType pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   237  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   238  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   239  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   240  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   241  static FUNC(void,DCM_CODE) Dcm_Prv_SecurityLevelConfigured
; Function Dcm_Prv_SecurityLevelConfigured
.L104:
Dcm_Prv_SecurityLevelConfigured:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   242                             (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   243                             P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   244  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   245      Dcm_Prv_ptrSecurityConfig_p = &Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
	movh.a	a15,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a15,[a15]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d0,[a15]
.L645:
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
.L646:
	mul	d15,d0,#40
.L647:
	movh.a	a2,#@his(Dcm_Dsp_Security)
	lea	a2,[a2]@los(Dcm_Dsp_Security)
.L648:
	addsc.a	a2,a2,d15,#0
.L649:
	st.a	[a15],a2
.L650:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   246      /* Check for the request length */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   247      if(pMsgContext->reqDataLen != (0x01u + Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32))
	ld.a	a15,[a15]
.L651:
	ld.w	d1,[a4]16
.L652:
	ld.w	d15,[a15]32
.L653:
	add	d15,#1
.L654:
	jeq	d15,d1,.L8
.L655:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   248      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   249          /* Set the negative response as request length is incorrect ($13) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   250          *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L656:
	st.b	[a5],d15
.L657:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   251      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   252      /* Check if number of attempts exceeds the configured value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   253      else if((Dcm_Prv_ptrSecurityConfig_p->NumAttLock_u8 > 0) &&
	ld.bu	d1,[a15]29
.L658:
	jeq	d1,#0,.L10
.L659:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   254      (Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8 >= Dcm_Prv_ptrSecurityConfig_p->NumAttLock_u8))
	movh.a	a15,#@his(Dcm_Dsp_Seca)
	lea	a15,[a15]@los(Dcm_Dsp_Seca)
.L660:
	addsc.a	a15,a15,d0,#3
.L661:
	ld.bu	d15,[a15]4
.L662:
	jlt.u	d15,d1,.L11
.L663:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   255      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   256          *dataNegRespCode_u8 = DCM_E_EXCEEDNUMBEROFATTEMPTS;
	mov	d15,#54
.L664:
	st.b	[a5],d15
.L665:
	j	.L12
.L11:
.L10:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   257      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   258  #if (DCM_CFG_DSP_DELAYTIMERMONITORING == DCM_PRV_REQUEST_SEED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   259      /* Check if time monitoring is required for Seed Request and Delay time is active */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   260      else if(Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].Residual_delay_u32 > Dcm_Dsp_SecaGlobaltimer_u32)
	movh.a	a15,#@his(Dcm_Dsp_Seca)
	lea	a15,[a15]@los(Dcm_Dsp_Seca)
.L666:
	addsc.a	a15,a15,d0,#3
.L667:
	ld.w	d15,[a15]
.L668:
	movh.a	a15,#@his(Dcm_Dsp_SecaGlobaltimer_u32)
	lea	a15,[a15]@los(Dcm_Dsp_SecaGlobaltimer_u32)
	ld.w	d0,[a15]
.L669:
	jge.u	d0,d15,.L13
.L670:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   261      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   262          *dataNegRespCode_u8 = DCM_E_REQUIREDTIMEDELAYNOTEXPIRED;
	mov	d15,#55
.L671:
	st.b	[a5],d15
.L672:
	j	.L14
.L13:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   263      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   264  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   265      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   266      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   267          Dcm_Prv_CurrentSecurityLevel(pMsgContext,dataNegRespCode_u8);
	call	Dcm_Prv_CurrentSecurityLevel
.L14:
.L12:
.L9:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   268      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   269  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   270      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   271      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   272          * Requested security level is not allowed in the current session *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   273          * It is assumed, this subfunction has been allowed in any one other sessions at least *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   274          * Configuration tool should have taken care of this point *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   275          *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTEDINACTIVESESSION;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   276      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   277  **/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   278  }
	ret
.L381:
	
__Dcm_Prv_SecurityLevelConfigured_function_end:
	.size	Dcm_Prv_SecurityLevelConfigured,__Dcm_Prv_SecurityLevelConfigured_function_end-Dcm_Prv_SecurityLevelConfigured
.L194:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaSeedRequest',code,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaSeedRequest'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   279  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   280  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   281  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   282  *Function name    : Dcm_Prv_SecaSeedRequest
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   283  *Syntax           : Dcm_Prv_SecaSeedRequest
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   284  *                   (Dcm_MsgContextType pMsgContext,Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   285  *Description      : In DCM_INITIAL state checks to be done in case of a new SEED request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   286  *                           a. Whether the requested security level is configured in ECU
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   287  *                           b. If the wait cycle counter for Get attempt counter is exhausted
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   288  *Parameter        : Dcm_MsgContextType pMsgContext
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   289  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   290  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   291  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   292  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   293  static FUNC(void,DCM_CODE) Dcm_Prv_SecaSeedRequest (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; Function Dcm_Prv_SecaSeedRequest
.L106:
Dcm_Prv_SecaSeedRequest:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   294                                    P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   295  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   296      /* Local variable to store table index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   297      VAR(uint8_least, DCM_VAR)  l_idxSecTab_qu8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   298  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   299      /* Request is Valid Seed Request.Get requested Access Type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   300      Dcm_Prv_dataSecAccType_u8 = Dcm_Prv_dataSubFunc_u8;
	movh.a	a15,#@his(Dcm_Prv_dataSecAccType_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataSecAccType_u8)
.L677:
	movh.a	a2,#@his(Dcm_Prv_dataSubFunc_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSubFunc_u8)
	ld.bu	d15,[a2]
.L678:
	st.b	[a15],d15
.L679:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   301  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   302      /* Evaluate the Security Level requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   303      Dcm_Prv_dataSecLevel_u8 = ((Dcm_Prv_dataSecAccType_u8 + 1u)>>1u);
	movh.a	a2,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecLevel_u8)
.L680:
	ld.bu	d15,[a15]
.L681:
	add	d15,#1
.L682:
	sh	d15,#-1
.L683:
	st.b	[a2],d15
.L684:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   304  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   305      /* Check whether the requested security level is configured in ECU */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   306      for(l_idxSecTab_qu8=0; (l_idxSecTab_qu8 < DCM_CFG_DSP_NUMSECURITY) &&
	mov	d15,#0
.L469:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   307      (Dcm_Dsp_Security[l_idxSecTab_qu8].Security_level_u8 != Dcm_Prv_dataSecLevel_u8); l_idxSecTab_qu8++)
	j	.L15
.L16:
	add	d15,#1
.L15:
	jne	d15,#0,.L17
.L685:
	movh.a	a15,#@his(Dcm_Dsp_Security)
	lea	a15,[a15]@los(Dcm_Dsp_Security)
.L686:
	mul	d0,d15,#40
	addsc.a	a15,a15,d0,#0
.L687:
	ld.bu	d0,[a15]16
.L688:
	ld.bu	d1,[a2]
.L689:
	jne	d0,d1,.L16
.L17:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   308         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   309          /* Do Nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   310         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   311      /* Update variable to store table index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   312      Dcm_Prv_idxSecTab_qu8 = l_idxSecTab_qu8;
	movh.a	a15,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a15,[a15]@los(Dcm_Prv_idxSecTab_qu8)
.L690:
	st.w	[a15],d15
.L691:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   313  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   314  #if(DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   315      /*Check if the wait cycle counter for Get attempt counter is exhausted*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   316      if(Dcm_GetattemptCounterWaitCycle_u8 > DCM_DSP_SECURITY_MAX_ATTEMPT_COUNTER_READOUT_TIME)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   317      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   318  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   319          /* Security level is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   320          if(l_idxSecTab_qu8 < DCM_CFG_DSP_NUMSECURITY)
	jne	d15,#0,.L18
.L692:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   321          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   322          Dcm_Prv_SecurityLevelConfigured (pMsgContext,dataNegRespCode_u8);
	call	Dcm_Prv_SecurityLevelConfigured
.L468:
	j	.L19
.L18:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   323          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   324          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   325          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   326          /* Security level is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   327          *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
	mov	d15,#18
.L470:
	st.b	[a5],d15
.L19:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   328          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   329  #if(DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   330      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   331      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   332      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   333          *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   334      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   335  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   336  }
	ret
.L384:
	
__Dcm_Prv_SecaSeedRequest_function_end:
	.size	Dcm_Prv_SecaSeedRequest,__Dcm_Prv_SecaSeedRequest_function_end-Dcm_Prv_SecaSeedRequest
.L199:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_ReqSecaLvlConfigured',code,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_ReqSecaLvlConfigured'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   337  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   338  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   339  *Function name    : Dcm_Prv_ReqSecaLvlConfigured
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   340  *Syntax           : Dcm_Prv_ReqSecaLvlConfigured (Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   341  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   342  *Description      : In DCM_INITIAL state for a given SEED request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   343  *                        a. Check if the seed was sent for the same Security Level
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   344  *                        b. Check whether the length of the key sent by tester is correct
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   345  *                        c. Check if the Delay timer monitoring is required and Delay timer is running
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   346  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   347  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   348  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   349  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   350  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   351  static FUNC(void,DCM_CODE) Dcm_Prv_ReqSecaLvlConfigured
; Function Dcm_Prv_ReqSecaLvlConfigured
.L108:
Dcm_Prv_ReqSecaLvlConfigured:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   352                              (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   353                                P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   354                                  P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   355  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   356      Dcm_Prv_ptrSecurityConfig_p =&Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
.L697:
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d15,[a2]
.L698:
	mul	d15,d15,#40
.L699:
	movh.a	a2,#@his(Dcm_Dsp_Security)
	lea	a2,[a2]@los(Dcm_Dsp_Security)
.L700:
	addsc.a	a2,a2,d15,#0
.L701:
	st.a	[a15],a2
.L702:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   357      /* Calculate the security level from the stored AccessType received in Request Seed*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   358      Dcm_Prv_dataSecLevel_u8   = ((Dcm_DspSecAccType_u8+1)>>1u);
	movh.a	a2,#@his(Dcm_DspSecAccType_u8)
	lea	a2,[a2]@los(Dcm_DspSecAccType_u8)
	ld.bu	d15,[a2]
.L703:
	movh.a	a2,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecLevel_u8)
.L704:
	add	d0,d15,#1
.L705:
	sha	d0,#-1
.L706:
	st.b	[a2],d0
.L707:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   359      /* Check if the seed was sent for the same Security Level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   360      if(Dcm_Prv_dataSubFunc_u8 != (Dcm_DspSecAccType_u8+1u))
	movh.a	a2,#@his(Dcm_Prv_dataSubFunc_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSubFunc_u8)
	ld.bu	d0,[a2]
.L708:
	add	d15,#1
.L709:
	jeq	d15,d0,.L20
.L710:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   361      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   362          /* Set the negative response as request length is incorrect ($24) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   363          *dataNegRespCode_u8 = DCM_E_REQUESTSEQUENCEERROR;
	mov	d15,#36
.L711:
	st.b	[a6],d15
.L712:
	j	.L21
.L20:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   364      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   365      /* Check whether the length of the key sent by tester is correct */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   366      else if(pMsgContext->reqDataLen != (Dcm_Prv_ptrSecurityConfig_p->Key_size_u32 + 1u))
	ld.w	d0,[a5]16
.L713:
	ld.a	a15,[a15]
.L714:
	ld.w	d15,[a15]24
.L715:
	add	d15,#1
.L716:
	jeq	d15,d0,.L22
.L717:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   367      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   368          /* Set the negative response as request length is incorrect ($13) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   369          *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
	mov	d15,#19
.L718:
	st.b	[a6],d15
.L719:
	j	.L23
.L22:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   370      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   371  #if (DCM_CFG_DSP_DELAYTIMERMONITORING == DCM_PRV_SEND_KEY)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   372      /* Check if the Delay timer monitoring is required and Delay timer is running */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   373      else if(Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].Residual_delay_u32 > Dcm_Dsp_SecaGlobaltimer_u32)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   374      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   375          /* Set the negative response as REQUIREDTIMEDELAYNOTEXPIRED */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   376          *dataNegRespCode_u8 = DCM_E_REQUIREDTIMEDELAYNOTEXPIRED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   377      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   378  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   379      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   380      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   381          /* set status to CHECKDATA */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   382          *OpStatus = DCM_CHECKDATA;
	mov	d15,#4
.L720:
	st.b	[a4],d15
.L721:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   383          /* Move the state to DCM_DSP_SECA_COMPAREKEY */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   384          Dcm_Prv_substSeca_en = DCM_DSP_SECA_COMPAREKEY;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L722:
	mov	d15,#1
.L723:
	st.w	[a15],d15
.L23:
.L21:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   385      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   386  }
	ret
.L389:
	
__Dcm_Prv_ReqSecaLvlConfigured_function_end:
	.size	Dcm_Prv_ReqSecaLvlConfigured,__Dcm_Prv_ReqSecaLvlConfigured_function_end-Dcm_Prv_ReqSecaLvlConfigured
.L204:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_ChkForReqSecaLvl',code,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_ChkForReqSecaLvl'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   387  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   388  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   389  *Function name    : Dcm_Prv_ChkForReqSecaLvl
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   390  *Syntax           : Dcm_Prv_ChkForReqSecaLvl(Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   391  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   392  *Description      : In DCM_INITIAL state for a given SECA request this function Checks if requested security level
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   393  *                   is configured in ECU
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   394  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   395  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   396  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   397  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   398  static FUNC(void,DCM_CODE) Dcm_Prv_ChkForReqSecaLvl
; Function Dcm_Prv_ChkForReqSecaLvl
.L110:
Dcm_Prv_ChkForReqSecaLvl:	.type	func
	mov.aa	a15,a4
.L473:
	mov.aa	a6,a5
.L474:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   399                             (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   400                              P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   401  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   402      /* Local variable to store table index  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   403      VAR(uint8_least, DCM_VAR)  l_idxSecTab_qu8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   404  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   405      /* Calculate Security level from Sub function sent */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   406      Dcm_Prv_dataSecLevel_u8 = (Dcm_Prv_dataSubFunc_u8 >> 1u);
	movh.a	a2,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecLevel_u8)
.L728:
	movh.a	a4,#@his(Dcm_Prv_dataSubFunc_u8)
.L472:
	lea	a4,[a4]@los(Dcm_Prv_dataSubFunc_u8)
	ld.bu	d15,[a4]
.L729:
	sha	d15,#-1
.L730:
	st.b	[a2],d15
.L731:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   407  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   408      /* Check whether the sent Access Type (security level) is configured in ECU */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   409      for(l_idxSecTab_qu8=0; (l_idxSecTab_qu8 < DCM_CFG_DSP_NUMSECURITY) &&
	mov	d15,#0
.L475:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   410      (Dcm_Dsp_Security[l_idxSecTab_qu8].Security_level_u8 != Dcm_Prv_dataSecLevel_u8); l_idxSecTab_qu8++)
	j	.L24
.L25:
	add	d15,#1
.L24:
	jne	d15,#0,.L26
.L732:
	movh.a	a4,#@his(Dcm_Dsp_Security)
	lea	a4,[a4]@los(Dcm_Dsp_Security)
.L733:
	mul	d0,d15,#40
	addsc.a	a4,a4,d0,#0
.L734:
	ld.bu	d0,[a4]16
.L735:
	ld.bu	d1,[a2]
.L736:
	jne	d0,d1,.L25
.L26:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   411      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   412          /* Do Nothing */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   413      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   414      /* Update the variable to store table index       */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   415      Dcm_Prv_idxSecTab_qu8 = l_idxSecTab_qu8;
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
.L737:
	st.w	[a2],d15
.L738:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   416      /* Security level is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   417      if(l_idxSecTab_qu8 >= DCM_CFG_DSP_NUMSECURITY)
	jeq	d15,#0,.L27
.L739:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   418      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   419          /* Set the Negative response as security level is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   420          *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
	mov	d15,#18
.L476:
	st.b	[a6],d15
.L740:
	j	.L28
.L27:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   421      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   422      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   423      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   424          Dcm_Prv_ReqSecaLvlConfigured(&Dcm_SrvOpstatus_u8,pMsgContext,dataNegRespCode_u8);
	movh.a	a4,#@his(Dcm_SrvOpstatus_u8)
	lea	a4,[a4]@los(Dcm_SrvOpstatus_u8)
.L741:
	mov.aa	a5,a15
.L471:
	call	Dcm_Prv_ReqSecaLvlConfigured
.L28:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   425      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   426  }
	ret
.L393:
	
__Dcm_Prv_ChkForReqSecaLvl_function_end:
	.size	Dcm_Prv_ChkForReqSecaLvl,__Dcm_Prv_ChkForReqSecaLvl_function_end-Dcm_Prv_ChkForReqSecaLvl
.L209:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaRequestState',code,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaRequestState'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   427  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   428  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   429  *Function name    : Dcm_Prv_SecaRequestState
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   430  *Syntax           : Dcm_Prv_SecaRequestState(Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   431  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   432  *Description      : For a given seca request in Dcm state DCM_INITIAL to Check the type of seca request(SEED or KEY)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   433  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   434  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   435  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   436  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   437  static FUNC(void,DCM_CODE) Dcm_Prv_SecaRequestState(P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; Function Dcm_Prv_SecaRequestState
.L112:
Dcm_Prv_SecaRequestState:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   438                                P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   439  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   440      /* Copy the subfunction to local variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   441      Dcm_Prv_dataSubFunc_u8    = pMsgContext->reqData[0];
	movh.a	a15,#@his(Dcm_Prv_dataSubFunc_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataSubFunc_u8)
.L746:
	ld.a	a2,[a4]4
.L747:
	ld.bu	d15,[a2]
.L748:
	st.b	[a15],d15
.L749:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   442  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   443      /* If this is a seed request */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   444      if((Dcm_Prv_dataSubFunc_u8 & 0x01u) > 0u)
	ld.bu	d15,[a15]
.L750:
	jz.t	d15:0,.L29
.L751:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   445      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   446          Dcm_Prv_SecaSeedRequest(pMsgContext,dataNegRespCode_u8);
	call	Dcm_Prv_SecaSeedRequest
.L477:
	j	.L30
.L29:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   447      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   448      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   449      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   450          if(Dcm_Prv_dataSubFunc_u8 != 0x0)
	jeq	d15,#0,.L31
.L752:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   451          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   452              Dcm_Prv_ChkForReqSecaLvl(pMsgContext,dataNegRespCode_u8);
	call	Dcm_Prv_ChkForReqSecaLvl
.L478:
	j	.L32
.L31:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   453          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   454          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   455          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   456              /* Security level is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   457              *dataNegRespCode_u8 = DCM_E_SUBFUNCTIONNOTSUPPORTED;
	mov	d15,#18
.L753:
	st.b	[a5],d15
.L32:
.L30:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   458          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   459      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   460  }
	ret
.L397:
	
__Dcm_Prv_SecaRequestState_function_end:
	.size	Dcm_Prv_SecaRequestState,__Dcm_Prv_SecaRequestState_function_end-Dcm_Prv_SecaRequestState
.L214:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyPnding',code,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyPnding'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   461  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   462  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   463  *Function name    : Dcm_Prv_SecaCmpKeyPnding
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   464  *Syntax           : Dcm_Prv_SecaCmpKeyPnding(Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   465  *Description      : Function to update the seca status to PENDING in case compare key status is pending
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   466  *Parameter        : Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   467  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   468  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   469  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   470  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyPnding
; Function Dcm_Prv_SecaCmpKeyPnding
.L114:
Dcm_Prv_SecaCmpKeyPnding:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   471                             (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   472  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   473      *dataNegRespCode_u8 =0x00u;
	mov	d15,#0
.L758:
	st.b	[a4],d15
.L759:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   474      Dcm_DspSecaOpStatus_u8 = DCM_PENDING;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L760:
	mov	d15,#1
.L761:
	st.b	[a15],d15
.L762:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   475      Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L763:
	mov	d15,#10
.L764:
	st.b	[a15],d15
.L765:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   476  }
	ret
.L400:
	
__Dcm_Prv_SecaCmpKeyPnding_function_end:
	.size	Dcm_Prv_SecaCmpKeyPnding,__Dcm_Prv_SecaCmpKeyPnding_function_end-Dcm_Prv_SecaCmpKeyPnding
.L219:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCheckdataStValidKeyChk',code,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCheckdataStValidKeyChk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   477  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   478  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   479  *Function name    : Dcm_Prv_SecaAsyncServerPt
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   480  *Syntax           : Dcm_Prv_SecaAsyncServerPt(Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   481  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   482  *Description      : Function to handle Asynchronous server point for comaprekey
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   483  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   484  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   485  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   486  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   487  #if(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   488  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   489  static FUNC(void,DCM_CODE) Dcm_Prv_SecaAsyncServerPt(P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   490                                      P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   491  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   492      /* Check whether the Rte_Read is already invoked */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   493      if (!Dcm_Prv_Dcm_SecaRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   494      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   495          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   496          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   497          Dcm_Prv_stCmpKey_u8 =
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   498          (*(Dcm_CompareKey_ptr4)(Dcm_Prv_ptrSecaFnc_p))(&(pMsgContext->reqData[1]),Dcm_DspSecaOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   499  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   500          if (Dcm_Prv_stCmpKey_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   501          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   502              Dcm_Prv_Dcm_SecaRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   503              Dcm_Prv_stCmpKey_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   504          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   505          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   506          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   507              /* IF the return value is other than E_OK then set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   508              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_stCmpKey_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   509              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   510                  Dcm_Prv_stCmpKey_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   511              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   512          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   513      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   514      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   515      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   516          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   517          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   518          Dcm_Prv_stCmpKey_u8 =
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   519          (*(Dcm_CompareKey_ptr5)(Dcm_Prv_ptrSecurityConfig_p->Dsp_CompareKey_ResultFp))(dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   520  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   521          if ((Dcm_Prv_stCmpKey_u8 == RTE_E_OK) || (Dcm_Prv_stCmpKey_u8 == DCM_E_COMPARE_KEY_FAILED))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   522          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   523              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   524          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   525          else if(Dcm_Prv_stCmpKey_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   526          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   527              Dcm_Prv_stCmpKey_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   528          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   529          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   530          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   531              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   532              /* Set the return value to E_NOT_OK for return values other than E_OK or RTE_E_NO_DATA */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   533              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_stCmpKey_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   534                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   535                      Dcm_Prv_stCmpKey_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   536                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   537          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   538      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   539  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   540  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   541  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   542  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   543  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   544  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   545  *Function name    : Dcm_Prv_SecaCheckdataStValidKeyChk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   546  *Syntax           : Dcm_Prv_SecaCheckdataStValidKeyChk(Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   547  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   548  *Description      : Function to check whether the received key is Valid Key
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   549  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   550  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   551  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   552  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   553  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCheckdataStValidKeyChk
; Function Dcm_Prv_SecaCheckdataStValidKeyChk
.L116:
Dcm_Prv_SecaCheckdataStValidKeyChk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   554                             (P2CONST(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   555                             P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   556  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   557  #if(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   558      if(Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   559      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   560  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   561          /* Check whether Asynchronous server point handling is requested for the current security row */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   562          if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   563          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   564              Dcm_Prv_SecaAsyncServerPt(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   565          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   566          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   567  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   568          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   569              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   570              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   571              Dcm_Prv_stCmpKey_u8 = (*(Dcm_CompareKey_ptr1)(Dcm_Prv_ptrSecaFnc_p))(&(pMsgContext->reqData[1]),\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   572                                       Dcm_DspSecaOpStatus_u8, dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   573          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   574      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   575  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   576  #if(DCM_CFG_DSP_USE_ASYNCH_FNC != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   577      if(Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_FNC)
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
	ld.a	a15,[a15]
.L770:
	ld.w	d15,[a15]36
.L771:
	jne	d15,#1,.L33
.L772:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   578      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   579          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   580          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   581          Dcm_Prv_stCmpKey_u8 = (*(Dcm_CompareKey_ptr3)(Dcm_Prv_ptrSecaFnc_p))
	movh.a	a12,#@his(Dcm_Prv_stCmpKey_u8)
	lea	a12,[a12]@los(Dcm_Prv_stCmpKey_u8)
.L773:
	movh.a	a2,#@his(Dcm_Prv_ptrSecaFnc_p)
	lea	a2,[a2]@los(Dcm_Prv_ptrSecaFnc_p)
	ld.a	a2,[a2]
.L774:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   582          (Dcm_Prv_ptrSecurityConfig_p->Key_size_u32,&(pMsgContext->reqData[1]),Dcm_DspSecaOpStatus_u8,dataNegRespCode_u8);
	ld.w	d4,[a15]24
.L775:
	ld.a	a4,[a4]4
.L480:
	add.a	a4,#1
.L776:
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
	ld.bu	d5,[a15]
.L777:
	calli	a2
.L479:
	st.b	[a12],d2
.L33:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   583      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   584  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   585  }
	ret
.L402:
	
__Dcm_Prv_SecaCheckdataStValidKeyChk_function_end:
	.size	Dcm_Prv_SecaCheckdataStValidKeyChk,__Dcm_Prv_SecaCheckdataStValidKeyChk_function_end-Dcm_Prv_SecaCheckdataStValidKeyChk
.L224:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaValidKeyNotificationToAppIsOk',code,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaValidKeyNotificationToAppIsOk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   586  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   587  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   588  *Function name    : Dcm_Prv_SecaUseAsynchronousServerCallPoint
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   589  *Syntax           : Dcm_Prv_SecaUseAsynchronousServerCallPoint(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   590  *Description      : Function to store the security Attempt counter value in NVM by application through RTE
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   591  *Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   592  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   593  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   594  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   595  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   596  static FUNC(void,DCM_CODE) Dcm_Prv_SecaUseAsynchronousServerCallPoint (void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   597  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   598      /* Check whether the Rte_Read is already invoked */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   599      if (!Dcm_Prv_Dcm_SecaRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   600      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   601          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   602          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   603          Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   604                                   (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   605                                   (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   606  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   607          if (Dcm_Prv_dataRetValue_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   608          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   609              Dcm_Prv_Dcm_SecaRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   610              Dcm_Prv_dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   611          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   612          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   613          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   614              /* Set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   615              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   616              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   617                  Dcm_Prv_dataRetValue_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   618              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   619          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   620      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   621      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   622      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   623          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   624          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   625          Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   626                                   (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_Resultfp))();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   627          if (Dcm_Prv_dataRetValue_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   628          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   629              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   630          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   631          else if(Dcm_Prv_dataRetValue_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   632          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   633              Dcm_Prv_dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   634          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   635          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   636          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   637              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   638              /* Set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   639              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   640              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   641                  Dcm_Prv_dataRetValue_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   642              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   643          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   644      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   645  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   646  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   647  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   648  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   649  *Function name    : Dcm_Prv_SecaValidKeyNotificationToAppIsOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   650  *Syntax           : Dcm_Prv_SecaValidKeyNotificationToAppIsOk(Dcm_SrvOpStatusType OpStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   651  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   652  *Description      : Notify OK to Application that received KEY is valid while Unlocking the security level
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   653  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   654  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   655  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   656  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   657  #if ((DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF) && (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   658  static FUNC(void,DCM_CODE) Dcm_Prv_SecaValidKeyNotificationToAppIsOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   659                             (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   660                             P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   661  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   662  static FUNC(void,DCM_CODE) Dcm_Prv_SecaValidKeyNotificationToAppIsOk
; Function Dcm_Prv_SecaValidKeyNotificationToAppIsOk
.L118:
Dcm_Prv_SecaValidKeyNotificationToAppIsOk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   663                             (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   664  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   665  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   666  #if ((DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)&&(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   667      VAR(boolean, AUTOMATIC)  isInfrastructureErrorPresent_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   668  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   669  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   670  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   671  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   672      if ((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   673      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   674  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   675          if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   676          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   677              Dcm_Prv_SecaUseAsynchronousServerCallPoint();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   678          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   679          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   680  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   681         {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   682              /* Call the DcmAppl API to store Delay count for this security level in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   683              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   684              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   685              Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   686                                      (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   687                                      (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   688         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   689      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   690  #if (DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   691  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   692      /* Check for infrastructure errors in case of rte*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   693      if((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR) && \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   694      (Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   695      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   696          isInfrastructureErrorPresent_b = Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   697      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   698  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   699      if(isInfrastructureErrorPresent_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   700      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   701          /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   702          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   703          Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   704      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   705      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   706  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   707  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   708      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   709          if(DCM_E_PENDING == Dcm_Prv_dataRetValue_u8)
	movh.a	a15,#@his(Dcm_Prv_dataRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataRetValue_u8)
	ld.bu	d0,[a15]
.L782:
	mov	d15,#10
.L783:
	jne	d15,d0,.L34
.L784:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   710          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   711              Dcm_Prv_flgApplFuncCall_b = TRUE;
	movh.a	a15,#@his(Dcm_Prv_flgApplFuncCall_b)
	lea	a15,[a15]@los(Dcm_Prv_flgApplFuncCall_b)
.L785:
	mov	d15,#1
.L786:
	st.b	[a15],d15
.L787:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   712              Dcm_Prv_substSeca_en = DCM_DSP_SECA_PENDING;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L788:
	mov	d15,#2
.L789:
	st.w	[a15],d15
.L790:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   713              Dcm_DspSecaOpStatus_u8 =DCM_PENDING;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L791:
	mov	d15,#1
.L792:
	st.b	[a15],d15
.L793:
	j	.L35
.L34:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   714          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   715          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   716          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   717              /* Change operating state to PROCESSSERVICE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   718              *OpStatus = DCM_PROCESSSERVICE;
	mov	d15,#5
.L794:
	st.b	[a4],d15
.L35:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   719          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   720      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   721  }
	ret
.L405:
	
__Dcm_Prv_SecaValidKeyNotificationToAppIsOk_function_end:
	.size	Dcm_Prv_SecaValidKeyNotificationToAppIsOk,__Dcm_Prv_SecaValidKeyNotificationToAppIsOk_function_end-Dcm_Prv_SecaValidKeyNotificationToAppIsOk
.L229:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaUnlockSecurityLvl',code,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaUnlockSecurityLvl'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   722  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   723  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   724  *Function name    : Dcm_Prv_SecaUnlockSecurityLvl
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   725  *Syntax           : Dcm_Prv_SecaUnlockSecurityLvl(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   726  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   727  *Description      : Function to unlock new security level as per the tester request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   728  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   729  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   730  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   731  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   732  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   733  static FUNC(void,DCM_CODE) Dcm_Prv_SecaUnlockSecurityLvl(P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_SecaUnlockSecurityLvl
.L120:
Dcm_Prv_SecaUnlockSecurityLvl:	.type	func
	mov.aa	a12,a4
.L482:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   734                                         P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   735                                         P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   736  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   737      *dataNegRespCode_u8 =0x00;
	mov	d15,#0
.L799:
	st.b	[a6],d15
.L800:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   738      Dcm_Prv_secaServRetValue_u8=E_OK;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L801:
	mov	d15,#0
.L802:
	st.b	[a15],d15
.L803:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   739      Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L804:
	mov	d15,#0
.L805:
	st.b	[a15],d15
.L806:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   740      /* Reset Failed Attempt Counter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   741      Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8 = 0;
	movh.a	a15,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a15,[a15]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d0,[a15]
.L807:
	movh.a	a15,#@his(Dcm_Dsp_Seca)
	lea	a15,[a15]@los(Dcm_Dsp_Seca)
.L808:
	addsc.a	a15,a15,d0,#3
.L809:
	mov	d15,#0
.L810:
	st.b	[a15]4,d15
.L811:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   742      /* Give Notification to DcmAppl that KEY is VALID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   743  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   744      /* Fill response bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   745      pMsgContext->resData[0] = (Dcm_DspSecAccType_u8+1);
	ld.a	a15,[a5]
.L812:
	movh.a	a2,#@his(Dcm_DspSecAccType_u8)
	lea	a2,[a2]@los(Dcm_DspSecAccType_u8)
	ld.bu	d15,[a2]
.L813:
	add	d15,#1
.L814:
	st.b	[a15],d15
.L815:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   746      pMsgContext->resDataLen = 0x1;
	mov	d15,#1
.L816:
	st.w	[a5]12,d15
.L817:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   747      /* Give Notification to DcmAppl that KEY is VALID  The appl API supports only E_OK and E_PENDING*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   748      if(DCM_E_PENDING == DcmAppl_DcmSecaValidKey((uint8)Dcm_Prv_idxSecTab_qu8) )
	extr.u	d4,d0,#0,#8
	call	DcmAppl_DcmSecaValidKey
.L481:
	mov	d15,#10
.L818:
	jne	d15,d2,.L36
.L819:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   749      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   750          Dcm_Prv_substSeca_en = DCM_DSP_SECA_PENDING;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L820:
	mov	d15,#2
.L821:
	st.w	[a15],d15
.L822:
	j	.L37
.L36:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   751      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   752      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   753      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   754  #if ((DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF) && (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   755          Dcm_Prv_SecaValidKeyNotificationToAppIsOk(OpStatus,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   756  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   757          Dcm_Prv_SecaValidKeyNotificationToAppIsOk(OpStatus);
	mov.aa	a4,a12
.L483:
	call	Dcm_Prv_SecaValidKeyNotificationToAppIsOk
.L37:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   758  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   759      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   760  }
	ret
.L407:
	
__Dcm_Prv_SecaUnlockSecurityLvl_function_end:
	.size	Dcm_Prv_SecaUnlockSecurityLvl,__Dcm_Prv_SecaUnlockSecurityLvl_function_end-Dcm_Prv_SecaUnlockSecurityLvl
.L234:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyFailed',code,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyFailed'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   761  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   762  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   763  *Function name    : Dcm_Prv_SecaCmpKeyFailed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   764  *Syntax           : Dcm_Prv_SecaCmpKeyFailed(Dcm_SrvOpStatusType OpStatus,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   765  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   766  *Description      : Function perform following operation when comparison of key from tester with ECU internal key failed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   767  *                   a. Increment failed attempts counter in case the counter is not yet exhausted
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   768  *                   b. store Delay count for this security level in NVM
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   769  *                   c. set NRC, generalreject incase of RTE infrastructure error
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   770  *.                  d. Otherwise change state to pending or processservice as per NVM store return value
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   771  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   772  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   773  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   774  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   775  #if ((DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF) && (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   776  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyFailed (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   777                                  P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   778  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   779  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyFailed (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; Function Dcm_Prv_SecaCmpKeyFailed
.L122:
Dcm_Prv_SecaCmpKeyFailed:	.type	func
	mov.aa	a12,a4
.L485:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   780  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   781  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   782  #if ((DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)&&(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   783      VAR(boolean, AUTOMATIC)  isInfrastructureErrorPresent_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   784  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   785  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   786      Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a13,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a13,[a13]@los(Dcm_DspSecaOpStatus_u8)
.L827:
	mov	d15,#0
.L828:
	st.b	[a13],d15
.L829:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   787      /* Check if failed attempt counter is not exhausted */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   788      if(Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8 < 0xFF)
	movh.a	a15,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a15,[a15]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d0,[a15]
.L830:
	movh.a	a15,#@his(Dcm_Dsp_Seca)
	lea	a15,[a15]@los(Dcm_Dsp_Seca)
.L831:
	addsc.a	a15,a15,d0,#3
.L832:
	add.a	a15,#4
	ld.bu	d1,[a15]
.L833:
	mov	d15,#255
.L834:
	jge.u	d1,d15,.L38
.L835:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   789      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   790          /* Increment failed attempts counters */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   791          Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8++;
	add	d1,#1
	st.b	[a15],d1
.L38:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   792      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   793  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   794      /* Give Notification to DcmAppl that KEY is INVALID The appl API supports only E_OK and E_PENDING*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   795      if( DCM_E_PENDING == DcmAppl_DcmSecaInvalidKey((uint8)Dcm_Prv_idxSecTab_qu8))
	extr.u	d4,d0,#0,#8
	call	DcmAppl_DcmSecaInvalidKey
.L484:
	mov	d15,#10
.L836:
	jne	d15,d2,.L39
.L837:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   796      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   797          Dcm_Prv_substSeca_en =DCM_DSP_SECA_PENDING;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L838:
	mov	d15,#2
.L839:
	st.w	[a15],d15
.L840:
	j	.L40
.L39:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   798      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   799      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   800      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   801  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   802          if ((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   803          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   804  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   805              if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   806              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   807                  Dcm_Prv_SecaUseAsynchronousServerCallPoint();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   808              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   809              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   810  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   811              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   812                  /* Call the DcmAppl API to store Delay count for this security level in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   813                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   814                  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   815                  Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   816                                          (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   817                                          (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   818              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   819          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   820  #if (DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   821          /* Check for infrastructure errors in case of rte*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   822          if((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR) && \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   823          (Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   824          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   825              isInfrastructureErrorPresent_b = Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   826          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   827          if(isInfrastructureErrorPresent_b != FALSE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   828          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   829              /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   830              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   831              Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   832          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   833          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   834  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   835  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   836          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   837              if(DCM_E_PENDING==Dcm_Prv_dataRetValue_u8 )
	movh.a	a15,#@his(Dcm_Prv_dataRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataRetValue_u8)
	ld.bu	d0,[a15]
.L841:
	mov	d15,#10
.L842:
	jne	d15,d0,.L41
.L843:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   838              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   839                  Dcm_Prv_flgApplFuncCall_b = TRUE;
	movh.a	a15,#@his(Dcm_Prv_flgApplFuncCall_b)
	lea	a15,[a15]@los(Dcm_Prv_flgApplFuncCall_b)
.L844:
	mov	d15,#1
.L845:
	st.b	[a15],d15
.L846:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   840                  Dcm_Prv_substSeca_en = DCM_DSP_SECA_PENDING;
	movh.a	a15,#@his(Dcm_Prv_substSeca_en)
	lea	a15,[a15]@los(Dcm_Prv_substSeca_en)
.L847:
	mov	d15,#2
.L848:
	st.w	[a15],d15
.L849:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   841                  Dcm_DspSecaOpStatus_u8 =DCM_PENDING;
	mov	d15,#1
.L850:
	st.b	[a13],d15
.L851:
	j	.L42
.L41:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   842              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   843              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   844              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   845                  /* Change state to PROCESSSERVICE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   846                  *OpStatus = DCM_PROCESSSERVICE;
	mov	d15,#5
.L852:
	st.b	[a12],d15
.L42:
.L40:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   847              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   848          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   849      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   850  }
	ret
.L411:
	
__Dcm_Prv_SecaCmpKeyFailed_function_end:
	.size	Dcm_Prv_SecaCmpKeyFailed,__Dcm_Prv_SecaCmpKeyFailed_function_end-Dcm_Prv_SecaCmpKeyFailed
.L239:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyNotOk',code,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyNotOk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   851  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   852  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   853  *Function name    : Dcm_Prv_SecaCmpKeyNotOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   854  *Syntax           : Dcm_Prv_SecaCmpKeyNotOk(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   855  *Description      : This function is called when tester key comparison with internal key is not OK.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   856  *                   Function changes Dcm state to processservice.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   857  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   858  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   859  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   860  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   861  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyNotOk (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; Function Dcm_Prv_SecaCmpKeyNotOk
.L124:
Dcm_Prv_SecaCmpKeyNotOk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   862  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   863      Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L857:
	mov	d15,#0
.L858:
	st.b	[a15],d15
.L859:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   864      *OpStatus = DCM_PROCESSSERVICE;
	mov	d15,#5
.L860:
	st.b	[a4],d15
.L861:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   865  }
	ret
.L413:
	
__Dcm_Prv_SecaCmpKeyNotOk_function_end:
	.size	Dcm_Prv_SecaCmpKeyNotOk,__Dcm_Prv_SecaCmpKeyNotOk_function_end-Dcm_Prv_SecaCmpKeyNotOk
.L244:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyNegResp',code,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyNegResp'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   866  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   867  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   868  *Function name    : Dcm_Prv_SecaCmpKeyNegResp
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   869  *Syntax           : Dcm_Prv_SecaCmpKeyNegResp(Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   870  *Description      : Function updates the NRC CONDITIONSNOTCORRECT and set Dcm state to INITIAL
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   871  *                   in case compare key returns invalid
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   872  *Parameter        : Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   873  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   874  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   875  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   876  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyNegResp
; Function Dcm_Prv_SecaCmpKeyNegResp
.L126:
Dcm_Prv_SecaCmpKeyNegResp:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   877                             (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   878  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   879      if(*dataNegRespCode_u8 == 0x00u)
	ld.bu	d15,[a4]
.L866:
	jne	d15,#0,.L43
.L867:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   880      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   881       /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   882         *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L868:
	st.b	[a4],d15
.L43:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   883      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   884      Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L869:
	mov	d15,#0
.L870:
	st.b	[a15],d15
.L871:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   885  }
	ret
.L415:
	
__Dcm_Prv_SecaCmpKeyNegResp_function_end:
	.size	Dcm_Prv_SecaCmpKeyNegResp,__Dcm_Prv_SecaCmpKeyNegResp_function_end-Dcm_Prv_SecaCmpKeyNegResp
.L249:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyStatusChk',code,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKeyStatusChk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   886  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   887  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   888  *Function name    : Dcm_Prv_SecaCmpKeyStatusChk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   889  *Syntax           : Dcm_Prv_SecaCmpKeyStatusChk(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   890  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   891  *Description      : Function checks the status of comparekey and invoke relevant functions
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   892  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   893  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   894  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   895  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   896  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   897  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKeyStatusChk (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_SecaCmpKeyStatusChk
.L128:
Dcm_Prv_SecaCmpKeyStatusChk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   898                                                      P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   899                                         P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   900  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   901      /* If the Key is valid then Unlock security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   902      if (Dcm_Prv_stCmpKey_u8 ==E_OK)
	movh.a	a15,#@his(Dcm_Prv_stCmpKey_u8)
	lea	a15,[a15]@los(Dcm_Prv_stCmpKey_u8)
	ld.bu	d15,[a15]
.L876:
	jne	d15,#0,.L44
.L877:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   903      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   904          Dcm_Prv_SecaUnlockSecurityLvl(OpStatus,pMsgContext,dataNegRespCode_u8);
	call	Dcm_Prv_SecaUnlockSecurityLvl
.L486:
	j	.L45
.L44:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   905      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   906      else if (Dcm_Prv_stCmpKey_u8 ==DCM_E_PENDING)
	mov	d0,#10
.L878:
	jne	d15,d0,.L46
.L879:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   907      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   908          Dcm_Prv_SecaCmpKeyPnding(dataNegRespCode_u8);
	mov.aa	a4,a6
.L487:
	call	Dcm_Prv_SecaCmpKeyPnding
.L488:
	j	.L47
.L46:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   909      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   910      else if (Dcm_Prv_stCmpKey_u8 ==E_NOT_OK)
	jne	d15,#1,.L48
.L880:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   911      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   912          Dcm_Prv_SecaCmpKeyNotOk(OpStatus);
	call	Dcm_Prv_SecaCmpKeyNotOk
.L489:
	j	.L49
.L48:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   913      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   914      else if (Dcm_Prv_stCmpKey_u8 == DCM_E_COMPARE_KEY_FAILED)
	mov	d0,#11
.L881:
	jne	d15,d0,.L50
.L882:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   915      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   916  #if ((DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF) && (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   917          Dcm_Prv_SecaCmpKeyFailed(OpStatus,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   918  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   919          Dcm_Prv_SecaCmpKeyFailed(OpStatus);
	call	Dcm_Prv_SecaCmpKeyFailed
.L490:
	j	.L51
.L50:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   920  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   921      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   922      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   923      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   924          Dcm_Prv_SecaCmpKeyNegResp(dataNegRespCode_u8);
	mov.aa	a4,a6
.L491:
	call	Dcm_Prv_SecaCmpKeyNegResp
.L51:
.L49:
.L47:
.L45:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   925      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   926  }
	ret
.L417:
	
__Dcm_Prv_SecaCmpKeyStatusChk_function_end:
	.size	Dcm_Prv_SecaCmpKeyStatusChk,__Dcm_Prv_SecaCmpKeyStatusChk_function_end-Dcm_Prv_SecaCmpKeyStatusChk
.L254:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKey',code,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCmpKey'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   927  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   928  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   929  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   930  *Function name    : Dcm_Prv_SecaCmpKey
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   931  *Syntax           : Dcm_Prv_SecaCmpKey(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   932  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   933  *Description      : Function peforms following operation in Seca substate CompareKey under checkdata state of Dcm
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   934  *                       a. To check whether the received key is Valid Key
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   935  *                       b. Check status of comapre key
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   936  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   937  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   938  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   939  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   940  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   941  static FUNC(void,DCM_CODE) Dcm_Prv_SecaCmpKey (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_SecaCmpKey
.L130:
Dcm_Prv_SecaCmpKey:	.type	func
	mov.aa	a12,a4
.L495:
	mov.aa	a13,a5
.L496:
	mov.aa	a14,a6
.L497:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   942                                             P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   943                                P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   944  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   945      /* Calculate the security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   946      Dcm_Prv_dataSecLevel_u8  = ((Dcm_DspSecAccType_u8+1)>>1u);
	movh.a	a15,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataSecLevel_u8)
.L887:
	movh.a	a2,#@his(Dcm_DspSecAccType_u8)
	lea	a2,[a2]@los(Dcm_DspSecAccType_u8)
	ld.bu	d15,[a2]
.L888:
	add	d15,#1
.L889:
	sha	d15,#-1
.L890:
	st.b	[a15],d15
.L891:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   947  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   948      /* Copy the security table index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   949      Dcm_Prv_idxSecTab_qu8 = Dcm_DspSecTabIdx_u8;
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
.L892:
	movh.a	a15,#@his(Dcm_DspSecTabIdx_u8)
	lea	a15,[a15]@los(Dcm_DspSecTabIdx_u8)
	ld.bu	d15,[a15]
.L893:
	st.w	[a2],d15
.L894:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   950  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   951      Dcm_Prv_ptrSecurityConfig_p = &Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
.L895:
	ld.w	d15,[a2]
.L896:
	mul	d15,d15,#40
.L897:
	movh.a	a2,#@his(Dcm_Dsp_Security)
	lea	a2,[a2]@los(Dcm_Dsp_Security)
.L898:
	addsc.a	a2,a2,d15,#0
.L899:
	st.a	[a15],a2
.L900:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   952  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   953      Dcm_Prv_ptrSecaFnc_p= Dcm_Prv_ptrSecurityConfig_p->Dsp_CompareKey_fp;
	movh.a	a4,#@his(Dcm_Prv_ptrSecaFnc_p)
.L492:
	lea	a4,[a4]@los(Dcm_Prv_ptrSecaFnc_p)
.L901:
	ld.a	a2,[a15]
.L902:
	ld.a	a2,[a2]12
.L903:
	st.a	[a4],a2
.L904:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   954  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   955      /*Set the Dcm_Prv_flgApplFuncCall_b to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   956      Dcm_Prv_flgApplFuncCall_b = FALSE;
	movh.a	a2,#@his(Dcm_Prv_flgApplFuncCall_b)
	lea	a2,[a2]@los(Dcm_Prv_flgApplFuncCall_b)
.L905:
	mov	d15,#0
.L906:
	st.b	[a2],d15
.L907:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   957  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   958      /* Call the function to check whether the received key is Valid Key */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   959      Dcm_Prv_SecaCheckdataStValidKeyChk(pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a13
.L494:
	mov.aa	a5,a14
.L493:
	call	Dcm_Prv_SecaCheckdataStValidKeyChk
.L498:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   960  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   961      /* Check for infrastructure errors in case of rte*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   962      if(  (Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_stCmpKey_u8) != FALSE) &&
	movh.a	a2,#@his(Dcm_Prv_stCmpKey_u8)
	lea	a2,[a2]@los(Dcm_Prv_stCmpKey_u8)
	ld.bu	d4,[a2]
	call	Dcm_IsInfrastructureErrorPresent_b
.L908:
	jeq	d2,#0,.L52
.L909:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   963      ((Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER) ))
	ld.a	a15,[a15]
.L910:
	ld.w	d15,[a15]36
.L911:
	jne	d15,#0,.L53
.L912:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   964      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   965          /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   966          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L913:
	st.b	[a14],d15
.L914:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   967          Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L915:
	mov	d15,#0
.L916:
	st.b	[a15],d15
.L917:
	j	.L54
.L53:
.L52:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   968      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   969      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   970      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   971          /* status check for compare key */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   972          Dcm_Prv_SecaCmpKeyStatusChk(OpStatus,pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a12
.L499:
	mov.aa	a5,a13
.L500:
	mov.aa	a6,a14
.L501:
	call	Dcm_Prv_SecaCmpKeyStatusChk
.L54:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   973      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   974  }
	ret
.L421:
	
__Dcm_Prv_SecaCmpKey_function_end:
	.size	Dcm_Prv_SecaCmpKey,__Dcm_Prv_SecaCmpKey_function_end-Dcm_Prv_SecaCmpKey
.L259:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_GenerateSeedAsynchFnc',code,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_GenerateSeedAsynchFnc'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   975  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   976  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   977  *Function name    : Dcm_Prv_SecaAsyncServerCallPointChkForGetSeed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   978  *Syntax           : Dcm_Prv_SecaAsyncServerCallPointChkForGetSeed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   979  *                   (Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   980  *Description      : Function to Check if Asynchronous server point handling is requested for the current security row
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   981  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   982  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   983  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   984  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   985  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   986  static FUNC(void,DCM_CODE) Dcm_Prv_SecaAsyncServerCallPointChkForGetSeed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   987                              (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   988                               P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   989  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   990      /* Check whether the Rte_Read is already invoked */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   991      if (!Dcm_Prv_Dcm_SecaRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   992      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   993          if(Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32!=0x00u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   994          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   995  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   996              /* Call the Rte_Call API configured for this security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   997              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   998              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	   999              Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr5)(Dcm_Prv_ptrSecaFnc_p))(&(Dcm_InParameterBuf_au8[0]),
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1000                                          Dcm_DspSecaOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1001  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1002          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1003          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1004          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1005              /* Call the Rte_Call API configured for this security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1006              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1007              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1008              Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr6)(Dcm_Prv_ptrSecaFnc_p))(Dcm_DspSecaOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1009          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1010  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1011          if (Dcm_Prv_dataRetGetSeed_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1012          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1013              Dcm_Prv_Dcm_SecaRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1014              Dcm_Prv_dataRetGetSeed_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1015          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1016          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1017          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1018              /* IF the return value is other than E_OK then set NRC to General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1019              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetGetSeed_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1020              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1021                  Dcm_Prv_dataRetGetSeed_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1022              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1023          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1024      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1025      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1026      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1027          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1028          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1029          Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr7)(Dcm_Prv_ptrSecurityConfig_p->Dsp_GetSeed_ResultFp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1030                                      (&(pMsgContext->resData[1]),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1031          if (Dcm_Prv_dataRetGetSeed_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1032          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1033              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1034          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1035          else if(Dcm_Prv_dataRetGetSeed_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1036          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1037              Dcm_Prv_dataRetGetSeed_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1038          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1039          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1040          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1041              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1042              /* Set the NRC to General Reject for any other Return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1043              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetGetSeed_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1044              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1045                  Dcm_Prv_dataRetGetSeed_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1046              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1047          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1048      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1049  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1050  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1051  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1052  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1053  *Function name    : Dcm_Prv_GenerateSeedAsynchClientServer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1054  *Syntax           : Dcm_Prv_GenerateSeedAsynchClientServer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1055  *                   (Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1056  *Description      : Function to Generate seed in checkdata state for RTE ASYNCH_CLIENT_SERVER configuration
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1057  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1058  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1059  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1060  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1061  #if(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1062  static FUNC(void,DCM_CODE) Dcm_Prv_GenerateSeedAsynchClientServer
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1063                             (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1064                              P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1065  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1066      if(Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1067      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1068  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1069          /* Check whether Asynchronous server point handling is requested for the current security row */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1070          if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1071          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1072              Dcm_Prv_SecaAsyncServerCallPointChkForGetSeed(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1073          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1074          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1075  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1076          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1077              if(Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32!=0x00u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1078              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1079  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1080                  /* Call the RTE port configured for this security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1081                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1082                  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1083                  Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr)(Dcm_Prv_ptrSecaFnc_p))( &(Dcm_InParameterBuf_au8[0]),
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1084                              Dcm_DspSecaOpStatus_u8,&(pMsgContext->resData[1]),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1085  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1086              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1087              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1088              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1089                  /* Call the RTE port configured for this security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1090                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1091                  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1092                  Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr3)(Dcm_Prv_ptrSecaFnc_p))(Dcm_DspSecaOpStatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1093                              &(pMsgContext->resData[1]),dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1094              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1095          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1096      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1097  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1098  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1099  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1100  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1101  *Function name    : Dcm_Prv_GenerateSeedAsynchFnc
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1102  *Syntax           : Dcm_Prv_GenerateSeedAsynchFnc
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1103  *                   (Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1104  *Description      : Function to Generate seed in checkdata state for RTE configuration USE_ASYNCH_FNC
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1105  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1106  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1107  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1108  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1109  #if(DCM_CFG_DSP_USE_ASYNCH_FNC != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1110  static FUNC(void,DCM_CODE) Dcm_Prv_GenerateSeedAsynchFnc
; Function Dcm_Prv_GenerateSeedAsynchFnc
.L132:
Dcm_Prv_GenerateSeedAsynchFnc:	.type	func
	mov.aa	a6,a5
.L504:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1111                              (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1112                                  P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1113  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1114      if(Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_FNC)
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
	ld.a	a15,[a15]
.L922:
	ld.w	d15,[a15]36
.L923:
	jne	d15,#1,.L55
.L924:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1115      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1116          if(Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32!=0x00u)
	ld.w	d6,[a15]32
.L925:
	jeq	d6,#0,.L56
.L926:
	j	.L57
.L56:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1117          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1118  #if (DCM_CFG_IN_PARAM_MAXLEN > 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1119           /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1120              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1121              Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr4)(Dcm_Prv_ptrSecurityConfig_p->Dsp_GetSeed_fp))(
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1122                  Dcm_Prv_dataSecLevel_u8,                        /* Security Level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1123                  Dcm_Prv_nrSeedLen_u32,                          /* Seed size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1124                  Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32, /* ADR size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1125                  &(Dcm_InParameterBuf_au8[0]),                   /* Security Access Data Record */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1126                  &(pMsgContext->resData[1]),                     /* Buffer for Seed */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1127                  Dcm_DspSecaOpStatus_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1128                  dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1129  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1130          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1131          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1132          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1133              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1134              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1135              Dcm_Prv_dataRetGetSeed_u8 = (*(Dcm_GetSeed_ptr4)(Dcm_Prv_ptrSecaFnc_p))(
	movh.a	a12,#@his(Dcm_Prv_dataRetGetSeed_u8)
	lea	a12,[a12]@los(Dcm_Prv_dataRetGetSeed_u8)
.L927:
	movh.a	a15,#@his(Dcm_Prv_ptrSecaFnc_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecaFnc_p)
	ld.a	a15,[a15]
.L928:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1136                  Dcm_Prv_dataSecLevel_u8,                        /* Security Level */
	movh.a	a2,#@his(Dcm_Prv_dataSecLevel_u8)
	lea	a2,[a2]@los(Dcm_Prv_dataSecLevel_u8)
	ld.bu	d4,[a2]
.L929:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1137                  Dcm_Prv_nrSeedLen_u32,                          /* Seed size */
	movh.a	a2,#@his(Dcm_Prv_nrSeedLen_u32)
	lea	a2,[a2]@los(Dcm_Prv_nrSeedLen_u32)
	ld.w	d5,[a2]
.L930:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1138                  Dcm_Prv_ptrSecurityConfig_p->AccDataRecsize_u32,    /* ADR size */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1139                  NULL_PTR,                                       /* Security Access Data Record */
	mov.a	a2,#0
.L931:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1140                  &(pMsgContext->resData[1]),                     /* Buffer for Seed */
	ld.a	a5,[a4]
.L502:
	add.a	a5,#1
.L932:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1141                  Dcm_DspSecaOpStatus_u8,
	movh.a	a4,#@his(Dcm_DspSecaOpStatus_u8)
.L503:
	lea	a4,[a4]@los(Dcm_DspSecaOpStatus_u8)
	ld.bu	d7,[a4]
.L933:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1142                  dataNegRespCode_u8);
	mov.aa	a4,a2
	calli	a15
.L505:
	st.b	[a12],d2
.L57:
.L55:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1143          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1144      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1145  }
	ret
.L425:
	
__Dcm_Prv_GenerateSeedAsynchFnc_function_end:
	.size	Dcm_Prv_GenerateSeedAsynchFnc,__Dcm_Prv_GenerateSeedAsynchFnc_function_end-Dcm_Prv_GenerateSeedAsynchFnc
.L264:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_GetSeedReturnedWoError',code,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_GetSeedReturnedWoError'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1146  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1147  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1148  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1149  *Function name    : Dcm_Prv_GetSeedReturnedWoError
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1150  *Syntax           : Dcm_Prv_GetSeedReturnedWoError(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1151  *                   Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1152  *Description      : Function to Generate seed in checkdata state for RTE configuration ASYNCH_CLIENT_SERVER
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1153  *                   and seed was returned without any error.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1154  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1155  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1156  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1157  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1158  static FUNC(void,DCM_CODE)Dcm_Prv_GetSeedReturnedWoError(P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_GetSeedReturnedWoError
.L134:
Dcm_Prv_GetSeedReturnedWoError:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1159                                         P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1160                                         P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1161  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1162  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1163  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1164      /* Local Loop variable for Seed index  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1165      VAR(uint32,AUTOMATIC)      l_idxSeed_qu32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1166  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1167      *dataNegRespCode_u8 = 0x00;
	mov	d15,#0
.L938:
	st.b	[a6],d15
.L939:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1168      Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L940:
	mov	d15,#0
.L941:
	st.b	[a15],d15
.L942:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1169  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1170      /* Update the response data */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1171      pMsgContext->resData[0] = Dcm_DspSecAccType_u8;
	ld.a	a15,[a5]
.L943:
	movh.a	a2,#@his(Dcm_DspSecAccType_u8)
	lea	a2,[a2]@los(Dcm_DspSecAccType_u8)
	ld.bu	d15,[a2]
.L944:
	st.b	[a15],d15
.L945:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1172      pMsgContext->resDataLen = (uint32)((uint32)Dcm_Prv_nrSeedLen_u32 + 1u);
	movh.a	a15,#@his(Dcm_Prv_nrSeedLen_u32)
	lea	a15,[a15]@los(Dcm_Prv_nrSeedLen_u32)
	ld.w	d15,[a15]
.L946:
	add	d15,#1
.L947:
	st.w	[a5]12,d15
.L948:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1173  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1174      /* Check if the Seed has to be stored for use in Request key state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1175      /* If enabled and seed is requested for same Access Type in Key state,stored seed will be sent */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1176  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1177      /* Loop for the seed size for this Access Type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1178      for(l_idxSeed_qu32=0x0; (l_idxSeed_qu32 < Dcm_Prv_nrSeedLen_u32); l_idxSeed_qu32++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1179      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1180          /* Store the seed for use in Request KEY state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1181          Dcm_Dsp_Seca[Dcm_DspSecTabIdx_u8].SeedBuff[l_idxSeed_qu32] = pMsgContext->resData[l_idxSeed_qu32 + 0x1u];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1182      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1183  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1184      /* Move to Request Key state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1185      *OpStatus = DCM_INITIAL;
	mov	d15,#0
.L949:
	st.b	[a4],d15
.L950:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1186      Dcm_Prv_secaServRetValue_u8=E_OK;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L951:
	mov	d15,#0
.L952:
	st.b	[a15],d15
.L953:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1187  }
	ret
.L428:
	
__Dcm_Prv_GetSeedReturnedWoError_function_end:
	.size	Dcm_Prv_GetSeedReturnedWoError,__Dcm_Prv_GetSeedReturnedWoError_function_end-Dcm_Prv_GetSeedReturnedWoError
.L269:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaGenSeed',code,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaGenSeed'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1188  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1189  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1190  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1191  *Function name    : Dcm_Prv_SecaGenSeed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1192  *Syntax           : Dcm_Prv_SecaGenSeed(Dcm_MsgContextType pMsgContext,Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1193  *Description      : Function to Generate seed in checkdata state
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1194  *Parameter        : Dcm_MsgContextType pMsgContext, Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1195  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1196  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1197  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1198  static FUNC(void,DCM_CODE) Dcm_Prv_SecaGenSeed (P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; Function Dcm_Prv_SecaGenSeed
.L136:
Dcm_Prv_SecaGenSeed:	.type	func
	mov.aa	a12,a4
.L508:
	mov.aa	a13,a5
.L509:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1199                                 P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1200  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1201      Dcm_Prv_ptrSecurityConfig_p= &Dcm_Dsp_Security[Dcm_DspSecTabIdx_u8];
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
.L958:
	movh.a	a2,#@his(Dcm_DspSecTabIdx_u8)
	lea	a2,[a2]@los(Dcm_DspSecTabIdx_u8)
	ld.bu	d15,[a2]
.L959:
	mul	d15,d15,#40
.L960:
	movh.a	a2,#@his(Dcm_Dsp_Security)
	lea	a2,[a2]@los(Dcm_Dsp_Security)
.L961:
	addsc.a	a2,a2,d15,#0
.L962:
	st.a	[a15],a2
.L963:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1202      Dcm_Prv_ptrSecaFnc_p = Dcm_Prv_ptrSecurityConfig_p->Dsp_GetSeed_fp;
	ld.a	a15,[a15]
.L964:
	movh.a	a2,#@his(Dcm_Prv_ptrSecaFnc_p)
	lea	a2,[a2]@los(Dcm_Prv_ptrSecaFnc_p)
.L965:
	ld.a	a4,[a15]8
.L507:
	st.a	[a2],a4
.L966:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1203      /* State to calculate and send the seed value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1204      Dcm_Prv_dataRetGetSeed_u8 = E_NOT_OK;
	movh.a	a14,#@his(Dcm_Prv_dataRetGetSeed_u8)
	lea	a14,[a14]@los(Dcm_Prv_dataRetGetSeed_u8)
.L967:
	mov	d15,#1
.L968:
	st.b	[a14],d15
.L969:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1205      /* Copy the seed length to local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1206      Dcm_Prv_nrSeedLen_u32  = Dcm_Prv_ptrSecurityConfig_p->Seed_size_u32;
	movh.a	a2,#@his(Dcm_Prv_nrSeedLen_u32)
	lea	a2,[a2]@los(Dcm_Prv_nrSeedLen_u32)
.L970:
	ld.w	d15,[a15]20
.L971:
	st.w	[a2],d15
.L972:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1207  #if(DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1208      Dcm_Prv_GenerateSeedAsynchClientServer(pMsgContext,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1209  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1210  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1211  #if(DCM_CFG_DSP_USE_ASYNCH_FNC != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1212      Dcm_Prv_GenerateSeedAsynchFnc (pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a12
.L510:
	mov.aa	a5,a13
	call	Dcm_Prv_GenerateSeedAsynchFnc
.L506:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1213  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1214  #if (DCM_CFG_DSP_USE_ASYNCH_CLIENT_SERVER != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1215      /* Check for infrastructural errors, in case of RTE */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1216      if((Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetGetSeed_u8)  != FALSE)\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1217          &&((Dcm_Prv_ptrSecurityConfig_p->usePort == USE_ASYNCH_CLIENT_SERVER)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1218      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1219          Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1220          /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1221          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1222      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1223  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1224      /* Check if the Negative response is not set by the application */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1225      /* Check if the seed was returned with out any errors */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1226      if(Dcm_Prv_dataRetGetSeed_u8 == E_OK)
	ld.bu	d15,[a14]
.L973:
	jne	d15,#0,.L58
.L974:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1227      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1228          Dcm_Prv_GetSeedReturnedWoError (&Dcm_SrvOpstatus_u8,pMsgContext,dataNegRespCode_u8);
	movh.a	a4,#@his(Dcm_SrvOpstatus_u8)
	lea	a4,[a4]@los(Dcm_SrvOpstatus_u8)
.L975:
	mov.aa	a5,a12
.L511:
	mov.aa	a6,a13
.L513:
	call	Dcm_Prv_GetSeedReturnedWoError
.L512:
	j	.L59
.L58:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1229      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1230      else if(Dcm_Prv_dataRetGetSeed_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1231      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1232          *dataNegRespCode_u8 = 0x00u;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1233          Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1234          Dcm_DspSecaOpStatus_u8 = DCM_PENDING;
	movh.a	a15,#@his(Dcm_DspSecaOpStatus_u8)
	lea	a15,[a15]@los(Dcm_DspSecaOpStatus_u8)
.L976:
	mov	d0,#10
.L977:
	jne	d15,d0,.L60
.L978:
	mov	d15,#0
.L979:
	st.b	[a13],d15
.L980:
	movh.a	a2,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a2,[a2]@los(Dcm_Prv_secaServRetValue_u8)
.L981:
	mov	d15,#10
.L982:
	st.b	[a2],d15
.L983:
	mov	d15,#1
.L984:
	st.b	[a15],d15
.L985:
	j	.L61
.L60:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1235      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1236      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1237      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1238          if(*dataNegRespCode_u8 == 0x00u)
	ld.bu	d15,[a13]
.L986:
	jne	d15,#0,.L62
.L987:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1239          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1240              /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1241              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L988:
	st.b	[a13],d15
.L62:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1242          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1243              Dcm_DspSecaOpStatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L989:
	st.b	[a15],d15
.L61:
.L59:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1244      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1245  }
	ret
.L432:
	
__Dcm_Prv_SecaGenSeed_function_end:
	.size	Dcm_Prv_SecaGenSeed,__Dcm_Prv_SecaGenSeed_function_end-Dcm_Prv_SecaGenSeed
.L274:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk',code,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1246  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1247  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1248  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1249  *Function name    : Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1250  *Syntax           : Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1251  *Description      : For AsynchronousServerCallPoint, Store security attempt counter in NVM using application function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1252  *Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1253  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1254  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1255  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1256  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1257  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1258  static FUNC(void,DCM_CODE) Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1259  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1260      /* Check whether the Rte_Read is already invoked */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1261      if (!Dcm_Prv_Dcm_SecaRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1262      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1263          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1264          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1265          Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1266                                      (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1267                                      (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1268          if (Dcm_Prv_dataRetValue_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1269          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1270              Dcm_Prv_Dcm_SecaRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1271              Dcm_Prv_dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1272          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1273          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1274          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1275              /* Set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1276              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1277              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1278                  Dcm_Prv_dataRetValue_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1279              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1280          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1281      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1282      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1283      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1284          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1285          Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1286          Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1287                                      (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_Resultfp))();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1288          if (Dcm_Prv_dataRetValue_u8 == RTE_E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1289          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1290              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1291          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1292          else if(Dcm_Prv_dataRetValue_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1293          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1294              Dcm_Prv_dataRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1295          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1296          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1297          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1298              Dcm_Prv_Dcm_SecaRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1299              /* Set the return value to E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1300              if(!Dcm_IsInfrastructureErrorPresent_b(Dcm_Prv_dataRetValue_u8))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1301              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1302                  Dcm_Prv_dataRetValue_u8= E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1303              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1304          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1305      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1306  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1307  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1308  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1309  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1310  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1311  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1312  *Function name    : Dcm_Prv_SecaStoreDelayCountTrue
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1313  *Syntax           : Dcm_Prv_SecaStoreDelayCountTrue(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1314  *Description      : Invoked in case DcmAppl_StoreDelayCount called in seca pending state returned TRUE
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1315  *                   and Call the application  API to store Delay count for this security level in NVM
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1316  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1317  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1318  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1319  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1320  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1321  static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountTrue(P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA)OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1322  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1323      Dcm_Prv_ptrSecurityConfig_p = &Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1324      if ((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1325      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1326  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1327          if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1328          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1329              Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1330          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1331          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1332  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1333          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1334              /* Call the application  API to store Delay count for this security level in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1335              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1336              Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1337              Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1338              (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1339              (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1340          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1341      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1342      if((Dcm_Prv_dataRetValue_u8 == E_OK)||(Dcm_Prv_dataRetValue_u8 == E_NOT_OK))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1343      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1344          Dcm_Prv_flgApplFuncCall_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1345          *OpStatus = DCM_PROCESSSERVICE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1346      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1347      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1348      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1349          Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1350      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1351  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1352  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1353  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1354  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1355  *Function name    : Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1356  *Syntax           : Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1357  *Description      : Call the application  API to store Delay count for the selected
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1358  *                   security level in NVM as per the return value of API DcmAppl_DcmSecaValidKey()
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1359  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1360  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1361  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1362  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1363  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1364      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1365                              (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1366  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1367      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk (void)
; Function Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk
.L138:
Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1368  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1369  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1370      /*The appl API supports only E_OK and E_PENDING*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1371      Dcm_Prv_dataRetValue_u8 = DcmAppl_DcmSecaValidKey((uint8)Dcm_Prv_idxSecTab_qu8);
	movh.a	a15,#@his(Dcm_Prv_dataRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataRetValue_u8)
.L994:
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d15,[a2]
.L995:
	extr.u	d4,d15,#0,#8
	call	DcmAppl_DcmSecaValidKey
.L996:
	st.b	[a15],d2
.L997:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1372      if((Dcm_Prv_dataRetValue_u8 == E_OK)||(Dcm_Prv_dataRetValue_u8 == E_NOT_OK))
	ld.bu	d15,[a15]
.L998:
	jeq	d15,#0,.L63
.L999:
	jne	d15,#1,.L64
.L63:
	j	.L65
.L64:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1373      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1374  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1375          if ((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1376          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1377  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1378              if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1379              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1380                  Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1381              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1382              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1383  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1384              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1385                  /* Call the application  API to store Delay count for this security level in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1386                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1387                  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1388                  Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1389                  (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1390                  (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1391              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1392          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1393          if(DCM_E_PENDING == Dcm_Prv_dataRetValue_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1394          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1395              Dcm_Prv_flgApplFuncCall_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1396              Dcm_DspSecaOpStatus_u8 =DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1397              Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1398              /*Do nothing -remain in the same state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1399          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1400          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1401          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1402              Dcm_Prv_flgApplFuncCall_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1403              *OpStatus = DCM_PROCESSSERVICE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1404          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1405  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1406      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1407      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1408      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1409          Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L1000:
	mov	d15,#10
.L1001:
	st.b	[a15],d15
.L65:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1410      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1411  }
	ret
.L435:
	
__Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk_function_end:
	.size	Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk,__Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk_function_end-Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk
.L279:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed',code,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1412  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1413  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1414  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1415  *Function name    : Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1416  *Syntax           : Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1417  *Description      : Function to store security attempt counter to NVM using application
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1418  *                   as per the return value of API DcmAppl_DcmSecaInvalidKey in case compkey failed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1419  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1420  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1421  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1422  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1423  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1424      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1425                              (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1426  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1427      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed (void)
; Function Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed
.L140:
Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1428  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1429  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1430      /*The appl API supports only E_OK and E_PENDING*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1431      Dcm_Prv_dataRetValue_u8 = DcmAppl_DcmSecaInvalidKey((uint8)Dcm_Prv_idxSecTab_qu8);
	movh.a	a15,#@his(Dcm_Prv_dataRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataRetValue_u8)
.L1006:
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d15,[a2]
.L1007:
	extr.u	d4,d15,#0,#8
	call	DcmAppl_DcmSecaInvalidKey
.L1008:
	st.b	[a15],d2
.L1009:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1432      if((Dcm_Prv_dataRetValue_u8 == E_OK)||(Dcm_Prv_dataRetValue_u8 == E_NOT_OK))
	ld.bu	d15,[a15]
.L1010:
	jeq	d15,#0,.L66
.L1011:
	jne	d15,#1,.L67
.L66:
	j	.L68
.L67:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1433      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1434  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1435          if ((Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp!=NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1436          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1437  #if(DCM_CFG_DSP_SECA_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1438              if (Dcm_Prv_ptrSecurityConfig_p->UseAsynchronousServerCallPoint_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1439              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1440                  Dcm_Prv_SecaUseAsyncServerCallPointForSetSecaAttptCntr();
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1441              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1442              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1443  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1444              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1445                  /* Call the application  API to store Delay count for this security level in NVM */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1446                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation -
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1447                  Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1448                  Dcm_Prv_dataRetValue_u8 =(*(Dcm_SetSecurityAttemptCounter_pfct)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1449                  (Dcm_Prv_ptrSecurityConfig_p->Dsp_SetAttempCounter_fp))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1450                  (Dcm_DspSecaOpStatus_u8, Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1451              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1452          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1453          if(DCM_E_PENDING == Dcm_Prv_dataRetValue_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1454          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1455              Dcm_Prv_flgApplFuncCall_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1456              Dcm_DspSecaOpStatus_u8 =DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1457              Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1458              /*Do nothing -remain in the same state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1459          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1460          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1461          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1462              Dcm_Prv_flgApplFuncCall_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1463              *OpStatus = DCM_PROCESSSERVICE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1464          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1465  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1466      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1467      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1468      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1469          Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L1012:
	mov	d15,#10
.L1013:
	st.b	[a15],d15
.L68:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1470      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1471  }
	ret
.L436:
	
__Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed_function_end:
	.size	Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed,__Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed_function_end-Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed
.L284:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalse',code,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStoreDelayCountFalse'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1472  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1473  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1474  *Function name    : Dcm_Prv_SecaStoreDelayCountFalse
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1475  *Syntax           : Dcm_Prv_SecaStoreDelayCountFalse(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1476  *Description      : Invoked incase DcmAppl_StoreDelayCount called in pending state returned FALSE
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1477  *                   based on return value of compare key relevant functions are called to store the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1478  *                   delay count in NVM using application function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1479  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1480  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1481  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1482  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1483  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1484      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalse
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1485                                  (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1486  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1487      static FUNC(void,DCM_CODE) Dcm_Prv_SecaStoreDelayCountFalse (void)
; Function Dcm_Prv_SecaStoreDelayCountFalse
.L142:
Dcm_Prv_SecaStoreDelayCountFalse:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1488  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1489  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1490      if(Dcm_Prv_stCmpKey_u8 == E_OK)
	movh.a	a15,#@his(Dcm_Prv_stCmpKey_u8)
	lea	a15,[a15]@los(Dcm_Prv_stCmpKey_u8)
	ld.bu	d15,[a15]
.L1018:
	jne	d15,#0,.L69
.L1019:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1491      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1492  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1493          Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1494  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1495          Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk();
	call	Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk
.L69:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1496  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1497      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1498      if(Dcm_Prv_stCmpKey_u8 == DCM_E_COMPARE_KEY_FAILED)
	ld.bu	d0,[a15]
.L1020:
	mov	d15,#11
.L1021:
	jne	d15,d0,.L70
.L1022:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1499      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1500  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1501      Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1502  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1503      Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed();
	call	Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed
.L70:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1504  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1505      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1506  }
	ret
.L437:
	
__Dcm_Prv_SecaStoreDelayCountFalse_function_end:
	.size	Dcm_Prv_SecaStoreDelayCountFalse,__Dcm_Prv_SecaStoreDelayCountFalse_function_end-Dcm_Prv_SecaStoreDelayCountFalse
.L289:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaPending',code,cluster('Dcm_Prv_SecaPending')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaPending'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1507  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1508  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1509  *Function name    : Dcm_Prv_SecaPending
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1510  *Syntax           : Dcm_Prv_SecaPending(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1511  *Description      : Seca pending substate under Dcm checkdata state store delay count in NVM using application
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1512  *                   function as per the return value of DcmAppl_StoreDelayCount()
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1513  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1514  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1515  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1516  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1517  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1518      static FUNC(void,DCM_CODE)  Dcm_Prv_SecaPending (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1519  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1520      static FUNC(void,DCM_CODE)  Dcm_Prv_SecaPending (void)
; Function Dcm_Prv_SecaPending
.L144:
Dcm_Prv_SecaPending:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1521  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1522  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1523      Dcm_Prv_ptrSecurityConfig_p = &Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
	movh.a	a15,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a15,[a15]@los(Dcm_Prv_ptrSecurityConfig_p)
.L1027:
	movh.a	a2,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a2,[a2]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d15,[a2]
.L1028:
	mul	d15,d15,#40
.L1029:
	movh.a	a2,#@his(Dcm_Dsp_Security)
	lea	a2,[a2]@los(Dcm_Dsp_Security)
.L1030:
	addsc.a	a2,a2,d15,#0
.L1031:
	st.a	[a15],a2
.L1032:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1524      if(FALSE != Dcm_Prv_flgApplFuncCall_b)
	movh.a	a15,#@his(Dcm_Prv_flgApplFuncCall_b)
	lea	a15,[a15]@los(Dcm_Prv_flgApplFuncCall_b)
	ld.bu	d15,[a15]
.L1033:
	jeq	d15,#0,.L71
.L1034:
	j	.L72
.L71:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1525      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1526  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1527          Dcm_Prv_SecaStoreDelayCountTrue(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1528  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1529      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1530      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1531      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1532  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1533          Dcm_Prv_SecaStoreDelayCountFalse(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1534  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1535          Dcm_Prv_SecaStoreDelayCountFalse();
	call	Dcm_Prv_SecaStoreDelayCountFalse
.L72:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1536  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1537      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1538  }
	ret
.L438:
	
__Dcm_Prv_SecaPending_function_end:
	.size	Dcm_Prv_SecaPending,__Dcm_Prv_SecaPending_function_end-Dcm_Prv_SecaPending
.L294:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCheckData',code,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaCheckData'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1539  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1540  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1541  *Function name    : Dcm_Prv_SecaCheckData
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1542  *Syntax           : Dcm_Prv_SecaCheckData(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1543                      Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1544  *Description      : This function is invoked when Dcm state is DCM_CHECKDATA
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1545  *                   Seca has substates - COMPAREKEY, GENSEED, PENDING in DCM_CHECKDATA state
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1546  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1547                      Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1548  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1549  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1550  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1551      static FUNC(void,DCM_CODE) Dcm_Prv_SecaCheckData (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_SecaCheckData
.L146:
Dcm_Prv_SecaCheckData:	.type	func
	mov.aa	a15,a5
.L514:
	mov.aa	a12,a6
.L515:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1552                                      P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1553                                      P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1554  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1555  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1556      if (Dcm_Prv_substSeca_en == DCM_DSP_SECA_COMPAREKEY)
	movh.a	a13,#@his(Dcm_Prv_substSeca_en)
	lea	a13,[a13]@los(Dcm_Prv_substSeca_en)
	ld.w	d15,[a13]
.L1039:
	jne	d15,#1,.L73
.L1040:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1557      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1558          /* Compare Key subState of CHECKDATA state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1559          Dcm_Prv_SecaCmpKey(OpStatus,pMsgContext,dataNegRespCode_u8);
	mov.aa	a5,a15
	mov.aa	a6,a12
	call	Dcm_Prv_SecaCmpKey
.L73:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1560      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1561  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1562      if (Dcm_Prv_substSeca_en == DCM_DSP_SECA_GENSEED)
	ld.w	d15,[a13]
.L1041:
	jne	d15,#0,.L74
.L1042:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1563      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1564          /* Generate Seed State of CHECKDATA state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1565          Dcm_Prv_SecaGenSeed(pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a15
.L516:
	mov.aa	a5,a12
.L517:
	call	Dcm_Prv_SecaGenSeed
.L74:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1566      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1567  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1568      if (Dcm_Prv_substSeca_en == DCM_DSP_SECA_PENDING)
	ld.w	d15,[a13]
.L1043:
	jne	d15,#2,.L75
.L1044:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1569      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1570          /* Pending  substate of CHECKDATA State */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1571  #if (DCM_CFG_DSP_SECA_ATTEMPT_COUNTER!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1572          Dcm_Prv_SecaPending(OpStatus);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1573  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1574          Dcm_Prv_SecaPending();
	call	Dcm_Prv_SecaPending
.L75:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1575  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1576      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1577  }
	ret
.L439:
	
__Dcm_Prv_SecaCheckData_function_end:
	.size	Dcm_Prv_SecaCheckData,__Dcm_Prv_SecaCheckData_function_end-Dcm_Prv_SecaCheckData
.L299:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessStCmpKeyOk',code,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessStCmpKeyOk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1578  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1579  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1580  *Function name    : Dcm_Prv_SecaProcessStCmpKeyOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1581  *Syntax           : Dcm_Prv_SecaProcessStCmpKeyOk(Dcm_SrvOpStatusType OpStatus)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1582  *Description      : This function is invoked in state DCM_PROCESSSERVICE when return value of application
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1583  *                   API for compare key is E_OK
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1584  *Parameter        : Dcm_SrvOpStatusType OpStatus
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1585  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1586  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1587  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1588  static FUNC(void,DCM_CODE) Dcm_Prv_SecaProcessStCmpKeyOk (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus)
; Function Dcm_Prv_SecaProcessStCmpKeyOk
.L148:
Dcm_Prv_SecaProcessStCmpKeyOk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1589  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1590  #if (DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1591      /* Local Loop variable for Seed index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1592      VAR(uint32,AUTOMATIC)  l_idxSeed_qu32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1593  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1594      /* Change state back to Request Seed state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1595      *OpStatus = DCM_INITIAL;
	mov	d15,#0
.L1049:
	st.b	[a4],d15
.L1050:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1596      /* Set the Change Security Level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1597      Dcm_DspChgSecLevel_b = TRUE;
	movh.a	a15,#@his(Dcm_DspChgSecLevel_b)
	lea	a15,[a15]@los(Dcm_DspChgSecLevel_b)
.L1051:
	mov	d15,#1
.L1052:
	st.b	[a15],d15
.L1053:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1598      Dcm_Prv_secaServRetValue_u8=E_OK;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L1054:
	mov	d15,#0
.L1055:
	st.b	[a15],d15
.L1056:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1599  #if (DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1600      /* Clearing Stored Seed For the Security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1601      for(l_idxSeed_qu32=0x0; (l_idxSeed_qu32 < Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8].Seed_size_u32); l_idxSeed_qu32++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1602      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1603          /* Store the seed for use in Request KEY state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1604          Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].SeedBuff[l_idxSeed_qu32] = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1605      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1606  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1607  }
	ret
.L443:
	
__Dcm_Prv_SecaProcessStCmpKeyOk_function_end:
	.size	Dcm_Prv_SecaProcessStCmpKeyOk,__Dcm_Prv_SecaProcessStCmpKeyOk_function_end-Dcm_Prv_SecaProcessStCmpKeyOk
.L304:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessStCmpKeyFailed',code,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessStCmpKeyFailed'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1608  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1609  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1610  *Function name    : Dcm_Prv_SecaProcessStCmpKeyFailed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1611  *Syntax           : Dcm_Prv_SecaProcessStCmpKeyFailed(Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1612  *Description      : This function is invoked in state DCM_PROCESSSERVICE when return
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1613  *                   value of application API for compare key is Failed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1614  *Parameter        : Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1615  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1616  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1617  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1618  static FUNC(void,DCM_CODE) Dcm_Prv_SecaProcessStCmpKeyFailed
; Function Dcm_Prv_SecaProcessStCmpKeyFailed
.L150:
Dcm_Prv_SecaProcessStCmpKeyFailed:	.type	func
	sub.a	a10,#8
.L518:
	st.a	[a10]4,a4
.L520:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1619                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1620  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1621      Dcm_Prv_ptrSecurityConfig_p = &Dcm_Dsp_Security[Dcm_Prv_idxSecTab_qu8];
	movh.a	a12,#@his(Dcm_Prv_ptrSecurityConfig_p)
	lea	a12,[a12]@los(Dcm_Prv_ptrSecurityConfig_p)
.L1061:
	movh.a	a13,#@his(Dcm_Prv_idxSecTab_qu8)
	lea	a13,[a13]@los(Dcm_Prv_idxSecTab_qu8)
	ld.w	d0,[a13]
.L1062:
	mul	d15,d0,#40
.L1063:
	movh.a	a15,#@his(Dcm_Dsp_Security)
	lea	a15,[a15]@los(Dcm_Dsp_Security)
.L1064:
	addsc.a	a15,a15,d15,#0
.L1065:
	st.a	[a12],a15
.L1066:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1622      *dataNegRespCode_u8 = DCM_E_INVALIDKEY; /* Invalid key is received */
	mov	d15,#53
.L1067:
	ld.a	a15,[a10]4
.L519:
	st.b	[a15],d15
.L1068:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1623      /* Check if the Delay Counter value has reached the max limit */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1624      if((Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8) < Dcm_Prv_ptrSecurityConfig_p->NumAttDelay_u8)
	ld.a	a2,[a12]
.L1069:
	lea	a4,[a2]28
.L1070:
	movh.a	a14,#@his(Dcm_Dsp_Seca)
	lea	a14,[a14]@los(Dcm_Dsp_Seca)
.L1071:
	addsc.a	a5,a14,d0,#3
.L1072:
	mov.aa	a6,a5
	add.a	a6,#4
	ld.bu	d15,[a6]
.L1073:
	ld.bu	d0,[a4]
.L1074:
	jge.u	d15,d0,.L76
.L1075:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1625      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1626          *dataNegRespCode_u8 = DCM_E_INVALIDKEY; /* Invalid key is received */
	mov	d15,#53
.L1076:
	st.b	[a15],d15
.L76:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1627      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1628      if((Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8) >= Dcm_Prv_ptrSecurityConfig_p->NumAttDelay_u8)
	ld.bu	d5,[a6]
.L1077:
	ld.bu	d15,[a4]
.L1078:
	jlt.u	d5,d15,.L77
.L1079:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1629      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1630          /* Check whether DelayTime_u32 is configured with value 0 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1631          if(Dcm_Prv_ptrSecurityConfig_p->DelayTime_u32 > 0x00u)
	ld.w	d6,[a2]4
.L1080:
	jeq	d6,#0,.L78
.L1081:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1632          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1633              Dcm_Prv_nrDelay_u32 = ((Dcm_Prv_ptrSecurityConfig_p->DelayTime_u32) * DCM_CFG_TASK_TIME_MS);
	movh.a	a15,#@his(Dcm_Prv_nrDelay_u32)
.L521:
	lea	a15,[a15]@los(Dcm_Prv_nrDelay_u32)
	st.a	[a10],a15
.L1082:
	st.w	[a15],d6
.L1083:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1634              /* DcmAppl_DcmGetUpdatedDelayTime should return Residual Delay time in Counts of DcmTaskTime */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1635              Dcm_Prv_nrDelay_u32 = DcmAppl_DcmGetUpdatedDelayTime( Dcm_Prv_ptrSecurityConfig_p->Security_level_u8,
	ld.bu	d4,[a2]16
.L1084:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1636                                              Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8,Dcm_Prv_nrDelay_u32);
	call	DcmAppl_DcmGetUpdatedDelayTime
.L1085:
	st.w	[a15],d2
.L1086:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1637              Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].Residual_delay_u32 =
	ld.w	d15,[a13]
.L1087:
	addsc.a	a15,a14,d15,#3
.L1088:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1638              (Dcm_Dsp_SecaGlobaltimer_u32 + (Dcm_Prv_nrDelay_u32 / DCM_CFG_TASK_TIME_MS));
	movh.a	a2,#@his(Dcm_Dsp_SecaGlobaltimer_u32)
	lea	a2,[a2]@los(Dcm_Dsp_SecaGlobaltimer_u32)
	ld.w	d15,[a2]
.L1089:
	ld.a	a2,[a10]
	ld.w	d0,[a2]
.L1090:
	add	d15,d0
.L1091:
	st.w	[a15],d15
.L1092:
	ld.a	a2,[a12]
.L1093:
	j	.L79
.L78:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1639          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1640          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1641          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1642              /* Assign Residual_delay_u32 with the value 0,so that there will not be any delay effect
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1643              and ecu will not be locked */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1644              Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].Residual_delay_u32 = 0x00u;
	mov	d15,#0
.L1094:
	st.w	[a5],d15
.L79:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1645          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1646  #if (DCM_CFG_DSP_NRC0x36MAXDELAYCOUNT != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1647          *dataNegRespCode_u8 = DCM_E_EXCEEDNUMBEROFATTEMPTS;
	mov	d15,#54
.L1095:
	ld.a	a15,[a10]4
.L522:
	st.b	[a15],d15
.L77:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1648  #else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1649          *dataNegRespCode_u8 = DCM_E_INVALIDKEY;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1650  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1651      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1652      /* If Configured value for Lock count is nonzero */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1653      if(Dcm_Prv_ptrSecurityConfig_p->NumAttLock_u8 > 0)
	ld.bu	d15,[a2]29
.L1096:
	jeq	d15,#0,.L80
.L1097:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1654      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1655          /* If FailedAtm_cnt_u8 exceeds maximum count */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1656          if(Dcm_Dsp_Seca[Dcm_Prv_idxSecTab_qu8].FailedAtm_cnt_u8 == Dcm_Prv_ptrSecurityConfig_p->NumAttLock_u8)
	ld.w	d0,[a13]
.L1098:
	addsc.a	a15,a14,d0,#3
.L1099:
	add.a	a15,#4
	ld.bu	d1,[a15]
.L1100:
	jne	d15,d1,.L81
.L1101:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1657          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1658              /* Provide Notification to DcmAppl that Lock counter is exceeded */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1659              DcmAppl_DcmSecurityLevelLocked((uint8)Dcm_Prv_idxSecTab_qu8);
	extr.u	d4,d0,#0,#8
	call	DcmAppl_DcmSecurityLevelLocked
.L1102:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1660              *dataNegRespCode_u8 = DCM_E_EXCEEDNUMBEROFATTEMPTS;
	mov	d15,#54
.L1103:
	ld.a	a15,[a10]4
.L523:
	st.b	[a15],d15
.L81:
.L80:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1661          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1662      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1663  }
	ret
.L445:
	
__Dcm_Prv_SecaProcessStCmpKeyFailed_function_end:
	.size	Dcm_Prv_SecaProcessStCmpKeyFailed,__Dcm_Prv_SecaProcessStCmpKeyFailed_function_end-Dcm_Prv_SecaProcessStCmpKeyFailed
.L309:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcesStCmpKeyNotOk',code,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcesStCmpKeyNotOk'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1664  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1665  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1666  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1667  *Function name    : Dcm_Prv_SecaProcesStCmpKeyNotOk
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1668  *Syntax           : Dcm_Prv_SecaProcesStCmpKeyNotOk(Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1669  *Description      : This function is invoked in state DCM_PROCESSSERVICE when return
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1670  *                   value of application API to compare key is NOT_OK
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1671  *Parameter        : Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1672  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1673  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1674  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1675  static FUNC(void,DCM_CODE) Dcm_Prv_SecaProcesStCmpKeyNotOk
; Function Dcm_Prv_SecaProcesStCmpKeyNotOk
.L152:
Dcm_Prv_SecaProcesStCmpKeyNotOk:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1676                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1677  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1678      if(*dataNegRespCode_u8 == 0x00u)
	ld.bu	d15,[a4]
.L1108:
	jne	d15,#0,.L82
.L1109:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1679      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1680          /* Set the negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1681          *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L1110:
	st.b	[a4],d15
.L1111:
	j	.L83
.L82:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1682      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1683      else
.L83:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1684      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1685          /*do nothing*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1686      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1687  }
	ret
.L447:
	
__Dcm_Prv_SecaProcesStCmpKeyNotOk_function_end:
	.size	Dcm_Prv_SecaProcesStCmpKeyNotOk,__Dcm_Prv_SecaProcesStCmpKeyNotOk_function_end-Dcm_Prv_SecaProcesStCmpKeyNotOk
.L314:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessService',code,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaProcessService'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1688  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1689  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1690  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1691  *Function name    : Dcm_Prv_SecaProcessService
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1692  *Syntax           : Dcm_Prv_SecaProcessService(Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1693  *Description      : This function is invoked in Dcm state DCM_PROCESSSERVICE in case of SECA request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1694  *                   Based on application API return value to compare key, respective function is invoked
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1695  *Parameter        : Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1696  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1697  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1698  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1699  static FUNC(void,DCM_CODE) Dcm_Prv_SecaProcessService
; Function Dcm_Prv_SecaProcessService
.L154:
Dcm_Prv_SecaProcessService:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1700                              (P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1701  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1702      if(Dcm_Prv_stCmpKey_u8 == E_OK)
	movh.a	a15,#@his(Dcm_Prv_stCmpKey_u8)
	lea	a15,[a15]@los(Dcm_Prv_stCmpKey_u8)
	ld.bu	d15,[a15]
.L1116:
	jne	d15,#0,.L84
.L1117:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1703      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1704          Dcm_Prv_SecaProcessStCmpKeyOk(&Dcm_SrvOpstatus_u8);
	movh.a	a4,#@his(Dcm_SrvOpstatus_u8)
.L524:
	lea	a4,[a4]@los(Dcm_SrvOpstatus_u8)
	call	Dcm_Prv_SecaProcessStCmpKeyOk
.L1118:
	j	.L85
.L84:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1705      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1706      else if(Dcm_Prv_stCmpKey_u8 == E_NOT_OK)
	jne	d15,#1,.L86
.L1119:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1707      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1708          Dcm_Prv_SecaProcesStCmpKeyNotOk(dataNegRespCode_u8);
	call	Dcm_Prv_SecaProcesStCmpKeyNotOk
.L525:
	j	.L87
.L86:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1709      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1710      else if(Dcm_Prv_stCmpKey_u8 == DCM_E_COMPARE_KEY_FAILED)
	mov	d0,#11
.L1120:
	jne	d15,d0,.L88
.L1121:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1711      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1712          Dcm_Prv_SecaProcessStCmpKeyFailed(dataNegRespCode_u8);
	call	Dcm_Prv_SecaProcessStCmpKeyFailed
.L526:
	j	.L89
.L88:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1713      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1714      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1715      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1716          Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L1122:
	mov	d15,#10
.L1123:
	st.b	[a15],d15
.L89:
.L87:
.L85:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1717      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1718  }
	ret
.L449:
	
__Dcm_Prv_SecaProcessService_function_end:
	.size	Dcm_Prv_SecaProcessService,__Dcm_Prv_SecaProcessService_function_end-Dcm_Prv_SecaProcessService
.L319:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStateProcessing',code,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.text.DcmDspUds_Seca.Dcm_Prv_SecaStateProcessing'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1719  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1720  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1721  *Function name    : Dcm_Prv_SecaStateProcessing
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1722  *Syntax           : Dcm_Prv_SecaStateProcessing(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1723                      Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1724  *Description      : This function checks for Dcm states while processing the seca service
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1725  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1726                      Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1727  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1728  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1729  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1730  static FUNC(void,DCM_CODE) Dcm_Prv_SecaStateProcessing (P2VAR(Dcm_SrvOpStatusType,AUTOMATIC,DCM_INTERN_DATA) OpStatus,\ 
; Function Dcm_Prv_SecaStateProcessing
.L156:
Dcm_Prv_SecaStateProcessing:	.type	func
	mov.aa	a15,a4
.L529:
	mov.aa	a12,a5
.L530:
	mov.aa	a13,a6
.L531:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1731                                      P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_CONST) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1732                                      P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1733  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1734      /* Seed / key Request state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1735      if ((*OpStatus)==(DCM_INITIAL))
	ld.bu	d15,[a15]
.L1128:
	jne	d15,#0,.L90
.L1129:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1736      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1737          Dcm_Prv_SecaRequestState(pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a12
.L527:
	mov.aa	a5,a13
.L528:
	call	Dcm_Prv_SecaRequestState
.L90:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1738      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1739      /* comprises of substate Compare Key / Generate Seed /Pending  State */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1740      if ((*OpStatus)==(DCM_CHECKDATA))
	ld.bu	d15,[a15]
.L1130:
	jne	d15,#4,.L91
.L1131:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1741      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1742          Dcm_Prv_SecaCheckData(OpStatus,pMsgContext,dataNegRespCode_u8);
	mov.aa	a4,a15
.L532:
	mov.aa	a5,a12
.L533:
	mov.aa	a6,a13
.L534:
	call	Dcm_Prv_SecaCheckData
.L91:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1743      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1744      /* process the seca service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1745      if ((*OpStatus)==(DCM_PROCESSSERVICE))
	ld.bu	d15,[a15]
.L1132:
	jne	d15,#5,.L92
.L1133:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1746      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1747          Dcm_Prv_SecaProcessService(dataNegRespCode_u8);
	mov.aa	a4,a13
.L535:
	call	Dcm_Prv_SecaProcessService
.L92:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1748      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1749  }
	ret
.L451:
	
__Dcm_Prv_SecaStateProcessing_function_end:
	.size	Dcm_Prv_SecaStateProcessing,__Dcm_Prv_SecaStateProcessing_function_end-Dcm_Prv_SecaStateProcessing
.L324:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_DcmSecurityAccess',code,cluster('Dcm_DcmSecurityAccess')
	.sect	'.text.DcmDspUds_Seca.Dcm_DcmSecurityAccess'
	.align	2
	
	.global	Dcm_DcmSecurityAccess

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1750  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1751  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1752  *Function name    : Dcm_DcmSecurityAccess
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1753  *Syntax           : Dcm_DcmSecurityAccess(Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1754                      Dcm_NegativeResponseCodeType dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1755  *Description      : This function is called by DSD, when SID is set to 0x27, this service is provided in DSP module
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1756  *                   and configured in DCM identifier table. Security Access service is used to unlock a particular
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1757  *                   security level when needed to process a specific service active only in certain security level.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1758  *                   Tester will request for a seed with the security level to be unlocked, ECU will send the Seed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1759  *                   and when it gets the request key request compares the key with the internally stored key and
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1760  *                   unlocks the security level if keys are same.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1761  *Parameter        : Dcm_SrvOpStatusType OpStatus, Dcm_MsgContextType pMsgContext,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1762                      Dcm_NegativeResponseCodeType dataNegRespCode_u8
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1763  *Return value     : Std_ReturnType
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1764  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1765   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1766  FUNC(Std_ReturnType,DCM_CODE) Dcm_DcmSecurityAccess (VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,\ 
; Function Dcm_DcmSecurityAccess
.L158:
Dcm_DcmSecurityAccess:	.type	func
	sub.a	a10,#8
.L536:
	mov.aa	a2,a4
.L538:
	mov.aa	a13,a5
.L539:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1767                                      P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,\ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1768                                      P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1769  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1770      VAR(Std_ReturnType,AUTOMATIC)     localdataServRetValue_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1771  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1772      Dcm_Prv_stBuffer_b = FALSE;                         /* Setting Seed Buffer State to False */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1773  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1774      *dataNegRespCode_u8  = 0x0;                         /* Initialise NRC to 0      */
	mov	d15,#0
.L554:
	st.b	[a13],d15
.L555:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1775      Dcm_Prv_substSeca_en = Dcm_DspSecaStatus_en;        /* Get the SECA sub status for Dcm state CHECKDATA  */
	movh.a	a15,#@his(Dcm_DspSecaStatus_en)
	lea	a15,[a15]@los(Dcm_DspSecaStatus_en)
	st.a	[a10],a15
.L556:
	movh.a	a12,#@his(Dcm_Prv_substSeca_en)
	lea	a12,[a12]@los(Dcm_Prv_substSeca_en)
.L557:
	ld.w	d15,[a15]
.L558:
	st.w	[a12],d15
.L559:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1776      Dcm_Prv_dataRetValue_u8 =E_OK;
	movh.a	a15,#@his(Dcm_Prv_dataRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_dataRetValue_u8)
.L560:
	mov	d15,#0
.L561:
	st.b	[a15],d15
.L562:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1777      localdataServRetValue_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1778      Dcm_Prv_secaServRetValue_u8=DCM_E_PENDING;
	movh.a	a15,#@his(Dcm_Prv_secaServRetValue_u8)
	lea	a15,[a15]@los(Dcm_Prv_secaServRetValue_u8)
.L563:
	mov	d15,#10
.L564:
	st.b	[a15],d15
.L565:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1779  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1780      /* If OpStatus is set to DCM_CANCEL then call the ini function for resetting */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1781      if (OpStatus == DCM_CANCEL)
	jne	d4,#2,.L93
.L566:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1782      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1783          /* Call the Ini Function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1784          Dcm_Dsp_SecaIni();
	call	Dcm_Dsp_SecaIni
.L537:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1785          /* Set the return value to E_OK as the Ini function will always be serviced  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1786          Dcm_Prv_secaServRetValue_u8 = E_OK;
	mov	d15,#0
.L567:
	st.b	[a15],d15
.L568:
	j	.L94
.L93:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1787      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1788      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1789      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1790          Dcm_Prv_SecaStateProcessing(&Dcm_SrvOpstatus_u8,pMsgContext,dataNegRespCode_u8);
	movh.a	a14,#@his(Dcm_SrvOpstatus_u8)
	lea	a14,[a14]@los(Dcm_SrvOpstatus_u8)
.L569:
	mov.aa	a4,a14
.L542:
	mov.aa	a5,a2
.L541:
	mov.aa	a6,a13
.L543:
	call	Dcm_Prv_SecaStateProcessing
.L540:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1791          /* Check if the Negative Response Code is set */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1792          if(*dataNegRespCode_u8 != 0x0u)
	ld.bu	d15,[a13]
.L570:
	jeq	d15,#0,.L95
.L571:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1793          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1794              /* Move back to Request seed state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1795              Dcm_SrvOpstatus_u8 = DCM_INITIAL;
	mov	d15,#0
.L572:
	st.b	[a14],d15
.L573:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1796              /* Reset the globals to avoid Invalid Unlock Sequence */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1797              Dcm_DspSecAccType_u8 = 0x0;   /* Reset Access Type Stored */
	movh.a	a2,#@his(Dcm_DspSecAccType_u8)
	lea	a2,[a2]@los(Dcm_DspSecAccType_u8)
.L574:
	mov	d15,#0
.L575:
	st.b	[a2],d15
.L576:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1798              Dcm_DspSecTabIdx_u8  = 0x0;    /* Reset the Security table index Stored */
	movh.a	a2,#@his(Dcm_DspSecTabIdx_u8)
	lea	a2,[a2]@los(Dcm_DspSecTabIdx_u8)
.L577:
	mov	d15,#0
.L578:
	st.b	[a2],d15
.L579:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1799              Dcm_Prv_secaServRetValue_u8=E_NOT_OK;
	mov	d15,#1
.L580:
	st.b	[a15],d15
.L95:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1800          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1801          /* Update the SECA sub Status to RAM variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1802          Dcm_DspSecaStatus_en = Dcm_Prv_substSeca_en;
	ld.w	d15,[a12]
.L581:
	ld.a	a2,[a10]
	st.w	[a2],d15
.L94:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1803      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1804  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1805      localdataServRetValue_u8 = Dcm_Prv_secaServRetValue_u8;
	ld.bu	d2,[a15]
.L544:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1806      return localdataServRetValue_u8;
	j	.L96

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1807  }
.L96:
	ret
.L358:
	
__Dcm_DcmSecurityAccess_function_end:
	.size	Dcm_DcmSecurityAccess,__Dcm_DcmSecurityAccess_function_end-Dcm_DcmSecurityAccess
.L169:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Seca.Dcm_ResetAccessType',code,cluster('Dcm_ResetAccessType')
	.sect	'.text.DcmDspUds_Seca.Dcm_ResetAccessType'
	.align	2
	
	.global	Dcm_ResetAccessType

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1808  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1809  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1810  *Function name    : Dcm_ResetAccessType
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1811  *Syntax           : Dcm_ResetAccessType(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1812  *Description      : To Reset the stored AccessType when the NRC is returned for Seca Service(0x27) from DsdStateMachine
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1813  *Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1814  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1815  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1816   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1817  FUNC(void,DCM_CODE) Dcm_ResetAccessType (void)
; Function Dcm_ResetAccessType
.L160:
Dcm_ResetAccessType:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1818  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1819      Dcm_DspSecAccType_u8=0;
	movh.a	a15,#@his(Dcm_DspSecAccType_u8)
	lea	a15,[a15]@los(Dcm_DspSecAccType_u8)
.L586:
	mov	d15,#0
.L587:
	st.b	[a15],d15
.L588:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1820  }
	ret
.L365:
	
__Dcm_ResetAccessType_function_end:
	.size	Dcm_ResetAccessType,__Dcm_ResetAccessType_function_end-Dcm_ResetAccessType
.L174:
	; End of function
	
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_DspSecTabIdx_u8',data,cluster('Dcm_DspSecTabIdx_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_DspSecTabIdx_u8'
	.global	Dcm_DspSecTabIdx_u8
Dcm_DspSecTabIdx_u8:	.type	object
	.size	Dcm_DspSecTabIdx_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_DspSecAccType_u8',data,cluster('Dcm_DspSecAccType_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_DspSecAccType_u8'
	.global	Dcm_DspSecAccType_u8
Dcm_DspSecAccType_u8:	.type	object
	.size	Dcm_DspSecAccType_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_stCmpKey_u8',data,cluster('Dcm_Prv_stCmpKey_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_stCmpKey_u8'
Dcm_Prv_stCmpKey_u8:	.type	object
	.size	Dcm_Prv_stCmpKey_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSecLevel_u8',data,cluster('Dcm_Prv_dataSecLevel_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSecLevel_u8'
Dcm_Prv_dataSecLevel_u8:	.type	object
	.size	Dcm_Prv_dataSecLevel_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_idxSecTab_qu8',data,cluster('Dcm_Prv_idxSecTab_qu8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_idxSecTab_qu8'
	.align	4
Dcm_Prv_idxSecTab_qu8:	.type	object
	.size	Dcm_Prv_idxSecTab_qu8,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_ptrSecurityConfig_p',data,cluster('Dcm_Prv_ptrSecurityConfig_p')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_ptrSecurityConfig_p'
	.align	4
Dcm_Prv_ptrSecurityConfig_p:	.type	object
	.size	Dcm_Prv_ptrSecurityConfig_p,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_ptrSecaFnc_p',data,cluster('Dcm_Prv_ptrSecaFnc_p')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_ptrSecaFnc_p'
	.align	4
Dcm_Prv_ptrSecaFnc_p:	.type	object
	.size	Dcm_Prv_ptrSecaFnc_p,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSecAccType_u8',data,cluster('Dcm_Prv_dataSecAccType_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSecAccType_u8'
Dcm_Prv_dataSecAccType_u8:	.type	object
	.size	Dcm_Prv_dataSecAccType_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSubFunc_u8',data,cluster('Dcm_Prv_dataSubFunc_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_dataSubFunc_u8'
Dcm_Prv_dataSubFunc_u8:	.type	object
	.size	Dcm_Prv_dataSubFunc_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_nrSeedLen_u32',data,cluster('Dcm_Prv_nrSeedLen_u32')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_nrSeedLen_u32'
	.align	4
Dcm_Prv_nrSeedLen_u32:	.type	object
	.size	Dcm_Prv_nrSeedLen_u32,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_substSeca_en',data,cluster('Dcm_Prv_substSeca_en')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_substSeca_en'
	.align	4
Dcm_Prv_substSeca_en:	.type	object
	.size	Dcm_Prv_substSeca_en,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_dataRetGetSeed_u8',data,cluster('Dcm_Prv_dataRetGetSeed_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_dataRetGetSeed_u8'
Dcm_Prv_dataRetGetSeed_u8:	.type	object
	.size	Dcm_Prv_dataRetGetSeed_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_dataRetValue_u8',data,cluster('Dcm_Prv_dataRetValue_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_dataRetValue_u8'
Dcm_Prv_dataRetValue_u8:	.type	object
	.size	Dcm_Prv_dataRetValue_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_secaServRetValue_u8',data,cluster('Dcm_Prv_secaServRetValue_u8')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_secaServRetValue_u8'
Dcm_Prv_secaServRetValue_u8:	.type	object
	.size	Dcm_Prv_secaServRetValue_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_nrDelay_u32',data,cluster('Dcm_Prv_nrDelay_u32')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_nrDelay_u32'
	.align	4
Dcm_Prv_nrDelay_u32:	.type	object
	.size	Dcm_Prv_nrDelay_u32,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Seca.Dcm_Prv_flgApplFuncCall_b',data,cluster('Dcm_Prv_flgApplFuncCall_b')
	.sect	'.bss.DcmDspUds_Seca.Dcm_Prv_flgApplFuncCall_b'
Dcm_Prv_flgApplFuncCall_b:	.type	object
	.size	Dcm_Prv_flgApplFuncCall_b,1
	.space	1
	.calls	'Dcm_Prv_CurrentSecurityLevel','Dcm_GetSecurityLevel'
	.calls	'Dcm_Prv_CurrentSecurityLevel','Dcm_Prv_ReqSecIsCurrentSecurityLevel'
	.calls	'Dcm_Prv_CurrentSecurityLevel','Dcm_Prv_NewSecurityLevelToUnlock'
	.calls	'Dcm_Prv_SecurityLevelConfigured','Dcm_Prv_CurrentSecurityLevel'
	.calls	'Dcm_Prv_SecaSeedRequest','Dcm_Prv_SecurityLevelConfigured'
	.calls	'Dcm_Prv_ChkForReqSecaLvl','Dcm_Prv_ReqSecaLvlConfigured'
	.calls	'Dcm_Prv_SecaRequestState','Dcm_Prv_SecaSeedRequest'
	.calls	'Dcm_Prv_SecaRequestState','Dcm_Prv_ChkForReqSecaLvl'
	.calls	'Dcm_Prv_SecaCheckdataStValidKeyChk','__INDIRECT__'
	.calls	'Dcm_Prv_SecaUnlockSecurityLvl','DcmAppl_DcmSecaValidKey'
	.calls	'Dcm_Prv_SecaUnlockSecurityLvl','Dcm_Prv_SecaValidKeyNotificationToAppIsOk'
	.calls	'Dcm_Prv_SecaCmpKeyFailed','DcmAppl_DcmSecaInvalidKey'
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','Dcm_Prv_SecaUnlockSecurityLvl'
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','Dcm_Prv_SecaCmpKeyPnding'
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','Dcm_Prv_SecaCmpKeyNotOk'
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','Dcm_Prv_SecaCmpKeyFailed'
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','Dcm_Prv_SecaCmpKeyNegResp'
	.calls	'Dcm_Prv_SecaCmpKey','Dcm_Prv_SecaCheckdataStValidKeyChk'
	.calls	'Dcm_Prv_SecaCmpKey','Dcm_IsInfrastructureErrorPresent_b'
	.calls	'Dcm_Prv_SecaCmpKey','Dcm_Prv_SecaCmpKeyStatusChk'
	.calls	'Dcm_Prv_GenerateSeedAsynchFnc','__INDIRECT__'
	.calls	'Dcm_Prv_SecaGenSeed','Dcm_Prv_GenerateSeedAsynchFnc'
	.calls	'Dcm_Prv_SecaGenSeed','Dcm_Prv_GetSeedReturnedWoError'
	.calls	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk','DcmAppl_DcmSecaValidKey'
	.calls	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed','DcmAppl_DcmSecaInvalidKey'
	.calls	'Dcm_Prv_SecaStoreDelayCountFalse','Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk'
	.calls	'Dcm_Prv_SecaStoreDelayCountFalse','Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed'
	.calls	'Dcm_Prv_SecaPending','Dcm_Prv_SecaStoreDelayCountFalse'
	.calls	'Dcm_Prv_SecaCheckData','Dcm_Prv_SecaCmpKey'
	.calls	'Dcm_Prv_SecaCheckData','Dcm_Prv_SecaGenSeed'
	.calls	'Dcm_Prv_SecaCheckData','Dcm_Prv_SecaPending'
	.calls	'Dcm_Prv_SecaProcessStCmpKeyFailed','DcmAppl_DcmGetUpdatedDelayTime'
	.calls	'Dcm_Prv_SecaProcessStCmpKeyFailed','DcmAppl_DcmSecurityLevelLocked'
	.calls	'Dcm_Prv_SecaProcessService','Dcm_Prv_SecaProcessStCmpKeyOk'
	.calls	'Dcm_Prv_SecaProcessService','Dcm_Prv_SecaProcesStCmpKeyNotOk'
	.calls	'Dcm_Prv_SecaProcessService','Dcm_Prv_SecaProcessStCmpKeyFailed'
	.calls	'Dcm_Prv_SecaStateProcessing','Dcm_Prv_SecaRequestState'
	.calls	'Dcm_Prv_SecaStateProcessing','Dcm_Prv_SecaCheckData'
	.calls	'Dcm_Prv_SecaStateProcessing','Dcm_Prv_SecaProcessService'
	.calls	'Dcm_DcmSecurityAccess','Dcm_Dsp_SecaIni'
	.calls	'Dcm_DcmSecurityAccess','Dcm_Prv_SecaStateProcessing'
	.calls	'Dcm_Prv_NewSecurityLevelToUnlock','',0
	.calls	'Dcm_Prv_ReqSecIsCurrentSecurityLevel','',0
	.calls	'Dcm_Prv_CurrentSecurityLevel','',8
	.calls	'Dcm_Prv_SecurityLevelConfigured','',0
	.calls	'Dcm_Prv_SecaSeedRequest','',0
	.calls	'Dcm_Prv_ReqSecaLvlConfigured','',0
	.calls	'Dcm_Prv_ChkForReqSecaLvl','',0
	.calls	'Dcm_Prv_SecaRequestState','',0
	.calls	'Dcm_Prv_SecaCmpKeyPnding','',0
	.calls	'Dcm_Prv_SecaCheckdataStValidKeyChk','',0
	.calls	'Dcm_Prv_SecaValidKeyNotificationToAppIsOk','',0
	.calls	'Dcm_Prv_SecaUnlockSecurityLvl','',0
	.calls	'Dcm_Prv_SecaCmpKeyFailed','',0
	.calls	'Dcm_Prv_SecaCmpKeyNotOk','',0
	.calls	'Dcm_Prv_SecaCmpKeyNegResp','',0
	.calls	'Dcm_Prv_SecaCmpKeyStatusChk','',0
	.calls	'Dcm_Prv_SecaCmpKey','',0
	.calls	'Dcm_Prv_GenerateSeedAsynchFnc','',0
	.calls	'Dcm_Prv_GetSeedReturnedWoError','',0
	.calls	'Dcm_Prv_SecaGenSeed','',0
	.calls	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk','',0
	.calls	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed','',0
	.calls	'Dcm_Prv_SecaStoreDelayCountFalse','',0
	.calls	'Dcm_Prv_SecaPending','',0
	.calls	'Dcm_Prv_SecaCheckData','',0
	.calls	'Dcm_Prv_SecaProcessStCmpKeyOk','',0
	.calls	'Dcm_Prv_SecaProcessStCmpKeyFailed','',8
	.calls	'Dcm_Prv_SecaProcesStCmpKeyNotOk','',0
	.calls	'Dcm_Prv_SecaProcessService','',0
	.calls	'Dcm_Prv_SecaStateProcessing','',0
	.calls	'Dcm_DcmSecurityAccess','',8
	.extern	Dcm_IsInfrastructureErrorPresent_b
	.extern	Dcm_Dsp_SecaGlobaltimer_u32
	.extern	Dcm_Dsp_Seca
	.extern	Dcm_Dsp_Security
	.extern	Dcm_Dsp_SecaIni
	.extern	Dcm_SrvOpstatus_u8
	.extern	Dcm_GetSecurityLevel
	.extern	DcmAppl_DcmGetUpdatedDelayTime
	.extern	DcmAppl_DcmSecurityLevelLocked
	.extern	DcmAppl_DcmSecaInvalidKey
	.extern	DcmAppl_DcmSecaValidKey
	.extern	Dcm_DspSecaOpStatus_u8
	.extern	Dcm_DspSecaStatus_en
	.extern	Dcm_DspChgSecLevel_b
	.extern	__INDIRECT__
	.calls	'Dcm_ResetAccessType','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L162:
	.word	15893
	.half	3
	.word	.L163
	.byte	4
.L161:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L164
.L357:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	157
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	174
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	174
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	157
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	157
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	174
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	157
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	157
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	487
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	509
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	509
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	487
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	487
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	509
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	157
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	157
	.byte	6,0
.L374:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	826
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	842
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	842
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	157
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	826
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	826
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	157
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	842
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	157
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	157
	.byte	6,0,8
	.byte	'Dcm_IsInfrastructureErrorPresent_b',0,4,200,10,31
	.word	157
	.byte	1,1,1,1,5
	.byte	'dataInfrastrutureCode_u8',0,4,200,10,87
	.word	157
	.byte	0,3
	.word	157
	.byte	9
	.byte	'Dcm_MsgType',0,4,188,2,57
	.word	1242
	.byte	10,4,206,2,9,4,11
	.byte	'reqType',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'suppressPosResponse',0
	.word	157
	.byte	1,2,35,1,11
	.byte	'sourceofRequest',0
	.word	157
	.byte	1,2,35,2,0,10,4,240,2,9,28,11
	.byte	'resData',0
	.word	1247
	.byte	4,2,35,0,11
	.byte	'reqData',0
	.word	1247
	.byte	4,2,35,4,11
	.byte	'msgAddInfo',0
	.word	1268
	.byte	4,2,35,8,11
	.byte	'resDataLen',0
	.word	826
	.byte	4,2,35,12,11
	.byte	'reqDataLen',0
	.word	826
	.byte	4,2,35,16,11
	.byte	'resMaxDataLen',0
	.word	826
	.byte	4,2,35,20,11
	.byte	'idContext',0
	.word	157
	.byte	1,2,35,24,11
	.byte	'dcmRxPduId',0
	.word	487
	.byte	2,2,35,26,0
.L360:
	.byte	3
	.word	1346
	.byte	3
	.word	157
.L362:
	.byte	3
	.word	157
	.byte	12
	.byte	'Dcm_Dsp_SecaIni',0,5,21,28,1,1,1,1,3
	.word	157
	.byte	13
	.word	1548
	.byte	8
	.byte	'Dcm_GetSecurityLevel',0,6,222,1,32
	.word	157
	.byte	1,1,1,1,5
	.byte	'SecLevel',0,6,222,1,108
	.word	1553
	.byte	0,14
	.word	179
	.byte	15
	.word	209
	.byte	15
	.word	224
	.byte	6,0,14
	.word	247
	.byte	15
	.word	279
	.byte	15
	.word	294
	.byte	6,0,14
	.word	317
	.byte	15
	.word	357
	.byte	15
	.word	371
	.byte	6,0,14
	.word	394
	.byte	15
	.word	427
	.byte	15
	.word	441
	.byte	15
	.word	462
	.byte	6,0,14
	.word	514
	.byte	15
	.word	545
	.byte	15
	.word	560
	.byte	6,0,14
	.word	583
	.byte	15
	.word	616
	.byte	15
	.word	631
	.byte	6,0,14
	.word	654
	.byte	15
	.word	695
	.byte	15
	.word	709
	.byte	6,0,14
	.word	732
	.byte	15
	.word	766
	.byte	15
	.word	780
	.byte	15
	.word	801
	.byte	6,0,14
	.word	847
	.byte	15
	.word	878
	.byte	15
	.word	893
	.byte	6,0,14
	.word	916
	.byte	15
	.word	949
	.byte	15
	.word	964
	.byte	6,0,14
	.word	987
	.byte	15
	.word	1028
	.byte	15
	.word	1042
	.byte	6,0,14
	.word	1065
	.byte	15
	.word	1099
	.byte	15
	.word	1113
	.byte	15
	.word	1134
	.byte	6,0,8
	.byte	'DcmAppl_DcmGetUpdatedDelayTime',0,7,253,2,35
	.word	826
	.byte	1,1,1,1,5
	.byte	'SecurityLevel',0,7,255,2,26
	.word	157
	.byte	5
	.byte	'Delaycount',0,7,128,3,26
	.word	157
	.byte	5
	.byte	'DelayTime',0,7,129,3,27
	.word	826
	.byte	0,16
	.byte	'DcmAppl_DcmSecurityLevelLocked',0,7,146,3,33,1,1,1,1,5
	.byte	'SecTabIdx',0,7,146,3,85
	.word	157
	.byte	0,8
	.byte	'DcmAppl_DcmSecaInvalidKey',0,7,147,3,43
	.word	157
	.byte	1,1,1,1,5
	.byte	'SecTabIdx',0,7,147,3,90
	.word	157
	.byte	0,8
	.byte	'DcmAppl_DcmSecaValidKey',0,7,148,3,43
	.word	157
	.byte	1,1,1,1,5
	.byte	'SecTabIdx',0,7,148,3,88
	.word	157
	.byte	0
.L367:
	.byte	3
	.word	157
	.byte	13
	.word	1346
.L369:
	.byte	3
	.word	2118
.L387:
	.byte	2
	.byte	'unsigned long int',0,4,7,17
	.byte	'__INDIRECT__',0,8,1,1,1,1,1,18,1,3
	.word	2169
	.byte	9
	.byte	'__codeptr',0,8,1,1
	.word	2171
	.byte	2
	.byte	'char',0,1,6,9
	.byte	'sint8',0,9,76,25
	.word	2194
	.byte	9
	.byte	'uint8',0,9,81,25
	.word	157
	.byte	9
	.byte	'uint16',0,9,91,25
	.word	487
	.byte	9
	.byte	'uint32',0,9,106,24
	.word	826
	.byte	2
	.byte	'unsigned long long int',0,8,7,9
	.byte	'uint64',0,9,111,30
	.word	2260
	.byte	9
	.byte	'boolean',0,9,127,25
	.word	157
	.byte	9
	.byte	'uint8_least',0,9,137,1,25
	.word	2128
	.byte	9
	.byte	'uint16_least',0,9,147,1,25
	.word	2128
	.byte	9
	.byte	'StatusType',0,10,191,1,27
	.word	157
	.byte	9
	.byte	'Std_ReturnType',0,10,199,1,15
	.word	157
	.byte	10,10,206,1,9,8,11
	.byte	'vendorID',0
	.word	487
	.byte	2,2,35,0,11
	.byte	'moduleID',0
	.word	487
	.byte	2,2,35,2,11
	.byte	'sw_major_version',0
	.word	157
	.byte	1,2,35,4,11
	.byte	'sw_minor_version',0
	.word	157
	.byte	1,2,35,5,11
	.byte	'sw_patch_version',0
	.word	157
	.byte	1,2,35,6,0,9
	.byte	'Std_VersionInfoType',0,10,213,1,3
	.word	2404
	.byte	9
	.byte	'PduIdType',0,11,22,19
	.word	487
	.byte	9
	.byte	'PduLengthType',0,11,26,19
	.word	487
	.byte	10,12,71,9,8,11
	.byte	'SduDataPtr',0
	.word	174
	.byte	4,2,35,0,11
	.byte	'SduLength',0
	.word	487
	.byte	2,2,35,4,0,9
	.byte	'PduInfoType',0,12,75,3
	.word	2594
	.byte	19,12,113,9,4,20
	.byte	'TP_DATACONF',0,0,20
	.byte	'TP_DATARETRY',0,1,20
	.byte	'TP_CONFPENDING',0,2,0,9
	.byte	'TpDataStateType',0,12,118,3
	.word	2659
	.byte	9
	.byte	'NetworkHandleType',0,12,128,1,17
	.word	157
	.byte	9
	.byte	'Can_IdType',0,13,32,16
	.word	826
	.byte	9
	.byte	'Can_HwHandleType',0,13,43,16
	.word	487
	.byte	10,14,93,9,8,11
	.byte	'Class',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'TIN',0
	.word	157
	.byte	1,2,35,1,11
	.byte	'ReturnAddress',0
	.word	826
	.byte	4,2,35,4,0,9
	.byte	'OsTrapInfoType',0,14,97,3
	.word	2806
	.byte	21,68
	.word	826
	.byte	22,16,0,10,14,154,1,9,68,11
	.byte	'store',0
	.word	2886
	.byte	68,2,35,0,0,21,68
	.word	2895
	.byte	22,0,0,9
	.byte	'Os_JumpBufType',0,14,156,1,3
	.word	2917
	.byte	9
	.byte	'Os_StackTraceType',0,14,174,1,18
	.word	826
	.byte	10,14,175,1,9,8,11
	.byte	'sp',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'ctx',0
	.word	826
	.byte	4,2,35,4,0,9
	.byte	'Os_StackValueType',0,14,175,1,63
	.word	2977
	.byte	9
	.byte	'Os_StackSizeType',0,14,176,1,27
	.word	2977
	.byte	23,1,1,3
	.word	3062
	.byte	9
	.byte	'Os_VoidVoidFunctionType',0,14,179,1,16
	.word	3065
	.byte	9
	.byte	'ApplicationType',0,14,193,1,23
	.word	157
	.byte	24
	.byte	'Os_ApplicationConfigurationType_s',0,14,198,1,16,2,11
	.byte	'app_id',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,1,0,9
	.byte	'Os_ApplicationConfigurationType',0,14,201,1,3
	.word	3128
	.byte	9
	.byte	'Os_CoreStateType',0,14,203,1,16
	.word	826
	.byte	9
	.byte	'AreaIdType',0,14,204,1,16
	.word	487
	.byte	9
	.byte	'Os_PeripheralAddressType',0,14,212,1,22
	.word	826
	.byte	9
	.byte	'TickType',0,14,221,1,22
	.word	826
	.byte	9
	.byte	'Os_StopwatchTickType',0,14,225,1,22
	.word	826
	.byte	9
	.byte	'Os_Lockable',0,14,234,1,18
	.word	842
	.byte	9
	.byte	'CoreIdType',0,14,236,1,16
	.word	487
	.byte	9
	.byte	'SpinlockIdType',0,14,237,1,16
	.word	487
	.byte	19,14,239,1,9,4,20
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,20
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,9
	.byte	'TryToGetSpinlockType',0,14,239,1,74
	.word	3435
	.byte	19,14,174,2,9,4,20
	.byte	'APPLICATION_ACCESSIBLE',0,0,20
	.byte	'APPLICATION_RESTARTING',0,1,20
	.byte	'APPLICATION_TERMINATED',0,2,0,9
	.byte	'ApplicationStateType',0,14,174,2,92
	.word	3528
	.byte	25
	.byte	'void',0
.L456:
	.byte	3
	.word	3640
	.byte	26,1,1,27
	.word	157
	.byte	27
	.word	3646
	.byte	0,3
	.word	3651
	.byte	9
	.byte	'Os_FunctionEntryType',0,14,183,2,16
	.word	3665
	.byte	24
	.byte	'Os_MeterInfoType_s',0,14,193,2,16,48,11
	.byte	'elapsed',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'previous',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'max',0
	.word	826
	.byte	4,2,35,8,11
	.byte	'cumulative',0
	.word	826
	.byte	4,2,35,12,11
	.byte	'stackbase',0
	.word	2977
	.byte	8,2,35,16,11
	.byte	'stackusage',0
	.word	2977
	.byte	8,2,35,24,11
	.byte	'stackmax',0
	.word	2977
	.byte	8,2,35,32,11
	.byte	'stackbudget',0
	.word	2977
	.byte	8,2,35,40,0,9
	.byte	'Os_MeterInfoType',0,14,202,2,3
	.word	3700
	.byte	3
	.word	3700
	.byte	9
	.byte	'Os_MeterInfoRefType',0,14,203,2,50
	.word	3898
	.byte	9
	.byte	'EventMaskType',0,14,206,2,15
	.word	157
	.byte	9
	.byte	'Os_imaskType',0,14,211,2,16
	.word	826
	.byte	24
	.byte	'Os_ISRDynType_s',0,14,213,2,16,48,11
	.byte	'meter',0
	.word	3700
	.byte	48,2,35,0,0,9
	.byte	'Os_ISRDynType',0,14,215,2,3
	.word	3977
	.byte	3
	.word	3977
	.byte	13
	.word	4038
	.byte	24
	.byte	'Os_ISRType_s',0,14,216,2,16,24,11
	.byte	'entry_function',0
	.word	3070
	.byte	4,2,35,0,11
	.byte	'dynamic',0
	.word	4043
	.byte	4,2,35,4,11
	.byte	'imask',0
	.word	826
	.byte	4,2,35,8,11
	.byte	'stackbudget',0
	.word	2977
	.byte	8,2,35,12,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,20,11
	.byte	'application',0
	.word	157
	.byte	1,2,35,21,0,9
	.byte	'Os_ISRType',0,14,223,2,3
	.word	4048
	.byte	3
	.word	3062
	.byte	13
	.word	4048
	.byte	3
	.word	4207
	.byte	9
	.byte	'ISRType',0,14,224,2,46
	.word	4212
	.byte	9
	.byte	'Os_bitmask',0,14,239,2,22
	.word	826
	.byte	9
	.byte	'Os_pset0Type',0,14,240,2,20
	.word	826
	.byte	9
	.byte	'Os_pset1Type',0,14,241,2,20
	.word	826
	.byte	9
	.byte	'Os_pset2Type',0,14,242,2,20
	.word	826
	.byte	28,14,243,2,9,4,11
	.byte	'p0',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'p1',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'p2',0
	.word	826
	.byte	4,2,35,0,0,9
	.byte	'Os_psetType',0,14,247,2,3
	.word	4320
	.byte	28,14,249,2,9,4,11
	.byte	't0',0
	.word	826
	.byte	4,2,35,0,11
	.byte	't1',0
	.word	826
	.byte	4,2,35,0,11
	.byte	't2',0
	.word	826
	.byte	4,2,35,0,0,9
	.byte	'Os_tpmaskType',0,14,253,2,3
	.word	4384
	.byte	9
	.byte	'Os_ActivationCountType',0,14,254,2,23
	.word	157
	.byte	24
	.byte	'Os_TaskDynType_s',0,14,128,3,16,120,11
	.byte	'terminate_jump_buf',0
	.word	2926
	.byte	68,2,35,0,11
	.byte	'meter',0
	.word	3700
	.byte	48,2,35,68,11
	.byte	'activation_count',0
	.word	157
	.byte	1,2,35,116,0,9
	.byte	'Os_TaskDynType',0,14,132,3,3
	.word	4482
	.byte	21,68
	.word	2895
	.byte	22,0,0,3
	.word	4482
	.byte	13
	.word	4608
	.byte	24
	.byte	'Os_TaskType_s',0,14,134,3,16,40,11
	.byte	'dynamic',0
	.word	4613
	.byte	4,2,35,0,11
	.byte	'entry_function',0
	.word	3070
	.byte	4,2,35,4,11
	.byte	'pset',0
	.word	4320
	.byte	4,2,35,8,11
	.byte	'base_tpmask',0
	.word	4384
	.byte	4,2,35,12,11
	.byte	'tpmask',0
	.word	4384
	.byte	4,2,35,16,11
	.byte	'core_id',0
	.word	487
	.byte	2,2,35,20,11
	.byte	'index',0
	.word	826
	.byte	4,2,35,24,11
	.byte	'stackbudget',0
	.word	2977
	.byte	8,2,35,28,11
	.byte	'activation_count',0
	.word	157
	.byte	1,2,35,36,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,37,11
	.byte	'application',0
	.word	157
	.byte	1,2,35,38,0,9
	.byte	'Os_TaskType',0,14,146,3,3
	.word	4618
	.byte	13
	.word	4618
	.byte	3
	.word	4868
	.byte	9
	.byte	'TaskType',0,14,147,3,47
	.word	4873
	.byte	29
	.byte	'Os_TaskStateType',0,14,155,3,6,4,20
	.byte	'SUSPENDED',0,0,20
	.byte	'READY',0,1,20
	.byte	'WAITING',0,2,20
	.byte	'RUNNING',0,3,0,9
	.byte	'TaskStateType',0,14,156,3,31
	.word	4896
	.byte	28,14,167,3,3,4,11
	.byte	'tpmask',0
	.word	4384
	.byte	4,2,35,0,0,24
	.byte	'Os_ResourceDynType_s',0,14,166,3,16,4,11
	.byte	'saved_priority',0
	.word	4983
	.byte	4,2,35,0,0,9
	.byte	'Os_ResourceDynType',0,14,170,3,3
	.word	5006
	.byte	3
	.word	5006
	.byte	13
	.word	5086
	.byte	24
	.byte	'Os_ResourceType_s',0,14,171,3,16,12,11
	.byte	'dynamic',0
	.word	5091
	.byte	4,2,35,0,11
	.byte	'tpmask',0
	.word	4384
	.byte	4,2,35,4,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,8,0,9
	.byte	'Os_ResourceType',0,14,175,3,3
	.word	5096
	.byte	10,14,181,3,9,12,11
	.byte	'maxallowedvalue',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'ticksperbase',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'mincycle',0
	.word	826
	.byte	4,2,35,8,0,9
	.byte	'AlarmBaseType',0,14,185,3,3
	.word	5195
	.byte	10,14,206,3,9,8,11
	.byte	'Running',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'Pending',0
	.word	157
	.byte	1,2,35,1,11
	.byte	'Delay',0
	.word	826
	.byte	4,2,35,4,0,9
	.byte	'Os_CounterStatusType',0,14,210,3,3
	.word	5290
	.byte	30
	.word	157
	.byte	1,1,3
	.word	5376
	.byte	9
	.byte	'Os_CounterIncrAdvType',0,14,217,3,22
	.word	5383
	.byte	24
	.byte	's_swd',0,14,222,3,12,4,11
	.byte	'count',0
	.word	826
	.byte	4,2,35,0,0,28,14,221,3,3,4,11
	.byte	'sw',0
	.word	5419
	.byte	4,2,35,0,0,24
	.byte	'Os_CounterDynType_s',0,14,220,3,16,4,11
	.byte	'type_dependent',0
	.word	5447
	.byte	4,2,35,0,0,9
	.byte	'Os_CounterDynType',0,14,226,3,3
	.word	5466
	.byte	3
	.word	5466
	.byte	13
	.word	5544
	.byte	24
	.byte	'Os_CounterType_s',0,14,227,3,16,28,11
	.byte	'dynamic',0
	.word	5549
	.byte	4,2,35,0,11
	.byte	'advincr',0
	.word	5388
	.byte	4,2,35,4,11
	.byte	'base',0
	.word	5195
	.byte	12,2,35,8,11
	.byte	'core',0
	.word	3646
	.byte	4,2,35,20,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,24,11
	.byte	'application',0
	.word	157
	.byte	1,2,35,25,0,9
	.byte	'Os_CounterType',0,14,234,3,3
	.word	5554
	.byte	3
	.word	5376
	.byte	13
	.word	5554
	.byte	3
	.word	5706
	.byte	9
	.byte	'CounterType',0,14,235,3,52
	.word	5711
	.byte	29
	.byte	'Os_ScheduleTableStatusType',0,14,240,3,6,4,20
	.byte	'SCHEDULETABLE_STOPPED',0,0,20
	.byte	'SCHEDULETABLE_NEXT',0,1,20
	.byte	'SCHEDULETABLE_WAITING',0,2,20
	.byte	'SCHEDULETABLE_RUNNING',0,3,20
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,9
	.byte	'ScheduleTableStatusType',0,14,241,3,41
	.word	5737
	.byte	13
	.word	.L545-.L162
	.byte	3
	.word	5937
	.byte	9
	.byte	'ScheduleTableType',0,14,128,4,58
	.word	5942
	.byte	24
	.byte	'Os_ScheduleTableDynType_s',0,14,130,4,16,16,11
	.byte	'match',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'next',0
	.word	5947
	.byte	4,2,35,4,11
	.byte	'state',0
	.word	5737
	.byte	4,2,35,8,11
	.byte	'config',0
	.word	487
	.byte	2,2,35,12,0,3
	.word	5974
	.byte	13
	.word	6067
.L545:
	.byte	24
	.byte	'Os_ScheduleTableType_s',0,14,247,3,16,16,11
	.byte	'dynamic',0
	.word	6072
	.byte	4,2,35,0,11
	.byte	'counter',0
	.word	5716
	.byte	4,2,35,4,11
	.byte	'repeat',0
	.word	157
	.byte	1,2,35,8,11
	.byte	'config',0
	.word	487
	.byte	2,2,35,10,11
	.byte	'initial',0
	.word	157
	.byte	1,2,35,12,11
	.byte	'access',0
	.word	157
	.byte	1,2,35,13,11
	.byte	'application',0
	.word	157
	.byte	1,2,35,14,0,9
	.byte	'Os_ScheduleTableType',0,14,255,3,3
	.word	6077
	.byte	13
	.word	6077
	.byte	3
	.word	6257
	.byte	13
	.word	5554
	.byte	3
	.word	6267
	.byte	31
	.word	3370
	.byte	31
	.word	4320
	.byte	31
	.word	4217
	.byte	31
	.word	4878
	.byte	31
	.word	4384
	.byte	31
	.word	157
	.byte	31
	.word	4878
	.byte	24
	.byte	'Os_ControlledCoreType_s',0,14,251,6,16,112,11
	.byte	'TrapInfo',0
	.word	2806
	.byte	8,2,35,0,11
	.byte	'lock_taskaccess',0
	.word	6277
	.byte	4,2,35,8,11
	.byte	'ReadyTasks',0
	.word	6282
	.byte	4,2,35,12,11
	.byte	'RunningISR',0
	.word	6287
	.byte	4,2,35,16,11
	.byte	'RunningTask',0
	.word	6292
	.byte	4,2,35,20,11
	.byte	'RunningTPMask',0
	.word	6297
	.byte	4,2,35,24,11
	.byte	'CurrentMeteredObject',0
	.word	3903
	.byte	4,2,35,28,11
	.byte	'IdleMeter',0
	.word	3700
	.byte	48,2,35,32,11
	.byte	'AppAccess',0
	.word	157
	.byte	1,2,35,80,11
	.byte	'AppOverride',0
	.word	6302
	.byte	1,2,35,81,11
	.byte	'GetStackValueAdjust',0
	.word	2977
	.byte	8,2,35,84,11
	.byte	'InErrorHook',0
	.word	157
	.byte	1,2,35,92,11
	.byte	'ChainTaskRef',0
	.word	6307
	.byte	4,2,35,96,11
	.byte	'GetStackUsageAdjust',0
	.word	2977
	.byte	8,2,35,100,11
	.byte	'InProtectionHook',0
	.word	157
	.byte	1,2,35,108,11
	.byte	'CoreIsActive',0
	.word	157
	.byte	1,2,35,109,11
	.byte	'InShutdownHook',0
	.word	157
	.byte	1,2,35,110,0,9
	.byte	'Os_ControlledCoreType',0,14,141,7,3
	.word	6312
	.byte	3
	.word	826
	.byte	13
	.word	4048
	.byte	3
	.word	6768
	.byte	13
	.word	4618
	.byte	3
	.word	6778
	.byte	3
	.word	3700
	.byte	24
	.byte	'Os_AnyCoreType_s',0,14,151,7,16,96,11
	.byte	'DisableAllImask',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'SuspendAllImask',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'SuspendOSImask',0
	.word	826
	.byte	4,2,35,8,11
	.byte	'DisableAllCount',0
	.word	826
	.byte	4,2,35,12,11
	.byte	'SuspendAllCount',0
	.word	826
	.byte	4,2,35,16,11
	.byte	'SuspendOSCount',0
	.word	826
	.byte	4,2,35,20,11
	.byte	'RestartJumpBuf',0
	.word	2926
	.byte	68,2,35,24,11
	.byte	'Restartable',0
	.word	157
	.byte	1,2,35,92,0,9
	.byte	'Os_AnyCoreType',0,14,160,7,3
	.word	6793
	.byte	9
	.byte	'Can_TxObjPriorityClassType',0,15,219,3,16
	.word	826
	.byte	24
	.byte	'Can_TxHwObjectConfigType',0,15,231,3,16,8,11
	.byte	'MsgObjId',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'HwControllerId',0
	.word	157
	.byte	1,2,35,1,11
	.byte	'TxObjPriorityClass',0
	.word	826
	.byte	4,2,35,4,0,9
	.byte	'Can_TxHwObjectConfigType',0,15,252,3,3
	.word	7070
	.byte	24
	.byte	'Can_RxHwObjectConfigType',0,15,129,4,16,12,11
	.byte	'MaskRef',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'MsgId',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'MsgObjId',0
	.word	157
	.byte	1,2,35,8,11
	.byte	'HwControllerId',0
	.word	157
	.byte	1,2,35,9,0,9
	.byte	'Can_RxHwObjectConfigType',0,15,147,4,3
	.word	7206
	.byte	21,4
	.word	157
	.byte	22,3,0,24
	.byte	'Can_ControllerMOMapConfigType',0,15,181,4,16,4,11
	.byte	'ControllerMOMap',0
	.word	7346
	.byte	4,2,35,0,0,9
	.byte	'Can_ControllerMOMapConfigType',0,15,184,4,3
	.word	7355
	.byte	24
	.byte	'Can_NPCRValueType',0,15,188,4,16,2,11
	.byte	'Can_NPCRValue',0
	.word	487
	.byte	2,2,35,0,0,9
	.byte	'Can_NPCRValueType',0,15,191,4,3
	.word	7456
	.byte	24
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,194,4,16,8,11
	.byte	'CanControllerBaudrate',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'CanControllerBaudrateCfg',0
	.word	487
	.byte	2,2,35,4,0,9
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,15,198,4,3
	.word	7531
	.byte	13
	.word	7531
	.byte	3
	.word	7696
	.byte	24
	.byte	'Can_BaudrateConfigPtrType',0,15,201,4,16,4,11
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7701
	.byte	4,2,35,0,0,9
	.byte	'Can_BaudrateConfigPtrType',0,15,204,4,3
	.word	7706
	.byte	24
	.byte	'Can_EventHandlingType',0,15,226,4,16,4,11
	.byte	'CanEventType',0
	.word	7346
	.byte	4,2,35,0,0,9
	.byte	'Can_EventHandlingType',0,15,229,4,3
	.word	7806
	.byte	9
	.byte	'Rte_TransformerErrorCode',0,16,130,1,15
	.word	157
	.byte	9
	.byte	'Rte_TransformerClass',0,16,131,1,15
	.word	157
	.byte	10,16,168,1,9,12,11
	.byte	'in',0
	.word	3646
	.byte	4,2,35,0,11
	.byte	'out',0
	.word	3646
	.byte	4,2,35,4,11
	.byte	'used',0
	.word	487
	.byte	2,2,35,8,11
	.byte	'lost_data',0
	.word	157
	.byte	1,2,35,10,0,9
	.byte	'Rte_QDynType',0,16,173,1,3
	.word	7952
	.byte	19,16,175,1,9,4,20
	.byte	'RTE_DRA',0,0,20
	.byte	'RTE_WOWP',0,1,20
	.byte	'RTE_TASK',0,2,20
	.byte	'RTE_ARE',0,3,20
	.byte	'RTE_EV',0,4,20
	.byte	'RTE_MSI',0,5,0,9
	.byte	'Rte_NotificationType',0,16,182,1,3
	.word	8039
	.byte	3
	.word	7952
	.byte	24
	.byte	'Rte_QCmnType',0,16,184,1,16,24,11
	.byte	'dynamic',0
	.word	8137
	.byte	4,2,35,0,11
	.byte	'copy',0
	.word	157
	.byte	1,2,35,4,11
	.byte	'queue_size',0
	.word	487
	.byte	2,2,35,6,11
	.byte	'element_size',0
	.word	487
	.byte	2,2,35,8,11
	.byte	'buffer_start',0
	.word	3646
	.byte	4,2,35,12,11
	.byte	'buffer_end',0
	.word	3646
	.byte	4,2,35,16,11
	.byte	'notification_type',0
	.word	8039
	.byte	4,2,35,20,0,9
	.byte	'Rte_QCmnType',0,16,192,1,3
	.word	8142
	.byte	9
	.byte	'Rte_AlarmRefType',0,16,224,1,32
	.word	826
	.byte	9
	.byte	'Rte_AlarmIndexType',0,16,226,1,32
	.word	487
	.byte	21,128,8
	.word	157
	.byte	22,255,7,0,9
	.byte	'Impl_NVM_DstPtrType_1024',0,17,50,15
	.word	8380
	.byte	9
	.byte	'CanIf_u32_impl',0,17,69,16
	.word	826
	.byte	9
	.byte	'CanIf_u16_impl',0,17,71,16
	.word	487
	.byte	9
	.byte	'CanIf_u8_impl',0,17,73,15
	.word	157
	.byte	9
	.byte	'CanIf_ControllerModeType_Enum_impl',0,17,88,15
	.word	157
	.byte	9
	.byte	'CanIf_PduModeType_Enum_impl',0,17,90,15
	.word	157
	.byte	10,17,92,9,2,11
	.byte	'DeviceMode',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'ChannelMode',0
	.word	157
	.byte	1,2,35,1,0,9
	.byte	'CanIf_ControllerStateType_struct_impl',0,17,95,3
	.word	8571
	.byte	9
	.byte	'CanIf_NotifStatusType_Enum_impl',0,17,100,15
	.word	157
	.byte	9
	.byte	'CanSM_boolean_Impl',0,17,120,15
	.word	157
	.byte	9
	.byte	'CanSM_u8_Impl',0,17,123,15
	.word	157
	.byte	9
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,17,128,1,15
	.word	157
	.byte	9
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,17,132,1,15
	.word	157
	.byte	9
	.byte	'CanSM_u16_Impl',0,17,136,1,16
	.word	487
	.byte	9
	.byte	'CanSM_TimerStateType_Enum_impl',0,17,138,1,15
	.word	157
	.byte	10,17,140,1,9,4,11
	.byte	'cntTick_u16',0
	.word	487
	.byte	2,2,35,0,11
	.byte	'stTimer',0
	.word	157
	.byte	1,2,35,2,0,9
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,17,143,1,3
	.word	8912
	.byte	9
	.byte	'Com_impl_u16',0,17,154,1,16
	.word	487
	.byte	9
	.byte	'Com_impl_u8',0,17,157,1,15
	.word	157
	.byte	9
	.byte	'ComM_uint32_Impl',0,17,173,1,16
	.word	826
	.byte	9
	.byte	'ComM_uint16_Impl',0,17,175,1,16
	.word	487
	.byte	9
	.byte	'ComM_uint8_Impl',0,17,177,1,15
	.word	157
	.byte	9
	.byte	'ComM_bool_Impl',0,17,179,1,15
	.word	157
	.byte	10,17,181,1,9,24,11
	.byte	'ChannelState_e',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'LightTimeoutCtr_u32',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	487
	.byte	2,2,35,8,11
	.byte	'ChannelMode_u8',0
	.word	157
	.byte	1,2,35,10,11
	.byte	'BusSmMode_u8',0
	.word	157
	.byte	1,2,35,11,11
	.byte	'UserRequestCtr_u8',0
	.word	157
	.byte	1,2,35,12,11
	.byte	'PassiveRequestState_u8',0
	.word	157
	.byte	1,2,35,13,11
	.byte	'PncRequestCtr_u8',0
	.word	157
	.byte	1,2,35,14,11
	.byte	'InhibitionReqStatus_u8',0
	.word	157
	.byte	1,2,35,15,11
	.byte	'NmNetworkRequestStatus_b',0
	.word	157
	.byte	1,2,35,16,11
	.byte	'DiagnosticRequestState_b',0
	.word	157
	.byte	1,2,35,17,11
	.byte	'CommunicationAllowed_b',0
	.word	157
	.byte	1,2,35,18,11
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	157
	.byte	1,2,35,19,11
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	157
	.byte	1,2,35,20,11
	.byte	'NmNetworkModeStatus_b',0
	.word	157
	.byte	1,2,35,21,0,9
	.byte	'ComM_ChannelStruct_Impl',0,17,197,1,3
	.word	9144
	.byte	10,17,206,1,9,10,11
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	487
	.byte	2,2,35,0,11
	.byte	'LimitToNoComCtr_u16',0
	.word	487
	.byte	2,2,35,2,11
	.byte	'RequestedUserMode_t',0
	.word	157
	.byte	1,2,35,4,11
	.byte	'IndicatedUserMode_t',0
	.word	157
	.byte	1,2,35,5,11
	.byte	'numChannelsInFullCom_u8',0
	.word	157
	.byte	1,2,35,6,11
	.byte	'numChannelsInSilentCom_u8',0
	.word	157
	.byte	1,2,35,7,11
	.byte	'numChannelsInNoCom_u8',0
	.word	157
	.byte	1,2,35,8,0,9
	.byte	'ComM_UserStruct_Impl',0,17,214,1,3
	.word	9648
	.byte	9
	.byte	'Dcm_ConfirmationStatusType',0,17,243,1,15
	.word	157
	.byte	9
	.byte	'Dcm_IOOperationResponseType',0,17,252,1,15
	.word	157
	.byte	9
	.byte	'Dcm_NegativeResponseCodeType',0,17,132,2,15
	.word	157
	.byte	9
	.byte	'Dcm_OpStatusType',0,17,134,2,15
	.word	157
	.byte	9
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	17,138,2,15
	.word	157
	.byte	9
	.byte	'Dcm_SecLevelType',0,17,142,2,15
	.word	157
	.byte	9
	.byte	'Dcm_SesCtrlType',0,17,144,2,15
	.word	157
	.byte	9
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,17,146,2,15
	.word	157
	.byte	9
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,17,150,2,15
	.word	157
	.byte	9
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,17,154,2,15
	.word	157
	.byte	9
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,17,243,3,34
	.word	8391
	.byte	21,128,8
	.word	157
	.byte	22,255,7,0,9
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,17,246,3,34
	.word	8391
	.byte	9
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,18,37,15
	.word	157
	.byte	9
	.byte	'Dcm_SrvOpStatusType',0,4,62,15
	.word	157
	.byte	9
	.byte	'Dcm_MsgItemType',0,4,182,2,15
	.word	157
	.byte	9
	.byte	'Dcm_MsgLenType',0,4,197,2,16
	.word	826
	.byte	9
	.byte	'Dcm_MsgAddInfoType',0,4,219,2,2
	.word	1268
	.byte	9
	.byte	'Dcm_IdContextType',0,4,225,2,15
	.word	157
	.byte	9
	.byte	'Dcm_MsgContextType',0,4,188,3,2
	.word	1346
	.byte	10,4,238,5,9,32,11
	.byte	'tx_buffer_pa',0
	.word	1247
	.byte	4,2,35,0,11
	.byte	'rx_mainBuffer_pa',0
	.word	1247
	.byte	4,2,35,4,11
	.byte	'tx_buffer_size_u32',0
	.word	826
	.byte	4,2,35,8,11
	.byte	'rx_buffer_size_u32',0
	.word	826
	.byte	4,2,35,12,11
	.byte	'dataP2TmrAdjust',0
	.word	826
	.byte	4,2,35,16,11
	.byte	'dataP2StarTmrAdjust',0
	.word	826
	.byte	4,2,35,20,11
	.byte	'protocolid_u8',0
	.word	157
	.byte	1,2,35,24,11
	.byte	'sid_tableid_u8',0
	.word	157
	.byte	1,2,35,25,11
	.byte	'premption_level_u8',0
	.word	157
	.byte	1,2,35,26,11
	.byte	'pduinfo_idx_u8',0
	.word	157
	.byte	1,2,35,27,11
	.byte	'nrc21_b',0
	.word	157
	.byte	1,2,35,28,11
	.byte	'sendRespPendTransToBoot',0
	.word	157
	.byte	1,2,35,29,0,9
	.byte	'Dcm_Dsld_protocol_tableType',0,4,143,6,2
	.word	10826
	.byte	26,1,1,27
	.word	157
	.byte	27
	.word	487
	.byte	27
	.word	487
	.byte	27
	.word	157
	.byte	0,3
	.word	11177
	.byte	9
	.byte	'Dcm_ConfirmationApiType',0,4,145,6,16
	.word	11201
	.byte	3
	.word	157
	.byte	32
	.word	157
	.byte	1,1,27
	.word	11239
	.byte	27
	.word	157
	.byte	27
	.word	157
	.byte	0,3
	.word	11244
	.byte	3
	.word	1346
	.byte	32
	.word	157
	.byte	1,1,27
	.word	157
	.byte	27
	.word	11272
	.byte	27
	.word	11239
	.byte	0,3
	.word	11277
	.byte	10,4,158,6,9,20,11
	.byte	'allowed_session_b32',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	11267
	.byte	4,2,35,8,11
	.byte	'SubFunc_fp',0
	.word	11300
	.byte	4,2,35,12,11
	.byte	'subservice_id_u8',0
	.word	157
	.byte	1,2,35,16,11
	.byte	'isDspRDTCSubFnc_b',0
	.word	157
	.byte	1,2,35,17,0,9
	.byte	'Dcm_Dsld_SubServiceType',0,4,169,6,2
	.word	11305
	.byte	13
	.word	11305
	.byte	3
	.word	11517
	.byte	32
	.word	157
	.byte	1,1,27
	.word	11239
	.byte	27
	.word	157
	.byte	0,3
	.word	11527
	.byte	10,4,186,6,9,36,11
	.byte	'allowed_session_b32',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'allowed_security_b32',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'service_handler_fp',0
	.word	11300
	.byte	4,2,35,8,11
	.byte	'Service_init_fp',0
	.word	3065
	.byte	4,2,35,12,11
	.byte	'sid_u8',0
	.word	157
	.byte	1,2,35,16,11
	.byte	'subfunction_exist_b',0
	.word	157
	.byte	1,2,35,17,11
	.byte	'servicelocator_b',0
	.word	157
	.byte	1,2,35,18,11
	.byte	'ptr_subservice_table_pcs',0
	.word	11522
	.byte	4,2,35,20,11
	.byte	'num_sf_u8',0
	.word	157
	.byte	1,2,35,24,11
	.byte	'adrUserServiceModeRule_pfct',0
	.word	11545
	.byte	4,2,35,28,11
	.byte	'Dcm_ConfirmationService',0
	.word	11206
	.byte	4,2,35,32,0,9
	.byte	'Dcm_Dsld_ServiceType',0,4,204,6,3
	.word	11550
	.byte	3
	.word	11177
	.byte	13
	.word	11550
	.byte	3
	.word	11898
	.byte	10,4,218,6,9,8,11
	.byte	'ptr_service_table_pcs',0
	.word	11903
	.byte	4,2,35,0,11
	.byte	'num_services_u8',0
	.word	157
	.byte	1,2,35,4,11
	.byte	'nrc_sessnot_supported_u8',0
	.word	157
	.byte	1,2,35,5,11
	.byte	'cdtc_index_u8',0
	.word	157
	.byte	1,2,35,6,0,9
	.byte	'Dcm_Dsld_sid_tableType',0,4,224,6,3
	.word	11908
	.byte	10,4,238,6,9,14,11
	.byte	'protocol_num_u8',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'txpduid_num_u8',0
	.word	487
	.byte	2,2,35,2,11
	.byte	'roetype2_txpdu_u8',0
	.word	487
	.byte	2,2,35,4,11
	.byte	'rdpitype2_txpdu_u8',0
	.word	487
	.byte	2,2,35,6,11
	.byte	'testaddr_u16',0
	.word	487
	.byte	2,2,35,8,11
	.byte	'channel_idx_u8',0
	.word	157
	.byte	1,2,35,10,11
	.byte	'ConnectionIndex_u8',0
	.word	157
	.byte	1,2,35,11,11
	.byte	'NumberOfTxpdu_u8',0
	.word	157
	.byte	1,2,35,12,0,9
	.byte	'Dcm_Dsld_connType',0,4,248,6,3
	.word	12060
	.byte	19,4,146,7,9,4,20
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,20
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,20
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,9
	.byte	'Dcm_Dsld_commodeType',0,4,151,7,2
	.word	12298
	.byte	10,19,46,9,8,11
	.byte	'Residual_delay_u32',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'FailedAtm_cnt_u8',0
	.word	157
	.byte	1,2,35,4,0,9
	.byte	'Dcm_Dsp_SecaType',0,19,53,2
	.word	12410
	.byte	19,19,200,1,9,4,20
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,20
	.byte	'USE_ASYNCH_FNC',0,1,0,9
	.byte	'DcmDspSecurityUsePort',0,19,204,1,2
	.word	12495
	.byte	13
	.word	3646
	.byte	13
	.word	3646
	.byte	10,19,223,1,9,40,11
	.byte	'PowerOnDelay_u32',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'DelayTime_u32',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'Dsp_GetSeed_fp',0
	.word	12577
	.byte	4,2,35,8,11
	.byte	'Dsp_CompareKey_fp',0
	.word	12582
	.byte	4,2,35,12,11
	.byte	'Security_level_u8',0
	.word	157
	.byte	1,2,35,16,11
	.byte	'Seed_size_u32',0
	.word	826
	.byte	4,2,35,20,11
	.byte	'Key_size_u32',0
	.word	826
	.byte	4,2,35,24,11
	.byte	'NumAttDelay_u8',0
	.word	157
	.byte	1,2,35,28,11
	.byte	'NumAttLock_u8',0
	.word	157
	.byte	1,2,35,29,11
	.byte	'AccDataRecsize_u32',0
	.word	826
	.byte	4,2,35,32,11
	.byte	'usePort',0
	.word	12495
	.byte	4,2,35,36,0,9
	.byte	'Dcm_Dsp_Security_t',0,19,253,1,2
	.word	12587
	.byte	33
	.byte	'Dcm_Dsp_SecaGlobaltimer_u32',0,19,144,2,31
	.word	826
	.byte	1,1,21,8
	.word	12410
	.byte	22,0,0,33
	.byte	'Dcm_Dsp_Seca',0,19,179,2,40
	.word	12925
	.byte	1,1,21,40
	.word	12587
	.byte	22,0,0,13
	.word	12958
	.byte	33
	.byte	'Dcm_Dsp_Security',0,19,190,2,45
	.word	12967
	.byte	1,1,19,20,22,9,4,20
	.byte	'DCM_NO_BOOT',0,0,20
	.byte	'DCM_OEM_BOOT',0,1,20
	.byte	'DCM_SYS_BOOT',0,2,0,9
	.byte	'Dcm_SessionForBootType',0,20,27,2
	.word	13000
	.byte	19,21,192,3,9,4,20
	.byte	'DCM_READ_OK',0,0,20
	.byte	'DCM_READ_FAILED',0,1,20
	.byte	'DCM_READ_PENDING',0,2,20
	.byte	'DCM_READ_FORCE_RCRRP',0,3,20
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,9
	.byte	'Dcm_ReadMemoryRet_t',0,21,199,3,3
	.word	13081
	.byte	33
	.byte	'Dcm_SrvOpstatus_u8',0,22,80,28
	.word	157
	.byte	1,1,9
	.byte	'Rte_TaskRefType',0,23,184,1,32
	.word	4878
	.byte	9
	.byte	'Rte_EventRefType',0,23,185,1,32
	.word	157
	.byte	9
	.byte	'Rte_EventType',0,23,186,1,32
	.word	826
	.byte	9
	.byte	'Rte_REActCounterType',0,23,252,1,15
	.word	157
	.byte	3
	.word	157
	.byte	9
	.byte	'Rte_REActCounterRefType',0,23,253,1,58
	.word	13349
	.byte	10,23,255,1,9,8,11
	.byte	'task',0
	.word	13245
	.byte	4,2,35,0,11
	.byte	'acnt',0
	.word	13354
	.byte	4,2,35,4,0,9
	.byte	'Rte_REContainerType',0,23,130,2,3
	.word	13387
	.byte	13
	.word	4618
	.byte	3
	.word	13451
	.byte	3
	.word	157
	.byte	13
	.word	13387
	.byte	3
	.word	13466
	.byte	9
	.byte	'Rte_REContainerRefType',0,23,132,2,60
	.word	13471
	.byte	9
	.byte	'Rte_MSICounterType',0,23,149,2,16
	.word	487
	.byte	3
	.word	487
	.byte	9
	.byte	'Rte_MSICounterRefType',0,23,150,2,56
	.word	13536
	.byte	9
	.byte	'Rte_MSIPendingFlagType',0,23,152,2,17
	.word	157
	.byte	3
	.word	157
	.byte	9
	.byte	'Rte_MSIPendingFlagRefType',0,23,153,2,60
	.word	13604
	.byte	10,23,163,2,9,24,11
	.byte	'counter',0
	.word	13541
	.byte	4,2,35,0,11
	.byte	'incCounter',0
	.word	157
	.byte	1,2,35,4,11
	.byte	'pending',0
	.word	13609
	.byte	4,2,35,8,11
	.byte	'osTask',0
	.word	13245
	.byte	4,2,35,12,11
	.byte	'acnt',0
	.word	13354
	.byte	4,2,35,16,11
	.byte	'osEvent',0
	.word	157
	.byte	1,2,35,20,11
	.byte	'MSIInit',0
	.word	487
	.byte	2,2,35,22,0,9
	.byte	'Rte_MSITableEntry',0,23,172,2,3
	.word	13644
	.byte	3
	.word	487
	.byte	3
	.word	157
	.byte	9
	.byte	'Rte_TaskArrayIndex',0,23,179,2,16
	.word	157
	.byte	9
	.byte	'Rte_NrWaitingTasks',0,23,180,2,16
	.word	157
	.byte	10,23,182,2,9,4,11
	.byte	'pending',0
	.word	157
	.byte	1,2,35,0,11
	.byte	'count',0
	.word	157
	.byte	1,2,35,1,11
	.byte	'firstWaitingTask',0
	.word	157
	.byte	1,2,35,2,0,9
	.byte	'Rte_WaitableDatum',0,23,186,2,3
	.word	13862
	.byte	3
	.word	13862
	.byte	10,23,226,2,9,12,11
	.byte	'event_id',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'wd',0
	.word	13954
	.byte	4,2,35,4,11
	.byte	'timeout',0
	.word	826
	.byte	4,2,35,8,0,9
	.byte	'Rte_WOWP_NotificationType',0,23,230,2,3
	.word	13959
	.byte	13
	.word	13959
	.byte	3
	.word	14048
	.byte	9
	.byte	'Rte_WOWP_NotificationRefType',0,23,232,2,66
	.word	14053
	.byte	9
	.byte	'Rte_ARE_NotificationType',0,23,234,2,29
	.word	13387
	.byte	24
	.byte	'Rte_QTaskType',0,23,243,2,16,28,11
	.byte	'cmn',0
	.word	8142
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	13245
	.byte	4,2,35,24,0,9
	.byte	'Rte_QTaskType',0,23,246,2,3
	.word	14130
	.byte	24
	.byte	'Rte_QREType',0,23,250,2,16,28,11
	.byte	'cmn',0
	.word	8142
	.byte	24,2,35,0,11
	.byte	're',0
	.word	13476
	.byte	4,2,35,24,0,9
	.byte	'Rte_QREType',0,23,253,2,3
	.word	14201
	.byte	13
	.word	13387
	.byte	3
	.word	14266
	.byte	24
	.byte	'Rte_QWWPType',0,23,129,3,16,28,11
	.byte	'cmn',0
	.word	8142
	.byte	24,2,35,0,11
	.byte	'wwp',0
	.word	14058
	.byte	4,2,35,24,0,9
	.byte	'Rte_QWWPType',0,23,132,3,3
	.word	14276
	.byte	13
	.word	13959
	.byte	3
	.word	14344
	.byte	24
	.byte	'Rte_QEvType',0,23,136,3,16,36,11
	.byte	'cmn',0
	.word	8142
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	13245
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	157
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	13354
	.byte	4,2,35,32,0,9
	.byte	'Rte_QEvType',0,23,141,3,3
	.word	14354
	.byte	24
	.byte	'Rte_QMSIType',0,23,145,3,16,48,11
	.byte	'cmn',0
	.word	8142
	.byte	24,2,35,0,11
	.byte	'task',0
	.word	13245
	.byte	4,2,35,24,11
	.byte	'mask',0
	.word	157
	.byte	1,2,35,28,11
	.byte	'acnt',0
	.word	13354
	.byte	4,2,35,32,11
	.byte	'msiCounter',0
	.word	13541
	.byte	4,2,35,36,11
	.byte	'msiPending',0
	.word	13609
	.byte	4,2,35,40,11
	.byte	'msiLimit',0
	.word	487
	.byte	2,2,35,44,0,9
	.byte	'Rte_QMSIType',0,23,153,3,3
	.word	14449
	.byte	19,24,21,9,4,20
	.byte	'DSD_IDLE',0,0,20
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,20
	.byte	'DSD_CALL_SERVICE',0,2,20
	.byte	'DSD_WAITFORTXCONF',0,3,20
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,9
	.byte	'Dcm_DsdStatesType_ten',0,24,28,2
	.word	14604
	.byte	19,25,215,2,9,4,20
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,20
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,9
	.byte	'Dcm_DsldResponseType_ten',0,25,219,2,2
	.word	14741
	.byte	19,26,148,1,9,4,20
	.byte	'DCM_ROE_CLEARED',0,0,20
	.byte	'DCM_ROE_STOPPED',0,1,20
	.byte	'DCM_ROE_STARTED',0,2,0,9
	.byte	'Dcm_DspRoeEventState_ten',0,26,153,1,2
	.word	14830
	.byte	19,26,231,1,9,4,20
	.byte	'DCM_CONTROLMASK_NO',0,0,20
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,20
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,9
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,26,236,1,2
	.word	14925
	.byte	19,21,203,1,9,4,20
	.byte	'DCM_SUPPORT_READ',0,0,20
	.byte	'DCM_SUPPORT_WRITE',0,1,20
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,32
	.word	157
	.byte	1,1,27
	.word	11239
	.byte	27
	.word	487
	.byte	27
	.word	15042
	.byte	0,3
	.word	15112
	.byte	10,26,239,1,9,44,11
	.byte	'dataAllowedSessRead_u32',0
	.word	826
	.byte	4,2,35,0,11
	.byte	'dataAllowedSecRead_u32',0
	.word	826
	.byte	4,2,35,4,11
	.byte	'adrUserReadModeRule_pfct',0
	.word	15135
	.byte	4,2,35,8,11
	.byte	'dataAllowedSessWrite_u32',0
	.word	826
	.byte	4,2,35,12,11
	.byte	'dataAllowedSecWrite_u32',0
	.word	826
	.byte	4,2,35,16,11
	.byte	'adrUserWriteModeRule_pfct',0
	.word	15135
	.byte	4,2,35,20,11
	.byte	'dataSessBitMask_u32',0
	.word	826
	.byte	4,2,35,24,11
	.byte	'dataSecBitMask_u32',0
	.word	826
	.byte	4,2,35,28,11
	.byte	'adrUserControlModeRule_pfct',0
	.word	15135
	.byte	4,2,35,32,11
	.byte	'dataCtrlMask_en',0
	.word	14925
	.byte	4,2,35,36,11
	.byte	'dataCtrlMaskSize_u8',0
	.word	157
	.byte	1,2,35,40,11
	.byte	'dataIocbirst_b',0
	.word	157
	.byte	1,2,35,41,11
	.byte	'statusmaskIOControl_u8',0
	.word	157
	.byte	1,2,35,42,0,9
	.byte	'Dcm_ExtendedDIDConfig_tst',0,26,141,2,3
	.word	15140
	.byte	10,26,200,2,9,4,11
	.byte	'posnSigBit_u16',0
	.word	487
	.byte	2,2,35,0,11
	.byte	'idxDcmDspDatainfo_u16',0
	.word	487
	.byte	2,2,35,2,0,9
	.byte	'Dcm_SignalDIDConfig_tst',0,26,204,2,3
	.word	15587
.L457:
	.byte	19,27,20,9,4,20
	.byte	'DCM_DSP_SECA_GENSEED',0,0,20
	.byte	'DCM_DSP_SECA_COMPAREKEY',0,1,20
	.byte	'DCM_DSP_SECA_PENDING',0,2,0,9
	.byte	'Dcm_Dsp_SecaStates_ten',0,27,25,2
	.word	15682
	.byte	33
	.byte	'Dcm_DspSecaOpStatus_u8',0,27,41,40
	.word	157
	.byte	1,1,33
	.byte	'Dcm_DspSecaStatus_en',0,27,47,44
	.word	15682
	.byte	1,1,33
	.byte	'Dcm_DspChgSecLevel_b',0,27,52,30
	.word	157
	.byte	1,1,13
	.word	12587
.L455:
	.byte	3
	.word	15886
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	9,22,0,3,8,58,15,59,15,57,15,73,19,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,12,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,13,38,0,73,19,0,0,14,46,1,49,19,0,0,15
	.byte	5,0,49,19,0,0,16,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,17,46,0,3,8,58,15,59,15,57,15
	.byte	54,15,63,12,60,12,0,0,18,21,0,54,15,0,0,19,4,1,58,15,59,15,57,15,11,15,0,0,20,40,0,3,8,28,13,0,0,21,1
	.byte	1,11,15,73,19,0,0,22,33,0,47,15,0,0,23,21,0,54,15,39,12,0,0,24,19,1,3,8,58,15,59,15,57,15,11,15,0,0,25
	.byte	59,0,3,8,0,0,26,21,1,54,15,39,12,0,0,27,5,0,73,19,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0,29,4,1,3,8,58
	.byte	15,59,15,57,15,11,15,0,0,30,21,0,73,19,54,15,39,12,0,0,31,53,0,73,19,0,0,32,21,1,73,19,54,15,39,12,0,0
	.byte	33,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L164:
	.word	.L547-.L546
.L546:
	.half	3
	.word	.L549-.L548
.L548:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Lcfg_DslDsd.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\Dcm.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca_Priv.h',0,0,0,0,0
.L549:
.L547:
	.sdecl	'.debug_info',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_info'
.L165:
	.word	337
	.half	3
	.word	.L166
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L168,.L167
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_DcmSecurityAccess',0,1,230,13,31
	.word	.L357
	.byte	1,1,1
	.word	.L158,.L358,.L157
	.byte	4
	.byte	'OpStatus',0,1,230,13,89
	.word	.L357,.L359
	.byte	4
	.byte	'pMsgContext',0,1,231,13,89
	.word	.L360,.L361
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,232,13,99
	.word	.L362,.L363
	.byte	5
	.word	.L158,.L358
	.byte	6
	.byte	'localdataServRetValue_u8',0,1,234,13,39
	.word	.L357,.L364
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_abbrev'
.L166:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_line'
.L167:
	.word	.L551-.L550
.L550:
	.half	3
	.word	.L553-.L552
.L552:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L553:
	.byte	5,31,7,0,5,2
	.word	.L158
	.byte	3,229,13,1,5,28,9
	.half	.L539-.L158
	.byte	3,8,1,5,26,9
	.half	.L554-.L539
	.byte	1,5,28,9
	.half	.L555-.L554
	.byte	3,1,1,5,5,9
	.half	.L556-.L555
	.byte	1,5,28,9
	.half	.L557-.L556
	.byte	1,5,26,9
	.half	.L558-.L557
	.byte	1,5,5,9
	.half	.L559-.L558
	.byte	3,1,1,5,30,9
	.half	.L560-.L559
	.byte	1,5,29,9
	.half	.L561-.L560
	.byte	1,5,5,9
	.half	.L562-.L561
	.byte	3,2,1,5,33,9
	.half	.L563-.L562
	.byte	1,5,32,9
	.half	.L564-.L563
	.byte	1,5,5,9
	.half	.L565-.L564
	.byte	3,3,1,5,24,7,9
	.half	.L566-.L565
	.byte	3,3,1,5,39,9
	.half	.L537-.L566
	.byte	3,2,1,5,37,9
	.half	.L567-.L537
	.byte	1,5,26,9
	.half	.L568-.L567
	.byte	3,126,1,5,38,9
	.half	.L93-.L568
	.byte	3,6,1,5,69,9
	.half	.L569-.L93
	.byte	1,5,12,9
	.half	.L540-.L569
	.byte	3,2,1,5,9,9
	.half	.L570-.L540
	.byte	1,5,34,7,9
	.half	.L571-.L570
	.byte	3,3,1,5,32,9
	.half	.L572-.L571
	.byte	1,5,13,9
	.half	.L573-.L572
	.byte	3,2,1,5,36,9
	.half	.L574-.L573
	.byte	1,5,34,9
	.half	.L575-.L574
	.byte	1,5,13,9
	.half	.L576-.L575
	.byte	3,1,1,5,36,9
	.half	.L577-.L576
	.byte	1,5,34,9
	.half	.L578-.L577
	.byte	1,5,41,9
	.half	.L579-.L578
	.byte	3,1,1,5,40,9
	.half	.L580-.L579
	.byte	1,5,32,9
	.half	.L95-.L580
	.byte	3,3,1,5,30,9
	.half	.L581-.L95
	.byte	1,5,32,9
	.half	.L94-.L581
	.byte	3,3,1,5,5,9
	.half	.L544-.L94
	.byte	3,1,1,5,1,9
	.half	.L96-.L544
	.byte	3,1,1,7,9
	.half	.L169-.L96
	.byte	0,1,1
.L551:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_ranges'
.L168:
	.word	-1,.L158,0,.L169-.L158,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_info'
.L170:
	.word	213
	.half	3
	.word	.L171
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L173,.L172
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_ResetAccessType',0,1,153,14,21,1,1,1
	.word	.L160,.L365,.L159
	.byte	4
	.word	.L160,.L365
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_abbrev'
.L171:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_line'
.L172:
	.word	.L583-.L582
.L582:
	.half	3
	.word	.L585-.L584
.L584:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L585:
	.byte	5,5,7,0,5,2
	.word	.L160
	.byte	3,154,14,1,5,26,9
	.half	.L586-.L160
	.byte	1,5,25,9
	.half	.L587-.L586
	.byte	1,5,1,9
	.half	.L588-.L587
	.byte	3,1,1,7,9
	.half	.L174-.L588
	.byte	0,1,1
.L583:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_ranges'
.L173:
	.word	-1,.L160,0,.L174-.L160,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_info'
.L175:
	.word	269
	.half	3
	.word	.L176
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L178,.L177
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_NewSecurityLevelToUnlock',0,1,86,28,1,1
	.word	.L98,.L366,.L97
	.byte	4
	.byte	'OpStatus',0,1,87,83
	.word	.L367,.L368
	.byte	4
	.byte	'pMsgContext',0,1,88,86
	.word	.L369,.L370
	.byte	5
	.word	.L98,.L366
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_abbrev'
.L176:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_line'
.L177:
	.word	.L590-.L589
.L589:
	.half	3
	.word	.L592-.L591
.L591:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L592:
	.byte	5,21,7,0,5,2
	.word	.L98
	.byte	3,137,1,1,5,19,9
	.half	.L593-.L98
	.byte	1,5,9,9
	.half	.L594-.L593
	.byte	3,2,1,5,32,9
	.half	.L595-.L594
	.byte	1,5,30,9
	.half	.L596-.L595
	.byte	1,5,1,9
	.half	.L597-.L596
	.byte	3,5,1,7,9
	.half	.L179-.L597
	.byte	0,1,1
.L590:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_ranges'
.L178:
	.word	-1,.L98,0,.L179-.L98,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_info'
.L180:
	.word	307
	.half	3
	.word	.L181
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L183,.L182
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_ReqSecIsCurrentSecurityLevel',0,1,157,1,28,1,1
	.word	.L100,.L371,.L99
	.byte	4
	.byte	'OpStatus',0,1,158,1,82
	.word	.L367,.L372
	.byte	4
	.byte	'pMsgContext',0,1,159,1,82
	.word	.L360,.L373
	.byte	5
	.word	.L100,.L371
	.byte	6
	.byte	'idxLoopSeed_qu32',0,1,161,1,28
	.word	.L374,.L375
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_line'
.L182:
	.word	.L599-.L598
.L598:
	.half	3
	.word	.L601-.L600
.L600:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L601:
	.byte	5,16,7,0,5,2
	.word	.L100
	.byte	3,162,1,1,5,31,9
	.half	.L602-.L100
	.byte	1,5,29,9
	.half	.L603-.L602
	.byte	1,5,25,9
	.half	.L604-.L603
	.byte	3,3,1,5,91,9
	.half	.L458-.L604
	.byte	1,5,20,9
	.half	.L3-.L458
	.byte	3,2,1,5,29,9
	.half	.L605-.L3
	.byte	1,5,50,9
	.half	.L606-.L605
	.byte	1,5,48,9
	.half	.L607-.L606
	.byte	1,5,108,9
	.half	.L608-.L607
	.byte	3,126,1,5,48,9
	.half	.L2-.L608
	.byte	1,5,75,9
	.half	.L609-.L2
	.byte	1,5,91,9
	.half	.L610-.L609
	.byte	1,5,31,7,9
	.half	.L611-.L610
	.byte	3,5,1,5,29,9
	.half	.L612-.L611
	.byte	1,5,17,9
	.half	.L613-.L612
	.byte	3,4,1,5,15,9
	.half	.L614-.L613
	.byte	1,5,5,9
	.half	.L615-.L614
	.byte	3,2,1,5,28,9
	.half	.L616-.L615
	.byte	1,5,26,9
	.half	.L617-.L616
	.byte	1,5,5,9
	.half	.L618-.L617
	.byte	3,2,1,5,28,9
	.half	.L619-.L618
	.byte	1,5,26,9
	.half	.L620-.L619
	.byte	1,5,5,9
	.half	.L621-.L620
	.byte	3,1,1,5,33,9
	.half	.L622-.L621
	.byte	1,5,32,9
	.half	.L623-.L622
	.byte	1,5,1,9
	.half	.L624-.L623
	.byte	3,1,1,7,9
	.half	.L184-.L624
	.byte	0,1,1
.L599:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_ranges'
.L183:
	.word	-1,.L100,0,.L184-.L100,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_info'
.L185:
	.word	351
	.half	3
	.word	.L186
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L188,.L187
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_CurrentSecurityLevel',0,1,192,1,28,1,1
	.word	.L102,.L376,.L101
	.byte	4
	.byte	'pMsgContext',0,1,193,1,83
	.word	.L360,.L377
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,194,1,95
	.word	.L362,.L378
	.byte	5
	.word	.L102,.L376
	.byte	6
	.byte	'dataGetSecurityLevel_u8',0,1,196,1,39
	.word	.L357,.L379
	.byte	6
	.byte	'dataRetGetSecLevel_u8',0,1,197,1,39
	.word	.L357,.L380
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_abbrev'
.L186:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_line'
.L187:
	.word	.L626-.L625
.L625:
	.half	3
	.word	.L628-.L627
.L627:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L628:
	.byte	5,28,7,0,5,2
	.word	.L102
	.byte	3,191,1,1,5,51,9
	.half	.L463-.L102
	.byte	3,8,1,5,5,9
	.half	.L460-.L463
	.byte	3,3,1,5,9,7,9
	.half	.L629-.L460
	.byte	3,2,1,5,40,9
	.half	.L630-.L629
	.byte	1,5,30,9
	.half	.L631-.L630
	.byte	1,5,9,9
	.half	.L632-.L631
	.byte	3,1,1,5,32,9
	.half	.L633-.L632
	.byte	1,5,30,9
	.half	.L634-.L633
	.byte	1,5,47,9
	.half	.L635-.L634
	.byte	3,5,1,5,12,9
	.half	.L636-.L635
	.byte	3,126,1,5,39,9
	.half	.L637-.L636
	.byte	1,5,9,9
	.half	.L638-.L637
	.byte	1,5,66,7,9
	.half	.L639-.L638
	.byte	3,2,1,5,78,9
	.half	.L465-.L639
	.byte	1,5,62,9
	.half	.L5-.L465
	.byte	3,5,1,5,9,9
	.half	.L6-.L5
	.byte	3,126,1,5,27,9
	.half	.L4-.L6
	.byte	3,8,1,5,25,9
	.half	.L640-.L4
	.byte	1,5,1,9
	.half	.L7-.L640
	.byte	3,2,1,7,9
	.half	.L189-.L7
	.byte	0,1,1
.L626:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_ranges'
.L188:
	.word	-1,.L102,0,.L189-.L102,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_info'
.L190:
	.word	281
	.half	3
	.word	.L191
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L193,.L192
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecurityLevelConfigured',0,1,241,1,28,1,1
	.word	.L104,.L381,.L103
	.byte	4
	.byte	'pMsgContext',0,1,242,1,82
	.word	.L360,.L382
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,243,1,90
	.word	.L362,.L383
	.byte	5
	.word	.L104,.L381
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_abbrev'
.L191:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_line'
.L192:
	.word	.L642-.L641
.L641:
	.half	3
	.word	.L644-.L643
.L643:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L644:
	.byte	5,53,7,0,5,2
	.word	.L104
	.byte	3,244,1,1,5,5,9
	.half	.L645-.L104
	.byte	1,5,52,9
	.half	.L646-.L645
	.byte	1,5,36,9
	.half	.L647-.L646
	.byte	1,5,52,9
	.half	.L648-.L647
	.byte	1,5,33,9
	.half	.L649-.L648
	.byte	1,5,44,9
	.half	.L650-.L649
	.byte	3,2,1,5,19,9
	.half	.L651-.L650
	.byte	1,5,71,9
	.half	.L652-.L651
	.byte	1,5,42,9
	.half	.L653-.L652
	.byte	1,5,5,9
	.half	.L654-.L653
	.byte	1,5,31,7,9
	.half	.L655-.L654
	.byte	3,3,1,5,29,9
	.half	.L656-.L655
	.byte	1,5,74,9
	.half	.L657-.L656
	.byte	1,5,41,9
	.half	.L8-.L657
	.byte	3,3,1,5,13,9
	.half	.L658-.L8
	.byte	1,5,6,7,9
	.half	.L659-.L658
	.byte	3,1,1,5,18,9
	.half	.L660-.L659
	.byte	1,5,41,9
	.half	.L661-.L660
	.byte	1,5,59,9
	.half	.L662-.L661
	.byte	1,5,31,7,9
	.half	.L663-.L662
	.byte	3,2,1,5,29,9
	.half	.L664-.L663
	.byte	1,5,59,9
	.half	.L665-.L664
	.byte	1,5,13,9
	.half	.L10-.L665
	.byte	3,4,1,5,25,9
	.half	.L666-.L10
	.byte	1,5,48,9
	.half	.L667-.L666
	.byte	1,5,70,9
	.half	.L668-.L667
	.byte	1,5,10,9
	.half	.L669-.L668
	.byte	1,5,31,7,9
	.half	.L670-.L669
	.byte	3,2,1,5,29,9
	.half	.L671-.L670
	.byte	1,5,64,9
	.half	.L672-.L671
	.byte	1,5,50,9
	.half	.L13-.L672
	.byte	3,5,1,5,1,9
	.half	.L9-.L13
	.byte	3,11,1,7,9
	.half	.L194-.L9
	.byte	0,1,1
.L642:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_ranges'
.L193:
	.word	-1,.L104,0,.L194-.L104,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_info'
.L195:
	.word	303
	.half	3
	.word	.L196
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L198,.L197
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaSeedRequest',0,1,165,2,28,1,1
	.word	.L106,.L384,.L105
	.byte	4
	.byte	'pMsgContext',0,1,165,2,106
	.word	.L360,.L385
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,166,2,97
	.word	.L362,.L386
	.byte	5
	.word	.L106,.L384
	.byte	6
	.byte	'l_idxSecTab_qu8',0,1,169,2,32
	.word	.L387,.L388
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_abbrev'
.L196:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_line'
.L197:
	.word	.L674-.L673
.L673:
	.half	3
	.word	.L676-.L675
.L675:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L676:
	.byte	5,5,7,0,5,2
	.word	.L106
	.byte	3,171,2,1,5,33,9
	.half	.L677-.L106
	.byte	1,5,31,9
	.half	.L678-.L677
	.byte	1,5,5,9
	.half	.L679-.L678
	.byte	3,3,1,5,33,9
	.half	.L680-.L679
	.byte	1,5,59,9
	.half	.L681-.L680
	.byte	1,5,64,9
	.half	.L682-.L681
	.byte	1,5,29,9
	.half	.L683-.L682
	.byte	1,5,24,9
	.half	.L684-.L683
	.byte	3,3,1,5,85,9
	.half	.L469-.L684
	.byte	3,1,1,5,102,9
	.half	.L16-.L469
	.byte	1,5,28,9
	.half	.L15-.L16
	.byte	3,127,1,5,6,7,9
	.half	.L685-.L15
	.byte	3,1,1,5,22,9
	.half	.L686-.L685
	.byte	1,5,39,9
	.half	.L687-.L686
	.byte	1,5,61,9
	.half	.L688-.L687
	.byte	1,5,58,9
	.half	.L689-.L688
	.byte	1,5,5,7,9
	.half	.L17-.L689
	.byte	3,5,1,5,27,9
	.half	.L690-.L17
	.byte	1,5,9,9
	.half	.L691-.L690
	.byte	3,8,1,5,54,7,9
	.half	.L692-.L691
	.byte	3,2,1,5,73,9
	.half	.L468-.L692
	.byte	1,5,31,9
	.half	.L18-.L468
	.byte	3,5,1,5,29,9
	.half	.L470-.L18
	.byte	1,5,1,9
	.half	.L19-.L470
	.byte	3,9,1,7,9
	.half	.L199-.L19
	.byte	0,1,1
.L674:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_ranges'
.L198:
	.word	-1,.L106,0,.L199-.L106,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_info'
.L200:
	.word	300
	.half	3
	.word	.L201
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L203,.L202
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_ReqSecaLvlConfigured',0,1,223,2,28,1,1
	.word	.L108,.L389,.L107
	.byte	4
	.byte	'OpStatus',0,1,224,2,83
	.word	.L367,.L390
	.byte	4
	.byte	'pMsgContext',0,1,225,2,86
	.word	.L369,.L391
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,226,2,95
	.word	.L362,.L392
	.byte	5
	.word	.L108,.L389
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_abbrev'
.L201:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_line'
.L202:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L696:
	.byte	5,5,7,0,5,2
	.word	.L108
	.byte	3,227,2,1,5,52,9
	.half	.L697-.L108
	.byte	1,5,51,9
	.half	.L698-.L697
	.byte	1,5,35,9
	.half	.L699-.L698
	.byte	1,5,51,9
	.half	.L700-.L699
	.byte	1,5,33,9
	.half	.L701-.L700
	.byte	1,5,35,9
	.half	.L702-.L701
	.byte	3,2,1,5,5,9
	.half	.L703-.L702
	.byte	1,5,55,9
	.half	.L704-.L703
	.byte	1,5,58,9
	.half	.L705-.L704
	.byte	1,5,31,9
	.half	.L706-.L705
	.byte	1,5,8,9
	.half	.L707-.L706
	.byte	3,2,1,5,55,9
	.half	.L708-.L707
	.byte	1,5,5,9
	.half	.L709-.L708
	.byte	1,5,31,7,9
	.half	.L710-.L709
	.byte	3,3,1,5,29,9
	.half	.L711-.L710
	.byte	1,5,57,9
	.half	.L712-.L711
	.byte	1,5,24,9
	.half	.L20-.L712
	.byte	3,3,1,5,41,9
	.half	.L713-.L20
	.byte	1,5,68,9
	.half	.L714-.L713
	.byte	1,5,83,9
	.half	.L715-.L714
	.byte	1,5,10,9
	.half	.L716-.L715
	.byte	1,5,31,7,9
	.half	.L717-.L716
	.byte	3,3,1,5,29,9
	.half	.L718-.L717
	.byte	1,5,74,9
	.half	.L719-.L718
	.byte	1,5,21,9
	.half	.L22-.L719
	.byte	3,13,1,5,19,9
	.half	.L720-.L22
	.byte	1,5,9,9
	.half	.L721-.L720
	.byte	3,2,1,5,32,9
	.half	.L722-.L721
	.byte	1,5,30,9
	.half	.L723-.L722
	.byte	1,5,1,9
	.half	.L21-.L723
	.byte	3,2,1,7,9
	.half	.L204-.L21
	.byte	0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_ranges'
.L203:
	.word	-1,.L108,0,.L204-.L108,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_info'
.L205:
	.word	304
	.half	3
	.word	.L206
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L208,.L207
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_ChkForReqSecaLvl',0,1,142,3,28,1,1
	.word	.L110,.L393,.L109
	.byte	4
	.byte	'pMsgContext',0,1,143,3,84
	.word	.L369,.L394
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,144,3,91
	.word	.L362,.L395
	.byte	5
	.word	.L110,.L393
	.byte	6
	.byte	'l_idxSecTab_qu8',0,1,147,3,32
	.word	.L387,.L396
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_abbrev'
.L206:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_line'
.L207:
	.word	.L725-.L724
.L724:
	.half	3
	.word	.L727-.L726
.L726:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L727:
	.byte	5,28,7,0,5,2
	.word	.L110
	.byte	3,141,3,1,5,5,9
	.half	.L474-.L110
	.byte	3,8,1,5,32,9
	.half	.L728-.L474
	.byte	1,5,55,9
	.half	.L729-.L728
	.byte	1,5,29,9
	.half	.L730-.L729
	.byte	1,5,24,9
	.half	.L731-.L730
	.byte	3,3,1,5,85,9
	.half	.L475-.L731
	.byte	3,1,1,5,102,9
	.half	.L25-.L475
	.byte	1,5,28,9
	.half	.L24-.L25
	.byte	3,127,1,5,6,7,9
	.half	.L732-.L24
	.byte	3,1,1,5,22,9
	.half	.L733-.L732
	.byte	1,5,39,9
	.half	.L734-.L733
	.byte	1,5,61,9
	.half	.L735-.L734
	.byte	1,5,58,9
	.half	.L736-.L735
	.byte	1,5,5,7,9
	.half	.L26-.L736
	.byte	3,5,1,5,27,9
	.half	.L737-.L26
	.byte	1,5,5,9
	.half	.L738-.L737
	.byte	3,2,1,5,31,7,9
	.half	.L739-.L738
	.byte	3,3,1,5,29,9
	.half	.L476-.L739
	.byte	1,5,60,9
	.half	.L740-.L476
	.byte	1,5,39,9
	.half	.L27-.L740
	.byte	3,4,1,5,70,9
	.half	.L741-.L27
	.byte	1,5,1,9
	.half	.L28-.L741
	.byte	3,2,1,7,9
	.half	.L209-.L28
	.byte	0,1,1
.L725:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_ranges'
.L208:
	.word	-1,.L110,0,.L209-.L110,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_info'
.L210:
	.word	274
	.half	3
	.word	.L211
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L213,.L212
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaRequestState',0,1,181,3,28,1,1
	.word	.L112,.L397,.L111
	.byte	4
	.byte	'pMsgContext',0,1,181,3,106
	.word	.L360,.L398
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,182,3,93
	.word	.L362,.L399
	.byte	5
	.word	.L112,.L397
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_abbrev'
.L211:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_line'
.L212:
	.word	.L743-.L742
.L742:
	.half	3
	.word	.L745-.L744
.L744:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L745:
	.byte	5,5,7,0,5,2
	.word	.L112
	.byte	3,184,3,1,5,44,9
	.half	.L746-.L112
	.byte	1,5,53,9
	.half	.L747-.L746
	.byte	1,5,31,9
	.half	.L748-.L747
	.byte	1,5,9,9
	.half	.L749-.L748
	.byte	3,3,1,5,5,9
	.half	.L750-.L749
	.byte	1,5,45,7,9
	.half	.L751-.L750
	.byte	3,2,1,5,64,9
	.half	.L477-.L751
	.byte	1,5,9,9
	.half	.L29-.L477
	.byte	3,4,1,5,50,7,9
	.half	.L752-.L29
	.byte	3,2,1,5,69,9
	.half	.L478-.L752
	.byte	1,5,35,9
	.half	.L31-.L478
	.byte	3,5,1,5,33,9
	.half	.L753-.L31
	.byte	1,5,1,9
	.half	.L30-.L753
	.byte	3,3,1,7,9
	.half	.L214-.L30
	.byte	0,1,1
.L743:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_ranges'
.L213:
	.word	-1,.L112,0,.L214-.L112,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_info'
.L215:
	.word	249
	.half	3
	.word	.L216
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L218,.L217
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKeyPnding',0,1,214,3,28,1,1
	.word	.L114,.L400,.L113
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,215,3,91
	.word	.L362,.L401
	.byte	5
	.word	.L114,.L400
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_abbrev'
.L216:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_line'
.L217:
	.word	.L755-.L754
.L754:
	.half	3
	.word	.L757-.L756
.L756:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L757:
	.byte	5,26,7,0,5,2
	.word	.L114
	.byte	3,216,3,1,5,25,9
	.half	.L758-.L114
	.byte	1,5,5,9
	.half	.L759-.L758
	.byte	3,1,1,5,30,9
	.half	.L760-.L759
	.byte	1,5,28,9
	.half	.L761-.L760
	.byte	1,5,5,9
	.half	.L762-.L761
	.byte	3,1,1,5,33,9
	.half	.L763-.L762
	.byte	1,5,32,9
	.half	.L764-.L763
	.byte	1,5,1,9
	.half	.L765-.L764
	.byte	3,1,1,7,9
	.half	.L219-.L765
	.byte	0,1,1
.L755:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_ranges'
.L218:
	.word	-1,.L114,0,.L219-.L114,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_info'
.L220:
	.word	284
	.half	3
	.word	.L221
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L223,.L222
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCheckdataStValidKeyChk',0,1,169,4,28,1,1
	.word	.L116,.L402,.L115
	.byte	4
	.byte	'pMsgContext',0,1,170,4,84
	.word	.L369,.L403
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,171,4,90
	.word	.L362,.L404
	.byte	5
	.word	.L116,.L402
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_abbrev'
.L221:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_line'
.L222:
	.word	.L767-.L766
.L766:
	.half	3
	.word	.L769-.L768
.L768:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L769:
	.byte	5,8,7,0,5,2
	.word	.L116
	.byte	3,192,4,1,5,35,9
	.half	.L770-.L116
	.byte	1,5,5,9
	.half	.L771-.L770
	.byte	1,5,9,7,9
	.half	.L772-.L771
	.byte	3,4,1,5,55,9
	.half	.L773-.L772
	.byte	1,5,37,9
	.half	.L774-.L773
	.byte	3,1,1,5,65,9
	.half	.L775-.L774
	.byte	1,5,74,9
	.half	.L480-.L775
	.byte	1,5,79,9
	.half	.L776-.L480
	.byte	1,5,102,9
	.half	.L777-.L776
	.byte	1,5,29,9
	.half	.L479-.L777
	.byte	3,127,1,5,1,9
	.half	.L33-.L479
	.byte	3,4,1,7,9
	.half	.L224-.L33
	.byte	0,1,1
.L767:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_ranges'
.L223:
	.word	-1,.L116,0,.L224-.L116,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_info'
.L225:
	.word	256
	.half	3
	.word	.L226
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L228,.L227
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaValidKeyNotificationToAppIsOk',0,1,150,5,28,1,1
	.word	.L118,.L405,.L117
	.byte	4
	.byte	'OpStatus',0,1,151,5,82
	.word	.L367,.L406
	.byte	5
	.word	.L118,.L405
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_abbrev'
.L226:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_line'
.L227:
	.word	.L779-.L778
.L778:
	.half	3
	.word	.L781-.L780
.L780:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L781:
	.byte	5,29,7,0,5,2
	.word	.L118
	.byte	3,196,5,1,5,12,9
	.half	.L782-.L118
	.byte	1,5,9,9
	.half	.L783-.L782
	.byte	1,5,13,7,9
	.half	.L784-.L783
	.byte	3,2,1,5,41,9
	.half	.L785-.L784
	.byte	1,5,39,9
	.half	.L786-.L785
	.byte	1,5,13,9
	.half	.L787-.L786
	.byte	3,1,1,5,36,9
	.half	.L788-.L787
	.byte	1,5,34,9
	.half	.L789-.L788
	.byte	1,5,13,9
	.half	.L790-.L789
	.byte	3,1,1,5,37,9
	.half	.L791-.L790
	.byte	1,5,36,9
	.half	.L792-.L791
	.byte	1,5,45,9
	.half	.L793-.L792
	.byte	3,126,1,5,25,9
	.half	.L34-.L793
	.byte	3,7,1,5,23,9
	.half	.L794-.L34
	.byte	1,5,1,9
	.half	.L35-.L794
	.byte	3,3,1,7,9
	.half	.L229-.L35
	.byte	0,1,1
.L779:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_ranges'
.L228:
	.word	-1,.L118,0,.L229-.L118,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_info'
.L230:
	.word	301
	.half	3
	.word	.L231
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L233,.L232
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaUnlockSecurityLvl',0,1,221,5,28,1,1
	.word	.L120,.L407,.L119
	.byte	4
	.byte	'OpStatus',0,1,221,5,111
	.word	.L367,.L408
	.byte	4
	.byte	'pMsgContext',0,1,222,5,93
	.word	.L360,.L409
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,223,5,102
	.word	.L362,.L410
	.byte	5
	.word	.L120,.L407
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_abbrev'
.L231:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_line'
.L232:
	.word	.L796-.L795
.L795:
	.half	3
	.word	.L798-.L797
.L797:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L798:
	.byte	5,28,7,0,5,2
	.word	.L120
	.byte	3,220,5,1,5,26,9
	.half	.L482-.L120
	.byte	3,4,1,5,25,9
	.half	.L799-.L482
	.byte	1,5,5,9
	.half	.L800-.L799
	.byte	3,1,1,5,33,9
	.half	.L801-.L800
	.byte	1,5,32,9
	.half	.L802-.L801
	.byte	1,5,5,9
	.half	.L803-.L802
	.byte	3,1,1,5,30,9
	.half	.L804-.L803
	.byte	1,5,28,9
	.half	.L805-.L804
	.byte	1,5,18,9
	.half	.L806-.L805
	.byte	3,2,1,5,5,9
	.half	.L807-.L806
	.byte	1,5,17,9
	.half	.L808-.L807
	.byte	1,5,60,9
	.half	.L809-.L808
	.byte	1,5,58,9
	.half	.L810-.L809
	.byte	1,5,16,9
	.half	.L811-.L810
	.byte	3,4,1,5,32,9
	.half	.L812-.L811
	.byte	1,5,52,9
	.half	.L813-.L812
	.byte	1,5,29,9
	.half	.L814-.L813
	.byte	1,5,31,9
	.half	.L815-.L814
	.byte	3,1,1,5,29,9
	.half	.L816-.L815
	.byte	1,5,49,9
	.half	.L817-.L816
	.byte	3,2,1,5,8,9
	.half	.L481-.L817
	.byte	1,5,5,9
	.half	.L818-.L481
	.byte	1,5,9,7,9
	.half	.L819-.L818
	.byte	3,2,1,5,32,9
	.half	.L820-.L819
	.byte	1,5,30,9
	.half	.L821-.L820
	.byte	1,5,52,9
	.half	.L822-.L821
	.byte	1,5,51,9
	.half	.L36-.L822
	.byte	3,7,1,5,1,9
	.half	.L37-.L36
	.byte	3,3,1,7,9
	.half	.L234-.L37
	.byte	0,1,1
.L796:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_ranges'
.L233:
	.word	-1,.L120,0,.L234-.L120,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_info'
.L235:
	.word	239
	.half	3
	.word	.L236
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L238,.L237
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKeyFailed',0,1,139,6,28,1,1
	.word	.L122,.L411,.L121
	.byte	4
	.byte	'OpStatus',0,1,139,6,107
	.word	.L367,.L412
	.byte	5
	.word	.L122,.L411
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_abbrev'
.L236:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_line'
.L237:
	.word	.L824-.L823
.L823:
	.half	3
	.word	.L826-.L825
.L825:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L826:
	.byte	5,28,7,0,5,2
	.word	.L122
	.byte	3,138,6,1,5,5,9
	.half	.L485-.L122
	.byte	3,7,1,5,30,9
	.half	.L827-.L485
	.byte	1,5,28,9
	.half	.L828-.L827
	.byte	1,5,21,9
	.half	.L829-.L828
	.byte	3,2,1,5,8,9
	.half	.L830-.L829
	.byte	1,5,20,9
	.half	.L831-.L830
	.byte	1,5,43,9
	.half	.L832-.L831
	.byte	1,5,63,9
	.half	.L833-.L832
	.byte	1,5,5,9
	.half	.L834-.L833
	.byte	1,5,61,7,9
	.half	.L835-.L834
	.byte	3,3,1,5,52,9
	.half	.L38-.L835
	.byte	3,4,1,5,9,9
	.half	.L484-.L38
	.byte	1,5,5,9
	.half	.L836-.L484
	.byte	1,5,9,7,9
	.half	.L837-.L836
	.byte	3,2,1,5,31,9
	.half	.L838-.L837
	.byte	1,5,30,9
	.half	.L839-.L838
	.byte	1,5,51,9
	.half	.L840-.L839
	.byte	1,5,31,9
	.half	.L39-.L840
	.byte	3,40,1,5,16,9
	.half	.L841-.L39
	.byte	1,5,13,9
	.half	.L842-.L841
	.byte	1,5,17,7,9
	.half	.L843-.L842
	.byte	3,2,1,5,45,9
	.half	.L844-.L843
	.byte	1,5,43,9
	.half	.L845-.L844
	.byte	1,5,17,9
	.half	.L846-.L845
	.byte	3,1,1,5,40,9
	.half	.L847-.L846
	.byte	1,5,38,9
	.half	.L848-.L847
	.byte	1,5,41,9
	.half	.L849-.L848
	.byte	3,1,1,5,40,9
	.half	.L850-.L849
	.byte	1,5,49,9
	.half	.L851-.L850
	.byte	3,126,1,5,29,9
	.half	.L41-.L851
	.byte	3,7,1,5,27,9
	.half	.L852-.L41
	.byte	1,5,1,9
	.half	.L40-.L852
	.byte	3,4,1,7,9
	.half	.L239-.L40
	.byte	0,1,1
.L824:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_ranges'
.L238:
	.word	-1,.L122,0,.L239-.L122,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_info'
.L240:
	.word	238
	.half	3
	.word	.L241
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L243,.L242
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKeyNotOk',0,1,221,6,28,1,1
	.word	.L124,.L413,.L123
	.byte	4
	.byte	'OpStatus',0,1,221,6,106
	.word	.L367,.L414
	.byte	5
	.word	.L124,.L413
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_abbrev'
.L241:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_line'
.L242:
	.word	.L854-.L853
.L853:
	.half	3
	.word	.L856-.L855
.L855:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L856:
	.byte	5,5,7,0,5,2
	.word	.L124
	.byte	3,222,6,1,5,30,9
	.half	.L857-.L124
	.byte	1,5,28,9
	.half	.L858-.L857
	.byte	1,5,17,9
	.half	.L859-.L858
	.byte	3,1,1,5,15,9
	.half	.L860-.L859
	.byte	1,5,1,9
	.half	.L861-.L860
	.byte	3,1,1,7,9
	.half	.L244-.L861
	.byte	0,1,1
.L854:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_ranges'
.L243:
	.word	-1,.L124,0,.L244-.L124,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_info'
.L245:
	.word	250
	.half	3
	.word	.L246
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L248,.L247
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKeyNegResp',0,1,236,6,28,1,1
	.word	.L126,.L415,.L125
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,237,6,91
	.word	.L362,.L416
	.byte	5
	.word	.L126,.L415
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_abbrev'
.L246:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_line'
.L247:
	.word	.L863-.L862
.L862:
	.half	3
	.word	.L865-.L864
.L864:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L865:
	.byte	5,8,7,0,5,2
	.word	.L126
	.byte	3,238,6,1,5,5,9
	.half	.L866-.L126
	.byte	1,5,30,7,9
	.half	.L867-.L866
	.byte	3,3,1,5,28,9
	.half	.L868-.L867
	.byte	1,5,5,9
	.half	.L43-.L868
	.byte	3,2,1,5,30,9
	.half	.L869-.L43
	.byte	1,5,28,9
	.half	.L870-.L869
	.byte	1,5,1,9
	.half	.L871-.L870
	.byte	3,1,1,7,9
	.half	.L249-.L871
	.byte	0,1,1
.L863:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_ranges'
.L248:
	.word	-1,.L126,0,.L249-.L126,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_info'
.L250:
	.word	299
	.half	3
	.word	.L251
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L253,.L252
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKeyStatusChk',0,1,129,7,28,1,1
	.word	.L128,.L417,.L127
	.byte	4
	.byte	'OpStatus',0,1,129,7,110
	.word	.L367,.L418
	.byte	4
	.byte	'pMsgContext',0,1,130,7,106
	.word	.L360,.L419
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,131,7,102
	.word	.L362,.L420
	.byte	5
	.word	.L128,.L417
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_abbrev'
.L251:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_line'
.L252:
	.word	.L873-.L872
.L872:
	.half	3
	.word	.L875-.L874
.L874:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L875:
	.byte	5,9,7,0,5,2
	.word	.L128
	.byte	3,133,7,1,5,5,9
	.half	.L876-.L128
	.byte	1,5,60,7,9
	.half	.L877-.L876
	.byte	3,2,1,5,79,9
	.half	.L486-.L877
	.byte	1,5,36,9
	.half	.L44-.L486
	.byte	3,2,1,5,10,9
	.half	.L878-.L44
	.byte	1,5,34,7,9
	.half	.L879-.L878
	.byte	3,2,1,5,53,9
	.half	.L488-.L879
	.byte	1,5,10,9
	.half	.L46-.L488
	.byte	3,2,1,5,33,7,9
	.half	.L880-.L46
	.byte	3,2,1,5,42,9
	.half	.L489-.L880
	.byte	1,5,37,9
	.half	.L48-.L489
	.byte	3,2,1,5,10,9
	.half	.L881-.L48
	.byte	1,5,34,7,9
	.half	.L882-.L881
	.byte	3,5,1,5,43,9
	.half	.L490-.L882
	.byte	1,5,35,9
	.half	.L50-.L490
	.byte	3,5,1,5,1,9
	.half	.L45-.L50
	.byte	3,2,1,7,9
	.half	.L254-.L45
	.byte	0,1,1
.L873:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_ranges'
.L253:
	.word	-1,.L128,0,.L254-.L128,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_info'
.L255:
	.word	290
	.half	3
	.word	.L256
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L258,.L257
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCmpKey',0,1,173,7,28,1,1
	.word	.L130,.L421,.L129
	.byte	4
	.byte	'OpStatus',0,1,173,7,101
	.word	.L367,.L422
	.byte	4
	.byte	'pMsgContext',0,1,174,7,97
	.word	.L360,.L423
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,175,7,93
	.word	.L362,.L424
	.byte	5
	.word	.L130,.L421
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_abbrev'
.L256:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_line'
.L257:
	.word	.L884-.L883
.L883:
	.half	3
	.word	.L886-.L885
.L885:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L886:
	.byte	5,28,7,0,5,2
	.word	.L130
	.byte	3,172,7,1,5,5,9
	.half	.L497-.L130
	.byte	3,5,1,5,34,9
	.half	.L887-.L497
	.byte	1,5,54,9
	.half	.L888-.L887
	.byte	1,5,57,9
	.half	.L889-.L888
	.byte	1,5,30,9
	.half	.L890-.L889
	.byte	1,5,5,9
	.half	.L891-.L890
	.byte	3,3,1,5,29,9
	.half	.L892-.L891
	.byte	1,5,27,9
	.half	.L893-.L892
	.byte	1,5,5,9
	.half	.L894-.L893
	.byte	3,2,1,5,53,9
	.half	.L895-.L894
	.byte	1,5,52,9
	.half	.L896-.L895
	.byte	1,5,36,9
	.half	.L897-.L896
	.byte	1,5,52,9
	.half	.L898-.L897
	.byte	1,5,33,9
	.half	.L899-.L898
	.byte	1,5,5,9
	.half	.L900-.L899
	.byte	3,2,1,5,27,9
	.half	.L901-.L900
	.byte	1,5,54,9
	.half	.L902-.L901
	.byte	1,5,25,9
	.half	.L903-.L902
	.byte	1,5,5,9
	.half	.L904-.L903
	.byte	3,3,1,5,33,9
	.half	.L905-.L904
	.byte	1,5,31,9
	.half	.L906-.L905
	.byte	1,5,52,9
	.half	.L907-.L906
	.byte	3,3,1,5,46,9
	.half	.L498-.L907
	.byte	3,3,1,5,10,9
	.half	.L908-.L498
	.byte	1,5,7,7,9
	.half	.L909-.L908
	.byte	3,1,1,5,34,9
	.half	.L910-.L909
	.byte	1,5,44,9
	.half	.L911-.L910
	.byte	1,5,31,7,9
	.half	.L912-.L911
	.byte	3,3,1,5,29,9
	.half	.L913-.L912
	.byte	1,5,9,9
	.half	.L914-.L913
	.byte	3,1,1,5,34,9
	.half	.L915-.L914
	.byte	1,5,32,9
	.half	.L916-.L915
	.byte	1,5,50,9
	.half	.L917-.L916
	.byte	3,127,1,5,58,9
	.half	.L52-.L917
	.byte	3,6,1,5,1,9
	.half	.L54-.L52
	.byte	3,2,1,7,9
	.half	.L259-.L54
	.byte	0,1,1
.L884:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_ranges'
.L258:
	.word	-1,.L130,0,.L259-.L130,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_info'
.L260:
	.word	279
	.half	3
	.word	.L261
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L263,.L262
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_GenerateSeedAsynchFnc',0,1,214,8,28,1,1
	.word	.L132,.L425,.L131
	.byte	4
	.byte	'pMsgContext',0,1,215,8,83
	.word	.L360,.L426
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,216,8,95
	.word	.L362,.L427
	.byte	5
	.word	.L132,.L425
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_abbrev'
.L261:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_line'
.L262:
	.word	.L919-.L918
.L918:
	.half	3
	.word	.L921-.L920
.L920:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L921:
	.byte	5,28,7,0,5,2
	.word	.L132
	.byte	3,213,8,1,5,8,9
	.half	.L504-.L132
	.byte	3,4,1,5,35,9
	.half	.L922-.L504
	.byte	1,5,5,9
	.half	.L923-.L922
	.byte	1,5,39,7,9
	.half	.L924-.L923
	.byte	3,2,1,5,9,9
	.half	.L925-.L924
	.byte	1,7,9
	.half	.L926-.L925
	.byte	1,5,13,9
	.half	.L56-.L926
	.byte	3,19,1,5,62,9
	.half	.L927-.L56
	.byte	1,5,17,9
	.half	.L928-.L927
	.byte	3,1,1,9
	.half	.L929-.L928
	.byte	3,1,1,9
	.half	.L930-.L929
	.byte	3,2,1,5,30,9
	.half	.L931-.L930
	.byte	3,1,1,5,39,9
	.half	.L502-.L931
	.byte	1,5,17,9
	.half	.L932-.L502
	.byte	3,1,1,9
	.half	.L933-.L932
	.byte	3,1,1,5,39,9
	.half	.L505-.L933
	.byte	3,121,1,5,1,9
	.half	.L55-.L505
	.byte	3,10,1,7,9
	.half	.L264-.L55
	.byte	0,1,1
.L919:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_ranges'
.L263:
	.word	-1,.L132,0,.L264-.L132,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_info'
.L265:
	.word	302
	.half	3
	.word	.L266
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L268,.L267
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_GetSeedReturnedWoError',0,1,134,9,27,1,1
	.word	.L134,.L428,.L133
	.byte	4
	.byte	'OpStatus',0,1,134,9,111
	.word	.L367,.L429
	.byte	4
	.byte	'pMsgContext',0,1,135,9,93
	.word	.L360,.L430
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,136,9,102
	.word	.L362,.L431
	.byte	5
	.word	.L134,.L428
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_abbrev'
.L266:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_line'
.L267:
	.word	.L935-.L934
.L934:
	.half	3
	.word	.L937-.L936
.L936:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L937:
	.byte	5,27,7,0,5,2
	.word	.L134
	.byte	3,142,9,1,5,25,9
	.half	.L938-.L134
	.byte	1,5,5,9
	.half	.L939-.L938
	.byte	3,1,1,5,30,9
	.half	.L940-.L939
	.byte	1,5,28,9
	.half	.L941-.L940
	.byte	1,5,16,9
	.half	.L942-.L941
	.byte	3,3,1,5,31,9
	.half	.L943-.L942
	.byte	1,5,29,9
	.half	.L944-.L943
	.byte	1,5,48,9
	.half	.L945-.L944
	.byte	3,1,1,5,70,9
	.half	.L946-.L945
	.byte	1,5,29,9
	.half	.L947-.L946
	.byte	1,5,17,9
	.half	.L948-.L947
	.byte	3,13,1,5,15,9
	.half	.L949-.L948
	.byte	1,5,5,9
	.half	.L950-.L949
	.byte	3,1,1,5,33,9
	.half	.L951-.L950
	.byte	1,5,32,9
	.half	.L952-.L951
	.byte	1,5,1,9
	.half	.L953-.L952
	.byte	3,1,1,7,9
	.half	.L269-.L953
	.byte	0,1,1
.L935:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_ranges'
.L268:
	.word	-1,.L134,0,.L269-.L134,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_info'
.L270:
	.word	269
	.half	3
	.word	.L271
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L273,.L272
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaGenSeed',0,1,174,9,28,1,1
	.word	.L136,.L432,.L135
	.byte	4
	.byte	'pMsgContext',0,1,174,9,102
	.word	.L360,.L433
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,175,9,94
	.word	.L362,.L434
	.byte	5
	.word	.L136,.L432
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_abbrev'
.L271:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_line'
.L272:
	.word	.L955-.L954
.L954:
	.half	3
	.word	.L957-.L956
.L956:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L957:
	.byte	5,28,7,0,5,2
	.word	.L136
	.byte	3,173,9,1,5,5,9
	.half	.L509-.L136
	.byte	3,3,1,5,52,9
	.half	.L958-.L509
	.byte	1,5,51,9
	.half	.L959-.L958
	.byte	1,5,35,9
	.half	.L960-.L959
	.byte	1,5,51,9
	.half	.L961-.L960
	.byte	1,5,32,9
	.half	.L962-.L961
	.byte	1,5,28,9
	.half	.L963-.L962
	.byte	3,1,1,5,5,9
	.half	.L964-.L963
	.byte	1,5,55,9
	.half	.L965-.L964
	.byte	1,5,26,9
	.half	.L507-.L965
	.byte	1,5,5,9
	.half	.L966-.L507
	.byte	3,2,1,5,33,9
	.half	.L967-.L966
	.byte	1,5,31,9
	.half	.L968-.L967
	.byte	1,5,5,9
	.half	.L969-.L968
	.byte	3,2,1,5,57,9
	.half	.L970-.L969
	.byte	1,5,28,9
	.half	.L971-.L970
	.byte	1,5,48,9
	.half	.L972-.L971
	.byte	3,6,1,5,8,9
	.half	.L506-.L972
	.byte	3,14,1,5,5,9
	.half	.L973-.L506
	.byte	1,5,42,7,9
	.half	.L974-.L973
	.byte	3,2,1,5,73,9
	.half	.L975-.L974
	.byte	1,5,92,9
	.half	.L512-.L975
	.byte	1,5,9,9
	.half	.L58-.L512
	.byte	3,6,1,5,42,9
	.half	.L976-.L58
	.byte	3,124,1,5,10,9
	.half	.L977-.L976
	.byte	1,5,31,7,9
	.half	.L978-.L977
	.byte	3,2,1,5,29,9
	.half	.L979-.L978
	.byte	1,5,9,9
	.half	.L980-.L979
	.byte	3,1,1,5,37,9
	.half	.L981-.L980
	.byte	1,5,36,9
	.half	.L982-.L981
	.byte	1,5,34,9
	.half	.L983-.L982
	.byte	3,1,1,5,32,9
	.half	.L984-.L983
	.byte	1,5,36,9
	.half	.L985-.L984
	.byte	3,126,1,5,12,9
	.half	.L60-.L985
	.byte	3,6,1,5,9,9
	.half	.L986-.L60
	.byte	1,5,35,7,9
	.half	.L987-.L986
	.byte	3,3,1,5,33,9
	.half	.L988-.L987
	.byte	1,5,38,9
	.half	.L62-.L988
	.byte	3,2,1,5,36,9
	.half	.L989-.L62
	.byte	1,5,1,9
	.half	.L59-.L989
	.byte	3,2,1,7,9
	.half	.L274-.L59
	.byte	0,1,1
.L955:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_ranges'
.L273:
	.word	-1,.L136,0,.L274-.L136,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_info'
.L275:
	.word	233
	.half	3
	.word	.L276
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L278,.L277
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk',0,1,215,10,32,1,1
	.word	.L138,.L435,.L137
	.byte	4
	.word	.L138,.L435
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_abbrev'
.L276:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_line'
.L277:
	.word	.L991-.L990
.L990:
	.half	3
	.word	.L993-.L992
.L992:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L993:
	.byte	5,5,7,0,5,2
	.word	.L138
	.byte	3,218,10,1,5,62,9
	.half	.L994-.L138
	.byte	1,5,55,9
	.half	.L995-.L994
	.byte	1,5,29,9
	.half	.L996-.L995
	.byte	1,5,9,9
	.half	.L997-.L996
	.byte	3,1,1,5,8,9
	.half	.L998-.L997
	.byte	1,5,68,7,9
	.half	.L999-.L998
	.byte	1,5,41,7,9
	.half	.L63-.L999
	.byte	1,5,9,9
	.half	.L64-.L63
	.byte	3,37,1,5,37,9
	.half	.L1000-.L64
	.byte	1,5,36,9
	.half	.L1001-.L1000
	.byte	1,5,1,9
	.half	.L65-.L1001
	.byte	3,2,1,7,9
	.half	.L279-.L65
	.byte	0,1,1
.L991:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_ranges'
.L278:
	.word	-1,.L138,0,.L279-.L138,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_info'
.L280:
	.word	237
	.half	3
	.word	.L281
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L283,.L282
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed',0,1,147,11,32,1,1
	.word	.L140,.L436,.L139
	.byte	4
	.word	.L140,.L436
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_abbrev'
.L281:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_line'
.L282:
	.word	.L1003-.L1002
.L1002:
	.half	3
	.word	.L1005-.L1004
.L1004:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1005:
	.byte	5,5,7,0,5,2
	.word	.L140
	.byte	3,150,11,1,5,64,9
	.half	.L1006-.L140
	.byte	1,5,57,9
	.half	.L1007-.L1006
	.byte	1,5,29,9
	.half	.L1008-.L1007
	.byte	1,5,9,9
	.half	.L1009-.L1008
	.byte	3,1,1,5,8,9
	.half	.L1010-.L1009
	.byte	1,5,68,7,9
	.half	.L1011-.L1010
	.byte	1,5,41,7,9
	.half	.L66-.L1011
	.byte	1,5,9,9
	.half	.L67-.L66
	.byte	3,37,1,5,37,9
	.half	.L1012-.L67
	.byte	1,5,36,9
	.half	.L1013-.L1012
	.byte	1,5,1,9
	.half	.L68-.L1013
	.byte	3,2,1,7,9
	.half	.L284-.L68
	.byte	0,1,1
.L1003:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_ranges'
.L283:
	.word	-1,.L140,0,.L284-.L140,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_info'
.L285:
	.word	225
	.half	3
	.word	.L286
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L288,.L287
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaStoreDelayCountFalse',0,1,207,11,32,1,1
	.word	.L142,.L437,.L141
	.byte	4
	.word	.L142,.L437
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_abbrev'
.L286:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_line'
.L287:
	.word	.L1015-.L1014
.L1014:
	.half	3
	.word	.L1017-.L1016
.L1016:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1017:
	.byte	5,8,7,0,5,2
	.word	.L142
	.byte	3,209,11,1,5,5,9
	.half	.L1018-.L142
	.byte	1,5,49,7,9
	.half	.L1019-.L1018
	.byte	3,5,1,5,8,9
	.half	.L69-.L1019
	.byte	3,3,1,5,31,9
	.half	.L1020-.L69
	.byte	1,5,5,9
	.half	.L1021-.L1020
	.byte	1,5,49,7,9
	.half	.L1022-.L1021
	.byte	3,5,1,5,1,9
	.half	.L70-.L1022
	.byte	3,3,1,7,9
	.half	.L289-.L70
	.byte	0,1,1
.L1015:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_ranges'
.L288:
	.word	-1,.L142,0,.L289-.L142,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_info'
.L290:
	.word	212
	.half	3
	.word	.L291
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L293,.L292
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaPending',0,1,240,11,33,1,1
	.word	.L144,.L438,.L143
	.byte	4
	.word	.L144,.L438
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_abbrev'
.L291:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_line'
.L292:
	.word	.L1024-.L1023
.L1023:
	.half	3
	.word	.L1026-.L1025
.L1025:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1026:
	.byte	5,5,7,0,5,2
	.word	.L144
	.byte	3,242,11,1,5,53,9
	.half	.L1027-.L144
	.byte	1,5,52,9
	.half	.L1028-.L1027
	.byte	1,5,36,9
	.half	.L1029-.L1028
	.byte	1,5,52,9
	.half	.L1030-.L1029
	.byte	1,5,33,9
	.half	.L1031-.L1030
	.byte	1,5,17,9
	.half	.L1032-.L1031
	.byte	3,1,1,5,5,9
	.half	.L1033-.L1032
	.byte	1,5,75,7,9
	.half	.L1034-.L1033
	.byte	3,127,1,5,41,9
	.half	.L71-.L1034
	.byte	3,12,1,5,1,9
	.half	.L72-.L71
	.byte	3,3,1,7,9
	.half	.L294-.L72
	.byte	0,1,1
.L1024:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_ranges'
.L293:
	.word	-1,.L144,0,.L294-.L144,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_info'
.L295:
	.word	293
	.half	3
	.word	.L296
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L298,.L297
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaCheckData',0,1,143,12,32,1,1
	.word	.L146,.L439,.L145
	.byte	4
	.byte	'OpStatus',0,1,143,12,108
	.word	.L367,.L440
	.byte	4
	.byte	'pMsgContext',0,1,144,12,90
	.word	.L360,.L441
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,145,12,99
	.word	.L362,.L442
	.byte	5
	.word	.L146,.L439
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_abbrev'
.L296:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_line'
.L297:
	.word	.L1036-.L1035
.L1035:
	.half	3
	.word	.L1038-.L1037
.L1037:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1038:
	.byte	5,32,7,0,5,2
	.word	.L146
	.byte	3,142,12,1,5,9,9
	.half	.L515-.L146
	.byte	3,5,1,5,5,9
	.half	.L1039-.L515
	.byte	1,5,49,7,9
	.half	.L1040-.L1039
	.byte	3,3,1,5,9,9
	.half	.L73-.L1040
	.byte	3,3,1,5,5,9
	.half	.L1041-.L73
	.byte	1,5,41,7,9
	.half	.L1042-.L1041
	.byte	3,3,1,5,9,9
	.half	.L74-.L1042
	.byte	3,3,1,5,5,9
	.half	.L1043-.L74
	.byte	1,5,28,7,9
	.half	.L1044-.L1043
	.byte	3,6,1,5,1,9
	.half	.L75-.L1044
	.byte	3,3,1,7,9
	.half	.L299-.L75
	.byte	0,1,1
.L1036:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_ranges'
.L298:
	.word	-1,.L146,0,.L299-.L146,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_info'
.L300:
	.word	244
	.half	3
	.word	.L301
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L303,.L302
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaProcessStCmpKeyOk',0,1,180,12,28,1,1
	.word	.L148,.L443,.L147
	.byte	4
	.byte	'OpStatus',0,1,180,12,112
	.word	.L367,.L444
	.byte	5
	.word	.L148,.L443
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_abbrev'
.L301:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_line'
.L302:
	.word	.L1046-.L1045
.L1045:
	.half	3
	.word	.L1048-.L1047
.L1047:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1048:
	.byte	5,17,7,0,5,2
	.word	.L148
	.byte	3,186,12,1,5,15,9
	.half	.L1049-.L148
	.byte	1,5,5,9
	.half	.L1050-.L1049
	.byte	3,2,1,5,28,9
	.half	.L1051-.L1050
	.byte	1,5,26,9
	.half	.L1052-.L1051
	.byte	1,5,5,9
	.half	.L1053-.L1052
	.byte	3,1,1,5,33,9
	.half	.L1054-.L1053
	.byte	1,5,32,9
	.half	.L1055-.L1054
	.byte	1,5,1,9
	.half	.L1056-.L1055
	.byte	3,9,1,7,9
	.half	.L304-.L1056
	.byte	0,1,1
.L1046:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_ranges'
.L303:
	.word	-1,.L148,0,.L304-.L148,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_info'
.L305:
	.word	258
	.half	3
	.word	.L306
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L308,.L307
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaProcessStCmpKeyFailed',0,1,210,12,28,1,1
	.word	.L150,.L445,.L149
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,211,12,92
	.word	.L362,.L446
	.byte	5
	.word	.L150,.L445
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_abbrev'
.L306:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_line'
.L307:
	.word	.L1058-.L1057
.L1057:
	.half	3
	.word	.L1060-.L1059
.L1059:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1060:
	.byte	5,28,7,0,5,2
	.word	.L150
	.byte	3,209,12,1,5,5,9
	.half	.L520-.L150
	.byte	3,3,1,5,53,9
	.half	.L1061-.L520
	.byte	1,5,52,9
	.half	.L1062-.L1061
	.byte	1,5,36,9
	.half	.L1063-.L1062
	.byte	1,5,52,9
	.half	.L1064-.L1063
	.byte	1,5,33,9
	.half	.L1065-.L1064
	.byte	1,5,27,9
	.half	.L1066-.L1065
	.byte	3,1,1,5,25,9
	.half	.L1067-.L1066
	.byte	1,5,65,9
	.half	.L1068-.L1067
	.byte	3,2,1,5,92,9
	.half	.L1069-.L1068
	.byte	1,5,9,9
	.half	.L1070-.L1069
	.byte	1,5,21,9
	.half	.L1071-.L1070
	.byte	1,5,44,9
	.half	.L1072-.L1071
	.byte	1,5,92,9
	.half	.L1073-.L1072
	.byte	1,5,5,9
	.half	.L1074-.L1073
	.byte	1,5,31,7,9
	.half	.L1075-.L1074
	.byte	3,2,1,5,29,9
	.half	.L1076-.L1075
	.byte	1,5,44,9
	.half	.L76-.L1076
	.byte	3,2,1,5,93,9
	.half	.L1077-.L76
	.byte	1,5,5,9
	.half	.L1078-.L1077
	.byte	1,5,39,7,9
	.half	.L1079-.L1078
	.byte	3,3,1,5,9,9
	.half	.L1080-.L1079
	.byte	1,5,13,7,9
	.half	.L1081-.L1080
	.byte	3,2,1,5,33,9
	.half	.L1082-.L1081
	.byte	1,5,94,9
	.half	.L1083-.L1082
	.byte	3,2,1,5,98,9
	.half	.L1084-.L1083
	.byte	3,1,1,5,33,9
	.half	.L1085-.L1084
	.byte	3,127,1,5,26,9
	.half	.L1086-.L1085
	.byte	3,2,1,5,25,9
	.half	.L1087-.L1086
	.byte	1,5,14,9
	.half	.L1088-.L1087
	.byte	3,1,1,5,45,9
	.half	.L1089-.L1088
	.byte	1,5,42,9
	.half	.L1090-.L1089
	.byte	1,5,68,9
	.half	.L1091-.L1090
	.byte	3,127,1,5,65,9
	.half	.L1092-.L1091
	.byte	3,115,1,5,104,9
	.half	.L1093-.L1092
	.byte	3,9,1,5,70,9
	.half	.L78-.L1093
	.byte	3,11,1,5,68,9
	.half	.L1094-.L78
	.byte	1,5,31,9
	.half	.L79-.L1094
	.byte	3,3,1,5,29,9
	.half	.L1095-.L79
	.byte	1,5,35,9
	.half	.L77-.L1095
	.byte	3,6,1,5,5,9
	.half	.L1096-.L77
	.byte	1,5,25,7,9
	.half	.L1097-.L1096
	.byte	3,3,1,5,24,9
	.half	.L1098-.L1097
	.byte	1,5,47,9
	.half	.L1099-.L1098
	.byte	1,5,9,9
	.half	.L1100-.L1099
	.byte	1,5,44,7,9
	.half	.L1101-.L1100
	.byte	3,3,1,5,35,9
	.half	.L1102-.L1101
	.byte	3,1,1,5,33,9
	.half	.L1103-.L1102
	.byte	1,5,1,9
	.half	.L80-.L1103
	.byte	3,3,1,7,9
	.half	.L309-.L80
	.byte	0,1,1
.L1058:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_ranges'
.L308:
	.word	-1,.L150,0,.L309-.L150,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_info'
.L310:
	.word	256
	.half	3
	.word	.L311
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L313,.L312
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaProcesStCmpKeyNotOk',0,1,139,13,28,1,1
	.word	.L152,.L447,.L151
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,140,13,92
	.word	.L362,.L448
	.byte	5
	.word	.L152,.L447
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_abbrev'
.L311:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_line'
.L312:
	.word	.L1105-.L1104
.L1104:
	.half	3
	.word	.L1107-.L1106
.L1106:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1107:
	.byte	5,8,7,0,5,2
	.word	.L152
	.byte	3,141,13,1,5,5,9
	.half	.L1108-.L152
	.byte	1,5,31,7,9
	.half	.L1109-.L1108
	.byte	3,3,1,5,29,9
	.half	.L1110-.L1109
	.byte	1,5,57,9
	.half	.L1111-.L1110
	.byte	1,5,1,9
	.half	.L83-.L1111
	.byte	3,6,1,7,9
	.half	.L314-.L83
	.byte	0,1,1
.L1105:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_ranges'
.L313:
	.word	-1,.L152,0,.L314-.L152,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_info'
.L315:
	.word	251
	.half	3
	.word	.L316
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L318,.L317
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaProcessService',0,1,163,13,28,1,1
	.word	.L154,.L449,.L153
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,164,13,92
	.word	.L362,.L450
	.byte	5
	.word	.L154,.L449
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_abbrev'
.L316:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_line'
.L317:
	.word	.L1113-.L1112
.L1112:
	.half	3
	.word	.L1115-.L1114
.L1114:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1115:
	.byte	5,8,7,0,5,2
	.word	.L154
	.byte	3,165,13,1,5,5,9
	.half	.L1116-.L154
	.byte	1,5,40,7,9
	.half	.L1117-.L1116
	.byte	3,2,1,5,59,9
	.half	.L1118-.L1117
	.byte	1,5,10,9
	.half	.L84-.L1118
	.byte	3,2,1,5,41,7,9
	.half	.L1119-.L84
	.byte	3,2,1,5,60,9
	.half	.L525-.L1119
	.byte	1,5,36,9
	.half	.L86-.L525
	.byte	3,2,1,5,10,9
	.half	.L1120-.L86
	.byte	1,5,43,7,9
	.half	.L1121-.L1120
	.byte	3,2,1,5,62,9
	.half	.L526-.L1121
	.byte	1,5,9,9
	.half	.L88-.L526
	.byte	3,4,1,5,37,9
	.half	.L1122-.L88
	.byte	1,5,36,9
	.half	.L1123-.L1122
	.byte	1,5,1,9
	.half	.L85-.L1123
	.byte	3,2,1,7,9
	.half	.L319-.L85
	.byte	0,1,1
.L1113:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_ranges'
.L318:
	.word	-1,.L154,0,.L319-.L154,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_info'
.L320:
	.word	299
	.half	3
	.word	.L321
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L323,.L322
	.byte	2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_SecaStateProcessing',0,1,194,13,28,1,1
	.word	.L156,.L451,.L155
	.byte	4
	.byte	'OpStatus',0,1,194,13,110
	.word	.L367,.L452
	.byte	4
	.byte	'pMsgContext',0,1,195,13,90
	.word	.L360,.L453
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,196,13,99
	.word	.L362,.L454
	.byte	5
	.word	.L156,.L451
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_abbrev'
.L321:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_line'
.L322:
	.word	.L1125-.L1124
.L1124:
	.half	3
	.word	.L1127-.L1126
.L1126:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0,0,0,0,0
.L1127:
	.byte	5,28,7,0,5,2
	.word	.L156
	.byte	3,193,13,1,5,10,9
	.half	.L531-.L156
	.byte	3,5,1,5,5,9
	.half	.L1128-.L531
	.byte	1,5,46,7,9
	.half	.L1129-.L1128
	.byte	3,2,1,5,10,9
	.half	.L90-.L1129
	.byte	3,3,1,5,5,9
	.half	.L1130-.L90
	.byte	1,5,52,7,9
	.half	.L1131-.L1130
	.byte	3,2,1,5,10,9
	.half	.L91-.L1131
	.byte	3,3,1,5,5,9
	.half	.L1132-.L91
	.byte	1,5,36,7,9
	.half	.L1133-.L1132
	.byte	3,2,1,5,1,9
	.half	.L92-.L1133
	.byte	3,2,1,7,9
	.half	.L324-.L92
	.byte	0,1,1
.L1125:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_ranges'
.L323:
	.word	-1,.L156,0,.L324-.L156,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_DspSecTabIdx_u8')
	.sect	'.debug_info'
.L325:
	.word	190
	.half	3
	.word	.L326
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_DspSecTabIdx_u8',0,8,9,22
	.word	.L357
	.byte	1,5,3
	.word	Dcm_DspSecTabIdx_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DspSecTabIdx_u8')
	.sect	'.debug_abbrev'
.L326:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_DspSecAccType_u8')
	.sect	'.debug_info'
.L327:
	.word	191
	.half	3
	.word	.L328
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_DspSecAccType_u8',0,8,10,22
	.word	.L357
	.byte	1,5,3
	.word	Dcm_DspSecAccType_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DspSecAccType_u8')
	.sect	'.debug_abbrev'
.L328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_stCmpKey_u8')
	.sect	'.debug_info'
.L329:
	.word	189
	.half	3
	.word	.L330
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_stCmpKey_u8',0,8,11,30
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_stCmpKey_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_stCmpKey_u8')
	.sect	'.debug_abbrev'
.L330:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_dataSecLevel_u8')
	.sect	'.debug_info'
.L331:
	.word	193
	.half	3
	.word	.L332
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_dataSecLevel_u8',0,8,12,42
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_dataSecLevel_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_dataSecLevel_u8')
	.sect	'.debug_abbrev'
.L332:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_idxSecTab_qu8')
	.sect	'.debug_info'
.L333:
	.word	191
	.half	3
	.word	.L334
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_idxSecTab_qu8',0,8,18,35
	.word	.L387
	.byte	5,3
	.word	Dcm_Prv_idxSecTab_qu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_idxSecTab_qu8')
	.sect	'.debug_abbrev'
.L334:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ptrSecurityConfig_p')
	.sect	'.debug_info'
.L335:
	.word	197
	.half	3
	.word	.L336
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_ptrSecurityConfig_p',0,8,20,62
	.word	.L455
	.byte	5,3
	.word	Dcm_Prv_ptrSecurityConfig_p
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ptrSecurityConfig_p')
	.sect	'.debug_abbrev'
.L336:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ptrSecaFnc_p')
	.sect	'.debug_info'
.L337:
	.word	190
	.half	3
	.word	.L338
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_ptrSecaFnc_p',0,8,21,49
	.word	.L456
	.byte	5,3
	.word	Dcm_Prv_ptrSecaFnc_p
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ptrSecaFnc_p')
	.sect	'.debug_abbrev'
.L338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_dataSecAccType_u8')
	.sect	'.debug_info'
.L339:
	.word	195
	.half	3
	.word	.L340
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_dataSecAccType_u8',0,8,24,49
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_dataSecAccType_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_dataSecAccType_u8')
	.sect	'.debug_abbrev'
.L340:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_dataSubFunc_u8')
	.sect	'.debug_info'
.L341:
	.word	192
	.half	3
	.word	.L342
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_dataSubFunc_u8',0,8,25,49
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_dataSubFunc_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_dataSubFunc_u8')
	.sect	'.debug_abbrev'
.L342:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_nrSeedLen_u32')
	.sect	'.debug_info'
.L343:
	.word	191
	.half	3
	.word	.L344
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_nrSeedLen_u32',0,8,26,49
	.word	.L374
	.byte	5,3
	.word	Dcm_Prv_nrSeedLen_u32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_nrSeedLen_u32')
	.sect	'.debug_abbrev'
.L344:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_substSeca_en')
	.sect	'.debug_info'
.L345:
	.word	190
	.half	3
	.word	.L346
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_substSeca_en',0,8,27,49
	.word	.L457
	.byte	5,3
	.word	Dcm_Prv_substSeca_en
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_substSeca_en')
	.sect	'.debug_abbrev'
.L346:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_dataRetGetSeed_u8')
	.sect	'.debug_info'
.L347:
	.word	195
	.half	3
	.word	.L348
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_dataRetGetSeed_u8',0,8,28,49
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_dataRetGetSeed_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_dataRetGetSeed_u8')
	.sect	'.debug_abbrev'
.L348:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_dataRetValue_u8')
	.sect	'.debug_info'
.L349:
	.word	193
	.half	3
	.word	.L350
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_dataRetValue_u8',0,8,30,49
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_dataRetValue_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_dataRetValue_u8')
	.sect	'.debug_abbrev'
.L350:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_secaServRetValue_u8')
	.sect	'.debug_info'
.L351:
	.word	197
	.half	3
	.word	.L352
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_secaServRetValue_u8',0,8,31,49
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_secaServRetValue_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_secaServRetValue_u8')
	.sect	'.debug_abbrev'
.L352:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_nrDelay_u32')
	.sect	'.debug_info'
.L353:
	.word	189
	.half	3
	.word	.L354
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_nrDelay_u32',0,8,33,49
	.word	.L374
	.byte	5,3
	.word	Dcm_Prv_nrDelay_u32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_nrDelay_u32')
	.sect	'.debug_abbrev'
.L354:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_flgApplFuncCall_b')
	.sect	'.debug_info'
.L355:
	.word	195
	.half	3
	.word	.L356
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Seca.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L161
	.byte	3
	.byte	'Dcm_Prv_flgApplFuncCall_b',0,8,44,35
	.word	.L357
	.byte	5,3
	.word	Dcm_Prv_flgApplFuncCall_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_flgApplFuncCall_b')
	.sect	'.debug_abbrev'
.L356:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L158,0,.L536-.L158
	.half	2
	.byte	138,0
	.word	.L536-.L158,.L358-.L158
	.half	2
	.byte	138,8
	.word	.L358-.L158,.L358-.L158
	.half	2
	.byte	138,0
	.word	0,0
.L359:
	.word	-1,.L158,0,.L537-.L158
	.half	1
	.byte	84
	.word	.L93-.L158,.L540-.L158
	.half	1
	.byte	84
	.word	0,0
.L363:
	.word	-1,.L158,0,.L537-.L158
	.half	1
	.byte	101
	.word	.L539-.L158,.L358-.L158
	.half	1
	.byte	109
	.word	.L93-.L158,.L541-.L158
	.half	1
	.byte	101
	.word	.L543-.L158,.L540-.L158
	.half	1
	.byte	102
	.word	0,0
.L364:
	.word	-1,.L158,.L544-.L158,.L358-.L158
	.half	1
	.byte	82
	.word	0,0
.L361:
	.word	-1,.L158,0,.L537-.L158
	.half	1
	.byte	100
	.word	.L538-.L158,.L537-.L158
	.half	1
	.byte	98
	.word	.L93-.L158,.L542-.L158
	.half	1
	.byte	100
	.word	.L93-.L158,.L540-.L158
	.half	1
	.byte	98
	.word	.L541-.L158,.L540-.L158
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_loc'
.L109:
	.word	-1,.L110,0,.L393-.L110
	.half	2
	.byte	138,0
	.word	0,0
.L395:
	.word	-1,.L110,0,.L471-.L110
	.half	1
	.byte	101
	.word	.L474-.L110,.L28-.L110
	.half	1
	.byte	102
	.word	0,0
.L396:
	.word	-1,.L110,.L475-.L110,.L476-.L110
	.half	1
	.byte	95
	.word	.L27-.L110,.L28-.L110
	.half	1
	.byte	95
	.word	0,0
.L394:
	.word	-1,.L110,0,.L472-.L110
	.half	1
	.byte	100
	.word	.L473-.L110,.L393-.L110
	.half	1
	.byte	111
	.word	.L471-.L110,.L28-.L110
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L102,0,.L459-.L102
	.half	2
	.byte	138,0
	.word	.L459-.L102,.L376-.L102
	.half	2
	.byte	138,8
	.word	.L376-.L102,.L376-.L102
	.half	2
	.byte	138,0
	.word	0,0
.L379:
	.word	-1,.L102,0,.L376-.L102
	.half	2
	.byte	145,120
	.word	0,0
.L378:
	.word	-1,.L102,0,.L460-.L102
	.half	1
	.byte	101
	.word	.L463-.L102,.L464-.L102
	.half	1
	.byte	111
	.word	.L4-.L102,.L7-.L102
	.half	1
	.byte	111
	.word	0,0
.L380:
	.word	-1,.L102,.L460-.L102,.L465-.L102
	.half	1
	.byte	82
	.word	.L5-.L102,.L6-.L102
	.half	1
	.byte	82
	.word	.L4-.L102,.L7-.L102
	.half	1
	.byte	82
	.word	0,0
.L377:
	.word	-1,.L102,0,.L461-.L102
	.half	1
	.byte	100
	.word	.L462-.L102,.L376-.L102
	.half	1
	.byte	108
	.word	.L466-.L102,.L465-.L102
	.half	1
	.byte	101
	.word	.L467-.L102,.L6-.L102
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_loc'
.L131:
	.word	-1,.L132,0,.L425-.L132
	.half	2
	.byte	138,0
	.word	0,0
.L427:
	.word	-1,.L132,0,.L502-.L132
	.half	1
	.byte	101
	.word	.L504-.L132,.L505-.L132
	.half	1
	.byte	102
	.word	0,0
.L426:
	.word	-1,.L132,0,.L503-.L132
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_loc'
.L133:
	.word	-1,.L134,0,.L428-.L134
	.half	2
	.byte	138,0
	.word	0,0
.L429:
	.word	-1,.L134,0,.L428-.L134
	.half	1
	.byte	100
	.word	0,0
.L431:
	.word	-1,.L134,0,.L428-.L134
	.half	1
	.byte	102
	.word	0,0
.L430:
	.word	-1,.L134,0,.L428-.L134
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_loc'
.L97:
	.word	-1,.L98,0,.L366-.L98
	.half	2
	.byte	138,0
	.word	0,0
.L368:
	.word	-1,.L98,0,.L366-.L98
	.half	1
	.byte	100
	.word	0,0
.L370:
	.word	-1,.L98,0,.L366-.L98
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_loc'
.L99:
	.word	-1,.L100,0,.L371-.L100
	.half	2
	.byte	138,0
	.word	0,0
.L372:
	.word	-1,.L100,0,.L371-.L100
	.half	1
	.byte	100
	.word	0,0
.L375:
	.word	-1,.L100,.L458-.L100,.L371-.L100
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L373:
	.word	-1,.L100,0,.L371-.L100
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L108,0,.L389-.L108
	.half	2
	.byte	138,0
	.word	0,0
.L390:
	.word	-1,.L108,0,.L389-.L108
	.half	1
	.byte	100
	.word	0,0
.L392:
	.word	-1,.L108,0,.L389-.L108
	.half	1
	.byte	102
	.word	0,0
.L391:
	.word	-1,.L108,0,.L389-.L108
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_loc'
.L145:
	.word	-1,.L146,0,.L439-.L146
	.half	2
	.byte	138,0
	.word	0,0
.L440:
	.word	-1,.L146,0,.L73-.L146
	.half	1
	.byte	100
	.word	0,0
.L442:
	.word	-1,.L146,0,.L73-.L146
	.half	1
	.byte	102
	.word	.L515-.L146,.L439-.L146
	.half	1
	.byte	108
	.word	.L517-.L146,.L74-.L146
	.half	1
	.byte	101
	.word	0,0
.L441:
	.word	-1,.L146,0,.L73-.L146
	.half	1
	.byte	101
	.word	.L514-.L146,.L439-.L146
	.half	1
	.byte	111
	.word	.L516-.L146,.L74-.L146
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_loc'
.L115:
	.word	-1,.L116,0,.L402-.L116
	.half	2
	.byte	138,0
	.word	0,0
.L404:
	.word	-1,.L116,0,.L479-.L116
	.half	1
	.byte	101
	.word	0,0
.L403:
	.word	-1,.L116,0,.L480-.L116
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_loc'
.L129:
	.word	-1,.L130,0,.L421-.L130
	.half	2
	.byte	138,0
	.word	0,0
.L422:
	.word	-1,.L130,0,.L492-.L130
	.half	1
	.byte	100
	.word	.L495-.L130,.L421-.L130
	.half	1
	.byte	108
	.word	.L499-.L130,.L54-.L130
	.half	1
	.byte	100
	.word	0,0
.L424:
	.word	-1,.L130,0,.L493-.L130
	.half	1
	.byte	102
	.word	.L497-.L130,.L421-.L130
	.half	1
	.byte	110
	.word	.L493-.L130,.L498-.L130
	.half	1
	.byte	101
	.word	.L501-.L130,.L54-.L130
	.half	1
	.byte	102
	.word	0,0
.L423:
	.word	-1,.L130,0,.L494-.L130
	.half	1
	.byte	101
	.word	.L496-.L130,.L421-.L130
	.half	1
	.byte	109
	.word	.L494-.L130,.L498-.L130
	.half	1
	.byte	100
	.word	.L500-.L130,.L54-.L130
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_loc'
.L121:
	.word	-1,.L122,0,.L411-.L122
	.half	2
	.byte	138,0
	.word	0,0
.L412:
	.word	-1,.L122,0,.L484-.L122
	.half	1
	.byte	100
	.word	.L485-.L122,.L411-.L122
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_loc'
.L125:
	.word	-1,.L126,0,.L415-.L126
	.half	2
	.byte	138,0
	.word	0,0
.L416:
	.word	-1,.L126,0,.L415-.L126
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_loc'
.L123:
	.word	-1,.L124,0,.L413-.L124
	.half	2
	.byte	138,0
	.word	0,0
.L414:
	.word	-1,.L124,0,.L413-.L124
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_loc'
.L113:
	.word	-1,.L114,0,.L400-.L114
	.half	2
	.byte	138,0
	.word	0,0
.L401:
	.word	-1,.L114,0,.L400-.L114
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_loc'
.L127:
	.word	-1,.L128,0,.L417-.L128
	.half	2
	.byte	138,0
	.word	0,0
.L418:
	.word	-1,.L128,0,.L486-.L128
	.half	1
	.byte	100
	.word	.L44-.L128,.L487-.L128
	.half	1
	.byte	100
	.word	.L46-.L128,.L489-.L128
	.half	1
	.byte	100
	.word	.L48-.L128,.L490-.L128
	.half	1
	.byte	100
	.word	.L50-.L128,.L491-.L128
	.half	1
	.byte	100
	.word	0,0
.L420:
	.word	-1,.L128,0,.L486-.L128
	.half	1
	.byte	102
	.word	.L44-.L128,.L488-.L128
	.half	1
	.byte	102
	.word	.L487-.L128,.L488-.L128
	.half	1
	.byte	100
	.word	.L46-.L128,.L489-.L128
	.half	1
	.byte	102
	.word	.L48-.L128,.L490-.L128
	.half	1
	.byte	102
	.word	.L50-.L128,.L45-.L128
	.half	1
	.byte	102
	.word	.L491-.L128,.L45-.L128
	.half	1
	.byte	100
	.word	0,0
.L419:
	.word	-1,.L128,0,.L486-.L128
	.half	1
	.byte	101
	.word	.L44-.L128,.L488-.L128
	.half	1
	.byte	101
	.word	.L46-.L128,.L489-.L128
	.half	1
	.byte	101
	.word	.L48-.L128,.L490-.L128
	.half	1
	.byte	101
	.word	.L50-.L128,.L45-.L128
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_loc'
.L135:
	.word	-1,.L136,0,.L432-.L136
	.half	2
	.byte	138,0
	.word	0,0
.L434:
	.word	-1,.L136,0,.L506-.L136
	.half	1
	.byte	101
	.word	.L509-.L136,.L432-.L136
	.half	1
	.byte	109
	.word	.L513-.L136,.L512-.L136
	.half	1
	.byte	102
	.word	0,0
.L433:
	.word	-1,.L136,0,.L507-.L136
	.half	1
	.byte	100
	.word	.L508-.L136,.L432-.L136
	.half	1
	.byte	108
	.word	.L510-.L136,.L506-.L136
	.half	1
	.byte	100
	.word	.L511-.L136,.L512-.L136
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_loc'
.L143:
	.word	-1,.L144,0,.L438-.L144
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_loc'
.L151:
	.word	-1,.L152,0,.L447-.L152
	.half	2
	.byte	138,0
	.word	0,0
.L448:
	.word	-1,.L152,0,.L447-.L152
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_loc'
.L153:
	.word	-1,.L154,0,.L449-.L154
	.half	2
	.byte	138,0
	.word	0,0
.L450:
	.word	-1,.L154,0,.L524-.L154
	.half	1
	.byte	100
	.word	.L84-.L154,.L525-.L154
	.half	1
	.byte	100
	.word	.L86-.L154,.L526-.L154
	.half	1
	.byte	100
	.word	.L88-.L154,.L85-.L154
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_loc'
.L149:
	.word	-1,.L150,0,.L518-.L150
	.half	2
	.byte	138,0
	.word	.L518-.L150,.L445-.L150
	.half	2
	.byte	138,8
	.word	.L445-.L150,.L445-.L150
	.half	2
	.byte	138,0
	.word	0,0
.L446:
	.word	-1,.L150,0,.L519-.L150
	.half	1
	.byte	100
	.word	.L520-.L150,.L445-.L150
	.half	2
	.byte	145,124
	.word	.L519-.L150,.L521-.L150
	.half	1
	.byte	111
	.word	.L78-.L150,.L79-.L150
	.half	1
	.byte	111
	.word	.L522-.L150,.L77-.L150
	.half	1
	.byte	111
	.word	.L523-.L150,.L80-.L150
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_loc'
.L147:
	.word	-1,.L148,0,.L443-.L148
	.half	2
	.byte	138,0
	.word	0,0
.L444:
	.word	-1,.L148,0,.L443-.L148
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_loc'
.L111:
	.word	-1,.L112,0,.L397-.L112
	.half	2
	.byte	138,0
	.word	0,0
.L399:
	.word	-1,.L112,0,.L477-.L112
	.half	1
	.byte	101
	.word	.L29-.L112,.L478-.L112
	.half	1
	.byte	101
	.word	.L31-.L112,.L30-.L112
	.half	1
	.byte	101
	.word	0,0
.L398:
	.word	-1,.L112,0,.L477-.L112
	.half	1
	.byte	100
	.word	.L29-.L112,.L478-.L112
	.half	1
	.byte	100
	.word	.L31-.L112,.L30-.L112
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_loc'
.L105:
	.word	-1,.L106,0,.L384-.L106
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L106,0,.L468-.L106
	.half	1
	.byte	101
	.word	.L18-.L106,.L19-.L106
	.half	1
	.byte	101
	.word	0,0
.L388:
	.word	-1,.L106,.L469-.L106,.L470-.L106
	.half	1
	.byte	95
	.word	0,0
.L385:
	.word	-1,.L106,0,.L468-.L106
	.half	1
	.byte	100
	.word	.L18-.L106,.L19-.L106
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_loc'
.L155:
	.word	-1,.L156,0,.L451-.L156
	.half	2
	.byte	138,0
	.word	0,0
.L452:
	.word	-1,.L156,0,.L527-.L156
	.half	1
	.byte	100
	.word	.L529-.L156,.L451-.L156
	.half	1
	.byte	111
	.word	.L532-.L156,.L91-.L156
	.half	1
	.byte	100
	.word	0,0
.L454:
	.word	-1,.L156,0,.L528-.L156
	.half	1
	.byte	102
	.word	.L531-.L156,.L451-.L156
	.half	1
	.byte	109
	.word	.L528-.L156,.L90-.L156
	.half	1
	.byte	101
	.word	.L534-.L156,.L91-.L156
	.half	1
	.byte	102
	.word	.L535-.L156,.L92-.L156
	.half	1
	.byte	100
	.word	0,0
.L453:
	.word	-1,.L156,0,.L527-.L156
	.half	1
	.byte	101
	.word	.L530-.L156,.L451-.L156
	.half	1
	.byte	108
	.word	.L527-.L156,.L90-.L156
	.half	1
	.byte	100
	.word	.L533-.L156,.L91-.L156
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_loc'
.L141:
	.word	-1,.L142,0,.L437-.L142
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_loc'
.L139:
	.word	-1,.L140,0,.L436-.L140
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_loc'
.L137:
	.word	-1,.L138,0,.L435-.L138
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_loc'
.L119:
	.word	-1,.L120,0,.L407-.L120
	.half	2
	.byte	138,0
	.word	0,0
.L408:
	.word	-1,.L120,0,.L481-.L120
	.half	1
	.byte	100
	.word	.L482-.L120,.L407-.L120
	.half	1
	.byte	108
	.word	.L483-.L120,.L37-.L120
	.half	1
	.byte	100
	.word	0,0
.L410:
	.word	-1,.L120,0,.L481-.L120
	.half	1
	.byte	102
	.word	0,0
.L409:
	.word	-1,.L120,0,.L481-.L120
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_loc'
.L117:
	.word	-1,.L118,0,.L405-.L118
	.half	2
	.byte	138,0
	.word	0,0
.L406:
	.word	-1,.L118,0,.L405-.L118
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_loc'
.L103:
	.word	-1,.L104,0,.L381-.L104
	.half	2
	.byte	138,0
	.word	0,0
.L383:
	.word	-1,.L104,0,.L9-.L104
	.half	1
	.byte	101
	.word	0,0
.L382:
	.word	-1,.L104,0,.L9-.L104
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_loc'
.L159:
	.word	-1,.L160,0,.L365-.L160
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1134:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_NewSecurityLevelToUnlock')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L98,.L366-.L98
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ReqSecIsCurrentSecurityLevel')
	.sect	'.debug_frame'
	.word	20
	.word	.L1134,.L100,.L371-.L100
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_CurrentSecurityLevel')
	.sect	'.debug_frame'
	.word	36
	.word	.L1134,.L102,.L376-.L102
	.byte	4
	.word	(.L459-.L102)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L376-.L459)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecurityLevelConfigured')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L104,.L381-.L104
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaSeedRequest')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L106,.L384-.L106
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ReqSecaLvlConfigured')
	.sect	'.debug_frame'
	.word	16
	.word	.L1134,.L108,.L389-.L108
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ChkForReqSecaLvl')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L110,.L393-.L110
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaRequestState')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L112,.L397-.L112
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKeyPnding')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L114,.L400-.L114
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCheckdataStValidKeyChk')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L116,.L402-.L116
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaValidKeyNotificationToAppIsOk')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L118,.L405-.L118
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaUnlockSecurityLvl')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L120,.L407-.L120
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKeyFailed')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L122,.L411-.L122
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKeyNotOk')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L124,.L413-.L124
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKeyNegResp')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L126,.L415-.L126
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKeyStatusChk')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L128,.L417-.L128
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCmpKey')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L130,.L421-.L130
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_GenerateSeedAsynchFnc')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L132,.L425-.L132
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_GetSeedReturnedWoError')
	.sect	'.debug_frame'
	.word	16
	.word	.L1134,.L134,.L428-.L134
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaGenSeed')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L136,.L432-.L136
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyOk')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L138,.L435-.L138
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalseCmpKeyFailed')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L140,.L436-.L140
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaStoreDelayCountFalse')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L142,.L437-.L142
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaPending')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L144,.L438-.L144
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaCheckData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L146,.L439-.L146
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyOk')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L148,.L443-.L148
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaProcessStCmpKeyFailed')
	.sect	'.debug_frame'
	.word	36
	.word	.L1134,.L150,.L445-.L150
	.byte	4
	.word	(.L518-.L150)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L445-.L518)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaProcesStCmpKeyNotOk')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L152,.L447-.L152
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaProcessService')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L154,.L449-.L154
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SecaStateProcessing')
	.sect	'.debug_frame'
	.word	12
	.word	.L1134,.L156,.L451-.L156
	.sdecl	'.debug_frame',debug,cluster('Dcm_DcmSecurityAccess')
	.sect	'.debug_frame'
	.word	36
	.word	.L1134,.L158,.L358-.L158
	.byte	4
	.word	(.L536-.L158)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L358-.L536)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_ResetAccessType')
	.sect	'.debug_frame'
	.word	24
	.word	.L1134,.L160,.L365-.L160
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1821  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1822  #if(DCM_CFG_DSP_SECA_STORESEED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1823  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1824   ***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1825  *Function name    : Dcm_Dsp_SecaClearSeed
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1826  *Syntax           : Dcm_Dsp_SecaClearSeed(void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1827  *Description      : This function clears the stored seed for all security levels.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1828  *Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1829  *Return value     : None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1830  ************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1831   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1832  FUNC (void,DCM_CODE) Dcm_Dsp_SecaClearSeed (void)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1833  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1834      VAR (uint8_least,AUTOMATIC) idxSecTab_qu8;  /* Local variable to iterate through the security table */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1835      VAR (uint32,AUTOMATIC) SeedIdx_u32;  /* Local variable to iterate through the seed buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1836      VAR (uint32,AUTOMATIC) Seedlen_u32;  /* Local variable to iterate through the seed buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1837      for (idxSecTab_qu8=0;idxSecTab_qu8 < DCM_CFG_DSP_NUMSECURITY; idxSecTab_qu8++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1838      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1839          /* Obtain the seed length from the security level configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1840          Seedlen_u32 = Dcm_Dsp_Security[idxSecTab_qu8].Seed_size_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1841          /* Loop for the seed size for this Access Type */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1842          for (SeedIdx_u32=0x0; (SeedIdx_u32 < Seedlen_u32); SeedIdx_u32++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1843          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1844              /* Store the seed for use in Request KEY state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1845              Dcm_Dsp_Seca[idxSecTab_qu8].SeedBuff[SeedIdx_u32] = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1846          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1847      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1848  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1849  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1850  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1851  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1852  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1853  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1854  #endif /*( DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF ) && ( DCM_CFG_DSP_SECURITYACCESS_ENABLED != DCM_CFG_OFF )*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Seca.c	  1855  

	; Module end
