	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc12624a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds_Iocbi.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c'

	
$TC16X
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_Dsp_IOCBI_Ini',code,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_Dsp_IOCBI_Ini'
	.align	2
	
	.global	Dcm_Dsp_IOCBI_Ini

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     1  /* BASDKey_start */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     3  /* BASDKey_end */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     4  /* Administrative Information (automatically filled in)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     5   * $Domain____:BASD$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     6   * $Namespace_:\Comp\Dcm$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     7   * $Class_____:C$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     8   * $Name______:DcmDspUds_Iocbi$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	     9   * $Variant___:AR40.11.0.0$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    10   * $Revision__:1$
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    11   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    12   </BASDKey>*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    13  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    14  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    15   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    16   * Includes
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    17   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    18   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    19  #include "DcmDspUds_Iocbi_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    20  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    21  #if(DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_IOCBI_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    22  #include "DcmDspUds_Iocbi_Priv.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    23  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    24  /*
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    25   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    26   * Globals
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    27   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    28   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    29  /* Index of the requested DID in the array Dcm_DspUDS_IOCBI_DIDs_a */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    30  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    31  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    32  /* State machine control variable for IOCBI service */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    33  static VAR(Dcm_DspIOCBIStates_ten, DCM_VAR) Dcm_stDspIocbiState_en;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    34  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    35  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    36  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    37  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    38  static VAR(uint8, DCM_VAR) Dcm_dataDspIocbiCtrlParam_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    39  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    40  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    41  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    42  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    43  static VAR(Dcm_OpStatusType, DCM_VAR) Dcm_stDspIocbiOpStatus_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    44  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    45  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    46  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    47  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    48  static VAR (Dcm_DIDIndexType_tst,DCM_VAR) s_Dcm_idxIocbiDidIndexType_st; /*Store the index of DID of either Dcm_DidConfig or Dcm_DIDRangeCOnfig structure*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    49  static VAR (uint16,DCM_VAR) s_ActiveDid_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    50  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    51  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    52  #define DCM_START_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    53  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    54  VAR (uint16,DCM_VAR) Dcm_ReadSignalLength_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    55  #define DCM_STOP_SEC_VAR_CLEARED_16 /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    56  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    57  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    58  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    59  static VAR(boolean, DCM_VAR) s_IsIOCBISubfuncCalled_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    60  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    61  static VAR (boolean,DCM_VAR) s_IocbiRteCallPlaced_b; /* Variable to hold whether RTE call is placed for async client server*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    62  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    63  #if (DCM_CFG_DSP_READ_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    64  static VAR (boolean,DCM_VAR) s_DcmReadLengthRteCallPlaced_b; /* Variable to indicate whether Rte_Call API is invoked for ReadLength call */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    65  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    66  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    67  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    68  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    69   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    70   Array for storing Active IOCBI DIDs and their active status
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    71   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    72   **/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    73  #if(DCM_CFG_NUM_IOCBI_DIDS != 0x0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    74  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    75  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    76  VAR(Dcm_Dsp_IocbiStatusType_tst,DCM_VAR) DcmDsp_IocbiStatus_array[DCM_CFG_NUM_IOCBI_DIDS];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    77  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    78  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    79  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    80  /* Length of Control option record */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    81  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    82  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    83  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    84  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    85   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    86   * Dcm_Dsp_IOCBI_Ini :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    87   *  This function initializes the Input Output Control by Identifier Service to DCM_IOCBI_IDLE.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    88   *  This function has to be called by DSLDSD during a protocol start and before any service request.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    89   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    90   * \param           :None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    91   * \return          :None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    92   * \retval          :Not Applicable
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    93   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    94   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    95   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    96   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    97  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    98  FUNC(void,DCM_CODE) Dcm_Dsp_IOCBI_Ini(void)
; Function Dcm_Dsp_IOCBI_Ini
.L204:
Dcm_Dsp_IOCBI_Ini:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	    99  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   100      VAR(Dcm_NegativeResponseCodeType,AUTOMATIC) dataNegResCode_u8; /* Negative response code indicator */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   101      VAR(Std_ReturnType,AUTOMATIC) dataRetIocbiFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   102      VAR(uint16_least,AUTOMATIC) idxIocbiIndex_u16; /*Index to loop through the IOCBI status array DcmDsp_IocbiStatus_array*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   103      P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrDidConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   104      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   105      P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrIOSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   106  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   107  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   108      P2CONST(Dcm_ExtendedDIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidExtendedConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   109  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   110  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   111      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA) ptrIOCBIFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   112      VAR(uint16_least ,AUTOMATIC) idxDidSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   113  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   114  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   115      VAR(uint8 ,AUTOMATIC) ControlMask_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   116      VAR(uint16 ,AUTOMATIC) ControlMask_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   117      VAR(uint32 ,AUTOMATIC) ControlMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   118      ControlMask_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   119      ControlMask_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   120      ControlMask_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   121  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   122  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   123      idxDidSignal_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   124  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   125      /*Initialising local variables*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   126      dataNegResCode_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   127      dataRetIocbiFunc_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   128      ptrDidConfig = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   129      ptrSigConfig = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   130      ptrIOSigConfig = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   131      ptrIOCBIFnc = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   132  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   133  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   134      /* To call cancellation of SWCD operation in case API was called with Opstatus as DCM_PENDING */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   135  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   136      if (Dcm_stDspIocbiOpStatus_u8 == DCM_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   137      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   138          ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   139          ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   140          ptrIOSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   141          ptrDidExtendedConfig = ptrDidConfig->adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   142  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   143          s_ActiveDid_u16 = ptrDidConfig->dataDid_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   144          if ((ptrSigConfig->idxDcmDspControlInfo_u16 > 0) && (ptrIOSigConfig->idxDcmDspIocbiInfo_u16 > 0))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   145          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   146              /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   147              s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   148  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   149              if((Dcm_dataDspIocbiCtrlParam_u8 == DCM_IOCBI_SHORTTERMADJUSTMENT) && ((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x08u)==0x08u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   150              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   151                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrShortTermAdjustment_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   152                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   153                  if((ptrIOCBIFnc!= NULL_PTR) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   154                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   155  #if(DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   156                      if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   157                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   158                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   159                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   160                              /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   161                              /* Call the Rte_Call API with In and Inout parameter to cancel the ongoing operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   162                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   163                              dataRetIocbiFunc_u8=(*(ShortTermAdjustment9_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   164                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   165                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   166                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   167  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   168                              /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   169                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   170                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   171                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   172                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   173                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   174                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment10_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   175                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   176                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   177                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   178                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   179                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   180                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   181                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment11_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   182                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   183                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   184                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   185                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   186                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   187                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   188                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment12_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   189                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   190  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   191                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   192                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   193                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   194  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   195                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   196                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   197                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   198                              /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   199                              /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   200                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   201                          dataRetIocbiFunc_u8=(*(ShortTermAdjustment2_pfct)(ptrIOCBIFnc))  (NULL_PTR,DCM_CANCEL, &dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   202                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   203                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   204                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   205  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   206                              /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   207                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   208                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   209                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   210                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   211                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   212                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment6_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u8,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   213                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   214                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   215                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   216                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   217                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   218                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   219                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment7_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u16,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   220                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   221                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   222                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   223                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   224                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   225                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   226                                  dataRetIocbiFunc_u8=(*(ShortTermAdjustment8_pfct)(ptrIOCBIFnc)) (NULL_PTR,DCM_CANCEL, ControlMask_u32,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   227                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   228  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   229                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   230                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   231                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   232              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   233  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   234  #if(DCM_CFG_DSP_FREEZECURRENTSTATE_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   235              if((Dcm_dataDspIocbiCtrlParam_u8 == DCM_IOCBI_FREEZECURRENTSTATE) && ((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x04u)==0x04u ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   236              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   237                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrFreezeCurrentState_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   238                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   239                  if((ptrIOCBIFnc != NULL_PTR) &&  ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   240                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   241  #if(DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   242                      if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   243                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   244                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   245                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   246                              /* Freeze current state was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   247                              /* Invoke the Generated Rte_Call API to cancel the pending operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   248                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   249                              dataRetIocbiFunc_u8=(*(FreezeCurrentState9_pfct)(ptrIOCBIFnc)) (DCM_CANCEL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   250                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   251                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   252                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   253  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   254                              /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   255                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   256                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   257                                  /* Freeze current state was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   258                                  /* Invoke the Generated Rte_Call API to cancel the pending operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   259                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   260                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState10_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   261                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   262                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   263                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   264                                  /* Freeze current state was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   265                                  /* Invoke the Generated Rte_Call API to cancel the pending operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   266                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   267                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState11_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   268                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   269                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   270                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   271                                  /* Freeze current state was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   272                                  /* Invoke the Generated Rte_Call API to cancel the pending operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   273                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   274                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState12_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   275                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   276  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   277                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   278                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   279                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   280  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   281                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   282                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   283                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   284                              /* Freeze current state was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   285                              /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   286                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   287                          dataRetIocbiFunc_u8=(*(FreezeCurrentState2_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, &dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   288                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   289                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   290                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   291  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   292                              /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   293                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   294                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   295                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   296                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   297                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   298                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState6_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u8,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   299                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   300                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   301                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   302                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   303                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   304                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   305                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState7_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u16,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   306                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   307                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   308                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   309                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   310                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   311                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   312                                  dataRetIocbiFunc_u8=(*(FreezeCurrentState8_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u32,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   313                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   314  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   315                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   316                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   317                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   318              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   319  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   320  #if(DCM_CFG_DSP_RESETTODEFAULT_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   321              if((Dcm_dataDspIocbiCtrlParam_u8 == DCM_IOCBI_RESETTODEFAULT) && ((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x02u)==0x02u ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   322              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   323                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrResetToDefault_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   324                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   325                  if((ptrIOCBIFnc != NULL_PTR) &&   ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   326                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   327  #if(DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   328                      if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   329                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   330                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   331                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   332                              /* Reset to Default value was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   333                              /* Call the generated Rte_call  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   334                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   335                              dataRetIocbiFunc_u8 = (*(ResetToDefault9_pfct) (ptrIOCBIFnc))(DCM_CANCEL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   336                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   337                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   338                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   339  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   340                              /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   341                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   342                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   343                                  /* Reset to Default value was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   344                                  /* Call the generated Rte_call  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   345                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   346                                  dataRetIocbiFunc_u8=(*(ResetToDefault10_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   347                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   348                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   349                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   350                                  /* Reset to Default value was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   351                                  /* Call the generated Rte_call  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   352                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   353                                  dataRetIocbiFunc_u8=(*(ResetToDefault11_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   354                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   355                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   356                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   357                                  /* Reset to Default value was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   358                                  /* Call the generated Rte_call  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   359                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   360                                  dataRetIocbiFunc_u8=(*(ResetToDefault12_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   361                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   362  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   363                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   364                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   365                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   366  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   367                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   368                      if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   369                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   370                          /* Reset to Default value was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   371                          /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   372                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   373                          dataRetIocbiFunc_u8 = (*(ResetToDefault2_pfct) (ptrIOCBIFnc))(DCM_CANCEL, &dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   374                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   375                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   376                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   377  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   378                          /*add with control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   379                          if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   380                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   381                              /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   382                              /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   383                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   384                              dataRetIocbiFunc_u8=(*(ResetToDefault6_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u8,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   385                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   386                          else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   387                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   388                              /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   389                              /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   390                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   391                              dataRetIocbiFunc_u8=(*(ResetToDefault7_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u16,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   392                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   393                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   394                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   395                              /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   396                              /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   397                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   398                              dataRetIocbiFunc_u8=(*(ResetToDefault8_pfct)(ptrIOCBIFnc)) (DCM_CANCEL, ControlMask_u32,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   399                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   400  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   401                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   402                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   403              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   404              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   405  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   406              /*subfunction called is not valid and reset to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   407              s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   408              (void) dataRetIocbiFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   409          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   410      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   411  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   412  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   413      /*Loop through all the IOCBI DIDs through DcmDsp_IocbiStatus_array, this case is mainly to handle the issue of protocol preemption,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   414      to reset all the IOCTRLs which was active in the previos protocol before preemption*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   415      for(idxIocbiIndex_u16=0u;idxIocbiIndex_u16<DCM_CFG_NUM_IOCBI_DIDS;idxIocbiIndex_u16++)
	mov	d15,#0
.L359:
	j	.L2
.L3:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   416      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   417          ptrDidConfig =&Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16];
	movh.a	a15,#@his(DcmDsp_IocbiStatus_array)
	lea	a15,[a15]@los(DcmDsp_IocbiStatus_array)
.L1010:
	addsc.a	a15,a15,d15,#3
.L1011:
	ld.hu	d0,[a15]0
	sha	d0,#4
.L1012:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L1013:
	addsc.a	a15,a15,d0,#0
.L361:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   418          s_ActiveDid_u16 = ptrDidConfig->dataDid_u16 ;
	movh.a	a2,#@his(s_ActiveDid_u16)
	lea	a2,[a2]@los(s_ActiveDid_u16)
.L1014:
	ld.hu	d0,[a15]0
.L1015:
	st.h	[a2],d0
.L1016:
	add	d15,#1
.L2:
	jeq	d15,#0,.L3
.L1017:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   419      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   420      if (s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b == DCM_PENDING)
	movh.a	a12,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a12,[a12]@los(s_Dcm_idxIocbiDidIndexType_st)
.L1018:
	ld.bu	d15,[a12]11
.L360:
	jne	d15,#1,.L4
.L1019:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   421      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   422          ptrSigConfig = &Dcm_DspDataInfo_st[Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16].adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
	ld.hu	d15,[a12]6
	sha	d15,#4
.L1020:
	movh.a	a2,#@his(Dcm_DIDConfig)
	lea	a2,[a2]@los(Dcm_DIDConfig)
.L1021:
	addsc.a	a15,a2,d15,#0
.L1022:
	ld.a	a2,[a15]8
.L1023:
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
	ld.hu	d15,[a15]0
.L1024:
	addsc.a	a15,a2,d15,#2
.L1025:
	ld.hu	d15,[a15]2
	sha	d15,#4
.L1026:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L1027:
	addsc.a	a15,a15,d15,#0
.L362:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   423          /* If the read operation is Asynchronous */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   424          if((ptrSigConfig->adrReadFnc_cpv!=NULL_PTR) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)|| (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
	ld.a	a2,[a15]
.L1028:
	jz.a	a2,.L5
.L1029:
	ld.bu	d15,[a15]11
.L1030:
	jeq	d15,#1,.L6
.L1031:
	mov	d0,#8
.L1032:
	jne	d15,d0,.L7
.L6:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   425          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   426              /* Call the Read function with  Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   427              /*subfunction called is valid and set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   428              s_IsIOCBISubfuncCalled_b = TRUE;
	movh.a	a15,#@his(s_IsIOCBISubfuncCalled_b)
.L363:
	lea	a15,[a15]@los(s_IsIOCBISubfuncCalled_b)
.L1033:
	mov	d15,#1
.L1034:
	st.b	[a15],d15
.L1035:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   429  #if (DCM_CFG_DSP_READ_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   430  			if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   431  			{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   432  				/* Call the Rte_Call Read Function ot cancel the operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   433  			    /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   434              	dataRetIocbiFunc_u8 = (*(ReadFunc11_ptr) (ptrSigConfig->adrReadFnc_cpv))(DCM_CANCEL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   435  			}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   436  			else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   437  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   438  			{
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   439  	            /* Call the Read function with  Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   440  	            /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   441  	            dataRetIocbiFunc_u8 = (*(ReadFunc2_ptr) (ptrSigConfig->adrReadFnc_cpv))(DCM_CANCEL, NULL_PTR);
	mov	d4,#2
.L1036:
	mov.a	a4,#0
	calli	a2
.L1037:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   442  			}
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   443  				/*subfunction called is not valid and set to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   444              s_IsIOCBISubfuncCalled_b = FALSE;
	mov	d15,#0
.L1038:
	st.b	[a15],d15
.L7:
.L5:
.L4:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   445              (void) dataRetIocbiFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   446          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   447      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   448  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   449      /* Initialize IOCBI Service state machine to IDLE state */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   450      Dcm_stDspIocbiState_en = DCM_IOCBI_IDLE;
	movh.a	a15,#@his(Dcm_stDspIocbiState_en)
	lea	a15,[a15]@los(Dcm_stDspIocbiState_en)
.L1039:
	mov	d15,#1
.L1040:
	st.w	[a15],d15
.L1041:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   451      Dcm_DidSignalIdx_u16 = 0x0;
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L1042:
	mov	d15,#0
.L1043:
	st.h	[a15],d15
.L1044:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   452      Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
	movh.a	a15,#@his(Dcm_stDspIocbiOpStatus_u8)
	lea	a15,[a15]@los(Dcm_stDspIocbiOpStatus_u8)
.L1045:
	mov	d15,#0
.L1046:
	st.b	[a15],d15
.L1047:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   453  #if (DCM_CFG_DSP_READ_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   454  		s_DcmReadLengthRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   455  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   456  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   457  	s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   458  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   459      Dcm_ResetDIDIndexstruct(&s_Dcm_idxIocbiDidIndexType_st); /*This function is invoked to reset all the elements of DID index structure to its default value*/
	mov.aa	a4,a12
	call	Dcm_ResetDIDIndexstruct
.L1048:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   460      DCM_UNUSED_PARAM(dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   461      DCM_UNUSED_PARAM(idxIocbiIndex_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   462      DCM_UNUSED_PARAM(Dcm_dataDspIocbiCtrlParam_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   463      DCM_UNUSED_PARAM(ptrDidConfig);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   464      DCM_UNUSED_PARAM(ptrIOSigConfig);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   465      DCM_UNUSED_PARAM(ptrSigConfig);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   466      DCM_UNUSED_PARAM(ptrIOCBIFnc);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   467      DCM_UNUSED_PARAM(idxDidSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   468  }
	ret
.L316:
	
__Dcm_Dsp_IOCBI_Ini_function_end:
	.size	Dcm_Dsp_IOCBI_Ini,__Dcm_Dsp_IOCBI_Ini_function_end-Dcm_Dsp_IOCBI_Ini
.L230:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_DcmInputOutputControlByIdentifier',code,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_DcmInputOutputControlByIdentifier'
	.align	2
	
	.global	Dcm_DcmInputOutputControlByIdentifier

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   469  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   470  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   471   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   472   * Dcm_DcmInputOutputControlbyIdentifier :
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   473   *  Service Interpreter for Input Output Control by Identifier (0x2F) service.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   474   *  The InputOutputControlByIdentifier service is used by the client to substitute a value for an input signal,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   475   *  internal server function and/or force control to a value for an output (actuator) of an electronic system.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   476   *  There are four ways in which tester can make use of this service by sending the various values for
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   477   *  Input Output Control Parameter in the request:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   478   *  0x00:   Return Control To ECU. This value shall indicate to the server that the client does no longer have
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   479   *          control about the input signal(s), internal parameter(s) and/or output signal(s) referenced by the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   480   *          dataIdentifier.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   481   *  0x01:   This value shall indicate to the server that it is requested to reset the input signal(s), internal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   482   *          parameter(s) and/or output signal(s) referenced by the dataIdentifier to its default state.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   483   *  0x02:   This value shall indicate to the server that it is requested to freeze the current state of the
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   484   *          input signal(s), internal parameter(s) and/or output signal referenced by the dataIdentifier.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   485   *  0x03:   This value shall indicate to the server that it is requested to adjust the input signal(s), internal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   486   *          parameter(s) and/or controlled output signal(s) referenced by the dataIdentifier in RAM to the value(s)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   487   *          included in the controlOption parameter(s) (e.g., set Idle Air Control Valve to a specific step number,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   488   *          set pulse width of valve to a specific value/duty cycle).
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   489   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   490   * \param   pMsgContext    Pointer to message structure
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   491   *                                 (parameter in : RequestLength, Response buffer size, request bytes)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   492   *                                 (parameter out: Response bytes and Response length )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   493   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   494   * \retval  None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   495   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   496   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   497   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   498   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   499  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   500  FUNC(Std_ReturnType,DCM_CODE) Dcm_DcmInputOutputControlByIdentifier(VAR(Dcm_SrvOpStatusType,AUTOMATIC) OpStatus,P2VAR(Dcm_MsgContextType,AUTOMATIC,DCM_INTERN_DATA) pMsgContext,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8)
; Function Dcm_DcmInputOutputControlByIdentifier
.L206:
Dcm_DcmInputOutputControlByIdentifier:	.type	func
	sub.a	a10,#40
.L364:
	st.a	[a10]28,a4
.L367:
	st.a	[a10]16,a5
.L368:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   501  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   502      VAR(uint32,AUTOMATIC) dataLength_u32; /* Local variable of store length of DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   503      P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   504      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   505      P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrIOSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   506      P2CONST(Dcm_SignalDIDIocbiConfig_tst,AUTOMATIC, DCM_INTERN_DATA) ptrIOCBIsigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   507      P2CONST(Dcm_ExtendedDIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidExtendedConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   508      P2VAR(Dcm_Dsp_IocbiStatusType_tst,AUTOMATIC, DCM_INTERN_DATA )ptrIOCBIStatusArrayConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   509      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA) ptrIOCBIFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   510      VAR(uint16,AUTOMATIC) dataSignalLength_u16; /* Variable to hold the length of the signal*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   511      VAR(uint16,AUTOMATIC) posnSigByte_u16;/* Signal Byte position*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   512      VAR(uint16,AUTOMATIC) dataControlMaskLen_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   513      VAR(uint16,AUTOMATIC) dataCtlMaskOffset_u16;/* Offset for control mask*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   514      VAR(uint16,AUTOMATIC) nrDID_u16; /* Data Identifier */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   515      VAR(uint16_least,AUTOMATIC) idxIocbiIndex_u16; /*Index to loop through the IOCBI status array DcmDsp_IocbiStatus_array*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   516      VAR(Std_ReturnType,AUTOMATIC) dataIocbiExeResult_u8; /* Return value of IOCBI execution function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   517      VAR(Std_ReturnType,AUTOMATIC) dataRetGetDid_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   518      VAR(Std_ReturnType,AUTOMATIC) dataValidateIoMaskStatus_u8; /* Return value for IOCBI Mask and Status Validation Appl */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   519  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   520  #if((DCM_CFG_DSP_CONTROL_SYNCH_FNC_ENABLED   != DCM_CFG_OFF) || (DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED   != DCM_CFG_OFF) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   521      VAR(uint8,AUTOMATIC) ControlMask_u8; /* Control Mask */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   522      VAR(uint16,AUTOMATIC) ControlMask_u16; /* Control Mask */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   523      VAR(uint32,AUTOMATIC) ControlMask_u32; /* Control Mask */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   524  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   525  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   526      VAR(uint8,AUTOMATIC) dataIoCtrlParam_u8; /* Input Output Control parameter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   527      VAR(uint8,AUTOMATIC) posnSigBit_u8; /* Signal Bit position*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   528      VAR(uint8,AUTOMATIC) posnCtlMaskByte_u8;/* Control mask Byte position*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   529      VAR(uint8,AUTOMATIC) posnCtlMaskBit_u8; /* Control mask Bit position*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   530      VAR(boolean,AUTOMATIC) isModeChkRetval_b; /*Return value of mode rule check API*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   531      VAR(boolean, AUTOMATIC) flgProcessReq_b; /*Flag process request*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   532      VAR(Dcm_NegativeResponseCodeType,AUTOMATIC) dataNrc_u8; /* Negative response code indicator */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   533      VAR(Std_ReturnType,AUTOMATIC)  dataretVal_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   534      VAR(Std_ReturnType, AUTOMATIC) dataFuncRetVal_u8; /* Local variable to store function return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   535      VAR(Std_ReturnType,AUTOMATIC)  dataServretVal_u8;/* Local variable to store service return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   536  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   537      /* Initialization of local variables */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   538      *dataNegRespCode_u8 = 0x00;
	mov	d15,#0
.L577:
	st.b	[a5],d15
.L578:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   539      dataNrc_u8 = 0x00;
	mov	d15,#0
.L579:
	st.b	[a10]6,d15
.L580:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   540      dataIocbiExeResult_u8 = E_OK;
	mov	d9,#0
.L369:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   541      /*Initialize the Process request flag to value TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   542      flgProcessReq_b = TRUE;
	mov	d11,#1
.L370:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   543      dataFuncRetVal_u8 = E_OK;
	mov	d10,#0
.L372:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   544      dataServretVal_u8=DCM_E_PENDING;
	mov	d8,#10
.L374:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   545      idxIocbiIndex_u16=0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   546  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   547      /* If OpStatus is set to DCM_CANCEL then call the ini function for resetting */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   548      if (OpStatus == DCM_CANCEL)
	jne	d4,#2,.L8
.L581:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   549      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   550          /* Call the Ini Function */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   551          Dcm_Dsp_IOCBI_Ini();
	call	Dcm_Dsp_IOCBI_Ini
.L365:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   552          /* Set the return value to E_OK as the Ini function will always be serviced  */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   553          dataServretVal_u8 = E_OK;
	mov	d8,#0
.L582:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   554      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   555      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   556      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   557          /* Process the request, Check for the state machine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   558          switch (Dcm_stDspIocbiState_en)
	movh.a	a15,#@his(Dcm_stDspIocbiState_en)
	lea	a15,[a15]@los(Dcm_stDspIocbiState_en)
	st.a	[a10]32,a15
	ld.w	d0,[a15]
.L583:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   559          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   560              case DCM_IOCBI_IDLE:
	mov	d15,#1
	jeq	d15,d0,.L10
.L584:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   561              { /* Validate the request, check for the minimum request length first */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   562                  if (pMsgContext->reqDataLen >= DSP_IOCBI_MINREQLEN)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   563                  { /* Check if it is a valid Input Output Control parameter byte */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   564                      if (pMsgContext->reqData[2] <= 3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   565                      { /* Get the DID from the request */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   566                          nrDID_u16 = (uint16)(DSP_CONV_2U8_TO_U16 (pMsgContext->reqData[0], pMsgContext->reqData[1]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   567                          /* Check if DID is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   568                          if (Dcm_GetIndexOfDID (nrDID_u16,&s_Dcm_idxIocbiDidIndexType_st) == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   569                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   570  #if(DCM_CFG_DSP_NUMISDIDAVAIL>0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   571                              /* Check if the DID is supported in current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   572                              /*If the data range of Did is not range did and supported in current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   573                              if((s_Dcm_idxIocbiDidIndexType_st.dataRange_b==FALSE) && (*Dcm_DIDIsAvail[Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16].idxDIDSupportedFnc_u16] != NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   574                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   575                                  if((*(IsDIDAvailFnc_pf)(Dcm_DIDIsAvail[Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16].idxDIDSupportedFnc_u16]))(nrDID_u16)!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   576                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   577                                      /* DID is not supported in current variant */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   578                                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   579                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   580                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   581  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   582                              Dcm_DidSignalIdx_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   583                              Dcm_ReadSignalLength_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   584                              /*Loop through the complete list of IOCBI Dids and check if the status of the index matches with any in the status array*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   585                              for(idxIocbiIndex_u16=0u;((idxIocbiIndex_u16<DCM_CFG_NUM_IOCBI_DIDS) && (*dataNegRespCode_u8 ==0x00u ));idxIocbiIndex_u16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   586                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   587                                  if(s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16 == DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   588                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   589                                      ptrDidConfig = &Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   590                                      s_ActiveDid_u16 = ptrDidConfig->dataDid_u16 ;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   591                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   592                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   593                              /*If Process request flag is set to TRUE and negative response code is set to 0x00 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   594                              if((flgProcessReq_b!= FALSE)&&(*dataNegRespCode_u8==0x00u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   595                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   596                                  Dcm_stDspIocbiState_en = DCM_IOCBI_CHKSUPPORT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   597                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   598                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   599                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   600                          { /* DID is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   601                              *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   602                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   603                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   604                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   605                      { /* Invalid IO control parameter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   606                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   607                          /* Report development error "DCM_E_INVALID_CONTROL_PARAM "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   608                          DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_INVALID_CONTROL_PARAM)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   609                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   610                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   611                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   612                  { /* Minimum number of bytes are not received */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   613                      *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   614                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   615                  if(*dataNegRespCode_u8 != 0x0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   616                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   617                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   618                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   619              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   620              /* MR12 RULE 16.3 VIOLATION: Controlling expression is not and does not end with a 'jump' statement. Execution will fall through. MISRA C:2012 Rule-16.3 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   621              case DCM_IOCBI_CHKSUPPORT:
	mov	d1,#2
	jeq	d1,d0,.L11
.L585:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   622              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   623                  ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   624                  /* Check if this DID is allowed in the current active session*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   625                  if ((Dcm_DsldGetActiveSessionMask_u32()& (ptrDidConfig->adrExtendedConfig_pcst->dataSessBitMask_u32))!= 0x00uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   626                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   627                      /* Get the DID from the request */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   628                      nrDID_u16 = (uint16)(DSP_CONV_2U8_TO_U16 (pMsgContext->reqData[0], pMsgContext->reqData[1]));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   629                      while((Dcm_DidSignalIdx_u16<ptrDidConfig->nrSig_u16) && (*dataNegRespCode_u8==0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   630                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   631                          ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   632                          ptrIOSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   633                          ptrIOCBIsigConfig = &Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   634  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   635                          /*Check if the DID is supported for IOCTRL or not by comparing against the structure index*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   636                          if((ptrSigConfig->idxDcmDspControlInfo_u16 >0u) && (ptrIOSigConfig->idxDcmDspIocbiInfo_u16>0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   637                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   638                              /* Check if short term adjustment is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   639                              if((pMsgContext->reqData[2] == DCM_IOCBI_SHORTTERMADJUSTMENT) && ((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x08u)==0x08u ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   640                              { /* Check if the control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   641                                  /* MR12 RULE 12.1 VIOLATION: Nesting of control structures (statements) exceeds 15 - program is non-conforming - The code should be  reached after multiple checks done prior to this */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   642                                  if( ((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->adrShortTermAdjustment_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   643                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   644                                      /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   645                                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   646                                      /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   647                                      DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   648                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   649                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   650                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   651  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   652                                      if(((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->ioControlRequest_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   653                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   654                                          /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   655                                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   656                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   657  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   658                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   659                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   660                              else if((pMsgContext->reqData[2] == DCM_IOCBI_FREEZECURRENTSTATE)&& ((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x04u)==0x04u ) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   661                              { /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   662                                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   663                                  if(((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->adrFreezeCurrentState_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   664                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   665                                      /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   666                                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   667                                      /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   668                                      DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   669                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   670                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   671                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   672  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   673                                      if(((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->ioControlRequest_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   674                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   675                                          /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   676                                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   677                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   678  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   679                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   680                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   681                              else if((pMsgContext->reqData[2] == DCM_IOCBI_RESETTODEFAULT) &&((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x02u)==0x02u ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   682                              { /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   683                                  if(((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->adrResetToDefault_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   684                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   685                                      /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   686                                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   687                                      /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   688                                      DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   689                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   690                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   691                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   692  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   693                                      if(((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->ioControlRequest_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   694                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   695                                          /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   696                                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   697                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   698  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   699                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   700                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   701                              else if((pMsgContext->reqData[2] == DCM_IOCBI_RETURNCONTROLTOECU) &&((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x01u)==0x01u ))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   702                              { /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   703  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   704                                  if(((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->adrReturnControlEcu_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   705                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   706                                      /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   707                                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   708                                      /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   709                                      DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   710                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   711                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   712                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   713  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   714                                      if(((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER)) && (ptrIOCBIsigConfig->ioControlRequest_cpv == NULL_PTR))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   715                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   716                                          /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   717                                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   718                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   719  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   720                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   721                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   722                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   723                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   724                                  /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   725                                  *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   726                                  /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   727                                  DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   728                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   729                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   730                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   731                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   732                              /* Control Function is not configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   733                              *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   734                              /* Report development error "DCM_E_CONTROL_FUNC_NOT_CONFIGURED "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   735                              DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_CONTROL_FUNC_NOT_CONFIGURED)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   736                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   737  					 Dcm_DidSignalIdx_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   738                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   739                      if(*dataNegRespCode_u8 == 0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   740                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   741                          /*Initialize the control mask and control state size as 0*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   742                          dataControlMaskLen_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   743                          dataLength_u32 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   744  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   745                          /* Control state is applicable for short term adjustment*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   746                          if(pMsgContext->reqData[2] == DCM_IOCBI_SHORTTERMADJUSTMENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   747                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   748                              /*Set the flag for s_IsIOCBISubfuncCalled to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   749                              s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   750                              /* Get the total length for the signal*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   751                              dataFuncRetVal_u8=Dcm_GetLengthOfDIDIndex(&s_Dcm_idxIocbiDidIndexType_st,&dataLength_u32,nrDID_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   752                              /*Set the flag for s_IsIOCBISubfuncCalled to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   753                              s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   754                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   755  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   756                          if(dataFuncRetVal_u8==E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   757                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   758                              /* IF the IOCONTROL DID is of typ DCM_CONTROLMASK_INTERNAL or DCM_CONTROLMASK_EXTERNAL
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   759                               * obtain the ccontrlmask size from the conifugruation and check for the length if not report Incorrect Msg length NRC*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   760                              ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   761                              ptrDidExtendedConfig = ptrDidConfig->adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   762                              if(ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_NO)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   763                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   764                                  dataControlMaskLen_u16 = ptrDidExtendedConfig->dataCtrlMaskSize_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   765                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   766                              /**Exact length check*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   767                              if ((pMsgContext->reqDataLen-3u) != (dataLength_u32 + dataControlMaskLen_u16))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   768                              { /* Request length error, Send negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   769                                  *dataNegRespCode_u8 = DCM_E_INCORRECTMESSAGELENGTHORINVALIDFORMAT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   770                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   771                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   772                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   773                                  /* If control state or control mask is present*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   774                                  if((dataLength_u32 != 0u) || (dataControlMaskLen_u16 != 0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   775                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   776                                      /* Call the appl function to validate the control mask and control state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   777                                      dataValidateIoMaskStatus_u8 = DcmAppl_DcmCheckControlMaskAndState(nrDID_u16,pMsgContext->reqData[2],&(pMsgContext->reqData[3]),(uint16)(pMsgContext->reqDataLen-3u));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   778                                      if(dataValidateIoMaskStatus_u8 != E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   779                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   780                                          *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   781                                          DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_INVALID_CONTROL_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   782                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   783                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   784                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   785  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   786                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   787                          /* check for infrastructural errors*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   788                          else if(dataFuncRetVal_u8 == DCM_INFRASTRUCTURE_ERROR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   789                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   790                              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   791                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   792                          else if (dataFuncRetVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   793                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   794                              /* Do nothing, just call again*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   795                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   796                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   797                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   798                              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   799                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   800                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   801                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   802                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   803                  { /* DID is not allowed in the current session */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   804                      *dataNegRespCode_u8 = DCM_E_REQUESTOUTOFRANGE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   805                      /* Report development error "DCM_E_NOT_SUPPORTED_IN_CURRENT_SESSION "to DET module if the DET module is enabled */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   806                      DCM_DET_ERROR(DCM_IOCBI_ID , DCM_E_NOT_SUPPORTED_IN_CURRENT_SESSION)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   807                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   808  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   809                  if((*dataNegRespCode_u8 == 0x0) && (dataFuncRetVal_u8 != DCM_E_PENDING))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   810                  { /* Move to next state where the request length is validated */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   811                      Dcm_stDspIocbiState_en = DCM_IOCBI_CHKCOND;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   812                      /* Reset the signal index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   813                      Dcm_DidSignalIdx_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   814                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   815                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   816                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   817                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   818                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   819              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   820              /* MR12 RULE 16.3 VIOLATION: Controlling expression is not and does not end with a 'jump' statement. Execution will fall through. MISRA C:2012 Rule-16.3 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   821              case DCM_IOCBI_CHKCOND:
	mov	d1,#3
	jeq	d1,d0,.L12
.L586:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   822              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   823                  if (*dataNegRespCode_u8 == 0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   824                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   825                      ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   826                      ptrDidExtendedConfig = ptrDidConfig->adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   827  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   828                      /* Check if this DID is allowed in the current security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   829                      if ((Dcm_DsldGetActiveSecurityMask_u32()& (ptrDidExtendedConfig->dataSecBitMask_u32))!=0x00uL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   830                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   831                          /*Set the flag for mode check return value to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   832                          isModeChkRetval_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   833                          if(ptrDidExtendedConfig->adrUserControlModeRule_pfct!=NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   834                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   835                              /* Call the configured API to do DID specific checks before IO control operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   836                              dataFuncRetVal_u8 = (*ptrDidExtendedConfig->adrUserControlModeRule_pfct)(&dataNrc_u8,ptrDidConfig->dataDid_u16,DCM_SUPPORT_IOCONTROL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   837                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   838                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   839                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   840                              /* Call the Dcm Appl API to do DID specific checks before IO control operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   841                              dataFuncRetVal_u8 = DcmAppl_UserDIDModeRuleService(&dataNrc_u8,ptrDidConfig->dataDid_u16,DCM_SUPPORT_IOCONTROL);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   842                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   843                          if(dataFuncRetVal_u8!=E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   844                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   845                              if(dataNrc_u8==0x00)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   846                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   847                                  dataNrc_u8 = DCM_E_CONDITIONSNOTCORRECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   848                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   849                              /*Set the flag for mode check return value to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   850                              isModeChkRetval_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   851                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   852                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   853                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   854                              dataNrc_u8=0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   855                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   856  #if(DCM_CFG_DSP_MODERULEFORDIDCONTROL!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   857                          if((dataNrc_u8==0x00 ) &&(NULL_PTR != ptrDidExtendedConfig->adrIocbiModeRuleChkFnc_pfct))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   858                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   859                              isModeChkRetval_b = (*(ptrDidExtendedConfig->adrIocbiModeRuleChkFnc_pfct))(&dataNrc_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   860                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   861  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   862                          /*chek if the flag for mode check return value is set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   863                          if(FALSE!= isModeChkRetval_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   864                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   865                              /* Check if the response length fits into the buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   866                              if (pMsgContext->resMaxDataLen >= (uint16)(ptrDidConfig->dataMaxDidLen_u16+3u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   867                              { /* Move the state to perform the Control operation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   868                                  Dcm_stDspIocbiState_en = DCM_IOCBI_RUNNING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   869                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   870                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   871                              { /* Response length is too long, Send negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   872                                  *dataNegRespCode_u8 = DCM_E_RESPONSETOOLONG;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   873                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   874                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   875                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   876                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   877                              *dataNegRespCode_u8 = dataNrc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   878                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   879                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   880                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   881                      { /* DID is not allowed in the current security level */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   882                          *dataNegRespCode_u8 = DCM_E_SECURITYACCESSDENIED;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   883                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   884                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   885                  if(*dataNegRespCode_u8 != 0x0)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   886                  /* Nothing to do */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   887                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   888                      break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   889                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   890              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   891              /* MR12 RULE 16.3 VIOLATION:The preceding 'switch' clause is not empty and does not end with a 'jump' statement. Execution will fall through. MISRA C:2012 Rule-16.3 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   892              case DCM_IOCBI_RUNNING:
	mov	d1,#4
	jeq	d1,d0,.L13
.L587:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   893              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   894                  ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   895                  ptrDidExtendedConfig = ptrDidConfig->adrExtendedConfig_pcst;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   896                  /* Copy the control parameter to local variable */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   897                  dataIoCtrlParam_u8 = pMsgContext->reqData[2];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   898                  Dcm_dataDspIocbiCtrlParam_u8 = pMsgContext->reqData[2];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   899                  if(ptrDidConfig->adrExtendedConfig_pcst->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   900                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   901                      /* Get the start index of the control mask */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   902                      dataCtlMaskOffset_u16 = (uint16)(pMsgContext->reqDataLen - ((uint32)((ptrDidConfig->nrSig_u16-1u)/8u) + 1u));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   903                      /* Loop for all the signals configured for a DID */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   904                      /*MR12 RULE 15.4 VIOLATION :More than one 'break' statement has been used to terminate this iteration statement. MISRA C:2012 Rule-15.4*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   905                      while((Dcm_DidSignalIdx_u16 < ptrDidConfig->nrSig_u16)&&(*dataNegRespCode_u8==0x0u))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   906                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   907                          posnCtlMaskBit_u8 = 0x80;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   908                          if(ptrDidConfig->nrSig_u16 > 1u)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   909                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   910                              /*Get the byte position of the signal*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   911                              posnSigByte_u16 = (uint16)(Dcm_DidSignalIdx_u16/8u);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   912                              /*Get the bit position of the signal*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   913                              posnSigBit_u8 = (uint8)(Dcm_DidSignalIdx_u16%8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   914                              /*Get the control mask value byte*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   915                              posnCtlMaskByte_u8 = pMsgContext->reqData[dataCtlMaskOffset_u16 + posnSigByte_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   916                              /*Get the control mask bit value for the signal*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   917                              posnCtlMaskBit_u8 = (uint8)(((uint8)(posnCtlMaskByte_u8 << posnSigBit_u8)) & ((uint8)0x80));
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   918  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   919                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   920                          /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   921                          s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   922                          /* Get the length for each signal, which will be for passing the pointer for short term adjustment and for sending the response*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   923                          dataFuncRetVal_u8=Dcm_GetLengthOfSignal(&dataSignalLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   924                          /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   925                          s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   926                          if(dataFuncRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   927                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   928                              /* Do nothing. Base pointer will be incremented at the end of for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   929                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   930                          else if(dataFuncRetVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   931                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   932                              /* Wait for next cycle*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   933                              dataIocbiExeResult_u8= DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   934                              break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   935                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   936                          /* Send GeneralReject for either Infrastructure Error or for any other return values */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   937                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   938                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   939                              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   940                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   941  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   942                          /*Check whether signal is masked or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   943                          s_ActiveDid_u16 = ptrDidConfig->dataDid_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   944                          ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   945                          ptrIOSigConfig= &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   946  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   947                          if((posnCtlMaskBit_u8 == 0x80) && (*dataNegRespCode_u8 == 0x00))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   948                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   949  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   950                              /* Short Term adjustment is requested? */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   951                              if(dataIoCtrlParam_u8 == DCM_IOCBI_SHORTTERMADJUSTMENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   952                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   953                                  ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrShortTermAdjustment_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   954                                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   955                                  if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   956                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   957                                      /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   958                                      s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   959  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   960  #if(DCM_CFG_DSP_CONTROL_SYNCH_FNC_ENABLED   == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   961                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   962                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   963                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   964                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   965                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment1_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN+Dcm_ReadSignalLength_u16)],dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   966                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   967  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   968  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   969  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED   == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   970                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   971                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   972  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   973                                          if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   974                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   975                                              /* Check whether Rte_Call API hasn't been invoked already */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   976                                              if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   977                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   978                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   979                                                  dataIocbiExeResult_u8=(*(ShortTermAdjustment9_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN+Dcm_ReadSignalLength_u16)],Dcm_stDspIocbiOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   980                                                  if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   981                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   982                                                      /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   983                                                      s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   984                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   985                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   986                                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   987                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   988                                                      /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   989                                                      *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   990                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   991                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   992                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   993                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   994                                                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrShortTermAdjustmentResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   995                                                 /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   996                                                 dataIocbiExeResult_u8=(*(ShortTermAdjustment13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   997                                                 if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   998                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	   999                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1000                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1001                                                 else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1002                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1003                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1004                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1005                                                 else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1006                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1007                                                     /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1008                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1009                                                     *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1010                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1011                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1012                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1013                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1014  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1015                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1016                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1017                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1018                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment2_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN+Dcm_ReadSignalLength_u16)],Dcm_stDspIocbiOpStatus_u8, dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1019                                         }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1020                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1021  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1022  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1023                                      /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1024                                      s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1025                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1026                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1027  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1028  #if(DCM_CFG_DSP_FREEZECURRENTSTATE_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1029                              if(dataIoCtrlParam_u8 == DCM_IOCBI_FREEZECURRENTSTATE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1030                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1031                                  ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrFreezeCurrentState_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1032                                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1033                                  if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1034                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1035                                      /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1036                                      s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1037  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1038                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1039                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1040                                          /* Freeze current state is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1041                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1042                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1043                                          dataIocbiExeResult_u8=(*(FreezeCurrentState1_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1044                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1045  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1046                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1047                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1048  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1049                                          if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1050                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1051                                              /* Check whether Rte_Call API hasn't been invoked already */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1052                                              if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1053                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1054                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1055                                                   dataIocbiExeResult_u8=(*(FreezeCurrentState9_pfct)(ptrIOCBIFnc)) (Dcm_stDspIocbiOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1056                                                  if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1057                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1058                                                      /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1059                                                      s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1060                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1061                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1062                                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1063                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1064                                                      /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1065                                                      *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1066                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1067                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1068                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1069                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1070                                                   ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrFreezeCurrentStateResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1071                                                 /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1072                                                 dataIocbiExeResult_u8=(*(FreezeCurrentState13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1073                                                 if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1074                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1075                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1076                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1077                                                 else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1078                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1079                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1080                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1081                                                 else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1082                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1083                                                     /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1084                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1085                                                     *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1086                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1087                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1088                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1089                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1090  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1091                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1092                                          /* Freeze current state is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1093                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1094                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1095                                          dataIocbiExeResult_u8=(*(FreezeCurrentState2_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1096                                           }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1097                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1098                                      /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1099                                      s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1100                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1101                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1102  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1103  #if(DCM_CFG_DSP_RESETTODEFAULT_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1104                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RESETTODEFAULT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1105                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1106                                  ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrResetToDefault_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1107                                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1108                                  if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1109                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1110                                      /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1111                                      s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1112  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1113  #if(DCM_CFG_DSP_CONTROL_SYNCH_FNC_ENABLED== DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1114                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1115                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1116                                          /* Freeze current state is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1117                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1118                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1119                                          dataIocbiExeResult_u8=(*(ResetToDefault1_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1120                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1121  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1122  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1123  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1124                                      if((ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1125                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1126  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1127                                          if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1128                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1129                                              /* Check whether Rte_Call API hasn't been invoked already */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1130                                              if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1131                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1132                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1133                                                   dataIocbiExeResult_u8=(*(ResetToDefault9_pfct)(ptrIOCBIFnc)) (Dcm_stDspIocbiOpStatus_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1134                                                  if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1135                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1136                                                      /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1137                                                      s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1138                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1139                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1140                                                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1141                                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1142                                                      /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1143                                                      *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1144                                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1145                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1146                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1147                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1148                                                 ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrResetToDefaultResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1149                                                 /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1150                                                 dataIocbiExeResult_u8=(*(ResetToDefault13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1151                                                 if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1152                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1153                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1154                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1155                                                 else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1156                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1157                                                      dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1158                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1159                                                 else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1160                                                 {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1161                                                     /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1162                                                     s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1163                                                     *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1164                                                 }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1165                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1166                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1167                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1168  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1169                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1170                                          /* Freeze current state is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1171                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1172                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1173                                              dataIocbiExeResult_u8=(*(ResetToDefault2_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1174                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1175                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1176  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1177                                      /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1178                                      s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1179                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1180                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1181  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1182                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RETURNCONTROLTOECU)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1183                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1184                                  ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrReturnControlEcu_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1185                                  /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1186                                  if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1187                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1188                                      /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1189                                      s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1190  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1191                                      /*As ReturnControlToEcu is a synchronous API , the same API is invoked for both Synch and ASynch Fnc and ClientServer Configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1192                                      if( (ptrDidExtendedConfig->dataCtrlMask_en!=DCM_CONTROLMASK_EXTERNAL) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE) && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1193                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1194                                          /* ReturnControlToECU is a synchronous API irrespective of any UsePort configuration.So the function signature is same for Asynch as well as Sync implementation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1195                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1196                                          dataIocbiExeResult_u8=(*(ReturnControlEcu1_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1197                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1198  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1199                                      /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1200                                      s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1201                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1202                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1203                              /* Check for infrastructural errors in case of RTE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1204  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1205                              if((Dcm_IsInfrastructureErrorPresent_b(dataIocbiExeResult_u8) != FALSE) && ((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER) || (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1206                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1207                                  /* Set the nrc as general reject*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1208                                  *dataNegRespCode_u8 =DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1209                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1210                              else if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1211                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1212                                  *dataNegRespCode_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1213                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1214                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1215                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1216                                  /* MR12 RULE 15.4 VIOLATION: More than one break statement is being used to terminate an iteration statement */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1217                                  break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1218                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1219                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1220  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1221                          if((dataIocbiExeResult_u8 == E_OK) && (*dataNegRespCode_u8 == 0x00) )
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1222                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1223                              Dcm_ReadSignalLength_u16 += dataSignalLength_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1224                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1225  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1226  					Dcm_DidSignalIdx_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1227                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1228  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1229                      if ((E_OK == dataIocbiExeResult_u8) && (*dataNegRespCode_u8 == 0x0))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1230                      { /* Move the state to read control status record */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1231                          Dcm_stDspIocbiState_en = DCM_IOCBI_READSTREC;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1232                          /* Reset the signal index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1233                          Dcm_DidSignalIdx_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1234                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1235  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1236                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1237                      else if((E_NOT_OK == dataIocbiExeResult_u8) && (*dataNegRespCode_u8 == 0x0))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1238                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1239                          /* Send negative response code DCM_E_GENERALREJECT as the application has returned E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1240                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1241                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1242                          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1243                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1244                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1245                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1246                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1247  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1248                          if(DCM_E_PENDING == dataIocbiExeResult_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1249                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1250                              *dataNegRespCode_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1251                              dataServretVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1252                              Dcm_stDspIocbiOpStatus_u8 = DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1253                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1254                          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1255                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1256                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1257                  else if(ptrDidConfig->adrExtendedConfig_pcst->dataCtrlMask_en == DCM_CONTROLMASK_EXTERNAL)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1258                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1259  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1260  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1261                      dataFuncRetVal_u8=Dcm_GetLengthOfSignal(&dataSignalLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1262                      if(dataFuncRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1263                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1264                          /* Do nothing. Base pointer will be incremented at the end of for loop */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1265                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1266                      else if(dataFuncRetVal_u8 == DCM_E_PENDING)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1267                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1268                          /* Wait for next cycle*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1269                          dataIocbiExeResult_u8= DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1270                          dataServretVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1271                          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1272                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1273                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1274                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1275                          /* Send GeneralReject for either Infrastructure Error or for any other return values */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1276                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1277                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1278  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1279                      /*Check whether signal is masked or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1280                      s_ActiveDid_u16 = ptrDidConfig->dataDid_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1281                      ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1282                      ptrIOSigConfig= &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1283  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1284                      if((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1285  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1286                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1287                          ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].ioControlRequest_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1288                          if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1289                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1290                              /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1291                              s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1292                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1293                              dataIocbiExeResult_u8 =(*(IOControlrequest_pfct)(ptrIOCBIFnc))(Dcm_dataDspIocbiCtrlParam_u8,&pMsgContext->reqData[DSP_IOCBI_MINREQLEN],dataSignalLength_u16,ptrDidExtendedConfig->dataCtrlMaskSize_u8,Dcm_stDspIocbiOpStatus_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1294                              /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1295                              s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1296                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1297                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1298                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1299  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1300                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1301  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1302                          /* Short Term adjustment is requested? */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1303                          if(dataIoCtrlParam_u8 == DCM_IOCBI_SHORTTERMADJUSTMENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1304                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1305                              ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrShortTermAdjustment_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1306                              /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1307                              if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1308                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1309                                  /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1310                                  s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1311  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1312  #if(DCM_CFG_DSP_CONTROL_SYNCH_FNC_ENABLED   == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1313  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1314                                  if((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1315                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1316                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1317                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1318                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1319                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1320                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1321                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment3_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1322                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1323                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1324                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1325                                          ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1326                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1327                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1328                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment4_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1329                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1330                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1331                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1332                                          ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1333                                          pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1334                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1335                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1336                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment5_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1337                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1338                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1339                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1340                                          /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1341                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1342                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1343  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1344  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED   == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1345                                  if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1346                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1347  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1348  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1349                                      if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1350                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1351                                          if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1352                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1353                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1354                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1355                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1356                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1357                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1358                                                  dataIocbiExeResult_u8=(*(ShortTermAdjustment10_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1359                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1360                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1361                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1362                                                  ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1363                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1364                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1365                                                  dataIocbiExeResult_u8=(*(ShortTermAdjustment11_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1366                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1367                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1368                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1369                                                  ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1370                                                  pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1371                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1372                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1373                                                  dataIocbiExeResult_u8=(*(ShortTermAdjustment12_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1374                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1375                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1376                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1377                                                  /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1378                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1379  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1380                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1381                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1382                                                  /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1383                                                   s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1384                                                   dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1385                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1386                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1387                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1388                                                  /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1389                                                  *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1390                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1391                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1392                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1393                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1394                                              ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrShortTermAdjustmentResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1395                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1396                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1397                                              dataIocbiExeResult_u8=(*(ShortTermAdjustment13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1398  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1399                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1400                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1401                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1402                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1403                                              else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1404                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1405                                                  dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1406                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1407                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1408                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1409                                                 /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1410                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1411                                                 *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1412                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1413                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1414                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1415                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1416  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1417                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1418                                          if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1419                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1420                                              ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1421                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1422                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1423                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment6_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1424                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1425                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1426                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1427                                          ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1428                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1429                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1430                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment7_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1431                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1432                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1433                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1434                                          ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1435                                          pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1436                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1437                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1438                                          dataIocbiExeResult_u8=(*(ShortTermAdjustment8_pfct)(ptrIOCBIFnc)) (&pMsgContext->reqData[(DSP_IOCBI_MINREQLEN)],Dcm_stDspIocbiOpStatus_u8,ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1439                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1440                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1441                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1442                                          /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1443                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1444                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1445                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1446  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1447                                  /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1448                                  s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1449                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1450  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1451                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1452  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1453  #if(DCM_CFG_DSP_FREEZECURRENTSTATE_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1454                          /* Short Term adjustment is requested? */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1455                          if(dataIoCtrlParam_u8 == DCM_IOCBI_FREEZECURRENTSTATE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1456                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1457                              ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrFreezeCurrentState_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1458                              /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1459                              if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1460                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1461                                  /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1462                                  s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1463  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1464                                  if((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1465                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1466                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1467                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1468                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1469                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1470                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1471                                          dataIocbiExeResult_u8=(*(FreezeCurrentState3_pfct)(ptrIOCBIFnc))(ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1472                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1473                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1474                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1475                                          ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1476                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1477                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1478                                          dataIocbiExeResult_u8=(*(FreezeCurrentState4_pfct)(ptrIOCBIFnc))(ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1479                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1480                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1481                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1482                                          ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1483                                          pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1484                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1485                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1486                                          dataIocbiExeResult_u8=(*(FreezeCurrentState5_pfct)(ptrIOCBIFnc))(ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1487                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1488                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1489                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1490                                          /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1491                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1492                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1493  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1494                                  if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1495                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1496  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1497  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1498                                      if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1499                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1500                                          /* If the Rte_Call API is not invoked already */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1501                                          if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1502                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1503                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1504                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1505                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1506                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1507                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1508                                                  dataIocbiExeResult_u8=(*(FreezeCurrentState10_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1509                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1510                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1511                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1512                                                  ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1513                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1514                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1515                                                  dataIocbiExeResult_u8=(*(FreezeCurrentState11_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1516                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1517                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1518                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1519                                                  ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1520                                                  pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1521                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1522                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1523                                                  dataIocbiExeResult_u8=(*(FreezeCurrentState12_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1524                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1525                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1526                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1527                                                  /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1528                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1529  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1530                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1531                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1532                                                  /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1533                                                   s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1534                                                   dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1535                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1536                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1537                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1538                                                  /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1539                                                  *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1540                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1541                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1542                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1543                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1544                                                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrFreezeCurrentStateResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1545                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1546                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1547                                                  dataIocbiExeResult_u8=(*(FreezeCurrentState13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1548                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1549                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1550                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1551                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1552                                              else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1553                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1554                                                  dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1555                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1556                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1557                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1558                                                 /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1559                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1560                                                 *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1561                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1562                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1563                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1564                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1565  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1566                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1567                                          if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1568                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1569                                              ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1570                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1571                                              dataIocbiExeResult_u8=(*(FreezeCurrentState6_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1572                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1573                                          else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1574                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1575                                              ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1576                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1577                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1578                                              dataIocbiExeResult_u8=(*(FreezeCurrentState7_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1579                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1580                                          else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1581                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1582                                              ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1583                                                      pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1584                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1585                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1586                                              dataIocbiExeResult_u8=(*(FreezeCurrentState8_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1587                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1588                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1589                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1590                                              /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1591                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1592                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1593                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1594  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1595                                  /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1596                                  s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1597                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1598                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1599  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1600  #if(DCM_CFG_DSP_RESETTODEFAULT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1601                          /* Short Term adjustment is requested? */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1602                          if(dataIoCtrlParam_u8 == DCM_IOCBI_RESETTODEFAULT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1603                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1604                              ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrResetToDefault_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1605                              /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1606                              if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1607                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1608                                  /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1609                                  s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1610  #if(DCM_CFG_DSP_CONTROL_SYNCH_FNC_ENABLED== DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1611                                  if((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1612                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1613                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1614                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1615                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1616                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1617                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1618                                          dataIocbiExeResult_u8=(*(ResetToDefault3_pfct)(ptrIOCBIFnc))(ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1619                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1620                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1621                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1622                                          ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1623                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1624                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1625                                          dataIocbiExeResult_u8=(*(ResetToDefault4_pfct)(ptrIOCBIFnc))(ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1626                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1627                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1628                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1629                                          ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1630                                          pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1631                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1632                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1633                                          dataIocbiExeResult_u8=(*(ResetToDefault5_pfct)(ptrIOCBIFnc))(ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1634                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1635                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1636                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1637                                          /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1638                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1639                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1640  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1641  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1642  #if(DCM_CFG_DSP_CONTROL_ASYNCH_FNC_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1643                                  if((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)||(ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1644                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1645  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1646  #if (DCM_CFG_DSP_IOCBI_ASP_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1647                                      if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1648                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1649                                          /* If the Rte_Call API is not invoked already */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1650                                          if (!s_IocbiRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1651                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1652                                              /* Based on the Control Mask Size invoke the Rte_Call API with In and InOut parameters */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1653                                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1654                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1655                                                 ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1656                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1657                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1658                                                  dataIocbiExeResult_u8=(*(ResetToDefault10_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1659                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1660                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1661                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1662                                                  ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1663                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1664                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1665                                                  dataIocbiExeResult_u8=(*(ResetToDefault11_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1666                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1667                                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1668                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1669                                                  ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1670                                                  pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1671                                                  /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1672                                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1673                                                  dataIocbiExeResult_u8=(*(ResetToDefault12_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1674                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1675                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1676                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1677                                                  /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1678                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1679  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1680                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1681                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1682                                                  /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1683                                                   s_IocbiRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1684                                                   dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1685                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1686                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1687                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1688                                                  /* For any return value other than E_OK send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1689                                                  *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1690                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1691                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1692                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1693                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1694                                              ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrResetToDefaultResults_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1695                                              /* Based on the size of controlMaskSize configured invoke the Rte_Result API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1696                                                                                      /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1697                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1698                                              dataIocbiExeResult_u8=(*(ResetToDefault13_pfct)(ptrIOCBIFnc)) (dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1699                                              if(dataIocbiExeResult_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1700                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1701                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1702                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1703                                              else if(dataIocbiExeResult_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1704                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1705                                                  dataIocbiExeResult_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1706                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1707                                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1708                                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1709                                                 /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag and send NRC General Reject */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1710                                                 s_IocbiRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1711                                                 *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1712                                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1713                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1714                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1715                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1716  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1717                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1718                                          if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1719                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1720                                              ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1721                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1722                                              dataIocbiExeResult_u8=(*(ResetToDefault6_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1723                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1724                                          else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1725                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1726                                              ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1727                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1728                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1729                                              dataIocbiExeResult_u8=(*(ResetToDefault7_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1730                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1731                                          else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1732                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1733                                              ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],                  \ 
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1734                                              pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1735                                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1736                                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1737                                              dataIocbiExeResult_u8=(*(ResetToDefault8_pfct)(ptrIOCBIFnc))(Dcm_stDspIocbiOpStatus_u8,ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1738                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1739                                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1740                                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1741                                              /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1742                                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1743                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1744                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1745  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1746                                  /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1747                                  s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1748                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1749                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1750  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1751                          /* Return Control to is requested? */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1752                          if(dataIoCtrlParam_u8 == DCM_IOCBI_RETURNCONTROLTOECU)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1753                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1754                              ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrReturnControlEcu_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1755                              /* Check if the Control function is configured */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1756                              if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1757                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1758                                  /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1759                                  s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1760  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1761                                      /*As ReturnControlToEcu is a synchronous API , the same API is invoked for both Synch and ASynch Fnc and ClientServer Configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1762                                  if((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)&& (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1763                                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1764                                      if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1765                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1766                                          ControlMask_u8=pMsgContext->reqData[(pMsgContext->reqDataLen-1u)];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1767                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1768                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1769                                          dataIocbiExeResult_u8=(*(ReturnControlEcu3_pfct)(ptrIOCBIFnc))(ControlMask_u8,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1770                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1771                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1772                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1773                                          ControlMask_u16=DSP_CONV_2U8_TO_U16(pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1774                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1775                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1776                                          dataIocbiExeResult_u8=(*(ReturnControlEcu4_pfct)(ptrIOCBIFnc))(ControlMask_u16,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1777                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1778                                      else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8>=3)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1779                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1780                                          ControlMask_u32=DSP_CONV_4U8_TO_U32(pMsgContext->reqData[(pMsgContext->reqDataLen-4u)],pMsgContext->reqData[(pMsgContext->reqDataLen-3u)],
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1781                                          pMsgContext->reqData[(pMsgContext->reqDataLen-2u)],pMsgContext->reqData[(pMsgContext->reqDataLen-1u)]);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1782                                          /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1783                                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1784                                          dataIocbiExeResult_u8=(*(ReturnControlEcu5_pfct)(ptrIOCBIFnc))(ControlMask_u32,dataNegRespCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1785                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1786                                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1787                                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1788                                          /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1789                                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1790                                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1791  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1792                                  /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1793                                  s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1794                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1795                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1796  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1797                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1798                      if (E_OK == dataIocbiExeResult_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1799                      { /* Move the state to read control status record */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1800                          Dcm_stDspIocbiState_en = DCM_IOCBI_READSTREC;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1801                          /* Reset the signal index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1802                          Dcm_DidSignalIdx_u16 = 0x0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1803                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1804                          Dcm_ReadSignalLength_u16 = dataSignalLength_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1805                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1806                      else if((E_NOT_OK == dataIocbiExeResult_u8) && (*dataNegRespCode_u8 == 0x0))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1807                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1808                          /* Send negative response code DCM_E_GENERALREJECT as the application has returned E_NOT_OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1809                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1810                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1811                          Dcm_ReadSignalLength_u16=0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1812                          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1813                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1814                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1815                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1816                          Dcm_stDspIocbiOpStatus_u8 = DCM_INITIAL;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1817                          if(DCM_E_PENDING == dataIocbiExeResult_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1818                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1819                              *dataNegRespCode_u8 = 0x00;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1820                              dataServretVal_u8=DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1821                              Dcm_stDspIocbiOpStatus_u8 = DCM_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1822                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1823                          break;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1824                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1825  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1826                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1827                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1828                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1829                      /*Dummy else clause*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1830                      dataServretVal_u8=E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1831                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1832              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1833              /* MR12 RULE 16.3 VIOLATION: Controlling expression is not and does not end with a 'jump' statement. Execution will fall through. MISRA C:2012 Rule-16.3 */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1834              case DCM_IOCBI_READSTREC:
	mov	d1,#5
	jeq	d1,d0,.L14
	j	.L15
.L10:
	ld.a	a15,[a10]28
.L377:
	ld.w	d15,[a15]16
.L588:
	jlt.u	d15,#3,.L16
.L589:
	ld.a	a15,[a15]4
.L378:
	ld.bu	d15,[a15]2
.L590:
	jge.u	d15,#4,.L17
.L591:
	ld.bu	d15,[a15]
	sha	d4,d15,#8
.L375:
	ld.bu	d15,[a15]1
.L379:
	or	d4,d15
.L592:
	movh.a	a12,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a12,[a12]@los(s_Dcm_idxIocbiDidIndexType_st)
	mov.aa	a4,a12
	call	Dcm_GetIndexOfDID
.L376:
	jne	d2,#0,.L18
.L593:
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L594:
	mov	d15,#0
.L595:
	st.h	[a15],d15
.L596:
	movh.a	a15,#@his(Dcm_ReadSignalLength_u16)
	lea	a15,[a15]@los(Dcm_ReadSignalLength_u16)
.L597:
	mov	d15,#0
.L598:
	st.h	[a15],d15
.L599:
	mov	d0,#0
.L380:
	j	.L19
.L20:
	movh.a	a15,#@his(DcmDsp_IocbiStatus_array)
.L381:
	lea	a15,[a15]@los(DcmDsp_IocbiStatus_array)
.L600:
	addsc.a	a15,a15,d0,#3
.L601:
	ld.hu	d1,[a15]0
.L602:
	ld.hu	d15,[a12]6
.L603:
	jne	d15,d1,.L21
.L604:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L605:
	sha	d1,#4
.L606:
	addsc.a	a15,a15,d1,#0
.L382:
	movh.a	a2,#@his(s_ActiveDid_u16)
	lea	a2,[a2]@los(s_ActiveDid_u16)
.L607:
	ld.hu	d15,[a15]0
.L608:
	st.h	[a2],d15
.L21:
	add	d0,#1
.L19:
	jne	d0,#0,.L22
.L609:
	ld.a	a15,[a10]16
.L383:
	ld.bu	d15,[a15]
.L610:
	jeq	d15,#0,.L20
.L22:
	jeq	d11,#0,.L23
.L611:
	ld.a	a15,[a10]16
.L384:
	ld.bu	d15,[a15]
.L612:
	jne	d15,#0,.L24
.L613:
	mov	d15,#2
.L614:
	ld.a	a15,[a10]32
.L385:
	st.w	[a15],d15
.L24:
.L23:
	j	.L25
.L18:
	mov	d15,#49
.L615:
	ld.a	a15,[a10]16
.L386:
	st.b	[a15],d15
.L25:
	j	.L26
.L17:
	mov	d15,#49
.L616:
	ld.a	a15,[a10]16
.L388:
	st.b	[a15],d15
.L617:
	mov	d4,#53
.L387:
	mov	d5,#0
	mov	d6,#157
	mov	d7,#26
	call	Det_ReportError
.L26:
	j	.L27
.L16:
	mov	d15,#19
.L618:
	ld.a	a15,[a10]16
.L389:
	st.b	[a15],d15
.L27:
	ld.a	a15,[a10]16
.L390:
	ld.bu	d15,[a15]
.L619:
	jeq	d15,#0,.L28
.L620:
	j	.L29
.L28:
.L11:
	movh.a	a12,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a12,[a12]@los(s_Dcm_idxIocbiDidIndexType_st)
.L621:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
	st.a	[a10]8,a15
.L622:
	ld.hu	d15,[a12]6
	sha	d15,#4
.L623:
	addsc.a	a13,a15,d15,#0
.L391:
	call	Dcm_DsldGetActiveSessionMask_u32
.L624:
	ld.a	a15,[a13]12
.L625:
	ld.w	d15,[a15]24
.L626:
	and	d2,d15
.L627:
	jeq	d2,#0,.L30
.L628:
	ld.a	a15,[a10]28
.L393:
	ld.a	a15,[a15]4
.L394:
	ld.bu	d15,[a15]
	sha	d11,d15,#8
.L371:
	ld.bu	d15,[a15]1
.L395:
	or	d11,d15
.L629:
	movh.a	a14,#@his(Dcm_DidSignalIdx_u16)
	lea	a14,[a14]@los(Dcm_DidSignalIdx_u16)
.L630:
	j	.L31
.L32:
	ld.a	a15,[a13]8
.L396:
	ld.hu	d15,[a14]0
.L631:
	addsc.a	a15,a15,d15,#2
.L632:
	ld.hu	d15,[a15]2
	sha	d15,#4
.L633:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L634:
	addsc.a	a4,a15,d15,#0
.L397:
	ld.hu	d0,[a4]8
	sha	d15,d0,#4
.L635:
	movh.a	a2,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a2,[a2]@los(Dcm_DspDid_ControlInfo_st)
.L636:
	addsc.a	a2,a2,d15,#0
.L399:
	ld.hu	d1,[a2]12
	sha	d15,d1,#4
.L637:
	movh.a	a2,#@his(Dcm_DspIOControlInfo)
.L400:
	lea	a2,[a2]@los(Dcm_DspIOControlInfo)
.L638:
	addsc.a	a5,a2,d15,#0
.L401:
	jeq	d0,#0,.L33
.L639:
	jeq	d1,#0,.L34
.L640:
	ld.a	a15,[a10]28
.L402:
	ld.a	a15,[a15]4
.L403:
	ld.bu	d15,[a15]2
.L641:
	jne	d15,#3,.L35
.L642:
	ld.a	a2,[a13]12
.L643:
	ld.bu	d0,[a2]42
.L644:
	jz.t	d0:3,.L36
.L645:
	ld.bu	d15,[a4]11
.L646:
	jeq	d15,#3,.L37
.L647:
	jeq	d15,#2,.L38
.L648:
	ld.w	d15,[a5]12
.L649:
	jne	d15,#0,.L39
.L650:
	mov	d15,#49
.L651:
	ld.a	a15,[a10]16
.L404:
	st.b	[a15],d15
.L652:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L398:
	j	.L40
.L39:
.L38:
.L37:
.L40:
	j	.L41
.L36:
.L35:
	jne	d15,#2,.L42
.L653:
	ld.a	a2,[a13]12
.L654:
	ld.bu	d0,[a2]42
.L655:
	jz.t	d0:2,.L43
.L656:
	ld.bu	d15,[a4]11
.L657:
	jeq	d15,#3,.L44
.L658:
	jeq	d15,#2,.L45
.L659:
	ld.w	d15,[a5]8
.L660:
	jne	d15,#0,.L46
.L661:
	mov	d15,#49
.L662:
	ld.a	a15,[a10]16
.L406:
	st.b	[a15],d15
.L663:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L405:
	j	.L47
.L46:
.L45:
.L44:
.L47:
	j	.L48
.L43:
.L42:
	jne	d15,#1,.L49
.L664:
	ld.a	a2,[a13]12
.L665:
	ld.bu	d0,[a2]42
.L666:
	jz.t	d0:1,.L50
.L667:
	ld.bu	d15,[a4]11
.L668:
	jeq	d15,#3,.L51
.L669:
	jeq	d15,#2,.L52
.L670:
	ld.w	d15,[a5]4
.L671:
	jne	d15,#0,.L53
.L672:
	mov	d15,#49
.L673:
	ld.a	a15,[a10]16
.L408:
	st.b	[a15],d15
.L674:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L407:
	j	.L54
.L53:
.L52:
.L51:
.L54:
	j	.L55
.L50:
.L49:
	jne	d15,#0,.L56
.L675:
	ld.a	a15,[a13]12
.L676:
	ld.bu	d15,[a15]42
.L677:
	jz.t	d15:0,.L57
.L678:
	ld.bu	d15,[a4]11
.L679:
	jeq	d15,#3,.L58
.L680:
	jeq	d15,#2,.L59
.L681:
	ld.w	d15,[a5]
.L682:
	jne	d15,#0,.L60
.L683:
	mov	d15,#49
.L684:
	ld.a	a15,[a10]16
.L410:
	st.b	[a15],d15
.L685:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L409:
	j	.L61
.L60:
.L59:
.L58:
.L61:
	j	.L62
.L57:
.L56:
	mov	d15,#49
.L686:
	ld.a	a15,[a10]16
.L411:
	st.b	[a15],d15
.L687:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L62:
.L55:
.L48:
.L41:
	j	.L63
.L34:
.L33:
	mov	d15,#49
.L688:
	ld.a	a15,[a10]16
.L412:
	st.b	[a15],d15
.L689:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#25
	call	Det_ReportError
.L63:
	ld.hu	d15,[a14]0
.L690:
	add	d15,#1
	st.h	[a14],d15
.L31:
	ld.hu	d15,[a14]0
.L691:
	ld.hu	d0,[a13]2
.L692:
	jge.u	d15,d0,.L64
.L693:
	ld.a	a15,[a10]16
.L413:
	ld.bu	d15,[a15]
.L694:
	jeq	d15,#0,.L32
.L64:
	ld.a	a15,[a10]16
.L414:
	ld.bu	d15,[a15]
.L695:
	jne	d15,#0,.L65
.L696:
	mov	d12,#0
.L416:
	mov	d0,#0
.L697:
	st.w	[a10],d0
.L698:
	ld.a	a15,[a10]28
.L415:
	ld.a	a15,[a15]4
.L417:
	ld.bu	d15,[a15]2
.L699:
	jne	d15,#3,.L66
.L700:
	movh.a	a15,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a15,[a15]@los(s_IsIOCBISubfuncCalled_b)
.L701:
	mov	d0,#1
.L702:
	st.b	[a15],d0
.L703:
	lea	a5,[a10]0
.L704:
	mov.aa	a4,a12
	mov	d4,d11
.L418:
	call	Dcm_GetLengthOfDIDIndex
.L373:
	mov	d10,d2
.L419:
	mov	d15,#0
.L705:
	st.b	[a15],d15
.L66:
	jne	d10,#0,.L67
.L706:
	ld.hu	d15,[a12]6
	sha	d15,#4
.L707:
	ld.a	a15,[a10]8
	addsc.a	a15,a15,d15,#0
.L392:
	ld.a	a15,[a15]12
.L421:
	ld.w	d15,[a15]36
.L708:
	jeq	d15,#0,.L68
.L709:
	ld.bu	d12,[a15]40
.L68:
	ld.a	a15,[a10]28
.L422:
	ld.w	d15,[a15]16
.L710:
	add	d0,d15,#-3
.L711:
	ld.w	d15,[a10]
.L712:
	add	d15,d12
.L713:
	jeq	d15,d0,.L69
.L714:
	mov	d15,#19
.L715:
	ld.a	a15,[a10]16
.L423:
	st.b	[a15],d15
.L716:
	j	.L70
.L69:
	ld.w	d15,[a10]
.L717:
	jne	d15,#0,.L71
.L718:
	jeq	d12,#0,.L72
.L71:
	ld.a	a4,[a15]4
.L719:
	ld.bu	d5,[a4]2
.L720:
	add.a	a4,#3
.L721:
	extr.u	d6,d0,#0,#16
	mov	d4,d11
.L425:
	call	DcmAppl_DcmCheckControlMaskAndState
.L426:
	jeq	d2,#0,.L73
.L722:
	mov	d15,#49
.L723:
	ld.a	a15,[a10]16
.L424:
	st.b	[a15],d15
.L724:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#29
	call	Det_ReportError
.L73:
.L72:
.L70:
	j	.L74
.L67:
	mov	d15,#128
.L725:
	jne	d15,d10,.L75
.L726:
	mov	d15,#16
.L727:
	ld.a	a15,[a10]16
.L427:
	st.b	[a15],d15
.L728:
	j	.L76
.L75:
	mov	d15,#10
.L729:
	jne	d15,d10,.L77
.L730:
	j	.L78
.L77:
	mov	d15,#16
.L731:
	ld.a	a15,[a10]16
.L428:
	st.b	[a15],d15
.L78:
.L76:
.L74:
.L65:
	j	.L79
.L30:
	mov	d15,#49
.L732:
	ld.a	a15,[a10]16
.L429:
	st.b	[a15],d15
.L733:
	mov	d4,#53
	mov	d5,#0
	mov	d6,#157
	mov	d7,#23
	call	Det_ReportError
.L79:
	ld.a	a15,[a10]16
.L430:
	ld.bu	d15,[a15]
.L734:
	jne	d15,#0,.L80
.L735:
	mov	d15,#10
.L736:
	jeq	d15,d10,.L81
.L737:
	mov	d15,#3
.L738:
	ld.a	a15,[a10]32
.L431:
	st.w	[a15],d15
.L739:
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L740:
	mov	d15,#0
.L741:
	st.h	[a15],d15
.L742:
	j	.L82
.L81:
.L80:
	j	.L83
.L82:
.L12:
	ld.a	a15,[a10]16
.L432:
	ld.bu	d15,[a15]
.L743:
	jne	d15,#0,.L84
.L744:
	movh.a	a15,#@his(s_Dcm_idxIocbiDidIndexType_st)
.L433:
	lea	a15,[a15]@los(s_Dcm_idxIocbiDidIndexType_st)
.L745:
	movh.a	a2,#@his(Dcm_DIDConfig)
	lea	a2,[a2]@los(Dcm_DIDConfig)
.L746:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L747:
	addsc.a	a12,a2,d15,#0
.L434:
	ld.a	a15,[a12]12
.L435:
	call	Dcm_DsldGetActiveSecurityMask_u32
.L748:
	ld.w	d15,[a15]28
.L749:
	and	d2,d15
.L750:
	jeq	d2,#0,.L85
.L751:
	mov	d10,#1
.L420:
	ld.hu	d4,[a12]0
.L752:
	ld.a	a15,[a15]32
.L436:
	jz.a	a15,.L86
.L753:
	lea	a4,[a10]6
.L754:
	mov	d5,#2
	calli	a15
.L437:
	j	.L87
.L86:
	lea	a4,[a10]6
.L755:
	mov	d5,#2
	call	DcmAppl_UserDIDModeRuleService
.L87:
	jeq	d2,#0,.L88
.L756:
	ld.bu	d15,[a10]6
.L757:
	jne	d15,#0,.L89
.L758:
	mov	d15,#34
.L759:
	st.b	[a10]6,d15
.L89:
	mov	d10,#0
.L760:
	j	.L90
.L88:
	mov	d15,#0
.L761:
	st.b	[a10]6,d15
.L90:
	jeq	d10,#0,.L91
.L762:
	ld.a	a15,[a10]28
.L438:
	ld.w	d15,[a15]20
.L763:
	ld.hu	d0,[a12]4
.L764:
	add	d0,#3
.L765:
	extr.u	d0,d0,#0,#16
.L766:
	jlt.u	d15,d0,.L92
.L767:
	mov	d15,#4
.L768:
	ld.a	a15,[a10]32
.L439:
	st.w	[a15],d15
.L769:
	j	.L93
.L92:
	mov	d15,#20
.L770:
	ld.a	a15,[a10]16
.L440:
	st.b	[a15],d15
.L93:
	j	.L94
.L91:
	ld.bu	d15,[a10]6
.L771:
	ld.a	a15,[a10]16
.L441:
	st.b	[a15],d15
.L94:
	j	.L95
.L85:
	mov	d15,#51
.L772:
	ld.a	a15,[a10]16
.L442:
	st.b	[a15],d15
.L95:
.L84:
	ld.a	a15,[a10]16
.L443:
	ld.bu	d15,[a15]
.L773:
	jeq	d15,#0,.L96
.L774:
	j	.L97
.L96:
.L13:
	movh.a	a15,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a15,[a15]@los(s_Dcm_idxIocbiDidIndexType_st)
.L775:
	movh.a	a2,#@his(Dcm_DIDConfig)
	lea	a2,[a2]@los(Dcm_DIDConfig)
.L776:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L777:
	addsc.a	a15,a2,d15,#0
.L444:
	st.a	[a10]20,a15
.L446:
	ld.a	a15,[a15]12
.L445:
	st.a	[a10]12,a15
.L778:
	ld.a	a15,[a10]28
.L447:
	ld.a	a15,[a15]4
.L448:
	ld.bu	d10,[a15]2
.L449:
	movh.a	a2,#@his(Dcm_dataDspIocbiCtrlParam_u8)
	lea	a2,[a2]@los(Dcm_dataDspIocbiCtrlParam_u8)
.L779:
	ld.a	a15,[a10]28
.L450:
	ld.a	a15,[a15]4
.L451:
	ld.bu	d15,[a15]2
.L780:
	st.b	[a2],d15
.L781:
	ld.a	a15,[a10]12
	ld.w	d15,[a15]36
.L782:
	jeq	d15,#2,.L98
.L783:
	ld.a	a15,[a10]28
.L452:
	ld.w	d15,[a15]16
.L784:
	ld.a	a15,[a10]20
.L453:
	ld.hu	d0,[a15]2
.L785:
	add	d0,#-1
	sh	d0,#-3
.L786:
	sub	d15,d0
	add	d15,#-1
.L787:
	extr.u	d11,d15,#0,#16
.L455:
	movh.a	a15,#@his(Dcm_stDspIocbiOpStatus_u8)
.L454:
	lea	a15,[a15]@los(Dcm_stDspIocbiOpStatus_u8)
	st.a	[a10]24,a15
.L788:
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
	st.a	[a10]8,a15
.L789:
	j	.L99
.L100:
	mov	d12,#128
.L457:
	ld.a	a15,[a10]20
.L456:
	ld.hu	d0,[a15]2
.L790:
	jlt.u	d0,#2,.L101
.L791:
	ld.a	a15,[a10]8
.L458:
	ld.hu	d1,[a15]0
	sh	d0,d1,#-3
.L459:
	extr.u	d15,d1,#0,#8
	and	d1,d15,#7
.L460:
	ld.a	a15,[a10]28
.L461:
	ld.a	a15,[a15]4
.L462:
	add	d15,d11,d0
.L792:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L463:
	sha	d15,d15,d1
.L464:
	extr.u	d15,d15,#0,#8
.L793:
	and	d12,d15,#128
.L101:
	movh.a	a12,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a12,[a12]@los(s_IsIOCBISubfuncCalled_b)
.L794:
	mov	d0,#1
.L795:
	st.b	[a12],d0
.L796:
	lea	a4,[a10]4
	call	Dcm_GetLengthOfSignal
.L465:
	mov	d0,#0
.L797:
	st.b	[a12],d0
.L798:
	jne	d2,#0,.L102
.L799:
	j	.L103
.L102:
	j	.L104
.L366:
	mov	d9,#10
.L466:
	j	.L105
.L104:
	mov	d15,#16
.L800:
	ld.a	a15,[a10]16
.L468:
	st.b	[a15],d15
.L103:
	movh.a	a2,#@his(s_ActiveDid_u16)
	lea	a2,[a2]@los(s_ActiveDid_u16)
.L801:
	ld.a	a15,[a10]20
.L469:
	ld.hu	d15,[a15]0
.L802:
	st.h	[a2],d15
.L803:
	ld.a	a2,[a15]8
.L804:
	ld.a	a15,[a10]8
.L470:
	ld.hu	d15,[a15]0
.L805:
	addsc.a	a15,a2,d15,#2
.L806:
	ld.hu	d15,[a15]2
	sha	d15,#4
.L807:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L808:
	addsc.a	a13,a15,d15,#0
.L471:
	ld.hu	d15,[a13]8
	sha	d15,#4
.L809:
	movh.a	a2,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a2,[a2]@los(Dcm_DspDid_ControlInfo_st)
.L810:
	addsc.a	a14,a2,d15,#0
.L472:
	mov	d15,#128
.L811:
	jne	d15,d12,.L106
.L812:
	ld.a	a15,[a10]16
.L473:
	ld.bu	d15,[a15]
.L813:
	jne	d15,#0,.L107
.L814:
	jne	d10,#3,.L108
.L815:
	ld.hu	d15,[a14]12
	sha	d15,#4
.L816:
	movh.a	a15,#@his(Dcm_DspIOControlInfo)
.L474:
	lea	a15,[a15]@los(Dcm_DspIOControlInfo)
.L817:
	addsc.a	a15,a15,d15,#0
.L818:
	ld.a	a6,[a15]12
.L475:
	jz.a	a6,.L109
.L819:
	mov	d15,#1
.L820:
	st.b	[a12],d15
.L821:
	ld.a	a15,[a10]12
	ld.w	d15,[a15]36
.L822:
	jeq	d15,#2,.L110
.L823:
	ld.bu	d15,[a13]11
.L824:
	jeq	d15,#4,.L111
.L825:
	jne	d15,#6,.L112
.L111:
	movh.a	a2,#@his(Dcm_ReadSignalLength_u16)
	lea	a2,[a2]@los(Dcm_ReadSignalLength_u16)
.L826:
	ld.a	a15,[a10]28
.L476:
	ld.a	a15,[a15]4
.L477:
	ld.hu	d15,[a2]0
.L827:
	addsc.a	a15,a15,d15,#0
	lea	a4,[a15]3
.L828:
	ld.a	a5,[a10]16
.L478:
	calli	a6
.L467:
	mov	d9,d2
.L112:
.L110:
	mov	d15,#0
.L829:
	st.b	[a12],d15
.L109:
.L108:
	jne	d10,#2,.L113
.L830:
	ld.hu	d15,[a14]12
	sha	d15,#4
.L831:
	movh.a	a15,#@his(Dcm_DspIOControlInfo)
	lea	a15,[a15]@los(Dcm_DspIOControlInfo)
.L832:
	addsc.a	a15,a15,d15,#0
.L833:
	ld.a	a15,[a15]8
.L480:
	st.a	[a10]36,a15
.L482:
	jz.a	a15,.L114
.L834:
	mov	d15,#1
.L835:
	st.b	[a12],d15
.L836:
	ld.a	a15,[a10]12
.L481:
	ld.w	d15,[a15]36
.L837:
	jeq	d15,#2,.L115
.L838:
	ld.bu	d15,[a13]11
.L839:
	jeq	d15,#4,.L116
.L840:
	jne	d15,#6,.L117
.L116:
	ld.a	a4,[a10]16
.L483:
	ld.a	a15,[a10]36
.L484:
	calli	a15
.L479:
	mov	d9,d2
.L117:
.L115:
	ld.a	a15,[a10]12
	ld.w	d15,[a15]36
.L841:
	jeq	d15,#2,.L118
.L842:
	ld.bu	d15,[a13]11
.L843:
	jeq	d15,#1,.L119
.L844:
	mov	d0,#8
.L845:
	jne	d15,d0,.L120
.L119:
	ld.a	a15,[a10]24
	ld.bu	d4,[a15]
.L846:
	ld.a	a4,[a10]16
.L486:
	ld.a	a15,[a10]36
.L487:
	calli	a15
.L485:
	mov	d9,d2
.L120:
.L118:
	mov	d15,#0
.L847:
	st.b	[a12],d15
.L114:
.L113:
	jne	d10,#1,.L121
.L848:
	ld.hu	d15,[a14]12
	sha	d15,#4
.L849:
	movh.a	a15,#@his(Dcm_DspIOControlInfo)
	lea	a15,[a15]@los(Dcm_DspIOControlInfo)
.L850:
	addsc.a	a15,a15,d15,#0
.L851:
	ld.a	a2,[a15]4
.L489:
	jz.a	a2,.L122
.L852:
	mov	d15,#1
.L853:
	st.b	[a12],d15
.L854:
	ld.a	a15,[a10]12
	ld.w	d15,[a15]36
.L855:
	jeq	d15,#2,.L123
.L856:
	ld.bu	d15,[a13]11
.L857:
	jeq	d15,#4,.L124
.L858:
	jne	d15,#6,.L125
.L124:
	ld.a	a4,[a10]16
.L490:
	calli	a2
.L488:
	mov	d9,d2
.L125:
.L123:
	mov	d15,#0
.L859:
	st.b	[a12],d15
.L122:
.L121:
	jne	d10,#0,.L126
.L860:
	ld.hu	d15,[a14]12
	sha	d15,#4
.L861:
	movh.a	a15,#@his(Dcm_DspIOControlInfo)
	lea	a15,[a15]@los(Dcm_DspIOControlInfo)
.L862:
	addsc.a	a15,a15,d15,#0
.L863:
	ld.a	a2,[a15]
.L492:
	jz.a	a2,.L127
.L864:
	mov	d15,#1
.L865:
	st.b	[a12],d15
.L866:
	ld.a	a15,[a10]12
	ld.w	d15,[a15]36
.L867:
	jeq	d15,#2,.L128
.L868:
	ld.bu	d15,[a13]11
.L869:
	jeq	d15,#3,.L129
.L870:
	jeq	d15,#2,.L130
.L871:
	ld.a	a4,[a10]16
.L493:
	calli	a2
.L491:
	mov	d9,d2
.L130:
.L129:
.L128:
	mov	d15,#0
.L872:
	st.b	[a12],d15
.L127:
.L126:
	mov	d4,d9
.L495:
	call	Dcm_IsInfrastructureErrorPresent_b
.L496:
	jeq	d2,#0,.L131
.L873:
	ld.bu	d15,[a13]11
.L874:
	jeq	d15,#4,.L132
.L875:
	jne	d15,#1,.L133
.L132:
	mov	d15,#16
.L876:
	ld.a	a15,[a10]16
.L497:
	st.b	[a15],d15
.L877:
	j	.L134
.L133:
.L131:
	jne	d9,#0,.L135
.L878:
	mov	d15,#0
.L879:
	ld.a	a15,[a10]16
.L498:
	st.b	[a15],d15
.L880:
	j	.L136
.L135:
	j	.L137
.L136:
.L134:
.L107:
.L106:
	jne	d9,#0,.L138
.L881:
	ld.a	a15,[a10]16
.L499:
	ld.bu	d15,[a15]
.L882:
	jne	d15,#0,.L139
.L883:
	movh.a	a15,#@his(Dcm_ReadSignalLength_u16)
.L500:
	lea	a15,[a15]@los(Dcm_ReadSignalLength_u16)
	ld.hu	d15,[a15]0
.L884:
	ld.hu	d0,[a10]4
.L885:
	add	d15,d0
	st.h	[a15],d15
.L139:
.L138:
	ld.a	a15,[a10]8
	ld.hu	d15,[a15]0
.L886:
	add	d15,#1
	st.h	[a15],d15
.L99:
	ld.hu	d15,[a15]0
.L887:
	ld.a	a15,[a10]20
.L501:
	ld.hu	d0,[a15]2
.L888:
	jge.u	d15,d0,.L140
.L889:
	ld.a	a15,[a10]16
.L502:
	ld.bu	d15,[a15]
.L890:
	jeq	d15,#0,.L100
.L140:
.L137:
.L105:
	jne	d9,#0,.L141
.L891:
	ld.a	a15,[a10]16
.L503:
	ld.bu	d15,[a15]
.L892:
	jne	d15,#0,.L142
.L893:
	mov	d15,#5
.L894:
	ld.a	a15,[a10]32
.L504:
	st.w	[a15],d15
.L895:
	mov	d15,#0
.L896:
	ld.a	a15,[a10]8
	st.h	[a15],d15
.L897:
	mov	d15,#0
.L898:
	ld.a	a15,[a10]24
	st.b	[a15],d15
.L899:
	j	.L143
.L142:
.L141:
	jne	d9,#1,.L144
.L900:
	ld.a	a15,[a10]16
.L505:
	ld.bu	d15,[a15]
.L901:
	jne	d15,#0,.L145
.L902:
	mov	d15,#16
.L903:
	st.b	[a15],d15
.L904:
	mov	d15,#0
.L905:
	ld.a	a15,[a10]24
.L506:
	st.b	[a15],d15
.L906:
	j	.L146
.L145:
.L144:
	mov	d15,#0
.L907:
	ld.a	a15,[a10]24
	st.b	[a15],d15
.L908:
	mov	d15,#10
.L909:
	jne	d15,d9,.L147
.L910:
	mov	d15,#0
.L911:
	ld.a	a15,[a10]16
.L507:
	st.b	[a15],d15
.L912:
	mov	d8,#10
.L913:
	mov	d15,#1
.L914:
	ld.a	a15,[a10]24
.L508:
	st.b	[a15],d15
.L147:
	j	.L148
.L143:
	j	.L149
.L98:
	jne	d15,#2,.L150
.L915:
	j	.L151
.L150:
	mov	d8,#1
.L151:
.L149:
.L14:
	movh.a	a13,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a13,[a13]@los(s_Dcm_idxIocbiDidIndexType_st)
.L916:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1835              { /* Copy the control parameter */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1836                  dataIoCtrlParam_u8 = pMsgContext->reqData[2];
	ld.a	a15,[a10]28
.L509:
	ld.a	a15,[a15]4
.L510:
	ld.bu	d9,[a15]2
.L494:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1837                  /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1838                  s_IsIOCBISubfuncCalled_b = TRUE;
	movh.a	a12,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a12,[a12]@los(s_IsIOCBISubfuncCalled_b)
.L917:
	mov	d0,#1
.L918:
	st.b	[a12],d0
.L919:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1839                  /* Obtain ControlStatusRecord by calling ReadFunction */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1840                  dataRetGetDid_u8 = Dcm_GetDIDData(&s_Dcm_idxIocbiDidIndexType_st,&pMsgContext->resData[3]);
	ld.a	a15,[a10]28
.L511:
	ld.a	a5,[a15]
.L920:
	add.a	a5,#3
	mov.aa	a4,a13
	call	Dcm_GetDIDData
.L512:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1841                  /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1842                  s_IsIOCBISubfuncCalled_b = FALSE;
	mov	d0,#0
.L921:
	st.b	[a12],d0
.L922:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1843                  /* if ReadFunc is OK */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1844                  if(dataRetGetDid_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1845                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1846                      /*Update the DcmDsp_IocbiStatus_array with the state of subfunction which is active */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1847                      for(idxIocbiIndex_u16=0;idxIocbiIndex_u16<DCM_CFG_NUM_IOCBI_DIDS;idxIocbiIndex_u16++)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1848                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1849                          ptrIOCBIStatusArrayConfig=&DcmDsp_IocbiStatus_array[idxIocbiIndex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1850                          if(s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16 == ptrIOCBIStatusArrayConfig->idxindex_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1851                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1852                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RETURNCONTROLTOECU)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1853                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1854                                  /*Set the status flag to IDLE state since returncontrol to ECU was successful*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1855                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_IDLESTATE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1856                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1857  #if(DCM_CFG_DSP_RESETTODEFAULT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1858                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RESETTODEFAULT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1859                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1860                                  /*Set the status flag to RTD active state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1861                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_RTD_ACTIVE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1862                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1863  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1864  #if(DCM_CFG_DSP_FREEZECURRENTSTATE_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1865                              if(dataIoCtrlParam_u8 == DCM_IOCBI_FREEZECURRENTSTATE)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1866                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1867                                  /*Set the status flag to FCS active state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1868                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_FCS_ACTIVE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1869                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1870  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1871  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1872                              if(dataIoCtrlParam_u8 == DCM_IOCBI_SHORTTERMADJUSTMENT)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1873                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1874                                  /*Set the status flag to STA active state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1875                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_STA_ACTIVE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1876                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1877  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1878                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1879                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1880                      /* Reset the state machine */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1881                      Dcm_stDspIocbiState_en = DCM_IOCBI_IDLE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1882                      s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b = DCM_INITIAL;
	lea	a12,[a13]11
.L923:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1883                      s_Dcm_idxIocbiDidIndexType_st.nrNumofSignalsRead_u16 = 0x0; /*All the signals read correctly, therefore reset it to zero*/
	mov.aa	a14,a13
	add.a	a14,#4
.L924:
	jne	d2,#0,.L152
.L925:
	mov	d0,#0
.L514:
	j	.L153
.L154:
	movh.a	a15,#@his(DcmDsp_IocbiStatus_array)
	lea	a15,[a15]@los(DcmDsp_IocbiStatus_array)
.L926:
	addsc.a	a15,a15,d0,#3
.L515:
	ld.hu	d1,[a13]6
.L927:
	ld.hu	d15,[a15]0
.L928:
	jne	d15,d1,.L155
.L929:
	jne	d9,#0,.L156
.L930:
	mov	d15,#0
.L931:
	st.w	[a15]4,d15
.L156:
	jne	d9,#1,.L157
.L932:
	mov	d15,#3
.L933:
	st.w	[a15]4,d15
.L157:
	jne	d9,#2,.L158
.L934:
	mov	d15,#1
.L935:
	st.w	[a15]4,d15
.L158:
	jne	d9,#3,.L159
.L936:
	mov	d15,#5
.L937:
	st.w	[a15]4,d15
.L159:
.L155:
	add	d0,#1
.L153:
	jeq	d0,#0,.L154
.L938:
	mov	d15,#1
.L939:
	ld.a	a15,[a10]32
	st.w	[a15],d15
.L940:
	mov	d15,#0
.L941:
	st.b	[a12],d15
.L942:
	mov	d15,#0
.L943:
	st.h	[a14],d15
.L944:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1884                      s_Dcm_idxIocbiDidIndexType_st.dataSignalLengthInfo_u32 = 0x0; /*All the signals read correctly, therefore reset the signal data length to zero*/
	mov	d15,#0
.L945:
	st.w	[a13],d15
.L946:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1885                      /* Prepare the DID bytes and the Input Output Control parameter in the response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1886                      pMsgContext->resData[0] = pMsgContext->reqData[0];
	ld.a	a15,[a10]28
.L516:
	ld.a	a2,[a15]
.L947:
	ld.a	a15,[a15]4
.L517:
	ld.bu	d15,[a15]
.L948:
	st.b	[a2],d15
.L949:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1887                      pMsgContext->resData[1] = pMsgContext->reqData[1];
	ld.a	a15,[a10]28
.L518:
	ld.a	a2,[a15]
.L950:
	ld.a	a15,[a15]4
.L519:
	ld.bu	d15,[a15]1
.L951:
	st.b	[a2]1,d15
.L952:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1888                      pMsgContext->resData[2] = dataIoCtrlParam_u8;
	ld.a	a15,[a10]28
.L520:
	ld.a	a15,[a15]
.L521:
	st.b	[a15]2,d9
.L953:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1889                      pMsgContext->resDataLen = Dcm_ReadSignalLength_u16+DSP_IOCBI_MINREQLEN;
	movh.a	a15,#@his(Dcm_ReadSignalLength_u16)
	lea	a15,[a15]@los(Dcm_ReadSignalLength_u16)
	ld.hu	d15,[a15]0
.L954:
	add	d15,#3
.L955:
	ld.a	a15,[a10]28
.L522:
	st.w	[a15]12,d15
.L956:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1890                      dataServretVal_u8=E_OK;
	mov	d8,#0
.L957:
	j	.L160
.L152:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1891                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1892                  else if(dataRetGetDid_u8 == DCM_E_PENDING)
	mov	d15,#10
.L958:
	jne	d15,d2,.L161
.L959:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1893                  { /* Do nothing, wait for next call */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1894                      s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b = DCM_PENDING;
	mov	d15,#1
.L960:
	st.b	[a12],d15
.L961:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1895                      dataServretVal_u8=DCM_E_PENDING;
	mov	d8,#10
.L962:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1896                      Dcm_DidSignalIdx_u16 = s_Dcm_idxIocbiDidIndexType_st.nrNumofSignalsRead_u16;
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
.L523:
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L963:
	ld.hu	d15,[a14]0
.L964:
	st.h	[a15],d15
.L965:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1897  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1898                      /*Update the DcmDsp_IocbiStatus_array with the state of subfunction which is active */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1899                      for(idxIocbiIndex_u16=0;idxIocbiIndex_u16<DCM_CFG_NUM_IOCBI_DIDS;idxIocbiIndex_u16++)
	mov	d0,#0
.L524:
	j	.L162
.L163:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1900                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1901                          ptrIOCBIStatusArrayConfig=&DcmDsp_IocbiStatus_array[idxIocbiIndex_u16];
	movh.a	a15,#@his(DcmDsp_IocbiStatus_array)
	lea	a15,[a15]@los(DcmDsp_IocbiStatus_array)
.L966:
	addsc.a	a15,a15,d0,#3
.L525:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1902                          if(s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16 == ptrIOCBIStatusArrayConfig->idxindex_u16)
	ld.hu	d1,[a13]6
.L967:
	ld.hu	d15,[a15]0
.L968:
	jne	d15,d1,.L164
.L969:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1903                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1904  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1905                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RETURNCONTROLTOECU)
	jne	d9,#0,.L165
.L970:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1906                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1907                                  /*Set the status flag to RCE pending state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1908                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_RCE_PENDING;
	mov	d15,#8
.L971:
	st.w	[a15]4,d15
.L165:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1909                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1910  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1911  #if(DCM_CFG_DSP_RESETTODEFAULT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1912                              if(dataIoCtrlParam_u8 == DCM_IOCBI_RESETTODEFAULT)
	jne	d9,#1,.L166
.L972:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1913                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1914                                  /*Set the status flag to RTD pending state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1915                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_RTD_PENDING;
	mov	d15,#4
.L973:
	st.w	[a15]4,d15
.L166:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1916                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1917  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1918  #if(DCM_CFG_DSP_FREEZECURRENTSTATE_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1919                              if(dataIoCtrlParam_u8 == DCM_IOCBI_FREEZECURRENTSTATE)
	jne	d9,#2,.L167
.L974:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1920                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1921                                  /*Set the status flag to FCS pending state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1922                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_FCS_PENDING;
	mov	d15,#2
.L975:
	st.w	[a15]4,d15
.L167:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1923                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1924  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1925  #if(DCM_CFG_DSP_SHORTTERMADJUSTMENT_ENABLED  == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1926                              if(dataIoCtrlParam_u8 == DCM_IOCBI_SHORTTERMADJUSTMENT)
	jne	d9,#3,.L168
.L976:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1927                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1928                                  /*Set the status flag to STA pending state*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1929                                  ptrIOCBIStatusArrayConfig->IocbiStatus_en = DCM_IOCBI_STA_PENDING;
	mov	d15,#6
.L977:
	st.w	[a15]4,d15
.L168:
.L164:
	add	d0,#1
.L162:
	jeq	d0,#0,.L163
.L978:
	j	.L169
.L161:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1930                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1931  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1932                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1933                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1934                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1935  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1936                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1937                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1938                      if(dataRetGetDid_u8 == E_NOT_OK)
	jne	d2,#1,.L170
.L979:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1939                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1940                          /* Invoke the DcmAPPl API to obtain the NRC from the Application*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1941                          dataretVal_u8 = DcmAppl_DcmReadDataNRC(Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16].dataDid_u16,Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16].adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].posnSigBit_u16,dataNegRespCode_u8);
	movh.a	a15,#@his(Dcm_DIDConfig)
.L526:
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L980:
	ld.hu	d15,[a13]6
	sha	d15,#4
.L981:
	addsc.a	a15,a15,d15,#0
.L982:
	movh.a	a2,#@his(Dcm_DidSignalIdx_u16)
	lea	a2,[a2]@los(Dcm_DidSignalIdx_u16)
.L983:
	ld.hu	d4,[a15]0
.L984:
	ld.a	a15,[a15]8
.L985:
	ld.hu	d15,[a2]0
.L986:
	addsc.a	a15,a15,d15,#2
.L987:
	ld.hu	d5,[a15]0
.L988:
	ld.a	a4,[a10]16
.L527:
	call	DcmAppl_DcmReadDataNRC
.L513:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1942                          if(dataretVal_u8!=E_OK)
	jeq	d2,#0,.L171
.L989:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1943                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1944                              /* Send negative response code DCM_E_GENERALREJECT as the application has returned E_NOT_OK from ReadNrc applfunction
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1945                               * or has not set the NRC */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1946                              *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L990:
	ld.a	a15,[a10]16
.L528:
	st.b	[a15],d15
.L171:
	j	.L172
.L170:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1947                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1948                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1949                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1950                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1951                          *dataNegRespCode_u8 = DCM_E_GENERALREJECT;
	mov	d15,#16
.L991:
	ld.a	a15,[a10]16
.L529:
	st.b	[a15],d15
.L172:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1952                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1953                      s_Dcm_idxIocbiDidIndexType_st.nrNumofSignalsRead_u16 = 0x0; /*E_NOT_OK set stop reading the signals, therefore reset the number of singals read to zero*/
	mov	d15,#0
.L992:
	st.h	[a14],d15
.L993:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1954                      s_Dcm_idxIocbiDidIndexType_st.dataSignalLengthInfo_u32 = 0x0; /*All the signals not read correctly, therefore reset the signal data length to zero*/
	mov	d15,#0
.L994:
	st.w	[a13],d15
.L995:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1955                      s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b = DCM_INITIAL;
	mov	d15,#0
.L996:
	st.b	[a12],d15
.L169:
.L160:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1956                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1957                  break;
	j	.L173

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1958              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1959  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1960              default:
.L15:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1961              { /* IOCBI service is not in a valid state, Send negative response */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1962                  *dataNegRespCode_u8 = DCM_E_CONDITIONSNOTCORRECT;
	mov	d15,#34
.L997:
	ld.a	a15,[a10]16
.L530:
	st.b	[a15],d15
.L998:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1963                  break;
	j	.L174

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1964              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1965          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1966  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1967          if(*dataNegRespCode_u8 != 0x00 )
.L174:
.L173:
.L148:
.L146:
.L97:
.L83:
.L29:
	ld.a	a15,[a10]16
.L531:
	ld.bu	d15,[a15]
.L999:
	jeq	d15,#0,.L175
.L1000:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1968          { /* Reset signal index */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1969              Dcm_DidSignalIdx_u16 = 0x0;
	movh.a	a15,#@his(Dcm_DidSignalIdx_u16)
.L532:
	lea	a15,[a15]@los(Dcm_DidSignalIdx_u16)
.L1001:
	mov	d15,#0
.L1002:
	st.h	[a15],d15
.L1003:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1970              dataServretVal_u8 = E_NOT_OK;
	mov	d8,#1
.L1004:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1971              Dcm_stDspIocbiState_en = DCM_IOCBI_IDLE;
	mov	d15,#1
.L1005:
	ld.a	a15,[a10]32
	st.w	[a15],d15
.L175:
.L9:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1972          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1973      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1974      return dataServretVal_u8;
	mov	d2,d8
.L533:
	j	.L176

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1975  }
.L176:
	ret
.L273:
	
__Dcm_DcmInputOutputControlByIdentifier_function_end:
	.size	Dcm_DcmInputOutputControlByIdentifier,__Dcm_DcmInputOutputControlByIdentifier_function_end-Dcm_DcmInputOutputControlByIdentifier
.L225:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_ResetActiveIoCtrl',code,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_ResetActiveIoCtrl'
	.align	2
	
	.global	Dcm_ResetActiveIoCtrl

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1976  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1977  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1978   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1979   * Dcm_ResetActiveIoCtrl:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1980   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1981   * Invoke the Return Control to ECU for all the signals of an IOCBI DID.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1982   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1983   * \param     dataSessionMask_u32           :           Session mask in which the IOCBI DID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1984   *            dataSecurityMask_u32          :           Security mask in which the IOCBI DID is supported
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1985   *            flgSessChkReqd_b              :           Flag to check if session check needs to be done.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1986   *                                                      For security transition this flag is false,which
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1987   *                                                      indicates no session check necessary
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1988   * \retval
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1989   *  void
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1990   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1991   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1992   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1993  FUNC(void,DCM_CODE) Dcm_ResetActiveIoCtrl(VAR (uint32,AUTOMATIC) dataSessionMask_u32,
; Function Dcm_ResetActiveIoCtrl
.L208:
Dcm_ResetActiveIoCtrl:	.type	func
	sub.a	a10,#8
.L534:
	mov	e8,d5,d4
	mov	d10,d6
.L535:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1994  VAR (uint32,AUTOMATIC) dataSecurityMask_u32,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1995  VAR (boolean,AUTOMATIC) flgSessChkReqd_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1996  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1997      /**The code which would loop through all the IOCBI DIDs and call all the returncontrol to ECU functions to reset all the  active IOctrls
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1998       supported in the current session level*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  1999  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2000      VAR(uint16 ,AUTOMATIC) idxIocbiIndex_u16; /*Index to loop through all the IOCTRL DID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2001      VAR(uint16 ,AUTOMATIC) idxSig_u16; /*Index to loop through all the signals of the DID*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2002      VAR(Std_ReturnType,AUTOMATIC) dataRetIocbiFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2003      VAR(Dcm_NegativeResponseCodeType,AUTOMATIC) dataNegResCode_u8; /* Negative response code indicator */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2004      P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrDidConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2005      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA) ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2006      P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrIOSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2007      P2CONST(Dcm_ExtendedDIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidExtendedConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2008      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA) ptrIOCBIFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2009  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2010      VAR(uint8 ,AUTOMATIC) ControlMask_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2011      VAR(uint16 ,AUTOMATIC) ControlMask_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2012      VAR(uint32 ,AUTOMATIC) ControlMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2013      ControlMask_u8 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2014      ControlMask_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2015      ControlMask_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2016  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2017      dataRetIocbiFunc_u8 = E_NOT_OK;
	mov	d2,#1
.L536:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2018      dataNegResCode_u8 = 0x00;
	mov	d0,#0
.L1063:
	st.b	[a10],d0
.L1064:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2019  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2020  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2021  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2022      for (idxIocbiIndex_u16 = 0; idxIocbiIndex_u16 < DCM_CFG_NUM_IOCBI_DIDS; idxIocbiIndex_u16++)
	mov	d11,#0
.L537:
	j	.L177
.L178:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2023      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2024          /*Check if the DID is active,*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2025          /*Check if IOCBI DIDs status is not ideal state and enable the iocontrol to be reset on session/security change */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2026          if((DCM_IOCBI_IDLESTATE != DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].IocbiStatus_en)                                                                           &&     \ 
	movh.a	a15,#@his(DcmDsp_IocbiStatus_array)
	lea	a15,[a15]@los(DcmDsp_IocbiStatus_array)
.L1065:
	addsc.a	a15,a15,d11,#3
.L1066:
	mov.aa	a12,a15
	add.a	a12,#4
	ld.w	d15,[a12]
.L1067:
	jeq	d15,#0,.L179
.L1068:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2027                  (Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16].adrExtendedConfig_pcst->dataIocbirst_b  != FALSE)                                    &&     \ 
	ld.hu	d0,[a15]0
	sha	d0,#4
.L1069:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L1070:
	addsc.a	a13,a15,d0,#0
.L1071:
	ld.a	a15,[a13]12
.L1072:
	ld.bu	d15,[a15]41
.L1073:
	jeq	d15,#0,.L180
.L1074:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2028                  (((0x0u == ((Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16].adrExtendedConfig_pcst->dataSecBitMask_u32)  & dataSecurityMask_u32)))   ||     \ 
	ld.w	d15,[a15]28
.L538:
	and	d15,d9
.L539:
	jeq	d15,#0,.L181
.L1075:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2029                          (((flgSessChkReqd_b) && (0x0u  == ((Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16].adrExtendedConfig_pcst->dataSessBitMask_u32) & dataSessionMask_u32))))))
	jeq	d10,#0,.L182
.L1076:
	ld.w	d15,[a15]24
.L540:
	and	d15,d8
.L541:
	jne	d15,#0,.L183
.L181:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2030  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2031          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2032              ptrDidConfig = &Dcm_DIDConfig[DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].idxindex_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2033  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2034              /*Loop through all the signals of the IOCBI DID and invoke return control to ECU*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2035              for (idxSig_u16 = 0; idxSig_u16 < ptrDidConfig->nrSig_u16; idxSig_u16++)
	mov	d12,#0
.L542:
	j	.L184
.L185:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2036              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2037                  ptrSigConfig = &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[idxSig_u16].idxDcmDspDatainfo_u16];
	ld.a	a2,[a13]8
.L1077:
	addsc.a	a15,a2,d12,#2
.L1078:
	ld.hu	d0,[a15]2
	sha	d0,#4
.L1079:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L1080:
	addsc.a	a4,a15,d0,#0
.L544:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2038                  ptrIOSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
	ld.hu	d0,[a4]8
	sha	d0,#4
.L1081:
	movh.a	a2,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a2,[a2]@los(Dcm_DspDid_ControlInfo_st)
.L1082:
	addsc.a	a2,a2,d0,#0
.L546:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2039  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2040  #if( DCM_CFG_DSP_IOCBI_SR_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2041                  if((ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER_AS_SERVICE) || (ptrSigConfig->usePort_u8 == USE_DATA_SENDER_RECEIVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2042  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2043                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2044                      ptrIOCBIFnc= Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].ioControlRequest_cpv;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2045                      if(ptrIOCBIFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2046                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2047                          /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2048                          s_IsIOCBISubfuncCalled_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2049                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2050                          dataRetIocbiFunc_u8 =(*(IOControlrequest_pfct)(ptrIOCBIFnc))(DCM_RETURN_CONTROL_TO_ECU,NULL_PTR,0,0,DCM_INITIAL,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2051                          /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2052                          s_IsIOCBISubfuncCalled_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2053                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2054                      ptrIOCBIFnc = NULL_PTR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2055                      (void)dataRetIocbiFunc_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2056                      (void)dataNegResCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2057                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2058  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2059  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2060                  ptrIOCBIFnc = Dcm_DspIOControlInfo[ptrIOSigConfig->idxDcmDspIocbiInfo_u16].adrReturnControlEcu_cpv;
	ld.hu	d15,[a2]12
	sha	d15,#4
.L1083:
	movh.a	a2,#@his(Dcm_DspIOControlInfo)
.L547:
	lea	a2,[a2]@los(Dcm_DspIOControlInfo)
.L1084:
	addsc.a	a2,a2,d15,#0
.L1085:
	ld.a	a2,[a2]
.L548:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2061                  ptrDidExtendedConfig = ptrDidConfig->adrExtendedConfig_pcst;
	ld.a	a15,[a13]12
.L1086:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2062                  /*Cheeck if return control to ECU is supported or not for the DID, lower most bit represents return control to ECU*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2063                  if (((ptrDidConfig->adrExtendedConfig_pcst->statusmaskIOControl_u8 & 0x01u) > 0u)
	ld.bu	d15,[a15]42
.L1087:
	jz.t	d15:0,.L186
.L1088:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2064                          && (ptrIOCBIFnc != NULL_PTR))
	jz.a	a2,.L187
.L1089:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2065                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2066                      s_ActiveDid_u16 = ptrDidConfig->dataDid_u16;
	movh.a	a5,#@his(s_ActiveDid_u16)
	lea	a5,[a5]@los(s_ActiveDid_u16)
.L1090:
	ld.hu	d15,[a13]0
.L1091:
	st.h	[a5],d15
.L1092:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2067                      /*Set the flag for s_IsIOCBISubfuncCalled is to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2068                      s_IsIOCBISubfuncCalled_b = TRUE;
	movh.a	a14,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a14,[a14]@los(s_IsIOCBISubfuncCalled_b)
.L1093:
	mov	d15,#1
.L1094:
	st.b	[a14],d15
.L1095:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2069  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2070                          /*As ReturnControlToEcu is a synchronous API , the same API is invoked for both Synch and ASynch Fnc and ClientServer Configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2071                      if ((ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER)
	ld.bu	d15,[a4]11
.L1096:
	jeq	d15,#2,.L188
.L1097:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2072                              && (ptrSigConfig->usePort_u8 != USE_DATA_SENDER_RECEIVER_AS_SERVICE))
	jeq	d15,#3,.L189
.L1098:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2073                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2074                          if (ptrDidExtendedConfig->dataCtrlMask_en != DCM_CONTROLMASK_EXTERNAL)
	ld.w	d15,[a15]36
.L1099:
	jeq	d15,#2,.L190
.L1100:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2075                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2076                              /* Return Control to ECU is requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2077                              /* Call the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2078                              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2079                              dataRetIocbiFunc_u8 = (*(ReturnControlEcu1_pfct) (ptrIOCBIFnc))(&dataNegResCode_u8);
	lea	a4,[a10]0
.L545:
	calli	a2
.L549:
	j	.L191
.L190:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2080                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2081                          else
.L191:
.L189:
.L188:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2082                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2083  #if(DCM_CFG_DSP_CONTROLMASK_EXTERNAL_ENABLED == DCM_CFG_ON)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2084                              if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==1)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2085                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2086                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2087                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2088                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2089                                  dataRetIocbiFunc_u8=(*(ReturnControlEcu3_pfct)(ptrIOCBIFnc)) (ControlMask_u8,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2090                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2091                              else if(ptrDidExtendedConfig->dataCtrlMaskSize_u8==2)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2092                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2093                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2094                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2095                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2096                                  dataRetIocbiFunc_u8=(*(ReturnControlEcu4_pfct)(ptrIOCBIFnc)) (ControlMask_u16,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2097                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2098                              else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2099                              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2100                                  /* Short Term Adjustment was requested */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2101                                  /* Call the configured API  with Opstatus as DCM_CANCEL */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2102                                  /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2103                                  dataRetIocbiFunc_u8=(*(ReturnControlEcu5_pfct)(ptrIOCBIFnc)) (ControlMask_u32,&dataNegResCode_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2104                              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2105  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2106                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2107                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2108  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2109                      /*if the resetting the IOcontrol was successful, reset the status array to DCM_IOCBI_IDLESTATE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2110                      if (E_OK == dataRetIocbiFunc_u8)
	jne	d2,#0,.L192
.L1101:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2111                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2112                          /*Update the Iocbistatus arrays status with DCM_IOCBI_IDLESTATE  when E_OK is returned from return control to ecu function pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2113                          DcmDsp_IocbiStatus_array[idxIocbiIndex_u16].IocbiStatus_en = DCM_IOCBI_IDLESTATE;
	mov	d15,#0
.L1102:
	st.w	[a12],d15
.L192:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2114                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2115                      /*Set the flag for s_IsIOCBISubfuncCalled is to FALSE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2116                      s_IsIOCBISubfuncCalled_b = FALSE;
	mov	d15,#0
.L1103:
	st.b	[a14],d15
.L187:
.L186:
	add	d12,#1
.L543:
	extr.u	d12,d12,#0,#16
.L184:
	ld.hu	d15,[a13]2
.L1104:
	jlt.u	d12,d15,.L185
.L183:
.L180:
.L179:
.L182:
	add	d11,#1
.L177:
	jeq	d11,#0,.L178
.L1105:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2117                      (void) dataNegResCode_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2118                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2119              }/*End of idxSig_u16 for loop*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2120          }/*End of IF condition to check if IOCBI did is active*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2121  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2122      }/*End of idxIocbiIndex_u16 for loop*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2123  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2124      (void) dataSessionMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2125      (void) dataSecurityMask_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2126      (void) flgSessChkReqd_b;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2127  }
	ret
.L328:
	
__Dcm_ResetActiveIoCtrl_function_end:
	.size	Dcm_ResetActiveIoCtrl,__Dcm_ResetActiveIoCtrl_function_end-Dcm_ResetActiveIoCtrl
.L240:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_GetLengthOfSignal',code,cluster('Dcm_GetLengthOfSignal')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_GetLengthOfSignal'
	.align	2
	
	.global	Dcm_GetLengthOfSignal

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2128  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2129  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2130   ****************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2131   * Dcm_GetLengthOfSignal:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2132   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2133   * Get the read data length of the current active signal for IOCBI request
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2134   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2135   * \param     dataSigLength_u16 :   Pointer to hold the length of the signal
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2136   * \retval     E_OK: calculation finished successfully
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2137   *             E_NOT_OK: error in configuration or in the called length calculating function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2138   *             DCM_INFRASTRUCTURE_ERROR : Infrastructure error occured
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2139   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2140   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2141   ****************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2142   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2143  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2144  FUNC (Std_ReturnType,DCM_CODE) Dcm_GetLengthOfSignal(P2VAR (uint16,AUTOMATIC,DCM_INTERN_DATA) dataSigLength_u16)
; Function Dcm_GetLengthOfSignal
.L210:
Dcm_GetLengthOfSignal:	.type	func
	sub.a	a10,#8
.L550:
	mov.aa	a12,a4
.L552:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2145  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2146      VAR (uint32, AUTOMATIC) dataSigLength_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2147      VAR (Std_ReturnType, AUTOMATIC) dataRetVal_u8; /* Local variable to store return value */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2148      P2CONST(Dcm_DIDConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrDidConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2149      P2CONST(Dcm_DataInfoConfig_tst,AUTOMATIC, DCM_INTERN_DATA )ptrSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2150      P2CONST(Dcm_SignalDIDSubStructConfig_tst,AUTOMATIC, DCM_INTERN_DATA ) ptrIOSigConfig;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2151      P2VAR(void,AUTOMATIC, DCM_INTERN_DATA) ptrReadDataLenFnc;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2152  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2153      /* Initialisations */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2154      dataRetVal_u8 = E_NOT_OK;
	mov	d8,#1
.L553:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2155      *dataSigLength_u16 = 0x0;
	mov	d0,#0
.L1116:
	st.h	[a12],d0
.L1117:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2156      ptrDidConfig = &Dcm_DIDConfig[s_Dcm_idxIocbiDidIndexType_st.idxIndex_u16];
	movh.a	a15,#@his(s_Dcm_idxIocbiDidIndexType_st)
	lea	a15,[a15]@los(s_Dcm_idxIocbiDidIndexType_st)
.L1118:
	ld.hu	d0,[a15]6
	sha	d0,#4
.L1119:
	movh.a	a15,#@his(Dcm_DIDConfig)
	lea	a15,[a15]@los(Dcm_DIDConfig)
.L1120:
	addsc.a	a15,a15,d0,#0
.L554:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2157      ptrSigConfig= &Dcm_DspDataInfo_st[ptrDidConfig->adrDidSignalConfig_pcst[Dcm_DidSignalIdx_u16].idxDcmDspDatainfo_u16];
	ld.a	a15,[a15]8
.L555:
	movh.a	a2,#@his(Dcm_DidSignalIdx_u16)
	lea	a2,[a2]@los(Dcm_DidSignalIdx_u16)
	ld.hu	d15,[a2]0
.L1121:
	addsc.a	a15,a15,d15,#2
.L1122:
	ld.hu	d0,[a15]2
	sha	d0,#4
.L1123:
	movh.a	a15,#@his(Dcm_DspDataInfo_st)
	lea	a15,[a15]@los(Dcm_DspDataInfo_st)
.L1124:
	addsc.a	a2,a15,d0,#0
.L556:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2158      ptrIOSigConfig = &Dcm_DspDid_ControlInfo_st[ptrSigConfig->idxDcmDspControlInfo_u16];
	ld.hu	d15,[a2]8
	sha	d0,d15,#4
.L1125:
	movh.a	a15,#@his(Dcm_DspDid_ControlInfo_st)
	lea	a15,[a15]@los(Dcm_DspDid_ControlInfo_st)
.L1126:
	addsc.a	a15,a15,d0,#0
.L558:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2159      ptrReadDataLenFnc = ptrIOSigConfig->adrReadDataLengthFnc_pfct;
	ld.a	a15,[a15]4
.L559:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2160  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2161      /* Check for USE FUNC and valid Read Data length function configuration */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2162      if((ptrSigConfig->idxDcmDspControlInfo_u16 >0)&& (ptrReadDataLenFnc != NULL_PTR))
	jeq	d15,#0,.L193
.L1127:
	jz.a	a15,.L194
.L1128:
	j	.L195
.L194:
.L193:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2163      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2164  #if(DCM_CFG_DSP_CONTROL_VAR_LEN_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2165          /* Get the length from the configured API */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2166          if((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_FNC) || (ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2167          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2168              /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2169              dataRetVal_u8 = (*(ReadDataLengthFnc1_pf)(ptrReadDataLenFnc))(dataSigLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2170          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2171          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2172          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2173              if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC) || (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2174              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2175      #if (DCM_CFG_DSP_READ_ASP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2176                  if ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER) && (ptrSigConfig->UseAsynchronousServerCallPoint_b))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2177                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2178                      if(!s_DcmReadLengthRteCallPlaced_b)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2179                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2180                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2181                          dataRetVal_u8 = (*(ReadDataLengthFnc6_pf)(ptrReadDataLenFnc))(s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2182                          if(dataRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2183                           {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2184                              /* Set the Rte_Call Flag to TRUE and return Pending so that Rte_Result will be invoked in the next cycle */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2185                              s_DcmReadLengthRteCallPlaced_b = TRUE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2186                              dataRetVal_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2187                           }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2188                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2189                      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2190                      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2191                          ptrReadDataLenFnc = ptrIOSigConfig->adrReadDataLengthFncResults_pfct;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2192                          /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2193                          dataRetVal_u8 = (*(ReadDataLengthFnc1_pf)(ptrReadDataLenFnc))(dataSigLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2194  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2195                          if(dataRetVal_u8 == E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2196                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2197                             s_DcmReadLengthRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2198                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2199                          else if(dataRetVal_u8 == RTE_E_NO_DATA)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2200                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2201                              dataRetVal_u8 = DCM_E_PENDING;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2202                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2203                          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2204                          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2205                             /* For any return value other than E_OK , RTE_E_NO_DATA ,  reset the Flag */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2206                              s_DcmReadLengthRteCallPlaced_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2207                          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2208                      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2209                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2210                  else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2211      #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2212                  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2213                      /* MR12 RULE 11.1 VIOLATION: Typecast to function pointer required for implementation - Required for efficient RAM usage by using single void function pointer */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2214                      dataRetVal_u8 = (*(ReadDataLengthFnc4_pf)(ptrReadDataLenFnc))(s_Dcm_idxIocbiDidIndexType_st.dataopstatus_b,dataSigLength_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2215                  }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2216              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2217          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2218          if(dataRetVal_u8==E_OK)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2219          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2220              /* If the length received in more than the configured maximum length for a lengththen return error */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2221  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2222  #if (DCM_CFG_READDATALENGTH_BITS==DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2223              /* Length is returned in bytes. Convert to bits */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2224              *dataSigLength_u16=*dataSigLength_u16 *8;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2225  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2226              if((*dataSigLength_u16 > ptrSigConfig->dataSize_u16) ||(*dataSigLength_u16==0))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2227              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2228                  dataRetVal_u8 = E_NOT_OK;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2229              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2230          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2231          else if((dataRetVal_u8 == DCM_E_PENDING) && ((ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_FNC) || (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2232          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2233          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2234          else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2235          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2236              /* Check for infrastructural errors in case of RTE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2237  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2238              if((Dcm_IsInfrastructureErrorPresent_b(dataRetVal_u8) != FALSE)&&((ptrSigConfig->usePort_u8 == USE_DATA_SYNCH_CLIENT_SERVER) || (ptrSigConfig->usePort_u8 == USE_DATA_ASYNCH_CLIENT_SERVER)))
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2239              {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2240                  dataRetVal_u8=DCM_INFRASTRUCTURE_ERROR;
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2241              }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2242          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2243  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2244      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2245      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2246      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2247  #if(DCM_CFG_DSP_CONTROL_FIXED_LEN_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2248          /*If the interface is RTE AR4.x retain the signal size in bits, else convert it to bytes*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2249          *dataSigLength_u16 = ptrSigConfig->dataSize_u16;
	ld.hu	d15,[a2]4
.L1129:
	st.h	[a12],d15
.L1130:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2250          dataRetVal_u8 = E_OK;
	mov	d8,#0
.L195:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2251  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2252      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2253  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2254      if(dataRetVal_u8 == E_OK)
	jne	d8,#0,.L196
.L1131:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2255      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2256          dataSigLength_u32=*dataSigLength_u16;
	ld.hu	d15,[a12]0
.L1132:
	st.w	[a10],d15
.L1133:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2257          /* Convert data length in Bits to the appropriate data length in bytes */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2258          Dcm_ConvBitsToBytes(&dataSigLength_u32);
	lea	a4,[a10]0
.L551:
	call	Dcm_ConvBitsToBytes
.L557:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2259          *dataSigLength_u16=(uint16)dataSigLength_u32;
	ld.w	d15,[a10]
.L1134:
	st.h	[a12],d15
.L196:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2260      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2261      return dataRetVal_u8;
	mov	d2,d8
.L560:
	j	.L197

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2262  }
.L197:
	ret
.L346:
	
__Dcm_GetLengthOfSignal_function_end:
	.size	Dcm_GetLengthOfSignal,__Dcm_GetLengthOfSignal_function_end-Dcm_GetLengthOfSignal
.L250:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_SetFlagforIOCBI',code,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_SetFlagforIOCBI'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2263  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2264  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2265   *************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2266   * Dcm_SetFlagforIOCBI:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2267   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2268   * This API sets/resets the flag which is required for getting the active DID based on the input parameter
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2269   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2270   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2271   * \param     boolean isFlag_b : parameter for setting or resetting the flag to get the active DID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2272   * \retval    None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2273   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2274   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2275   **************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2276   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2277  static FUNC(void,DCM_CODE) Dcm_SetFlagforIOCBI(VAR (boolean,AUTOMATIC) isFlag_b)
; Function Dcm_SetFlagforIOCBI
.L212:
Dcm_SetFlagforIOCBI:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2278  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2279      /* Setting/resetting the flag so that the application can call GetActiveDID
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2280  	   function from DcmAppl_DcmConfirmation */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2281      s_IsIOCBISubfuncCalled_b = isFlag_b;
	movh.a	a15,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a15,[a15]@los(s_IsIOCBISubfuncCalled_b)
.L1139:
	st.b	[a15],d4
.L1140:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2282  }
	ret
.L354:
	
__Dcm_SetFlagforIOCBI_function_end:
	.size	Dcm_SetFlagforIOCBI,__Dcm_SetFlagforIOCBI_function_end-Dcm_SetFlagforIOCBI
.L255:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_Prv_DspIOCBIConfirmation',code,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_Prv_DspIOCBIConfirmation'
	.align	2
	
	.global	Dcm_Prv_DspIOCBIConfirmation

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2283  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2284  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2285   *******************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2286   * Dcm_Prv_DspIOCBIConfirmation : API used for confirmation of response sent for
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2287   *							      InputOutputControlByIdentifier (0x2F) service.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2288   * \param           dataIdContext_u8    Service Id
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2289   * \param           dataRxPduId_u8      PDU Id on which request is Received
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2290   * \param           dataSourceAddress_u16    Tester Source address id
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2291   * \param           status_u8                Status of Tx confirmation function
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2292   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2293   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2294   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2295   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2296   *******************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2297   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2298   FUNC(void, DCM_CODE) Dcm_Prv_DspIOCBIConfirmation(
; Function Dcm_Prv_DspIOCBIConfirmation
.L214:
Dcm_Prv_DspIOCBIConfirmation:	.type	func
	mov	e8,d5,d4
	mov	e10,d7,d6
.L1110:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2299   VAR(Dcm_IdContextType ,AUTOMATIC)dataIdContext_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2300   VAR(PduIdType,AUTOMATIC)dataRxPduId_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2301   VAR(uint16,AUTOMATIC)dataSourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2302   VAR(Dcm_ConfirmationStatusType,AUTOMATIC)status_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2303  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2304          if(dataIdContext_u8 == DCM_DSP_SID_INPUTOUTPUTCONTROLBYIDENTIFIER)
	mov	d15,#47
.L562:
	jne	d15,d8,.L198
.L563:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2305          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2306  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2307              Dcm_SetFlagforIOCBI(TRUE);
	mov	d4,#1
.L561:
	call	Dcm_SetFlagforIOCBI
.L198:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2308          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2309  DcmAppl_DcmConfirmation(dataIdContext_u8,dataRxPduId_u8,dataSourceAddress_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2310  																	status_u8);
	mov	e4,d9,d8
.L564:
	mov	e6,d11,d10
.L565:
	call	DcmAppl_DcmConfirmation
.L1111:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2311          if(dataIdContext_u8 == DCM_DSP_SID_INPUTOUTPUTCONTROLBYIDENTIFIER)
	mov	d15,#47
.L566:
	jne	d15,d8,.L199
.L567:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2312          {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2313              Dcm_SetFlagforIOCBI(FALSE);
	mov	d4,#0
	call	Dcm_SetFlagforIOCBI
.L199:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2314          }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2315  }
	ret
.L341:
	
__Dcm_Prv_DspIOCBIConfirmation_function_end:
	.size	Dcm_Prv_DspIOCBIConfirmation,__Dcm_Prv_DspIOCBIConfirmation_function_end-Dcm_Prv_DspIOCBIConfirmation
.L245:
	; End of function
	
	.sdecl	'.text.DcmDspUds_Iocbi.Dcm_GetActiveIOCBIDid',code,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.text.DcmDspUds_Iocbi.Dcm_GetActiveIOCBIDid'
	.align	2
	
	.global	Dcm_GetActiveIOCBIDid

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2316  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2317  /**
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2318   *************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2319   * Dcm_GetActiveIOCBIDid:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2320   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2321   * This API returns the current active DID. This function is called from the Dcm API Dcm_GetActiveDid.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2322   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2323   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2324   * \param     uint16* dataDid_u16 : Parameter for updating of the DID under processing. The DID value returned is valid only if return value is E_OK.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2325   * \retval    Std_ReturnType : E_OK : The DID under processing is a normal DID.The parameter dataDid_u16 contains valid DID value in this case.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2326   *                             E_NOT_OK: The DID under processing is a range DID. The parameter dataDid_u16 contains invalid data in this case.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2327   *                             Also if the API is called from any other Appl function other than IO control parameter functions, E_NOT_OK shall be returned.
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2328   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2329   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2330   **************************************************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2331   */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2332  FUNC(Std_ReturnType,DCM_CODE) Dcm_GetActiveIOCBIDid(P2VAR(uint16,AUTOMATIC,DCM_INTERN_DATA) dataDid_u16)
; Function Dcm_GetActiveIOCBIDid
.L216:
Dcm_GetActiveIOCBIDid:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2333  {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2334  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2335      /* Update the DID value currently under process */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2336      /*Check if s_IsIOCBISubfuncCalled is set to TRUE*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2337      if (s_IsIOCBISubfuncCalled_b != FALSE)
	movh.a	a15,#@his(s_IsIOCBISubfuncCalled_b)
	lea	a15,[a15]@los(s_IsIOCBISubfuncCalled_b)
	ld.bu	d15,[a15]
.L1053:
	jeq	d15,#0,.L200
.L1054:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2338      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2339          *dataDid_u16 = s_ActiveDid_u16;
	movh.a	a15,#@his(s_ActiveDid_u16)
	lea	a15,[a15]@los(s_ActiveDid_u16)
	ld.hu	d15,[a15]0
.L1055:
	st.h	[a4],d15
.L1056:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2340          return (E_OK);
	mov	d2,#0
.L1057:
	j	.L201
.L200:

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2341      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2342      else
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2343      {
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2344          /* if this API is called from anywhere else, other than from the supported sub-functions */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2345          return E_NOT_OK;
	mov	d2,#1
.L1058:
	j	.L202

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2346      }
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2347  }
.L202:
.L201:
	ret
.L325:
	
__Dcm_GetActiveIOCBIDid_function_end:
	.size	Dcm_GetActiveIOCBIDid,__Dcm_GetActiveIOCBIDid_function_end-Dcm_GetActiveIOCBIDid
.L235:
	; End of function
	
	.sdecl	'.bss.DcmDspUds_Iocbi.Dcm_stDspIocbiState_en',data,cluster('Dcm_stDspIocbiState_en')
	.sect	'.bss.DcmDspUds_Iocbi.Dcm_stDspIocbiState_en'
	.align	4
Dcm_stDspIocbiState_en:	.type	object
	.size	Dcm_stDspIocbiState_en,4
	.space	4
	.sdecl	'.bss.DcmDspUds_Iocbi.Dcm_dataDspIocbiCtrlParam_u8',data,cluster('Dcm_dataDspIocbiCtrlParam_u8')
	.sect	'.bss.DcmDspUds_Iocbi.Dcm_dataDspIocbiCtrlParam_u8'
Dcm_dataDspIocbiCtrlParam_u8:	.type	object
	.size	Dcm_dataDspIocbiCtrlParam_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Iocbi.Dcm_stDspIocbiOpStatus_u8',data,cluster('Dcm_stDspIocbiOpStatus_u8')
	.sect	'.bss.DcmDspUds_Iocbi.Dcm_stDspIocbiOpStatus_u8'
Dcm_stDspIocbiOpStatus_u8:	.type	object
	.size	Dcm_stDspIocbiOpStatus_u8,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Iocbi.s_Dcm_idxIocbiDidIndexType_st',data,cluster('s_Dcm_idxIocbiDidIndexType_st')
	.sect	'.bss.DcmDspUds_Iocbi.s_Dcm_idxIocbiDidIndexType_st'
	.align	4
s_Dcm_idxIocbiDidIndexType_st:	.type	object
	.size	s_Dcm_idxIocbiDidIndexType_st,12
	.space	12
	.sdecl	'.bss.DcmDspUds_Iocbi.s_ActiveDid_u16',data,cluster('s_ActiveDid_u16')
	.sect	'.bss.DcmDspUds_Iocbi.s_ActiveDid_u16'
	.align	2
s_ActiveDid_u16:	.type	object
	.size	s_ActiveDid_u16,2
	.space	2
	.sdecl	'.bss.DcmDspUds_Iocbi.Dcm_ReadSignalLength_u16',data,cluster('Dcm_ReadSignalLength_u16')
	.sect	'.bss.DcmDspUds_Iocbi.Dcm_ReadSignalLength_u16'
	.global	Dcm_ReadSignalLength_u16
	.align	2
Dcm_ReadSignalLength_u16:	.type	object
	.size	Dcm_ReadSignalLength_u16,2
	.space	2
	.sdecl	'.bss.DcmDspUds_Iocbi.s_IsIOCBISubfuncCalled_b',data,cluster('s_IsIOCBISubfuncCalled_b')
	.sect	'.bss.DcmDspUds_Iocbi.s_IsIOCBISubfuncCalled_b'
s_IsIOCBISubfuncCalled_b:	.type	object
	.size	s_IsIOCBISubfuncCalled_b,1
	.space	1
	.sdecl	'.bss.DcmDspUds_Iocbi.DcmDsp_IocbiStatus_array',data,cluster('DcmDsp_IocbiStatus_array')
	.sect	'.bss.DcmDspUds_Iocbi.DcmDsp_IocbiStatus_array'
	.global	DcmDsp_IocbiStatus_array
	.align	4
DcmDsp_IocbiStatus_array:	.type	object
	.size	DcmDsp_IocbiStatus_array,8
	.space	8
	.calls	'Dcm_Dsp_IOCBI_Ini','__INDIRECT__'
	.calls	'Dcm_Dsp_IOCBI_Ini','Dcm_ResetDIDIndexstruct'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_Dsp_IOCBI_Ini'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_GetIndexOfDID'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Det_ReportError'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_DsldGetActiveSessionMask_u32'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_GetLengthOfDIDIndex'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','DcmAppl_DcmCheckControlMaskAndState'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_DsldGetActiveSecurityMask_u32'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','__INDIRECT__'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','DcmAppl_UserDIDModeRuleService'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_GetLengthOfSignal'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_IsInfrastructureErrorPresent_b'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','Dcm_GetDIDData'
	.calls	'Dcm_DcmInputOutputControlByIdentifier','DcmAppl_DcmReadDataNRC'
	.calls	'Dcm_ResetActiveIoCtrl','__INDIRECT__'
	.calls	'Dcm_GetLengthOfSignal','Dcm_ConvBitsToBytes'
	.calls	'Dcm_Prv_DspIOCBIConfirmation','Dcm_SetFlagforIOCBI'
	.calls	'Dcm_Prv_DspIOCBIConfirmation','DcmAppl_DcmConfirmation'
	.calls	'Dcm_Dsp_IOCBI_Ini','',0
	.calls	'Dcm_DcmInputOutputControlByIdentifier','',40
	.calls	'Dcm_ResetActiveIoCtrl','',8
	.calls	'Dcm_GetLengthOfSignal','',8
	.calls	'Dcm_SetFlagforIOCBI','',0
	.calls	'Dcm_Prv_DspIOCBIConfirmation','',0
	.extern	Dcm_IsInfrastructureErrorPresent_b
	.extern	DcmAppl_DcmReadDataNRC
	.extern	Dcm_GetIndexOfDID
	.extern	Dcm_GetLengthOfDIDIndex
	.extern	Dcm_GetDIDData
	.extern	DcmAppl_UserDIDModeRuleService
	.extern	Det_ReportError
	.extern	Dcm_DsldGetActiveSecurityMask_u32
	.extern	Dcm_DsldGetActiveSessionMask_u32
	.extern	Dcm_ResetDIDIndexstruct
	.extern	Dcm_ConvBitsToBytes
	.extern	Dcm_DIDConfig
	.extern	Dcm_DspDataInfo_st
	.extern	Dcm_DspDid_ControlInfo_st
	.extern	Dcm_DspIOControlInfo
	.extern	Dcm_DidSignalIdx_u16
	.extern	DcmAppl_DcmConfirmation
	.extern	DcmAppl_DcmCheckControlMaskAndState
	.extern	__INDIRECT__
	.calls	'Dcm_GetActiveIOCBIDid','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L218:
	.word	17631
	.half	3
	.word	.L219
	.byte	4
.L217:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L220
.L272:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	158
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	175
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	175
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	158
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	158
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	158
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	175
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	158
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	158
	.byte	6,0
.L295:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L326:
	.byte	3
	.word	488
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	510
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	510
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	158
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	488
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	488
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	510
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	158
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	158
	.byte	6,0
.L279:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	827
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	843
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	843
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	158
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	827
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	827
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	158
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	843
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	158
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	158
	.byte	6,0,8
	.byte	'Dcm_IsInfrastructureErrorPresent_b',0,4,200,10,31
	.word	158
	.byte	1,1,1,1,5
	.byte	'dataInfrastrutureCode_u8',0,4,200,10,87
	.word	158
	.byte	0
.L277:
	.byte	3
	.word	158
	.byte	8
	.byte	'DcmAppl_DcmReadDataNRC',0,5,18,44
	.word	158
	.byte	1,1,1,1,5
	.byte	'Did',0,5,18,88
	.word	488
	.byte	5
	.byte	'DidSignalPosn',0,5,18,113
	.word	827
	.byte	5
	.byte	'ErrorCode',0,5,18,189,1
	.word	1243
	.byte	0
.L358:
	.byte	9,6,239,1,9,12,10
	.byte	'dataSignalLengthInfo_u32',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'nrNumofSignalsRead_u16',0
	.word	488
	.byte	2,2,35,4,10
	.byte	'idxIndex_u16',0
	.word	488
	.byte	2,2,35,6,10
	.byte	'dataNegRespCode_u8',0
	.word	158
	.byte	1,2,35,8,10
	.byte	'dataRange_b',0
	.word	158
	.byte	1,2,35,9,10
	.byte	'flgNvmReadPending_b',0
	.word	158
	.byte	1,2,35,10,10
	.byte	'dataopstatus_b',0
	.word	158
	.byte	1,2,35,11,0,3
	.word	1337
	.byte	8
	.byte	'Dcm_GetIndexOfDID',0,6,144,2,39
	.word	158
	.byte	1,1,1,1,5
	.byte	'did',0,6,145,2,38
	.word	488
	.byte	5
	.byte	'idxDidIndexType_st',0,6,146,2,70
	.word	1534
	.byte	0,8
	.byte	'Dcm_GetLengthOfDIDIndex',0,6,207,2,40
	.word	158
	.byte	1,1,1,1,5
	.byte	'idxDidIndexType_st',0,6,207,2,121
	.word	1534
	.byte	5
	.byte	'length_u32',0,6,208,2,66
	.word	843
	.byte	5
	.byte	'did_u16',0,6,209,2,50
	.word	488
	.byte	0,8
	.byte	'Dcm_GetDIDData',0,6,143,3,39
	.word	158
	.byte	1,1,1,1,5
	.byte	'idxDidIndexType_st',0,6,143,3,111
	.word	1534
	.byte	5
	.byte	'targetBuffer',0,6,144,3,93
	.word	175
	.byte	0,3
	.word	158
	.byte	11
	.byte	'Dcm_MsgType',0,4,188,2,57
	.word	1794
	.byte	9,4,206,2,9,4,10
	.byte	'reqType',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'suppressPosResponse',0
	.word	158
	.byte	1,2,35,1,10
	.byte	'sourceofRequest',0
	.word	158
	.byte	1,2,35,2,0,9,4,240,2,9,28,10
	.byte	'resData',0
	.word	1799
	.byte	4,2,35,0,10
	.byte	'reqData',0
	.word	1799
	.byte	4,2,35,4,10
	.byte	'msgAddInfo',0
	.word	1820
	.byte	4,2,35,8,10
	.byte	'resDataLen',0
	.word	827
	.byte	4,2,35,12,10
	.byte	'reqDataLen',0
	.word	827
	.byte	4,2,35,16,10
	.byte	'resMaxDataLen',0
	.word	827
	.byte	4,2,35,20,10
	.byte	'idContext',0
	.word	158
	.byte	1,2,35,24,10
	.byte	'dcmRxPduId',0
	.word	488
	.byte	2,2,35,26,0
.L275:
	.byte	3
	.word	1898
	.byte	3
	.word	158
	.byte	9,7,200,2,9,4,10
	.byte	'posnSigBit_u16',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'idxDcmDspDatainfo_u16',0
	.word	488
	.byte	2,2,35,2,0,12
	.word	2071
	.byte	3
	.word	2133
	.byte	3
	.word	158
	.byte	13,6,203,1,9,4,14
	.byte	'DCM_SUPPORT_READ',0,0,14
	.byte	'DCM_SUPPORT_WRITE',0,1,14
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,15
	.word	158
	.byte	1,1,16
	.word	2143
	.byte	16
	.word	488
	.byte	16
	.word	2148
	.byte	0,3
	.word	2218
	.byte	13,7,231,1,9,4,14
	.byte	'DCM_CONTROLMASK_NO',0,0,14
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,14
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,9,7,239,1,9,44,10
	.byte	'dataAllowedSessRead_u32',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'dataAllowedSecRead_u32',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'adrUserReadModeRule_pfct',0
	.word	2241
	.byte	4,2,35,8,10
	.byte	'dataAllowedSessWrite_u32',0
	.word	827
	.byte	4,2,35,12,10
	.byte	'dataAllowedSecWrite_u32',0
	.word	827
	.byte	4,2,35,16,10
	.byte	'adrUserWriteModeRule_pfct',0
	.word	2241
	.byte	4,2,35,20,10
	.byte	'dataSessBitMask_u32',0
	.word	827
	.byte	4,2,35,24,10
	.byte	'dataSecBitMask_u32',0
	.word	827
	.byte	4,2,35,28,10
	.byte	'adrUserControlModeRule_pfct',0
	.word	2241
	.byte	4,2,35,32,10
	.byte	'dataCtrlMask_en',0
	.word	2246
	.byte	4,2,35,36,10
	.byte	'dataCtrlMaskSize_u8',0
	.word	158
	.byte	1,2,35,40,10
	.byte	'dataIocbirst_b',0
	.word	158
	.byte	1,2,35,41,10
	.byte	'statusmaskIOControl_u8',0
	.word	158
	.byte	1,2,35,42,0,12
	.word	2328
.L289:
	.byte	3
	.word	2740
	.byte	9,7,214,2,9,16,10
	.byte	'dataDid_u16',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'nrSig_u16',0
	.word	488
	.byte	2,2,35,2,10
	.byte	'dataMaxDidLen_u16',0
	.word	488
	.byte	2,2,35,4,10
	.byte	'dataFixedLength_b',0
	.word	158
	.byte	1,2,35,6,10
	.byte	'dataDynamicDid_b',0
	.word	158
	.byte	1,2,35,7,10
	.byte	'adrDidSignalConfig_pcst',0
	.word	2138
	.byte	4,2,35,8,10
	.byte	'adrExtendedConfig_pcst',0
	.word	2745
	.byte	4,2,35,12,0,12
	.word	2750
.L281:
	.byte	3
	.word	2942
	.byte	17
	.byte	'void',0
.L293:
	.byte	3
	.word	2952
	.byte	12
	.word	2958
	.byte	9,7,181,2,9,16,10
	.byte	'adrReadFnc_cpv',0
	.word	2963
	.byte	4,2,35,0,10
	.byte	'dataSize_u16',0
	.word	488
	.byte	2,2,35,4,10
	.byte	'dataNvmBlockId_u16',0
	.word	488
	.byte	2,2,35,6,10
	.byte	'idxDcmDspControlInfo_u16',0
	.word	488
	.byte	2,2,35,8,10
	.byte	'dataType_u8',0
	.word	158
	.byte	1,2,35,10,10
	.byte	'usePort_u8',0
	.word	158
	.byte	1,2,35,11,10
	.byte	'dataEndianness_u8',0
	.word	158
	.byte	1,2,35,12,10
	.byte	'dataFixedLength_b',0
	.word	158
	.byte	1,2,35,13,0,12
	.word	2968
.L283:
	.byte	3
	.word	3178
	.byte	12
	.word	2958
	.byte	12
	.word	2958
	.byte	12
	.word	2958
	.byte	9,7,160,2,9,16,10
	.byte	'adrCondChkRdFnc_cpv',0
	.word	3188
	.byte	4,2,35,0,10
	.byte	'adrReadDataLengthFnc_pfct',0
	.word	3193
	.byte	4,2,35,4,10
	.byte	'adrWriteFnc_cpv',0
	.word	3198
	.byte	4,2,35,8,10
	.byte	'idxDcmDspIocbiInfo_u16',0
	.word	488
	.byte	2,2,35,12,0,12
	.word	3203
.L285:
	.byte	3
	.word	3331
	.byte	12
	.word	2958
	.byte	12
	.word	2958
	.byte	12
	.word	2958
	.byte	12
	.word	2958
	.byte	9,7,144,2,9,16,10
	.byte	'adrReturnControlEcu_cpv',0
	.word	3341
	.byte	4,2,35,0,10
	.byte	'adrResetToDefault_cpv',0
	.word	3346
	.byte	4,2,35,4,10
	.byte	'adrFreezeCurrentState_cpv',0
	.word	3351
	.byte	4,2,35,8,10
	.byte	'adrShortTermAdjustment_cpv',0
	.word	3356
	.byte	4,2,35,12,0,12
	.word	3361
.L287:
	.byte	3
	.word	3503
	.byte	13,8,205,1,9,4,14
	.byte	'DCM_IOCBI_IDLESTATE',0,0,14
	.byte	'DCM_IOCBI_FCS_ACTIVE',0,1,14
	.byte	'DCM_IOCBI_FCS_PENDING',0,2,14
	.byte	'DCM_IOCBI_RTD_ACTIVE',0,3,14
	.byte	'DCM_IOCBI_RTD_PENDING',0,4,14
	.byte	'DCM_IOCBI_STA_ACTIVE',0,5,14
	.byte	'DCM_IOCBI_STA_PENDING',0,6,14
	.byte	'DCM_IOCBI_RCE_ACTIVE',0,7,14
	.byte	'DCM_IOCBI_RCE_PENDING',0,8,0,9,8,219,1,9,8,10
	.byte	'idxindex_u16',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'IocbiStatus_en',0
	.word	3513
	.byte	4,2,35,4,0
.L291:
	.byte	3
	.word	3730
.L301:
	.byte	2
	.byte	'unsigned long int',0,4,7,8
	.byte	'DcmAppl_UserDIDModeRuleService',0,9,37,43
	.word	158
	.byte	1,1,1,1,5
	.byte	'Nrc_u8',0,9,37,136,1
	.word	1243
	.byte	5
	.byte	'did_u16',0,9,37,166,1
	.word	488
	.byte	5
	.byte	'dataDirection_en',0,9,37,205,1
	.word	2148
	.byte	0,8
	.byte	'Det_ReportError',0,10,112,16
	.word	158
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,10,112,39
	.word	488
	.byte	5
	.byte	'InstanceId',0,10,112,55
	.word	158
	.byte	5
	.byte	'ApiId',0,10,112,73
	.word	158
	.byte	5
	.byte	'ErrorId',0,10,112,86
	.word	158
	.byte	0,18
	.byte	'Dcm_DsldGetActiveSecurityMask_u32',0,11,189,1,31
	.word	827
	.byte	1,1,1,1,18
	.byte	'Dcm_DsldGetActiveSessionMask_u32',0,11,190,1,31
	.word	827
	.byte	1,1,1,1,19
	.byte	'Dcm_ResetDIDIndexstruct',0,7,32,28,1,1,1,1,5
	.byte	'idxDidIndexType_st',0,7,32,108
	.word	1534
	.byte	0,19
	.byte	'Dcm_ConvBitsToBytes',0,7,44,28,1,1,1,1,5
	.byte	'DataLenInBits',0,7,44,88
	.word	843
	.byte	0,20
	.word	180
	.byte	21
	.word	210
	.byte	21
	.word	225
	.byte	6,0,20
	.word	248
	.byte	21
	.word	280
	.byte	21
	.word	295
	.byte	6,0,20
	.word	318
	.byte	21
	.word	358
	.byte	21
	.word	372
	.byte	6,0,20
	.word	395
	.byte	21
	.word	428
	.byte	21
	.word	442
	.byte	21
	.word	463
	.byte	6,0,20
	.word	515
	.byte	21
	.word	546
	.byte	21
	.word	561
	.byte	6,0,20
	.word	584
	.byte	21
	.word	617
	.byte	21
	.word	632
	.byte	6,0,20
	.word	655
	.byte	21
	.word	696
	.byte	21
	.word	710
	.byte	6,0,20
	.word	733
	.byte	21
	.word	767
	.byte	21
	.word	781
	.byte	21
	.word	802
	.byte	6,0,20
	.word	848
	.byte	21
	.word	879
	.byte	21
	.word	894
	.byte	6,0,20
	.word	917
	.byte	21
	.word	950
	.byte	21
	.word	965
	.byte	6,0,20
	.word	988
	.byte	21
	.word	1029
	.byte	21
	.word	1043
	.byte	6,0,20
	.word	1066
	.byte	21
	.word	1100
	.byte	21
	.word	1114
	.byte	21
	.word	1135
	.byte	6,0,19
	.byte	'DcmAppl_DcmConfirmation',0,12,98,33,1,1,1,1,5
	.byte	'idContext',0,12,100,38
	.word	158
	.byte	5
	.byte	'dcmRxPduId',0,12,101,30
	.word	488
	.byte	5
	.byte	'SourceAddress',0,12,102,27
	.word	488
	.byte	5
	.byte	'status',0,12,103,47
	.word	158
	.byte	0,12
	.word	158
	.byte	3
	.word	4537
	.byte	8
	.byte	'DcmAppl_DcmCheckControlMaskAndState',0,12,193,1,44
	.word	158
	.byte	1,1,1,1,5
	.byte	'nrDID_u16',0,12,193,1,102
	.word	488
	.byte	5
	.byte	'dataIoParam_u8',0,12,193,1,134,1
	.word	158
	.byte	5
	.byte	'adrCtlStateAndMask_pcst',0,12,194,1,55
	.word	4542
	.byte	5
	.byte	'dataCtlStateAndMaskLen_u16',0,12,194,1,101
	.word	488
	.byte	0,22
	.byte	'__INDIRECT__',0,13,1,1,1,1,1,23,1,3
	.word	4730
	.byte	11
	.byte	'__codeptr',0,13,1,1
	.word	4732
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,14,76,25
	.word	4755
	.byte	11
	.byte	'uint8',0,14,81,25
	.word	158
	.byte	11
	.byte	'uint16',0,14,91,25
	.word	488
	.byte	11
	.byte	'uint32',0,14,106,24
	.word	827
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,14,111,30
	.word	4821
	.byte	11
	.byte	'boolean',0,14,127,25
	.word	158
	.byte	11
	.byte	'uint16_least',0,14,147,1,25
	.word	3788
	.byte	11
	.byte	'StatusType',0,15,191,1,27
	.word	158
	.byte	11
	.byte	'Std_ReturnType',0,15,199,1,15
	.word	158
	.byte	9,15,206,1,9,8,10
	.byte	'vendorID',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'moduleID',0
	.word	488
	.byte	2,2,35,2,10
	.byte	'sw_major_version',0
	.word	158
	.byte	1,2,35,4,10
	.byte	'sw_minor_version',0
	.word	158
	.byte	1,2,35,5,10
	.byte	'sw_patch_version',0
	.word	158
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,15,213,1,3
	.word	4944
	.byte	11
	.byte	'PduIdType',0,16,22,19
	.word	488
	.byte	11
	.byte	'PduLengthType',0,16,26,19
	.word	488
	.byte	9,17,71,9,8,10
	.byte	'SduDataPtr',0
	.word	175
	.byte	4,2,35,0,10
	.byte	'SduLength',0
	.word	488
	.byte	2,2,35,4,0,11
	.byte	'PduInfoType',0,17,75,3
	.word	5134
	.byte	13,17,113,9,4,14
	.byte	'TP_DATACONF',0,0,14
	.byte	'TP_DATARETRY',0,1,14
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,17,118,3
	.word	5199
	.byte	11
	.byte	'NetworkHandleType',0,17,128,1,17
	.word	158
	.byte	11
	.byte	'Can_IdType',0,18,32,16
	.word	827
	.byte	11
	.byte	'Can_HwHandleType',0,18,43,16
	.word	488
	.byte	9,19,93,9,8,10
	.byte	'Class',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'TIN',0
	.word	158
	.byte	1,2,35,1,10
	.byte	'ReturnAddress',0
	.word	827
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,19,97,3
	.word	5346
	.byte	24,68
	.word	827
	.byte	25,16,0,9,19,154,1,9,68,10
	.byte	'store',0
	.word	5426
	.byte	68,2,35,0,0,24,68
	.word	5435
	.byte	25,0,0,11
	.byte	'Os_JumpBufType',0,19,156,1,3
	.word	5457
	.byte	11
	.byte	'Os_StackTraceType',0,19,174,1,18
	.word	827
	.byte	9,19,175,1,9,8,10
	.byte	'sp',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'ctx',0
	.word	827
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,19,175,1,63
	.word	5517
	.byte	11
	.byte	'Os_StackSizeType',0,19,176,1,27
	.word	5517
	.byte	26,1,1,3
	.word	5602
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,19,179,1,16
	.word	5605
	.byte	11
	.byte	'ApplicationType',0,19,193,1,23
	.word	158
	.byte	27
	.byte	'Os_ApplicationConfigurationType_s',0,19,198,1,16,2,10
	.byte	'app_id',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,19,201,1,3
	.word	5668
	.byte	11
	.byte	'Os_CoreStateType',0,19,203,1,16
	.word	827
	.byte	11
	.byte	'AreaIdType',0,19,204,1,16
	.word	488
	.byte	11
	.byte	'Os_PeripheralAddressType',0,19,212,1,22
	.word	827
	.byte	11
	.byte	'TickType',0,19,221,1,22
	.word	827
	.byte	11
	.byte	'Os_StopwatchTickType',0,19,225,1,22
	.word	827
	.byte	11
	.byte	'Os_Lockable',0,19,234,1,18
	.word	843
	.byte	11
	.byte	'CoreIdType',0,19,236,1,16
	.word	488
	.byte	11
	.byte	'SpinlockIdType',0,19,237,1,16
	.word	488
	.byte	13,19,239,1,9,4,14
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,14
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,19,239,1,74
	.word	5975
	.byte	13,19,174,2,9,4,14
	.byte	'APPLICATION_ACCESSIBLE',0,0,14
	.byte	'APPLICATION_RESTARTING',0,1,14
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,19,174,2,92
	.word	6068
	.byte	28,1,1,16
	.word	158
	.byte	16
	.word	2958
	.byte	0,3
	.word	6180
	.byte	11
	.byte	'Os_FunctionEntryType',0,19,183,2,16
	.word	6194
	.byte	27
	.byte	'Os_MeterInfoType_s',0,19,193,2,16,48,10
	.byte	'elapsed',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'previous',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'max',0
	.word	827
	.byte	4,2,35,8,10
	.byte	'cumulative',0
	.word	827
	.byte	4,2,35,12,10
	.byte	'stackbase',0
	.word	5517
	.byte	8,2,35,16,10
	.byte	'stackusage',0
	.word	5517
	.byte	8,2,35,24,10
	.byte	'stackmax',0
	.word	5517
	.byte	8,2,35,32,10
	.byte	'stackbudget',0
	.word	5517
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,19,202,2,3
	.word	6229
	.byte	3
	.word	6229
	.byte	11
	.byte	'Os_MeterInfoRefType',0,19,203,2,50
	.word	6427
	.byte	11
	.byte	'EventMaskType',0,19,206,2,15
	.word	158
	.byte	11
	.byte	'Os_imaskType',0,19,211,2,16
	.word	827
	.byte	27
	.byte	'Os_ISRDynType_s',0,19,213,2,16,48,10
	.byte	'meter',0
	.word	6229
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,19,215,2,3
	.word	6506
	.byte	3
	.word	6506
	.byte	12
	.word	6567
	.byte	27
	.byte	'Os_ISRType_s',0,19,216,2,16,24,10
	.byte	'entry_function',0
	.word	5610
	.byte	4,2,35,0,10
	.byte	'dynamic',0
	.word	6572
	.byte	4,2,35,4,10
	.byte	'imask',0
	.word	827
	.byte	4,2,35,8,10
	.byte	'stackbudget',0
	.word	5517
	.byte	8,2,35,12,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,20,10
	.byte	'application',0
	.word	158
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,19,223,2,3
	.word	6577
	.byte	3
	.word	5602
	.byte	12
	.word	6577
	.byte	3
	.word	6736
	.byte	11
	.byte	'ISRType',0,19,224,2,46
	.word	6741
	.byte	11
	.byte	'Os_bitmask',0,19,239,2,22
	.word	827
	.byte	11
	.byte	'Os_pset0Type',0,19,240,2,20
	.word	827
	.byte	11
	.byte	'Os_pset1Type',0,19,241,2,20
	.word	827
	.byte	11
	.byte	'Os_pset2Type',0,19,242,2,20
	.word	827
	.byte	29,19,243,2,9,4,10
	.byte	'p0',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'p1',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'p2',0
	.word	827
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,19,247,2,3
	.word	6849
	.byte	29,19,249,2,9,4,10
	.byte	't0',0
	.word	827
	.byte	4,2,35,0,10
	.byte	't1',0
	.word	827
	.byte	4,2,35,0,10
	.byte	't2',0
	.word	827
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,19,253,2,3
	.word	6913
	.byte	11
	.byte	'Os_ActivationCountType',0,19,254,2,23
	.word	158
	.byte	27
	.byte	'Os_TaskDynType_s',0,19,128,3,16,120,10
	.byte	'terminate_jump_buf',0
	.word	5466
	.byte	68,2,35,0,10
	.byte	'meter',0
	.word	6229
	.byte	48,2,35,68,10
	.byte	'activation_count',0
	.word	158
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,19,132,3,3
	.word	7011
	.byte	24,68
	.word	5435
	.byte	25,0,0,3
	.word	7011
	.byte	12
	.word	7137
	.byte	27
	.byte	'Os_TaskType_s',0,19,134,3,16,40,10
	.byte	'dynamic',0
	.word	7142
	.byte	4,2,35,0,10
	.byte	'entry_function',0
	.word	5610
	.byte	4,2,35,4,10
	.byte	'pset',0
	.word	6849
	.byte	4,2,35,8,10
	.byte	'base_tpmask',0
	.word	6913
	.byte	4,2,35,12,10
	.byte	'tpmask',0
	.word	6913
	.byte	4,2,35,16,10
	.byte	'core_id',0
	.word	488
	.byte	2,2,35,20,10
	.byte	'index',0
	.word	827
	.byte	4,2,35,24,10
	.byte	'stackbudget',0
	.word	5517
	.byte	8,2,35,28,10
	.byte	'activation_count',0
	.word	158
	.byte	1,2,35,36,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,37,10
	.byte	'application',0
	.word	158
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,19,146,3,3
	.word	7147
	.byte	12
	.word	7147
	.byte	3
	.word	7397
	.byte	11
	.byte	'TaskType',0,19,147,3,47
	.word	7402
	.byte	30
	.byte	'Os_TaskStateType',0,19,155,3,6,4,14
	.byte	'SUSPENDED',0,0,14
	.byte	'READY',0,1,14
	.byte	'WAITING',0,2,14
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,19,156,3,31
	.word	7425
	.byte	29,19,167,3,3,4,10
	.byte	'tpmask',0
	.word	6913
	.byte	4,2,35,0,0,27
	.byte	'Os_ResourceDynType_s',0,19,166,3,16,4,10
	.byte	'saved_priority',0
	.word	7512
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,19,170,3,3
	.word	7535
	.byte	3
	.word	7535
	.byte	12
	.word	7615
	.byte	27
	.byte	'Os_ResourceType_s',0,19,171,3,16,12,10
	.byte	'dynamic',0
	.word	7620
	.byte	4,2,35,0,10
	.byte	'tpmask',0
	.word	6913
	.byte	4,2,35,4,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,19,175,3,3
	.word	7625
	.byte	9,19,181,3,9,12,10
	.byte	'maxallowedvalue',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'ticksperbase',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'mincycle',0
	.word	827
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,19,185,3,3
	.word	7724
	.byte	9,19,206,3,9,8,10
	.byte	'Running',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'Pending',0
	.word	158
	.byte	1,2,35,1,10
	.byte	'Delay',0
	.word	827
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,19,210,3,3
	.word	7819
	.byte	31
	.word	158
	.byte	1,1,3
	.word	7905
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,19,217,3,22
	.word	7912
	.byte	27
	.byte	's_swd',0,19,222,3,12,4,10
	.byte	'count',0
	.word	827
	.byte	4,2,35,0,0,29,19,221,3,3,4,10
	.byte	'sw',0
	.word	7948
	.byte	4,2,35,0,0,27
	.byte	'Os_CounterDynType_s',0,19,220,3,16,4,10
	.byte	'type_dependent',0
	.word	7976
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,19,226,3,3
	.word	7995
	.byte	3
	.word	7995
	.byte	12
	.word	8073
	.byte	27
	.byte	'Os_CounterType_s',0,19,227,3,16,28,10
	.byte	'dynamic',0
	.word	8078
	.byte	4,2,35,0,10
	.byte	'advincr',0
	.word	7917
	.byte	4,2,35,4,10
	.byte	'base',0
	.word	7724
	.byte	12,2,35,8,10
	.byte	'core',0
	.word	2958
	.byte	4,2,35,20,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,24,10
	.byte	'application',0
	.word	158
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,19,234,3,3
	.word	8083
	.byte	3
	.word	7905
	.byte	12
	.word	8083
	.byte	3
	.word	8235
	.byte	11
	.byte	'CounterType',0,19,235,3,52
	.word	8240
	.byte	30
	.byte	'Os_ScheduleTableStatusType',0,19,240,3,6,4,14
	.byte	'SCHEDULETABLE_STOPPED',0,0,14
	.byte	'SCHEDULETABLE_NEXT',0,1,14
	.byte	'SCHEDULETABLE_WAITING',0,2,14
	.byte	'SCHEDULETABLE_RUNNING',0,3,14
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,19,241,3,41
	.word	8266
	.byte	12
	.word	.L568-.L218
	.byte	3
	.word	8466
	.byte	11
	.byte	'ScheduleTableType',0,19,128,4,58
	.word	8471
	.byte	27
	.byte	'Os_ScheduleTableDynType_s',0,19,130,4,16,16,10
	.byte	'match',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'next',0
	.word	8476
	.byte	4,2,35,4,10
	.byte	'state',0
	.word	8266
	.byte	4,2,35,8,10
	.byte	'config',0
	.word	488
	.byte	2,2,35,12,0,3
	.word	8503
	.byte	12
	.word	8596
.L568:
	.byte	27
	.byte	'Os_ScheduleTableType_s',0,19,247,3,16,16,10
	.byte	'dynamic',0
	.word	8601
	.byte	4,2,35,0,10
	.byte	'counter',0
	.word	8245
	.byte	4,2,35,4,10
	.byte	'repeat',0
	.word	158
	.byte	1,2,35,8,10
	.byte	'config',0
	.word	488
	.byte	2,2,35,10,10
	.byte	'initial',0
	.word	158
	.byte	1,2,35,12,10
	.byte	'access',0
	.word	158
	.byte	1,2,35,13,10
	.byte	'application',0
	.word	158
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,19,255,3,3
	.word	8606
	.byte	12
	.word	8606
	.byte	3
	.word	8786
	.byte	12
	.word	8083
	.byte	3
	.word	8796
	.byte	32
	.word	5910
	.byte	32
	.word	6849
	.byte	32
	.word	6746
	.byte	32
	.word	7407
	.byte	32
	.word	6913
	.byte	32
	.word	158
	.byte	32
	.word	7407
	.byte	27
	.byte	'Os_ControlledCoreType_s',0,19,251,6,16,112,10
	.byte	'TrapInfo',0
	.word	5346
	.byte	8,2,35,0,10
	.byte	'lock_taskaccess',0
	.word	8806
	.byte	4,2,35,8,10
	.byte	'ReadyTasks',0
	.word	8811
	.byte	4,2,35,12,10
	.byte	'RunningISR',0
	.word	8816
	.byte	4,2,35,16,10
	.byte	'RunningTask',0
	.word	8821
	.byte	4,2,35,20,10
	.byte	'RunningTPMask',0
	.word	8826
	.byte	4,2,35,24,10
	.byte	'CurrentMeteredObject',0
	.word	6432
	.byte	4,2,35,28,10
	.byte	'IdleMeter',0
	.word	6229
	.byte	48,2,35,32,10
	.byte	'AppAccess',0
	.word	158
	.byte	1,2,35,80,10
	.byte	'AppOverride',0
	.word	8831
	.byte	1,2,35,81,10
	.byte	'GetStackValueAdjust',0
	.word	5517
	.byte	8,2,35,84,10
	.byte	'InErrorHook',0
	.word	158
	.byte	1,2,35,92,10
	.byte	'ChainTaskRef',0
	.word	8836
	.byte	4,2,35,96,10
	.byte	'GetStackUsageAdjust',0
	.word	5517
	.byte	8,2,35,100,10
	.byte	'InProtectionHook',0
	.word	158
	.byte	1,2,35,108,10
	.byte	'CoreIsActive',0
	.word	158
	.byte	1,2,35,109,10
	.byte	'InShutdownHook',0
	.word	158
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,19,141,7,3
	.word	8841
	.byte	3
	.word	827
	.byte	12
	.word	6577
	.byte	3
	.word	9297
	.byte	12
	.word	7147
	.byte	3
	.word	9307
	.byte	3
	.word	6229
	.byte	27
	.byte	'Os_AnyCoreType_s',0,19,151,7,16,96,10
	.byte	'DisableAllImask',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'SuspendAllImask',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'SuspendOSImask',0
	.word	827
	.byte	4,2,35,8,10
	.byte	'DisableAllCount',0
	.word	827
	.byte	4,2,35,12,10
	.byte	'SuspendAllCount',0
	.word	827
	.byte	4,2,35,16,10
	.byte	'SuspendOSCount',0
	.word	827
	.byte	4,2,35,20,10
	.byte	'RestartJumpBuf',0
	.word	5466
	.byte	68,2,35,24,10
	.byte	'Restartable',0
	.word	158
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,19,160,7,3
	.word	9322
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,20,219,3,16
	.word	827
	.byte	27
	.byte	'Can_TxHwObjectConfigType',0,20,231,3,16,8,10
	.byte	'MsgObjId',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'HwControllerId',0
	.word	158
	.byte	1,2,35,1,10
	.byte	'TxObjPriorityClass',0
	.word	827
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,20,252,3,3
	.word	9599
	.byte	27
	.byte	'Can_RxHwObjectConfigType',0,20,129,4,16,12,10
	.byte	'MaskRef',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'MsgId',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'MsgObjId',0
	.word	158
	.byte	1,2,35,8,10
	.byte	'HwControllerId',0
	.word	158
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,20,147,4,3
	.word	9735
	.byte	24,4
	.word	158
	.byte	25,3,0,27
	.byte	'Can_ControllerMOMapConfigType',0,20,181,4,16,4,10
	.byte	'ControllerMOMap',0
	.word	9875
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,20,184,4,3
	.word	9884
	.byte	27
	.byte	'Can_NPCRValueType',0,20,188,4,16,2,10
	.byte	'Can_NPCRValue',0
	.word	488
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,20,191,4,3
	.word	9985
	.byte	27
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,20,194,4,16,8,10
	.byte	'CanControllerBaudrate',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'CanControllerBaudrateCfg',0
	.word	488
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,20,198,4,3
	.word	10060
	.byte	12
	.word	10060
	.byte	3
	.word	10225
	.byte	27
	.byte	'Can_BaudrateConfigPtrType',0,20,201,4,16,4,10
	.byte	'Can_kBaudrateConfigPtr',0
	.word	10230
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,20,204,4,3
	.word	10235
	.byte	27
	.byte	'Can_EventHandlingType',0,20,226,4,16,4,10
	.byte	'CanEventType',0
	.word	9875
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,20,229,4,3
	.word	10335
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,21,130,1,15
	.word	158
	.byte	11
	.byte	'Rte_TransformerClass',0,21,131,1,15
	.word	158
	.byte	9,21,168,1,9,12,10
	.byte	'in',0
	.word	2958
	.byte	4,2,35,0,10
	.byte	'out',0
	.word	2958
	.byte	4,2,35,4,10
	.byte	'used',0
	.word	488
	.byte	2,2,35,8,10
	.byte	'lost_data',0
	.word	158
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,21,173,1,3
	.word	10481
	.byte	13,21,175,1,9,4,14
	.byte	'RTE_DRA',0,0,14
	.byte	'RTE_WOWP',0,1,14
	.byte	'RTE_TASK',0,2,14
	.byte	'RTE_ARE',0,3,14
	.byte	'RTE_EV',0,4,14
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,21,182,1,3
	.word	10568
	.byte	3
	.word	10481
	.byte	27
	.byte	'Rte_QCmnType',0,21,184,1,16,24,10
	.byte	'dynamic',0
	.word	10666
	.byte	4,2,35,0,10
	.byte	'copy',0
	.word	158
	.byte	1,2,35,4,10
	.byte	'queue_size',0
	.word	488
	.byte	2,2,35,6,10
	.byte	'element_size',0
	.word	488
	.byte	2,2,35,8,10
	.byte	'buffer_start',0
	.word	2958
	.byte	4,2,35,12,10
	.byte	'buffer_end',0
	.word	2958
	.byte	4,2,35,16,10
	.byte	'notification_type',0
	.word	10568
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,21,192,1,3
	.word	10671
	.byte	11
	.byte	'Rte_AlarmRefType',0,21,224,1,32
	.word	827
	.byte	11
	.byte	'Rte_AlarmIndexType',0,21,226,1,32
	.word	488
	.byte	24,128,8
	.word	158
	.byte	25,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,22,50,15
	.word	10909
	.byte	11
	.byte	'CanIf_u32_impl',0,22,69,16
	.word	827
	.byte	11
	.byte	'CanIf_u16_impl',0,22,71,16
	.word	488
	.byte	11
	.byte	'CanIf_u8_impl',0,22,73,15
	.word	158
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,22,88,15
	.word	158
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,22,90,15
	.word	158
	.byte	9,22,92,9,2,10
	.byte	'DeviceMode',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'ChannelMode',0
	.word	158
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,22,95,3
	.word	11100
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,22,100,15
	.word	158
	.byte	11
	.byte	'CanSM_boolean_Impl',0,22,120,15
	.word	158
	.byte	11
	.byte	'CanSM_u8_Impl',0,22,123,15
	.word	158
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,22,128,1,15
	.word	158
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,22,132,1,15
	.word	158
	.byte	11
	.byte	'CanSM_u16_Impl',0,22,136,1,16
	.word	488
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,22,138,1,15
	.word	158
	.byte	9,22,140,1,9,4,10
	.byte	'cntTick_u16',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'stTimer',0
	.word	158
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,22,143,1,3
	.word	11441
	.byte	11
	.byte	'Com_impl_u16',0,22,154,1,16
	.word	488
	.byte	11
	.byte	'Com_impl_u8',0,22,157,1,15
	.word	158
	.byte	11
	.byte	'ComM_uint32_Impl',0,22,173,1,16
	.word	827
	.byte	11
	.byte	'ComM_uint16_Impl',0,22,175,1,16
	.word	488
	.byte	11
	.byte	'ComM_uint8_Impl',0,22,177,1,15
	.word	158
	.byte	11
	.byte	'ComM_bool_Impl',0,22,179,1,15
	.word	158
	.byte	9,22,181,1,9,24,10
	.byte	'ChannelState_e',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'LightTimeoutCtr_u32',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	488
	.byte	2,2,35,8,10
	.byte	'ChannelMode_u8',0
	.word	158
	.byte	1,2,35,10,10
	.byte	'BusSmMode_u8',0
	.word	158
	.byte	1,2,35,11,10
	.byte	'UserRequestCtr_u8',0
	.word	158
	.byte	1,2,35,12,10
	.byte	'PassiveRequestState_u8',0
	.word	158
	.byte	1,2,35,13,10
	.byte	'PncRequestCtr_u8',0
	.word	158
	.byte	1,2,35,14,10
	.byte	'InhibitionReqStatus_u8',0
	.word	158
	.byte	1,2,35,15,10
	.byte	'NmNetworkRequestStatus_b',0
	.word	158
	.byte	1,2,35,16,10
	.byte	'DiagnosticRequestState_b',0
	.word	158
	.byte	1,2,35,17,10
	.byte	'CommunicationAllowed_b',0
	.word	158
	.byte	1,2,35,18,10
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	158
	.byte	1,2,35,19,10
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	158
	.byte	1,2,35,20,10
	.byte	'NmNetworkModeStatus_b',0
	.word	158
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,22,197,1,3
	.word	11673
	.byte	9,22,206,1,9,10,10
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	488
	.byte	2,2,35,0,10
	.byte	'LimitToNoComCtr_u16',0
	.word	488
	.byte	2,2,35,2,10
	.byte	'RequestedUserMode_t',0
	.word	158
	.byte	1,2,35,4,10
	.byte	'IndicatedUserMode_t',0
	.word	158
	.byte	1,2,35,5,10
	.byte	'numChannelsInFullCom_u8',0
	.word	158
	.byte	1,2,35,6,10
	.byte	'numChannelsInSilentCom_u8',0
	.word	158
	.byte	1,2,35,7,10
	.byte	'numChannelsInNoCom_u8',0
	.word	158
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,22,214,1,3
	.word	12177
	.byte	11
	.byte	'Dcm_ConfirmationStatusType',0,22,243,1,15
	.word	158
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,22,252,1,15
	.word	158
	.byte	11
	.byte	'Dcm_NegativeResponseCodeType',0,22,132,2,15
	.word	158
	.byte	11
	.byte	'Dcm_OpStatusType',0,22,134,2,15
	.word	158
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	22,138,2,15
	.word	158
	.byte	11
	.byte	'Dcm_SecLevelType',0,22,142,2,15
	.word	158
	.byte	11
	.byte	'Dcm_SesCtrlType',0,22,144,2,15
	.word	158
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,22,146,2,15
	.word	158
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,22,150,2,15
	.word	158
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,22,154,2,15
	.word	158
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,22,243,3,34
	.word	10920
	.byte	24,128,8
	.word	158
	.byte	25,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,22,246,3,34
	.word	10920
	.byte	11
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,23,37,15
	.word	158
	.byte	11
	.byte	'Dcm_SrvOpStatusType',0,4,62,15
	.word	158
	.byte	11
	.byte	'Dcm_MsgItemType',0,4,182,2,15
	.word	158
	.byte	11
	.byte	'Dcm_MsgLenType',0,4,197,2,16
	.word	827
	.byte	11
	.byte	'Dcm_MsgAddInfoType',0,4,219,2,2
	.word	1820
	.byte	11
	.byte	'Dcm_IdContextType',0,4,225,2,15
	.word	158
	.byte	11
	.byte	'Dcm_MsgContextType',0,4,188,3,2
	.word	1898
	.byte	9,4,238,5,9,32,10
	.byte	'tx_buffer_pa',0
	.word	1799
	.byte	4,2,35,0,10
	.byte	'rx_mainBuffer_pa',0
	.word	1799
	.byte	4,2,35,4,10
	.byte	'tx_buffer_size_u32',0
	.word	827
	.byte	4,2,35,8,10
	.byte	'rx_buffer_size_u32',0
	.word	827
	.byte	4,2,35,12,10
	.byte	'dataP2TmrAdjust',0
	.word	827
	.byte	4,2,35,16,10
	.byte	'dataP2StarTmrAdjust',0
	.word	827
	.byte	4,2,35,20,10
	.byte	'protocolid_u8',0
	.word	158
	.byte	1,2,35,24,10
	.byte	'sid_tableid_u8',0
	.word	158
	.byte	1,2,35,25,10
	.byte	'premption_level_u8',0
	.word	158
	.byte	1,2,35,26,10
	.byte	'pduinfo_idx_u8',0
	.word	158
	.byte	1,2,35,27,10
	.byte	'nrc21_b',0
	.word	158
	.byte	1,2,35,28,10
	.byte	'sendRespPendTransToBoot',0
	.word	158
	.byte	1,2,35,29,0,11
	.byte	'Dcm_Dsld_protocol_tableType',0,4,143,6,2
	.word	13355
	.byte	28,1,1,16
	.word	158
	.byte	16
	.word	488
	.byte	16
	.word	488
	.byte	16
	.word	158
	.byte	0,3
	.word	13706
	.byte	11
	.byte	'Dcm_ConfirmationApiType',0,4,145,6,16
	.word	13730
	.byte	15
	.word	158
	.byte	1,1,16
	.word	2143
	.byte	16
	.word	158
	.byte	16
	.word	158
	.byte	0,3
	.word	13768
	.byte	3
	.word	1898
	.byte	15
	.word	158
	.byte	1,1,16
	.word	158
	.byte	16
	.word	13796
	.byte	16
	.word	2143
	.byte	0,3
	.word	13801
	.byte	9,4,158,6,9,20,10
	.byte	'allowed_session_b32',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'allowed_security_b32',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	13791
	.byte	4,2,35,8,10
	.byte	'SubFunc_fp',0
	.word	13824
	.byte	4,2,35,12,10
	.byte	'subservice_id_u8',0
	.word	158
	.byte	1,2,35,16,10
	.byte	'isDspRDTCSubFnc_b',0
	.word	158
	.byte	1,2,35,17,0,11
	.byte	'Dcm_Dsld_SubServiceType',0,4,169,6,2
	.word	13829
	.byte	12
	.word	13829
	.byte	3
	.word	14041
	.byte	15
	.word	158
	.byte	1,1,16
	.word	2143
	.byte	16
	.word	158
	.byte	0,3
	.word	14051
	.byte	9,4,186,6,9,36,10
	.byte	'allowed_session_b32',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'allowed_security_b32',0
	.word	827
	.byte	4,2,35,4,10
	.byte	'service_handler_fp',0
	.word	13824
	.byte	4,2,35,8,10
	.byte	'Service_init_fp',0
	.word	5605
	.byte	4,2,35,12,10
	.byte	'sid_u8',0
	.word	158
	.byte	1,2,35,16,10
	.byte	'subfunction_exist_b',0
	.word	158
	.byte	1,2,35,17,10
	.byte	'servicelocator_b',0
	.word	158
	.byte	1,2,35,18,10
	.byte	'ptr_subservice_table_pcs',0
	.word	14046
	.byte	4,2,35,20,10
	.byte	'num_sf_u8',0
	.word	158
	.byte	1,2,35,24,10
	.byte	'adrUserServiceModeRule_pfct',0
	.word	14069
	.byte	4,2,35,28,10
	.byte	'Dcm_ConfirmationService',0
	.word	13735
	.byte	4,2,35,32,0,11
	.byte	'Dcm_Dsld_ServiceType',0,4,204,6,3
	.word	14074
	.byte	3
	.word	13706
	.byte	12
	.word	14074
	.byte	3
	.word	14422
	.byte	9,4,218,6,9,8,10
	.byte	'ptr_service_table_pcs',0
	.word	14427
	.byte	4,2,35,0,10
	.byte	'num_services_u8',0
	.word	158
	.byte	1,2,35,4,10
	.byte	'nrc_sessnot_supported_u8',0
	.word	158
	.byte	1,2,35,5,10
	.byte	'cdtc_index_u8',0
	.word	158
	.byte	1,2,35,6,0,11
	.byte	'Dcm_Dsld_sid_tableType',0,4,224,6,3
	.word	14432
	.byte	9,4,238,6,9,14,10
	.byte	'protocol_num_u8',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'txpduid_num_u8',0
	.word	488
	.byte	2,2,35,2,10
	.byte	'roetype2_txpdu_u8',0
	.word	488
	.byte	2,2,35,4,10
	.byte	'rdpitype2_txpdu_u8',0
	.word	488
	.byte	2,2,35,6,10
	.byte	'testaddr_u16',0
	.word	488
	.byte	2,2,35,8,10
	.byte	'channel_idx_u8',0
	.word	158
	.byte	1,2,35,10,10
	.byte	'ConnectionIndex_u8',0
	.word	158
	.byte	1,2,35,11,10
	.byte	'NumberOfTxpdu_u8',0
	.word	158
	.byte	1,2,35,12,0,11
	.byte	'Dcm_Dsld_connType',0,4,248,6,3
	.word	14584
	.byte	13,4,146,7,9,4,14
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,14
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,14
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,11
	.byte	'Dcm_Dsld_commodeType',0,4,151,7,2
	.word	14822
	.byte	13,24,200,1,9,4,14
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,14
	.byte	'USE_ASYNCH_FNC',0,1,0,11
	.byte	'DcmDspSecurityUsePort',0,24,204,1,2
	.word	14934
	.byte	13,25,22,9,4,14
	.byte	'DCM_NO_BOOT',0,0,14
	.byte	'DCM_OEM_BOOT',0,1,14
	.byte	'DCM_SYS_BOOT',0,2,0,11
	.byte	'Dcm_SessionForBootType',0,25,27,2
	.word	15016
	.byte	11
	.byte	'Dcm_Direction_t',0,6,208,1,3
	.word	2148
	.byte	11
	.byte	'Dcm_DIDIndexType_tst',0,6,254,1,3
	.word	1337
	.byte	13,6,192,3,9,4,14
	.byte	'DCM_READ_OK',0,0,14
	.byte	'DCM_READ_FAILED',0,1,14
	.byte	'DCM_READ_PENDING',0,2,14
	.byte	'DCM_READ_FORCE_RCRRP',0,3,14
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,11
	.byte	'Dcm_ReadMemoryRet_t',0,6,199,3,3
	.word	15152
	.byte	13,26,21,9,4,14
	.byte	'DSD_IDLE',0,0,14
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,14
	.byte	'DSD_CALL_SERVICE',0,2,14
	.byte	'DSD_WAITFORTXCONF',0,3,14
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,11
	.byte	'Dcm_DsdStatesType_ten',0,26,28,2
	.word	15287
	.byte	13,11,215,2,9,4,14
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,14
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,11
	.byte	'Dcm_DsldResponseType_ten',0,11,219,2,2
	.word	15424
	.byte	13,7,148,1,9,4,14
	.byte	'DCM_ROE_CLEARED',0,0,14
	.byte	'DCM_ROE_STOPPED',0,1,14
	.byte	'DCM_ROE_STARTED',0,2,0,11
	.byte	'Dcm_DspRoeEventState_ten',0,7,153,1,2
	.word	15513
	.byte	11
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,7,236,1,2
	.word	2246
	.byte	11
	.byte	'Dcm_ExtendedDIDConfig_tst',0,7,141,2,3
	.word	2328
	.byte	11
	.byte	'Dcm_SignalDIDIocbiConfig_tst',0,7,158,2,2
	.word	3361
	.byte	11
	.byte	'Dcm_SignalDIDSubStructConfig_tst',0,7,178,2,2
	.word	3203
	.byte	11
	.byte	'Dcm_DataInfoConfig_tst',0,7,197,2,2
	.word	2968
	.byte	11
	.byte	'Dcm_SignalDIDConfig_tst',0,7,204,2,3
	.word	2071
	.byte	11
	.byte	'Dcm_DIDConfig_tst',0,7,229,2,3
	.word	2750
	.byte	33
	.word	2750
	.byte	34,0,12
	.word	15850
	.byte	35
	.byte	'Dcm_DIDConfig',0,7,234,3,44
	.word	15857
	.byte	1,1,33
	.word	2968
	.byte	34,0,12
	.word	15887
	.byte	35
	.byte	'Dcm_DspDataInfo_st',0,7,235,3,50
	.word	15894
	.byte	1,1,33
	.word	3203
	.byte	34,0,12
	.word	15929
	.byte	35
	.byte	'Dcm_DspDid_ControlInfo_st',0,7,236,3,60
	.word	15936
	.byte	1,1,33
	.word	3361
	.byte	34,0,12
	.word	15978
	.byte	35
	.byte	'Dcm_DspIOControlInfo',0,7,238,3,56
	.word	15985
	.byte	1,1,35
	.byte	'Dcm_DidSignalIdx_u16',0,7,145,4,29
	.word	488
	.byte	1,1,11
	.byte	'Dcm_Dsp_IocbiDidStatus_ten',0,8,216,1,4
	.word	3513
	.byte	11
	.byte	'Dcm_Dsp_IocbiStatusType_tst',0,8,223,1,3
	.word	3730
.L356:
	.byte	24,8
	.word	3730
	.byte	25,0,0,11
	.byte	'Rte_TaskRefType',0,27,184,1,32
	.word	7407
	.byte	11
	.byte	'Rte_EventRefType',0,27,185,1,32
	.word	158
	.byte	11
	.byte	'Rte_EventType',0,27,186,1,32
	.word	827
	.byte	11
	.byte	'Rte_REActCounterType',0,27,252,1,15
	.word	158
	.byte	3
	.word	158
	.byte	11
	.byte	'Rte_REActCounterRefType',0,27,253,1,58
	.word	16240
	.byte	9,27,255,1,9,8,10
	.byte	'task',0
	.word	16136
	.byte	4,2,35,0,10
	.byte	'acnt',0
	.word	16245
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,27,130,2,3
	.word	16278
	.byte	12
	.word	7147
	.byte	3
	.word	16342
	.byte	3
	.word	158
	.byte	12
	.word	16278
	.byte	3
	.word	16357
	.byte	11
	.byte	'Rte_REContainerRefType',0,27,132,2,60
	.word	16362
	.byte	11
	.byte	'Rte_MSICounterType',0,27,149,2,16
	.word	488
	.byte	3
	.word	488
	.byte	11
	.byte	'Rte_MSICounterRefType',0,27,150,2,56
	.word	16427
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,27,152,2,17
	.word	158
	.byte	3
	.word	158
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,27,153,2,60
	.word	16495
	.byte	9,27,163,2,9,24,10
	.byte	'counter',0
	.word	16432
	.byte	4,2,35,0,10
	.byte	'incCounter',0
	.word	158
	.byte	1,2,35,4,10
	.byte	'pending',0
	.word	16500
	.byte	4,2,35,8,10
	.byte	'osTask',0
	.word	16136
	.byte	4,2,35,12,10
	.byte	'acnt',0
	.word	16245
	.byte	4,2,35,16,10
	.byte	'osEvent',0
	.word	158
	.byte	1,2,35,20,10
	.byte	'MSIInit',0
	.word	488
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,27,172,2,3
	.word	16535
	.byte	3
	.word	488
	.byte	3
	.word	158
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,27,179,2,16
	.word	158
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,27,180,2,16
	.word	158
	.byte	9,27,182,2,9,4,10
	.byte	'pending',0
	.word	158
	.byte	1,2,35,0,10
	.byte	'count',0
	.word	158
	.byte	1,2,35,1,10
	.byte	'firstWaitingTask',0
	.word	158
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,27,186,2,3
	.word	16753
	.byte	3
	.word	16753
	.byte	9,27,226,2,9,12,10
	.byte	'event_id',0
	.word	827
	.byte	4,2,35,0,10
	.byte	'wd',0
	.word	16845
	.byte	4,2,35,4,10
	.byte	'timeout',0
	.word	827
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,27,230,2,3
	.word	16850
	.byte	12
	.word	16850
	.byte	3
	.word	16939
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,27,232,2,66
	.word	16944
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,27,234,2,29
	.word	16278
	.byte	27
	.byte	'Rte_QTaskType',0,27,243,2,16,28,10
	.byte	'cmn',0
	.word	10671
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	16136
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,27,246,2,3
	.word	17021
	.byte	27
	.byte	'Rte_QREType',0,27,250,2,16,28,10
	.byte	'cmn',0
	.word	10671
	.byte	24,2,35,0,10
	.byte	're',0
	.word	16367
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,27,253,2,3
	.word	17092
	.byte	12
	.word	16278
	.byte	3
	.word	17157
	.byte	27
	.byte	'Rte_QWWPType',0,27,129,3,16,28,10
	.byte	'cmn',0
	.word	10671
	.byte	24,2,35,0,10
	.byte	'wwp',0
	.word	16949
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,27,132,3,3
	.word	17167
	.byte	12
	.word	16850
	.byte	3
	.word	17235
	.byte	27
	.byte	'Rte_QEvType',0,27,136,3,16,36,10
	.byte	'cmn',0
	.word	10671
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	16136
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	158
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	16245
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,27,141,3,3
	.word	17245
	.byte	27
	.byte	'Rte_QMSIType',0,27,145,3,16,48,10
	.byte	'cmn',0
	.word	10671
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	16136
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	158
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	16245
	.byte	4,2,35,32,10
	.byte	'msiCounter',0
	.word	16432
	.byte	4,2,35,36,10
	.byte	'msiPending',0
	.word	16500
	.byte	4,2,35,40,10
	.byte	'msiLimit',0
	.word	488
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,27,153,3,3
	.word	17340
.L357:
	.byte	13,28,21,9,4,14
	.byte	'DCM_IOCBI_IDLE',0,1,14
	.byte	'DCM_IOCBI_CHKSUPPORT',0,2,14
	.byte	'DCM_IOCBI_CHKCOND',0,3,14
	.byte	'DCM_IOCBI_RUNNING',0,4,14
	.byte	'DCM_IOCBI_READSTREC',0,5,0,11
	.byte	'Dcm_DspIOCBIStates_ten',0,28,28,2
	.word	17495
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	9,19,1,58,15,59,15,57,15,11,15,0,0,10,13,0,3,8,73,19,11,15,56,9,0,0,11,22,0,3,8,58,15,59,15,57,15,73,19
	.byte	0,0,12,38,0,73,19,0,0,13,4,1,58,15,59,15,57,15,11,15,0,0,14,40,0,3,8,28,13,0,0,15,21,1,73,19,54,15,39
	.byte	12,0,0,16,5,0,73,19,0,0,17,59,0,3,8,0,0,18,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0
	.byte	0,19,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,20,46,1,49,19,0,0,21,5,0,49,19,0,0,22,46,0
	.byte	3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,23,21,0,54,15,0,0,24,1,1,11,15,73,19,0,0,25,33,0,47,15,0,0
	.byte	26,21,0,54,15,39,12,0,0,27,19,1,3,8,58,15,59,15,57,15,11,15,0,0,28,21,1,54,15,39,12,0,0,29,23,1,58,15
	.byte	59,15,57,15,11,15,0,0,30,4,1,3,8,58,15,59,15,57,15,11,15,0,0,31,21,0,73,19,54,15,39,12,0,0,32,53,0,73
	.byte	19,0,0,33,1,1,73,19,0,0,34,33,0,0,0,35,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L220:
	.word	.L570-.L569
.L569:
	.half	3
	.word	.L572-.L571
.L571:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Lcfg_DspUds.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Lcfg_DslDsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Priv.h',0,0,0,0,0
.L572:
.L570:
	.sdecl	'.debug_info',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_info'
.L221:
	.word	1144
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_DcmInputOutputControlByIdentifier',0,1,244,3,31
	.word	.L272
	.byte	1,1,1
	.word	.L206,.L273,.L205
	.byte	4
	.byte	'OpStatus',0,1,244,3,104
	.word	.L272,.L274
	.byte	4
	.byte	'pMsgContext',0,1,244,3,165,1
	.word	.L275,.L276
	.byte	4
	.byte	'dataNegRespCode_u8',0,1,244,3,239,1
	.word	.L277,.L278
	.byte	5
	.word	.L206,.L273
	.byte	6
	.byte	'dataLength_u32',0,1,246,3,27
	.word	.L279,.L280
	.byte	6
	.byte	'ptrDidConfig',0,1,247,3,59
	.word	.L281,.L282
	.byte	6
	.byte	'ptrSigConfig',0,1,248,3,65
	.word	.L283,.L284
	.byte	6
	.byte	'ptrIOSigConfig',0,1,249,3,75
	.word	.L285,.L286
	.byte	6
	.byte	'ptrIOCBIsigConfig',0,1,250,3,70
	.word	.L287,.L288
	.byte	6
	.byte	'ptrDidExtendedConfig',0,1,251,3,67
	.word	.L289,.L290
	.byte	6
	.byte	'ptrIOCBIStatusArrayConfig',0,1,252,3,67
	.word	.L291,.L292
	.byte	6
	.byte	'ptrIOCBIFnc',0,1,253,3,44
	.word	.L293,.L294
	.byte	6
	.byte	'dataSignalLength_u16',0,1,254,3,27
	.word	.L295,.L296
	.byte	6
	.byte	'posnSigByte_u16',0,1,255,3,27
	.word	.L295,.L297
	.byte	6
	.byte	'dataControlMaskLen_u16',0,1,128,4,27
	.word	.L295,.L298
	.byte	6
	.byte	'dataCtlMaskOffset_u16',0,1,129,4,27
	.word	.L295,.L299
	.byte	6
	.byte	'nrDID_u16',0,1,130,4,27
	.word	.L295,.L300
	.byte	6
	.byte	'idxIocbiIndex_u16',0,1,131,4,33
	.word	.L301,.L302
	.byte	6
	.byte	'dataIocbiExeResult_u8',0,1,132,4,35
	.word	.L272,.L303
	.byte	6
	.byte	'dataRetGetDid_u8',0,1,133,4,35
	.word	.L272,.L304
	.byte	6
	.byte	'dataValidateIoMaskStatus_u8',0,1,134,4,35
	.word	.L272,.L305
	.byte	6
	.byte	'dataIoCtrlParam_u8',0,1,142,4,26
	.word	.L272,.L306
	.byte	6
	.byte	'posnSigBit_u8',0,1,143,4,26
	.word	.L272,.L307
	.byte	6
	.byte	'posnCtlMaskByte_u8',0,1,144,4,26
	.word	.L272,.L308
	.byte	6
	.byte	'posnCtlMaskBit_u8',0,1,145,4,26
	.word	.L272,.L309
	.byte	6
	.byte	'isModeChkRetval_b',0,1,146,4,28
	.word	.L272,.L310
	.byte	6
	.byte	'flgProcessReq_b',0,1,147,4,29
	.word	.L272,.L311
	.byte	6
	.byte	'dataNrc_u8',0,1,148,4,49
	.word	.L272,.L312
	.byte	6
	.byte	'dataretVal_u8',0,1,149,4,36
	.word	.L272,.L313
	.byte	6
	.byte	'dataFuncRetVal_u8',0,1,150,4,36
	.word	.L272,.L314
	.byte	6
	.byte	'dataServretVal_u8',0,1,151,4,36
	.word	.L272,.L315
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_line'
.L223:
	.word	.L574-.L573
.L573:
	.half	3
	.word	.L576-.L575
.L575:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L576:
	.byte	5,31,7,0,5,2
	.word	.L206
	.byte	3,243,3,1,5,27,9
	.half	.L368-.L206
	.byte	3,38,1,5,25,9
	.half	.L577-.L368
	.byte	1,5,18,9
	.half	.L578-.L577
	.byte	3,1,1,5,16,9
	.half	.L579-.L578
	.byte	1,5,27,9
	.half	.L580-.L579
	.byte	3,1,1,5,21,9
	.half	.L369-.L580
	.byte	3,2,1,5,23,9
	.half	.L370-.L369
	.byte	3,1,1,5,22,9
	.half	.L372-.L370
	.byte	3,1,1,5,5,9
	.half	.L374-.L372
	.byte	3,4,1,5,26,7,9
	.half	.L581-.L374
	.byte	3,3,1,5,27,9
	.half	.L365-.L581
	.byte	3,2,1,5,28,9
	.half	.L582-.L365
	.byte	3,126,1,5,17,9
	.half	.L8-.L582
	.byte	3,7,1,5,18,9
	.half	.L583-.L8
	.byte	3,2,1,9
	.half	.L584-.L583
	.byte	3,61,1,9
	.half	.L585-.L584
	.byte	3,200,1,1,9
	.half	.L586-.L585
	.byte	3,199,0,1,9
	.half	.L587-.L586
	.byte	3,174,7,1,5,32,9
	.half	.L10-.L587
	.byte	3,136,118,1,5,17,9
	.half	.L588-.L10
	.byte	1,5,36,7,9
	.half	.L589-.L588
	.byte	3,2,1,5,45,9
	.half	.L378-.L589
	.byte	1,5,21,9
	.half	.L590-.L378
	.byte	1,5,46,7,9
	.half	.L591-.L590
	.byte	3,2,1,5,59,9
	.half	.L592-.L591
	.byte	3,2,1,5,25,9
	.half	.L376-.L592
	.byte	1,5,29,7,9
	.half	.L593-.L376
	.byte	3,14,1,5,52,9
	.half	.L594-.L593
	.byte	1,5,50,9
	.half	.L595-.L594
	.byte	1,5,29,9
	.half	.L596-.L595
	.byte	3,1,1,5,56,9
	.half	.L597-.L596
	.byte	1,5,54,9
	.half	.L598-.L597
	.byte	1,5,50,9
	.half	.L599-.L598
	.byte	3,2,1,5,132,1,9
	.half	.L380-.L599
	.byte	1,5,82,9
	.half	.L20-.L380
	.byte	3,2,1,5,106,9
	.half	.L600-.L20
	.byte	1,5,125,9
	.half	.L601-.L600
	.byte	1,5,65,9
	.half	.L602-.L601
	.byte	1,5,33,9
	.half	.L603-.L602
	.byte	1,5,53,7,9
	.half	.L604-.L603
	.byte	3,2,1,5,110,9
	.half	.L605-.L604
	.byte	1,5,66,9
	.half	.L606-.L605
	.byte	1,5,37,9
	.half	.L382-.L606
	.byte	3,1,1,5,67,9
	.half	.L607-.L382
	.byte	1,5,53,9
	.half	.L608-.L607
	.byte	1,5,150,1,9
	.half	.L21-.L608
	.byte	3,123,1,5,55,9
	.half	.L19-.L21
	.byte	1,5,102,7,9
	.half	.L609-.L19
	.byte	1,5,122,9
	.half	.L610-.L609
	.byte	1,5,32,7,9
	.half	.L22-.L610
	.byte	3,9,1,5,60,7,9
	.half	.L611-.L22
	.byte	1,5,79,9
	.half	.L612-.L611
	.byte	1,5,58,7,9
	.half	.L613-.L612
	.byte	3,2,1,5,56,9
	.half	.L614-.L613
	.byte	1,5,87,9
	.half	.L23-.L614
	.byte	3,126,1,5,51,9
	.half	.L18-.L23
	.byte	3,7,1,5,49,9
	.half	.L615-.L18
	.byte	1,5,25,9
	.half	.L25-.L615
	.byte	3,126,1,5,47,9
	.half	.L17-.L25
	.byte	3,7,1,5,45,9
	.half	.L616-.L17
	.byte	1,5,25,9
	.half	.L617-.L616
	.byte	3,2,1,5,21,9
	.half	.L26-.L617
	.byte	3,124,1,5,43,9
	.half	.L16-.L26
	.byte	3,9,1,5,41,9
	.half	.L618-.L16
	.byte	1,5,20,9
	.half	.L27-.L618
	.byte	3,2,1,5,17,9
	.half	.L619-.L27
	.byte	1,5,21,7,9
	.half	.L620-.L619
	.byte	3,2,1,5,47,9
	.half	.L11-.L620
	.byte	3,6,1,5,33,9
	.half	.L621-.L11
	.byte	1,5,76,9
	.half	.L622-.L621
	.byte	1,5,46,9
	.half	.L623-.L622
	.byte	1,5,54,9
	.half	.L391-.L623
	.byte	3,2,1,5,71,9
	.half	.L624-.L391
	.byte	1,5,95,9
	.half	.L625-.L624
	.byte	1,5,56,9
	.half	.L626-.L625
	.byte	1,5,17,9
	.half	.L627-.L626
	.byte	1,5,42,7,9
	.half	.L628-.L627
	.byte	3,3,1,5,29,9
	.half	.L629-.L628
	.byte	3,82,1,5,102,9
	.half	.L630-.L629
	.byte	3,47,1,5,72,9
	.half	.L32-.L630
	.byte	3,2,1,5,98,9
	.half	.L396-.L32
	.byte	1,5,97,9
	.half	.L631-.L396
	.byte	1,5,119,9
	.half	.L632-.L631
	.byte	1,5,41,9
	.half	.L633-.L632
	.byte	1,5,59,9
	.half	.L634-.L633
	.byte	1,5,81,9
	.half	.L397-.L634
	.byte	3,1,1,5,43,9
	.half	.L635-.L397
	.byte	1,5,68,9
	.half	.L636-.L635
	.byte	1,5,81,9
	.half	.L399-.L636
	.byte	3,1,1,5,46,9
	.half	.L637-.L399
	.byte	1,5,66,9
	.half	.L638-.L637
	.byte	1,5,28,9
	.half	.L401-.L638
	.byte	3,3,1,5,115,7,9
	.half	.L639-.L401
	.byte	1,5,44,7,9
	.half	.L640-.L639
	.byte	3,3,1,5,53,9
	.half	.L403-.L640
	.byte	1,5,32,9
	.half	.L641-.L403
	.byte	1,5,108,7,9
	.half	.L642-.L641
	.byte	1,5,132,1,9
	.half	.L643-.L642
	.byte	1,5,165,1,9
	.half	.L644-.L643
	.byte	1,5,51,7,9
	.half	.L645-.L644
	.byte	3,3,1,5,38,9
	.half	.L646-.L645
	.byte	1,5,133,1,7,9
	.half	.L647-.L646
	.byte	1,5,184,1,7,9
	.half	.L648-.L647
	.byte	1,5,213,1,9
	.half	.L649-.L648
	.byte	1,5,59,7,9
	.half	.L650-.L649
	.byte	3,3,1,5,57,9
	.half	.L651-.L650
	.byte	1,5,37,9
	.half	.L652-.L651
	.byte	3,2,1,5,82,9
	.half	.L398-.L652
	.byte	3,126,1,5,33,9
	.half	.L40-.L398
	.byte	3,4,1,5,37,9
	.half	.L35-.L40
	.byte	3,11,1,5,111,7,9
	.half	.L653-.L35
	.byte	1,5,135,1,9
	.half	.L654-.L653
	.byte	1,5,168,1,9
	.half	.L655-.L654
	.byte	1,5,50,7,9
	.half	.L656-.L655
	.byte	3,3,1,5,37,9
	.half	.L657-.L656
	.byte	1,5,132,1,7,9
	.half	.L658-.L657
	.byte	1,5,183,1,7,9
	.half	.L659-.L658
	.byte	1,5,211,1,9
	.half	.L660-.L659
	.byte	1,5,59,7,9
	.half	.L661-.L660
	.byte	3,3,1,5,57,9
	.half	.L662-.L661
	.byte	1,5,37,9
	.half	.L663-.L662
	.byte	3,2,1,5,82,9
	.half	.L405-.L663
	.byte	3,126,1,5,33,9
	.half	.L47-.L405
	.byte	3,4,1,5,37,9
	.half	.L42-.L47
	.byte	3,11,1,5,107,7,9
	.half	.L664-.L42
	.byte	1,5,131,1,9
	.half	.L665-.L664
	.byte	1,5,164,1,9
	.half	.L666-.L665
	.byte	1,5,50,7,9
	.half	.L667-.L666
	.byte	3,2,1,5,37,9
	.half	.L668-.L667
	.byte	1,5,132,1,7,9
	.half	.L669-.L668
	.byte	1,5,183,1,7,9
	.half	.L670-.L669
	.byte	1,5,207,1,9
	.half	.L671-.L670
	.byte	1,5,59,7,9
	.half	.L672-.L671
	.byte	3,3,1,5,57,9
	.half	.L673-.L672
	.byte	1,5,37,9
	.half	.L674-.L673
	.byte	3,2,1,5,82,9
	.half	.L407-.L674
	.byte	3,126,1,5,33,9
	.half	.L54-.L407
	.byte	3,4,1,5,37,9
	.half	.L49-.L54
	.byte	3,11,1,5,111,7,9
	.half	.L675-.L49
	.byte	1,5,135,1,9
	.half	.L676-.L675
	.byte	1,5,168,1,9
	.half	.L677-.L676
	.byte	1,5,50,7,9
	.half	.L678-.L677
	.byte	3,3,1,5,37,9
	.half	.L679-.L678
	.byte	1,5,132,1,7,9
	.half	.L680-.L679
	.byte	1,5,183,1,7,9
	.half	.L681-.L680
	.byte	1,5,209,1,9
	.half	.L682-.L681
	.byte	1,5,59,7,9
	.half	.L683-.L682
	.byte	3,3,1,5,57,9
	.half	.L684-.L683
	.byte	1,5,37,9
	.half	.L685-.L684
	.byte	3,2,1,5,82,9
	.half	.L409-.L685
	.byte	3,126,1,5,33,9
	.half	.L61-.L409
	.byte	3,4,1,5,55,9
	.half	.L56-.L61
	.byte	3,14,1,5,53,9
	.half	.L686-.L56
	.byte	1,5,33,9
	.half	.L687-.L686
	.byte	3,2,1,5,29,9
	.half	.L41-.L687
	.byte	3,189,127,1,5,51,9
	.half	.L33-.L41
	.byte	3,201,0,1,5,49,9
	.half	.L688-.L33
	.byte	1,5,29,9
	.half	.L689-.L688
	.byte	3,2,1,5,7,9
	.half	.L63-.L689
	.byte	3,2,1,5,27,9
	.half	.L690-.L63
	.byte	1,5,28,9
	.half	.L31-.L690
	.byte	3,148,127,1,5,61,9
	.half	.L691-.L31
	.byte	1,5,27,9
	.half	.L692-.L691
	.byte	1,5,78,7,9
	.half	.L693-.L692
	.byte	1,5,97,9
	.half	.L694-.L693
	.byte	1,5,24,7,9
	.half	.L64-.L694
	.byte	3,238,0,1,5,21,9
	.half	.L695-.L64
	.byte	1,5,48,7,9
	.half	.L696-.L695
	.byte	3,3,1,5,42,9
	.half	.L416-.L696
	.byte	3,1,1,5,40,9
	.half	.L697-.L416
	.byte	1,5,39,9
	.half	.L698-.L697
	.byte	3,3,1,5,48,9
	.half	.L417-.L698
	.byte	1,5,25,9
	.half	.L699-.L417
	.byte	1,5,29,7,9
	.half	.L700-.L699
	.byte	3,3,1,5,56,9
	.half	.L701-.L700
	.byte	1,5,54,9
	.half	.L702-.L701
	.byte	1,5,103,9
	.half	.L703-.L702
	.byte	3,2,1,5,118,9
	.half	.L704-.L703
	.byte	1,5,46,9
	.half	.L373-.L704
	.byte	1,5,56,9
	.half	.L419-.L373
	.byte	3,2,1,5,54,9
	.half	.L705-.L419
	.byte	1,5,25,9
	.half	.L66-.L705
	.byte	3,3,1,5,88,7,9
	.half	.L706-.L66
	.byte	3,4,1,5,58,9
	.half	.L707-.L706
	.byte	1,5,64,9
	.half	.L392-.L707
	.byte	3,1,1,5,52,9
	.half	.L421-.L392
	.byte	3,1,1,5,29,9
	.half	.L708-.L421
	.byte	1,5,78,7,9
	.half	.L709-.L708
	.byte	3,2,1,5,45,9
	.half	.L68-.L709
	.byte	3,3,1,5,57,9
	.half	.L710-.L68
	.byte	1,5,66,9
	.half	.L711-.L710
	.byte	1,5,81,9
	.half	.L712-.L711
	.byte	1,5,29,9
	.half	.L713-.L712
	.byte	1,5,55,7,9
	.half	.L714-.L713
	.byte	3,2,1,5,53,9
	.half	.L715-.L714
	.byte	1,5,98,9
	.half	.L716-.L715
	.byte	1,5,37,9
	.half	.L69-.L716
	.byte	3,5,1,5,36,9
	.half	.L717-.L69
	.byte	1,5,86,7,9
	.half	.L718-.L717
	.byte	1,5,150,1,7,9
	.half	.L71-.L718
	.byte	3,3,1,5,133,1,9
	.half	.L719-.L71
	.byte	1,5,159,1,9
	.half	.L720-.L719
	.byte	1,5,164,1,9
	.half	.L721-.L720
	.byte	1,5,37,9
	.half	.L426-.L721
	.byte	3,1,1,5,63,7,9
	.half	.L722-.L426
	.byte	3,2,1,5,61,9
	.half	.L723-.L722
	.byte	1,5,41,9
	.half	.L724-.L723
	.byte	3,1,1,5,29,9
	.half	.L70-.L724
	.byte	3,118,1,5,54,9
	.half	.L67-.L70
	.byte	3,17,1,5,30,9
	.half	.L725-.L67
	.byte	1,5,51,7,9
	.half	.L726-.L725
	.byte	3,2,1,5,49,9
	.half	.L727-.L726
	.byte	1,5,70,9
	.half	.L728-.L727
	.byte	1,5,55,9
	.half	.L75-.L728
	.byte	3,2,1,5,30,9
	.half	.L729-.L75
	.byte	1,7,9
	.half	.L730-.L729
	.byte	1,5,51,9
	.half	.L77-.L730
	.byte	3,6,1,5,49,9
	.half	.L731-.L77
	.byte	1,5,21,9
	.half	.L65-.L731
	.byte	3,69,1,5,43,9
	.half	.L30-.L65
	.byte	3,193,0,1,5,41,9
	.half	.L732-.L30
	.byte	1,5,21,9
	.half	.L733-.L732
	.byte	3,2,1,9
	.half	.L79-.L733
	.byte	3,3,1,5,20,9
	.half	.L734-.L79
	.byte	1,5,74,7,9
	.half	.L735-.L734
	.byte	1,5,71,9
	.half	.L736-.L735
	.byte	1,5,46,7,9
	.half	.L737-.L736
	.byte	3,2,1,5,44,9
	.half	.L738-.L737
	.byte	1,5,21,9
	.half	.L739-.L738
	.byte	3,2,1,5,44,9
	.half	.L740-.L739
	.byte	1,5,42,9
	.half	.L741-.L740
	.byte	1,5,63,9
	.half	.L742-.L741
	.byte	3,126,1,5,21,9
	.half	.L80-.L742
	.byte	3,6,1,9
	.half	.L12-.L80
	.byte	3,6,1,5,17,9
	.half	.L743-.L12
	.byte	1,5,51,7,9
	.half	.L744-.L743
	.byte	3,2,1,5,37,9
	.half	.L745-.L744
	.byte	1,5,80,9
	.half	.L746-.L745
	.byte	1,5,50,9
	.half	.L747-.L746
	.byte	1,5,56,9
	.half	.L434-.L747
	.byte	3,1,1,5,59,9
	.half	.L435-.L434
	.byte	3,3,1,5,84,9
	.half	.L748-.L435
	.byte	1,5,61,9
	.half	.L749-.L748
	.byte	1,5,21,9
	.half	.L750-.L749
	.byte	1,5,43,7,9
	.half	.L751-.L750
	.byte	3,3,1,5,126,9
	.half	.L420-.L751
	.byte	3,4,1,5,48,9
	.half	.L752-.L420
	.byte	3,125,1,5,25,9
	.half	.L436-.L752
	.byte	1,5,103,7,9
	.half	.L753-.L436
	.byte	3,3,1,5,140,1,9
	.half	.L754-.L753
	.byte	1,5,162,1,9
	.half	.L437-.L754
	.byte	1,5,81,9
	.half	.L86-.L437
	.byte	3,5,1,5,118,9
	.half	.L755-.L86
	.byte	1,5,25,9
	.half	.L87-.L755
	.byte	3,2,1,5,32,7,9
	.half	.L756-.L87
	.byte	3,2,1,5,29,9
	.half	.L757-.L756
	.byte	1,5,46,7,9
	.half	.L758-.L757
	.byte	3,2,1,5,44,9
	.half	.L759-.L758
	.byte	1,5,47,9
	.half	.L89-.L759
	.byte	3,3,1,5,54,9
	.half	.L760-.L89
	.byte	1,5,40,9
	.half	.L88-.L760
	.byte	3,4,1,5,39,9
	.half	.L761-.L88
	.byte	1,5,25,9
	.half	.L90-.L761
	.byte	3,9,1,5,44,7,9
	.half	.L762-.L90
	.byte	3,3,1,5,84,9
	.half	.L763-.L762
	.byte	1,5,103,9
	.half	.L764-.L763
	.byte	1,5,63,9
	.half	.L765-.L764
	.byte	1,5,29,9
	.half	.L766-.L765
	.byte	1,5,58,7,9
	.half	.L767-.L766
	.byte	3,2,1,5,56,9
	.half	.L768-.L767
	.byte	1,5,75,9
	.half	.L769-.L768
	.byte	1,5,55,9
	.half	.L92-.L769
	.byte	3,4,1,5,53,9
	.half	.L770-.L92
	.byte	1,5,29,9
	.half	.L93-.L770
	.byte	3,126,1,5,51,9
	.half	.L91-.L93
	.byte	3,7,1,5,49,9
	.half	.L771-.L91
	.byte	1,5,25,9
	.half	.L94-.L771
	.byte	3,126,1,5,47,9
	.half	.L85-.L94
	.byte	3,7,1,5,45,9
	.half	.L772-.L85
	.byte	1,5,20,9
	.half	.L84-.L772
	.byte	3,3,1,5,17,9
	.half	.L773-.L84
	.byte	1,5,21,7,9
	.half	.L774-.L773
	.byte	3,3,1,5,47,9
	.half	.L13-.L774
	.byte	3,6,1,5,33,9
	.half	.L775-.L13
	.byte	1,5,76,9
	.half	.L776-.L775
	.byte	1,5,46,9
	.half	.L777-.L776
	.byte	1,5,52,9
	.half	.L446-.L777
	.byte	3,1,1,5,49,9
	.half	.L778-.L446
	.byte	3,2,1,5,58,9
	.half	.L448-.L778
	.byte	1,5,17,9
	.half	.L449-.L448
	.byte	3,1,1,5,59,9
	.half	.L779-.L449
	.byte	1,5,68,9
	.half	.L451-.L779
	.byte	1,5,46,9
	.half	.L780-.L451
	.byte	1,5,56,9
	.half	.L781-.L780
	.byte	3,1,1,5,17,9
	.half	.L782-.L781
	.byte	1,5,65,7,9
	.half	.L783-.L782
	.byte	3,3,1,5,103,9
	.half	.L784-.L783
	.byte	1,5,114,9
	.half	.L785-.L784
	.byte	1,5,65,9
	.half	.L786-.L785
	.byte	1,5,45,9
	.half	.L787-.L786
	.byte	1,5,106,9
	.half	.L455-.L787
	.byte	3,193,1,1,5,29,9
	.half	.L788-.L455
	.byte	3,255,123,1,5,104,9
	.half	.L789-.L788
	.byte	3,195,2,1,5,43,9
	.half	.L100-.L789
	.byte	3,2,1,5,40,9
	.half	.L457-.L100
	.byte	3,1,1,5,25,9
	.half	.L790-.L457
	.byte	1,5,56,7,9
	.half	.L791-.L790
	.byte	3,3,1,5,53,9
	.half	.L459-.L791
	.byte	3,2,1,5,61,9
	.half	.L460-.L459
	.byte	3,2,1,5,93,9
	.half	.L462-.L460
	.byte	1,5,70,9
	.half	.L792-.L462
	.byte	1,5,85,9
	.half	.L463-.L792
	.byte	3,2,1,5,58,9
	.half	.L464-.L463
	.byte	1,5,104,9
	.half	.L793-.L464
	.byte	1,5,25,9
	.half	.L101-.L793
	.byte	3,4,1,5,52,9
	.half	.L794-.L101
	.byte	1,5,50,9
	.half	.L795-.L794
	.byte	1,5,66,9
	.half	.L796-.L795
	.byte	3,2,1,5,52,9
	.half	.L465-.L796
	.byte	3,2,1,5,50,9
	.half	.L797-.L465
	.byte	1,5,25,9
	.half	.L798-.L797
	.byte	3,1,1,5,56,7,9
	.half	.L799-.L798
	.byte	3,123,1,5,30,9
	.half	.L102-.L799
	.byte	3,9,1,5,50,9
	.half	.L366-.L102
	.byte	3,3,1,5,29,9
	.half	.L466-.L366
	.byte	3,1,1,5,51,9
	.half	.L104-.L466
	.byte	3,5,1,5,49,9
	.half	.L800-.L104
	.byte	1,5,25,9
	.half	.L103-.L800
	.byte	3,4,1,5,55,9
	.half	.L801-.L103
	.byte	1,5,41,9
	.half	.L802-.L801
	.byte	1,5,72,9
	.half	.L803-.L802
	.byte	3,1,1,5,98,9
	.half	.L804-.L803
	.byte	1,5,97,9
	.half	.L805-.L804
	.byte	1,5,119,9
	.half	.L806-.L805
	.byte	1,5,41,9
	.half	.L807-.L806
	.byte	1,5,59,9
	.half	.L808-.L807
	.byte	1,5,80,9
	.half	.L471-.L808
	.byte	3,1,1,5,42,9
	.half	.L809-.L471
	.byte	1,5,67,9
	.half	.L810-.L809
	.byte	1,5,50,9
	.half	.L472-.L810
	.byte	3,2,1,5,28,9
	.half	.L811-.L472
	.byte	1,5,60,7,9
	.half	.L812-.L811
	.byte	1,5,80,9
	.half	.L813-.L812
	.byte	1,5,29,7,9
	.half	.L814-.L813
	.byte	3,4,1,5,81,7,9
	.half	.L815-.L814
	.byte	3,2,1,5,46,9
	.half	.L816-.L815
	.byte	1,5,66,9
	.half	.L817-.L816
	.byte	1,5,106,9
	.half	.L818-.L817
	.byte	1,5,33,9
	.half	.L475-.L818
	.byte	3,2,1,5,64,7,9
	.half	.L819-.L475
	.byte	3,3,1,5,62,9
	.half	.L820-.L819
	.byte	1,5,61,9
	.half	.L821-.L820
	.byte	3,3,1,5,40,9
	.half	.L822-.L821
	.byte	1,5,123,7,9
	.half	.L823-.L822
	.byte	1,5,110,9
	.half	.L824-.L823
	.byte	1,5,196,1,7,9
	.half	.L825-.L824
	.byte	1,5,151,1,7,9
	.half	.L111-.L825
	.byte	3,4,1,5,120,9
	.half	.L826-.L111
	.byte	1,5,151,1,9
	.half	.L477-.L826
	.byte	1,5,129,1,9
	.half	.L827-.L477
	.byte	1,5,178,1,9
	.half	.L828-.L827
	.byte	1,5,62,9
	.half	.L467-.L828
	.byte	1,5,64,9
	.half	.L110-.L467
	.byte	3,59,1,5,62,9
	.half	.L829-.L110
	.byte	1,5,29,9
	.half	.L108-.L829
	.byte	3,5,1,5,81,7,9
	.half	.L830-.L108
	.byte	3,2,1,5,46,9
	.half	.L831-.L830
	.byte	1,5,66,9
	.half	.L832-.L831
	.byte	1,5,106,9
	.half	.L833-.L832
	.byte	1,5,33,9
	.half	.L482-.L833
	.byte	3,2,1,5,64,7,9
	.half	.L834-.L482
	.byte	3,3,1,5,62,9
	.half	.L835-.L834
	.byte	1,5,61,9
	.half	.L836-.L835
	.byte	3,2,1,5,40,9
	.half	.L837-.L836
	.byte	1,5,123,7,9
	.half	.L838-.L837
	.byte	1,5,110,9
	.half	.L839-.L838
	.byte	1,5,196,1,7,9
	.half	.L840-.L839
	.byte	1,5,107,7,9
	.half	.L116-.L840
	.byte	3,5,1,5,62,9
	.half	.L479-.L116
	.byte	1,5,61,9
	.half	.L115-.L479
	.byte	3,3,1,5,40,9
	.half	.L841-.L115
	.byte	1,5,123,7,9
	.half	.L842-.L841
	.byte	1,5,110,9
	.half	.L843-.L842
	.byte	1,5,200,1,7,9
	.half	.L844-.L843
	.byte	1,5,197,1,9
	.half	.L845-.L844
	.byte	1,5,106,7,9
	.half	.L119-.L845
	.byte	3,49,1,5,132,1,9
	.half	.L846-.L119
	.byte	1,5,62,9
	.half	.L485-.L846
	.byte	1,5,64,9
	.half	.L118-.L485
	.byte	3,4,1,5,62,9
	.half	.L847-.L118
	.byte	1,5,29,9
	.half	.L113-.L847
	.byte	3,5,1,5,81,7,9
	.half	.L848-.L113
	.byte	3,2,1,5,46,9
	.half	.L849-.L848
	.byte	1,5,66,9
	.half	.L850-.L849
	.byte	1,5,106,9
	.half	.L851-.L850
	.byte	1,5,33,9
	.half	.L489-.L851
	.byte	3,2,1,5,64,7,9
	.half	.L852-.L489
	.byte	3,3,1,5,62,9
	.half	.L853-.L852
	.byte	1,5,61,9
	.half	.L854-.L853
	.byte	3,3,1,5,40,9
	.half	.L855-.L854
	.byte	1,5,123,7,9
	.half	.L856-.L855
	.byte	1,5,110,9
	.half	.L857-.L856
	.byte	1,5,196,1,7,9
	.half	.L858-.L857
	.byte	1,5,103,7,9
	.half	.L124-.L858
	.byte	3,5,1,5,62,9
	.half	.L488-.L124
	.byte	1,5,64,9
	.half	.L123-.L488
	.byte	3,59,1,5,62,9
	.half	.L859-.L123
	.byte	1,5,29,9
	.half	.L121-.L859
	.byte	3,4,1,5,81,7,9
	.half	.L860-.L121
	.byte	3,2,1,5,46,9
	.half	.L861-.L860
	.byte	1,5,66,9
	.half	.L862-.L861
	.byte	1,5,106,9
	.half	.L863-.L862
	.byte	1,5,33,9
	.half	.L492-.L863
	.byte	3,2,1,5,64,7,9
	.half	.L864-.L492
	.byte	3,3,1,5,62,9
	.half	.L865-.L864
	.byte	1,9
	.half	.L866-.L865
	.byte	3,3,1,5,41,9
	.half	.L867-.L866
	.byte	1,5,123,7,9
	.half	.L868-.L867
	.byte	1,5,136,1,9
	.half	.L869-.L868
	.byte	1,5,205,1,7,9
	.half	.L870-.L869
	.byte	1,5,105,7,9
	.half	.L871-.L870
	.byte	3,4,1,5,62,9
	.half	.L491-.L871
	.byte	1,5,64,9
	.half	.L128-.L491
	.byte	3,4,1,5,62,9
	.half	.L872-.L128
	.byte	1,5,68,9
	.half	.L126-.L872
	.byte	3,5,1,5,32,9
	.half	.L496-.L126
	.byte	1,5,118,7,9
	.half	.L873-.L496
	.byte	1,5,105,9
	.half	.L874-.L873
	.byte	1,5,193,1,7,9
	.half	.L875-.L874
	.byte	1,5,54,7,9
	.half	.L132-.L875
	.byte	3,3,1,5,53,9
	.half	.L876-.L132
	.byte	1,5,73,9
	.half	.L877-.L876
	.byte	1,5,34,9
	.half	.L131-.L877
	.byte	3,2,1,5,55,7,9
	.half	.L878-.L131
	.byte	3,2,1,5,53,9
	.half	.L879-.L878
	.byte	1,5,59,9
	.half	.L880-.L879
	.byte	1,5,33,9
	.half	.L135-.L880
	.byte	3,5,1,5,28,9
	.half	.L106-.L135
	.byte	3,4,1,5,64,7,9
	.half	.L881-.L106
	.byte	1,5,84,9
	.half	.L882-.L881
	.byte	1,5,29,7,9
	.half	.L883-.L882
	.byte	3,2,1,5,57,9
	.half	.L884-.L883
	.byte	1,5,54,9
	.half	.L885-.L884
	.byte	1,5,6,9
	.half	.L138-.L885
	.byte	3,3,1,5,26,9
	.half	.L886-.L138
	.byte	1,5,28,9
	.half	.L99-.L886
	.byte	3,191,125,1,5,63,9
	.half	.L887-.L99
	.byte	1,5,27,9
	.half	.L888-.L887
	.byte	1,5,78,7,9
	.half	.L889-.L888
	.byte	1,5,97,9
	.half	.L890-.L889
	.byte	1,5,25,7,9
	.half	.L105-.L890
	.byte	3,196,2,1,5,61,7,9
	.half	.L891-.L105
	.byte	1,5,81,9
	.half	.L892-.L891
	.byte	1,5,50,7,9
	.half	.L893-.L892
	.byte	3,2,1,5,48,9
	.half	.L894-.L893
	.byte	1,9
	.half	.L895-.L894
	.byte	3,2,1,5,46,9
	.half	.L896-.L895
	.byte	1,5,53,9
	.half	.L897-.L896
	.byte	3,1,1,5,51,9
	.half	.L898-.L897
	.byte	1,5,69,9
	.half	.L899-.L898
	.byte	3,125,1,5,29,9
	.half	.L141-.L899
	.byte	3,6,1,5,69,7,9
	.half	.L900-.L141
	.byte	1,5,89,9
	.half	.L901-.L900
	.byte	1,5,47,7,9
	.half	.L902-.L901
	.byte	3,3,1,5,45,9
	.half	.L903-.L902
	.byte	1,5,53,9
	.half	.L904-.L903
	.byte	3,1,1,5,51,9
	.half	.L905-.L904
	.byte	1,5,25,9
	.half	.L906-.L905
	.byte	3,1,1,5,53,9
	.half	.L144-.L906
	.byte	3,4,1,5,51,9
	.half	.L907-.L144
	.byte	1,5,28,9
	.half	.L908-.L907
	.byte	3,2,1,5,25,9
	.half	.L909-.L908
	.byte	1,5,51,7,9
	.half	.L910-.L909
	.byte	3,2,1,5,49,9
	.half	.L911-.L910
	.byte	1,5,46,9
	.half	.L912-.L911
	.byte	3,1,1,5,57,9
	.half	.L913-.L912
	.byte	3,1,1,5,55,9
	.half	.L914-.L913
	.byte	1,5,25,9
	.half	.L147-.L914
	.byte	3,2,1,5,21,9
	.half	.L143-.L147
	.byte	3,111,1,5,22,9
	.half	.L98-.L143
	.byte	3,20,1,7,9
	.half	.L915-.L98
	.byte	1,5,38,9
	.half	.L150-.L915
	.byte	3,189,4,1,5,59,9
	.half	.L14-.L150
	.byte	3,146,118,1,5,49,9
	.half	.L916-.L14
	.byte	3,244,9,1,5,58,9
	.half	.L510-.L916
	.byte	1,5,17,9
	.half	.L494-.L510
	.byte	3,2,1,5,44,9
	.half	.L917-.L494
	.byte	1,5,42,9
	.half	.L918-.L917
	.byte	1,5,94,9
	.half	.L919-.L918
	.byte	3,2,1,5,103,9
	.half	.L920-.L919
	.byte	1,5,44,9
	.half	.L512-.L920
	.byte	3,2,1,5,42,9
	.half	.L921-.L512
	.byte	1,5,50,9
	.half	.L922-.L921
	.byte	3,40,1,9
	.half	.L923-.L922
	.byte	3,1,1,5,17,9
	.half	.L924-.L923
	.byte	3,89,1,5,42,7,9
	.half	.L925-.L924
	.byte	3,3,1,5,85,9
	.half	.L514-.L925
	.byte	1,5,52,9
	.half	.L154-.L514
	.byte	3,2,1,5,76,9
	.half	.L926-.L154
	.byte	1,5,57,9
	.half	.L515-.L926
	.byte	3,1,1,5,99,9
	.half	.L927-.L515
	.byte	1,5,25,9
	.half	.L928-.L927
	.byte	1,5,29,7,9
	.half	.L929-.L928
	.byte	3,2,1,5,77,7,9
	.half	.L930-.L929
	.byte	3,3,1,5,75,9
	.half	.L931-.L930
	.byte	1,5,29,9
	.half	.L156-.L931
	.byte	3,3,1,5,77,7,9
	.half	.L932-.L156
	.byte	3,3,1,5,75,9
	.half	.L933-.L932
	.byte	1,5,29,9
	.half	.L157-.L933
	.byte	3,4,1,5,77,7,9
	.half	.L934-.L157
	.byte	3,3,1,5,75,9
	.half	.L935-.L934
	.byte	1,5,29,9
	.half	.L158-.L935
	.byte	3,4,1,5,77,7,9
	.half	.L936-.L158
	.byte	3,3,1,5,75,9
	.half	.L937-.L936
	.byte	1,5,103,9
	.half	.L155-.L937
	.byte	3,100,1,5,85,9
	.half	.L153-.L155
	.byte	1,5,46,7,9
	.half	.L938-.L153
	.byte	3,34,1,5,44,9
	.half	.L939-.L938
	.byte	1,5,68,9
	.half	.L940-.L939
	.byte	3,1,1,5,66,9
	.half	.L941-.L940
	.byte	1,5,76,9
	.half	.L942-.L941
	.byte	3,1,1,5,74,9
	.half	.L943-.L942
	.byte	1,5,78,9
	.half	.L944-.L943
	.byte	3,1,1,5,76,9
	.half	.L945-.L944
	.byte	1,5,32,9
	.half	.L946-.L945
	.byte	3,2,1,5,58,9
	.half	.L947-.L946
	.byte	1,5,67,9
	.half	.L517-.L947
	.byte	1,5,45,9
	.half	.L948-.L517
	.byte	1,5,32,9
	.half	.L949-.L948
	.byte	3,1,1,5,58,9
	.half	.L950-.L949
	.byte	1,5,67,9
	.half	.L519-.L950
	.byte	1,5,45,9
	.half	.L951-.L519
	.byte	1,5,32,9
	.half	.L952-.L951
	.byte	3,1,1,5,45,9
	.half	.L521-.L952
	.byte	1,5,47,9
	.half	.L953-.L521
	.byte	3,1,1,5,71,9
	.half	.L954-.L953
	.byte	1,5,45,9
	.half	.L955-.L954
	.byte	1,5,38,9
	.half	.L956-.L955
	.byte	3,1,1,5,60,9
	.half	.L957-.L956
	.byte	3,119,1,5,45,9
	.half	.L152-.L957
	.byte	3,11,1,5,22,9
	.half	.L958-.L152
	.byte	1,5,68,7,9
	.half	.L959-.L958
	.byte	3,2,1,5,66,9
	.half	.L960-.L959
	.byte	1,5,38,9
	.half	.L961-.L960
	.byte	3,1,1,5,21,9
	.half	.L962-.L961
	.byte	3,1,1,5,73,9
	.half	.L963-.L962
	.byte	1,5,42,9
	.half	.L964-.L963
	.byte	1,9
	.half	.L965-.L964
	.byte	3,3,1,5,85,9
	.half	.L524-.L965
	.byte	1,5,52,9
	.half	.L163-.L524
	.byte	3,2,1,5,76,9
	.half	.L966-.L163
	.byte	1,5,57,9
	.half	.L525-.L966
	.byte	3,1,1,5,99,9
	.half	.L967-.L525
	.byte	1,5,25,9
	.half	.L968-.L967
	.byte	1,5,29,7,9
	.half	.L969-.L968
	.byte	3,3,1,5,77,7,9
	.half	.L970-.L969
	.byte	3,3,1,5,75,9
	.half	.L971-.L970
	.byte	1,5,29,9
	.half	.L165-.L971
	.byte	3,4,1,5,77,7,9
	.half	.L972-.L165
	.byte	3,3,1,5,75,9
	.half	.L973-.L972
	.byte	1,5,29,9
	.half	.L166-.L973
	.byte	3,4,1,5,77,7,9
	.half	.L974-.L166
	.byte	3,3,1,5,75,9
	.half	.L975-.L974
	.byte	1,5,29,9
	.half	.L167-.L975
	.byte	3,4,1,5,77,7,9
	.half	.L976-.L167
	.byte	3,3,1,5,75,9
	.half	.L977-.L976
	.byte	1,5,103,9
	.half	.L164-.L977
	.byte	3,98,1,5,85,9
	.half	.L162-.L164
	.byte	1,7,9
	.half	.L978-.L162
	.byte	1,5,21,9
	.half	.L161-.L978
	.byte	3,39,1,5,134,1,7,9
	.half	.L979-.L161
	.byte	3,3,1,5,177,1,9
	.half	.L980-.L979
	.byte	1,5,147,1,9
	.half	.L981-.L980
	.byte	1,5,216,1,9
	.half	.L982-.L981
	.byte	1,5,121,9
	.half	.L983-.L982
	.byte	1,5,191,1,9
	.half	.L984-.L983
	.byte	1,5,216,1,9
	.half	.L985-.L984
	.byte	1,5,215,1,9
	.half	.L986-.L985
	.byte	1,5,237,1,9
	.half	.L987-.L986
	.byte	1,5,253,1,9
	.half	.L988-.L987
	.byte	1,5,25,9
	.half	.L513-.L988
	.byte	3,1,1,5,51,7,9
	.half	.L989-.L513
	.byte	3,4,1,5,49,9
	.half	.L990-.L989
	.byte	1,5,25,9
	.half	.L171-.L990
	.byte	3,124,1,5,47,9
	.half	.L170-.L171
	.byte	3,9,1,5,45,9
	.half	.L991-.L170
	.byte	1,5,76,9
	.half	.L172-.L991
	.byte	3,2,1,5,74,9
	.half	.L992-.L172
	.byte	1,5,78,9
	.half	.L993-.L992
	.byte	3,1,1,5,76,9
	.half	.L994-.L993
	.byte	1,5,68,9
	.half	.L995-.L994
	.byte	3,1,1,5,66,9
	.half	.L996-.L995
	.byte	1,5,17,9
	.half	.L160-.L996
	.byte	3,2,1,5,39,9
	.half	.L15-.L160
	.byte	3,5,1,5,37,9
	.half	.L997-.L15
	.byte	1,5,17,9
	.half	.L998-.L997
	.byte	3,1,1,5,12,9
	.half	.L29-.L998
	.byte	3,4,1,5,9,9
	.half	.L999-.L29
	.byte	1,5,13,7,9
	.half	.L1000-.L999
	.byte	3,2,1,5,36,9
	.half	.L1001-.L1000
	.byte	1,5,34,9
	.half	.L1002-.L1001
	.byte	1,5,31,9
	.half	.L1003-.L1002
	.byte	3,1,1,5,38,9
	.half	.L1004-.L1003
	.byte	3,1,1,5,36,9
	.half	.L1005-.L1004
	.byte	1,5,5,9
	.half	.L9-.L1005
	.byte	3,3,1,5,1,9
	.half	.L176-.L9
	.byte	3,1,1,7,9
	.half	.L225-.L176
	.byte	0,1,1
.L574:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L206,0,.L225-.L206,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_info'
.L226:
	.word	434
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L229,.L228
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_Dsp_IOCBI_Ini',0,1,98,21,1,1,1
	.word	.L204,.L316,.L203
	.byte	4
	.word	.L204,.L316
	.byte	5
	.byte	'dataNegResCode_u8',0,1,100,49
	.word	.L272,.L317
	.byte	5
	.byte	'dataRetIocbiFunc_u8',0,1,101,35
	.word	.L272,.L318
	.byte	5
	.byte	'idxIocbiIndex_u16',0,1,102,33
	.word	.L301,.L319
	.byte	5
	.byte	'ptrDidConfig',0,1,103,60
	.word	.L281,.L320
	.byte	5
	.byte	'ptrSigConfig',0,1,104,65
	.word	.L283,.L321
	.byte	5
	.byte	'ptrIOSigConfig',0,1,105,75
	.word	.L285,.L322
	.byte	5
	.byte	'ptrIOCBIFnc',0,1,111,44
	.word	.L293,.L323
	.byte	5
	.byte	'idxDidSignal_u16',0,1,112,34
	.word	.L301,.L324
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_line'
.L228:
	.word	.L1007-.L1006
.L1006:
	.half	3
	.word	.L1009-.L1008
.L1008:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1009:
	.byte	5,26,7,0,5,2
	.word	.L204
	.byte	3,158,3,1,5,70,9
	.half	.L359-.L204
	.byte	1,5,38,9
	.half	.L3-.L359
	.byte	3,2,1,5,62,9
	.half	.L1010-.L3
	.byte	1,5,81,9
	.half	.L1011-.L1010
	.byte	1,5,24,9
	.half	.L1012-.L1011
	.byte	1,5,37,9
	.half	.L1013-.L1012
	.byte	1,5,9,9
	.half	.L361-.L1013
	.byte	3,1,1,5,39,9
	.half	.L1014-.L361
	.byte	1,5,25,9
	.half	.L1015-.L1014
	.byte	1,5,88,9
	.half	.L1016-.L1015
	.byte	3,125,1,5,70,9
	.half	.L2-.L1016
	.byte	1,5,9,7,9
	.half	.L1017-.L2
	.byte	3,5,1,5,38,9
	.half	.L1018-.L1017
	.byte	1,5,5,9
	.half	.L360-.L1018
	.byte	1,5,87,7,9
	.half	.L1019-.L360
	.byte	3,2,1,5,44,9
	.half	.L1020-.L1019
	.byte	1,5,57,9
	.half	.L1021-.L1020
	.byte	1,5,101,9
	.half	.L1022-.L1021
	.byte	1,5,126,9
	.half	.L1023-.L1022
	.byte	1,5,125,9
	.half	.L1024-.L1023
	.byte	1,5,147,1,9
	.half	.L1025-.L1024
	.byte	1,5,25,9
	.half	.L1026-.L1025
	.byte	1,5,43,9
	.half	.L1027-.L1026
	.byte	1,5,25,9
	.half	.L362-.L1027
	.byte	3,2,1,5,12,9
	.half	.L1028-.L362
	.byte	1,5,70,7,9
	.half	.L1029-.L1028
	.byte	1,5,57,9
	.half	.L1030-.L1029
	.byte	1,5,148,1,7,9
	.half	.L1031-.L1030
	.byte	1,5,145,1,9
	.half	.L1032-.L1031
	.byte	1,5,13,7,9
	.half	.L6-.L1032
	.byte	3,4,1,5,40,9
	.half	.L1033-.L6
	.byte	1,5,38,9
	.half	.L1034-.L1033
	.byte	1,5,86,9
	.half	.L1035-.L1034
	.byte	3,13,1,5,98,9
	.half	.L1036-.L1035
	.byte	1,5,40,9
	.half	.L1037-.L1036
	.byte	3,3,1,5,38,9
	.half	.L1038-.L1037
	.byte	1,5,5,9
	.half	.L4-.L1038
	.byte	3,6,1,5,30,9
	.half	.L1039-.L4
	.byte	1,5,28,9
	.half	.L1040-.L1039
	.byte	1,5,5,9
	.half	.L1041-.L1040
	.byte	3,1,1,5,28,9
	.half	.L1042-.L1041
	.byte	1,5,26,9
	.half	.L1043-.L1042
	.byte	1,5,5,9
	.half	.L1044-.L1043
	.byte	3,1,1,5,33,9
	.half	.L1045-.L1044
	.byte	1,5,31,9
	.half	.L1046-.L1045
	.byte	1,5,30,9
	.half	.L1047-.L1046
	.byte	3,7,1,5,1,9
	.half	.L1048-.L1047
	.byte	3,9,1,7,9
	.half	.L230-.L1048
	.byte	0,1,1
.L1007:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_ranges'
.L229:
	.word	-1,.L204,0,.L230-.L204,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_info'
.L231:
	.word	245
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_GetActiveIOCBIDid',0,1,156,18,31
	.word	.L272
	.byte	1,1,1
	.word	.L216,.L325,.L215
	.byte	4
	.byte	'dataDid_u16',0,1,156,18,93
	.word	.L326,.L327
	.byte	5
	.word	.L216,.L325
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_line'
.L233:
	.word	.L1050-.L1049
.L1049:
	.half	3
	.word	.L1052-.L1051
.L1051:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1052:
	.byte	5,9,7,0,5,2
	.word	.L216
	.byte	3,160,18,1,5,5,9
	.half	.L1053-.L216
	.byte	1,5,24,7,9
	.half	.L1054-.L1053
	.byte	3,2,1,5,22,9
	.half	.L1055-.L1054
	.byte	1,5,17,9
	.half	.L1056-.L1055
	.byte	3,1,1,5,9,9
	.half	.L1057-.L1056
	.byte	1,5,16,9
	.half	.L200-.L1057
	.byte	3,5,1,5,9,9
	.half	.L1058-.L200
	.byte	1,5,1,9
	.half	.L201-.L1058
	.byte	3,2,1,7,9
	.half	.L235-.L201
	.byte	0,1,1
.L1050:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L216,0,.L235-.L216,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_info'
.L236:
	.word	572
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L239,.L238
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_ResetActiveIoCtrl',0,1,201,15,21,1,1,1
	.word	.L208,.L328,.L207
	.byte	4
	.byte	'dataSessionMask_u32',0,1,201,15,66
	.word	.L279,.L329
	.byte	4
	.byte	'dataSecurityMask_u32',0,1,202,15,24
	.word	.L279,.L330
	.byte	4
	.byte	'flgSessChkReqd_b',0,1,203,15,25
	.word	.L272,.L331
	.byte	5
	.word	.L208,.L328
	.byte	6
	.byte	'idxIocbiIndex_u16',0,1,208,15,28
	.word	.L295,.L332
	.byte	6
	.byte	'idxSig_u16',0,1,209,15,28
	.word	.L295,.L333
	.byte	6
	.byte	'dataRetIocbiFunc_u8',0,1,210,15,35
	.word	.L272,.L334
	.byte	6
	.byte	'dataNegResCode_u8',0,1,211,15,49
	.word	.L272,.L335
	.byte	6
	.byte	'ptrDidConfig',0,1,212,15,60
	.word	.L281,.L336
	.byte	6
	.byte	'ptrSigConfig',0,1,213,15,64
	.word	.L283,.L337
	.byte	6
	.byte	'ptrIOSigConfig',0,1,214,15,75
	.word	.L285,.L338
	.byte	6
	.byte	'ptrDidExtendedConfig',0,1,215,15,67
	.word	.L289,.L339
	.byte	6
	.byte	'ptrIOCBIFnc',0,1,216,15,44
	.word	.L293,.L340
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_line'
.L238:
	.word	.L1060-.L1059
.L1059:
	.half	3
	.word	.L1062-.L1061
.L1061:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1062:
	.byte	5,21,7,0,5,2
	.word	.L208
	.byte	3,200,15,1,5,25,9
	.half	.L535-.L208
	.byte	3,24,1,9
	.half	.L536-.L535
	.byte	3,1,1,5,23,9
	.half	.L1063-.L536
	.byte	1,5,28,9
	.half	.L1064-.L1063
	.byte	3,4,1,5,75,9
	.half	.L537-.L1064
	.byte	1,5,36,9
	.half	.L178-.L537
	.byte	3,4,1,5,60,9
	.half	.L1065-.L178
	.byte	1,5,79,9
	.half	.L1066-.L1065
	.byte	1,5,12,9
	.half	.L1067-.L1066
	.byte	1,5,75,7,9
	.half	.L1068-.L1067
	.byte	3,1,1,5,18,9
	.half	.L1069-.L1068
	.byte	1,5,31,9
	.half	.L1070-.L1069
	.byte	1,5,89,9
	.half	.L1071-.L1070
	.byte	1,5,112,9
	.half	.L1072-.L1071
	.byte	1,5,130,1,9
	.half	.L1073-.L1072
	.byte	1,5,124,7,9
	.half	.L1074-.L1073
	.byte	3,1,1,5,147,1,9
	.half	.L538-.L1074
	.byte	1,5,18,9
	.half	.L539-.L538
	.byte	1,5,27,7,9
	.half	.L1075-.L539
	.byte	3,1,1,5,155,1,7,9
	.half	.L1076-.L1075
	.byte	1,5,178,1,9
	.half	.L540-.L1076
	.byte	1,5,56,9
	.half	.L541-.L540
	.byte	1,5,29,7,9
	.half	.L181-.L541
	.byte	3,6,1,5,70,9
	.half	.L542-.L181
	.byte	1,5,64,9
	.half	.L185-.L542
	.byte	3,2,1,5,89,9
	.half	.L1077-.L185
	.byte	1,5,101,9
	.half	.L1078-.L1077
	.byte	1,5,33,9
	.half	.L1079-.L1078
	.byte	1,5,51,9
	.half	.L1080-.L1079
	.byte	1,5,73,9
	.half	.L544-.L1080
	.byte	3,1,1,5,35,9
	.half	.L1081-.L544
	.byte	1,5,60,9
	.half	.L1082-.L1081
	.byte	1,5,66,9
	.half	.L546-.L1082
	.byte	3,22,1,5,31,9
	.half	.L1083-.L546
	.byte	1,5,51,9
	.half	.L1084-.L1083
	.byte	1,5,91,9
	.half	.L1085-.L1084
	.byte	1,5,52,9
	.half	.L548-.L1085
	.byte	3,1,1,5,59,9
	.half	.L1086-.L548
	.byte	3,2,1,5,21,9
	.half	.L1087-.L1086
	.byte	1,5,41,7,9
	.half	.L1088-.L1087
	.byte	3,1,1,5,21,7,9
	.half	.L1089-.L1088
	.byte	3,2,1,5,51,9
	.half	.L1090-.L1089
	.byte	1,5,37,9
	.half	.L1091-.L1090
	.byte	1,5,21,9
	.half	.L1092-.L1091
	.byte	3,2,1,5,48,9
	.half	.L1093-.L1092
	.byte	1,5,46,9
	.half	.L1094-.L1093
	.byte	1,5,38,9
	.half	.L1095-.L1094
	.byte	3,3,1,5,25,9
	.half	.L1096-.L1095
	.byte	1,5,58,7,9
	.half	.L1097-.L1096
	.byte	3,1,1,5,49,7,9
	.half	.L1098-.L1097
	.byte	3,2,1,5,25,9
	.half	.L1099-.L1098
	.byte	1,5,94,7,9
	.half	.L1100-.L1099
	.byte	3,5,1,5,112,9
	.half	.L549-.L1100
	.byte	1,5,21,9
	.half	.L188-.L549
	.byte	3,31,1,5,86,7,9
	.half	.L1101-.L188
	.byte	3,3,1,5,84,9
	.half	.L1102-.L1101
	.byte	1,5,48,9
	.half	.L192-.L1102
	.byte	3,3,1,5,46,9
	.half	.L1103-.L192
	.byte	1,5,82,9
	.half	.L186-.L1103
	.byte	3,175,127,1,5,59,9
	.half	.L184-.L186
	.byte	1,5,70,9
	.half	.L1104-.L184
	.byte	1,5,94,7,9
	.half	.L182-.L1104
	.byte	3,115,1,5,75,9
	.half	.L177-.L182
	.byte	1,5,1,7,9
	.half	.L1105-.L177
	.byte	3,233,0,1,7,9
	.half	.L240-.L1105
	.byte	0,1,1
.L1060:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_ranges'
.L239:
	.word	-1,.L208,0,.L240-.L208,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_info'
.L241:
	.word	339
	.half	3
	.word	.L242
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L244,.L243
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_Prv_DspIOCBIConfirmation',0,1,250,17,23,1,1,1
	.word	.L214,.L341,.L213
	.byte	4
	.byte	'dataIdContext_u8',0,1,251,17,35
	.word	.L272,.L342
	.byte	4
	.byte	'dataRxPduId_u8',0,1,252,17,26
	.word	.L295,.L343
	.byte	4
	.byte	'dataSourceAddress_u16',0,1,253,17,23
	.word	.L295,.L344
	.byte	4
	.byte	'status_u8',0,1,254,17,43
	.word	.L272,.L345
	.byte	5
	.word	.L214,.L341
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_abbrev'
.L242:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_line'
.L243:
	.word	.L1107-.L1106
.L1106:
	.half	3
	.word	.L1109-.L1108
.L1108:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1109:
	.byte	5,23,7,0,5,2
	.word	.L214
	.byte	3,249,17,1,5,32,9
	.half	.L1110-.L214
	.byte	3,6,1,5,9,9
	.half	.L562-.L1110
	.byte	1,5,33,7,9
	.half	.L563-.L562
	.byte	3,3,1,5,18,9
	.half	.L198-.L563
	.byte	3,3,1,5,32,9
	.half	.L1111-.L198
	.byte	3,1,1,5,9,9
	.half	.L566-.L1111
	.byte	1,5,33,7,9
	.half	.L567-.L566
	.byte	3,2,1,5,1,9
	.half	.L199-.L567
	.byte	3,2,1,7,9
	.half	.L245-.L199
	.byte	0,1,1
.L1107:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_ranges'
.L244:
	.word	-1,.L214,0,.L245-.L214,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_info'
.L246:
	.word	421
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L249,.L248
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_GetLengthOfSignal',0,1,224,16,32
	.word	.L272
	.byte	1,1,1
	.word	.L210,.L346,.L209
	.byte	4
	.byte	'dataSigLength_u16',0,1,224,16,95
	.word	.L326,.L347
	.byte	5
	.word	.L210,.L346
	.byte	6
	.byte	'dataSigLength_u32',0,1,226,16,29
	.word	.L279,.L348
	.byte	6
	.byte	'dataRetVal_u8',0,1,227,16,37
	.word	.L272,.L349
	.byte	6
	.byte	'ptrDidConfig',0,1,228,16,59
	.word	.L281,.L350
	.byte	6
	.byte	'ptrSigConfig',0,1,229,16,64
	.word	.L283,.L351
	.byte	6
	.byte	'ptrIOSigConfig',0,1,230,16,75
	.word	.L285,.L352
	.byte	6
	.byte	'ptrReadDataLenFnc',0,1,231,16,44
	.word	.L293,.L353
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_line'
.L248:
	.word	.L1113-.L1112
.L1112:
	.half	3
	.word	.L1115-.L1114
.L1114:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1115:
	.byte	5,32,7,0,5,2
	.word	.L210
	.byte	3,223,16,1,5,19,9
	.half	.L552-.L210
	.byte	3,10,1,5,26,9
	.half	.L553-.L552
	.byte	3,1,1,5,24,9
	.half	.L1116-.L553
	.byte	1,5,35,9
	.half	.L1117-.L1116
	.byte	3,1,1,5,64,9
	.half	.L1118-.L1117
	.byte	1,5,21,9
	.half	.L1119-.L1118
	.byte	1,5,34,9
	.half	.L1120-.L1119
	.byte	1,5,51,9
	.half	.L554-.L1120
	.byte	3,1,1,5,77,9
	.half	.L555-.L554
	.byte	1,5,76,9
	.half	.L1121-.L555
	.byte	1,5,98,9
	.half	.L1122-.L1121
	.byte	1,5,20,9
	.half	.L1123-.L1122
	.byte	1,5,38,9
	.half	.L1124-.L1123
	.byte	1,5,61,9
	.half	.L556-.L1124
	.byte	3,1,1,5,23,9
	.half	.L1125-.L556
	.byte	1,5,48,9
	.half	.L1126-.L1125
	.byte	1,5,39,9
	.half	.L558-.L1126
	.byte	3,1,1,5,8,9
	.half	.L559-.L558
	.byte	3,3,1,5,73,7,9
	.half	.L1127-.L559
	.byte	1,7,9
	.half	.L1128-.L1127
	.byte	1,5,42,9
	.half	.L193-.L1128
	.byte	3,215,0,1,5,28,9
	.half	.L1129-.L193
	.byte	1,5,23,9
	.half	.L1130-.L1129
	.byte	3,1,1,5,5,9
	.half	.L195-.L1130
	.byte	3,4,1,5,27,7,9
	.half	.L1131-.L195
	.byte	3,2,1,5,26,9
	.half	.L1132-.L1131
	.byte	1,5,30,9
	.half	.L1133-.L1132
	.byte	3,2,1,5,36,9
	.half	.L557-.L1133
	.byte	3,1,1,5,27,9
	.half	.L1134-.L557
	.byte	1,5,5,9
	.half	.L196-.L1134
	.byte	3,2,1,5,1,9
	.half	.L197-.L196
	.byte	3,1,1,7,9
	.half	.L250-.L197
	.byte	0,1,1
.L1113:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_ranges'
.L249:
	.word	-1,.L210,0,.L250-.L210,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_info'
.L251:
	.word	235
	.half	3
	.word	.L252
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L254,.L253
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Dcm_SetFlagforIOCBI',0,1,229,17,28,1,1
	.word	.L212,.L354,.L211
	.byte	4
	.byte	'isFlag_b',0,1,229,17,72
	.word	.L272,.L355
	.byte	5
	.word	.L212,.L354
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_abbrev'
.L252:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_line'
.L253:
	.word	.L1136-.L1135
.L1135:
	.half	3
	.word	.L1138-.L1137
.L1137:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0,0,0,0,0
.L1138:
	.byte	5,5,7,0,5,2
	.word	.L212
	.byte	3,232,17,1,5,30,9
	.half	.L1139-.L212
	.byte	1,5,1,9
	.half	.L1140-.L1139
	.byte	3,1,1,7,9
	.half	.L255-.L1140
	.byte	0,1,1
.L1136:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_ranges'
.L254:
	.word	-1,.L212,0,.L255-.L212,0,0
	.sdecl	'.debug_info',debug,cluster('DcmDsp_IocbiStatus_array')
	.sect	'.debug_info'
.L256:
	.word	196
	.half	3
	.word	.L257
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'DcmDsp_IocbiStatus_array',0,13,76,42
	.word	.L356
	.byte	1,5,3
	.word	DcmDsp_IocbiStatus_array
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('DcmDsp_IocbiStatus_array')
	.sect	'.debug_abbrev'
.L257:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_ReadSignalLength_u16')
	.sect	'.debug_info'
.L258:
	.word	196
	.half	3
	.word	.L259
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Dcm_ReadSignalLength_u16',0,13,54,22
	.word	.L295
	.byte	1,5,3
	.word	Dcm_ReadSignalLength_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_ReadSignalLength_u16')
	.sect	'.debug_abbrev'
.L259:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_stDspIocbiState_en')
	.sect	'.debug_info'
.L260:
	.word	193
	.half	3
	.word	.L261
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Dcm_stDspIocbiState_en',0,13,33,45
	.word	.L357
	.byte	5,3
	.word	Dcm_stDspIocbiState_en
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_stDspIocbiState_en')
	.sect	'.debug_abbrev'
.L261:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_dataDspIocbiCtrlParam_u8')
	.sect	'.debug_info'
.L262:
	.word	199
	.half	3
	.word	.L263
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Dcm_dataDspIocbiCtrlParam_u8',0,13,38,28
	.word	.L272
	.byte	5,3
	.word	Dcm_dataDspIocbiCtrlParam_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_dataDspIocbiCtrlParam_u8')
	.sect	'.debug_abbrev'
.L263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_stDspIocbiOpStatus_u8')
	.sect	'.debug_info'
.L264:
	.word	196
	.half	3
	.word	.L265
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Dcm_stDspIocbiOpStatus_u8',0,13,43,39
	.word	.L272
	.byte	5,3
	.word	Dcm_stDspIocbiOpStatus_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_stDspIocbiOpStatus_u8')
	.sect	'.debug_abbrev'
.L265:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_Dcm_idxIocbiDidIndexType_st')
	.sect	'.debug_info'
.L266:
	.word	200
	.half	3
	.word	.L267
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	's_Dcm_idxIocbiDidIndexType_st',0,13,48,43
	.word	.L358
	.byte	5,3
	.word	s_Dcm_idxIocbiDidIndexType_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_Dcm_idxIocbiDidIndexType_st')
	.sect	'.debug_abbrev'
.L267:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_ActiveDid_u16')
	.sect	'.debug_info'
.L268:
	.word	186
	.half	3
	.word	.L269
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	's_ActiveDid_u16',0,13,49,29
	.word	.L295
	.byte	5,3
	.word	s_ActiveDid_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_ActiveDid_u16')
	.sect	'.debug_abbrev'
.L269:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('s_IsIOCBISubfuncCalled_b')
	.sect	'.debug_info'
.L270:
	.word	195
	.half	3
	.word	.L271
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	's_IsIOCBISubfuncCalled_b',0,13,59,30
	.word	.L272
	.byte	5,3
	.word	s_IsIOCBISubfuncCalled_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('s_IsIOCBISubfuncCalled_b')
	.sect	'.debug_abbrev'
.L271:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_loc'
.L205:
	.word	-1,.L206,0,.L364-.L206
	.half	2
	.byte	138,0
	.word	.L364-.L206,.L273-.L206
	.half	2
	.byte	138,40
	.word	.L273-.L206,.L273-.L206
	.half	2
	.byte	138,0
	.word	0,0
.L274:
	.word	-1,.L206,0,.L365-.L206
	.half	1
	.byte	84
	.word	.L8-.L206,.L375-.L206
	.half	1
	.byte	84
	.word	.L17-.L206,.L387-.L206
	.half	1
	.byte	84
	.word	.L16-.L206,.L27-.L206
	.half	1
	.byte	84
	.word	.L15-.L206,.L29-.L206
	.half	1
	.byte	84
	.word	0,0
.L298:
	.word	-1,.L206,.L416-.L206,.L65-.L206
	.half	1
	.byte	92
	.word	0,0
.L299:
	.word	-1,.L206,.L455-.L206,.L366-.L206
	.half	1
	.byte	91
	.word	.L104-.L206,.L98-.L206
	.half	1
	.byte	91
	.word	0,0
.L314:
	.word	-1,.L206,.L372-.L206,.L373-.L206
	.half	1
	.byte	90
	.word	.L373-.L206,.L66-.L206
	.half	1
	.byte	82
	.word	.L419-.L206,.L420-.L206
	.half	1
	.byte	90
	.word	.L437-.L206,.L86-.L206
	.half	1
	.byte	82
	.word	.L87-.L206,.L85-.L206
	.half	1
	.byte	82
	.word	.L85-.L206,.L84-.L206
	.half	1
	.byte	90
	.word	.L465-.L206,.L366-.L206
	.half	1
	.byte	82
	.word	.L104-.L206,.L467-.L206
	.half	1
	.byte	82
	.word	.L15-.L206,.L29-.L206
	.half	1
	.byte	90
	.word	0,0
.L306:
	.word	-1,.L206,.L449-.L206,.L366-.L206
	.half	1
	.byte	90
	.word	.L104-.L206,.L14-.L206
	.half	1
	.byte	90
	.word	.L494-.L206,.L15-.L206
	.half	1
	.byte	89
	.word	0,0
.L303:
	.word	-1,.L206,.L369-.L206,.L366-.L206
	.half	1
	.byte	89
	.word	.L466-.L206,.L467-.L206
	.half	1
	.byte	89
	.word	.L467-.L206,.L110-.L206
	.half	1
	.byte	82
	.word	.L110-.L206,.L479-.L206
	.half	1
	.byte	89
	.word	.L479-.L206,.L115-.L206
	.half	1
	.byte	82
	.word	.L115-.L206,.L485-.L206
	.half	1
	.byte	89
	.word	.L485-.L206,.L118-.L206
	.half	1
	.byte	82
	.word	.L118-.L206,.L488-.L206
	.half	1
	.byte	89
	.word	.L488-.L206,.L123-.L206
	.half	1
	.byte	82
	.word	.L123-.L206,.L491-.L206
	.half	1
	.byte	89
	.word	.L491-.L206,.L128-.L206
	.half	1
	.byte	82
	.word	.L128-.L206,.L494-.L206
	.half	1
	.byte	89
	.word	.L495-.L206,.L496-.L206
	.half	1
	.byte	84
	.word	.L15-.L206,.L29-.L206
	.half	1
	.byte	89
	.word	0,0
.L280:
	.word	-1,.L206,0,.L366-.L206
	.half	2
	.byte	145,88
	.word	.L104-.L206,.L273-.L206
	.half	2
	.byte	145,88
	.word	0,0
.L278:
	.word	-1,.L206,0,.L365-.L206
	.half	1
	.byte	101
	.word	.L368-.L206,.L366-.L206
	.half	2
	.byte	145,104
	.word	.L8-.L206,.L376-.L206
	.half	1
	.byte	101
	.word	.L20-.L206,.L381-.L206
	.half	1
	.byte	111
	.word	.L383-.L206,.L22-.L206
	.half	1
	.byte	111
	.word	.L384-.L206,.L385-.L206
	.half	1
	.byte	111
	.word	.L386-.L206,.L25-.L206
	.half	1
	.byte	111
	.word	.L17-.L206,.L388-.L206
	.half	1
	.byte	101
	.word	.L388-.L206,.L26-.L206
	.half	1
	.byte	111
	.word	.L16-.L206,.L389-.L206
	.half	1
	.byte	101
	.word	.L389-.L206,.L27-.L206
	.half	1
	.byte	111
	.word	.L390-.L206,.L11-.L206
	.half	1
	.byte	111
	.word	.L32-.L206,.L396-.L206
	.half	1
	.byte	111
	.word	.L404-.L206,.L40-.L206
	.half	1
	.byte	111
	.word	.L406-.L206,.L47-.L206
	.half	1
	.byte	111
	.word	.L408-.L206,.L54-.L206
	.half	1
	.byte	111
	.word	.L410-.L206,.L61-.L206
	.half	1
	.byte	111
	.word	.L411-.L206,.L41-.L206
	.half	1
	.byte	111
	.word	.L412-.L206,.L63-.L206
	.half	1
	.byte	111
	.word	.L413-.L206,.L64-.L206
	.half	1
	.byte	111
	.word	.L414-.L206,.L415-.L206
	.half	1
	.byte	111
	.word	.L423-.L206,.L69-.L206
	.half	1
	.byte	111
	.word	.L424-.L206,.L70-.L206
	.half	1
	.byte	111
	.word	.L427-.L206,.L75-.L206
	.half	1
	.byte	111
	.word	.L428-.L206,.L65-.L206
	.half	1
	.byte	111
	.word	.L429-.L206,.L79-.L206
	.half	1
	.byte	111
	.word	.L430-.L206,.L431-.L206
	.half	1
	.byte	111
	.word	.L80-.L206,.L12-.L206
	.half	1
	.byte	111
	.word	.L432-.L206,.L433-.L206
	.half	1
	.byte	111
	.word	.L440-.L206,.L93-.L206
	.half	1
	.byte	111
	.word	.L441-.L206,.L94-.L206
	.half	1
	.byte	111
	.word	.L442-.L206,.L84-.L206
	.half	1
	.byte	111
	.word	.L443-.L206,.L13-.L206
	.half	1
	.byte	111
	.word	.L100-.L206,.L456-.L206
	.half	1
	.byte	111
	.word	.L104-.L206,.L273-.L206
	.half	2
	.byte	145,104
	.word	.L468-.L206,.L103-.L206
	.half	1
	.byte	111
	.word	.L473-.L206,.L474-.L206
	.half	1
	.byte	111
	.word	.L478-.L206,.L467-.L206
	.half	1
	.byte	101
	.word	.L483-.L206,.L479-.L206
	.half	1
	.byte	100
	.word	.L486-.L206,.L485-.L206
	.half	1
	.byte	100
	.word	.L490-.L206,.L488-.L206
	.half	1
	.byte	100
	.word	.L493-.L206,.L491-.L206
	.half	1
	.byte	100
	.word	.L497-.L206,.L131-.L206
	.half	1
	.byte	111
	.word	.L498-.L206,.L135-.L206
	.half	1
	.byte	111
	.word	.L499-.L206,.L500-.L206
	.half	1
	.byte	111
	.word	.L502-.L206,.L105-.L206
	.half	1
	.byte	111
	.word	.L503-.L206,.L504-.L206
	.half	1
	.byte	111
	.word	.L505-.L206,.L506-.L206
	.half	1
	.byte	111
	.word	.L507-.L206,.L508-.L206
	.half	1
	.byte	111
	.word	.L527-.L206,.L513-.L206
	.half	1
	.byte	100
	.word	.L528-.L206,.L171-.L206
	.half	1
	.byte	111
	.word	.L529-.L206,.L172-.L206
	.half	1
	.byte	111
	.word	.L15-.L206,.L530-.L206
	.half	1
	.byte	101
	.word	.L530-.L206,.L29-.L206
	.half	1
	.byte	111
	.word	.L531-.L206,.L532-.L206
	.half	1
	.byte	111
	.word	0,0
.L312:
	.word	-1,.L206,0,.L366-.L206
	.half	2
	.byte	145,94
	.word	.L104-.L206,.L273-.L206
	.half	2
	.byte	145,94
	.word	0,0
.L304:
	.word	-1,.L206,.L512-.L206,.L513-.L206
	.half	1
	.byte	82
	.word	.L170-.L206,.L172-.L206
	.half	1
	.byte	82
	.word	0,0
.L315:
	.word	-1,.L206,.L374-.L206,.L366-.L206
	.half	1
	.byte	88
	.word	.L104-.L206,.L273-.L206
	.half	1
	.byte	88
	.word	.L533-.L206,.L273-.L206
	.half	1
	.byte	82
	.word	0,0
.L296:
	.word	-1,.L206,0,.L366-.L206
	.half	2
	.byte	145,92
	.word	.L104-.L206,.L273-.L206
	.half	2
	.byte	145,92
	.word	0,0
.L305:
	.word	-1,.L206,.L426-.L206,.L70-.L206
	.half	1
	.byte	82
	.word	0,0
.L313:
	.word	-1,.L206,.L513-.L206,.L170-.L206
	.half	1
	.byte	82
	.word	0,0
.L311:
	.word	-1,.L206,.L370-.L206,.L371-.L206
	.half	1
	.byte	91
	.word	.L30-.L206,.L79-.L206
	.half	1
	.byte	91
	.word	.L15-.L206,.L29-.L206
	.half	1
	.byte	91
	.word	0,0
.L302:
	.word	-1,.L206,.L380-.L206,.L18-.L206
	.half	5
	.byte	144,32,157,32,0
	.word	.L514-.L206,.L152-.L206
	.half	5
	.byte	144,32,157,32,0
	.word	.L524-.L206,.L161-.L206
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L310:
	.word	-1,.L206,.L420-.L206,.L85-.L206
	.half	1
	.byte	90
	.word	0,0
.L300:
	.word	-1,.L206,.L379-.L206,.L376-.L206
	.half	1
	.byte	84
	.word	.L395-.L206,.L30-.L206
	.half	1
	.byte	91
	.word	.L418-.L206,.L373-.L206
	.half	1
	.byte	84
	.word	.L425-.L206,.L426-.L206
	.half	1
	.byte	84
	.word	0,0
.L276:
	.word	-1,.L206,0,.L365-.L206
	.half	1
	.byte	100
	.word	.L367-.L206,.L366-.L206
	.half	2
	.byte	145,116
	.word	.L8-.L206,.L377-.L206
	.half	1
	.byte	100
	.word	.L377-.L206,.L378-.L206
	.half	1
	.byte	111
	.word	.L16-.L206,.L389-.L206
	.half	1
	.byte	111
	.word	.L393-.L206,.L394-.L206
	.half	1
	.byte	111
	.word	.L402-.L206,.L403-.L206
	.half	1
	.byte	111
	.word	.L415-.L206,.L417-.L206
	.half	1
	.byte	111
	.word	.L422-.L206,.L423-.L206
	.half	1
	.byte	111
	.word	.L69-.L206,.L424-.L206
	.half	1
	.byte	111
	.word	.L438-.L206,.L439-.L206
	.half	1
	.byte	111
	.word	.L92-.L206,.L440-.L206
	.half	1
	.byte	111
	.word	.L447-.L206,.L448-.L206
	.half	1
	.byte	111
	.word	.L450-.L206,.L451-.L206
	.half	1
	.byte	111
	.word	.L452-.L206,.L453-.L206
	.half	1
	.byte	111
	.word	.L461-.L206,.L462-.L206
	.half	1
	.byte	111
	.word	.L104-.L206,.L273-.L206
	.half	2
	.byte	145,116
	.word	.L476-.L206,.L477-.L206
	.half	1
	.byte	111
	.word	.L509-.L206,.L510-.L206
	.half	1
	.byte	111
	.word	.L511-.L206,.L154-.L206
	.half	1
	.byte	111
	.word	.L516-.L206,.L517-.L206
	.half	1
	.byte	111
	.word	.L518-.L206,.L519-.L206
	.half	1
	.byte	111
	.word	.L520-.L206,.L521-.L206
	.half	1
	.byte	111
	.word	.L522-.L206,.L523-.L206
	.half	1
	.byte	111
	.word	.L161-.L206,.L526-.L206
	.half	1
	.byte	111
	.word	.L170-.L206,.L529-.L206
	.half	1
	.byte	111
	.word	.L15-.L206,.L29-.L206
	.half	1
	.byte	100
	.word	0,0
.L309:
	.word	-1,.L206,.L457-.L206,.L366-.L206
	.half	1
	.byte	92
	.word	.L104-.L206,.L99-.L206
	.half	1
	.byte	92
	.word	0,0
.L308:
	.word	-1,.L206,.L463-.L206,.L464-.L206
	.half	1
	.byte	95
	.word	0,0
.L307:
	.word	-1,.L206,.L460-.L206,.L101-.L206
	.half	1
	.byte	81
	.word	0,0
.L297:
	.word	-1,.L206,.L459-.L206,.L101-.L206
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L282:
	.word	-1,.L206,.L382-.L206,.L21-.L206
	.half	1
	.byte	111
	.word	.L391-.L206,.L392-.L206
	.half	1
	.byte	109
	.word	.L392-.L206,.L421-.L206
	.half	1
	.byte	111
	.word	.L67-.L206,.L65-.L206
	.half	1
	.byte	109
	.word	.L30-.L206,.L79-.L206
	.half	1
	.byte	109
	.word	.L434-.L206,.L84-.L206
	.half	1
	.byte	108
	.word	.L444-.L206,.L445-.L206
	.half	1
	.byte	111
	.word	.L446-.L206,.L366-.L206
	.half	2
	.byte	145,108
	.word	.L453-.L206,.L454-.L206
	.half	1
	.byte	111
	.word	.L456-.L206,.L458-.L206
	.half	1
	.byte	111
	.word	.L104-.L206,.L14-.L206
	.half	2
	.byte	145,108
	.word	.L469-.L206,.L470-.L206
	.half	1
	.byte	111
	.word	.L501-.L206,.L502-.L206
	.half	1
	.byte	111
	.word	0,0
.L290:
	.word	-1,.L206,.L421-.L206,.L422-.L206
	.half	1
	.byte	111
	.word	.L435-.L206,.L436-.L206
	.half	1
	.byte	111
	.word	.L85-.L206,.L442-.L206
	.half	1
	.byte	111
	.word	0,0
.L294:
	.word	-1,.L206,.L475-.L206,.L467-.L206
	.half	1
	.byte	102
	.word	.L480-.L206,.L481-.L206
	.half	1
	.byte	111
	.word	.L482-.L206,.L113-.L206
	.half	2
	.byte	145,124
	.word	.L484-.L206,.L115-.L206
	.half	1
	.byte	111
	.word	.L487-.L206,.L118-.L206
	.half	1
	.byte	111
	.word	.L489-.L206,.L488-.L206
	.half	1
	.byte	98
	.word	.L492-.L206,.L491-.L206
	.half	1
	.byte	98
	.word	0,0
.L292:
	.word	-1,.L206,.L515-.L206,.L153-.L206
	.half	1
	.byte	111
	.word	.L525-.L206,.L162-.L206
	.half	1
	.byte	111
	.word	0,0
.L288:
	.word	-1,.L206,.L401-.L206,.L398-.L206
	.half	1
	.byte	101
	.word	.L35-.L206,.L405-.L206
	.half	1
	.byte	101
	.word	.L42-.L206,.L407-.L206
	.half	1
	.byte	101
	.word	.L49-.L206,.L409-.L206
	.half	1
	.byte	101
	.word	.L56-.L206,.L41-.L206
	.half	1
	.byte	101
	.word	.L33-.L206,.L63-.L206
	.half	1
	.byte	101
	.word	0,0
.L286:
	.word	-1,.L206,.L399-.L206,.L400-.L206
	.half	1
	.byte	98
	.word	.L472-.L206,.L99-.L206
	.half	1
	.byte	110
	.word	0,0
.L284:
	.word	-1,.L206,.L397-.L206,.L398-.L206
	.half	1
	.byte	100
	.word	.L35-.L206,.L405-.L206
	.half	1
	.byte	100
	.word	.L42-.L206,.L407-.L206
	.half	1
	.byte	100
	.word	.L49-.L206,.L409-.L206
	.half	1
	.byte	100
	.word	.L56-.L206,.L41-.L206
	.half	1
	.byte	100
	.word	.L33-.L206,.L63-.L206
	.half	1
	.byte	100
	.word	.L471-.L206,.L99-.L206
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_loc'
.L203:
	.word	-1,.L204,0,.L316-.L204
	.half	2
	.byte	138,0
	.word	0,0
.L317:
	.word	0,0
.L318:
	.word	0,0
.L324:
	.word	0,0
.L319:
	.word	-1,.L204,.L359-.L204,.L360-.L204
	.half	1
	.byte	95
	.word	0,0
.L320:
	.word	-1,.L204,.L361-.L204,.L2-.L204
	.half	1
	.byte	111
	.word	0,0
.L323:
	.word	0,0
.L322:
	.word	0,0
.L321:
	.word	-1,.L204,.L362-.L204,.L363-.L204
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_loc'
.L215:
	.word	-1,.L216,0,.L325-.L216
	.half	2
	.byte	138,0
	.word	0,0
.L327:
	.word	-1,.L216,0,.L325-.L216
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_loc'
.L209:
	.word	-1,.L210,0,.L550-.L210
	.half	2
	.byte	138,0
	.word	.L550-.L210,.L346-.L210
	.half	2
	.byte	138,8
	.word	.L346-.L210,.L346-.L210
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L210,.L553-.L210,.L346-.L210
	.half	1
	.byte	88
	.word	.L560-.L210,.L346-.L210
	.half	1
	.byte	82
	.word	0,0
.L347:
	.word	-1,.L210,0,.L551-.L210
	.half	1
	.byte	100
	.word	.L552-.L210,.L346-.L210
	.half	1
	.byte	108
	.word	0,0
.L348:
	.word	-1,.L210,0,.L346-.L210
	.half	2
	.byte	145,120
	.word	0,0
.L350:
	.word	-1,.L210,.L554-.L210,.L555-.L210
	.half	1
	.byte	111
	.word	0,0
.L352:
	.word	-1,.L210,.L558-.L210,.L559-.L210
	.half	1
	.byte	111
	.word	0,0
.L353:
	.word	-1,.L210,.L559-.L210,.L346-.L210
	.half	1
	.byte	111
	.word	0,0
.L351:
	.word	-1,.L210,.L556-.L210,.L557-.L210
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_loc'
.L213:
	.word	-1,.L214,0,.L341-.L214
	.half	2
	.byte	138,0
	.word	0,0
.L342:
	.word	-1,.L214,0,.L561-.L214
	.half	1
	.byte	84
	.word	.L562-.L214,.L563-.L214
	.half	1
	.byte	88
	.word	.L198-.L214,.L564-.L214
	.half	1
	.byte	88
	.word	.L566-.L214,.L567-.L214
	.half	1
	.byte	88
	.word	0,0
.L343:
	.word	-1,.L214,0,.L198-.L214
	.half	1
	.byte	85
	.word	.L198-.L214,.L564-.L214
	.half	1
	.byte	89
	.word	0,0
.L344:
	.word	-1,.L214,0,.L198-.L214
	.half	1
	.byte	86
	.word	.L564-.L214,.L565-.L214
	.half	1
	.byte	90
	.word	0,0
.L345:
	.word	-1,.L214,0,.L198-.L214
	.half	1
	.byte	87
	.word	.L564-.L214,.L565-.L214
	.half	1
	.byte	91
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_loc'
.L207:
	.word	-1,.L208,0,.L534-.L208
	.half	2
	.byte	138,0
	.word	.L534-.L208,.L328-.L208
	.half	2
	.byte	138,8
	.word	.L328-.L208,.L328-.L208
	.half	2
	.byte	138,0
	.word	0,0
.L335:
	.word	-1,.L208,0,.L328-.L208
	.half	2
	.byte	145,120
	.word	0,0
.L334:
	.word	-1,.L208,.L536-.L208,.L328-.L208
	.half	1
	.byte	82
	.word	0,0
.L330:
	.word	-1,.L208,0,.L178-.L208
	.half	1
	.byte	85
	.word	.L538-.L208,.L539-.L208
	.half	1
	.byte	89
	.word	0,0
.L329:
	.word	-1,.L208,0,.L178-.L208
	.half	1
	.byte	84
	.word	.L540-.L208,.L541-.L208
	.half	1
	.byte	88
	.word	0,0
.L331:
	.word	-1,.L208,0,.L178-.L208
	.half	1
	.byte	86
	.word	.L535-.L208,.L328-.L208
	.half	1
	.byte	90
	.word	0,0
.L332:
	.word	-1,.L208,.L537-.L208,.L328-.L208
	.half	1
	.byte	91
	.word	0,0
.L333:
	.word	-1,.L208,.L542-.L208,.L543-.L208
	.half	1
	.byte	92
	.word	.L184-.L208,.L182-.L208
	.half	1
	.byte	92
	.word	0,0
.L336:
	.word	0,0
.L339:
	.word	0,0
.L340:
	.word	-1,.L208,.L548-.L208,.L549-.L208
	.half	1
	.byte	98
	.word	0,0
.L338:
	.word	-1,.L208,.L546-.L208,.L547-.L208
	.half	1
	.byte	98
	.word	0,0
.L337:
	.word	-1,.L208,.L544-.L208,.L545-.L208
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_loc'
.L211:
	.word	-1,.L212,0,.L354-.L212
	.half	2
	.byte	138,0
	.word	0,0
.L355:
	.word	-1,.L212,0,.L354-.L212
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1141:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Dsp_IOCBI_Ini')
	.sect	'.debug_frame'
	.word	12
	.word	.L1141,.L204,.L316-.L204
	.sdecl	'.debug_frame',debug,cluster('Dcm_DcmInputOutputControlByIdentifier')
	.sect	'.debug_frame'
	.word	36
	.word	.L1141,.L206,.L273-.L206
	.byte	4
	.word	(.L364-.L206)/2
	.byte	19,40,22,26,3,19,138,40,4
	.word	(.L273-.L364)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_ResetActiveIoCtrl')
	.sect	'.debug_frame'
	.word	36
	.word	.L1141,.L208,.L328-.L208
	.byte	4
	.word	(.L534-.L208)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L328-.L534)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetLengthOfSignal')
	.sect	'.debug_frame'
	.word	36
	.word	.L1141,.L210,.L346-.L210
	.byte	4
	.word	(.L550-.L210)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L346-.L550)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dcm_SetFlagforIOCBI')
	.sect	'.debug_frame'
	.word	24
	.word	.L1141,.L212,.L354-.L212
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_DspIOCBIConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1141,.L214,.L341-.L214
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetActiveIOCBIDid')
	.sect	'.debug_frame'
	.word	24
	.word	.L1141,.L216,.L325-.L216
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2348  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2349  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2350  #endif      /* #if (DCM_CFG_DSP_IOCBI_ENABLED != DCM_CFG_OFF) */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2351  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2352  /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2353  /*<BASDKey>
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2354   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2355   * $History___:
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2356   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2357   * AR40.11.0.0; 1     07.01.2016 MER3KOR
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2358   *   CSCRM01026022
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2359   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2360   * AR40.11.0.0; 0     21.12.2015 MER3KOR
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2361   *   CSCRM1014809
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2362   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2363   * AR40.10.0.0; 5     14.07.2015 WUG3ABT
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2364   *   Checkout by wug3abt
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2365   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2366   * AR40.10.0.0; 4     01.07.2015 GET1COB
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2367   *   CSCRM00788438
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2368   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2369   * AR40.10.0.0; 3     14.05.2015 CRA4KOR
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2370   *   CSCRM00737827
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2371   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2372   * AR40.10.0.0; 2     14.05.2015 CRA4KOR
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2373   *   CSCRM00836371
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2374   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2375   * AR40.10.0.0; 1     17.02.2015 PJR4KOR
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2376   *   CSCRM00649704
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2377   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2378   * AR40.10.0.0; 0     13.02.2015 GET1COB
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2379   *   CSCRM00747026
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2380   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2381   * AR40.9.0.0; 3     30.12.2014 GET1COB
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2382   *   CSCRM00724044
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2383   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2384   * AR40.9.0.0; 2     15.11.2014 GET1COB
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2385   *   CSCRM00726622
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2386   *
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2387   * $
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2388   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2389   </BASDKey>*/
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2390  
; BSW\src\BSW\Gen\Dcm\src\DcmDsp\DcmDspUds\DcmDspUds_Iocbi.c	  2391  /* FC_VariationPoint_END */

	; Module end
