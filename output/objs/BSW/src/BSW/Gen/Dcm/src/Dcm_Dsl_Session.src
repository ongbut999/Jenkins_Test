	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14620a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dcm_Dsl_Session.src BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c'

	
$TC16X
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_Prv_SetNonDefaultSesCtrlType',code,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.text.Dcm_Dsl_Session.Dcm_Prv_SetNonDefaultSesCtrlType'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     1  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     2  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     3  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     5   * Includes
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     7  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     8  #include "DcmCore_DslDsd_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	     9  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    10  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    11  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    12  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    13   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    14   * Variables
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    15   **********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    16  */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    17  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    18  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    19  static VAR(boolean,DCM_VAR) Dcm_isResetToDefaultRequested_b;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    20  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    21  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    22  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    23  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    24  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    25  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    26  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    27  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    28   *    Inline Function Definitions
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    29   **********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    30  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    31  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    32  #if(DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    33  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    34   Function name    : Dcm_Prv_ResetRoeEvents
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    35   Syntax           : Dcm_Prv_ResetRoeEvents(void)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    36   Description      : This Inline function is used to reset Roe Events
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    37   Parameter        : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    38   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    39  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    40  LOCAL_INLINE FUNC(void,DCM_CODE) Dcm_Prv_ResetRoeEvents(void)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    41  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    42  #if(DCM_CFG_DSP_ROEDID_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    43      Dcm_ResetRoeDidevents();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    44  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    45  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    46  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    47      Dcm_ResetRoeOnDtcevents();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    48  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    49  }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    50  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    51  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    52  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    53  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    54  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    55  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    56   *    Function Definitions
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    57   **********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    58  #define DCM_START_SEC_CODE
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    59  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    60  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    61  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    62   Function name    : Dcm_Prv_SetNonDefaultSesCtrlType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    63   Syntax           : Dcm_Prv_SetNonDefaultSesCtrlType(CurrentSession_u8,SesCtrlType_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    64   Description      : This function is used to Set default session control type
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    65   Parameter        : Dcm_SesCtrlType, Dcm_SesCtrlType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    66   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    67  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    68  static FUNC(boolean,DCM_CODE) Dcm_Prv_SetNonDefaultSesCtrlType (VAR(Dcm_SesCtrlType,AUTOMATIC) CurrentSession_u8,
; Function Dcm_Prv_SetNonDefaultSesCtrlType
.L26:
Dcm_Prv_SetNonDefaultSesCtrlType:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    69          VAR(Dcm_SesCtrlType, AUTOMATIC) SesCtrlType_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    70  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    71      VAR(boolean,AUTOMATIC) isSessionAvailable = FALSE;
	mov	d8,#0
.L114:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    72  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    73  #if((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_IOCBI_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    74      VAR(uint32,AUTOMATIC) sessionMask_u32 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    75  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    76  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    77      VAR(uint8,AUTOMATIC) nrSessions_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    78      VAR(uint8,AUTOMATIC) idxIndex_u8   = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    79  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    80      /* Calculate the number  of sessions configured in ECU for particular protocol*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    81  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    82      if(DCM_IS_KWPPROT_ACTIVE() != FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    83      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    84          nrSessions_u8 = DCM_CFG_NUM_KWP_SESSIONS;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    85      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    86      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    87      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    88          nrSessions_u8 = DCM_CFG_NUM_UDS_SESSIONS;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    89      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    90  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    91      nrSessions_u8 = DCM_CFG_NUM_UDS_SESSIONS;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    92  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    93  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    94      /* get the index of requested session id in session look up table */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    95      for(idxIndex_u8 = 0x1; idxIndex_u8 < nrSessions_u8 ; idxIndex_u8++)
	mov	d15,#1
.L115:
	j	.L2
.L3:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    96      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    97          if(Dcm_DsldSessionTable_pcu8[idxIndex_u8]== SesCtrlType_u8)
	movh.a	a15,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a15,[a15]
.L203:
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]
.L204:
	jne	d0,d5,.L4
.L205:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    98          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	    99              /* session found */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   100              break;
	j	.L5
.L4:
	add	d15,#1
.L116:
	extr.u	d15,d15,#0,#8
.L2:
	jlt.u	d15,#3,.L3

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   101          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   102      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   103  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   104      if(idxIndex_u8 != nrSessions_u8)
.L5:
	jeq	d15,#3,.L6
.L206:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   105      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   106          isSessionAvailable = TRUE;
	mov	d8,#1
.L207:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   107          /* set the session index */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   108          Dcm_DsldGlobal_st.idxActiveSession_u8 = idxIndex_u8;
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L208:
	st.b	[a15]3,d15
.L106:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     3  #ifndef DCMCORE_DSLDSD_PROT_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     4  #define DCMCORE_DSLDSD_PROT_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     6  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     7  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     8  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	     9  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    11  #if (DCM_CFG_DSP_NVRAM_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    12  #include "NvM.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    13  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    14   #if (DCM_CFG_DET_SUPPORT_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    15  #include "Det.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    16  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    17  #include "Dcm_Dsd.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    18  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    19   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    20   *    Internal  definitions
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    21   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    23  /* Endianness conversion for UINT16/SINT16 data */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    25  #define DCM_ENDIANNESSCONVERSION16(data) ((data) = rba_BswSrv_ByteOrderSwap16((uint16)(data)))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    26  /* Endianness conversion for UINT32/SINT32 data */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    27  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    28  #define DCM_ENDIANNESSCONVERSION32(data) ((data) = rba_BswSrv_ByteOrderSwap32(data))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    29  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    30  /* Abstraction to the MemSet and MemCopy Library function */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    31  #define DCM_MEMCOPY(xDest_pv,xSrc_pcv,numBytes_u32)         (void)rba_BswSrv_MemCopy((xDest_pv),(xSrc_pcv),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    32  #define DCM_MEMSET(xDest_pv,xPattern_u32,numBytes_u32)              (void)rba_BswSrv_MemSet((xDest_pv),(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    33  #define DCM_UNUSED_PARAM(P)   ((void)(P))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    35  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    36  /* Types of storing used for Jump to Boot */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    37  #define DCM_NOTVALID_TYPE     0x00u  /* Boot Loader is not active */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    38  #define DCM_WARMREQUEST_TYPE  0x01u  /* Warm Request Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    39  #define DCM_WARMINIT_TYPE     0x02u  /* Warm Init Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    40  #define DCM_WARMRESPONSE_TYPE 0x03u  /* Warm Response Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    41  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    42  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    43  extern VAR(Dcm_ProgConditionsType,  DCM_VAR) Dcm_ProgConditions_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    44  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    45  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    46  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    47  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    48  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    49  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    50  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    51      DCM_BOOT_IDLE = 0,           /* IDLE state */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    52      DCM_BOOT_PROCESS_RESET,      /* Process the Store Type and Trigger Force Response Pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    53      DCM_BOOT_SENDFORCEDRESPPEND, /* State where ForcedRespPend can be triggered */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    54      DCM_BOOT_WAIT,               /* Wait for confirmation of Response Pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    55      DCM_BOOT_STORE_WARMREQ,      /* Store Request for Warm Request type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    56      DCM_BOOT_STORE_WARMINIT,     /* Store protocol information for Warm Init Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    57      DCM_BOOT_STORE_WARMRESP,     /* Store Response for Warm Response Type */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    58      DCM_BOOT_ERROR,              /* Process the error happened before the jump */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    59      DCM_BOOT_WAIT_FOR_RESET,     /* Wait till the reset happens*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    60      DCM_BOOT_PERFORM_RESET,       /* State to do reset in case of Warm Request/Response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    61      DCM_BOOT_PREPARE_RESET       /* State to check for conditions to send Forced RespPend before reset for  Warm Request/Response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    62  }Dcm_BootLoaderStates_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    63  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    64  #define DCM_JUMPTOOEMBOOTLOADER            0x00u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    65  #define DCM_JUMPTOSYSSUPPLIERBOOTLOADER 0x01u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    66  #define DCM_JUMPDRIVETODRIVE            0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    67  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    68  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    69  extern VAR(Dcm_BootLoaderStates_ten,  DCM_VAR) Dcm_BootLoaderState_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    70  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    71  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    72  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    73  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    74  extern FUNC(void,DCM_CODE) Dcm_JumpToBootLoader(VAR(uint8,AUTOMATIC) dataBootType_u8,P2VAR(Dcm_NegativeResponseCodeType,AUTOMATIC,DCM_INTERN_DATA) dataNegRespCode_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    75  extern FUNC(void,DCM_CODE) Dcm_ResetBootLoader(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    76  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    77  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    78  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    79  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    80  /* API ID for OBD services in order to report development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    81  #define DCM_OBDMODE01_ID    0x81u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    82  #define DCM_OBDMODE02_ID    0x82u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    83  #define DCM_OBDMODE37A_ID   0x83u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    84  #define DCM_OBDMODE04_ID    0x84u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    85  #define DCM_OBDMODE06_ID    0x86u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    86  #define DCM_OBDMODE08_ID    0x88u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    87  #define DCM_OBDMODE09_ID    0x89u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    88  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    89  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    90  /* API ID for read did in order to report development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    91  #define DCM_RDBI_ID         0x8Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    92  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    93  #define DCM_WARMSTART_ID        0x8Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    94  #define DCM_BOOTLOADER_ID       0x8Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    95  #define DCM_COPYRXDATA_ID       0x8Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    96  #define DCM_KWPTIMING_ID        0x8Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    97  #define DCM_PAGEDBUFFER_ID      0x8Fu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    98  #define DCM_RDPI_ID             0x90u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	    99  #define DCM_ROE_ID              0x91u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   100  #define DCM_ROEPROCESS_ID       0x92u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   101  #define DCM_TPRXIND_ID          0x93u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   102  #define DCM_SETSRVTABLE_ID      0x94u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   103  #define DCM_SETSESSION_ID       0x95u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   104  #define DCM_PROCESSINGDONE_ID   0x96u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   105  #define DCM_CC_ID               0x97u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   106  #define DCM_CDTCS_ID            0x98u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   107  #define DCM_DDDI_ID             0x99u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   108  #define DCM_DSC_ID              0x9Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   109  #define DCM_GETP2TIMINGS_ID     0x9Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   110  #define DCM_ER_ID               0x9Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   111  #define DCM_IOCBI_ID            0x9Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   112  #define DCM_WDBI_ID             0x9Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   113  #define DCM_COPYTXDATA_ID       0x9Fu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   114  #define DCM_CHKUSEDCOREMAIN_ID  0xA0u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   115  #define DCM_TRANSFERDATA_ID     0xA1u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   116  #define DCM_TRANSFEREXIT_ID     0xA2u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   117  #define DCM_STARTOFRECEPTION_ID 0xA3u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   118  #define DCM_TPTXCONFIRMATION_ID 0xA4u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   119  #define DCM_TPRXINDICATION_ID   0xA5u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   120  #define DCM_SETSECURITYLEVEL    0xA6u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   121  #define DCM_SETSESSIONLEVEL     0xA7u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   122  #define DCM_RDTC_ID             0xA8u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   123  #define DCM_TXCONFIRMATION_ID   0xAAu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   124  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   125  /* error ids for DET API interfaces, OBD services report the development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   126  #define DCM_E_INTERFACE_TIMEOUT                   0x01u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   127  #define DCM_E_INTERFACE_RETURN_VALUE              0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   128  #define DCM_E_INTERFACE_BUFFER_OVERFLOW           0x03u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   129  #define DCM_E_UNINIT                              0x05u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   130  #define DCM_E_PARAM                               0x06u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   131  #define DCM_E_PARAM_POINTER                       0x07u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   132  #define DCM_E_INIT_FAILED                         0x08u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   133  #define DCM_E_SET_PROG_CONDITIONS_FAIL            0x09u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   134  #define DCM_E_MIXED_MODE                          0x0Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   135  #define DCM_E_WRONG_STATUSVALUE                   0x0Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   136  #define DCM_E_PROTOCOL_NOT_FOUND                  0x0Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   137  #define DCM_E_NVM_UPDATION_NOT_OK                 0x0Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   138  #define DCM_E_FULLCOMM_DISABLED                   0x0Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   139  #define DCM_E_PROTOCOL_NOT_STARTED                0x10u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   140  #define DCM_E_PSUEDO_RECEPTION                    0x11u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   141  #define DCM_E_SERVICE_TABLE_NOT_SET               0x12u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   142  #define DCM_E_SESSION_NOT_CONFIGURED              0x13u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   143  #define DCM_E_SUBNET_NOT_SUPPORTED                0x14u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   144  #define DCM_E_DDDI_NOT_CONFIGURED                 0x15u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   145  #define DCM_E_EXCEEDED_MAX_RECORDS                0x16u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   146  #define DCM_E_NOT_SUPPORTED_IN_CURRENT_SESSION    0x17u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   147  #define DCM_E_INVALID_ADDRLENGTH_FORMAT           0x18u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   148  #define DCM_E_CONTROL_FUNC_NOT_CONFIGURED         0x19u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   149  #define DCM_E_INVALID_CONTROL_PARAM               0x1Au
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   150  #define DCM_E_NO_WRITE_ACCESS                     0x1Bu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   151  #define DCM_E_RET_E_INFRASTRUCTURE_ERROR          0x1Cu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   152  #define DCM_E_INVALID_CONTROL_DATA                0x1Du
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   153  /* error Ids for DET API interfaces, Rdbi service report the development errors to DET module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   154  #define DCM_E_RET_E_NOT_OK                        0x1Eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   155  #define DCM_E_DCMRXPDUID_RANGE_EXCEED             0x20u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   156  #define DCM_E_DCMTXPDUID_RANGE_EXCEED             0x21u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   157  #define DCM_E_NO_READ_ACCESS                      0x22u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   158  #define DCM_E_SERVICE_TABLE_OUTOFBOUNDS           0x23u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   159  #define DCM_E_SECURITYLEVEL_OUTOFBOUNDS           0x24u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   160  #define DCM_E_RET_E_PENDING                       0x25u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   161  #define DCM_E_INVALID_LENGTH                      0x26u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   162  #define DCM_E_FORCE_RCRRP_IN_SILENT_COMM          0x27u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   163  #define DCM_MAXNUMRESPONSEPENDING                 0xFFu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   164  typedef uint8  Dcm_ReturnClearDTCType_tu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   165  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   166  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   167  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   168  extern VAR(Std_ReturnType,DCM_VAR) Dcm_retVal_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   169  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   170  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   171  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   172  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   173  /*Service handler uses below mentioned DET API interface function to report the development error to DET Module */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   174  #if (DCM_CFG_DET_SUPPORT_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   175  #define     DCM_DET_ERROR(DCM_ApiId, DCM_ErrorId)                                 \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   176                                          (void)Det_ReportError(DCM_MODULE_ID, DCM_INSTANCE_ID, DCM_ApiId, DCM_ErrorId);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   177  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   178  #define     DCM_DET_ERROR(DCM_ApiId, DCM_ErrorId)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   179  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   180  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   181  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   182  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   183   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   184   *    Function prototypes (APIs of DCM which is used only in DSP)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   185   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   186   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   187  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   188  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   189  extern FUNC(uint32, DCM_CODE) Dcm_DsldGetActiveSecurityMask_u32 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   190  extern FUNC(uint32, DCM_CODE) Dcm_DsldGetActiveSessionMask_u32 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   191  extern FUNC(void,DCM_CODE) Dcm_DsldSetsessionTiming(VAR(uint32, AUTOMATIC) nrP2StarMax_u32,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   192                                                        VAR(uint32, AUTOMATIC) nrP2Max_u32);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   193  extern FUNC(void,DCM_CODE) Dcm_Prv_SetSesCtrlType ( VAR(Dcm_SesCtrlType, AUTOMATIC) SesCtrlType_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   194  extern FUNC(void,DCM_CODE) Dcm_Prv_SetSecurityLevel (VAR(Dcm_SecLevelType, AUTOMATIC) dataSecurityLevel_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   195  extern FUNC(void,DCM_CODE) Dcm_Prv_ProcessResetToDefaultSession(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   196  extern FUNC(void,DCM_CODE) Dcm_Prv_ResetDefaultSessionRequestFlag(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   197  #if(DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   198  extern FUNC(void,DCM_CODE) Dcm_Prv_ConfirmationRespPendForBootloader(VAR(Dcm_ConfirmationStatusType,AUTOMATIC) Status_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   199  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   200  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   201  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   202  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   203  /* macros to handle the time monitoring */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   204  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   205  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   206  #define DCM_TimerStop(timer)            ((timer)=0xFFFFFFFFu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   207  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   208  #define DCM_TimerElapsed(timer)         ((timer)==0u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   209  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   210  #define DCM_TimerStopped(timer)         ((timer)==0xFFFFFFFFu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   211  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   212  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   213  /* OS Timer usage for Timer handling */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   214  #if ( DCM_CFG_OSTIMER_USE != FALSE )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   215  #define DCM_TimerStart(timer,time,starttime,timerStatus) do                      /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   216                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   217                                              (timerStatus = Dcm_GetCounterValue(DCM_CFG_COUNTERID, (&(starttime)))); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   218                                              SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   219                                              if( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   220                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   221                                                  ((timer) = (time)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   222                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   223                                              else \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   224                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   225                                                  ((timer) = ((time) / DCM_CFG_TASK_TIME_US)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   226                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   227                                              SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   228                                              }while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   229  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   230  #define DCM_TimerProcess(timer,starttime,timerStatus)   do                    /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   231                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   232                                              if ( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   233                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   234                                                  timerStatus = Dcm_GetCounterValue(DCM_CFG_COUNTERID, (&Dcm_CurrTick_u32)); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   235                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   236                                                  if ( timerStatus == E_OK ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   237                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   238                                                      if ( (DCM_CFG_TICKS2US_COUNTER(Dcm_CurrTick_u32 - (starttime))) >= (timer) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   239                                                      { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   240                                                          ((timer) = 0u); \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   241                                                      } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   242                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   243                                                  else \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   244                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   245                                                      /* This else part is added for future use */ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   246                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   247                                                  SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   248                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   249                                              else  \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   250                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   251                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   252                                                  if( ((timer)!=0u) && ((timer)!=0xFFFFFFFFu) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   253                                                  { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   254                                                      (timer)--; \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   255                                                  } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   256                                                  SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   257                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   258                                              }while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   259  /* This Macro used to set the new timing value of running timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   260  /* Eg: After sending the response new value of P2 and P3 max is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   261  /* Setting new P3 time is done in Dsp_DcmTxconfirm() function, before that */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   262  /* old P3 max is set to the monitoring variable. from this Macro new time is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   263  #define DCM_TimerSetNew(timer,time)   SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   264                                      if((timer)!=0u)           \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   265                                      {                         \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   266                                          (timer) = (time);     \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   267                                      }\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   268                                        SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   269  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   270  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   271  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   272  /* Usage of Raster timer for timer monitoring */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   273  #define DCM_TimerStart(timer,time,unused,timerStatus)  ((void)(timerStatus));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   274                                                         SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   275                                                        ((timer) = (uint32)((time) / DCM_CFG_TASK_TIME_US));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   276                                                        SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   277  #define DCM_TimerProcess(timer,unused,timerStatus)          \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   278                                              do                       /*Do while, to remove MISRA Warning 3458*/ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   279                                              {   \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   280                                                  ((void)(timerStatus));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   281                                                  SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   282                                              if( ((timer)!=0u) && ((timer)!=0xFFFFFFFFuL) ) \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   283                                              { \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   284                                                  (timer)--; \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   285                                              } \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   286                                              SchM_Exit_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   287                                              }\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   288                                              while(0);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   289  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   290  /* This Macro used to set the new timing value of running timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   291  /* Eg: After sending the response new value of P2 and P3 max is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   292  /* Setting new P3 time is done in Dsp_DcmTxconfirm() function, before that */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   293  /* old P3 max is set to the monitoring variable. from this Macro new time is set */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   294  #define DCM_TimerSetNew(timer,time)        SchM_Enter_Dcm_DsldTimer_NoNest();\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   295                                              ((timer) = ((time) / DCM_CFG_TASK_TIME_US));\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   296                                              SchM_Exit_Dcm_DsldTimer_NoNest();
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   297  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   298  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   299  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   300  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   301  #define DCM_NEGRESPONSE_INDICATOR       0x7Fu         /* Indication byte of negative response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   302  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   303  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   304  /* Location of default session ID in session array table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   305  #define DCM_DEFAULT_SESSION_IDX                        0x00u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   306  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   307  /* Parallel Tpr  bytes */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   308  #define DCM_DSLD_PARALLEL_TPR_BYTE1                    0x3eu
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   309  #define DCM_DSLD_PARALLEL_TPR_BYTE2                    0x80u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   310  #define DCM_DSLD_PARALLEL_DCM_TPR_REQ_LENGTH           0x02u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   311  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   312  /* NRC for wait pend negative response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   313  #define DCM_E_REQUESTCORRECTLYRECEIVED_RESPONSEPENDING 0x78u
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   314  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   315  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   316  /* Macro to check running protocol is KLINE type  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   317  /* If KLINE is disabled this macro returns FALSE  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   318  #if( DCM_CFG_KLINE_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   319      #define DCM_IS_KLINEPROT_ACTIVE() \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   320      (((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_CARB_ON_KLINE)\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   321  /* FC_VariationPoint_START */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   322      ||((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_OBD_ON_KLINE)\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   323  /* FC_VariationPoint_END */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   324      ||((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) == DCM_KWP_ON_KLINE))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   325  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   326  #define DCM_IS_KLINEPROT_ACTIVE()    FALSE
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   327  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   328  /* Macro to check whether the ComM is in full communication mode for Drive and boot software */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   329  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   330  #define DCM_CHKFULLCOMM_MODE(idx)  (Dcm_active_commode_e[idx].ComMState == DCM_DSLD_FULL_COM_MODE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   331  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   332  /* Macro to check whether the ComM is not in No communication mode for Drive and boot software */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   333  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   334  #define DCM_CHKNOCOMM_MODE(idx) (Dcm_active_commode_e[idx].ComMState != DCM_DSLD_NO_COM_MODE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   335  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   336  #define DCM_PROTOCOL_ENDIANNESS (Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].Endianness_ConvEnabled_b)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   337  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   338  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   339   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   340   *    Internal DCM Type definitions
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   341   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   342   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   343  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   344  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   345      DCM_DSLD_POS_RESPONSE,                          /* POS response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   346      DCM_DSLD_NEG_RESPONSE                           /* NEG response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   347  }Dcm_DsldResponseType_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   348  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   349  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   350  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   351  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   352      DCM_QUEUE_IDLE,                          /* Queue is idle */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   353      DCM_QUEUE_RUNNING,                       /* QUeuing is taking place */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   354      DCM_QUEUE_COMPLETED                      /* QUeuing is completed, i.e. the second request is received */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   355  }Dcm_DsldQueHandling_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   356  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   357  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   358  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   359  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   360      Dcm_MsgType  adrBufferPtr_pu8;                      /* pointer to hold the address of the processing request buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   361  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   362      PduIdType dataActiveRxPduId_u8;                     /* Rx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   363      uint8 nrActiveConn_u8;                            /* Active Connection number  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   364      uint8 idxActiveSession_u8;                     /* Active sessions index in session lookup table  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   365      boolean flgMonitorP3timer_b;                       /* Bit to indicate P3 timer monitoring required  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   366      uint8 idxCurrentProtocol_u8;                       /* Active protocol index */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   367      PduIdType dataActiveTxPduId_u8;                     /* Tx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   368      uint8 datActiveSrvtable_u8;                        /* Active service table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   369      boolean flgCommActive_b;                           /* Is communication or protocol active? */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   370      uint8 cntrWaitpendCounter_u8;                       /* Wait pend counter */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   371      Dcm_DsldResponseType_ten stResponseType_en;           /* Type of response (POS/NEG) */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   372      uint8 idxActiveSecurity_u8;                    /* Active security index in security lookup table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   373      Std_ReturnType dataResult_u8;                       /* Confirmation result */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   374      uint8 idxService_u8;                            /* Active services index in active service table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   375      boolean dataResponseByDsd_b;                        /* Response given by DSD                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   376      uint8 dataSid_u8;                                    /* Requested Sid  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   377  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   378      uint8  dataOldSrvtable_u8;                          /* Service table which is running when event response */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   379  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   380  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   381      boolean flgPagedBufferTxOn_b;                      /* Bit to indicate Paged buffer Tx in progress         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   382  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   383  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   384      PduIdType dataNewRxPduId_u8;                        /* High protocols Rx PDU id */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   385  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   386      PduIdType dataPassRxPduId_u8;                       /* Active Roe's Rx PDU id */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   387  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   388  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   389      PduLengthType dataRequestLength_u16;                /* Length of request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   390      PduIdType dataOldtxPduId_u8;                         /* Copy of the old active Tx PDU in DCM */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   391  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   392      Dcm_MsgLenType dataCurrentPageRespLength_u32;          /* Amount of data filled by the service       */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   393  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   394  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   395      PduLengthType dataNewdataRequestLength_u16;             /* Request length of high priority protocols request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   396  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   397  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   398  #if(DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   399      PduLengthType dataPassdataRequestLength_u16;            /* Request length of bypassing ROE request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   400  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   401      uint32 dataTimerTimeout_u32;                      /* If ROE requested service unable to send */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   402  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   403      Dcm_MsgType adrActiveTxBuffer_tpu8;                /* Active Tx buffer pointer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   404      uint32 dataTimeoutMonitor_u32;                      /* It holds the timeout time */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   405  #if(DCM_CFG_ROETYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   406      uint32 datRoeType2Timeout_u32;                   /* Roe timer for type2 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   407  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   408  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   409      uint32 dataPagedBufferTimeout_u32;                 /* Paged buffer timer                                  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   410  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   411      uint8  PreviousSessionIndex;                     /*sessions index for old Session   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   412  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   413  }Dcm_DsldInternalStructureType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   414  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   415  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   416  /* structure for queue handling */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   417  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   418  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   419      Dcm_DsldQueHandling_ten Dcm_QueHandling_en;         /* State handler for queue */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   420      Dcm_MsgType  adrBufferPtr_pu8;                      /* pointer to hold the address of the queuing buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   421      PduLengthType dataQueueReqLength_u16;                /* Length of request */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   422      PduIdType dataQueueRxPduId_u8;                     /* Rx PDU Id on which request received  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   423      uint8 idxBufferIndex_u8;                          /* index to point to the buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   424  }Dcm_QueueStructure_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   425  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   426  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   427  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   428  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   429      PduInfoType Dcm_DslRxPduBuffer_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   430  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   431      Dcm_MsgType  Dcm_DslBufferPtr_pu8;        /* pointer to hold the address of the normal buffer(non-queue) */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   432  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   433      uint8      Dcm_DslServiceId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   434      boolean     Dcm_DslFuncTesterPresent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   435      boolean     Dcm_DslCopyRxData_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   436  }Dcm_DslRxPduArray_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   437  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   438  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   439  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   440      uint32 dataTimeoutP2StrMax_u32;                     /* P2* max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   441      uint32 dataTimeoutP2max_u32;                        /* P2 max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   442  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   443      uint32 dataTimeoutP3max_u32;                        /* P3 max time in us */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   444  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   445  }Dcm_DsldTimingsType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   446  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   447  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   448  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   449      Dcm_MsgType TxBuffer_tpu8;                        /* Pointer to Tx buffer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   450      Dcm_MsgLenType TxResponseLength_u32 ;             /* Length of response including Sid */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   451      boolean  isForceResponsePendRequested_b;          /* Application triggered wait pend */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   452  }Dcm_DslTxType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   453  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   454  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   455  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   456   * @ingroup DCMDSP_UDS_EXTENDED
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   457   * ROE structure for logging the info related to the postponement of the ROE event .\n
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   458   * Member elements/n
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   459    * uint8  EventId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   460     * boolean Is_EventTrigerred;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   461  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   462  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   463  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   464      uint8   EventId_u8;/*Event Id reported from the apllication*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   465      boolean Is_Queued;/*Will indocate whether the event is waiting to trigger the service to respond to*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   466      boolean Is_Processed;/*Will indocate whether the event is waiting to trigger the service to respond to*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   467      PduIdType   RxPduId_u8;/*protocol id tobe used for the reported event*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   468  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   469  } Dcm_DcmDspEventWaitlist_t;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   470  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   471  #define DCM_START_SEC_CONST_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   472  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   473  extern CONST(Dcm_Dsld_RoeRxToTestSrcMappingType, DCM_CONST) Dcm_Dsld_RoeRxToTestSrcMappingTable[DCM_CFG_NUM_RX_PDUID];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   474  #define DCM_STOP_SEC_CONST_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   475  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   476  #if( (DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_ROEEVENT_ENABLED != DCM_CFG_OFF) )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   477  #define DCM_START_SEC_VAR_INIT_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   478  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   479  extern VAR(Dcm_DcmDspEventWaitlist_t,AUTOMATIC) Dcm_DcmDspEventQueue [DCM_MAX_SETUPROEEVENTS];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   480  #define DCM_STOP_SEC_VAR_INIT_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   481  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   482  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   483  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   484  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   485  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   486  extern VAR (uint8, DCM_VAR) DcmRoeQueueIndex_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   487  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   488  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   489  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   490  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   491  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   492  extern FUNC(void,DCM_CODE) Dcm_CheckActiveDiagnosticStatus(VAR(uint8,AUTOMATIC) dataNetworkId);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   493  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   494  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   495  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   496  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   497  ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   498  *    Variables prototypes
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   499  ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   500  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   501  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   502  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   503  extern VAR(uint8,DCM_VAR) Dcm_DslWaitPendBuffer_au8[8];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   504  extern VAR(uint8,DCM_VAR) Dcm_CurProtocol_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   505  extern VAR(Dcm_SesCtrlType,DCM_VAR) Dcm_CC_ActiveSession_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   506  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   507  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   508  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   509  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   510  extern P2CONST(Dcm_Dsld_protocol_tableType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldProtocol_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   511  extern P2CONST(uint8, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldRxTable_pcu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   512  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   513  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   514  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   515  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   516  extern VAR(Dcm_DslRxPduArray_tst,DCM_VAR) Dcm_DslRxPduArray_ast[DCM_CFG_NUM_RX_PDUID];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   517  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   518  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   519  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   520  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   521  extern VAR(boolean,DCM_VAR) Dcm_isFuncTPOnOtherConnection_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   522  extern VAR(boolean,DCM_VAR) Dcm_isInitialised_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   523  extern VAR(boolean,DCM_VAR) Dcm_acceptRequests_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   524  extern VAR(boolean,DCM_VAR) Dcm_isCancelTransmitInvoked_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   525  extern VAR(boolean,DCM_VAR) Dcm_isStopProtocolInvoked_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   526  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   527  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   528  #if (DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   529  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   530  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   531  extern VAR(boolean,DCM_VAR) Dcm_ReadyForBoot_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   532  extern VAR(boolean,DCM_VAR) Dcm_SesChgOnWarmResp_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   533  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   534  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   535  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   536  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   537  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   538  extern P2CONST(Dcm_Dsld_connType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldConnTable_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   539  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   540  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   541  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   542  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   543  extern VAR(Dcm_DsldInternalStructureType_tst,DCM_VAR) Dcm_DsldGlobal_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   544  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   545  extern VAR(Dcm_QueueStructure_tst,DCM_VAR) Dcm_QueueStructure_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   546  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   547  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   548  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   549  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   550  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   551  extern VAR(Dcm_DsldTimingsType_tst,DCM_VAR) Dcm_DsldTimer_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   552  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   553  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   554  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   555  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   556  extern VAR(boolean,DCM_VAR) Dcm_isGeneralRejectSent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   557  extern VAR(boolean,DCM_VAR) Dcm_isSessionStored_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   558  #if((DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_SPLITRESPSUPPORTEDFORKWP != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   559  extern VAR(boolean,DCM_VAR) Dcm_isFirstReponseSent_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   560  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   561  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   562  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   563  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   564  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   565  extern VAR(PduInfoType,DCM_VAR) Dcm_DsldPduInfo_st ;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   566  extern VAR(Dcm_DslTxType_tst,DCM_VAR) Dcm_DslTransmit_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   567  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   568  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   569  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   570  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   571  extern P2CONST(Dcm_Dsld_ServiceType, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldSrvTable_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   572  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   573  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   574  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   575  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   576  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_DsldMsgContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   577  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   578  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   579  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   580  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   581  extern P2CONST(uint8, DCM_VAR, DCM_INTERN_CONST) Dcm_DsldSessionTable_pcu8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   582  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   583  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   584  #if(DCM_CFG_ROETYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   585  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   586  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   587  extern VAR(Dcm_DsdStatesType_ten,DCM_VAR) Dcm_DsdRoe2State_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   588  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_Roe2MesContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   589  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   590  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   591  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   592  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   593  #if(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   594  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   595  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   596  extern VAR(Dcm_MsgContextType,DCM_VAR) Dcm_Rdpi2MesContext_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   597  extern VAR(Dcm_DsldResponseType_ten,DCM_VAR) Dcm_Rdpi2ResponseType_en;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   598  extern VAR(PduInfoType,DCM_VAR) Dcm_DsldRdpi2pduinfo_ast[DCM_CFG_NUM_RDPITYPE2_TXPDU];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   599  extern P2CONST(Dcm_ProtocolExtendedInfo_type,DCM_VAR,DCM_INTERN_CONST) Dcm_DsldRdpi2_pcst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   600  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   601  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   602  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   603  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   604  #if (DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   605  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   606  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   607  extern VAR(Dcm_Dsld_KwpTimerServerType,DCM_VAR) Dcm_DsldKwpReqTiming_st;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   608  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED/*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   609  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   610  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   611  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   612  #if (DCM_CFG_OSTIMER_USE != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   613  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   614  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   615  extern VAR( uint32, DCM_VAR )     Dcm_P2OrS3StartTick_u32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   616  extern VAR( uint32, DCM_VAR )     Dcm_CurrTick_u32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   617  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   618  extern VAR( uint32, DCM_VAR )     Dcm_PagedBufferStartTick_u32;     /* Starting tick value for paged buffer timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   619  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   620  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   621  extern VAR( uint32, DCM_VAR )     Dcm_TimerStartTick_u32;             /* Starting tick value for Roe timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   622  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   623  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   624  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   625  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   626  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   627  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   628  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   629  #if(DCM_CFG_RDPITYPE2_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   630  extern VAR( uint32, DCM_VAR )     Dcm_Rdpi2StartTick_u32;            /* Starting tick value for Rdpi timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   631  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   632  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   633  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   634  #if ((DCM_CFG_STORING_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   635  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   636  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   637  extern VAR( uint32, DCM_VAR ) Dcm_SysPrevTick_u32;   /* Previous tick value */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   638  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   639  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   640  #define DCM_START_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   641  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   642  extern VAR( uint32, DCM_VAR ) Dcm_SysCurrTick_u32;   /* Current tick value */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   643  #define DCM_STOP_SEC_VAR_CLEARED_32 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   644  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   645  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   646  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   647  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   648  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   649  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   650  #if(DCM_CFG_RXPDU_SHARING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   651  #define DCM_START_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   652  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   653  extern VAR (boolean,DCM_VAR) Dcm_isObdRequestReceived_b;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   654  #define DCM_STOP_SEC_VAR_CLEARED_BOOLEAN /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   655  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   656  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   657  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   658  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   659  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   660  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   661  extern VAR(StatusType,DCM_VAR) Dcm_P2OrS3TimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   662  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   663  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   664  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   665  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   666  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   667  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   668  extern VAR(StatusType,DCM_VAR) Dcm_PagedBufferTimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   669  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   670  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   671  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   672  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   673  #if((DCM_ROE_ENABLED != DCM_CFG_OFF)||(DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   674  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   675  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   676  extern VAR(StatusType,DCM_VAR) Dcm_CounterValueTimerStatus_uchr; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   677  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   678  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   679  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   680  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   681  extern VAR(StatusType,DCM_VAR) Dcm_RoeType2TimerStatus_uchr ; /* global variable to get the return value of GetCounterValue for Timer related funtions*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   682  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   683  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   684  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   685  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   686  /*
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   687   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   688   *    Function prototypes
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   689   ***************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   690  */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   691  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   692  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   693  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   694  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   695  /************************TRIGGER TRANSMITT*****************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   696  extern FUNC(void,DCM_CODE) Dcm_Prv_TriggerTransmit(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   697  /**********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   698  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   699  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   700  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   701  /************************DSL STATE MACHINE*****************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   702  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   703  #define DCM_NUMBER_OF_DSL_STATES                  (0x08u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   704  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   705  #define DCM_NUMBER_OF_DSL_STATES                  (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   706  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) || (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   707  #define DCM_NUMBER_OF_DSL_STATES                  (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   708  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   709  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   710  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   711  #define DSL_STATE_IDLE                            (0x00u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   712  #define DSL_STATE_WAITING_FOR_RXINDICATION        (0x01u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   713  #define DSL_STATE_REQUEST_RECEIVED                (0x02u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   714  #define DSL_STATE_RESPONSE_TRANSMISSION           (0x03u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   715  #define DSL_STATE_WAITING_FOR_TXCONFIRMATION      (0x04u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   716  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   717  #define DSL_STATE_PROTOCOL_PREEMPTION             (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   718  #define DSL_STATE_PAGEDBUFFER_TRANSMISSION        (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   719  #define DSL_STATE_ROETYPE1_RECEIVED               (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   720  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   721  #define DSL_STATE_PAGEDBUFFER_TRANSMISSION        (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   722  #define DSL_STATE_ROETYPE1_RECEIVED               (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   723  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   724  #define DSL_STATE_PROTOCOL_PREEMPTION             (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   725  #define DSL_STATE_ROETYPE1_RECEIVED               (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   726  #elif((DCM_CFG_PROTOCOL_PREMPTION_ENABLED == DCM_CFG_OFF) && (DCM_PAGEDBUFFER_ENABLED == DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   727  #define DSL_STATE_ROETYPE1_RECEIVED               (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   728  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   729  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   730  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   731  #define DSL_SUBSTATE_S3_OR_P3_TIMEMONITORING      (0x00u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   732  #define DSL_SUBSTATE_S3_OR_P3_TIMEOUT             (0x01u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   733  #define DSL_SUBSTATE_STOP_PROTOCOL                (0x02u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   734  #define DSL_SUBSTATE_STOP_PROTOCOL_RECEIVING      (0x03u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   735  #define DSL_SUBSTATE_STOP_ROE                     (0x04u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   736  #define DSL_SUBSTATE_START_PROTOCOL               (0x05u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   737  #define DSL_SUBSTATE_P2MAX_TIMEMONITORING         (0x06u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   738  #define DSL_SUBSTATE_SEND_PENDING_RESPONSE        (0x07u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   739  #define DSL_SUBSTATE_SEND_GENERAL_REJECT          (0x08u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   740  #define DSL_SUBSTATE_SEND_FINAL_RESPONSE          (0x09u)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   741  #define DSL_SUBSTATE_DATA_READY                   (0x0Au)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   742  #define DSL_SUBSTATE_WAIT_FOR_DATA                (0x0Bu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   743  #define DSL_SUBSTATE_WAIT_PAGE_TXCONFIRM          (0x0Cu)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   744  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   745  extern FUNC(void,DCM_CODE) Dcm_Prv_DslStateMachine(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   746  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   747  /**********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   748  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   749  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   750  #if ( ( DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF ) && ( DCM_CFG_DSP_COMMUNICATIONCONTROL_ENABLED != DCM_CFG_OFF ) )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   751  extern FUNC(void,DCM_CODE) Dcm_Prv_CC_Mainfunction (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   752  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   753  extern FUNC(void,DCM_CODE) Dcm_Prv_CC_TxConfirmation (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   754  extern FUNC(void,DCM_CODE) Dcm_Prv_SendResponse(P2CONST(PduInfoType,AUTOMATIC,DCM_INTERN_DATA) adrPduStrucutre_pcst);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   755  extern FUNC(void,DCM_CODE) Dcm_DslDsdRestoreSecaTimer(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   756  #if(DCM_BUFQUEUE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   757  extern FUNC(P2VAR(Dcm_MsgItemType,AUTOMATIC,DCM_INTERN_DATA),DCM_CODE) Dcm_Prv_ProvideFreeBuffer(VAR(uint8,AUTOMATIC) idxProtocolIndex_u8,VAR(boolean,AUTOMATIC) isQueuedReq_b);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   758  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   759  extern FUNC(P2VAR(Dcm_MsgItemType,AUTOMATIC,DCM_INTERN_DATA),DCM_CODE) Dcm_GetActiveBuffer(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   760  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   761  extern FUNC(boolean,DCM_CODE) Dcm_Prv_CheckTotalResponseLength(VAR(Dcm_MsgLenType,AUTOMATIC) TotalResLen_u32 );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   762  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   763  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   764  #if (DCM_CFG_RESTORING_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   765  extern FUNC(uint8,DCM_CODE) Dcm_GetActiveConnectionIdx_u8 (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   766  extern FUNC(void,DCM_CODE) Dcm_DslDsdWarmStart(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   767  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   768  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   769  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   770  #if(DCM_PAGEDBUFFER_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   771  extern FUNC(void, DCM_CODE) Dcm_Prv_PagedBufferTimeout(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   772  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   773  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   774  #if(DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   775  extern FUNC(void,DCM_CODE) Dcm_DsldRoeTimeOut(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   776  extern void Dcm_Prv_ROEResetOnConfirmation(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   777  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   778  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   779  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) || (RBA_DCMPMA_CFG_PLANTMODEACTIVATION_ENABLED !=  DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   780  FUNC(Std_ReturnType,DCM_CODE) Dcm_Prv_CancelTransmit(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   781  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   782  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   783  #if (DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   784  extern FUNC(void,DCM_CODE) Dcm_DsldResetRDPI(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   785  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   786  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   787  extern FUNC(void, DCM_CODE) Dcm_Prv_ResetCopyRxDataStatus ( VAR(PduIdType,AUTOMATIC) RxPduId );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   788  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   789  #if((DCM_CFG_PROTOCOL_PREMPTION_ENABLED != DCM_CFG_OFF) && (DCM_ROE_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   790  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   791  extern FUNC(BufReq_ReturnType, DCM_CODE) Dcm_DsldPersistentRoeHandling_en(
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   792                                           P2CONST(Dcm_Dsld_protocol_tableType,AUTOMATIC,DCM_INTERN_CONST) adrArrivedProt_pcst,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   793                                           VAR(PduLengthType,AUTOMATIC) nrTpSduLength_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   794                                           VAR(PduIdType,AUTOMATIC) dataRxpduId_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   795                                                       );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   796  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   797  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   798  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   799  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   800  /****************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   801  *        APPLICATION API DECLARATIONS
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   802  ****************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   803  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   804  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   805  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   806  #if (((DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF ))   ||     \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   807       (DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF) && (DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   808  extern FUNC(uint32,DCM_CODE) Dcm_GetSignal_u32(VAR(uint8,AUTOMATIC) xDataType_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   809                                             VAR(uint16,AUTOMATIC) posnStart_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   810                                             P2CONST(uint8, AUTOMATIC, DCM_INTERN_DATA) adrReqBuffer_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   811                                             VAR(uint8,AUTOMATIC) dataEndianness_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   812  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   813  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   814  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   815  #if ( \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   816  /* FC_VariationPoint_START */\ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   817  ((DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_OBDMODE1_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_DSP_OBDMODE1_SR_ENABLED!=DCM_CFG_OFF)) ||            \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   818  /* FC_VariationPoint_END */ \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   819       ((DCM_CFG_DSP_READDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_READ_SR_ENABLED != DCM_CFG_OFF)) ||  \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   820       ((DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF)) || \ 
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   821       (DCM_CFG_RBA_DEM_SR_ENABLED != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   822  extern FUNC(void,DCM_CODE) Dcm_StoreSignal(VAR(uint8,AUTOMATIC) xDataType_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   823                                             VAR(uint16,AUTOMATIC) posnStart_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   824                                             P2VAR(uint8, AUTOMATIC, DCM_INTERN_DATA) adrRespBuffer_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   825                                             VAR(uint32,AUTOMATIC) dataSignalValue_u32,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   826                                             VAR(uint8,AUTOMATIC) dataEndianness_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   827  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   828  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   829  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   830  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   831  #if(DCM_CFG_RDPI_ENABLED!=DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   832  typedef enum
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   833  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   834      DCM_RDPI_NO_TRANMISSION,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   835      DCM_RDPI_SLOW_RATE,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   836      DCM_RDPI_MEDIUM_RATE,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   837      DCM_RDPI_FAST_RATE
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   838  }Dcm_RdpiTxModeType_ten;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   839  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   840  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   841  typedef struct
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   842  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   843    uint32 cntrTime_u32;         /* Increment in each time raster if the overflowValue > 0 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   844    uint16 dataId_u16;             /* periodicId */ /*---dataRdpiId_u16 */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   845    uint16 idxPeriodicId_u16;          /* Index of the periodic ID in Dcm_DIDConfig Table */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   846    Dcm_RdpiTxModeType_ten dataOverflowValue_en;  /* Off: -1, SlowRate, MediumRate, FastRate */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   847    boolean dataRange_b;          /*Flag to indicate if the did is a range did or not*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   848  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   849  } Dcm_PeriodicInfoType_tst;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   850  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   851  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   852  #if(DCM_CFG_MAX_DID_SCHEDULER>0)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   853  #define DCM_START_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   854  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   855  extern VAR(Dcm_PeriodicInfoType_tst,DCM_CODE) Dcm_PeriodicInfo_st[DCM_CFG_MAX_DID_SCHEDULER];
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   856  #define DCM_STOP_SEC_VAR_CLEARED_UNSPECIFIED /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   857  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   858  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   859  #define DCM_START_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   860  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   861  extern VAR(uint8,       DCM_VAR)      Dcm_NumOfActivePeriodicId_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   862  #define DCM_STOP_SEC_VAR_CLEARED_8 /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   863  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   864  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   865  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   866  extern FUNC(void,DCM_CODE) Dcm_DsldPeriodicScheduler(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   867  extern FUNC(void,DCM_CODE) Dcm_RdpiMainFunction(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   868  extern FUNC(void,DCM_CODE) Dcm_DsldPeriodicSchedulerIni(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   869  extern FUNC(void,DCM_CODE) Dcm_GetRdpiType2Index(P2VAR(uint8,AUTOMATIC, DCM_INTERN_DATA) idxRdpi2TxPduId_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   870  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   871  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   872  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   873  #if (DCM_ROE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   874  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   875  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   876  extern FUNC(void,DCM_CODE) Dcm_DsldProcessRoeQueue(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   877  #if(DCM_CFG_DSP_ROEONDTCSTATUSCHANGE_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   878  extern FUNC(void,DCM_CODE) Dcm_RestoreROEDtcEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   879  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   880  #if(DCM_CFG_DSP_ROEDID_ENABLED!=DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   881  extern FUNC(void,DCM_CODE) Dcm_RestoreROEDidEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   882  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   883  extern FUNC(void,DCM_CODE) Dcm_ResetROEEvents(void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   884  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   885  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   886  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   887  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   888  #if((DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_SPLITRESPSUPPORTEDFORKWP != DCM_CFG_OFF))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   889  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   890  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   891  extern FUNC(void,DCM_CODE) Dcm_KWPConfirmationForSplitResp(VAR(Dcm_ConfirmationStatusType,AUTOMATIC) status);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   892  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   893  #include "Dcm_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   894  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   895  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   896  LOCAL_INLINE FUNC(void,DCM_CODE) Dcm_DspConfirmation
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   897                                         (
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   898                               VAR(Dcm_IdContextType,AUTOMATIC) dataIdContext_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   899                               VAR(PduIdType,AUTOMATIC) dataRxPduId_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   900                               VAR(uint16,AUTOMATIC)dataSourceAddress_u16,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   901                               VAR(Dcm_ConfirmationStatusType,AUTOMATIC) status_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   902                                         )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   903  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   904  {    if(Dcm_DsldSrvTable_pcst[Dcm_DsldGlobal_st.idxService_u8].Dcm_ConfirmationService !=((Dcm_ConfirmationApiType)NULL_PTR))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   905      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   906          (Dcm_DsldSrvTable_pcst[Dcm_DsldGlobal_st.idxService_u8].Dcm_ConfirmationService)(dataIdContext_u8,dataRxPduId_u8,dataSourceAddress_u16,status_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   907      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   908  }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   909  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   910  LOCAL_INLINE FUNC(boolean,DCM_CODE) DCM_IS_KWPPROT_ACTIVE(void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   911  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   912      boolean retval_b = FALSE;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   913  #if( DCM_CFG_KWP_ENABLED != DCM_CFG_OFF )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   914      retval_b = (((Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].protocolid_u8) & 0xF0u) == 0x80u);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   915  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   916      return retval_b;
	mov	d15,#0
.L117:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   916      return retval_b;      (inlined)
	j	.L7

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreDslDsd\DcmCore_DslDsd_Prot.h	   917  }      (inlined)
.L7:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   109  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   110          if(DCM_IS_KWPPROT_ACTIVE() == FALSE)
	jne	d15,#0,.L8
.L209:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   111          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   112              /* lock the ECU in any UDS session transition*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   113              Dcm_DsldGlobal_st.idxActiveSecurity_u8 = 0x00u;
	mov	d15,#0
.L210:
	st.b	[a15]16,d15
.L8:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   114          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   115  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   116  #if((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   117          Dcm_RoutineSetSesCtrlType(SesCtrlType_u8);
	mov	d4,d5
.L112:
	call	Dcm_RoutineSetSesCtrlType
.L113:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   118  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   119  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   120  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   121  #if(DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   122          Dcm_Prv_ResetRoeEvents();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   123  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   124  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   125  #if((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_IOCBI_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   126          sessionMask_u32 = Dcm_DsldGetActiveSessionMask_u32();
	call	Dcm_DsldGetActiveSessionMask_u32
.L211:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   127  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   128          /*The below function code will loop through all the IOCBI DIDs and call all the returncontrol to ECU functions
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   129           *  to reset all the  active IOctrls supported in the current session level*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   130          Dcm_ResetActiveIoCtrl(sessionMask_u32,0x1u,TRUE);
	mov	d5,#1
.L212:
	mov	d6,#1
.L118:
	mov	d4,d2
.L119:
	call	Dcm_ResetActiveIoCtrl
.L120:
	j	.L9
.L6:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   131  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   132      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   133      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   134      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   135          DCM_DET_ERROR(DCM_SETSESSIONLEVEL , DCM_E_SESSION_NOT_CONFIGURED)
	mov	d4,#53
.L121:
	mov	d5,#0
.L122:
	mov	d6,#167
	mov	d7,#19
	call	Det_ReportError
.L9:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   136      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   137  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   138      return isSessionAvailable;
	mov	d2,d8
.L123:
	j	.L10

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   139  }
.L10:
	ret
.L97:
	
__Dcm_Prv_SetNonDefaultSesCtrlType_function_end:
	.size	Dcm_Prv_SetNonDefaultSesCtrlType,__Dcm_Prv_SetNonDefaultSesCtrlType_function_end-Dcm_Prv_SetNonDefaultSesCtrlType
.L72:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_Prv_SetDefaultSesCtrlType',code,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.text.Dcm_Dsl_Session.Dcm_Prv_SetDefaultSesCtrlType'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   140  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   141  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   142  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   143  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   144  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   145  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   146  /***********************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   147   Function name    : Dcm_Prv_SetDefaultSesCtrlType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   148   Syntax           : Dcm_Prv_SetDefaultSesCtrlType(CurrentSession_u8,SesCtrlType_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   149   Description      : This function is used to Set default session control type
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   150   Parameter        : Dcm_SesCtrlType, Dcm_SesCtrlType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   151   Return value     : None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   152  ***********************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   153  static FUNC(void,DCM_CODE) Dcm_Prv_SetDefaultSesCtrlType (VAR(Dcm_SesCtrlType,AUTOMATIC) CurrentSession_u8,
; Function Dcm_Prv_SetDefaultSesCtrlType
.L28:
Dcm_Prv_SetDefaultSesCtrlType:	.type	func
	mov	e8,d5,d4
.L217:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   154          VAR(Dcm_SesCtrlType, AUTOMATIC) SesCtrlType_u8)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   155  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   156  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   157      VAR(uint8,AUTOMATIC) idxKwpTiming_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   158  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   159  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   160      SchM_Enter_Dcm_DsldTimer_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   161  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   162      if(DCM_IS_KWPPROT_ACTIVE() == FALSE)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   163      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   164          /* set the default session time for UDS session change */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   165          Dcm_DsldTimer_st.dataTimeoutP2max_u32    =  DCM_CFG_DEFAULT_P2MAX_TIME;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   166          Dcm_DsldTimer_st.dataTimeoutP2StrMax_u32 =  DCM_CFG_DEFAULT_P2STARMAX_TIME;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   167      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   168      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   169      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   170          /* Set the default timings after default session transition */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   171          idxKwpTiming_u8 = Dcm_DsldProtocol_pcst[Dcm_DsldGlobal_st.idxCurrentProtocol_u8].timings_idx_u8;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   172          Dcm_DsldTimer_st.dataTimeoutP2max_u32 = Dcm_Dsld_default_timings_acs[idxKwpTiming_u8].P2_max_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   173          Dcm_DsldTimer_st.dataTimeoutP3max_u32 = Dcm_Dsld_default_timings_acs[idxKwpTiming_u8].P3_max_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   174          Dcm_DsldTimer_st.dataTimeoutP2StrMax_u32 = Dcm_DsldTimer_st.dataTimeoutP3max_u32;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   175      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   176  #else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   177      /* set the default session time for UDS session change */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   178      Dcm_DsldTimer_st.dataTimeoutP2max_u32    =  DCM_CFG_DEFAULT_P2MAX_TIME;
	movh.a	a15,#@his(Dcm_DsldTimer_st)
	lea	a15,[a15]@los(Dcm_DsldTimer_st)
.L218:
	mov.u	d15,#50000
.L219:
	st.w	[a15]4,d15
.L220:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   179      Dcm_DsldTimer_st.dataTimeoutP2StrMax_u32 =  DCM_CFG_DEFAULT_P2STARMAX_TIME;
	mov	d15,#19264
	addih	d15,d15,#76
.L221:
	st.w	[a15],d15
.L222:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   180  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   181      SchM_Exit_Dcm_DsldTimer_NoNest();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   182  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   183      /* lock the ECU */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   184      Dcm_DsldGlobal_st.idxActiveSecurity_u8 = 0x00u;
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L223:
	mov	d15,#0
.L224:
	st.b	[a15]16,d15
.L225:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   185      /* set the session index */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   186      Dcm_DsldGlobal_st.idxActiveSession_u8 = 0x00u;
	mov	d15,#0
.L226:
	st.b	[a15]3,d15
.L227:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   187  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   188  #if((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_IOCBI_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   189      /**The code which would loop through all the IOCBI DIDs and call all the returncontrol to ECU functions to reset all the  active IOctrls
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   190         supported in the current session level*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   191      Dcm_ResetActiveIoCtrl(0x1,0x1,TRUE);
	mov	d4,#1
.L124:
	mov	d5,#1
.L125:
	mov	d6,#1
	call	Dcm_ResetActiveIoCtrl
.L126:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   192  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   193  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   194  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   195      /*Stopping of all the started routines on transition to default session*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   196  #if((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   197      Dcm_RoutineSetSesCtrlType(SesCtrlType_u8);
	mov	d4,d9
.L127:
	call	Dcm_RoutineSetSesCtrlType
.L128:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   198  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   199  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   200       /*Check if transition is from NON-Default to Default session*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   201      if(CurrentSession_u8 != Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX])
	movh.a	a15,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a15,[a15]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a15,[a15]
.L228:
	ld.bu	d15,[a15]
.L129:
	jeq	d15,d8,.L11
.L11:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   202      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   203  #if (DCM_CFG_RDPI_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   204          Dcm_DsldResetRDPI();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   205  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   206  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   207  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   208  #if(DCM_CFG_DSP_RESPONSEONEVENT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   209          Dcm_Prv_ResetRoeEvents();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   210  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   211      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   212  }
	ret
.L109:
	
__Dcm_Prv_SetDefaultSesCtrlType_function_end:
	.size	Dcm_Prv_SetDefaultSesCtrlType,__Dcm_Prv_SetDefaultSesCtrlType_function_end-Dcm_Prv_SetDefaultSesCtrlType
.L77:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_Prv_SetSesCtrlType',code,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.text.Dcm_Dsl_Session.Dcm_Prv_SetSesCtrlType'
	.align	2
	
	.global	Dcm_Prv_SetSesCtrlType

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   213  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   214  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   215  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   216   ***********************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   217   *  Dcm_Prv_SetSesCtrlType :To set the new session control type value in DCM
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   218   *  \param   dataSesCtrlType_u8  New session control type value, Content is according to diagnosticSessionType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   219   *                         parameter of DiagnosticSessionControl request
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   220   *  \retval        None
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   221   *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   222   *
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   223   ***********************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   224  /*TRACE[SWS_Dcm_00139]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   225  FUNC(void,DCM_CODE) Dcm_Prv_SetSesCtrlType (VAR(Dcm_SesCtrlType, AUTOMATIC) SesCtrlType_u8)
; Function Dcm_Prv_SetSesCtrlType
.L30:
Dcm_Prv_SetSesCtrlType:	.type	func
	mov	d8,d4
.L131:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   226  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   227      VAR(Dcm_SesCtrlType,AUTOMATIC) currentSession_u8 = 0u;
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   228  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   229      if(FALSE != Dcm_isSessionStored_b)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   230      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   231          currentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.PreviousSessionIndex];
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L166:
	movh.a	a2,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a2,[a2]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a2,[a2]
.L167:
	movh.a	a4,#@his(Dcm_isSessionStored_b)
	lea	a4,[a4]@los(Dcm_isSessionStored_b)
	ld.bu	d15,[a4]
.L168:
	jeq	d15,#0,.L12
.L169:
	ld.bu	d15,[a15]36
.L170:
	addsc.a	a15,a2,d15,#0
	ld.bu	d9,[a15]
.L132:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   232          Dcm_isSessionStored_b = FALSE;
	mov	d15,#0
.L171:
	st.b	[a4],d15
.L172:
	j	.L13
.L12:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   233      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   234      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   235      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   236          currentSession_u8 = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.idxActiveSession_u8];
	ld.bu	d15,[a15]3
.L173:
	addsc.a	a15,a2,d15,#0
	ld.bu	d9,[a15]
.L13:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   237      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   238  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   239      if(SesCtrlType_u8 == Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX])
	ld.bu	d15,[a2]
.L174:
	jne	d15,d8,.L14
.L175:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   240      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   241          Dcm_Prv_SetDefaultSesCtrlType(currentSession_u8,SesCtrlType_u8);
	mov	e4,d8,d9
.L130:
	call	Dcm_Prv_SetDefaultSesCtrlType
.L176:
	j	.L15
.L14:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   242      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   243      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   244      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   245          if(FALSE == Dcm_Prv_SetNonDefaultSesCtrlType(currentSession_u8,SesCtrlType_u8))
	mov	e4,d8,d9
.L133:
	call	Dcm_Prv_SetNonDefaultSesCtrlType
.L177:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   246          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   247              /* requested session is not configured in DSC service give indication to Application */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   248              /* without changing the session.                                              */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   249              SesCtrlType_u8 = currentSession_u8;
	sel	d8,d2,d8,d9
.L16:
.L15:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   250          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   251      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   252  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   253  #if ((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_SECURITYACCESS_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   254      Dcm_Dsp_SecaSessIni();
	call	Dcm_Dsp_SecaSessIni
.L178:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   255  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   256  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   257  #if ((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_CONTROLDTCSETTING_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   258      Dcm_ControlDtcSettingExit();
	call	Dcm_ControlDtcSettingExit
.L89:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     1  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     2  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     3  #ifndef DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     4  #define DCMCORE_DSLDSD_INL_H
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     5  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     6  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     7  /* Included  header files                                                                         */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     8  /**************************************************************************************************/
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	     9  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    10  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    11  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    12   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    13   * Dcm_Prv_ReloadS3Timer :  Inline function to start P3 timer monitoring
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    14   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    15   * \param           None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    16   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    17   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    18   * \retval          None
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    19   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    20   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    21   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    22   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    23  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    24  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    25  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    26  LOCAL_INLINE FUNC(void, DCM_CODE) Dcm_Prv_ReloadS3Timer (void)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    27  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    28  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    29  #if(DCM_CFG_KWP_ENABLED != DCM_CFG_OFF)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    30  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    31      if(DCM_IS_KWPPROT_ACTIVE() != FALSE)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    32      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    33          /* if KWP is running protocol start P3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    34  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    35          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, Dcm_DsldTimer_st.dataTimeoutP3max_u32,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    36      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    37      else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    38      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    39          /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    40  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    41          DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    42      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    43  #else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    44      /* if UDS is running protocol start S3 timer */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    45  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    46      DCM_TimerStart(Dcm_DsldGlobal_st.dataTimeoutMonitor_u32, DCM_CFG_S3MAX_TIME,Dcm_P2OrS3StartTick_u32,Dcm_P2OrS3TimerStatus_uchr)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    47  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    48  }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    49  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    50  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    51   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    52   * Dcm_StartProtocol : Function to call all RTE configured functions.
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    53   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    54   * \param           ProtocolID: protocol id
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    55   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    56   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    57   * \retval          Std_ReturnType (E_OK,E_NOT_OK,DCM_E_PROTOCOL_NOT_ALLOWED)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    58   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    59   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    60   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    61   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    62  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    63  LOCAL_INLINE FUNC(Std_ReturnType,DCM_CODE) Dcm_StartProtocol(VAR(Dcm_ProtocolType,AUTOMATIC) ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    64  LOCAL_INLINE FUNC(void,DCM_CODE) Dcm_StopProtocol(VAR(Dcm_ProtocolType,AUTOMATIC) ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    65  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    66  LOCAL_INLINE  FUNC(Std_ReturnType,DCM_CODE) Dcm_StartProtocol(VAR(Dcm_ProtocolType,AUTOMATIC) ProtocolID)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    67  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    68  #if((DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_CALL_BACK_NUM_PORTS !=0))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    69      VAR(uint32_least,AUTOMATIC) idxIndex_qu32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    70  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    71      VAR(Std_ReturnType,AUTOMATIC) dataReturnType_u8;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    72  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    73      /* Call DcmAppl function to start the protocol */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    74      dataReturnType_u8 = DcmAppl_DcmStartProtocol(ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    75  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    76  #if((DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_CALL_BACK_NUM_PORTS !=0))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    77      if(dataReturnType_u8 == E_OK)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    78      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    79          /* Call all configured functions in RTE */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    80          for(idxIndex_qu32 = 0x00 ; idxIndex_qu32<Rte_NPorts_CallbackDCMRequestServices_R() ; idxIndex_qu32++)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    81          {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    82              dataReturnType_u8 =((Rte_Ports_CallbackDCMRequestServices_R())[idxIndex_qu32].Call_StartProtocol)(ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    83  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    84              if(Dcm_IsInfrastructureErrorPresent_b(dataReturnType_u8) != FALSE )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    85              {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    86                  dataReturnType_u8 = DCM_INFRASTRUCTURE_ERROR;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    87  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    88              }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    89              else if((dataReturnType_u8 == DCM_E_PROTOCOL_NOT_ALLOWED) || (dataReturnType_u8 == E_NOT_OK))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    90              {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    91                  /* Do nothing */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    92              }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    93              else
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    94              {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    95                  dataReturnType_u8 = E_OK;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    96              }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    97              if(dataReturnType_u8 != E_OK)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    98              {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	    99                  break;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   100              }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   101          }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   102      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   103  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   104      return(dataReturnType_u8);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   105  }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   106  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   107  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   108   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   109   * Dcm_StopProtocol : Function to call all RTE configured functions.
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   110   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   111   * \param           ProtocolID: protocol id
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   112   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   113   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   114   * \retval          void
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   115   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   116   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   117   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   118   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   119  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   120  LOCAL_INLINE  FUNC(void,DCM_CODE) Dcm_StopProtocol(VAR(Dcm_ProtocolType,AUTOMATIC) ProtocolID)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   121  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   122  #if((DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_CALL_BACK_NUM_PORTS !=0))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   123      VAR(uint32_least,AUTOMATIC) idxIndex_qu32;
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   124  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   125  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   126      /* Call DcmAppl function to stop the protocol */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   127      (void)DcmAppl_DcmStopProtocol(ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   128  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   129  #if((DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF) && (DCM_CFG_CALL_BACK_NUM_PORTS!=0))
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   130      /* Call all configured functions in RTE */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   131      for(idxIndex_qu32 =0x00 ; idxIndex_qu32<Rte_NPorts_CallbackDCMRequestServices_R() ; idxIndex_qu32++)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   132      {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   133          (void)((Rte_Ports_CallbackDCMRequestServices_R())[idxIndex_qu32].Call_StopProtocol)(ProtocolID);
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   134      }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   135  #endif
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   136  }
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   137  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   138  /**
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   139   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   140   * Dcm_SesCtrlChangeIndication : Function to call all RTE configured functions.
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   141   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   142   * \param           dataSesCtrlTypeOld_u8: Old  session
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   143   *                  dataSesCtrlTypeNew_u8: Changed session
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   144   *
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   145   * \retval          Std_ReturnType (but ignored)
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   146   * \seealso
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   147   * \usedresources
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   148   **************************************************************************************************
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   149   */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   150  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   151  LOCAL_INLINE FUNC(Std_ReturnType,DCM_CODE) Dcm_SesCtrlChangeIndication(
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   152          VAR(Dcm_SesCtrlType,AUTOMATIC) dataSesCtrlTypeOld_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   153          VAR(Dcm_SesCtrlType,AUTOMATIC) dataSesCtrlTypeNew_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   154  );
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   155  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   156  LOCAL_INLINE FUNC(Std_ReturnType,DCM_CODE) Dcm_SesCtrlChangeIndication(
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   157          VAR(Dcm_SesCtrlType,AUTOMATIC) dataSesCtrlTypeOld_u8,
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   158          VAR(Dcm_SesCtrlType,AUTOMATIC) dataSesCtrlTypeNew_u8
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   159  )
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   160  {
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   161  
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   162      /* Call DcmAppl function to indicate the session change */
; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   163      DcmAppl_DcmSesCtrlChangeIndication(dataSesCtrlTypeOld_u8,dataSesCtrlTypeNew_u8);
	mov	e4,d8,d9
	call	DcmAppl_DcmSesCtrlChangeIndication
.L179:

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   164      return(E_OK);      (inlined)
	j	.L17

; .\BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_Inl.h	   165  }      (inlined)
.L17:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   259  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   260  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   261  #if ((DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF) && \ 
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   262          ((DCM_CFG_DSP_REQUESTUPLOAD_ENABLED != DCM_CFG_OFF)||(DCM_CFG_DSP_REQUESTDOWNLOAD_ENABLED!=DCM_CFG_OFF)))
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   263      Dcm_DspDeactivateRequestUploadDownloadPermission();
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   264  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   265  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   266      (void)Dcm_SesCtrlChangeIndication(currentSession_u8, SesCtrlType_u8);
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   267  }
	ret
.L85:
	
__Dcm_Prv_SetSesCtrlType_function_end:
	.size	Dcm_Prv_SetSesCtrlType,__Dcm_Prv_SetSesCtrlType_function_end-Dcm_Prv_SetSesCtrlType
.L57:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_GetSesCtrlType',code,cluster('Dcm_GetSesCtrlType')
	.sect	'.text.Dcm_Dsl_Session.Dcm_GetSesCtrlType'
	.align	2
	
	.global	Dcm_GetSesCtrlType

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   268  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   269  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   270  /**
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   271   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   272   * Dcm_GetSesCtrlType : API to get the active session id
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   273   * \param           SesCtrlType
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   274   *
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   275   *
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   276   * \retval          active session id
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   277   * \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   278   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   279   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   280   */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   281  FUNC( Std_ReturnType, DCM_CODE) Dcm_GetSesCtrlType(P2VAR(Dcm_SesCtrlType, AUTOMATIC, DCM_APPL_DATA)  SesCtrlType)
; Function Dcm_GetSesCtrlType
.L32:
Dcm_GetSesCtrlType:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   282  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   283      if(SesCtrlType != NULL_PTR)
	jz.a	a4,.L18
.L143:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   284      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   285          /*Check if the Dcm session flag is set to get the active session id*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   286          if(FALSE != Dcm_isSessionStored_b)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   287          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   288              *SesCtrlType = Dcm_DsldSessionTable_pcu8[Dcm_DsldGlobal_st.PreviousSessionIndex];
	movh.a	a15,#@his(Dcm_DsldGlobal_st)
	lea	a15,[a15]@los(Dcm_DsldGlobal_st)
.L144:
	movh.a	a2,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a2,[a2]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a2,[a2]
.L145:
	movh.a	a5,#@his(Dcm_isSessionStored_b)
	lea	a5,[a5]@los(Dcm_isSessionStored_b)
	ld.bu	d15,[a5]
.L146:
	jeq	d15,#0,.L19
.L147:
	ld.bu	d15,[a15]36
.L148:
	addsc.a	a15,a2,d15,#0
	ld.bu	d15,[a15]
.L149:
	st.b	[a4],d15
.L150:
	j	.L20
.L19:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   289          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   290          else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   291          {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   292              *SesCtrlType = Dcm_DsldSessionTable_pcu8[ Dcm_DsldGlobal_st.idxActiveSession_u8];
	ld.bu	d15,[a15]3
.L151:
	addsc.a	a15,a2,d15,#0
	ld.bu	d15,[a15]
.L152:
	st.b	[a4],d15
.L20:
	j	.L21
.L18:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   293          }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   294      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   295      else
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   296      {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   297          /* DET ERROR REPORT */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   298          DCM_DET_ERROR(DCM_SETSESSION_ID, DCM_E_PARAM_POINTER);
	mov	d4,#53
	mov	d5,#0
	mov	d6,#149
	mov	d7,#7
	call	Det_ReportError
.L21:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   299      }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   300  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   301      return(E_OK);
	mov	d2,#0
.L153:
	j	.L22

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   302  }
.L22:
	ret
.L81:
	
__Dcm_GetSesCtrlType_function_end:
	.size	Dcm_GetSesCtrlType,__Dcm_GetSesCtrlType_function_end-Dcm_GetSesCtrlType
.L47:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_ResetToDefaultSession',code,cluster('Dcm_ResetToDefaultSession')
	.sect	'.text.Dcm_Dsl_Session.Dcm_ResetToDefaultSession'
	.align	2
	
	.global	Dcm_ResetToDefaultSession

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   303  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   304  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   305  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   306  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   307  **********************************************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   308  *  Dcm_ResetToDefaultSession: The call to this function allows the application to request for the reset of the current session to Default Session.
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   309  *  \param
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   310  *  \retval                  : E_OK - The request for resetting the session to default session is accepted.The session transition will be processed in the next Dcm main function
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   311  *                             E_NOT_OK - If Dcm is not free and processing some other request.The application has to call the service again in this case to Reset the session to Default
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   312  *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   313  **********************************************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   314  /*TRACE[SWS_Dcm_01062]*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   315  FUNC(Std_ReturnType,DCM_CODE) Dcm_ResetToDefaultSession(void)
; Function Dcm_ResetToDefaultSession
.L34:
Dcm_ResetToDefaultSession:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   316  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   317     /* Set the variable to TRUE to process the request in the next Dcm main function
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   318      * to avoid long runtime in an interrupt context */
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   319     Dcm_isResetToDefaultRequested_b = TRUE;
	movh.a	a15,#@his(Dcm_isResetToDefaultRequested_b)
	lea	a15,[a15]@los(Dcm_isResetToDefaultRequested_b)
.L158:
	mov	d15,#1
.L159:
	st.b	[a15],d15
.L160:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   320     return (E_OK);
	mov	d2,#0
.L161:
	j	.L23

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   321  }
.L23:
	ret
.L84:
	
__Dcm_ResetToDefaultSession_function_end:
	.size	Dcm_ResetToDefaultSession,__Dcm_ResetToDefaultSession_function_end-Dcm_ResetToDefaultSession
.L52:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_Prv_ProcessResetToDefaultSession',code,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.text.Dcm_Dsl_Session.Dcm_Prv_ProcessResetToDefaultSession'
	.align	2
	
	.global	Dcm_Prv_ProcessResetToDefaultSession

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   322  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   323  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   324  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   325  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   326  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   327  ***********************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   328  *  Dcm_Prv_ProcessResetToDefaultSession: The call to this process request to Reset To Default Session (done from
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   329  *  Main function context)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   330  *  \param
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   331  *  \retval                  : void
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   332  *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   333  ***********************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   334  FUNC(void, DCM_CODE) Dcm_Prv_ProcessResetToDefaultSession(void)
; Function Dcm_Prv_ProcessResetToDefaultSession
.L36:
Dcm_Prv_ProcessResetToDefaultSession:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   335  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   336     if(FALSE != Dcm_isResetToDefaultRequested_b)
	movh.a	a15,#@his(Dcm_isResetToDefaultRequested_b)
	lea	a15,[a15]@los(Dcm_isResetToDefaultRequested_b)
	ld.bu	d15,[a15]
.L184:
	jeq	d15,#0,.L24
.L185:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   337     {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   338         Dcm_Prv_SetSesCtrlType(Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX]);
	movh.a	a12,#@his(Dcm_DsldSessionTable_pcu8)
	lea	a12,[a12]@los(Dcm_DsldSessionTable_pcu8)
	ld.a	a2,[a12]
.L186:
	ld.bu	d4,[a2]
	call	Dcm_Prv_SetSesCtrlType
.L187:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   339  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   340  #if (DCM_CFG_DSPUDSSUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   341         #if(DCM_CFG_DSP_DIAGNOSTICSESSIONCONTROL_ENABLED!=DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   342  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   343             #if(DCM_CFG_RTESUPPORT_ENABLED != DCM_CFG_OFF)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   344                 (void)SchM_Switch_Dcm_DcmDiagnosticSessionControl(RTE_MODE_DcmDiagnosticSessionControl_DEFAULT_SESSION);
	mov	d4,#0
	call	SchM_Switch_Dcm_DcmDiagnosticSessionControl
.L188:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   345             #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   346  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   347             (void)DcmAppl_Switch_DcmDiagnosticSessionControl(Dcm_DsldSessionTable_pcu8[DCM_DEFAULT_SESSION_IDX]);
	ld.a	a2,[a12]
.L189:
	ld.bu	d4,[a2]
	call	DcmAppl_Switch_DcmDiagnosticSessionControl
.L190:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   348         #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   349  #endif
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   350         Dcm_isResetToDefaultRequested_b = FALSE;
	mov	d15,#0
.L191:
	st.b	[a15],d15
.L24:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   351     }
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   352  }
	ret
.L95:
	
__Dcm_Prv_ProcessResetToDefaultSession_function_end:
	.size	Dcm_Prv_ProcessResetToDefaultSession,__Dcm_Prv_ProcessResetToDefaultSession_function_end-Dcm_Prv_ProcessResetToDefaultSession
.L62:
	; End of function
	
	.sdecl	'.text.Dcm_Dsl_Session.Dcm_Prv_ResetDefaultSessionRequestFlag',code,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.text.Dcm_Dsl_Session.Dcm_Prv_ResetDefaultSessionRequestFlag'
	.align	2
	
	.global	Dcm_Prv_ResetDefaultSessionRequestFlag

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   353  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   354  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   355  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   356  /*
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   357  ***********************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   358  *  Dcm_Prv_ResetDefaultSessionRequestFlag: The API called to reset the flag indicating a RTD request
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   359  *  Main function context)
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   360  *  \param
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   361  *  \retval                  : void
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   362  *  \seealso
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   363  ***********************************************************************************************************/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   364  FUNC(void, DCM_CODE) Dcm_Prv_ResetDefaultSessionRequestFlag(void)
; Function Dcm_Prv_ResetDefaultSessionRequestFlag
.L38:
Dcm_Prv_ResetDefaultSessionRequestFlag:	.type	func

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   365  {
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   366     Dcm_isResetToDefaultRequested_b = FALSE;
	movh.a	a15,#@his(Dcm_isResetToDefaultRequested_b)
	lea	a15,[a15]@los(Dcm_isResetToDefaultRequested_b)
.L196:
	mov	d15,#0
.L197:
	st.b	[a15],d15
.L198:

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   367  }
	ret
.L96:
	
__Dcm_Prv_ResetDefaultSessionRequestFlag_function_end:
	.size	Dcm_Prv_ResetDefaultSessionRequestFlag,__Dcm_Prv_ResetDefaultSessionRequestFlag_function_end-Dcm_Prv_ResetDefaultSessionRequestFlag
.L67:
	; End of function
	
	.sdecl	'.bss.Dcm_Dsl_Session.Dcm_isResetToDefaultRequested_b',data,cluster('Dcm_isResetToDefaultRequested_b')
	.sect	'.bss.Dcm_Dsl_Session.Dcm_isResetToDefaultRequested_b'
Dcm_isResetToDefaultRequested_b:	.type	object
	.size	Dcm_isResetToDefaultRequested_b,1
	.space	1
	.calls	'Dcm_Prv_SetNonDefaultSesCtrlType','Dcm_RoutineSetSesCtrlType'
	.calls	'Dcm_Prv_SetNonDefaultSesCtrlType','Dcm_DsldGetActiveSessionMask_u32'
	.calls	'Dcm_Prv_SetNonDefaultSesCtrlType','Dcm_ResetActiveIoCtrl'
	.calls	'Dcm_Prv_SetNonDefaultSesCtrlType','Det_ReportError'
	.calls	'Dcm_Prv_SetDefaultSesCtrlType','Dcm_ResetActiveIoCtrl'
	.calls	'Dcm_Prv_SetDefaultSesCtrlType','Dcm_RoutineSetSesCtrlType'
	.calls	'Dcm_Prv_SetSesCtrlType','Dcm_Prv_SetDefaultSesCtrlType'
	.calls	'Dcm_Prv_SetSesCtrlType','Dcm_Prv_SetNonDefaultSesCtrlType'
	.calls	'Dcm_Prv_SetSesCtrlType','Dcm_Dsp_SecaSessIni'
	.calls	'Dcm_Prv_SetSesCtrlType','Dcm_ControlDtcSettingExit'
	.calls	'Dcm_Prv_SetSesCtrlType','DcmAppl_DcmSesCtrlChangeIndication'
	.calls	'Dcm_GetSesCtrlType','Det_ReportError'
	.calls	'Dcm_Prv_ProcessResetToDefaultSession','Dcm_Prv_SetSesCtrlType'
	.calls	'Dcm_Prv_ProcessResetToDefaultSession','SchM_Switch_Dcm_DcmDiagnosticSessionControl'
	.calls	'Dcm_Prv_ProcessResetToDefaultSession','DcmAppl_Switch_DcmDiagnosticSessionControl'
	.calls	'Dcm_Prv_SetNonDefaultSesCtrlType','',0
	.calls	'Dcm_Prv_SetDefaultSesCtrlType','',0
	.calls	'Dcm_Prv_SetSesCtrlType','',0
	.calls	'Dcm_GetSesCtrlType','',0
	.calls	'Dcm_ResetToDefaultSession','',0
	.calls	'Dcm_Prv_ProcessResetToDefaultSession','',0
	.extern	Dcm_Dsp_SecaSessIni
	.extern	DcmAppl_Switch_DcmDiagnosticSessionControl
	.extern	SchM_Switch_Dcm_DcmDiagnosticSessionControl
	.extern	Det_ReportError
	.extern	Dcm_DsldGetActiveSessionMask_u32
	.extern	Dcm_DsldGlobal_st
	.extern	Dcm_DsldTimer_st
	.extern	Dcm_isSessionStored_b
	.extern	Dcm_DsldSessionTable_pcu8
	.extern	Dcm_ControlDtcSettingExit
	.extern	Dcm_ResetActiveIoCtrl
	.extern	Dcm_RoutineSetSesCtrlType
	.extern	DcmAppl_DcmSesCtrlChangeIndication
	.calls	'Dcm_Prv_ResetDefaultSessionRequestFlag','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L40:
	.word	17837
	.half	3
	.word	.L41
	.byte	4
.L39:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L42
.L80:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	145
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	162
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	162
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	145
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	145
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	145
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	162
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	145
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	145
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	475
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	497
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	497
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	145
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	475
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	475
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	497
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	145
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	145
	.byte	6,0
.L101:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	814
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	830
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	830
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	145
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	814
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	814
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	145
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	830
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	145
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	145
	.byte	6,0
.L105:
	.byte	7
	.byte	'DCM_IS_KWPPROT_ACTIVE',0,3,4,142,7,37
	.word	145
	.byte	1,1
.L107:
	.byte	6,0
.L88:
	.byte	7
	.byte	'Dcm_SesCtrlChangeIndication',0,3,5,156,1,44
	.word	145
	.byte	1,1
.L90:
	.byte	5
	.byte	'dataSesCtrlTypeOld_u8',0,5,157,1,40
	.word	145
.L92:
	.byte	5
	.byte	'dataSesCtrlTypeNew_u8',0,5,158,1,40
	.word	145
.L94:
	.byte	6,0,8
	.byte	'Dcm_Dsp_SecaSessIni',0,6,157,2,28,1,1,1,1,9
	.byte	'DcmAppl_Switch_DcmDiagnosticSessionControl',0,7,43,29,1,1,1,1,5
	.byte	'SessionMode',0,7,43,103
	.word	145
	.byte	0,10
	.word	167
	.byte	11
	.word	197
	.byte	11
	.word	212
	.byte	6,0,10
	.word	235
	.byte	11
	.word	267
	.byte	11
	.word	282
	.byte	6,0,10
	.word	305
	.byte	11
	.word	345
	.byte	11
	.word	359
	.byte	6,0,10
	.word	382
	.byte	11
	.word	415
	.byte	11
	.word	429
	.byte	11
	.word	450
	.byte	6,0,10
	.word	502
	.byte	11
	.word	533
	.byte	11
	.word	548
	.byte	6,0,10
	.word	571
	.byte	11
	.word	604
	.byte	11
	.word	619
	.byte	6,0,10
	.word	642
	.byte	11
	.word	683
	.byte	11
	.word	697
	.byte	6,0,10
	.word	720
	.byte	11
	.word	754
	.byte	11
	.word	768
	.byte	11
	.word	789
	.byte	6,0,10
	.word	835
	.byte	11
	.word	866
	.byte	11
	.word	881
	.byte	6,0,10
	.word	904
	.byte	11
	.word	937
	.byte	11
	.word	952
	.byte	6,0,10
	.word	975
	.byte	11
	.word	1016
	.byte	11
	.word	1030
	.byte	6,0,10
	.word	1053
	.byte	11
	.word	1087
	.byte	11
	.word	1101
	.byte	11
	.word	1122
	.byte	6,0
.L82:
	.byte	3
	.word	145
	.byte	12
	.byte	'SchM_Switch_Dcm_DcmDiagnosticSessionControl',0,8,33,32
	.word	145
	.byte	1,1,1,1,5
	.byte	'data',0,8,33,98
	.word	145
	.byte	0,12
	.byte	'Det_ReportError',0,9,112,16
	.word	145
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,9,112,39
	.word	475
	.byte	5
	.byte	'InstanceId',0,9,112,55
	.word	145
	.byte	5
	.byte	'ApiId',0,9,112,73
	.word	145
	.byte	5
	.byte	'ErrorId',0,9,112,86
	.word	145
	.byte	0,13
	.byte	'Dcm_DsldGetActiveSessionMask_u32',0,4,190,1,31
	.word	814
	.byte	1,1,1,1,10
	.word	1147
	.byte	6,0,8
	.byte	'Dcm_ControlDtcSettingExit',0,10,24,28,1,1,1,1,9
	.byte	'Dcm_ResetActiveIoCtrl',0,11,238,1,28,1,1,1,1,5
	.byte	'dataSessionMask_u32',0,11,238,1,73
	.word	814
	.byte	5
	.byte	'dataSecurityMask_u32',0,11,239,1,37
	.word	814
	.byte	5
	.byte	'flgSessChkReqd_b',0,11,240,1,38
	.word	145
	.byte	0,9
	.byte	'Dcm_RoutineSetSesCtrlType',0,12,176,1,28,1,1,1,1,5
	.byte	'dataSesCtrlType_u8',0,12,176,1,87
	.word	145
	.byte	0,9
	.byte	'DcmAppl_DcmSesCtrlChangeIndication',0,13,106,33,1,1,1,1,5
	.byte	'SesCtrlTypeOld',0,13,108,36
	.word	145
	.byte	5
	.byte	'SesCtrlTypeNew',0,13,109,36
	.word	145
	.byte	0,10
	.word	1183
	.byte	11
	.word	1223
	.byte	11
	.word	1254
	.byte	6,0,14,1,3
	.word	2152
	.byte	15
	.byte	'__codeptr',0,14,1,1
	.word	2154
	.byte	2
	.byte	'char',0,1,6,15
	.byte	'sint8',0,15,76,25
	.word	2177
	.byte	15
	.byte	'uint8',0,15,81,25
	.word	145
	.byte	15
	.byte	'uint16',0,15,91,25
	.word	475
	.byte	15
	.byte	'uint32',0,15,106,24
	.word	814
	.byte	2
	.byte	'unsigned long long int',0,8,7,15
	.byte	'uint64',0,15,111,30
	.word	2243
	.byte	15
	.byte	'boolean',0,15,127,25
	.word	145
	.byte	2
	.byte	'unsigned long int',0,4,7,15
	.byte	'uint16_least',0,15,147,1,25
	.word	2300
	.byte	15
	.byte	'StatusType',0,16,191,1,27
	.word	145
	.byte	15
	.byte	'Std_ReturnType',0,16,199,1,15
	.word	145
	.byte	16,16,206,1,9,8,17
	.byte	'vendorID',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'moduleID',0
	.word	475
	.byte	2,2,35,2,17
	.byte	'sw_major_version',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'sw_minor_version',0
	.word	145
	.byte	1,2,35,5,17
	.byte	'sw_patch_version',0
	.word	145
	.byte	1,2,35,6,0,15
	.byte	'Std_VersionInfoType',0,16,213,1,3
	.word	2387
	.byte	15
	.byte	'PduIdType',0,17,22,19
	.word	475
	.byte	15
	.byte	'PduLengthType',0,17,26,19
	.word	475
	.byte	16,18,71,9,8,17
	.byte	'SduDataPtr',0
	.word	162
	.byte	4,2,35,0,17
	.byte	'SduLength',0
	.word	475
	.byte	2,2,35,4,0,15
	.byte	'PduInfoType',0,18,75,3
	.word	2577
	.byte	18,18,113,9,4,19
	.byte	'TP_DATACONF',0,0,19
	.byte	'TP_DATARETRY',0,1,19
	.byte	'TP_CONFPENDING',0,2,0,15
	.byte	'TpDataStateType',0,18,118,3
	.word	2642
	.byte	15
	.byte	'NetworkHandleType',0,18,128,1,17
	.word	145
	.byte	15
	.byte	'Can_IdType',0,19,32,16
	.word	814
	.byte	15
	.byte	'Can_HwHandleType',0,19,43,16
	.word	475
	.byte	16,20,93,9,8,17
	.byte	'Class',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'TIN',0
	.word	145
	.byte	1,2,35,1,17
	.byte	'ReturnAddress',0
	.word	814
	.byte	4,2,35,4,0,15
	.byte	'OsTrapInfoType',0,20,97,3
	.word	2789
	.byte	20,68
	.word	814
	.byte	21,16,0,16,20,154,1,9,68,17
	.byte	'store',0
	.word	2869
	.byte	68,2,35,0,0,20,68
	.word	2878
	.byte	21,0,0,15
	.byte	'Os_JumpBufType',0,20,156,1,3
	.word	2900
	.byte	15
	.byte	'Os_StackTraceType',0,20,174,1,18
	.word	814
	.byte	16,20,175,1,9,8,17
	.byte	'sp',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'ctx',0
	.word	814
	.byte	4,2,35,4,0,15
	.byte	'Os_StackValueType',0,20,175,1,63
	.word	2960
	.byte	15
	.byte	'Os_StackSizeType',0,20,176,1,27
	.word	2960
	.byte	22,1,1,3
	.word	3045
	.byte	15
	.byte	'Os_VoidVoidFunctionType',0,20,179,1,16
	.word	3048
	.byte	15
	.byte	'ApplicationType',0,20,193,1,23
	.word	145
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,20,198,1,16,2,17
	.byte	'app_id',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,1,0,15
	.byte	'Os_ApplicationConfigurationType',0,20,201,1,3
	.word	3111
	.byte	15
	.byte	'Os_CoreStateType',0,20,203,1,16
	.word	814
	.byte	15
	.byte	'AreaIdType',0,20,204,1,16
	.word	475
	.byte	15
	.byte	'Os_PeripheralAddressType',0,20,212,1,22
	.word	814
	.byte	15
	.byte	'TickType',0,20,221,1,22
	.word	814
	.byte	15
	.byte	'Os_StopwatchTickType',0,20,225,1,22
	.word	814
	.byte	15
	.byte	'Os_Lockable',0,20,234,1,18
	.word	830
	.byte	15
	.byte	'CoreIdType',0,20,236,1,16
	.word	475
	.byte	15
	.byte	'SpinlockIdType',0,20,237,1,16
	.word	475
	.byte	18,20,239,1,9,4,19
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,19
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,15
	.byte	'TryToGetSpinlockType',0,20,239,1,74
	.word	3418
	.byte	18,20,174,2,9,4,19
	.byte	'APPLICATION_ACCESSIBLE',0,0,19
	.byte	'APPLICATION_RESTARTING',0,1,19
	.byte	'APPLICATION_TERMINATED',0,2,0,15
	.byte	'ApplicationStateType',0,20,174,2,92
	.word	3511
	.byte	24
	.byte	'void',0,3
	.word	3623
	.byte	25,1,1,26
	.word	145
	.byte	26
	.word	3629
	.byte	0,3
	.word	3634
	.byte	15
	.byte	'Os_FunctionEntryType',0,20,183,2,16
	.word	3648
	.byte	23
	.byte	'Os_MeterInfoType_s',0,20,193,2,16,48,17
	.byte	'elapsed',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'previous',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'max',0
	.word	814
	.byte	4,2,35,8,17
	.byte	'cumulative',0
	.word	814
	.byte	4,2,35,12,17
	.byte	'stackbase',0
	.word	2960
	.byte	8,2,35,16,17
	.byte	'stackusage',0
	.word	2960
	.byte	8,2,35,24,17
	.byte	'stackmax',0
	.word	2960
	.byte	8,2,35,32,17
	.byte	'stackbudget',0
	.word	2960
	.byte	8,2,35,40,0,15
	.byte	'Os_MeterInfoType',0,20,202,2,3
	.word	3683
	.byte	3
	.word	3683
	.byte	15
	.byte	'Os_MeterInfoRefType',0,20,203,2,50
	.word	3881
	.byte	15
	.byte	'EventMaskType',0,20,206,2,15
	.word	145
	.byte	15
	.byte	'Os_imaskType',0,20,211,2,16
	.word	814
	.byte	23
	.byte	'Os_ISRDynType_s',0,20,213,2,16,48,17
	.byte	'meter',0
	.word	3683
	.byte	48,2,35,0,0,15
	.byte	'Os_ISRDynType',0,20,215,2,3
	.word	3960
	.byte	3
	.word	3960
	.byte	27
	.word	4021
	.byte	23
	.byte	'Os_ISRType_s',0,20,216,2,16,24,17
	.byte	'entry_function',0
	.word	3053
	.byte	4,2,35,0,17
	.byte	'dynamic',0
	.word	4026
	.byte	4,2,35,4,17
	.byte	'imask',0
	.word	814
	.byte	4,2,35,8,17
	.byte	'stackbudget',0
	.word	2960
	.byte	8,2,35,12,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,20,17
	.byte	'application',0
	.word	145
	.byte	1,2,35,21,0,15
	.byte	'Os_ISRType',0,20,223,2,3
	.word	4031
	.byte	3
	.word	3045
	.byte	27
	.word	4031
	.byte	3
	.word	4190
	.byte	15
	.byte	'ISRType',0,20,224,2,46
	.word	4195
	.byte	15
	.byte	'Os_bitmask',0,20,239,2,22
	.word	814
	.byte	15
	.byte	'Os_pset0Type',0,20,240,2,20
	.word	814
	.byte	15
	.byte	'Os_pset1Type',0,20,241,2,20
	.word	814
	.byte	15
	.byte	'Os_pset2Type',0,20,242,2,20
	.word	814
	.byte	28,20,243,2,9,4,17
	.byte	'p0',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'p1',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'p2',0
	.word	814
	.byte	4,2,35,0,0,15
	.byte	'Os_psetType',0,20,247,2,3
	.word	4303
	.byte	28,20,249,2,9,4,17
	.byte	't0',0
	.word	814
	.byte	4,2,35,0,17
	.byte	't1',0
	.word	814
	.byte	4,2,35,0,17
	.byte	't2',0
	.word	814
	.byte	4,2,35,0,0,15
	.byte	'Os_tpmaskType',0,20,253,2,3
	.word	4367
	.byte	15
	.byte	'Os_ActivationCountType',0,20,254,2,23
	.word	145
	.byte	23
	.byte	'Os_TaskDynType_s',0,20,128,3,16,120,17
	.byte	'terminate_jump_buf',0
	.word	2909
	.byte	68,2,35,0,17
	.byte	'meter',0
	.word	3683
	.byte	48,2,35,68,17
	.byte	'activation_count',0
	.word	145
	.byte	1,2,35,116,0,15
	.byte	'Os_TaskDynType',0,20,132,3,3
	.word	4465
	.byte	20,68
	.word	2878
	.byte	21,0,0,3
	.word	4465
	.byte	27
	.word	4591
	.byte	23
	.byte	'Os_TaskType_s',0,20,134,3,16,40,17
	.byte	'dynamic',0
	.word	4596
	.byte	4,2,35,0,17
	.byte	'entry_function',0
	.word	3053
	.byte	4,2,35,4,17
	.byte	'pset',0
	.word	4303
	.byte	4,2,35,8,17
	.byte	'base_tpmask',0
	.word	4367
	.byte	4,2,35,12,17
	.byte	'tpmask',0
	.word	4367
	.byte	4,2,35,16,17
	.byte	'core_id',0
	.word	475
	.byte	2,2,35,20,17
	.byte	'index',0
	.word	814
	.byte	4,2,35,24,17
	.byte	'stackbudget',0
	.word	2960
	.byte	8,2,35,28,17
	.byte	'activation_count',0
	.word	145
	.byte	1,2,35,36,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,37,17
	.byte	'application',0
	.word	145
	.byte	1,2,35,38,0,15
	.byte	'Os_TaskType',0,20,146,3,3
	.word	4601
	.byte	27
	.word	4601
	.byte	3
	.word	4851
	.byte	15
	.byte	'TaskType',0,20,147,3,47
	.word	4856
	.byte	29
	.byte	'Os_TaskStateType',0,20,155,3,6,4,19
	.byte	'SUSPENDED',0,0,19
	.byte	'READY',0,1,19
	.byte	'WAITING',0,2,19
	.byte	'RUNNING',0,3,0,15
	.byte	'TaskStateType',0,20,156,3,31
	.word	4879
	.byte	28,20,167,3,3,4,17
	.byte	'tpmask',0
	.word	4367
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,20,166,3,16,4,17
	.byte	'saved_priority',0
	.word	4966
	.byte	4,2,35,0,0,15
	.byte	'Os_ResourceDynType',0,20,170,3,3
	.word	4989
	.byte	3
	.word	4989
	.byte	27
	.word	5069
	.byte	23
	.byte	'Os_ResourceType_s',0,20,171,3,16,12,17
	.byte	'dynamic',0
	.word	5074
	.byte	4,2,35,0,17
	.byte	'tpmask',0
	.word	4367
	.byte	4,2,35,4,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,8,0,15
	.byte	'Os_ResourceType',0,20,175,3,3
	.word	5079
	.byte	16,20,181,3,9,12,17
	.byte	'maxallowedvalue',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'ticksperbase',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'mincycle',0
	.word	814
	.byte	4,2,35,8,0,15
	.byte	'AlarmBaseType',0,20,185,3,3
	.word	5178
	.byte	16,20,206,3,9,8,17
	.byte	'Running',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'Pending',0
	.word	145
	.byte	1,2,35,1,17
	.byte	'Delay',0
	.word	814
	.byte	4,2,35,4,0,15
	.byte	'Os_CounterStatusType',0,20,210,3,3
	.word	5273
	.byte	30
	.word	145
	.byte	1,1,3
	.word	5359
	.byte	15
	.byte	'Os_CounterIncrAdvType',0,20,217,3,22
	.word	5366
	.byte	23
	.byte	's_swd',0,20,222,3,12,4,17
	.byte	'count',0
	.word	814
	.byte	4,2,35,0,0,28,20,221,3,3,4,17
	.byte	'sw',0
	.word	5402
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,20,220,3,16,4,17
	.byte	'type_dependent',0
	.word	5430
	.byte	4,2,35,0,0,15
	.byte	'Os_CounterDynType',0,20,226,3,3
	.word	5449
	.byte	3
	.word	5449
	.byte	27
	.word	5527
	.byte	23
	.byte	'Os_CounterType_s',0,20,227,3,16,28,17
	.byte	'dynamic',0
	.word	5532
	.byte	4,2,35,0,17
	.byte	'advincr',0
	.word	5371
	.byte	4,2,35,4,17
	.byte	'base',0
	.word	5178
	.byte	12,2,35,8,17
	.byte	'core',0
	.word	3629
	.byte	4,2,35,20,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,24,17
	.byte	'application',0
	.word	145
	.byte	1,2,35,25,0,15
	.byte	'Os_CounterType',0,20,234,3,3
	.word	5537
	.byte	3
	.word	5359
	.byte	27
	.word	5537
	.byte	3
	.word	5689
	.byte	15
	.byte	'CounterType',0,20,235,3,52
	.word	5694
	.byte	29
	.byte	'Os_ScheduleTableStatusType',0,20,240,3,6,4,19
	.byte	'SCHEDULETABLE_STOPPED',0,0,19
	.byte	'SCHEDULETABLE_NEXT',0,1,19
	.byte	'SCHEDULETABLE_WAITING',0,2,19
	.byte	'SCHEDULETABLE_RUNNING',0,3,19
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,15
	.byte	'ScheduleTableStatusType',0,20,241,3,41
	.word	5720
	.byte	27
	.word	.L134-.L40
	.byte	3
	.word	5920
	.byte	15
	.byte	'ScheduleTableType',0,20,128,4,58
	.word	5925
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,20,130,4,16,16,17
	.byte	'match',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'next',0
	.word	5930
	.byte	4,2,35,4,17
	.byte	'state',0
	.word	5720
	.byte	4,2,35,8,17
	.byte	'config',0
	.word	475
	.byte	2,2,35,12,0,3
	.word	5957
	.byte	27
	.word	6050
.L134:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,20,247,3,16,16,17
	.byte	'dynamic',0
	.word	6055
	.byte	4,2,35,0,17
	.byte	'counter',0
	.word	5699
	.byte	4,2,35,4,17
	.byte	'repeat',0
	.word	145
	.byte	1,2,35,8,17
	.byte	'config',0
	.word	475
	.byte	2,2,35,10,17
	.byte	'initial',0
	.word	145
	.byte	1,2,35,12,17
	.byte	'access',0
	.word	145
	.byte	1,2,35,13,17
	.byte	'application',0
	.word	145
	.byte	1,2,35,14,0,15
	.byte	'Os_ScheduleTableType',0,20,255,3,3
	.word	6060
	.byte	27
	.word	6060
	.byte	3
	.word	6240
	.byte	27
	.word	5537
	.byte	3
	.word	6250
	.byte	31
	.word	3353
	.byte	31
	.word	4303
	.byte	31
	.word	4200
	.byte	31
	.word	4861
	.byte	31
	.word	4367
	.byte	31
	.word	145
	.byte	31
	.word	4861
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,20,251,6,16,112,17
	.byte	'TrapInfo',0
	.word	2789
	.byte	8,2,35,0,17
	.byte	'lock_taskaccess',0
	.word	6260
	.byte	4,2,35,8,17
	.byte	'ReadyTasks',0
	.word	6265
	.byte	4,2,35,12,17
	.byte	'RunningISR',0
	.word	6270
	.byte	4,2,35,16,17
	.byte	'RunningTask',0
	.word	6275
	.byte	4,2,35,20,17
	.byte	'RunningTPMask',0
	.word	6280
	.byte	4,2,35,24,17
	.byte	'CurrentMeteredObject',0
	.word	3886
	.byte	4,2,35,28,17
	.byte	'IdleMeter',0
	.word	3683
	.byte	48,2,35,32,17
	.byte	'AppAccess',0
	.word	145
	.byte	1,2,35,80,17
	.byte	'AppOverride',0
	.word	6285
	.byte	1,2,35,81,17
	.byte	'GetStackValueAdjust',0
	.word	2960
	.byte	8,2,35,84,17
	.byte	'InErrorHook',0
	.word	145
	.byte	1,2,35,92,17
	.byte	'ChainTaskRef',0
	.word	6290
	.byte	4,2,35,96,17
	.byte	'GetStackUsageAdjust',0
	.word	2960
	.byte	8,2,35,100,17
	.byte	'InProtectionHook',0
	.word	145
	.byte	1,2,35,108,17
	.byte	'CoreIsActive',0
	.word	145
	.byte	1,2,35,109,17
	.byte	'InShutdownHook',0
	.word	145
	.byte	1,2,35,110,0,15
	.byte	'Os_ControlledCoreType',0,20,141,7,3
	.word	6295
	.byte	3
	.word	814
	.byte	27
	.word	4031
	.byte	3
	.word	6751
	.byte	27
	.word	4601
	.byte	3
	.word	6761
	.byte	3
	.word	3683
	.byte	23
	.byte	'Os_AnyCoreType_s',0,20,151,7,16,96,17
	.byte	'DisableAllImask',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'SuspendAllImask',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'SuspendOSImask',0
	.word	814
	.byte	4,2,35,8,17
	.byte	'DisableAllCount',0
	.word	814
	.byte	4,2,35,12,17
	.byte	'SuspendAllCount',0
	.word	814
	.byte	4,2,35,16,17
	.byte	'SuspendOSCount',0
	.word	814
	.byte	4,2,35,20,17
	.byte	'RestartJumpBuf',0
	.word	2909
	.byte	68,2,35,24,17
	.byte	'Restartable',0
	.word	145
	.byte	1,2,35,92,0,15
	.byte	'Os_AnyCoreType',0,20,160,7,3
	.word	6776
	.byte	15
	.byte	'Can_TxObjPriorityClassType',0,21,219,3,16
	.word	814
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,21,231,3,16,8,17
	.byte	'MsgObjId',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'HwControllerId',0
	.word	145
	.byte	1,2,35,1,17
	.byte	'TxObjPriorityClass',0
	.word	814
	.byte	4,2,35,4,0,15
	.byte	'Can_TxHwObjectConfigType',0,21,252,3,3
	.word	7053
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,21,129,4,16,12,17
	.byte	'MaskRef',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'MsgId',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'MsgObjId',0
	.word	145
	.byte	1,2,35,8,17
	.byte	'HwControllerId',0
	.word	145
	.byte	1,2,35,9,0,15
	.byte	'Can_RxHwObjectConfigType',0,21,147,4,3
	.word	7189
	.byte	20,4
	.word	145
	.byte	21,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,21,181,4,16,4,17
	.byte	'ControllerMOMap',0
	.word	7329
	.byte	4,2,35,0,0,15
	.byte	'Can_ControllerMOMapConfigType',0,21,184,4,3
	.word	7338
	.byte	23
	.byte	'Can_NPCRValueType',0,21,188,4,16,2,17
	.byte	'Can_NPCRValue',0
	.word	475
	.byte	2,2,35,0,0,15
	.byte	'Can_NPCRValueType',0,21,191,4,3
	.word	7439
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,21,194,4,16,8,17
	.byte	'CanControllerBaudrate',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'CanControllerBaudrateCfg',0
	.word	475
	.byte	2,2,35,4,0,15
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,21,198,4,3
	.word	7514
	.byte	27
	.word	7514
	.byte	3
	.word	7679
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,21,201,4,16,4,17
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7684
	.byte	4,2,35,0,0,15
	.byte	'Can_BaudrateConfigPtrType',0,21,204,4,3
	.word	7689
	.byte	23
	.byte	'Can_EventHandlingType',0,21,226,4,16,4,17
	.byte	'CanEventType',0
	.word	7329
	.byte	4,2,35,0,0,15
	.byte	'Can_EventHandlingType',0,21,229,4,3
	.word	7789
	.byte	15
	.byte	'Rte_TransformerErrorCode',0,22,130,1,15
	.word	145
	.byte	15
	.byte	'Rte_TransformerClass',0,22,131,1,15
	.word	145
	.byte	16,22,168,1,9,12,17
	.byte	'in',0
	.word	3629
	.byte	4,2,35,0,17
	.byte	'out',0
	.word	3629
	.byte	4,2,35,4,17
	.byte	'used',0
	.word	475
	.byte	2,2,35,8,17
	.byte	'lost_data',0
	.word	145
	.byte	1,2,35,10,0,15
	.byte	'Rte_QDynType',0,22,173,1,3
	.word	7935
	.byte	18,22,175,1,9,4,19
	.byte	'RTE_DRA',0,0,19
	.byte	'RTE_WOWP',0,1,19
	.byte	'RTE_TASK',0,2,19
	.byte	'RTE_ARE',0,3,19
	.byte	'RTE_EV',0,4,19
	.byte	'RTE_MSI',0,5,0,15
	.byte	'Rte_NotificationType',0,22,182,1,3
	.word	8022
	.byte	3
	.word	7935
	.byte	23
	.byte	'Rte_QCmnType',0,22,184,1,16,24,17
	.byte	'dynamic',0
	.word	8120
	.byte	4,2,35,0,17
	.byte	'copy',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'queue_size',0
	.word	475
	.byte	2,2,35,6,17
	.byte	'element_size',0
	.word	475
	.byte	2,2,35,8,17
	.byte	'buffer_start',0
	.word	3629
	.byte	4,2,35,12,17
	.byte	'buffer_end',0
	.word	3629
	.byte	4,2,35,16,17
	.byte	'notification_type',0
	.word	8022
	.byte	4,2,35,20,0,15
	.byte	'Rte_QCmnType',0,22,192,1,3
	.word	8125
	.byte	15
	.byte	'Rte_AlarmRefType',0,22,224,1,32
	.word	814
	.byte	15
	.byte	'Rte_AlarmIndexType',0,22,226,1,32
	.word	475
	.byte	20,128,8
	.word	145
	.byte	21,255,7,0,15
	.byte	'Impl_NVM_DstPtrType_1024',0,23,50,15
	.word	8363
	.byte	15
	.byte	'CanIf_u32_impl',0,23,69,16
	.word	814
	.byte	15
	.byte	'CanIf_u16_impl',0,23,71,16
	.word	475
	.byte	15
	.byte	'CanIf_u8_impl',0,23,73,15
	.word	145
	.byte	15
	.byte	'CanIf_ControllerModeType_Enum_impl',0,23,88,15
	.word	145
	.byte	15
	.byte	'CanIf_PduModeType_Enum_impl',0,23,90,15
	.word	145
	.byte	16,23,92,9,2,17
	.byte	'DeviceMode',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'ChannelMode',0
	.word	145
	.byte	1,2,35,1,0,15
	.byte	'CanIf_ControllerStateType_struct_impl',0,23,95,3
	.word	8554
	.byte	15
	.byte	'CanIf_NotifStatusType_Enum_impl',0,23,100,15
	.word	145
	.byte	15
	.byte	'CanSM_boolean_Impl',0,23,120,15
	.word	145
	.byte	15
	.byte	'CanSM_u8_Impl',0,23,123,15
	.word	145
	.byte	15
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,23,128,1,15
	.word	145
	.byte	15
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,23,132,1,15
	.word	145
	.byte	15
	.byte	'CanSM_u16_Impl',0,23,136,1,16
	.word	475
	.byte	15
	.byte	'CanSM_TimerStateType_Enum_impl',0,23,138,1,15
	.word	145
	.byte	16,23,140,1,9,4,17
	.byte	'cntTick_u16',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'stTimer',0
	.word	145
	.byte	1,2,35,2,0,15
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,23,143,1,3
	.word	8895
	.byte	15
	.byte	'Com_impl_u16',0,23,154,1,16
	.word	475
	.byte	15
	.byte	'Com_impl_u8',0,23,157,1,15
	.word	145
	.byte	15
	.byte	'ComM_uint32_Impl',0,23,173,1,16
	.word	814
	.byte	15
	.byte	'ComM_uint16_Impl',0,23,175,1,16
	.word	475
	.byte	15
	.byte	'ComM_uint8_Impl',0,23,177,1,15
	.word	145
	.byte	15
	.byte	'ComM_bool_Impl',0,23,179,1,15
	.word	145
	.byte	16,23,181,1,9,24,17
	.byte	'ChannelState_e',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'LightTimeoutCtr_u32',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	475
	.byte	2,2,35,8,17
	.byte	'ChannelMode_u8',0
	.word	145
	.byte	1,2,35,10,17
	.byte	'BusSmMode_u8',0
	.word	145
	.byte	1,2,35,11,17
	.byte	'UserRequestCtr_u8',0
	.word	145
	.byte	1,2,35,12,17
	.byte	'PassiveRequestState_u8',0
	.word	145
	.byte	1,2,35,13,17
	.byte	'PncRequestCtr_u8',0
	.word	145
	.byte	1,2,35,14,17
	.byte	'InhibitionReqStatus_u8',0
	.word	145
	.byte	1,2,35,15,17
	.byte	'NmNetworkRequestStatus_b',0
	.word	145
	.byte	1,2,35,16,17
	.byte	'DiagnosticRequestState_b',0
	.word	145
	.byte	1,2,35,17,17
	.byte	'CommunicationAllowed_b',0
	.word	145
	.byte	1,2,35,18,17
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	145
	.byte	1,2,35,19,17
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	145
	.byte	1,2,35,20,17
	.byte	'NmNetworkModeStatus_b',0
	.word	145
	.byte	1,2,35,21,0,15
	.byte	'ComM_ChannelStruct_Impl',0,23,197,1,3
	.word	9127
	.byte	16,23,206,1,9,10,17
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'LimitToNoComCtr_u16',0
	.word	475
	.byte	2,2,35,2,17
	.byte	'RequestedUserMode_t',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'IndicatedUserMode_t',0
	.word	145
	.byte	1,2,35,5,17
	.byte	'numChannelsInFullCom_u8',0
	.word	145
	.byte	1,2,35,6,17
	.byte	'numChannelsInSilentCom_u8',0
	.word	145
	.byte	1,2,35,7,17
	.byte	'numChannelsInNoCom_u8',0
	.word	145
	.byte	1,2,35,8,0,15
	.byte	'ComM_UserStruct_Impl',0,23,214,1,3
	.word	9631
	.byte	15
	.byte	'Dcm_ConfirmationStatusType',0,23,243,1,15
	.word	145
	.byte	15
	.byte	'Dcm_IOOperationResponseType',0,23,252,1,15
	.word	145
	.byte	15
	.byte	'Dcm_NegativeResponseCodeType',0,23,132,2,15
	.word	145
	.byte	15
	.byte	'Dcm_OpStatusType',0,23,134,2,15
	.word	145
	.byte	15
	.byte	'Dcm_ProtocolType',0,23,136,2,15
	.word	145
	.byte	15
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	23,138,2,15
	.word	145
	.byte	15
	.byte	'Dcm_SecLevelType',0,23,142,2,15
	.word	145
	.byte	15
	.byte	'Dcm_SesCtrlType',0,23,144,2,15
	.word	145
	.byte	15
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,23,146,2,15
	.word	145
	.byte	15
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,23,150,2,15
	.word	145
	.byte	15
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,23,154,2,15
	.word	145
	.byte	15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,23,243,3,34
	.word	8374
	.byte	20,128,8
	.word	145
	.byte	21,255,7,0,15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,23,246,3,34
	.word	8374
	.byte	15
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,24,37,15
	.word	145
	.byte	15
	.byte	'Dcm_MsgItemType',0,25,182,2,15
	.word	145
	.byte	3
	.word	145
	.byte	15
	.byte	'Dcm_MsgType',0,25,188,2,57
	.word	10700
	.byte	15
	.byte	'Dcm_MsgLenType',0,25,197,2,16
	.word	814
	.byte	16,25,206,2,9,4,17
	.byte	'reqType',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'suppressPosResponse',0
	.word	145
	.byte	1,2,35,1,17
	.byte	'sourceofRequest',0
	.word	145
	.byte	1,2,35,2,0,15
	.byte	'Dcm_MsgAddInfoType',0,25,219,2,2
	.word	10750
	.byte	15
	.byte	'Dcm_IdContextType',0,25,225,2,15
	.word	145
	.byte	16,25,238,5,9,32,17
	.byte	'tx_buffer_pa',0
	.word	10705
	.byte	4,2,35,0,17
	.byte	'rx_mainBuffer_pa',0
	.word	10705
	.byte	4,2,35,4,17
	.byte	'tx_buffer_size_u32',0
	.word	814
	.byte	4,2,35,8,17
	.byte	'rx_buffer_size_u32',0
	.word	814
	.byte	4,2,35,12,17
	.byte	'dataP2TmrAdjust',0
	.word	814
	.byte	4,2,35,16,17
	.byte	'dataP2StarTmrAdjust',0
	.word	814
	.byte	4,2,35,20,17
	.byte	'protocolid_u8',0
	.word	145
	.byte	1,2,35,24,17
	.byte	'sid_tableid_u8',0
	.word	145
	.byte	1,2,35,25,17
	.byte	'premption_level_u8',0
	.word	145
	.byte	1,2,35,26,17
	.byte	'pduinfo_idx_u8',0
	.word	145
	.byte	1,2,35,27,17
	.byte	'nrc21_b',0
	.word	145
	.byte	1,2,35,28,17
	.byte	'sendRespPendTransToBoot',0
	.word	145
	.byte	1,2,35,29,0,15
	.byte	'Dcm_Dsld_protocol_tableType',0,25,143,6,2
	.word	10883
	.byte	3
	.word	145
	.byte	25,1,1,26
	.word	145
	.byte	26
	.word	475
	.byte	26
	.word	475
	.byte	26
	.word	145
	.byte	0,3
	.word	11239
	.byte	15
	.byte	'Dcm_ConfirmationApiType',0,25,145,6,16
	.word	11263
	.byte	3
	.word	145
	.byte	32
	.word	145
	.byte	1,1,26
	.word	11301
	.byte	26
	.word	145
	.byte	26
	.word	145
	.byte	0,3
	.word	11306
	.byte	16,25,240,2,9,28,17
	.byte	'resData',0
	.word	10705
	.byte	4,2,35,0,17
	.byte	'reqData',0
	.word	10705
	.byte	4,2,35,4,17
	.byte	'msgAddInfo',0
	.word	10750
	.byte	4,2,35,8,17
	.byte	'resDataLen',0
	.word	814
	.byte	4,2,35,12,17
	.byte	'reqDataLen',0
	.word	814
	.byte	4,2,35,16,17
	.byte	'resMaxDataLen',0
	.word	814
	.byte	4,2,35,20,17
	.byte	'idContext',0
	.word	145
	.byte	1,2,35,24,17
	.byte	'dcmRxPduId',0
	.word	475
	.byte	2,2,35,26,0,3
	.word	11334
	.byte	32
	.word	145
	.byte	1,1,26
	.word	145
	.byte	26
	.word	11497
	.byte	26
	.word	11301
	.byte	0,3
	.word	11502
	.byte	16,25,158,6,9,20,17
	.byte	'allowed_session_b32',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'allowed_security_b32',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	11329
	.byte	4,2,35,8,17
	.byte	'SubFunc_fp',0
	.word	11525
	.byte	4,2,35,12,17
	.byte	'subservice_id_u8',0
	.word	145
	.byte	1,2,35,16,17
	.byte	'isDspRDTCSubFnc_b',0
	.word	145
	.byte	1,2,35,17,0,15
	.byte	'Dcm_Dsld_SubServiceType',0,25,169,6,2
	.word	11530
	.byte	27
	.word	11530
	.byte	3
	.word	11742
	.byte	32
	.word	145
	.byte	1,1,26
	.word	11301
	.byte	26
	.word	145
	.byte	0,3
	.word	11752
	.byte	16,25,186,6,9,36,17
	.byte	'allowed_session_b32',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'allowed_security_b32',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'service_handler_fp',0
	.word	11525
	.byte	4,2,35,8,17
	.byte	'Service_init_fp',0
	.word	3048
	.byte	4,2,35,12,17
	.byte	'sid_u8',0
	.word	145
	.byte	1,2,35,16,17
	.byte	'subfunction_exist_b',0
	.word	145
	.byte	1,2,35,17,17
	.byte	'servicelocator_b',0
	.word	145
	.byte	1,2,35,18,17
	.byte	'ptr_subservice_table_pcs',0
	.word	11747
	.byte	4,2,35,20,17
	.byte	'num_sf_u8',0
	.word	145
	.byte	1,2,35,24,17
	.byte	'adrUserServiceModeRule_pfct',0
	.word	11770
	.byte	4,2,35,28,17
	.byte	'Dcm_ConfirmationService',0
	.word	11268
	.byte	4,2,35,32,0,15
	.byte	'Dcm_Dsld_ServiceType',0,25,204,6,3
	.word	11775
	.byte	3
	.word	11239
	.byte	27
	.word	11775
	.byte	3
	.word	12123
	.byte	16,25,218,6,9,8,17
	.byte	'ptr_service_table_pcs',0
	.word	12128
	.byte	4,2,35,0,17
	.byte	'num_services_u8',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'nrc_sessnot_supported_u8',0
	.word	145
	.byte	1,2,35,5,17
	.byte	'cdtc_index_u8',0
	.word	145
	.byte	1,2,35,6,0,15
	.byte	'Dcm_Dsld_sid_tableType',0,25,224,6,3
	.word	12133
	.byte	16,25,238,6,9,14,17
	.byte	'protocol_num_u8',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'txpduid_num_u8',0
	.word	475
	.byte	2,2,35,2,17
	.byte	'roetype2_txpdu_u8',0
	.word	475
	.byte	2,2,35,4,17
	.byte	'rdpitype2_txpdu_u8',0
	.word	475
	.byte	2,2,35,6,17
	.byte	'testaddr_u16',0
	.word	475
	.byte	2,2,35,8,17
	.byte	'channel_idx_u8',0
	.word	145
	.byte	1,2,35,10,17
	.byte	'ConnectionIndex_u8',0
	.word	145
	.byte	1,2,35,11,17
	.byte	'NumberOfTxpdu_u8',0
	.word	145
	.byte	1,2,35,12,0,15
	.byte	'Dcm_Dsld_connType',0,25,248,6,3
	.word	12285
	.byte	18,25,146,7,9,4,19
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,19
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,19
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,15
	.byte	'Dcm_Dsld_commodeType',0,25,151,7,2
	.word	12523
	.byte	18,6,200,1,9,4,19
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,19
	.byte	'USE_ASYNCH_FNC',0,1,0,15
	.byte	'DcmDspSecurityUsePort',0,6,204,1,2
	.word	12635
	.byte	18,26,22,9,4,19
	.byte	'DCM_NO_BOOT',0,0,19
	.byte	'DCM_OEM_BOOT',0,1,19
	.byte	'DCM_SYS_BOOT',0,2,0,15
	.byte	'Dcm_SessionForBootType',0,26,27,2
	.word	12717
	.byte	18,27,192,3,9,4,19
	.byte	'DCM_READ_OK',0,0,19
	.byte	'DCM_READ_FAILED',0,1,19
	.byte	'DCM_READ_PENDING',0,2,19
	.byte	'DCM_READ_FORCE_RCRRP',0,3,19
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,15
	.byte	'Dcm_ReadMemoryRet_t',0,27,199,3,3
	.word	12798
	.byte	15
	.byte	'rba_BswSrv_uint64',0,28,66,28
	.word	2243
	.byte	15
	.byte	'Rte_TaskRefType',0,29,184,1,32
	.word	4861
	.byte	15
	.byte	'Rte_EventRefType',0,29,185,1,32
	.word	145
	.byte	15
	.byte	'Rte_EventType',0,29,186,1,32
	.word	814
	.byte	15
	.byte	'Rte_REActCounterType',0,29,252,1,15
	.word	145
	.byte	3
	.word	145
	.byte	15
	.byte	'Rte_REActCounterRefType',0,29,253,1,58
	.word	13063
	.byte	16,29,255,1,9,8,17
	.byte	'task',0
	.word	12959
	.byte	4,2,35,0,17
	.byte	'acnt',0
	.word	13068
	.byte	4,2,35,4,0,15
	.byte	'Rte_REContainerType',0,29,130,2,3
	.word	13101
	.byte	27
	.word	4601
	.byte	3
	.word	13165
	.byte	3
	.word	145
	.byte	27
	.word	13101
	.byte	3
	.word	13180
	.byte	15
	.byte	'Rte_REContainerRefType',0,29,132,2,60
	.word	13185
	.byte	15
	.byte	'Rte_MSICounterType',0,29,149,2,16
	.word	475
	.byte	3
	.word	475
	.byte	15
	.byte	'Rte_MSICounterRefType',0,29,150,2,56
	.word	13250
	.byte	15
	.byte	'Rte_MSIPendingFlagType',0,29,152,2,17
	.word	145
	.byte	3
	.word	145
	.byte	15
	.byte	'Rte_MSIPendingFlagRefType',0,29,153,2,60
	.word	13318
	.byte	16,29,163,2,9,24,17
	.byte	'counter',0
	.word	13255
	.byte	4,2,35,0,17
	.byte	'incCounter',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'pending',0
	.word	13323
	.byte	4,2,35,8,17
	.byte	'osTask',0
	.word	12959
	.byte	4,2,35,12,17
	.byte	'acnt',0
	.word	13068
	.byte	4,2,35,16,17
	.byte	'osEvent',0
	.word	145
	.byte	1,2,35,20,17
	.byte	'MSIInit',0
	.word	475
	.byte	2,2,35,22,0,15
	.byte	'Rte_MSITableEntry',0,29,172,2,3
	.word	13358
	.byte	3
	.word	475
	.byte	3
	.word	145
	.byte	15
	.byte	'Rte_TaskArrayIndex',0,29,179,2,16
	.word	145
	.byte	15
	.byte	'Rte_NrWaitingTasks',0,29,180,2,16
	.word	145
	.byte	16,29,182,2,9,4,17
	.byte	'pending',0
	.word	145
	.byte	1,2,35,0,17
	.byte	'count',0
	.word	145
	.byte	1,2,35,1,17
	.byte	'firstWaitingTask',0
	.word	145
	.byte	1,2,35,2,0,15
	.byte	'Rte_WaitableDatum',0,29,186,2,3
	.word	13576
	.byte	3
	.word	13576
	.byte	16,29,226,2,9,12,17
	.byte	'event_id',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'wd',0
	.word	13668
	.byte	4,2,35,4,17
	.byte	'timeout',0
	.word	814
	.byte	4,2,35,8,0,15
	.byte	'Rte_WOWP_NotificationType',0,29,230,2,3
	.word	13673
	.byte	27
	.word	13673
	.byte	3
	.word	13762
	.byte	15
	.byte	'Rte_WOWP_NotificationRefType',0,29,232,2,66
	.word	13767
	.byte	15
	.byte	'Rte_ARE_NotificationType',0,29,234,2,29
	.word	13101
	.byte	23
	.byte	'Rte_QTaskType',0,29,243,2,16,28,17
	.byte	'cmn',0
	.word	8125
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	12959
	.byte	4,2,35,24,0,15
	.byte	'Rte_QTaskType',0,29,246,2,3
	.word	13844
	.byte	23
	.byte	'Rte_QREType',0,29,250,2,16,28,17
	.byte	'cmn',0
	.word	8125
	.byte	24,2,35,0,17
	.byte	're',0
	.word	13190
	.byte	4,2,35,24,0,15
	.byte	'Rte_QREType',0,29,253,2,3
	.word	13915
	.byte	27
	.word	13101
	.byte	3
	.word	13980
	.byte	23
	.byte	'Rte_QWWPType',0,29,129,3,16,28,17
	.byte	'cmn',0
	.word	8125
	.byte	24,2,35,0,17
	.byte	'wwp',0
	.word	13772
	.byte	4,2,35,24,0,15
	.byte	'Rte_QWWPType',0,29,132,3,3
	.word	13990
	.byte	27
	.word	13673
	.byte	3
	.word	14058
	.byte	23
	.byte	'Rte_QEvType',0,29,136,3,16,36,17
	.byte	'cmn',0
	.word	8125
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	12959
	.byte	4,2,35,24,17
	.byte	'mask',0
	.word	145
	.byte	1,2,35,28,17
	.byte	'acnt',0
	.word	13068
	.byte	4,2,35,32,0,15
	.byte	'Rte_QEvType',0,29,141,3,3
	.word	14068
	.byte	23
	.byte	'Rte_QMSIType',0,29,145,3,16,48,17
	.byte	'cmn',0
	.word	8125
	.byte	24,2,35,0,17
	.byte	'task',0
	.word	12959
	.byte	4,2,35,24,17
	.byte	'mask',0
	.word	145
	.byte	1,2,35,28,17
	.byte	'acnt',0
	.word	13068
	.byte	4,2,35,32,17
	.byte	'msiCounter',0
	.word	13255
	.byte	4,2,35,36,17
	.byte	'msiPending',0
	.word	13323
	.byte	4,2,35,40,17
	.byte	'msiLimit',0
	.word	475
	.byte	2,2,35,44,0,15
	.byte	'Rte_QMSIType',0,29,153,3,3
	.word	14163
	.byte	18,30,21,9,4,19
	.byte	'DSD_IDLE',0,0,19
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,19
	.byte	'DSD_CALL_SERVICE',0,2,19
	.byte	'DSD_WAITFORTXCONF',0,3,19
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,15
	.byte	'Dcm_DsdStatesType_ten',0,30,28,2
	.word	14318
	.byte	18,4,215,2,9,4,19
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,19
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,15
	.byte	'Dcm_DsldResponseType_ten',0,4,219,2,2
	.word	14455
	.byte	16,4,229,2,9,40,17
	.byte	'dataActiveRxPduId_u8',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'nrActiveConn_u8',0
	.word	145
	.byte	1,2,35,2,17
	.byte	'idxActiveSession_u8',0
	.word	145
	.byte	1,2,35,3,17
	.byte	'flgMonitorP3timer_b',0
	.word	145
	.byte	1,2,35,4,17
	.byte	'idxCurrentProtocol_u8',0
	.word	145
	.byte	1,2,35,5,17
	.byte	'dataActiveTxPduId_u8',0
	.word	475
	.byte	2,2,35,6,17
	.byte	'datActiveSrvtable_u8',0
	.word	145
	.byte	1,2,35,8,17
	.byte	'flgCommActive_b',0
	.word	145
	.byte	1,2,35,9,17
	.byte	'cntrWaitpendCounter_u8',0
	.word	145
	.byte	1,2,35,10,17
	.byte	'stResponseType_en',0
	.word	14455
	.byte	4,2,35,12,17
	.byte	'idxActiveSecurity_u8',0
	.word	145
	.byte	1,2,35,16,17
	.byte	'dataResult_u8',0
	.word	145
	.byte	1,2,35,17,17
	.byte	'idxService_u8',0
	.word	145
	.byte	1,2,35,18,17
	.byte	'dataResponseByDsd_b',0
	.word	145
	.byte	1,2,35,19,17
	.byte	'dataSid_u8',0
	.word	145
	.byte	1,2,35,20,17
	.byte	'dataRequestLength_u16',0
	.word	475
	.byte	2,2,35,22,17
	.byte	'dataOldtxPduId_u8',0
	.word	475
	.byte	2,2,35,24,17
	.byte	'adrActiveTxBuffer_tpu8',0
	.word	10705
	.byte	4,2,35,28,17
	.byte	'dataTimeoutMonitor_u32',0
	.word	814
	.byte	4,2,35,32,17
	.byte	'PreviousSessionIndex',0
	.word	145
	.byte	1,2,35,36,0,15
	.byte	'Dcm_DsldInternalStructureType_tst',0,4,157,3,2
	.word	14544
	.byte	16,4,182,3,9,8,17
	.byte	'dataTimeoutP2StrMax_u32',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'dataTimeoutP2max_u32',0
	.word	814
	.byte	4,2,35,4,0,15
	.byte	'Dcm_DsldTimingsType_tst',0,4,189,3,2
	.word	15159
	.byte	33
	.byte	'Dcm_DsldGlobal_st',0,4,159,4,55
	.word	14544
	.byte	1,1,33
	.byte	'Dcm_DsldTimer_st',0,4,167,4,45
	.word	15159
	.byte	1,1,33
	.byte	'Dcm_isSessionStored_b',0,4,173,4,29
	.word	145
	.byte	1,1,27
	.word	145
	.byte	3
	.word	15352
	.byte	33
	.byte	'Dcm_DsldSessionTable_pcu8',0,4,197,4,50
	.word	15357
	.byte	1,1,18,10,148,1,9,4,19
	.byte	'DCM_ROE_CLEARED',0,0,19
	.byte	'DCM_ROE_STOPPED',0,1,19
	.byte	'DCM_ROE_STARTED',0,2,0,15
	.byte	'Dcm_DspRoeEventState_ten',0,10,153,1,2
	.word	15399
	.byte	18,10,231,1,9,4,19
	.byte	'DCM_CONTROLMASK_NO',0,0,19
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,19
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,15
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,10,236,1,2
	.word	15494
	.byte	18,27,203,1,9,4,19
	.byte	'DCM_SUPPORT_READ',0,0,19
	.byte	'DCM_SUPPORT_WRITE',0,1,19
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,32
	.word	145
	.byte	1,1,26
	.word	11301
	.byte	26
	.word	475
	.byte	26
	.word	15611
	.byte	0,3
	.word	15681
	.byte	16,10,239,1,9,44,17
	.byte	'dataAllowedSessRead_u32',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'dataAllowedSecRead_u32',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'adrUserReadModeRule_pfct',0
	.word	15704
	.byte	4,2,35,8,17
	.byte	'dataAllowedSessWrite_u32',0
	.word	814
	.byte	4,2,35,12,17
	.byte	'dataAllowedSecWrite_u32',0
	.word	814
	.byte	4,2,35,16,17
	.byte	'adrUserWriteModeRule_pfct',0
	.word	15704
	.byte	4,2,35,20,17
	.byte	'dataSessBitMask_u32',0
	.word	814
	.byte	4,2,35,24,17
	.byte	'dataSecBitMask_u32',0
	.word	814
	.byte	4,2,35,28,17
	.byte	'adrUserControlModeRule_pfct',0
	.word	15704
	.byte	4,2,35,32,17
	.byte	'dataCtrlMask_en',0
	.word	15494
	.byte	4,2,35,36,17
	.byte	'dataCtrlMaskSize_u8',0
	.word	145
	.byte	1,2,35,40,17
	.byte	'dataIocbirst_b',0
	.word	145
	.byte	1,2,35,41,17
	.byte	'statusmaskIOControl_u8',0
	.word	145
	.byte	1,2,35,42,0,15
	.byte	'Dcm_ExtendedDIDConfig_tst',0,10,141,2,3
	.word	15709
	.byte	16,10,200,2,9,4,17
	.byte	'posnSigBit_u16',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'idxDcmDspDatainfo_u16',0
	.word	475
	.byte	2,2,35,2,0,15
	.byte	'Dcm_SignalDIDConfig_tst',0,10,204,2,3
	.word	16156
	.byte	18,31,31,9,4,19
	.byte	'DCM_RESET_NO_BOOT',0,0,19
	.byte	'DCM_RESET_OEM_BOOT',0,1,19
	.byte	'DCM_RESET_SYS_BOOT',0,2,19
	.byte	'DCM_RESET_DRIVE_TO_DRIVE',0,3,0,15
	.byte	'Dcm_ResetForBootType',0,31,37,2
	.word	16251
	.byte	18,11,205,1,9,4,19
	.byte	'DCM_IOCBI_IDLESTATE',0,0,19
	.byte	'DCM_IOCBI_FCS_ACTIVE',0,1,19
	.byte	'DCM_IOCBI_FCS_PENDING',0,2,19
	.byte	'DCM_IOCBI_RTD_ACTIVE',0,3,19
	.byte	'DCM_IOCBI_RTD_PENDING',0,4,19
	.byte	'DCM_IOCBI_STA_ACTIVE',0,5,19
	.byte	'DCM_IOCBI_STA_PENDING',0,6,19
	.byte	'DCM_IOCBI_RCE_ACTIVE',0,7,19
	.byte	'DCM_IOCBI_RCE_PENDING',0,8,0,15
	.byte	'Dcm_Dsp_IocbiDidStatus_ten',0,11,216,1,4
	.word	16375
	.byte	16,12,26,9,8,17
	.byte	'posnStart_u16',0
	.word	475
	.byte	2,2,35,0,17
	.byte	'dataLength_u16',0
	.word	475
	.byte	2,2,35,2,17
	.byte	'idxSignal_u16',0
	.word	475
	.byte	2,2,35,4,17
	.byte	'dataEndianness_u8',0
	.word	145
	.byte	1,2,35,6,17
	.byte	'dataType_u8',0
	.word	145
	.byte	1,2,35,7,0,15
	.byte	'Dcm_DspRoutineSignalInfo_tst',0,12,33,3
	.word	16628
	.byte	32
	.word	145
	.byte	1,1,26
	.word	11301
	.byte	26
	.word	475
	.byte	26
	.word	145
	.byte	0,3
	.word	16789
	.byte	27
	.word	16628
	.byte	3
	.word	16817
	.byte	27
	.word	16822
	.byte	27
	.word	16822
	.byte	27
	.word	16822
	.byte	27
	.word	16822
	.byte	27
	.word	16822
	.byte	27
	.word	16822
	.byte	16,12,35,9,68,17
	.byte	'dataSecBitMask_u32',0
	.word	814
	.byte	4,2,35,0,17
	.byte	'dataSessBitMask_u32',0
	.word	814
	.byte	4,2,35,4,17
	.byte	'adrUserRidModeRule_pfct',0
	.word	16812
	.byte	4,2,35,8,17
	.byte	'adrStartInSignalRef_cpcst',0
	.word	16827
	.byte	4,2,35,12,17
	.byte	'adrStopInSignalRef_cpcst',0
	.word	16832
	.byte	4,2,35,16,17
	.byte	'adrReqRslInSignalRef_cpcst',0
	.word	16837
	.byte	4,2,35,20,17
	.byte	'adrStartOutSignalRef_cpcst',0
	.word	16842
	.byte	4,2,35,24,17
	.byte	'adrStopOutSignalRef_cpcst',0
	.word	16847
	.byte	4,2,35,28,17
	.byte	'adrReqRsltOutSignalRef_cpcst',0
	.word	16852
	.byte	4,2,35,32,17
	.byte	'dataCtrlOptRecSizeStart_u16',0
	.word	475
	.byte	2,2,35,36,17
	.byte	'dataCtrlOptRecSizeStop_u16',0
	.word	475
	.byte	2,2,35,38,17
	.byte	'dataCtrlOptRecSizeReqRslt_u16',0
	.word	475
	.byte	2,2,35,40,17
	.byte	'dataStsOptRecSizeStart_u16',0
	.word	475
	.byte	2,2,35,42,17
	.byte	'dataStsOptRecSizeStop_u16',0
	.word	475
	.byte	2,2,35,44,17
	.byte	'dataStsOptRecSizeReqRslt_u16',0
	.word	475
	.byte	2,2,35,46,17
	.byte	'dataMinCtrlOptRecSizeStart_u16',0
	.word	475
	.byte	2,2,35,48,17
	.byte	'dataMinCtrlOptRecSizeStop_u16',0
	.word	475
	.byte	2,2,35,50,17
	.byte	'dataMinCtrlOptRecSizeReqRslt_u16',0
	.word	475
	.byte	2,2,35,52,17
	.byte	'dataMinStsOptRecSizeStart_u16',0
	.word	475
	.byte	2,2,35,54,17
	.byte	'dataMinStsOptRecSizeStop_u16',0
	.word	475
	.byte	2,2,35,56,17
	.byte	'dataMinStsOptRecSizeReqRslt_u16',0
	.word	475
	.byte	2,2,35,58,17
	.byte	'nrStartInSignals_u8',0
	.word	145
	.byte	1,2,35,60,17
	.byte	'nrStopInSignals_u8',0
	.word	145
	.byte	1,2,35,61,17
	.byte	'nrReqRslInSignals_u8',0
	.word	145
	.byte	1,2,35,62,17
	.byte	'nrStartOutSignals_u8',0
	.word	145
	.byte	1,2,35,63,17
	.byte	'nrStopOutSignals_u8',0
	.word	145
	.byte	1,2,35,64,17
	.byte	'nrReqRsltOutSignals_u8',0
	.word	145
	.byte	1,2,35,65,0,15
	.byte	'Dcm_DspRoutineInfoType_tst',0,12,69,3
	.word	16857
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L41:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,9,46
	.byte	1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,10,46,1,49,19,0,0,11,5,0,49,19,0,0,12,46,1,3,8,58
	.byte	15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,13,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12
	.byte	60,12,0,0,14,21,0,54,15,0,0,15,22,0,3,8,58,15,59,15,57,15,73,19,0,0,16,19,1,58,15,59,15,57,15,11,15,0
	.byte	0,17,13,0,3,8,73,19,11,15,56,9,0,0,18,4,1,58,15,59,15,57,15,11,15,0,0,19,40,0,3,8,28,13,0,0,20,1,1,11
	.byte	15,73,19,0,0,21,33,0,47,15,0,0,22,21,0,54,15,39,12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,59,0
	.byte	3,8,0,0,25,21,1,54,15,39,12,0,0,26,5,0,73,19,0,0,27,38,0,73,19,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0
	.byte	29,4,1,3,8,58,15,59,15,57,15,11,15,0,0,30,21,0,73,19,54,15,39,12,0,0,31,53,0,73,19,0,0,32,21,1,73,19,54
	.byte	15,39,12,0,0,33,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L42:
	.word	.L136-.L135
.L135:
	.half	3
	.word	.L138-.L137
.L137:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\Dcm_Lcfg_DslDsd.h',0,0,0,0
	.byte	'.\\RTE\\gen\\SchM_Dcm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc_Prot.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\DcmAppl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Er_Prot.h',0,0,0,0,0
.L138:
.L136:
	.sdecl	'.debug_info',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_info'
.L43:
	.word	229
	.half	3
	.word	.L44
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L46,.L45
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_GetSesCtrlType',0,1,153,2,33
	.word	.L80
	.byte	1,1,1
	.word	.L32,.L81,.L31
	.byte	4
	.byte	'SesCtrlType',0,1,153,2,102
	.word	.L82,.L83
	.byte	5
	.word	.L32,.L81
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_abbrev'
.L44:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_line'
.L45:
	.word	.L140-.L139
.L139:
	.half	3
	.word	.L142-.L141
.L141:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0,0
.L142:
	.byte	5,5,7,0,5,2
	.word	.L32
	.byte	3,154,2,1,5,54,7,9
	.half	.L143-.L32
	.byte	3,5,1,5,28,9
	.half	.L144-.L143
	.byte	1,5,21,9
	.half	.L145-.L144
	.byte	3,126,1,5,9,9
	.half	.L146-.L145
	.byte	1,5,71,7,9
	.half	.L147-.L146
	.byte	3,2,1,5,53,9
	.half	.L148-.L147
	.byte	1,5,26,9
	.half	.L149-.L148
	.byte	1,5,93,9
	.half	.L150-.L149
	.byte	1,5,72,9
	.half	.L19-.L150
	.byte	3,4,1,5,53,9
	.half	.L151-.L19
	.byte	1,5,26,9
	.half	.L152-.L151
	.byte	1,5,9,9
	.half	.L20-.L152
	.byte	3,126,1,9
	.half	.L18-.L20
	.byte	3,8,1,5,12,9
	.half	.L21-.L18
	.byte	3,3,1,5,5,9
	.half	.L153-.L21
	.byte	1,5,1,9
	.half	.L22-.L153
	.byte	3,1,1,7,9
	.half	.L47-.L22
	.byte	0,1,1
.L140:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_ranges'
.L46:
	.word	-1,.L32,0,.L47-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_info'
.L48:
	.word	211
	.half	3
	.word	.L49
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L51,.L50
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_ResetToDefaultSession',0,1,187,2,31
	.word	.L80
	.byte	1,1,1
	.word	.L34,.L84,.L33
	.byte	4
	.word	.L34,.L84
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_abbrev'
.L49:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_line'
.L50:
	.word	.L155-.L154
.L154:
	.half	3
	.word	.L157-.L156
.L156:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0,0
.L157:
	.byte	5,4,7,0,5,2
	.word	.L34
	.byte	3,190,2,1,5,38,9
	.half	.L158-.L34
	.byte	1,5,36,9
	.half	.L159-.L158
	.byte	1,5,12,9
	.half	.L160-.L159
	.byte	3,1,1,5,4,9
	.half	.L161-.L160
	.byte	1,5,1,9
	.half	.L23-.L161
	.byte	3,1,1,7,9
	.half	.L52-.L23
	.byte	0,1,1
.L155:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_ranges'
.L51:
	.word	-1,.L34,0,.L52-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_info'
.L53:
	.word	309
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L56,.L55
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_Prv_SetSesCtrlType',0,1,225,1,21,1,1,1
	.word	.L30,.L85,.L29
	.byte	4
	.byte	'SesCtrlType_u8',0,1,225,1,77
	.word	.L80,.L86
	.byte	5
	.word	.L30,.L85
	.byte	6
	.byte	'currentSession_u8',0,1,227,1,36
	.word	.L80,.L87
	.byte	7
	.word	.L88,.L89,.L17
	.byte	8
	.word	.L90,.L91
	.byte	8
	.word	.L92,.L93
	.byte	9
	.word	.L94,.L89,.L17
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_line'
.L55:
	.word	.L163-.L162
.L162:
	.half	3
	.word	.L165-.L164
.L164:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_Inl.h',0,0,0,0,0
.L165:
	.byte	5,21,7,0,5,2
	.word	.L30
	.byte	3,224,1,1,5,55,9
	.half	.L131-.L30
	.byte	3,6,1,5,29,9
	.half	.L166-.L131
	.byte	1,5,17,9
	.half	.L167-.L166
	.byte	3,126,1,5,5,9
	.half	.L168-.L167
	.byte	1,5,72,7,9
	.half	.L169-.L168
	.byte	3,2,1,5,54,9
	.half	.L170-.L169
	.byte	1,5,33,9
	.half	.L132-.L170
	.byte	3,1,1,5,31,9
	.half	.L171-.L132
	.byte	1,5,94,9
	.half	.L172-.L171
	.byte	3,127,1,5,72,9
	.half	.L12-.L172
	.byte	3,5,1,5,54,9
	.half	.L173-.L12
	.byte	1,5,51,9
	.half	.L13-.L173
	.byte	3,3,1,5,5,9
	.half	.L174-.L13
	.byte	1,5,57,7,9
	.half	.L175-.L174
	.byte	3,2,1,5,72,9
	.half	.L176-.L175
	.byte	1,9
	.half	.L14-.L176
	.byte	3,4,1,5,28,9
	.half	.L177-.L14
	.byte	3,4,1,5,24,9
	.half	.L15-.L177
	.byte	3,5,1,5,30,9
	.half	.L178-.L15
	.byte	3,4,1,4,2,5,62,9
	.half	.L89-.L178
	.byte	3,161,127,1,5,5,9
	.half	.L179-.L89
	.byte	3,1,1,4,1,5,1,9
	.half	.L17-.L179
	.byte	3,231,0,1,7,9
	.half	.L57-.L17
	.byte	0,1,1
.L163:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_ranges'
.L56:
	.word	-1,.L30,0,.L57-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_info'
.L58:
	.word	218
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_Prv_ProcessResetToDefaultSession',0,1,206,2,22,1,1,1
	.word	.L36,.L95,.L35
	.byte	4
	.word	.L36,.L95
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_line'
.L60:
	.word	.L181-.L180
.L180:
	.half	3
	.word	.L183-.L182
.L182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0,0
.L183:
	.byte	5,16,7,0,5,2
	.word	.L36
	.byte	3,207,2,1,5,4,9
	.half	.L184-.L36
	.byte	1,5,31,7,9
	.half	.L185-.L184
	.byte	3,2,1,5,56,9
	.half	.L186-.L185
	.byte	1,5,22,9
	.half	.L187-.L186
	.byte	3,6,1,5,61,9
	.half	.L188-.L187
	.byte	3,3,1,5,86,9
	.half	.L189-.L188
	.byte	1,5,42,9
	.half	.L190-.L189
	.byte	3,3,1,5,40,9
	.half	.L191-.L190
	.byte	1,5,1,9
	.half	.L24-.L191
	.byte	3,2,1,7,9
	.half	.L62-.L24
	.byte	0,1,1
.L181:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L36,0,.L62-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_info'
.L63:
	.word	220
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_Prv_ResetDefaultSessionRequestFlag',0,1,236,2,22,1,1,1
	.word	.L38,.L96,.L37
	.byte	4
	.word	.L38,.L96
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_line'
.L65:
	.word	.L193-.L192
.L192:
	.half	3
	.word	.L195-.L194
.L194:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0,0
.L195:
	.byte	5,4,7,0,5,2
	.word	.L38
	.byte	3,237,2,1,5,38,9
	.half	.L196-.L38
	.byte	1,5,36,9
	.half	.L197-.L196
	.byte	1,5,1,9
	.half	.L198-.L197
	.byte	3,1,1,7,9
	.half	.L67-.L198
	.byte	0,1,1
.L193:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L38,0,.L67-.L38,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_info'
.L68:
	.word	433
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_Prv_SetNonDefaultSesCtrlType',0,1,68,31
	.word	.L80
	.byte	1,1
	.word	.L26,.L97,.L25
	.byte	4
	.byte	'CurrentSession_u8',0,1,68,96
	.word	.L80,.L98
	.byte	4
	.byte	'SesCtrlType_u8',0,1,69,41
	.word	.L80,.L99
	.byte	5
	.word	.L26,.L97
	.byte	6
	.byte	'isSessionAvailable',0,1,71,28
	.word	.L80,.L100
	.byte	6
	.byte	'sessionMask_u32',0,1,74,27
	.word	.L101,.L102
	.byte	6
	.byte	'nrSessions_u8',0,1,77,26
	.word	.L80,.L103
	.byte	6
	.byte	'idxIndex_u8',0,1,78,26
	.word	.L80,.L104
	.byte	7
	.word	.L105,.L106,.L7
	.byte	8
	.word	.L107,.L106,.L7
	.byte	6
	.byte	'retval_b',0,2,144,7,13
	.word	.L80,.L108
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_line'
.L70:
	.word	.L200-.L199
.L199:
	.half	3
	.word	.L202-.L201
.L201:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0,0
.L202:
	.byte	5,47,7,0,5,2
	.word	.L26
	.byte	3,198,0,1,5,21,9
	.half	.L114-.L26
	.byte	3,24,1,5,56,9
	.half	.L115-.L114
	.byte	1,5,12,9
	.half	.L3-.L115
	.byte	3,2,1,5,37,9
	.half	.L203-.L3
	.byte	1,5,9,9
	.half	.L204-.L203
	.byte	1,5,13,7,9
	.half	.L205-.L204
	.byte	3,3,1,5,69,9
	.half	.L4-.L205
	.byte	3,123,1,5,56,9
	.half	.L2-.L4
	.byte	1,5,5,7,9
	.half	.L5-.L2
	.byte	3,9,1,5,28,7,9
	.half	.L206-.L5
	.byte	3,2,1,5,9,9
	.half	.L207-.L206
	.byte	3,2,1,5,47,9
	.half	.L208-.L207
	.byte	1,4,2,5,5,9
	.half	.L106-.L208
	.byte	3,168,6,1,4,1,5,9,9
	.half	.L7-.L106
	.byte	3,218,121,1,5,54,7,9
	.half	.L209-.L7
	.byte	3,3,1,5,52,9
	.half	.L210-.L209
	.byte	1,5,35,9
	.half	.L8-.L210
	.byte	3,4,1,5,59,9
	.half	.L113-.L8
	.byte	3,9,1,5,47,9
	.half	.L211-.L113
	.byte	3,4,1,5,52,9
	.half	.L212-.L211
	.byte	1,5,50,9
	.half	.L120-.L212
	.byte	3,115,1,5,9,9
	.half	.L6-.L120
	.byte	3,18,1,5,5,9
	.half	.L9-.L6
	.byte	3,3,1,5,1,9
	.half	.L10-.L9
	.byte	3,1,1,7,9
	.half	.L72-.L10
	.byte	0,1,1
.L200:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L26,0,.L72-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_info'
.L73:
	.word	269
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L39
	.byte	3
	.byte	'Dcm_Prv_SetDefaultSesCtrlType',0,1,153,1,28,1,1
	.word	.L28,.L109,.L27
	.byte	4
	.byte	'CurrentSession_u8',0,1,153,1,90
	.word	.L80,.L110
	.byte	4
	.byte	'SesCtrlType_u8',0,1,154,1,41
	.word	.L80,.L111
	.byte	5
	.word	.L28,.L109
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_line'
.L75:
	.word	.L214-.L213
.L213:
	.half	3
	.word	.L216-.L215
.L215:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0,0,0,0,0
.L216:
	.byte	5,28,7,0,5,2
	.word	.L28
	.byte	3,152,1,1,5,5,9
	.half	.L217-.L28
	.byte	3,25,1,5,49,9
	.half	.L218-.L217
	.byte	1,5,46,9
	.half	.L219-.L218
	.byte	1,5,49,9
	.half	.L220-.L219
	.byte	3,1,1,5,46,9
	.half	.L221-.L220
	.byte	1,5,5,9
	.half	.L222-.L221
	.byte	3,5,1,5,46,9
	.half	.L223-.L222
	.byte	1,5,44,9
	.half	.L224-.L223
	.byte	1,5,45,9
	.half	.L225-.L224
	.byte	3,2,1,5,43,9
	.half	.L226-.L225
	.byte	1,5,27,9
	.half	.L227-.L226
	.byte	3,5,1,5,31,9
	.half	.L124-.L227
	.byte	1,5,35,9
	.half	.L125-.L124
	.byte	1,5,31,9
	.half	.L126-.L125
	.byte	3,6,1,5,29,9
	.half	.L128-.L126
	.byte	3,4,1,5,54,9
	.half	.L228-.L128
	.byte	1,5,5,9
	.half	.L129-.L228
	.byte	1,5,1,7,9
	.half	.L11-.L129
	.byte	3,11,1,7,9
	.half	.L77-.L11
	.byte	0,1,1
.L214:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L28,0,.L77-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_isResetToDefaultRequested_b')
	.sect	'.debug_info'
.L78:
	.word	189
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsl\\Dcm_Dsl_Session.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L39
	.byte	3
	.byte	'Dcm_isResetToDefaultRequested_b',0,14,19,29
	.word	.L80
	.byte	5,3
	.word	Dcm_isResetToDefaultRequested_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_isResetToDefaultRequested_b')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L81-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L83:
	.word	-1,.L32,0,.L21-.L32
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L95-.L36
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L96-.L38
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_loc'
.L110:
	.word	-1,.L28,0,.L124-.L28
	.half	1
	.byte	84
	.word	.L129-.L28,.L11-.L28
	.half	1
	.byte	88
	.word	0,0
.L27:
	.word	-1,.L28,0,.L109-.L28
	.half	2
	.byte	138,0
	.word	0,0
.L111:
	.word	-1,.L28,0,.L125-.L28
	.half	1
	.byte	85
	.word	.L126-.L28,.L127-.L28
	.half	1
	.byte	89
	.word	.L127-.L28,.L128-.L28
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_loc'
.L98:
	.word	-1,.L26,0,.L112-.L26
	.half	1
	.byte	84
	.word	.L6-.L26,.L121-.L26
	.half	1
	.byte	84
	.word	0,0
.L25:
	.word	-1,.L26,0,.L97-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L99:
	.word	-1,.L26,0,.L113-.L26
	.half	1
	.byte	85
	.word	.L112-.L26,.L113-.L26
	.half	1
	.byte	84
	.word	.L6-.L26,.L122-.L26
	.half	1
	.byte	85
	.word	0,0
.L104:
	.word	-1,.L26,.L115-.L26,.L116-.L26
	.half	1
	.byte	95
	.word	.L2-.L26,.L117-.L26
	.half	1
	.byte	95
	.word	.L6-.L26,.L9-.L26
	.half	1
	.byte	95
	.word	0,0
.L100:
	.word	-1,.L26,.L114-.L26,.L97-.L26
	.half	1
	.byte	88
	.word	.L123-.L26,.L97-.L26
	.half	1
	.byte	82
	.word	0,0
.L103:
	.word	0,0
.L108:
	.word	0,0
.L102:
	.word	-1,.L26,.L118-.L26,.L119-.L26
	.half	1
	.byte	82
	.word	.L119-.L26,.L120-.L26
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L85-.L30
	.half	2
	.byte	138,0
	.word	0,0
.L86:
	.word	-1,.L30,0,.L130-.L30
	.half	1
	.byte	84
	.word	.L131-.L30,.L85-.L30
	.half	1
	.byte	88
	.word	.L14-.L30,.L133-.L30
	.half	1
	.byte	84
	.word	0,0
.L87:
	.word	-1,.L30,.L132-.L30,.L12-.L30
	.half	1
	.byte	89
	.word	.L13-.L30,.L85-.L30
	.half	1
	.byte	89
	.word	0,0
.L93:
	.word	0,0
.L91:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_loc'
.L33:
	.word	-1,.L34,0,.L84-.L34
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L229:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SetNonDefaultSesCtrlType')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L26,.L97-.L26
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SetDefaultSesCtrlType')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L28,.L109-.L28
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_SetSesCtrlType')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L30,.L85-.L30
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetSesCtrlType')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L32,.L81-.L32
	.sdecl	'.debug_frame',debug,cluster('Dcm_ResetToDefaultSession')
	.sect	'.debug_frame'
	.word	24
	.word	.L229,.L34,.L84-.L34
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ProcessResetToDefaultSession')
	.sect	'.debug_frame'
	.word	12
	.word	.L229,.L36,.L95-.L36
	.sdecl	'.debug_frame',debug,cluster('Dcm_Prv_ResetDefaultSessionRequestFlag')
	.sect	'.debug_frame'
	.word	24
	.word	.L229,.L38,.L96-.L38
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   368  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   369  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   370  
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   371  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\Dsl\Dcm_Dsl_Session.c	   372  #include "Dcm_Cfg_MemMap.h"

	; Module end
