	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14456a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCore_DslDsd_SignalLib.src BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c'

	
$TC16X
	
	.sdecl	'.text.DcmCore_DslDsd_SignalLib.Dcm_IsEndiannessConversionNecessary',code,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.text.DcmCore_DslDsd_SignalLib.Dcm_IsEndiannessConversionNecessary'
	.align	2
	

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     1  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     2  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     3  #include "DcmCore_DslDsd_Inf.h"
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     4  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     5  #if ((DCM_CFG_ROUTINEARRAY_INSIG != DCM_CFG_OFF)||(DCM_CFG_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     6  #define DCM_START_SEC_CONST_8
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     7  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     8  static const VAR(uint8,AUTOMATIC) CalArraySize_u8[6] = {8,16,32,8,16,32};     /* Look up table to get DataType Size : eg: UINT16_N will have value 16 */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	     9  #if (LOW_BYTE_FIRST == CPU_BYTE_ORDER)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    10  static  const VAR(uint8,AUTOMATIC) EndianessConvLUT_u8[6] = {0,1,0,1,2,3};   /* Look up table for extracting/storing  data bytes from request buffer or to Response buffer */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    11  #else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    12  static const VAR(uint8,AUTOMATIC) EndianessConvLUT_u8[6] = {1,0,3,2,1,0};
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    13  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    14  #define DCM_STOP_SEC_CONST_8
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    15  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    16  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    17  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    18  #define DCM_START_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    19  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    20  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    21  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    22  /**The below function is enabled when RDBI/WDBI with atleast one sender receiver signal is enabled or RC service with
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    23   * atleast one fixed length signal is available or OBD Model wiht atleast one PID of sender receiver type is available
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    24   * or Dem Sender receiver is enable*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    25  #if (((DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF ))      ||            \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    26       ((DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_OBDMODE1_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_DSP_OBDMODE1_SR_ENABLED!=DCM_CFG_OFF))               ||            \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    27       ((DCM_CFG_DSP_READDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_READ_SR_ENABLED != DCM_CFG_OFF))         ||            \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    28       ((DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF)&&((DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEVARLENGTH==DCM_CFG_OFF)))                     ||            \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    29       (DCM_CFG_ROUTINEARRAY_INSIG != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    30       (DCM_CFG_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    31       (DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    32       (DCM_CFG_RCRANGE_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    33       (DCM_CFG_RBA_DEM_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    34  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    35   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    36   * Dcm_IsEndiannessConversionNecessary : API to check if endianness conversion is required or not,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    37   *                                       if the function returns true endianness conversion is triggered
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    38   *                                       otherwise no
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    39   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    40   * \param           dataEndianType_en       :  The endianness type of the signal.
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    41   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    42   * \retval          boolean                 :
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    43   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    44   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    45   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    46   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    47  static FUNC(boolean,DCM_CODE) Dcm_IsEndiannessConversionNecessary(VAR(uint8,AUTOMATIC) dataEndianness_u8)
; Function Dcm_IsEndiannessConversionNecessary
.L46:
Dcm_IsEndiannessConversionNecessary:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    48  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    49      VAR(boolean,AUTOMATIC) flagConvStatus_b;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    50  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    51      /*Initialization of local variables*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    52  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    53      flagConvStatus_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    54  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    55      if((LOW_BYTE_FIRST==CPU_BYTE_ORDER) && (DCM_BIG_ENDIAN==dataEndianness_u8))
	mov	d15,#1
.L246:
	jeq	d15,#0,.L2
.L247:
	jne	d4,#1,.L3
.L248:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    56      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    57          /*Endianness Conversion necessary, since cpu is of little endian and signal is of big endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    58  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    59          flagConvStatus_b = TRUE;
	mov	d2,#1
.L144:
	j	.L4
.L3:
.L2:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    60      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    61      else if((HIGH_BYTE_FIRST==CPU_BYTE_ORDER) && (DCM_LITTLE_ENDIAN==dataEndianness_u8))
	mov	d15,#0
.L249:
	jeq	d15,#0,.L5
.L250:
	jne	d4,#0,.L6
.L251:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    62      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    63          /*Endianness Conversion necessary, since cpu is of big endian and signal is of little endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    64  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    65          flagConvStatus_b = TRUE;
	mov	d2,#1
.L145:
	j	.L7
.L6:
.L5:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    66      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    67      else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    68      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    69          /*Endianness Conversion not necessary*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    70  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    71          flagConvStatus_b = FALSE;
	mov	d2,#0
.L7:
.L4:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    72      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    73  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    74      return flagConvStatus_b;
	j	.L8

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    75  }
.L8:
	ret
.L141:
	
__Dcm_IsEndiannessConversionNecessary_function_end:
	.size	Dcm_IsEndiannessConversionNecessary,__Dcm_IsEndiannessConversionNecessary_function_end-Dcm_IsEndiannessConversionNecessary
.L69:
	; End of function
	
	.sdecl	'.text.DcmCore_DslDsd_SignalLib.Dcm_GetSignal_u32',code,cluster('Dcm_GetSignal_u32')
	.sect	'.text.DcmCore_DslDsd_SignalLib.Dcm_GetSignal_u32'
	.align	2
	
	.global	Dcm_GetSignal_u32

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    76  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    77  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    78  /**The below function is enabled when WDBI with atleast one sender receiver signal is enabled or RC service with
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    79   * atleast one fixed length signal is available*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    80  #if (((DCM_CFG_DSP_WRITEDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_WRITE_SR_ENABLED != DCM_CFG_OFF ))   ||     \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    81       (DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF) && ((DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEVARLENGTH==DCM_CFG_OFF)))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    82  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    83   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    84   * Dcm_GetSignal_u32 : API to get the Signal value from the request buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    85   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    86   * \param           xDataType_u8:   xDataType_u8 of the signal BOOLEAN/UINT8/SINT8 etc
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    87   *                  posnStart_u16:   Start bit position of the signal
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    88   *                  adrReqBuffer_u8:  Pointer to the request buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    89   *                  dataEndianness_u8
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    90   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    91   * \retval          dataSignal_u32: Value of the signal
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    92   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    93   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    94   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    95   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    96  FUNC(uint32,DCM_CODE) Dcm_GetSignal_u32(VAR(uint8,AUTOMATIC) xDataType_u8,
; Function Dcm_GetSignal_u32
.L48:
Dcm_GetSignal_u32:	.type	func

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    97                                      VAR(uint16,AUTOMATIC) posnStart_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    98                                      P2CONST(uint8, AUTOMATIC, DCM_INTERN_DATA) adrReqBuffer_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	    99                                      VAR(uint8,AUTOMATIC) dataEndianness_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   100  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   101      /* Local variables */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   102      VAR(uint16,AUTOMATIC) dataByteNum_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   103      VAR(uint16,AUTOMATIC) dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   104      VAR(uint32,AUTOMATIC) dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   105      VAR(boolean,AUTOMATIC) flagConvStatus_b;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   106  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   107      /* Calculate the Byte position in the request buffer for this signal */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   108      dataByteNum_u16 = (uint16)((uint32)posnStart_u16/8u);
	sh	d15,d5,#-3
.L84:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   109      dataSignal_u32  = 0;
	mov	d8,#0
.L85:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   110      dataSignal_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   111      /*Endianness Conversion not necessary*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   112      flagConvStatus_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   113  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   114      switch(xDataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   115      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   116          case DCM_BOOLEAN:
	mov	d0,#0
	jeq	d0,d4,.L9
.L191:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   117          {   /* Set the signal if the request boolean signal is set in the request */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   118              dataSignal_u32 = (uint32)(adrReqBuffer_u8[dataByteNum_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   119              dataSignal_u32 &= ((uint32)0x1u << (posnStart_u16 % 8u));
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   120              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   121          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   122          case DCM_UINT8:
	mov	d0,#1
	jeq	d0,d4,.L10
.L192:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   123          case DCM_SINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   124          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   125              dataSignal_u32 = adrReqBuffer_u8[dataByteNum_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   126              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   127          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   128          case DCM_UINT16:
	mov	d0,#2
	jeq	d0,d4,.L11
.L193:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   129          case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   130          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   131              /* Copy the data from buffer by pointer typecast into an uint16 variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   132  #if(LOW_BYTE_FIRST==CPU_BYTE_ORDER)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   133                  /*Endianness Conversion necessary, since cpu is of little endian and signal is of big endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   134                  dataSignal_u16 = (uint16)(adrReqBuffer_u8[dataByteNum_u16 + 1u]);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   135                  dataSignal_u16 = (dataSignal_u16 << 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   136                  dataSignal_u16 |= (uint16)(adrReqBuffer_u8[dataByteNum_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   137  #else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   138                  /*Endianness Conversion necessary, since cpu is of big endian and signal is of little endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   139                  dataSignal_u16 = (uint16)(adrReqBuffer_u8[dataByteNum_u16]);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   140                  dataSignal_u16 = (dataSignal_u16 << 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   141                  dataSignal_u16 |= (adrReqBuffer_u8[dataByteNum_u16 + 1u]);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   142  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   143              /*Check if endianness conversion is necessary or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   144              flagConvStatus_b=Dcm_IsEndiannessConversionNecessary(dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   145  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   146              /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   147  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   148              if(TRUE==flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   149              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   150                  DCM_ENDIANNESSCONVERSION16(dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   151              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   152  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   153              dataSignal_u32 = (uint32)dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   154              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   155          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   156          case DCM_UINT32:
	mov	d0,#3
	jeq	d0,d4,.L12
.L194:
	mov	d0,#4
	jeq	d0,d4,.L13
.L195:
	mov	d0,#5
	jeq	d0,d4,.L14
.L196:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   157          case DCM_SINT32:
	mov	d0,#6
	jeq	d0,d4,.L15
	j	.L16
.L9:
	addsc.a	a15,a4,d15,#0
	ld.bu	d8,[a15]
.L149:
	mov	d0,#1
.L197:
	and	d15,d5,#7
.L148:
	sh	d0,d0,d15
.L90:
	and	d8,d0
.L91:
	j	.L17
.L10:
.L13:
	addsc.a	a15,a4,d15,#0
.L92:
	ld.bu	d8,[a15]
.L93:
	j	.L18
.L11:
.L14:
	addsc.a	a15,a4,d15,#0
.L198:
	ld.bu	d0,[a15]1
.L151:
	sha	d8,d0,#8
.L150:
	addsc.a	a15,a4,d15,#0
	ld.bu	d15,[a15]
.L94:
	or	d8,d15
.L95:
	mov	d4,d6
.L147:
	call	Dcm_IsEndiannessConversionNecessary
.L146:
	jne	d2,#1,.L19
.L102:

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
; .\Integration\BSW\Include\rba_BswSrv.h	   131  
; .\Integration\BSW\Include\rba_BswSrv.h	   132  
; .\Integration\BSW\Include\rba_BswSrv.h	   133      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   135  }
; .\Integration\BSW\Include\rba_BswSrv.h	   136  
; .\Integration\BSW\Include\rba_BswSrv.h	   137  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   138   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   139   * rba_BswSrv_ByteOrderSwap16
; .\Integration\BSW\Include\rba_BswSrv.h	   140   *
; .\Integration\BSW\Include\rba_BswSrv.h	   141   * Swaps the byte order of a 16 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   142   *
; .\Integration\BSW\Include\rba_BswSrv.h	   143   * \param   Input_u16: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   144   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   145   * \retval  uint16
; .\Integration\BSW\Include\rba_BswSrv.h	   146   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   147   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   148   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   149   */
; .\Integration\BSW\Include\rba_BswSrv.h	   150  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16)
; .\Integration\BSW\Include\rba_BswSrv.h	   151  {
; .\Integration\BSW\Include\rba_BswSrv.h	   152      uint16 retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   153  
; .\Integration\BSW\Include\rba_BswSrv.h	   154  
; .\Integration\BSW\Include\rba_BswSrv.h	   155      retVal_u16 = ((Input_u16 & 0x00FFu) << 8) | ((Input_u16 & 0xFF00u) >> 8);
	and	d15,d8,#255
.L199:
	sha	d0,d15,#8
.L200:
	mov.u	d15,#65280
.L201:
	and	d8,d15
.L152:
	sha	d8,#-8
.L153:
	or	d8,d0
.L202:

; .\Integration\BSW\Include\rba_BswSrv.h	   159      return retVal_u16;      (inlined)
	j	.L20

; .\Integration\BSW\Include\rba_BswSrv.h	   160  }      (inlined)
.L20:
.L19:
	j	.L21
.L12:
.L15:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   158          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   159  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   160  #if(LOW_BYTE_FIRST==CPU_BYTE_ORDER)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   161  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   162                  /*Endianness Conversion necessary, since cpu is of little endian and signal is of big endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   163                  dataSignal_u32  = (uint32)adrReqBuffer_u8[dataByteNum_u16];
	addsc.a	a15,a4,d15,#0
	ld.bu	d0,[a15]
.L157:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   164                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16 + 1u]) << 8u) ;
	addsc.a	a15,a4,d15,#0
.L203:
	ld.bu	d15,[a15]1
.L155:
	sh	d15,d15,#8
.L204:
	or	d0,d15
.L205:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   165                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16 + 2u]) << 16u);
	ld.bu	d15,[a15]2
.L206:
	sh	d15,d15,#16
.L207:
	or	d0,d15
.L208:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   166                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16 + 3u]) << 24u);
	ld.bu	d15,[a15]3
.L209:
	sh	d8,d15,#24
.L96:
	or	d8,d0
.L97:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   167  #else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   168  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   169                  /*Endianness Conversion necessary, since cpu is of big endian and signal is of little endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   170                  dataSignal_u32  =   (uint32)adrReqBuffer_u8[dataByteNum_u16 + 3u];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   171                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16 + 2u]) << 8u) ;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   172                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16 + 1u]) << 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   173                  dataSignal_u32 |= (((uint32)adrReqBuffer_u8[dataByteNum_u16]) << 24u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   174  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   175  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   176              /*Check if endianness conversion is necessary or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   177              flagConvStatus_b=Dcm_IsEndiannessConversionNecessary(dataEndianness_u8);
	mov	d4,d6
.L156:
	call	Dcm_IsEndiannessConversionNecessary
.L154:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   178  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   179              /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   180  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   181              if(TRUE==flagConvStatus_b)
	jne	d2,#1,.L22
.L98:

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
	mov.u	d15,#65280
.L210:
	sh	d0,d8,#24
.L211:
	and	d1,d8,d15
.L212:
	sh	d1,d1,#8
.L213:
	or	d0,d1
.L214:
	sh	d1,d8,#-8
.L215:
	and	d1,d15
.L216:
	or	d0,d1
.L217:
	sh	d8,d8,#-24
.L218:
	or	d8,d0
.L219:

; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;      (inlined)
	j	.L23

; .\Integration\BSW\Include\rba_BswSrv.h	   135  }      (inlined)
.L23:
.L22:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   182              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   183                  DCM_ENDIANNESSCONVERSION32(dataSignal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   184              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   185              break;
	j	.L24

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   186          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   187          default:
.L16:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   188          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   189              /*Since All the Data types are handled already in other cases , there is nothing to do in Default */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   190              break;
	j	.L25

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   191          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   192      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   193  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   194      /* Check if endianness conversion is enabled for the active protocol or the routine */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   195  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   196      return(dataSignal_u32);
.L25:
.L24:
.L21:
.L18:
.L17:
	mov	d2,d8
.L99:
	j	.L26

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   197  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   198  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   199  }
.L26:
	ret
.L71:
	
__Dcm_GetSignal_u32_function_end:
	.size	Dcm_GetSignal_u32,__Dcm_GetSignal_u32_function_end-Dcm_GetSignal_u32
.L59:
	; End of function
	
	.sdecl	'.text.DcmCore_DslDsd_SignalLib.Dcm_StoreSignal',code,cluster('Dcm_StoreSignal')
	.sect	'.text.DcmCore_DslDsd_SignalLib.Dcm_StoreSignal'
	.align	2
	
	.global	Dcm_StoreSignal

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   200  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   201  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   202  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   203  /**The below function is enabled when RDBI with atleast one sender receiver signal is enabled or RC service with
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   204   * atleast one fixed length signal is available or OBD Model wiht atleast one PID of sender receiver type is available
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   205   * or Dem Sender receiver is enable*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   206  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   207  #if (\ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   208  /* FC_VariationPoint_START */ \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   209  ((DCM_CFG_DSPOBDSUPPORT_ENABLED != DCM_CFG_OFF)&&(DCM_CFG_DSP_OBDMODE1_ENABLED != DCM_CFG_OFF)&& (DCM_CFG_DSP_OBDMODE1_SR_ENABLED!=DCM_CFG_OFF)) ||            \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   210  /* FC_VariationPoint_END */ \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   211       ((DCM_CFG_DSP_READDATABYIDENTIFIER_ENABLED != DCM_CFG_OFF) && (DCM_CFG_DSP_READ_SR_ENABLED != DCM_CFG_OFF)) ||     \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   212       ((DCM_CFG_DSP_ROUTINECONTROL_ENABLED != DCM_CFG_OFF)&&((DCM_CFG_ROUTINEVARLENGTH==DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEVARLENGTH==DCM_CFG_OFF)))||\ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   213       (DCM_CFG_RBA_DEM_SR_ENABLED != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   214  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   215  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   216   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   217   * Dcm_StoreSignal : API to get the Store the Signal value to the response buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   218   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   219   * \param           SignalSize:  The size of the signal in bits.
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   220   *                  posnStart_u16:    Start bit position of the signal
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   221   *                  adrRespBuffer_u8:  Pointer to the request buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   222   *                  dataSignalValue_u32: Signal value
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   223   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   224   * \retval          None
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   225   * \seealso
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   226   * \usedresources
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   227   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   228   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   229  FUNC(void,DCM_CODE) Dcm_StoreSignal(VAR(uint8,AUTOMATIC) xDataType_u8,
; Function Dcm_StoreSignal
.L50:
Dcm_StoreSignal:	.type	func
	mov	e8,d4,d5
	mov.aa	a15,a4
.L117:
	mov	d10,d6
.L118:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   230                                      VAR(uint16,AUTOMATIC) posnStart_u16,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   231                                      P2VAR(uint8, AUTOMATIC, DCM_INTERN_DATA) adrRespBuffer_u8,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   232                                      VAR(uint32,AUTOMATIC) dataSignalValue_u32,
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   233                                      VAR(uint8,AUTOMATIC) dataEndianness_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   234  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   235      VAR(uint16,AUTOMATIC) dataByteNum_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   236      VAR(uint16,AUTOMATIC) dataSignalValue_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   237      VAR(boolean,AUTOMATIC) flagConvStatus_b;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   238  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   239      /*Initialization of local variables*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   240      dataByteNum_u16 = (uint16)((uint32)posnStart_u16/8u);
	sh	d11,d8,#-3
.L161:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   241      /*Endianness Conversion not necessary*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   242      flagConvStatus_b = FALSE;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   243  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   244      /*Check if endianness conversion is necessary or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   245      flagConvStatus_b=Dcm_IsEndiannessConversionNecessary(dataEndianness_u8);
	mov	d4,d7
.L159:
	call	Dcm_IsEndiannessConversionNecessary
.L158:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   246  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   247      /* Store the signal in the buffer based on endianness conversion */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   248      switch(xDataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   249      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   250          case DCM_BOOLEAN:
	mov	d15,#0
.L162:
	jeq	d15,d9,.L27
.L163:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   251          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   252              /* Set the Bit in the buffer if the signal value is set */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   253              if(dataSignalValue_u32 != 0u)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   254              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   255                  adrRespBuffer_u8[dataByteNum_u16] |= (uint8)(0x1u<<(posnStart_u16%8u));
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   256              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   257              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   258  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   259          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   260          case DCM_UINT8:
	mov	d0,#1
.L164:
	jeq	d0,d9,.L28
.L165:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   261          case DCM_SINT8:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   262          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   263              adrRespBuffer_u8[dataByteNum_u16] = (uint8)(dataSignalValue_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   264              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   265          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   266          case DCM_UINT16:
	mov	d0,#2
.L166:
	jeq	d0,d9,.L29
.L167:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   267          case DCM_SINT16:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   268          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   269              dataSignalValue_u16=(uint16)dataSignalValue_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   270              /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   271              if(FALSE!=flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   272              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   273                  DCM_ENDIANNESSCONVERSION16(dataSignalValue_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   274              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   275  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   276  #if(LOW_BYTE_FIRST==CPU_BYTE_ORDER)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   277  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   278                  /*Endianness Conversion necessary, since cpu is of little endian and signal is of big endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   279                  adrRespBuffer_u8[dataByteNum_u16] =  (uint8)(dataSignalValue_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   280                  adrRespBuffer_u8[dataByteNum_u16 + 1u] =  (uint8)(dataSignalValue_u16 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   281  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   282  #else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   283  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   284                  /*Endianness Conversion necessary, since cpu is of big endian and signal is of little endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   285                  adrRespBuffer_u8[dataByteNum_u16] =  (uint8)(dataSignalValue_u16 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   286                  adrRespBuffer_u8[dataByteNum_u16 + 1u] =  (uint8)(dataSignalValue_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   287  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   288  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   289              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   290          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   291          case DCM_UINT32:
	mov	d0,#3
.L168:
	jeq	d0,d9,.L30
.L169:
	mov	d15,#4
.L170:
	jeq	d15,d9,.L31
.L171:
	mov	d15,#5
.L172:
	jeq	d15,d9,.L32
.L173:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   292          case DCM_SINT32:
	mov	d15,#6
.L174:
	jeq	d15,d9,.L33
.L175:
	j	.L34
.L27:
	jeq	d10,#0,.L35
.L121:
	addsc.a	a15,a15,d11,#0
.L160:
	ld.bu	d0,[a15]
.L224:
	mov	d1,#1
.L176:
	and	d15,d8,#7
.L177:
	sh	d1,d1,d15
.L225:
	or	d0,d1
	st.b	[a15],d0
.L35:
	j	.L36
.L28:
.L31:
	addsc.a	a15,a15,d11,#0
.L122:
	st.b	[a15],d10
.L123:
	j	.L37
.L29:
.L32:
	extr.u	d0,d10,#0,#16
.L124:
	jeq	d2,#0,.L38
.L135:

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
; .\Integration\BSW\Include\rba_BswSrv.h	   131  
; .\Integration\BSW\Include\rba_BswSrv.h	   132  
; .\Integration\BSW\Include\rba_BswSrv.h	   133      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   135  }
; .\Integration\BSW\Include\rba_BswSrv.h	   136  
; .\Integration\BSW\Include\rba_BswSrv.h	   137  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   138   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   139   * rba_BswSrv_ByteOrderSwap16
; .\Integration\BSW\Include\rba_BswSrv.h	   140   *
; .\Integration\BSW\Include\rba_BswSrv.h	   141   * Swaps the byte order of a 16 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   142   *
; .\Integration\BSW\Include\rba_BswSrv.h	   143   * \param   Input_u16: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   144   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   145   * \retval  uint16
; .\Integration\BSW\Include\rba_BswSrv.h	   146   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   147   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   148   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   149   */
; .\Integration\BSW\Include\rba_BswSrv.h	   150  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16)
; .\Integration\BSW\Include\rba_BswSrv.h	   151  {
; .\Integration\BSW\Include\rba_BswSrv.h	   152      uint16 retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   153  
; .\Integration\BSW\Include\rba_BswSrv.h	   154  
; .\Integration\BSW\Include\rba_BswSrv.h	   155      retVal_u16 = ((Input_u16 & 0x00FFu) << 8) | ((Input_u16 & 0xFF00u) >> 8);
	and	d15,d0,#255
.L226:
	sha	d1,d15,#8
.L227:
	mov.u	d15,#65280
.L228:
	and	d0,d15
.L179:
	sha	d0,#-8
.L180:
	or	d0,d1
.L229:

; .\Integration\BSW\Include\rba_BswSrv.h	   159      return retVal_u16;      (inlined)
	j	.L39

; .\Integration\BSW\Include\rba_BswSrv.h	   160  }      (inlined)
.L39:
.L38:
	addsc.a	a2,a15,d11,#0
.L138:
	st.b	[a2],d0
.L139:
	addsc.a	a15,a15,d11,#0
.L178:
	sha	d0,#-8
.L181:
	st.b	[a15]1,d0
.L230:
	j	.L40
.L30:
.L33:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   293          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   294              /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   295              if(FALSE!=flagConvStatus_b)
	jeq	d2,#0,.L41
.L125:

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
	mov.u	d15,#65280
.L231:
	sh	d0,d10,#24
.L232:
	and	d1,d10,d15
.L233:
	sh	d1,d1,#8
.L234:
	or	d0,d1
.L235:
	sh	d1,d10,#-8
.L236:
	and	d1,d15
.L237:
	or	d0,d1
.L238:
	sh	d10,d10,#-24
.L239:
	or	d10,d0
.L240:

; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;      (inlined)
	j	.L42

; .\Integration\BSW\Include\rba_BswSrv.h	   135  }      (inlined)
.L42:
.L41:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   296              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   297                  DCM_ENDIANNESSCONVERSION32(dataSignalValue_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   298              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   299  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   300  #if(LOW_BYTE_FIRST==CPU_BYTE_ORDER)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   301  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   302                  /*Endianness Conversion necessary, since cpu is of little endian and signal is of big endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   303                  adrRespBuffer_u8[dataByteNum_u16] =  (uint8)(dataSignalValue_u32);
	addsc.a	a2,a15,d11,#0
.L126:
	st.b	[a2],d10
.L127:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   304                  adrRespBuffer_u8[dataByteNum_u16 + 1u] =  (uint8)(dataSignalValue_u32 >> 8u);
	addsc.a	a15,a15,d11,#0
.L128:
	sh	d15,d10,#-8
.L129:
	st.b	[a15]1,d15
.L130:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   305                  adrRespBuffer_u8[dataByteNum_u16 + 2u] =  (uint8)(dataSignalValue_u32 >> 16u);
	sh	d15,d10,#-16
.L131:
	st.b	[a15]2,d15
.L132:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   306                  adrRespBuffer_u8[dataByteNum_u16 + 3u] =  (uint8)(dataSignalValue_u32 >> 24u);
	sh	d15,d10,#-24
.L133:
	st.b	[a15]3,d15
.L241:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   307  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   308  #else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   309  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   310                  /*Endianness Conversion necessary, since cpu is of big endian and signal is of little endian*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   311                  adrRespBuffer_u8[dataByteNum_u16] =  (uint8)(dataSignalValue_u32 >> 24u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   312                  adrRespBuffer_u8[dataByteNum_u16 + 1u] =  (uint8)(dataSignalValue_u32 >> 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   313                  adrRespBuffer_u8[dataByteNum_u16 + 2u] =  (uint8)(dataSignalValue_u32 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   314                  adrRespBuffer_u8[dataByteNum_u16 + 3u] =  (uint8)(dataSignalValue_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   315  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   316  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   317              break;
	j	.L43

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   318          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   319          default:
.L34:

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   320          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   321              /*Since All the Data Types  are handled already in other cases , there is nothing to do in Default */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   322              break;
	j	.L44

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   323          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   324      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   325  }
.L44:
.L43:
.L40:
.L37:
.L36:
	ret
.L107:
	
__Dcm_StoreSignal_function_end:
	.size	Dcm_StoreSignal,__Dcm_StoreSignal_function_end-Dcm_StoreSignal
.L64:
	; End of function
	
	.calls	'Dcm_GetSignal_u32','Dcm_IsEndiannessConversionNecessary'
	.calls	'Dcm_StoreSignal','Dcm_IsEndiannessConversionNecessary'
	.calls	'Dcm_IsEndiannessConversionNecessary','',0
	.calls	'Dcm_GetSignal_u32','',0
	.calls	'Dcm_StoreSignal','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L52:
	.word	16372
	.half	3
	.word	.L53
	.byte	4
.L51:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L54
.L72:
	.byte	2
	.byte	'unsigned char',0,1,8
.L110:
	.byte	3
	.word	169
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	186
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	186
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	169
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	169
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	169
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	186
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	169
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	169
	.byte	6,0
.L74:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.word	499
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	521
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	521
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	169
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	499
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	499
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	521
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	169
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	169
	.byte	6,0
.L70:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.word	838
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	854
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	854
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	169
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	838
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	838
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	169
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	854
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	169
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	169
	.byte	6,0
.L83:
	.byte	7
	.byte	'rba_BswSrv_ByteOrderSwap32',0,3,4,125,21
	.word	838
	.byte	1,1
.L86:
	.byte	5
	.byte	'Input_u32',0,4,125,55
	.word	838
.L88:
	.byte	6,0
.L101:
	.byte	7
	.byte	'rba_BswSrv_ByteOrderSwap16',0,3,4,150,1,21
	.word	499
	.byte	1,1
.L103:
	.byte	5
	.byte	'Input_u16',0,4,150,1,55
	.word	499
.L105:
	.byte	6,0,8
	.word	191
	.byte	9
	.word	221
	.byte	9
	.word	236
	.byte	6,0,8
	.word	259
	.byte	9
	.word	291
	.byte	9
	.word	306
	.byte	6,0,8
	.word	329
	.byte	9
	.word	369
	.byte	9
	.word	383
	.byte	6,0,8
	.word	406
	.byte	9
	.word	439
	.byte	9
	.word	453
	.byte	9
	.word	474
	.byte	6,0,8
	.word	526
	.byte	9
	.word	557
	.byte	9
	.word	572
	.byte	6,0,8
	.word	595
	.byte	9
	.word	628
	.byte	9
	.word	643
	.byte	6,0,8
	.word	666
	.byte	9
	.word	707
	.byte	9
	.word	721
	.byte	6,0,8
	.word	744
	.byte	9
	.word	778
	.byte	9
	.word	792
	.byte	9
	.word	813
	.byte	6,0,8
	.word	859
	.byte	9
	.word	890
	.byte	9
	.word	905
	.byte	6,0,8
	.word	928
	.byte	9
	.word	961
	.byte	9
	.word	976
	.byte	6,0,8
	.word	999
	.byte	9
	.word	1040
	.byte	9
	.word	1054
	.byte	6,0,8
	.word	1077
	.byte	9
	.word	1111
	.byte	9
	.word	1125
	.byte	9
	.word	1146
	.byte	6,0,8
	.word	1171
	.byte	9
	.word	1209
	.byte	6,0,8
	.word	1229
	.byte	9
	.word	1268
	.byte	6,0,10
	.word	169
.L76:
	.byte	3
	.word	1532
	.byte	11,1,3
	.word	1542
	.byte	12
	.byte	'__codeptr',0,5,1,1
	.word	1544
	.byte	2
	.byte	'char',0,1,6,12
	.byte	'sint8',0,6,76,25
	.word	1567
	.byte	12
	.byte	'uint8',0,6,81,25
	.word	169
	.byte	12
	.byte	'uint16',0,6,91,25
	.word	499
	.byte	12
	.byte	'uint32',0,6,106,24
	.word	838
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'uint64',0,6,111,30
	.word	1633
	.byte	12
	.byte	'boolean',0,6,127,25
	.word	169
	.byte	2
	.byte	'unsigned long int',0,4,7,12
	.byte	'uint16_least',0,6,147,1,25
	.word	1690
	.byte	12
	.byte	'StatusType',0,7,191,1,27
	.word	169
	.byte	12
	.byte	'Std_ReturnType',0,7,199,1,15
	.word	169
	.byte	13,7,206,1,9,8,14
	.byte	'vendorID',0
	.word	499
	.byte	2,2,35,0,14
	.byte	'moduleID',0
	.word	499
	.byte	2,2,35,2,14
	.byte	'sw_major_version',0
	.word	169
	.byte	1,2,35,4,14
	.byte	'sw_minor_version',0
	.word	169
	.byte	1,2,35,5,14
	.byte	'sw_patch_version',0
	.word	169
	.byte	1,2,35,6,0,12
	.byte	'Std_VersionInfoType',0,7,213,1,3
	.word	1777
	.byte	12
	.byte	'PduIdType',0,8,22,19
	.word	499
	.byte	12
	.byte	'PduLengthType',0,8,26,19
	.word	499
	.byte	13,9,71,9,8,14
	.byte	'SduDataPtr',0
	.word	186
	.byte	4,2,35,0,14
	.byte	'SduLength',0
	.word	499
	.byte	2,2,35,4,0,12
	.byte	'PduInfoType',0,9,75,3
	.word	1967
	.byte	15,9,113,9,4,16
	.byte	'TP_DATACONF',0,0,16
	.byte	'TP_DATARETRY',0,1,16
	.byte	'TP_CONFPENDING',0,2,0,12
	.byte	'TpDataStateType',0,9,118,3
	.word	2032
	.byte	12
	.byte	'NetworkHandleType',0,9,128,1,17
	.word	169
	.byte	12
	.byte	'Can_IdType',0,10,32,16
	.word	838
	.byte	12
	.byte	'Can_HwHandleType',0,10,43,16
	.word	499
	.byte	13,11,93,9,8,14
	.byte	'Class',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'TIN',0
	.word	169
	.byte	1,2,35,1,14
	.byte	'ReturnAddress',0
	.word	838
	.byte	4,2,35,4,0,12
	.byte	'OsTrapInfoType',0,11,97,3
	.word	2179
	.byte	17,68
	.word	838
	.byte	18,16,0,13,11,154,1,9,68,14
	.byte	'store',0
	.word	2259
	.byte	68,2,35,0,0,17,68
	.word	2268
	.byte	18,0,0,12
	.byte	'Os_JumpBufType',0,11,156,1,3
	.word	2290
	.byte	12
	.byte	'Os_StackTraceType',0,11,174,1,18
	.word	838
	.byte	13,11,175,1,9,8,14
	.byte	'sp',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'ctx',0
	.word	838
	.byte	4,2,35,4,0,12
	.byte	'Os_StackValueType',0,11,175,1,63
	.word	2350
	.byte	12
	.byte	'Os_StackSizeType',0,11,176,1,27
	.word	2350
	.byte	19,1,1,3
	.word	2435
	.byte	12
	.byte	'Os_VoidVoidFunctionType',0,11,179,1,16
	.word	2438
	.byte	12
	.byte	'ApplicationType',0,11,193,1,23
	.word	169
	.byte	20
	.byte	'Os_ApplicationConfigurationType_s',0,11,198,1,16,2,14
	.byte	'app_id',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,1,0,12
	.byte	'Os_ApplicationConfigurationType',0,11,201,1,3
	.word	2501
	.byte	12
	.byte	'Os_CoreStateType',0,11,203,1,16
	.word	838
	.byte	12
	.byte	'AreaIdType',0,11,204,1,16
	.word	499
	.byte	12
	.byte	'Os_PeripheralAddressType',0,11,212,1,22
	.word	838
	.byte	12
	.byte	'TickType',0,11,221,1,22
	.word	838
	.byte	12
	.byte	'Os_StopwatchTickType',0,11,225,1,22
	.word	838
	.byte	12
	.byte	'Os_Lockable',0,11,234,1,18
	.word	854
	.byte	12
	.byte	'CoreIdType',0,11,236,1,16
	.word	499
	.byte	12
	.byte	'SpinlockIdType',0,11,237,1,16
	.word	499
	.byte	15,11,239,1,9,4,16
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,16
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,12
	.byte	'TryToGetSpinlockType',0,11,239,1,74
	.word	2808
	.byte	15,11,174,2,9,4,16
	.byte	'APPLICATION_ACCESSIBLE',0,0,16
	.byte	'APPLICATION_RESTARTING',0,1,16
	.byte	'APPLICATION_TERMINATED',0,2,0,12
	.byte	'ApplicationStateType',0,11,174,2,92
	.word	2901
	.byte	21
	.byte	'void',0,3
	.word	3013
	.byte	22,1,1,23
	.word	169
	.byte	23
	.word	3019
	.byte	0,3
	.word	3024
	.byte	12
	.byte	'Os_FunctionEntryType',0,11,183,2,16
	.word	3038
	.byte	20
	.byte	'Os_MeterInfoType_s',0,11,193,2,16,48,14
	.byte	'elapsed',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'previous',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'max',0
	.word	838
	.byte	4,2,35,8,14
	.byte	'cumulative',0
	.word	838
	.byte	4,2,35,12,14
	.byte	'stackbase',0
	.word	2350
	.byte	8,2,35,16,14
	.byte	'stackusage',0
	.word	2350
	.byte	8,2,35,24,14
	.byte	'stackmax',0
	.word	2350
	.byte	8,2,35,32,14
	.byte	'stackbudget',0
	.word	2350
	.byte	8,2,35,40,0,12
	.byte	'Os_MeterInfoType',0,11,202,2,3
	.word	3073
	.byte	3
	.word	3073
	.byte	12
	.byte	'Os_MeterInfoRefType',0,11,203,2,50
	.word	3271
	.byte	12
	.byte	'EventMaskType',0,11,206,2,15
	.word	169
	.byte	12
	.byte	'Os_imaskType',0,11,211,2,16
	.word	838
	.byte	20
	.byte	'Os_ISRDynType_s',0,11,213,2,16,48,14
	.byte	'meter',0
	.word	3073
	.byte	48,2,35,0,0,12
	.byte	'Os_ISRDynType',0,11,215,2,3
	.word	3350
	.byte	3
	.word	3350
	.byte	10
	.word	3411
	.byte	20
	.byte	'Os_ISRType_s',0,11,216,2,16,24,14
	.byte	'entry_function',0
	.word	2443
	.byte	4,2,35,0,14
	.byte	'dynamic',0
	.word	3416
	.byte	4,2,35,4,14
	.byte	'imask',0
	.word	838
	.byte	4,2,35,8,14
	.byte	'stackbudget',0
	.word	2350
	.byte	8,2,35,12,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,20,14
	.byte	'application',0
	.word	169
	.byte	1,2,35,21,0,12
	.byte	'Os_ISRType',0,11,223,2,3
	.word	3421
	.byte	3
	.word	2435
	.byte	10
	.word	3421
	.byte	3
	.word	3580
	.byte	12
	.byte	'ISRType',0,11,224,2,46
	.word	3585
	.byte	12
	.byte	'Os_bitmask',0,11,239,2,22
	.word	838
	.byte	12
	.byte	'Os_pset0Type',0,11,240,2,20
	.word	838
	.byte	12
	.byte	'Os_pset1Type',0,11,241,2,20
	.word	838
	.byte	12
	.byte	'Os_pset2Type',0,11,242,2,20
	.word	838
	.byte	24,11,243,2,9,4,14
	.byte	'p0',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'p1',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'p2',0
	.word	838
	.byte	4,2,35,0,0,12
	.byte	'Os_psetType',0,11,247,2,3
	.word	3693
	.byte	24,11,249,2,9,4,14
	.byte	't0',0
	.word	838
	.byte	4,2,35,0,14
	.byte	't1',0
	.word	838
	.byte	4,2,35,0,14
	.byte	't2',0
	.word	838
	.byte	4,2,35,0,0,12
	.byte	'Os_tpmaskType',0,11,253,2,3
	.word	3757
	.byte	12
	.byte	'Os_ActivationCountType',0,11,254,2,23
	.word	169
	.byte	20
	.byte	'Os_TaskDynType_s',0,11,128,3,16,120,14
	.byte	'terminate_jump_buf',0
	.word	2299
	.byte	68,2,35,0,14
	.byte	'meter',0
	.word	3073
	.byte	48,2,35,68,14
	.byte	'activation_count',0
	.word	169
	.byte	1,2,35,116,0,12
	.byte	'Os_TaskDynType',0,11,132,3,3
	.word	3855
	.byte	17,68
	.word	2268
	.byte	18,0,0,3
	.word	3855
	.byte	10
	.word	3981
	.byte	20
	.byte	'Os_TaskType_s',0,11,134,3,16,40,14
	.byte	'dynamic',0
	.word	3986
	.byte	4,2,35,0,14
	.byte	'entry_function',0
	.word	2443
	.byte	4,2,35,4,14
	.byte	'pset',0
	.word	3693
	.byte	4,2,35,8,14
	.byte	'base_tpmask',0
	.word	3757
	.byte	4,2,35,12,14
	.byte	'tpmask',0
	.word	3757
	.byte	4,2,35,16,14
	.byte	'core_id',0
	.word	499
	.byte	2,2,35,20,14
	.byte	'index',0
	.word	838
	.byte	4,2,35,24,14
	.byte	'stackbudget',0
	.word	2350
	.byte	8,2,35,28,14
	.byte	'activation_count',0
	.word	169
	.byte	1,2,35,36,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,37,14
	.byte	'application',0
	.word	169
	.byte	1,2,35,38,0,12
	.byte	'Os_TaskType',0,11,146,3,3
	.word	3991
	.byte	10
	.word	3991
	.byte	3
	.word	4241
	.byte	12
	.byte	'TaskType',0,11,147,3,47
	.word	4246
	.byte	25
	.byte	'Os_TaskStateType',0,11,155,3,6,4,16
	.byte	'SUSPENDED',0,0,16
	.byte	'READY',0,1,16
	.byte	'WAITING',0,2,16
	.byte	'RUNNING',0,3,0,12
	.byte	'TaskStateType',0,11,156,3,31
	.word	4269
	.byte	24,11,167,3,3,4,14
	.byte	'tpmask',0
	.word	3757
	.byte	4,2,35,0,0,20
	.byte	'Os_ResourceDynType_s',0,11,166,3,16,4,14
	.byte	'saved_priority',0
	.word	4356
	.byte	4,2,35,0,0,12
	.byte	'Os_ResourceDynType',0,11,170,3,3
	.word	4379
	.byte	3
	.word	4379
	.byte	10
	.word	4459
	.byte	20
	.byte	'Os_ResourceType_s',0,11,171,3,16,12,14
	.byte	'dynamic',0
	.word	4464
	.byte	4,2,35,0,14
	.byte	'tpmask',0
	.word	3757
	.byte	4,2,35,4,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,8,0,12
	.byte	'Os_ResourceType',0,11,175,3,3
	.word	4469
	.byte	13,11,181,3,9,12,14
	.byte	'maxallowedvalue',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'ticksperbase',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'mincycle',0
	.word	838
	.byte	4,2,35,8,0,12
	.byte	'AlarmBaseType',0,11,185,3,3
	.word	4568
	.byte	13,11,206,3,9,8,14
	.byte	'Running',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'Pending',0
	.word	169
	.byte	1,2,35,1,14
	.byte	'Delay',0
	.word	838
	.byte	4,2,35,4,0,12
	.byte	'Os_CounterStatusType',0,11,210,3,3
	.word	4663
	.byte	26
	.word	169
	.byte	1,1,3
	.word	4749
	.byte	12
	.byte	'Os_CounterIncrAdvType',0,11,217,3,22
	.word	4756
	.byte	20
	.byte	's_swd',0,11,222,3,12,4,14
	.byte	'count',0
	.word	838
	.byte	4,2,35,0,0,24,11,221,3,3,4,14
	.byte	'sw',0
	.word	4792
	.byte	4,2,35,0,0,20
	.byte	'Os_CounterDynType_s',0,11,220,3,16,4,14
	.byte	'type_dependent',0
	.word	4820
	.byte	4,2,35,0,0,12
	.byte	'Os_CounterDynType',0,11,226,3,3
	.word	4839
	.byte	3
	.word	4839
	.byte	10
	.word	4917
	.byte	20
	.byte	'Os_CounterType_s',0,11,227,3,16,28,14
	.byte	'dynamic',0
	.word	4922
	.byte	4,2,35,0,14
	.byte	'advincr',0
	.word	4761
	.byte	4,2,35,4,14
	.byte	'base',0
	.word	4568
	.byte	12,2,35,8,14
	.byte	'core',0
	.word	3019
	.byte	4,2,35,20,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,24,14
	.byte	'application',0
	.word	169
	.byte	1,2,35,25,0,12
	.byte	'Os_CounterType',0,11,234,3,3
	.word	4927
	.byte	3
	.word	4749
	.byte	10
	.word	4927
	.byte	3
	.word	5079
	.byte	12
	.byte	'CounterType',0,11,235,3,52
	.word	5084
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,11,240,3,6,4,16
	.byte	'SCHEDULETABLE_STOPPED',0,0,16
	.byte	'SCHEDULETABLE_NEXT',0,1,16
	.byte	'SCHEDULETABLE_WAITING',0,2,16
	.byte	'SCHEDULETABLE_RUNNING',0,3,16
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,12
	.byte	'ScheduleTableStatusType',0,11,241,3,41
	.word	5110
	.byte	10
	.word	.L182-.L52
	.byte	3
	.word	5310
	.byte	12
	.byte	'ScheduleTableType',0,11,128,4,58
	.word	5315
	.byte	20
	.byte	'Os_ScheduleTableDynType_s',0,11,130,4,16,16,14
	.byte	'match',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'next',0
	.word	5320
	.byte	4,2,35,4,14
	.byte	'state',0
	.word	5110
	.byte	4,2,35,8,14
	.byte	'config',0
	.word	499
	.byte	2,2,35,12,0,3
	.word	5347
	.byte	10
	.word	5440
.L182:
	.byte	20
	.byte	'Os_ScheduleTableType_s',0,11,247,3,16,16,14
	.byte	'dynamic',0
	.word	5445
	.byte	4,2,35,0,14
	.byte	'counter',0
	.word	5089
	.byte	4,2,35,4,14
	.byte	'repeat',0
	.word	169
	.byte	1,2,35,8,14
	.byte	'config',0
	.word	499
	.byte	2,2,35,10,14
	.byte	'initial',0
	.word	169
	.byte	1,2,35,12,14
	.byte	'access',0
	.word	169
	.byte	1,2,35,13,14
	.byte	'application',0
	.word	169
	.byte	1,2,35,14,0,12
	.byte	'Os_ScheduleTableType',0,11,255,3,3
	.word	5450
	.byte	10
	.word	5450
	.byte	3
	.word	5630
	.byte	10
	.word	4927
	.byte	3
	.word	5640
	.byte	27
	.word	2743
	.byte	27
	.word	3693
	.byte	27
	.word	3590
	.byte	27
	.word	4251
	.byte	27
	.word	3757
	.byte	27
	.word	169
	.byte	27
	.word	4251
	.byte	20
	.byte	'Os_ControlledCoreType_s',0,11,251,6,16,112,14
	.byte	'TrapInfo',0
	.word	2179
	.byte	8,2,35,0,14
	.byte	'lock_taskaccess',0
	.word	5650
	.byte	4,2,35,8,14
	.byte	'ReadyTasks',0
	.word	5655
	.byte	4,2,35,12,14
	.byte	'RunningISR',0
	.word	5660
	.byte	4,2,35,16,14
	.byte	'RunningTask',0
	.word	5665
	.byte	4,2,35,20,14
	.byte	'RunningTPMask',0
	.word	5670
	.byte	4,2,35,24,14
	.byte	'CurrentMeteredObject',0
	.word	3276
	.byte	4,2,35,28,14
	.byte	'IdleMeter',0
	.word	3073
	.byte	48,2,35,32,14
	.byte	'AppAccess',0
	.word	169
	.byte	1,2,35,80,14
	.byte	'AppOverride',0
	.word	5675
	.byte	1,2,35,81,14
	.byte	'GetStackValueAdjust',0
	.word	2350
	.byte	8,2,35,84,14
	.byte	'InErrorHook',0
	.word	169
	.byte	1,2,35,92,14
	.byte	'ChainTaskRef',0
	.word	5680
	.byte	4,2,35,96,14
	.byte	'GetStackUsageAdjust',0
	.word	2350
	.byte	8,2,35,100,14
	.byte	'InProtectionHook',0
	.word	169
	.byte	1,2,35,108,14
	.byte	'CoreIsActive',0
	.word	169
	.byte	1,2,35,109,14
	.byte	'InShutdownHook',0
	.word	169
	.byte	1,2,35,110,0,12
	.byte	'Os_ControlledCoreType',0,11,141,7,3
	.word	5685
	.byte	3
	.word	838
	.byte	10
	.word	3421
	.byte	3
	.word	6141
	.byte	10
	.word	3991
	.byte	3
	.word	6151
	.byte	3
	.word	3073
	.byte	20
	.byte	'Os_AnyCoreType_s',0,11,151,7,16,96,14
	.byte	'DisableAllImask',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'SuspendAllImask',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'SuspendOSImask',0
	.word	838
	.byte	4,2,35,8,14
	.byte	'DisableAllCount',0
	.word	838
	.byte	4,2,35,12,14
	.byte	'SuspendAllCount',0
	.word	838
	.byte	4,2,35,16,14
	.byte	'SuspendOSCount',0
	.word	838
	.byte	4,2,35,20,14
	.byte	'RestartJumpBuf',0
	.word	2299
	.byte	68,2,35,24,14
	.byte	'Restartable',0
	.word	169
	.byte	1,2,35,92,0,12
	.byte	'Os_AnyCoreType',0,11,160,7,3
	.word	6166
	.byte	12
	.byte	'Can_TxObjPriorityClassType',0,12,219,3,16
	.word	838
	.byte	20
	.byte	'Can_TxHwObjectConfigType',0,12,231,3,16,8,14
	.byte	'MsgObjId',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'HwControllerId',0
	.word	169
	.byte	1,2,35,1,14
	.byte	'TxObjPriorityClass',0
	.word	838
	.byte	4,2,35,4,0,12
	.byte	'Can_TxHwObjectConfigType',0,12,252,3,3
	.word	6443
	.byte	20
	.byte	'Can_RxHwObjectConfigType',0,12,129,4,16,12,14
	.byte	'MaskRef',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'MsgId',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'MsgObjId',0
	.word	169
	.byte	1,2,35,8,14
	.byte	'HwControllerId',0
	.word	169
	.byte	1,2,35,9,0,12
	.byte	'Can_RxHwObjectConfigType',0,12,147,4,3
	.word	6579
	.byte	17,4
	.word	169
	.byte	18,3,0,20
	.byte	'Can_ControllerMOMapConfigType',0,12,181,4,16,4,14
	.byte	'ControllerMOMap',0
	.word	6719
	.byte	4,2,35,0,0,12
	.byte	'Can_ControllerMOMapConfigType',0,12,184,4,3
	.word	6728
	.byte	20
	.byte	'Can_NPCRValueType',0,12,188,4,16,2,14
	.byte	'Can_NPCRValue',0
	.word	499
	.byte	2,2,35,0,0,12
	.byte	'Can_NPCRValueType',0,12,191,4,3
	.word	6829
	.byte	20
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,194,4,16,8,14
	.byte	'CanControllerBaudrate',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'CanControllerBaudrateCfg',0
	.word	499
	.byte	2,2,35,4,0,12
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,198,4,3
	.word	6904
	.byte	10
	.word	6904
	.byte	3
	.word	7069
	.byte	20
	.byte	'Can_BaudrateConfigPtrType',0,12,201,4,16,4,14
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7074
	.byte	4,2,35,0,0,12
	.byte	'Can_BaudrateConfigPtrType',0,12,204,4,3
	.word	7079
	.byte	20
	.byte	'Can_EventHandlingType',0,12,226,4,16,4,14
	.byte	'CanEventType',0
	.word	6719
	.byte	4,2,35,0,0,12
	.byte	'Can_EventHandlingType',0,12,229,4,3
	.word	7179
	.byte	12
	.byte	'Rte_TransformerErrorCode',0,13,130,1,15
	.word	169
	.byte	12
	.byte	'Rte_TransformerClass',0,13,131,1,15
	.word	169
	.byte	13,13,168,1,9,12,14
	.byte	'in',0
	.word	3019
	.byte	4,2,35,0,14
	.byte	'out',0
	.word	3019
	.byte	4,2,35,4,14
	.byte	'used',0
	.word	499
	.byte	2,2,35,8,14
	.byte	'lost_data',0
	.word	169
	.byte	1,2,35,10,0,12
	.byte	'Rte_QDynType',0,13,173,1,3
	.word	7325
	.byte	15,13,175,1,9,4,16
	.byte	'RTE_DRA',0,0,16
	.byte	'RTE_WOWP',0,1,16
	.byte	'RTE_TASK',0,2,16
	.byte	'RTE_ARE',0,3,16
	.byte	'RTE_EV',0,4,16
	.byte	'RTE_MSI',0,5,0,12
	.byte	'Rte_NotificationType',0,13,182,1,3
	.word	7412
	.byte	3
	.word	7325
	.byte	20
	.byte	'Rte_QCmnType',0,13,184,1,16,24,14
	.byte	'dynamic',0
	.word	7510
	.byte	4,2,35,0,14
	.byte	'copy',0
	.word	169
	.byte	1,2,35,4,14
	.byte	'queue_size',0
	.word	499
	.byte	2,2,35,6,14
	.byte	'element_size',0
	.word	499
	.byte	2,2,35,8,14
	.byte	'buffer_start',0
	.word	3019
	.byte	4,2,35,12,14
	.byte	'buffer_end',0
	.word	3019
	.byte	4,2,35,16,14
	.byte	'notification_type',0
	.word	7412
	.byte	4,2,35,20,0,12
	.byte	'Rte_QCmnType',0,13,192,1,3
	.word	7515
	.byte	12
	.byte	'Rte_AlarmRefType',0,13,224,1,32
	.word	838
	.byte	12
	.byte	'Rte_AlarmIndexType',0,13,226,1,32
	.word	499
	.byte	17,128,8
	.word	169
	.byte	18,255,7,0,12
	.byte	'Impl_NVM_DstPtrType_1024',0,14,50,15
	.word	7753
	.byte	12
	.byte	'CanIf_u32_impl',0,14,69,16
	.word	838
	.byte	12
	.byte	'CanIf_u16_impl',0,14,71,16
	.word	499
	.byte	12
	.byte	'CanIf_u8_impl',0,14,73,15
	.word	169
	.byte	12
	.byte	'CanIf_ControllerModeType_Enum_impl',0,14,88,15
	.word	169
	.byte	12
	.byte	'CanIf_PduModeType_Enum_impl',0,14,90,15
	.word	169
	.byte	13,14,92,9,2,14
	.byte	'DeviceMode',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'ChannelMode',0
	.word	169
	.byte	1,2,35,1,0,12
	.byte	'CanIf_ControllerStateType_struct_impl',0,14,95,3
	.word	7944
	.byte	12
	.byte	'CanIf_NotifStatusType_Enum_impl',0,14,100,15
	.word	169
	.byte	12
	.byte	'CanSM_boolean_Impl',0,14,120,15
	.word	169
	.byte	12
	.byte	'CanSM_u8_Impl',0,14,123,15
	.word	169
	.byte	12
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,14,128,1,15
	.word	169
	.byte	12
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,14,132,1,15
	.word	169
	.byte	12
	.byte	'CanSM_u16_Impl',0,14,136,1,16
	.word	499
	.byte	12
	.byte	'CanSM_TimerStateType_Enum_impl',0,14,138,1,15
	.word	169
	.byte	13,14,140,1,9,4,14
	.byte	'cntTick_u16',0
	.word	499
	.byte	2,2,35,0,14
	.byte	'stTimer',0
	.word	169
	.byte	1,2,35,2,0,12
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,14,143,1,3
	.word	8285
	.byte	12
	.byte	'Com_impl_u16',0,14,154,1,16
	.word	499
	.byte	12
	.byte	'Com_impl_u8',0,14,157,1,15
	.word	169
	.byte	12
	.byte	'ComM_uint32_Impl',0,14,173,1,16
	.word	838
	.byte	12
	.byte	'ComM_uint16_Impl',0,14,175,1,16
	.word	499
	.byte	12
	.byte	'ComM_uint8_Impl',0,14,177,1,15
	.word	169
	.byte	12
	.byte	'ComM_bool_Impl',0,14,179,1,15
	.word	169
	.byte	13,14,181,1,9,24,14
	.byte	'ChannelState_e',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'LightTimeoutCtr_u32',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	499
	.byte	2,2,35,8,14
	.byte	'ChannelMode_u8',0
	.word	169
	.byte	1,2,35,10,14
	.byte	'BusSmMode_u8',0
	.word	169
	.byte	1,2,35,11,14
	.byte	'UserRequestCtr_u8',0
	.word	169
	.byte	1,2,35,12,14
	.byte	'PassiveRequestState_u8',0
	.word	169
	.byte	1,2,35,13,14
	.byte	'PncRequestCtr_u8',0
	.word	169
	.byte	1,2,35,14,14
	.byte	'InhibitionReqStatus_u8',0
	.word	169
	.byte	1,2,35,15,14
	.byte	'NmNetworkRequestStatus_b',0
	.word	169
	.byte	1,2,35,16,14
	.byte	'DiagnosticRequestState_b',0
	.word	169
	.byte	1,2,35,17,14
	.byte	'CommunicationAllowed_b',0
	.word	169
	.byte	1,2,35,18,14
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	169
	.byte	1,2,35,19,14
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	169
	.byte	1,2,35,20,14
	.byte	'NmNetworkModeStatus_b',0
	.word	169
	.byte	1,2,35,21,0,12
	.byte	'ComM_ChannelStruct_Impl',0,14,197,1,3
	.word	8517
	.byte	13,14,206,1,9,10,14
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	499
	.byte	2,2,35,0,14
	.byte	'LimitToNoComCtr_u16',0
	.word	499
	.byte	2,2,35,2,14
	.byte	'RequestedUserMode_t',0
	.word	169
	.byte	1,2,35,4,14
	.byte	'IndicatedUserMode_t',0
	.word	169
	.byte	1,2,35,5,14
	.byte	'numChannelsInFullCom_u8',0
	.word	169
	.byte	1,2,35,6,14
	.byte	'numChannelsInSilentCom_u8',0
	.word	169
	.byte	1,2,35,7,14
	.byte	'numChannelsInNoCom_u8',0
	.word	169
	.byte	1,2,35,8,0,12
	.byte	'ComM_UserStruct_Impl',0,14,214,1,3
	.word	9021
	.byte	12
	.byte	'Dcm_ConfirmationStatusType',0,14,243,1,15
	.word	169
	.byte	12
	.byte	'Dcm_IOOperationResponseType',0,14,252,1,15
	.word	169
	.byte	12
	.byte	'Dcm_NegativeResponseCodeType',0,14,132,2,15
	.word	169
	.byte	12
	.byte	'Dcm_OpStatusType',0,14,134,2,15
	.word	169
	.byte	12
	.byte	'Dcm_ProtocolType',0,14,136,2,15
	.word	169
	.byte	12
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	14,138,2,15
	.word	169
	.byte	12
	.byte	'Dcm_SecLevelType',0,14,142,2,15
	.word	169
	.byte	12
	.byte	'Dcm_SesCtrlType',0,14,144,2,15
	.word	169
	.byte	12
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,14,146,2,15
	.word	169
	.byte	12
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,14,150,2,15
	.word	169
	.byte	12
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,14,154,2,15
	.word	169
	.byte	12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,14,243,3,34
	.word	7764
	.byte	17,128,8
	.word	169
	.byte	18,255,7,0,12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,14,246,3,34
	.word	7764
	.byte	12
	.byte	'Rte_ModeType_DcmDiagnosticSessionControl',0,15,37,15
	.word	169
	.byte	12
	.byte	'Dcm_MsgItemType',0,16,182,2,15
	.word	169
	.byte	3
	.word	169
	.byte	12
	.byte	'Dcm_MsgType',0,16,188,2,57
	.word	10090
	.byte	12
	.byte	'Dcm_MsgLenType',0,16,197,2,16
	.word	838
	.byte	13,16,206,2,9,4,14
	.byte	'reqType',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'suppressPosResponse',0
	.word	169
	.byte	1,2,35,1,14
	.byte	'sourceofRequest',0
	.word	169
	.byte	1,2,35,2,0,12
	.byte	'Dcm_MsgAddInfoType',0,16,219,2,2
	.word	10140
	.byte	12
	.byte	'Dcm_IdContextType',0,16,225,2,15
	.word	169
	.byte	13,16,238,5,9,32,14
	.byte	'tx_buffer_pa',0
	.word	10095
	.byte	4,2,35,0,14
	.byte	'rx_mainBuffer_pa',0
	.word	10095
	.byte	4,2,35,4,14
	.byte	'tx_buffer_size_u32',0
	.word	838
	.byte	4,2,35,8,14
	.byte	'rx_buffer_size_u32',0
	.word	838
	.byte	4,2,35,12,14
	.byte	'dataP2TmrAdjust',0
	.word	838
	.byte	4,2,35,16,14
	.byte	'dataP2StarTmrAdjust',0
	.word	838
	.byte	4,2,35,20,14
	.byte	'protocolid_u8',0
	.word	169
	.byte	1,2,35,24,14
	.byte	'sid_tableid_u8',0
	.word	169
	.byte	1,2,35,25,14
	.byte	'premption_level_u8',0
	.word	169
	.byte	1,2,35,26,14
	.byte	'pduinfo_idx_u8',0
	.word	169
	.byte	1,2,35,27,14
	.byte	'nrc21_b',0
	.word	169
	.byte	1,2,35,28,14
	.byte	'sendRespPendTransToBoot',0
	.word	169
	.byte	1,2,35,29,0,12
	.byte	'Dcm_Dsld_protocol_tableType',0,16,143,6,2
	.word	10273
	.byte	3
	.word	169
	.byte	22,1,1,23
	.word	169
	.byte	23
	.word	499
	.byte	23
	.word	499
	.byte	23
	.word	169
	.byte	0,3
	.word	10629
	.byte	12
	.byte	'Dcm_ConfirmationApiType',0,16,145,6,16
	.word	10653
	.byte	3
	.word	169
	.byte	28
	.word	169
	.byte	1,1,23
	.word	10691
	.byte	23
	.word	169
	.byte	23
	.word	169
	.byte	0,3
	.word	10696
	.byte	13,16,240,2,9,28,14
	.byte	'resData',0
	.word	10095
	.byte	4,2,35,0,14
	.byte	'reqData',0
	.word	10095
	.byte	4,2,35,4,14
	.byte	'msgAddInfo',0
	.word	10140
	.byte	4,2,35,8,14
	.byte	'resDataLen',0
	.word	838
	.byte	4,2,35,12,14
	.byte	'reqDataLen',0
	.word	838
	.byte	4,2,35,16,14
	.byte	'resMaxDataLen',0
	.word	838
	.byte	4,2,35,20,14
	.byte	'idContext',0
	.word	169
	.byte	1,2,35,24,14
	.byte	'dcmRxPduId',0
	.word	499
	.byte	2,2,35,26,0,3
	.word	10724
	.byte	28
	.word	169
	.byte	1,1,23
	.word	169
	.byte	23
	.word	10887
	.byte	23
	.word	10691
	.byte	0,3
	.word	10892
	.byte	13,16,158,6,9,20,14
	.byte	'allowed_session_b32',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'allowed_security_b32',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'adrUserSubServiceModeRule_pfct',0
	.word	10719
	.byte	4,2,35,8,14
	.byte	'SubFunc_fp',0
	.word	10915
	.byte	4,2,35,12,14
	.byte	'subservice_id_u8',0
	.word	169
	.byte	1,2,35,16,14
	.byte	'isDspRDTCSubFnc_b',0
	.word	169
	.byte	1,2,35,17,0,12
	.byte	'Dcm_Dsld_SubServiceType',0,16,169,6,2
	.word	10920
	.byte	10
	.word	10920
	.byte	3
	.word	11132
	.byte	28
	.word	169
	.byte	1,1,23
	.word	10691
	.byte	23
	.word	169
	.byte	0,3
	.word	11142
	.byte	13,16,186,6,9,36,14
	.byte	'allowed_session_b32',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'allowed_security_b32',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'service_handler_fp',0
	.word	10915
	.byte	4,2,35,8,14
	.byte	'Service_init_fp',0
	.word	2438
	.byte	4,2,35,12,14
	.byte	'sid_u8',0
	.word	169
	.byte	1,2,35,16,14
	.byte	'subfunction_exist_b',0
	.word	169
	.byte	1,2,35,17,14
	.byte	'servicelocator_b',0
	.word	169
	.byte	1,2,35,18,14
	.byte	'ptr_subservice_table_pcs',0
	.word	11137
	.byte	4,2,35,20,14
	.byte	'num_sf_u8',0
	.word	169
	.byte	1,2,35,24,14
	.byte	'adrUserServiceModeRule_pfct',0
	.word	11160
	.byte	4,2,35,28,14
	.byte	'Dcm_ConfirmationService',0
	.word	10658
	.byte	4,2,35,32,0,12
	.byte	'Dcm_Dsld_ServiceType',0,16,204,6,3
	.word	11165
	.byte	3
	.word	10629
	.byte	10
	.word	11165
	.byte	3
	.word	11513
	.byte	13,16,218,6,9,8,14
	.byte	'ptr_service_table_pcs',0
	.word	11518
	.byte	4,2,35,0,14
	.byte	'num_services_u8',0
	.word	169
	.byte	1,2,35,4,14
	.byte	'nrc_sessnot_supported_u8',0
	.word	169
	.byte	1,2,35,5,14
	.byte	'cdtc_index_u8',0
	.word	169
	.byte	1,2,35,6,0,12
	.byte	'Dcm_Dsld_sid_tableType',0,16,224,6,3
	.word	11523
	.byte	13,16,238,6,9,14,14
	.byte	'protocol_num_u8',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'txpduid_num_u8',0
	.word	499
	.byte	2,2,35,2,14
	.byte	'roetype2_txpdu_u8',0
	.word	499
	.byte	2,2,35,4,14
	.byte	'rdpitype2_txpdu_u8',0
	.word	499
	.byte	2,2,35,6,14
	.byte	'testaddr_u16',0
	.word	499
	.byte	2,2,35,8,14
	.byte	'channel_idx_u8',0
	.word	169
	.byte	1,2,35,10,14
	.byte	'ConnectionIndex_u8',0
	.word	169
	.byte	1,2,35,11,14
	.byte	'NumberOfTxpdu_u8',0
	.word	169
	.byte	1,2,35,12,0,12
	.byte	'Dcm_Dsld_connType',0,16,248,6,3
	.word	11675
	.byte	15,16,146,7,9,4,16
	.byte	'DCM_DSLD_NO_COM_MODE',0,0,16
	.byte	'DCM_DSLD_SILENT_COM_MODE',0,1,16
	.byte	'DCM_DSLD_FULL_COM_MODE',0,2,0,12
	.byte	'Dcm_Dsld_commodeType',0,16,151,7,2
	.word	11913
	.byte	15,17,200,1,9,4,16
	.byte	'USE_ASYNCH_CLIENT_SERVER',0,0,16
	.byte	'USE_ASYNCH_FNC',0,1,0,12
	.byte	'DcmDspSecurityUsePort',0,17,204,1,2
	.word	12025
	.byte	15,18,22,9,4,16
	.byte	'DCM_NO_BOOT',0,0,16
	.byte	'DCM_OEM_BOOT',0,1,16
	.byte	'DCM_SYS_BOOT',0,2,0,12
	.byte	'Dcm_SessionForBootType',0,18,27,2
	.word	12107
	.byte	15,19,192,3,9,4,16
	.byte	'DCM_READ_OK',0,0,16
	.byte	'DCM_READ_FAILED',0,1,16
	.byte	'DCM_READ_PENDING',0,2,16
	.byte	'DCM_READ_FORCE_RCRRP',0,3,16
	.byte	'DCM_READ_NOT_AVAILABLE',0,4,0,12
	.byte	'Dcm_ReadMemoryRet_t',0,19,199,3,3
	.word	12188
	.byte	12
	.byte	'rba_BswSrv_uint64',0,4,66,28
	.word	1633
	.byte	12
	.byte	'Rte_TaskRefType',0,20,184,1,32
	.word	4251
	.byte	12
	.byte	'Rte_EventRefType',0,20,185,1,32
	.word	169
	.byte	12
	.byte	'Rte_EventType',0,20,186,1,32
	.word	838
	.byte	12
	.byte	'Rte_REActCounterType',0,20,252,1,15
	.word	169
	.byte	3
	.word	169
	.byte	12
	.byte	'Rte_REActCounterRefType',0,20,253,1,58
	.word	12453
	.byte	13,20,255,1,9,8,14
	.byte	'task',0
	.word	12349
	.byte	4,2,35,0,14
	.byte	'acnt',0
	.word	12458
	.byte	4,2,35,4,0,12
	.byte	'Rte_REContainerType',0,20,130,2,3
	.word	12491
	.byte	10
	.word	3991
	.byte	3
	.word	12555
	.byte	3
	.word	169
	.byte	10
	.word	12491
	.byte	3
	.word	12570
	.byte	12
	.byte	'Rte_REContainerRefType',0,20,132,2,60
	.word	12575
	.byte	12
	.byte	'Rte_MSICounterType',0,20,149,2,16
	.word	499
	.byte	3
	.word	499
	.byte	12
	.byte	'Rte_MSICounterRefType',0,20,150,2,56
	.word	12640
	.byte	12
	.byte	'Rte_MSIPendingFlagType',0,20,152,2,17
	.word	169
	.byte	3
	.word	169
	.byte	12
	.byte	'Rte_MSIPendingFlagRefType',0,20,153,2,60
	.word	12708
	.byte	13,20,163,2,9,24,14
	.byte	'counter',0
	.word	12645
	.byte	4,2,35,0,14
	.byte	'incCounter',0
	.word	169
	.byte	1,2,35,4,14
	.byte	'pending',0
	.word	12713
	.byte	4,2,35,8,14
	.byte	'osTask',0
	.word	12349
	.byte	4,2,35,12,14
	.byte	'acnt',0
	.word	12458
	.byte	4,2,35,16,14
	.byte	'osEvent',0
	.word	169
	.byte	1,2,35,20,14
	.byte	'MSIInit',0
	.word	499
	.byte	2,2,35,22,0,12
	.byte	'Rte_MSITableEntry',0,20,172,2,3
	.word	12748
	.byte	3
	.word	499
	.byte	3
	.word	169
	.byte	12
	.byte	'Rte_TaskArrayIndex',0,20,179,2,16
	.word	169
	.byte	12
	.byte	'Rte_NrWaitingTasks',0,20,180,2,16
	.word	169
	.byte	13,20,182,2,9,4,14
	.byte	'pending',0
	.word	169
	.byte	1,2,35,0,14
	.byte	'count',0
	.word	169
	.byte	1,2,35,1,14
	.byte	'firstWaitingTask',0
	.word	169
	.byte	1,2,35,2,0,12
	.byte	'Rte_WaitableDatum',0,20,186,2,3
	.word	12966
	.byte	3
	.word	12966
	.byte	13,20,226,2,9,12,14
	.byte	'event_id',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'wd',0
	.word	13058
	.byte	4,2,35,4,14
	.byte	'timeout',0
	.word	838
	.byte	4,2,35,8,0,12
	.byte	'Rte_WOWP_NotificationType',0,20,230,2,3
	.word	13063
	.byte	10
	.word	13063
	.byte	3
	.word	13152
	.byte	12
	.byte	'Rte_WOWP_NotificationRefType',0,20,232,2,66
	.word	13157
	.byte	12
	.byte	'Rte_ARE_NotificationType',0,20,234,2,29
	.word	12491
	.byte	20
	.byte	'Rte_QTaskType',0,20,243,2,16,28,14
	.byte	'cmn',0
	.word	7515
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	12349
	.byte	4,2,35,24,0,12
	.byte	'Rte_QTaskType',0,20,246,2,3
	.word	13234
	.byte	20
	.byte	'Rte_QREType',0,20,250,2,16,28,14
	.byte	'cmn',0
	.word	7515
	.byte	24,2,35,0,14
	.byte	're',0
	.word	12580
	.byte	4,2,35,24,0,12
	.byte	'Rte_QREType',0,20,253,2,3
	.word	13305
	.byte	10
	.word	12491
	.byte	3
	.word	13370
	.byte	20
	.byte	'Rte_QWWPType',0,20,129,3,16,28,14
	.byte	'cmn',0
	.word	7515
	.byte	24,2,35,0,14
	.byte	'wwp',0
	.word	13162
	.byte	4,2,35,24,0,12
	.byte	'Rte_QWWPType',0,20,132,3,3
	.word	13380
	.byte	10
	.word	13063
	.byte	3
	.word	13448
	.byte	20
	.byte	'Rte_QEvType',0,20,136,3,16,36,14
	.byte	'cmn',0
	.word	7515
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	12349
	.byte	4,2,35,24,14
	.byte	'mask',0
	.word	169
	.byte	1,2,35,28,14
	.byte	'acnt',0
	.word	12458
	.byte	4,2,35,32,0,12
	.byte	'Rte_QEvType',0,20,141,3,3
	.word	13458
	.byte	20
	.byte	'Rte_QMSIType',0,20,145,3,16,48,14
	.byte	'cmn',0
	.word	7515
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	12349
	.byte	4,2,35,24,14
	.byte	'mask',0
	.word	169
	.byte	1,2,35,28,14
	.byte	'acnt',0
	.word	12458
	.byte	4,2,35,32,14
	.byte	'msiCounter',0
	.word	12645
	.byte	4,2,35,36,14
	.byte	'msiPending',0
	.word	12713
	.byte	4,2,35,40,14
	.byte	'msiLimit',0
	.word	499
	.byte	2,2,35,44,0,12
	.byte	'Rte_QMSIType',0,20,153,3,3
	.word	13553
	.byte	15,21,21,9,4,16
	.byte	'DSD_IDLE',0,0,16
	.byte	'DSD_VERIFY_DIAGNOSTIC_DATA',0,1,16
	.byte	'DSD_CALL_SERVICE',0,2,16
	.byte	'DSD_WAITFORTXCONF',0,3,16
	.byte	'DSD_SENDTXCONF_APPL',0,4,0,12
	.byte	'Dcm_DsdStatesType_ten',0,21,28,2
	.word	13708
	.byte	15,22,215,2,9,4,16
	.byte	'DCM_DSLD_POS_RESPONSE',0,0,16
	.byte	'DCM_DSLD_NEG_RESPONSE',0,1,0,12
	.byte	'Dcm_DsldResponseType_ten',0,22,219,2,2
	.word	13845
	.byte	15,23,148,1,9,4,16
	.byte	'DCM_ROE_CLEARED',0,0,16
	.byte	'DCM_ROE_STOPPED',0,1,16
	.byte	'DCM_ROE_STARTED',0,2,0,12
	.byte	'Dcm_DspRoeEventState_ten',0,23,153,1,2
	.word	13934
	.byte	15,23,231,1,9,4,16
	.byte	'DCM_CONTROLMASK_NO',0,0,16
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,16
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,2,0,12
	.byte	'Dcm_Dsp_IocbiCtrlMask_ten',0,23,236,1,2
	.word	14029
	.byte	15,19,203,1,9,4,16
	.byte	'DCM_SUPPORT_READ',0,0,16
	.byte	'DCM_SUPPORT_WRITE',0,1,16
	.byte	'DCM_SUPPORT_IOCONTROL',0,2,0,28
	.word	169
	.byte	1,1,23
	.word	10691
	.byte	23
	.word	499
	.byte	23
	.word	14146
	.byte	0,3
	.word	14216
	.byte	13,23,239,1,9,44,14
	.byte	'dataAllowedSessRead_u32',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'dataAllowedSecRead_u32',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'adrUserReadModeRule_pfct',0
	.word	14239
	.byte	4,2,35,8,14
	.byte	'dataAllowedSessWrite_u32',0
	.word	838
	.byte	4,2,35,12,14
	.byte	'dataAllowedSecWrite_u32',0
	.word	838
	.byte	4,2,35,16,14
	.byte	'adrUserWriteModeRule_pfct',0
	.word	14239
	.byte	4,2,35,20,14
	.byte	'dataSessBitMask_u32',0
	.word	838
	.byte	4,2,35,24,14
	.byte	'dataSecBitMask_u32',0
	.word	838
	.byte	4,2,35,28,14
	.byte	'adrUserControlModeRule_pfct',0
	.word	14239
	.byte	4,2,35,32,14
	.byte	'dataCtrlMask_en',0
	.word	14029
	.byte	4,2,35,36,14
	.byte	'dataCtrlMaskSize_u8',0
	.word	169
	.byte	1,2,35,40,14
	.byte	'dataIocbirst_b',0
	.word	169
	.byte	1,2,35,41,14
	.byte	'statusmaskIOControl_u8',0
	.word	169
	.byte	1,2,35,42,0,12
	.byte	'Dcm_ExtendedDIDConfig_tst',0,23,141,2,3
	.word	14244
	.byte	13,23,200,2,9,4,14
	.byte	'posnSigBit_u16',0
	.word	499
	.byte	2,2,35,0,14
	.byte	'idxDcmDspDatainfo_u16',0
	.word	499
	.byte	2,2,35,2,0,12
	.byte	'Dcm_SignalDIDConfig_tst',0,23,204,2,3
	.word	14691
	.byte	15,24,31,9,4,16
	.byte	'DCM_RESET_NO_BOOT',0,0,16
	.byte	'DCM_RESET_OEM_BOOT',0,1,16
	.byte	'DCM_RESET_SYS_BOOT',0,2,16
	.byte	'DCM_RESET_DRIVE_TO_DRIVE',0,3,0,12
	.byte	'Dcm_ResetForBootType',0,24,37,2
	.word	14786
	.byte	15,25,205,1,9,4,16
	.byte	'DCM_IOCBI_IDLESTATE',0,0,16
	.byte	'DCM_IOCBI_FCS_ACTIVE',0,1,16
	.byte	'DCM_IOCBI_FCS_PENDING',0,2,16
	.byte	'DCM_IOCBI_RTD_ACTIVE',0,3,16
	.byte	'DCM_IOCBI_RTD_PENDING',0,4,16
	.byte	'DCM_IOCBI_STA_ACTIVE',0,5,16
	.byte	'DCM_IOCBI_STA_PENDING',0,6,16
	.byte	'DCM_IOCBI_RCE_ACTIVE',0,7,16
	.byte	'DCM_IOCBI_RCE_PENDING',0,8,0,12
	.byte	'Dcm_Dsp_IocbiDidStatus_ten',0,25,216,1,4
	.word	14910
	.byte	13,26,26,9,8,14
	.byte	'posnStart_u16',0
	.word	499
	.byte	2,2,35,0,14
	.byte	'dataLength_u16',0
	.word	499
	.byte	2,2,35,2,14
	.byte	'idxSignal_u16',0
	.word	499
	.byte	2,2,35,4,14
	.byte	'dataEndianness_u8',0
	.word	169
	.byte	1,2,35,6,14
	.byte	'dataType_u8',0
	.word	169
	.byte	1,2,35,7,0,12
	.byte	'Dcm_DspRoutineSignalInfo_tst',0,26,33,3
	.word	15163
	.byte	28
	.word	169
	.byte	1,1,23
	.word	10691
	.byte	23
	.word	499
	.byte	23
	.word	169
	.byte	0,3
	.word	15324
	.byte	10
	.word	15163
	.byte	3
	.word	15352
	.byte	10
	.word	15357
	.byte	10
	.word	15357
	.byte	10
	.word	15357
	.byte	10
	.word	15357
	.byte	10
	.word	15357
	.byte	10
	.word	15357
	.byte	13,26,35,9,68,14
	.byte	'dataSecBitMask_u32',0
	.word	838
	.byte	4,2,35,0,14
	.byte	'dataSessBitMask_u32',0
	.word	838
	.byte	4,2,35,4,14
	.byte	'adrUserRidModeRule_pfct',0
	.word	15347
	.byte	4,2,35,8,14
	.byte	'adrStartInSignalRef_cpcst',0
	.word	15362
	.byte	4,2,35,12,14
	.byte	'adrStopInSignalRef_cpcst',0
	.word	15367
	.byte	4,2,35,16,14
	.byte	'adrReqRslInSignalRef_cpcst',0
	.word	15372
	.byte	4,2,35,20,14
	.byte	'adrStartOutSignalRef_cpcst',0
	.word	15377
	.byte	4,2,35,24,14
	.byte	'adrStopOutSignalRef_cpcst',0
	.word	15382
	.byte	4,2,35,28,14
	.byte	'adrReqRsltOutSignalRef_cpcst',0
	.word	15387
	.byte	4,2,35,32,14
	.byte	'dataCtrlOptRecSizeStart_u16',0
	.word	499
	.byte	2,2,35,36,14
	.byte	'dataCtrlOptRecSizeStop_u16',0
	.word	499
	.byte	2,2,35,38,14
	.byte	'dataCtrlOptRecSizeReqRslt_u16',0
	.word	499
	.byte	2,2,35,40,14
	.byte	'dataStsOptRecSizeStart_u16',0
	.word	499
	.byte	2,2,35,42,14
	.byte	'dataStsOptRecSizeStop_u16',0
	.word	499
	.byte	2,2,35,44,14
	.byte	'dataStsOptRecSizeReqRslt_u16',0
	.word	499
	.byte	2,2,35,46,14
	.byte	'dataMinCtrlOptRecSizeStart_u16',0
	.word	499
	.byte	2,2,35,48,14
	.byte	'dataMinCtrlOptRecSizeStop_u16',0
	.word	499
	.byte	2,2,35,50,14
	.byte	'dataMinCtrlOptRecSizeReqRslt_u16',0
	.word	499
	.byte	2,2,35,52,14
	.byte	'dataMinStsOptRecSizeStart_u16',0
	.word	499
	.byte	2,2,35,54,14
	.byte	'dataMinStsOptRecSizeStop_u16',0
	.word	499
	.byte	2,2,35,56,14
	.byte	'dataMinStsOptRecSizeReqRslt_u16',0
	.word	499
	.byte	2,2,35,58,14
	.byte	'nrStartInSignals_u8',0
	.word	169
	.byte	1,2,35,60,14
	.byte	'nrStopInSignals_u8',0
	.word	169
	.byte	1,2,35,61,14
	.byte	'nrReqRslInSignals_u8',0
	.word	169
	.byte	1,2,35,62,14
	.byte	'nrStartOutSignals_u8',0
	.word	169
	.byte	1,2,35,63,14
	.byte	'nrStopOutSignals_u8',0
	.word	169
	.byte	1,2,35,64,14
	.byte	'nrReqRsltOutSignals_u8',0
	.word	169
	.byte	1,2,35,65,0,12
	.byte	'Dcm_DspRoutineInfoType_tst',0,26,69,3
	.word	15392
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,38,0,73,19,0,0,11,21,0,54
	.byte	15,0,0,12,22,0,3,8,58,15,59,15,57,15,73,19,0,0,13,19,1,58,15,59,15,57,15,11,15,0,0,14,13,0,3,8,73,19,11
	.byte	15,56,9,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47
	.byte	15,0,0,19,21,0,54,15,39,12,0,0,20,19,1,3,8,58,15,59,15,57,15,11,15,0,0,21,59,0,3,8,0,0,22,21,1,54,15,39
	.byte	12,0,0,23,5,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0,26
	.byte	21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L54:
	.word	.L184-.L183
.L183:
	.half	3
	.word	.L186-.L185
.L185:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Dcm_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmCore_DslDsd_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Seca_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Dsc_Pub.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\api\\DcmDspUds_Uds_Pub.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\Dsd\\Dcm_Dsd.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreDslDsd\\DcmCore_DslDsd_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Uds_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Er_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Iocbi_Prot.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmDsp\\DcmDspUds\\DcmDspUds_Rc_Prot.h',0,0,0,0,0
.L186:
.L184:
	.sdecl	'.debug_info',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_info'
.L55:
	.word	702
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L58,.L57
	.byte	2
	.word	.L51
	.byte	3
	.byte	'Dcm_GetSignal_u32',0,1,96,23
	.word	.L70
	.byte	1,1,1
	.word	.L48,.L71,.L47
	.byte	4
	.byte	'xDataType_u8',0,1,96,62
	.word	.L72,.L73
	.byte	4
	.byte	'posnStart_u16',0,1,97,59
	.word	.L74,.L75
	.byte	4
	.byte	'adrReqBuffer_u8',0,1,98,80
	.word	.L76,.L77
	.byte	4
	.byte	'dataEndianness_u8',0,1,99,58
	.word	.L72,.L78
	.byte	5
	.word	.L48,.L71
	.byte	6
	.byte	'dataByteNum_u16',0,1,102,27
	.word	.L74,.L79
	.byte	6
	.byte	'dataSignal_u16',0,1,103,27
	.word	.L74,.L80
	.byte	6
	.byte	'dataSignal_u32',0,1,104,27
	.word	.L70,.L81
	.byte	6
	.byte	'flagConvStatus_b',0,1,105,28
	.word	.L72,.L82
	.byte	7
	.word	.L83,.L84,.L85
	.byte	8
	.word	.L86,.L87
	.byte	9
	.word	.L88,.L89
	.byte	6
	.byte	'retVal_u32',0,2,127,12
	.word	.L70,.L100
	.byte	0,0,7
	.word	.L83,.L90,.L91
	.byte	8
	.word	.L86,.L87
	.byte	0,7
	.word	.L83,.L92,.L93
	.byte	8
	.word	.L86,.L87
	.byte	0,7
	.word	.L83,.L94,.L95
	.byte	8
	.word	.L86,.L87
	.byte	0,7
	.word	.L101,.L102,.L19
	.byte	8
	.word	.L103,.L104
	.byte	10
	.word	.L105,.L102,.L19
	.byte	6
	.byte	'retVal_u16',0,2,152,1,12
	.word	.L74,.L106
	.byte	0,0,7
	.word	.L83,.L96,.L97
	.byte	8
	.word	.L86,.L87
	.byte	0,7
	.word	.L83,.L98,.L22
	.byte	8
	.word	.L86,.L87
	.byte	0,7
	.word	.L83,.L17,.L99
	.byte	8
	.word	.L86,.L87
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_line'
.L57:
	.word	.L188-.L187
.L187:
	.half	3
	.word	.L190-.L189
.L189:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L190:
	.byte	5,32,7,0,5,2
	.word	.L48
	.byte	3,235,0,1,5,21,9
	.half	.L84-.L48
	.byte	3,1,1,5,14,9
	.half	.L85-.L84
	.byte	3,7,1,9
	.half	.L191-.L85
	.byte	3,6,1,9
	.half	.L192-.L191
	.byte	3,6,1,9
	.half	.L193-.L192
	.byte	3,28,1,9
	.half	.L194-.L193
	.byte	3,95,1,9
	.half	.L195-.L194
	.byte	3,6,1,9
	.half	.L196-.L195
	.byte	3,28,1,5,54,9
	.half	.L9-.L196
	.byte	3,89,1,5,40,9
	.half	.L149-.L9
	.byte	3,1,1,5,49,9
	.half	.L197-.L149
	.byte	1,5,45,9
	.half	.L148-.L197
	.byte	1,5,28,9
	.half	.L90-.L148
	.byte	1,5,13,9
	.half	.L91-.L90
	.byte	3,1,1,5,45,9
	.half	.L13-.L91
	.byte	3,5,1,5,13,9
	.half	.L93-.L13
	.byte	3,1,1,5,43,9
	.half	.L14-.L93
	.byte	3,8,1,5,58,9
	.half	.L198-.L14
	.byte	1,5,50,9
	.half	.L151-.L198
	.byte	3,1,1,5,59,9
	.half	.L150-.L151
	.byte	3,1,1,5,32,9
	.half	.L94-.L150
	.byte	1,5,66,9
	.half	.L95-.L94
	.byte	3,8,1,5,13,9
	.half	.L146-.L95
	.byte	3,4,1,4,2,5,30,7,9
	.half	.L102-.L146
	.byte	3,7,1,5,41,9
	.half	.L199-.L102
	.byte	1,5,63,9
	.half	.L200-.L199
	.byte	1,5,61,9
	.half	.L201-.L200
	.byte	1,5,72,9
	.half	.L152-.L201
	.byte	1,5,47,9
	.half	.L153-.L152
	.byte	1,5,5,9
	.half	.L202-.L153
	.byte	3,4,1,4,1,5,13,9
	.half	.L19-.L202
	.byte	3,123,1,5,58,9
	.half	.L15-.L19
	.byte	3,9,1,5,45,9
	.half	.L157-.L15
	.byte	3,1,1,5,60,9
	.half	.L203-.L157
	.byte	1,5,84,9
	.half	.L155-.L203
	.byte	1,5,32,9
	.half	.L204-.L155
	.byte	1,5,60,9
	.half	.L205-.L204
	.byte	3,1,1,5,84,9
	.half	.L206-.L205
	.byte	1,5,32,9
	.half	.L207-.L206
	.byte	1,5,60,9
	.half	.L208-.L207
	.byte	3,1,1,5,84,9
	.half	.L209-.L208
	.byte	1,5,32,9
	.half	.L96-.L209
	.byte	1,5,66,9
	.half	.L97-.L96
	.byte	3,11,1,5,13,9
	.half	.L154-.L97
	.byte	3,4,1,4,2,5,96,7,9
	.half	.L98-.L154
	.byte	3,77,1,5,29,9
	.half	.L210-.L98
	.byte	1,5,50,9
	.half	.L211-.L210
	.byte	1,5,61,9
	.half	.L212-.L211
	.byte	1,5,36,9
	.half	.L213-.L212
	.byte	1,5,96,9
	.half	.L214-.L213
	.byte	1,5,81,9
	.half	.L215-.L214
	.byte	1,5,67,9
	.half	.L216-.L215
	.byte	1,5,115,9
	.half	.L217-.L216
	.byte	1,5,102,9
	.half	.L218-.L217
	.byte	1,5,5,9
	.half	.L219-.L218
	.byte	3,4,1,4,1,5,13,9
	.half	.L22-.L219
	.byte	3,51,1,9
	.half	.L16-.L22
	.byte	3,5,1,5,5,9
	.half	.L17-.L16
	.byte	3,6,1,5,1,9
	.half	.L26-.L17
	.byte	3,3,1,7,9
	.half	.L59-.L26
	.byte	0,1,1
.L188:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_ranges'
.L58:
	.word	-1,.L48,0,.L59-.L48,0,0
.L89:
	.word	-1,.L48,.L84-.L48,.L85-.L48,.L90-.L48,.L91-.L48,.L92-.L48,.L93-.L48,.L94-.L48,.L95-.L48,.L96-.L48,.L97-.L48
	.word	.L98-.L48,.L22-.L48,.L17-.L48,.L99-.L48,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_info'
.L60:
	.word	781
	.half	3
	.word	.L61
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L63,.L62
	.byte	2
	.word	.L51
	.byte	3
	.byte	'Dcm_StoreSignal',0,1,229,1,21,1,1,1
	.word	.L50,.L107,.L49
	.byte	4
	.byte	'xDataType_u8',0,1,229,1,58
	.word	.L72,.L108
	.byte	4
	.byte	'posnStart_u16',0,1,230,1,59
	.word	.L74,.L109
	.byte	4
	.byte	'adrRespBuffer_u8',0,1,231,1,78
	.word	.L110,.L111
	.byte	4
	.byte	'dataSignalValue_u32',0,1,232,1,59
	.word	.L70,.L112
	.byte	4
	.byte	'dataEndianness_u8',0,1,233,1,58
	.word	.L72,.L113
	.byte	5
	.word	.L50,.L107
	.byte	6
	.byte	'dataByteNum_u16',0,1,235,1,27
	.word	.L74,.L114
	.byte	6
	.byte	'dataSignalValue_u16',0,1,236,1,27
	.word	.L74,.L115
	.byte	6
	.byte	'flagConvStatus_b',0,1,237,1,28
	.word	.L72,.L116
	.byte	7
	.word	.L83,.L117,.L118
	.byte	8
	.word	.L86,.L119
	.byte	9
	.word	.L88,.L120
	.byte	6
	.byte	'retVal_u32',0,2,127,12
	.word	.L70,.L134
	.byte	0,0,7
	.word	.L83,.L27,.L121
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L122,.L123
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L32,.L124
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L101,.L135,.L38
	.byte	8
	.word	.L103,.L136
	.byte	9
	.word	.L105,.L137
	.byte	6
	.byte	'retVal_u16',0,2,152,1,12
	.word	.L74,.L140
	.byte	0,0,7
	.word	.L101,.L138,.L139
	.byte	8
	.word	.L103,.L136
	.byte	0,7
	.word	.L83,.L125,.L41
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L126,.L127
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L128,.L129
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L130,.L131
	.byte	8
	.word	.L86,.L119
	.byte	0,7
	.word	.L83,.L132,.L133
	.byte	8
	.word	.L86,.L119
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_abbrev'
.L61:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_line'
.L62:
	.word	.L221-.L220
.L220:
	.half	3
	.word	.L223-.L222
.L222:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L223:
	.byte	5,21,7,0,5,2
	.word	.L50
	.byte	3,228,1,1,5,32,9
	.half	.L118-.L50
	.byte	3,11,1,5,58,9
	.half	.L161-.L118
	.byte	3,5,1,5,14,9
	.half	.L158-.L161
	.byte	3,5,1,9
	.half	.L163-.L158
	.byte	3,10,1,9
	.half	.L165-.L163
	.byte	3,6,1,9
	.half	.L167-.L165
	.byte	3,25,1,9
	.half	.L169-.L167
	.byte	3,98,1,9
	.half	.L171-.L169
	.byte	3,6,1,9
	.half	.L173-.L171
	.byte	3,25,1,5,13,9
	.half	.L27-.L173
	.byte	3,89,1,5,33,7,9
	.half	.L121-.L27
	.byte	3,2,1,5,62,9
	.half	.L224-.L121
	.byte	1,5,69,9
	.half	.L176-.L224
	.byte	1,5,66,9
	.half	.L177-.L176
	.byte	1,5,51,9
	.half	.L225-.L177
	.byte	1,5,13,9
	.half	.L35-.L225
	.byte	3,2,1,5,29,9
	.half	.L31-.L35
	.byte	3,6,1,5,47,9
	.half	.L122-.L31
	.byte	1,5,13,9
	.half	.L123-.L122
	.byte	3,1,1,5,33,9
	.half	.L32-.L123
	.byte	3,5,1,5,13,9
	.half	.L124-.L32
	.byte	3,2,1,4,2,5,30,7,9
	.half	.L135-.L124
	.byte	3,140,127,1,5,41,9
	.half	.L226-.L135
	.byte	1,5,63,9
	.half	.L227-.L226
	.byte	1,5,61,9
	.half	.L228-.L227
	.byte	1,5,72,9
	.half	.L179-.L228
	.byte	1,5,47,9
	.half	.L180-.L179
	.byte	1,5,5,9
	.half	.L229-.L180
	.byte	3,4,1,4,1,5,33,9
	.half	.L38-.L229
	.byte	3,248,0,1,5,51,9
	.half	.L138-.L38
	.byte	1,5,17,9
	.half	.L139-.L138
	.byte	3,1,1,5,87,9
	.half	.L178-.L139
	.byte	1,5,56,9
	.half	.L181-.L178
	.byte	1,5,13,9
	.half	.L230-.L181
	.byte	3,9,1,9
	.half	.L33-.L230
	.byte	3,6,1,4,2,5,96,7,9
	.half	.L125-.L33
	.byte	3,219,126,1,5,29,9
	.half	.L231-.L125
	.byte	1,5,50,9
	.half	.L232-.L231
	.byte	1,5,61,9
	.half	.L233-.L232
	.byte	1,5,36,9
	.half	.L234-.L233
	.byte	1,5,96,9
	.half	.L235-.L234
	.byte	1,5,81,9
	.half	.L236-.L235
	.byte	1,5,67,9
	.half	.L237-.L236
	.byte	1,5,115,9
	.half	.L238-.L237
	.byte	1,5,102,9
	.half	.L239-.L238
	.byte	1,5,5,9
	.half	.L240-.L239
	.byte	3,4,1,4,1,5,33,9
	.half	.L41-.L240
	.byte	3,169,1,1,5,51,9
	.half	.L126-.L41
	.byte	1,5,17,9
	.half	.L127-.L126
	.byte	3,1,1,5,87,9
	.half	.L128-.L127
	.byte	1,5,56,9
	.half	.L129-.L128
	.byte	1,5,87,9
	.half	.L130-.L129
	.byte	3,1,1,5,56,9
	.half	.L131-.L130
	.byte	1,5,87,9
	.half	.L132-.L131
	.byte	3,1,1,5,56,9
	.half	.L133-.L132
	.byte	1,5,13,9
	.half	.L241-.L133
	.byte	3,11,1,9
	.half	.L34-.L241
	.byte	3,5,1,5,1,9
	.half	.L36-.L34
	.byte	3,3,1,7,9
	.half	.L64-.L36
	.byte	0,1,1
.L221:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_ranges'
.L63:
	.word	-1,.L50,0,.L64-.L50,0,0
.L120:
	.word	-1,.L50,.L117-.L50,.L118-.L50,.L27-.L50,.L121-.L50,.L122-.L50,.L123-.L50,.L32-.L50,.L124-.L50,.L125-.L50
	.word	.L41-.L50,.L126-.L50,.L127-.L50,.L128-.L50,.L129-.L50,.L130-.L50,.L131-.L50,.L132-.L50,.L133-.L50,0,0
.L137:
	.word	-1,.L50,.L135-.L50,.L38-.L50,.L138-.L50,.L139-.L50,0,0
	.sdecl	'.debug_info',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_info'
.L65:
	.word	303
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L68,.L67
	.byte	2
	.word	.L51
	.byte	3
	.byte	'Dcm_IsEndiannessConversionNecessary',0,1,47,31
	.word	.L72
	.byte	1,1
	.word	.L46,.L141,.L45
	.byte	4
	.byte	'dataEndianness_u8',0,1,47,88
	.word	.L72,.L142
	.byte	5
	.word	.L46,.L141
	.byte	6
	.byte	'flagConvStatus_b',0,1,49,28
	.word	.L72,.L143
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_line'
.L67:
	.word	.L243-.L242
.L242:
	.half	3
	.word	.L245-.L244
.L244:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dcm\\src\\DcmCore\\DcmCoreLib\\DcmCore_DslDsd_SignalLib.c',0,0,0,0,0
.L245:
	.byte	5,23,7,0,5,2
	.word	.L46
	.byte	3,54,1,5,8,9
	.half	.L246-.L46
	.byte	1,5,59,7,9
	.half	.L247-.L246
	.byte	1,5,26,7,9
	.half	.L248-.L247
	.byte	3,4,1,5,32,9
	.half	.L144-.L248
	.byte	1,5,29,9
	.half	.L2-.L144
	.byte	3,2,1,5,13,9
	.half	.L249-.L2
	.byte	1,5,68,7,9
	.half	.L250-.L249
	.byte	1,5,26,7,9
	.half	.L251-.L250
	.byte	3,4,1,5,32,9
	.half	.L145-.L251
	.byte	1,5,26,9
	.half	.L5-.L145
	.byte	3,6,1,5,5,9
	.half	.L4-.L5
	.byte	3,3,1,5,1,9
	.half	.L8-.L4
	.byte	3,1,1,7,9
	.half	.L69-.L8
	.byte	0,1,1
.L243:
	.sdecl	'.debug_ranges',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_ranges'
.L68:
	.word	-1,.L46,0,.L69-.L46,0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_loc'
.L47:
	.word	-1,.L48,0,.L71-.L48
	.half	2
	.byte	138,0
	.word	0,0
.L104:
	.word	0,0
.L87:
	.word	0,0
.L77:
	.word	-1,.L48,0,.L146-.L48
	.half	1
	.byte	100
	.word	.L15-.L48,.L154-.L48
	.half	1
	.byte	100
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	100
	.word	0,0
.L79:
	.word	-1,.L48,.L84-.L48,.L148-.L48
	.half	1
	.byte	95
	.word	.L13-.L48,.L94-.L48
	.half	1
	.byte	95
	.word	.L15-.L48,.L155-.L48
	.half	1
	.byte	95
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	95
	.word	0,0
.L78:
	.word	-1,.L48,0,.L146-.L48
	.half	1
	.byte	86
	.word	.L147-.L48,.L146-.L48
	.half	1
	.byte	84
	.word	.L15-.L48,.L154-.L48
	.half	1
	.byte	86
	.word	.L156-.L48,.L154-.L48
	.half	1
	.byte	84
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	86
	.word	0,0
.L80:
	.word	-1,.L48,.L151-.L48,.L150-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	.L150-.L48,.L95-.L48
	.half	1
	.byte	88
	.word	0,0
.L81:
	.word	-1,.L48,.L149-.L48,.L91-.L48
	.half	1
	.byte	88
	.word	.L157-.L48,.L154-.L48
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L82:
	.word	-1,.L48,.L146-.L48,.L15-.L48
	.half	1
	.byte	82
	.word	.L154-.L48,.L16-.L48
	.half	1
	.byte	82
	.word	0,0
.L75:
	.word	-1,.L48,0,.L146-.L48
	.half	1
	.byte	85
	.word	.L15-.L48,.L154-.L48
	.half	1
	.byte	85
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	85
	.word	0,0
.L106:
	.word	0,0
.L100:
	.word	-1,.L48,.L85-.L48,.L149-.L48
	.half	1
	.byte	88
	.word	.L90-.L48,.L150-.L48
	.half	1
	.byte	88
	.word	.L94-.L48,.L152-.L48
	.half	1
	.byte	88
	.word	.L153-.L48,.L71-.L48
	.half	1
	.byte	88
	.word	.L99-.L48,.L71-.L48
	.half	1
	.byte	82
	.word	0,0
.L73:
	.word	-1,.L48,0,.L147-.L48
	.half	1
	.byte	84
	.word	.L15-.L48,.L156-.L48
	.half	1
	.byte	84
	.word	.L16-.L48,.L17-.L48
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_loc'
.L45:
	.word	-1,.L46,0,.L141-.L46
	.half	2
	.byte	138,0
	.word	0,0
.L142:
	.word	-1,.L46,0,.L141-.L46
	.half	1
	.byte	84
	.word	0,0
.L143:
	.word	-1,.L46,.L144-.L46,.L2-.L46
	.half	1
	.byte	82
	.word	.L145-.L46,.L5-.L46
	.half	1
	.byte	82
	.word	.L4-.L46,.L141-.L46
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_loc'
.L49:
	.word	-1,.L50,0,.L107-.L50
	.half	2
	.byte	138,0
	.word	0,0
.L136:
	.word	0,0
.L119:
	.word	0,0
.L111:
	.word	-1,.L50,0,.L158-.L50
	.half	1
	.byte	100
	.word	.L117-.L50,.L160-.L50
	.half	1
	.byte	111
	.word	.L31-.L50,.L122-.L50
	.half	1
	.byte	111
	.word	.L32-.L50,.L178-.L50
	.half	1
	.byte	111
	.word	.L33-.L50,.L128-.L50
	.half	1
	.byte	111
	.word	.L34-.L50,.L36-.L50
	.half	1
	.byte	111
	.word	0,0
.L114:
	.word	-1,.L50,.L161-.L50,.L107-.L50
	.half	1
	.byte	91
	.word	0,0
.L113:
	.word	-1,.L50,0,.L158-.L50
	.half	1
	.byte	87
	.word	.L159-.L50,.L158-.L50
	.half	1
	.byte	84
	.word	0,0
.L115:
	.word	0,0
.L112:
	.word	-1,.L50,0,.L158-.L50
	.half	1
	.byte	86
	.word	0,0
.L116:
	.word	-1,.L50,.L158-.L50,.L107-.L50
	.half	1
	.byte	82
	.word	0,0
.L109:
	.word	-1,.L50,0,.L158-.L50
	.half	1
	.byte	85
	.word	.L118-.L50,.L161-.L50
	.half	1
	.byte	88
	.word	.L176-.L50,.L177-.L50
	.half	1
	.byte	88
	.word	0,0
.L140:
	.word	-1,.L50,.L124-.L50,.L179-.L50
	.half	5
	.byte	144,32,157,32,0
	.word	.L180-.L50,.L181-.L50
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L134:
	.word	-1,.L50,0,.L158-.L50
	.half	1
	.byte	86
	.word	.L118-.L50,.L107-.L50
	.half	1
	.byte	90
	.word	0,0
.L108:
	.word	-1,.L50,0,.L159-.L50
	.half	1
	.byte	84
	.word	.L162-.L50,.L163-.L50
	.half	1
	.byte	89
	.word	.L164-.L50,.L165-.L50
	.half	1
	.byte	89
	.word	.L166-.L50,.L167-.L50
	.half	1
	.byte	89
	.word	.L168-.L50,.L169-.L50
	.half	1
	.byte	89
	.word	.L170-.L50,.L171-.L50
	.half	1
	.byte	89
	.word	.L172-.L50,.L173-.L50
	.half	1
	.byte	89
	.word	.L174-.L50,.L175-.L50
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L252:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dcm_IsEndiannessConversionNecessary')
	.sect	'.debug_frame'
	.word	24
	.word	.L252,.L46,.L141-.L46
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dcm_GetSignal_u32')
	.sect	'.debug_frame'
	.word	12
	.word	.L252,.L48,.L71-.L48
	.sdecl	'.debug_frame',debug,cluster('Dcm_StoreSignal')
	.sect	'.debug_frame'
	.word	12
	.word	.L252,.L50,.L107-.L50

; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   326  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   327  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   328  #if ( (DCM_CFG_ROUTINEARRAY_INSIG != DCM_CFG_OFF)  || (DCM_CFG_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF) || \ 
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   329  (DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF)||(DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF) )
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   330  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   331  #if ((DCM_CFG_ROUTINEARRAY_INSIG != DCM_CFG_OFF) || (DCM_CFG_RCRANGE_ROUTINEARRAY_INSIG != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   332  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   333  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   334   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   335   * StoreRcBuffer : API to store the requested data into uint16 ot sint16 RC Buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   336  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   337  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   338   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   339   * \param           xDataType_u8:   DataType of the data which has to be stored
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   340   *                  IndexSig_u16:   Position in the buffer where the data has to be stored
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   341   *                  dataSignal_u16:  The data which has to be stored
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   342   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   343   * \retval         : NONE
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   344  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   345   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   346   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   347  static FUNC(void,DCM_CODE) StoreRcBuffer(VAR(uint8,AUTOMATIC) xDataType_u8,VAR(uint16,AUTOMATIC) IndexSig_u16, VAR(uint16,AUTOMATIC) dataSignal_u16)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   348  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   349      if(xDataType_u8 == DCM_UINT16_N)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   350      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   351          Dcm_RCSigInN_au16[IndexSig_u16] = dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   352      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   353      else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   354      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   355          Dcm_RCSigInN_as16[IndexSig_u16] = (sint16)dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   356      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   357  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   358  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   359  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   360   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   361   * Dcm_RcSetSignalArray : API to store the ReqBuffer Data into appropriate Routine Control SignalType Buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   362                            As reqBuffer contains data in UINT8 chunks the same has to be converted if necessary into uint16/sint16/uint32..... based on
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   363                Endianess configuration and stored in the Routine Control Signal Array
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   364   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   365   * \param           Dcm_DspRoutineSignalInfo_tst:   Structure containing the details of RC Signal configuration
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   366   *                  adrReqBuffer_u8:    Contains the Address of the RequestBuffer from where the data should be copied
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   367   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   368   * \retval         : NONE
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   369  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   370   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   371   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   372  FUNC(void,DCM_CODE) Dcm_RcSetSignalArray(P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_DATA) adrSignal_pcst,P2CONST(uint8, AUTOMATIC, DCM_INTERN_DATA) adrReqBuffer_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   373  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   374       VAR(uint8,AUTOMATIC)  xDataType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   375       VAR(uint16,AUTOMATIC) DataLen_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   376       VAR(uint16,AUTOMATIC) IndexSig_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   377       VAR(uint16,AUTOMATIC) IndexReqData_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   378       /*Check if endianness conversion is necessary or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   379       VAR(boolean,AUTOMATIC) flagConvStatus_b;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   380       VAR(uint16,AUTOMATIC) idx;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   381       VAR(uint16,AUTOMATIC) dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   382       VAR(uint32,AUTOMATIC) dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   383  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   384  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   385       dataSignal_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   386       dataSignal_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   387       xDataType_u8 = adrSignal_pcst->dataType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   388       DataLen_u16 = adrSignal_pcst->dataLength_u16 / CalArraySize_u8[xDataType_u8 - DCM_RCARRAYINDEX];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   389       flagConvStatus_b=Dcm_IsEndiannessConversionNecessary(adrSignal_pcst->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   390       IndexSig_u16 = adrSignal_pcst->idxSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   391       IndexReqData_u16 = (uint16)((adrSignal_pcst->posnStart_u16)/8);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   392  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   393      switch(xDataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   394      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   395          case DCM_UINT8_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   396          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   397              /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   398               DCM_MEMCOPY(&(Dcm_RCSigInN_au8[IndexSig_u16]),&(adrReqBuffer_u8[IndexReqData_u16]),DataLen_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   399          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   400          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   401          case DCM_SINT8_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   402          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   403             /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   404              DCM_MEMCOPY(&(Dcm_RCSigInN_as8[IndexSig_u16]),&(adrReqBuffer_u8[IndexReqData_u16]),DataLen_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   405          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   406          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   407          case DCM_UINT16_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   408          case DCM_SINT16_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   409          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   410  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   411              for(idx=0;idx<DataLen_u16;idx++)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   412              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   413  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   414                  /* Combine the uint8 contents of Requestbuffer into a uint16 value */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   415                  dataSignal_u16 = (uint16)(((uint16)adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[0]]) + ((uint16)(adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[1]]) * 0x100u));
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   416  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   417                  IndexReqData_u16 = IndexReqData_u16 + 2;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   418                  /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   419                  if(TRUE==flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   420                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   421                      DCM_ENDIANNESSCONVERSION16(dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   422                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   423                  StoreRcBuffer(xDataType_u8,IndexSig_u16,dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   424  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   425                IndexSig_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   426              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   427          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   428          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   429  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   430          case DCM_UINT32_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   431          case DCM_SINT32_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   432          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   433              for(idx=0;idx<DataLen_u16;idx++)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   434              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   435  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   436                   /* Combine the uint8 contents of Requestbuffer into a uint32 value */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   437                   dataSignal_u32 = (uint32)((adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[2]]) + ((adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[3]]) * 0x100u) + ((adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[4]]) *  0x10000u) + ((adrReqBuffer_u8[IndexReqData_u16 + EndianessConvLUT_u8[5]]) * 0x1000000u) );
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   438  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   439                  IndexReqData_u16 = IndexReqData_u16+4;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   440                  /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   441                  if(TRUE==flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   442                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   443                      DCM_ENDIANNESSCONVERSION32(dataSignal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   444                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   445  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   446                  if(xDataType_u8 == DCM_UINT32_N)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   447                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   448                      Dcm_RCSigInN_au32[IndexSig_u16] = dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   449                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   450                  else
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   451                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   452                      Dcm_RCSigInN_as32[IndexSig_u16] = (sint32)dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   453                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   454  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   455                  IndexSig_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   456              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   457          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   458          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   459  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   460          default:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   461              /*All Data types cases are covered already*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   462  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   463              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   464      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   465  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   466  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   467  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   468  #if((DCM_CFG_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF) || (DCM_CFG_RCRANGE_ROUTINEARRAY_OUTSIG != DCM_CFG_OFF))
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   469  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   470  /**
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   471   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   472   * Dcm_RcStoreSignalArray : API to store the data obtained from Routine Control service into Response buffer
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   473                            As resBuffer should have data in UINT8 chunks the data returned by RC service
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   474                (for data types uint16,sint32....) has  to be split into uint8 chunks before updating the response
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   475   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   476   * \param           Dcm_DspRoutineSignalInfo_tst:   Structure containing the details of RC Signal configuration
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   477   *                  adrResBuffer_u8:    Contains the Address of the ResponseBuffer to which the data should be filled
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   478   *
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   479   * \retval         : NONE
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   480  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   481   **************************************************************************************************
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   482   */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   483  FUNC(void,DCM_CODE) Dcm_RcStoreSignalArray(P2CONST(Dcm_DspRoutineSignalInfo_tst, AUTOMATIC, DCM_INTERN_DATA) adrSignal_pcst,P2VAR(uint8, AUTOMATIC, DCM_INTERN_DATA) adrResBuffer_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   484  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   485  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   486       VAR(uint8,AUTOMATIC)  xDataType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   487       VAR(uint16,AUTOMATIC) DataLen_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   488       VAR(uint16,AUTOMATIC) IndexSig_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   489       VAR(uint16,AUTOMATIC) IndexResData_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   490       /*Check if endianness conversion is necessary or not*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   491       VAR(boolean,AUTOMATIC) flagConvStatus_b;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   492       VAR(uint16,AUTOMATIC) idx;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   493       VAR(uint16,AUTOMATIC) dataSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   494       VAR(uint32,AUTOMATIC) dataSignal_u32;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   495  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   496       dataSignal_u32 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   497       dataSignal_u16 = 0;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   498       xDataType_u8 = adrSignal_pcst->dataType_u8;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   499       DataLen_u16 = adrSignal_pcst->dataLength_u16 / CalArraySize_u8[xDataType_u8 - DCM_RCARRAYINDEX];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   500       flagConvStatus_b=Dcm_IsEndiannessConversionNecessary(adrSignal_pcst->dataEndianness_u8);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   501       IndexSig_u16 = adrSignal_pcst->idxSignal_u16;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   502       IndexResData_u16 = (uint16)(adrSignal_pcst->posnStart_u16/8);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   503  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   504      switch(xDataType_u8)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   505      {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   506          case DCM_UINT8_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   507          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   508              /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   509              DCM_MEMCOPY(&(adrResBuffer_u8[IndexResData_u16]),&(Dcm_RCSigOutN_au8[IndexSig_u16]),DataLen_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   510          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   511          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   512  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   513          case DCM_SINT8_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   514          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   515             /*MR12 DIR 1.1 VIOLATION:This is required for implememtaion as DCM_MEMCOPY takes void pointer as input and object type pointer is converted to void pointer*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   516              DCM_MEMCOPY(&(adrResBuffer_u8[IndexResData_u16]),&(Dcm_RCSigOutN_as8[IndexSig_u16]),DataLen_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   517          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   518          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   519  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   520          case DCM_UINT16_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   521          case DCM_SINT16_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   522          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   523              for(idx=0;idx<DataLen_u16;idx++)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   524              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   525                  dataSignal_u16 = (xDataType_u8 == DCM_UINT16_N) ? Dcm_RCSigOutN_au16[IndexSig_u16]:(uint16)Dcm_RCSigOutN_as16[IndexSig_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   526                  IndexSig_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   527  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   528                  /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   529                  if(TRUE==flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   530                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   531                      DCM_ENDIANNESSCONVERSION16(dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   532                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   533  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   534                  /* Copy the data from buffer by pointer typecast into an uint16 variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   535  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   536                  /* Store the data into response buffer based on Endianess of the system */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   537                  adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[0]] =  (uint8)(dataSignal_u16);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   538                  adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[1]] =  (uint8)(dataSignal_u16 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   539  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   540                   IndexResData_u16 = IndexResData_u16 + 2;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   541              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   542          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   543          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   544  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   545          case DCM_UINT32_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   546          case DCM_SINT32_N:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   547          {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   548              for(idx=0;idx<DataLen_u16;idx++)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   549              {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   550                  dataSignal_u32 = (xDataType_u8 == DCM_UINT32_N) ? Dcm_RCSigOutN_au32[IndexSig_u16]:(uint32)Dcm_RCSigOutN_as32[IndexSig_u16];
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   551                  IndexSig_u16++;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   552  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   553                  /*TRIGGER Endianness conversion*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   554                  if(TRUE==flagConvStatus_b)
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   555                  {
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   556                      DCM_ENDIANNESSCONVERSION32(dataSignal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   557                  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   558                /* Copy the data from buffer by pointer typecast into an uint32 variable*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   559                /* Split and store the data bytes into response buffer based on endianess of the system */
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   560                adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[2]] =  (uint8)(dataSignal_u32);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   561                adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[3]] =  (uint8)(dataSignal_u32 >> 8u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   562                adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[4]] =  (uint8)(dataSignal_u32 >> 16u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   563                adrResBuffer_u8[IndexResData_u16 + EndianessConvLUT_u8[5]] =  (uint8)(dataSignal_u32 >> 24u);
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   564  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   565                IndexResData_u16 = IndexResData_u16+4;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   566              }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   567          }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   568          break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   569  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   570          default:
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   571              /*All Data types are covered already*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   572              break;
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   573      }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   574  }
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   575  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   576  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   577  #endif
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   578  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   579  #define DCM_STOP_SEC_CODE /*Adding this for memory mapping*/
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   580  #include "Dcm_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   581  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   582  
; BSW\src\BSW\Gen\Dcm\src\DcmCore\DcmCoreLib\DcmCore_DslDsd_SignalLib.c	   583  

	; Module end
