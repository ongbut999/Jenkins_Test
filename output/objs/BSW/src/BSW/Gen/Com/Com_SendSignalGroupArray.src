	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc7580a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_SendSignalGroupArray.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_SendSignalGroupArray.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_SendSignalGroupArray.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	13344
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_SendSignalGroupArray.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	167
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	150
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	260
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	150
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	150
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	150
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBits_u8u8u8_u8_Inl',0,3,1,179,3,20
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,179,3,56
	.word	150
	.byte	4
	.byte	'BitStartPn',0,1,179,3,68
	.word	150
	.byte	4
	.byte	'BitLn',0,1,179,3,86
	.word	150
	.byte	5,0,6
	.word	167
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	510
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	150
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	150
	.byte	5,0,6
	.word	260
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	596
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	150
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	150
	.byte	5,0,6
	.word	150
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	682
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	150
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	150
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	260
	.byte	5,0,8
	.word	189
	.byte	9
	.word	229
	.byte	9
	.word	243
	.byte	5,0,8
	.word	276
	.byte	9
	.word	316
	.byte	9
	.word	330
	.byte	5,0,8
	.word	347
	.byte	9
	.word	386
	.byte	9
	.word	400
	.byte	5,0,8
	.word	417
	.byte	9
	.word	459
	.byte	9
	.word	473
	.byte	9
	.word	493
	.byte	5,0,8
	.word	515
	.byte	9
	.word	550
	.byte	9
	.word	564
	.byte	9
	.word	579
	.byte	5,0,8
	.word	601
	.byte	9
	.word	636
	.byte	9
	.word	650
	.byte	9
	.word	665
	.byte	5,0,8
	.word	687
	.byte	9
	.word	721
	.byte	9
	.word	735
	.byte	9
	.word	750
	.byte	5,0,8
	.word	767
	.byte	9
	.word	812
	.byte	5,0,10,1,6
	.word	979
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	981
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	1004
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	150
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	167
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	260
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	1070
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	150
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	150
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	150
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	150
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	150
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	1171
	.byte	11
	.byte	'PduIdType',0,5,22,19
	.word	167
	.byte	11
	.byte	'PduLengthType',0,5,26,19
	.word	167
	.byte	14,6,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,6,118,3
	.word	1361
	.byte	11
	.byte	'Com_SignalIdType',0,7,100,16
	.word	167
	.byte	11
	.byte	'Com_SignalGroupIdType',0,7,102,16
	.word	167
	.byte	11
	.byte	'Com_IpduIdType',0,7,104,15
	.word	150
	.byte	11
	.byte	'Com_GrpSignalIdType',0,7,107,18
	.word	150
	.byte	11
	.byte	'Com_TxIntSignalIdType',0,8,138,3,18
	.word	150
	.byte	11
	.byte	'Com_RxIntSignalIdType',0,8,139,3,18
	.word	150
	.byte	11
	.byte	'Com_BitsizeType',0,8,155,3,17
	.word	150
	.byte	11
	.byte	'Com_BitpositionType',0,8,156,3,15
	.word	150
	.byte	11
	.byte	'Com_RxGwQueueIndexType',0,8,161,3,15
	.word	150
	.byte	11
	.byte	'Com_SigBuffIndexType',0,8,164,3,15
	.word	150
	.byte	11
	.byte	'Com_SigMaxType',0,8,198,3,16
	.word	260
	.byte	11
	.byte	'Com_MainFuncType',0,8,231,3,16
	.word	150
	.byte	11
	.byte	'Com_NumOfIpdusType',0,8,233,3,15
	.word	150
	.byte	11
	.byte	'Com_TimeBaseType',0,8,235,3,15
	.word	150
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	260
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	167
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1869
	.byte	16,68
	.word	260
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	1949
	.byte	68,2,35,0,0,16,68
	.word	1958
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1980
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	260
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2040
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2040
	.byte	18,1,1,6
	.word	2125
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2128
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	150
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2191
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	260
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	167
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	260
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	260
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	260
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	596
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	167
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	167
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2498
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2591
	.byte	20
	.byte	'void',0,6
	.word	2703
	.byte	21,1,1,22
	.word	150
	.byte	22
	.word	2709
	.byte	0,6
	.word	2714
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2728
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	260
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2040
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2040
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2040
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2040
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2763
	.byte	6
	.word	2763
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2961
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	150
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	260
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2763
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3040
	.byte	6
	.word	3040
	.byte	23
	.word	3101
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2133
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3106
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2040
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3111
	.byte	6
	.word	2125
	.byte	23
	.word	3111
	.byte	6
	.word	3270
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3275
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	260
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	260
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	260
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	260
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	260
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3383
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	260
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	260
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	260
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3447
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	150
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	1989
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2763
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3545
	.byte	16,68
	.word	1958
	.byte	17,0,0,6
	.word	3545
	.byte	23
	.word	3671
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3676
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2133
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3383
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3447
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3447
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	167
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	260
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2040
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3681
	.byte	23
	.word	3681
	.byte	6
	.word	3931
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	3936
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	3959
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3447
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4046
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4069
	.byte	6
	.word	4069
	.byte	23
	.word	4149
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4154
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3447
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4159
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	260
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4258
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4353
	.byte	26
	.word	150
	.byte	1,1,6
	.word	4439
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4446
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	260
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4482
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4510
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4529
	.byte	6
	.word	4529
	.byte	23
	.word	4607
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4612
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4451
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4258
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2709
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4617
	.byte	6
	.word	4439
	.byte	23
	.word	4617
	.byte	6
	.word	4769
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4774
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4800
	.byte	23
	.word	.L6-.L3
	.byte	6
	.word	5000
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5005
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5010
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4800
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	167
	.byte	2,2,35,12,0,6
	.word	5037
	.byte	23
	.word	5130
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5135
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4779
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5140
	.byte	23
	.word	5140
	.byte	6
	.word	5320
	.byte	23
	.word	4617
	.byte	6
	.word	5330
	.byte	27
	.word	2433
	.byte	27
	.word	3383
	.byte	27
	.word	3280
	.byte	27
	.word	3941
	.byte	27
	.word	3447
	.byte	27
	.word	150
	.byte	27
	.word	3941
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	1869
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5340
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5345
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5350
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5355
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5360
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	2966
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2763
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	150
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5365
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2040
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	150
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5370
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2040
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	150
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	150
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	150
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5375
	.byte	6
	.word	260
	.byte	23
	.word	3111
	.byte	6
	.word	5831
	.byte	23
	.word	3681
	.byte	6
	.word	5841
	.byte	6
	.word	2763
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	260
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	260
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	260
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	1989
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	150
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5856
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	260
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6133
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6269
	.byte	16,4
	.word	150
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6409
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6418
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	167
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6519
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	167
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6594
	.byte	23
	.word	6594
	.byte	6
	.word	6759
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6764
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6769
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6409
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6869
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	150
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	150
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2709
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2709
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	150
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7015
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7102
	.byte	6
	.word	7015
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7200
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	167
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2709
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2709
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7102
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7205
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	260
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	167
	.byte	16,128,8
	.word	150
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7443
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	260
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	167
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	150
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	150
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	150
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	150
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7634
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	150
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	150
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	150
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	150
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	150
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	167
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	150
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7975
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	167
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	150
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	260
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	167
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	150
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	150
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	150
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	150
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	150
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	150
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	150
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	150
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	150
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	150
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	150
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8207
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	150
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	150
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	150
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8711
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	150
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	150
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7454
	.byte	16,128,8
	.word	150
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7454
	.byte	11
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3941
	.byte	11
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	150
	.byte	11
	.byte	'Rte_EventType',0,14,186,1,32
	.word	260
	.byte	11
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	150
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	9633
	.byte	12,14,255,1,9,8,13
	.byte	'task',0
	.word	9529
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9638
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	9671
	.byte	23
	.word	3681
	.byte	6
	.word	9735
	.byte	6
	.word	150
	.byte	23
	.word	9671
	.byte	6
	.word	9750
	.byte	11
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9755
	.byte	11
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	167
	.byte	6
	.word	167
	.byte	11
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9820
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	150
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9888
	.byte	12,14,163,2,9,24,13
	.byte	'counter',0
	.word	9825
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	9893
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9529
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9638
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	167
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9928
	.byte	6
	.word	167
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	150
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	150
	.byte	12,14,182,2,9,4,13
	.byte	'pending',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	10146
	.byte	6
	.word	10146
	.byte	12,14,226,2,9,12,13
	.byte	'event_id',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10238
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	260
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	10243
	.byte	23
	.word	10243
	.byte	6
	.word	10332
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	10337
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	9671
	.byte	19
	.byte	'Rte_QTaskType',0,14,243,2,16,28,13
	.byte	'cmn',0
	.word	7205
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9529
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	10414
	.byte	19
	.byte	'Rte_QREType',0,14,250,2,16,28,13
	.byte	'cmn',0
	.word	7205
	.byte	24,2,35,0,13
	.byte	're',0
	.word	9760
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,14,253,2,3
	.word	10485
	.byte	23
	.word	9671
	.byte	6
	.word	10550
	.byte	19
	.byte	'Rte_QWWPType',0,14,129,3,16,28,13
	.byte	'cmn',0
	.word	7205
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10342
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	10560
	.byte	23
	.word	10243
	.byte	6
	.word	10628
	.byte	19
	.byte	'Rte_QEvType',0,14,136,3,16,36,13
	.byte	'cmn',0
	.word	7205
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9529
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9638
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	10638
	.byte	19
	.byte	'Rte_QMSIType',0,14,145,3,16,48,13
	.byte	'cmn',0
	.word	7205
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9529
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9638
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	9825
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	9893
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	167
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10733
	.byte	12,15,52,9,1,28
	.byte	'isEventTrig',0,1
	.word	150
	.byte	1,7,2,35,0,28
	.byte	'isTriggerIpduSendWithMetadata',0,1
	.word	150
	.byte	1,6,2,35,0,28
	.byte	'isGwIpduSend',0,1
	.word	150
	.byte	1,5,2,35,0,28
	.byte	'isModeChangd',0,1
	.word	150
	.byte	1,4,2,35,0,28
	.byte	'sigTransProp',0,1
	.word	150
	.byte	1,3,2,35,0,28
	.byte	'isTimeoutReq',0,1
	.word	150
	.byte	1,2,2,35,0,28
	.byte	'ignoreRepetitions',0,1
	.word	150
	.byte	1,1,2,35,0,0,11
	.byte	'Com_SendIpduInfo',0,15,61,3
	.word	10888
	.byte	12,15,76,9,8,13
	.byte	'TimePeriodFact',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'TimeOffsetFact',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RepetitionPeriodFact',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'NumOfRepetitions',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'Mode',0
	.word	150
	.byte	1,2,35,7,0,11
	.byte	'Com_TransModeInfo',0,15,93,2
	.word	11108
	.byte	23
	.word	11108
	.byte	6
	.word	11258
	.byte	11
	.byte	'Com_TMConstPtrType',0,15,103,65
	.word	11263
	.byte	12,15,136,1,9,12,13
	.byte	'Init_Val',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'txSignalFields',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'Bit_Pos',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'BitSize',0
	.word	150
	.byte	1,2,35,7,13
	.byte	'IpduRef',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'General',0
	.word	150
	.byte	1,2,35,9,0,11
	.byte	'Com_Prv_xTxSigCfg_tst',0,15,201,1,2
	.word	11295
	.byte	12,15,247,1,9,16,13
	.byte	'Notification_Cbk',0
	.word	2128
	.byte	4,2,35,0,13
	.byte	'Init_Val',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'Bit_Pos',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'SigBuff_Index',0
	.word	150
	.byte	1,2,35,9,13
	.byte	'BitSize',0
	.word	150
	.byte	1,2,35,10,13
	.byte	'IpduRef',0
	.word	150
	.byte	1,2,35,11,13
	.byte	'General',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'rxSignalFields',0
	.word	150
	.byte	1,2,35,13,0,11
	.byte	'Com_Prv_xRxSigCfg_tst',0,15,171,2,2
	.word	11443
	.byte	23
	.word	11443
	.byte	6
	.word	11640
	.byte	11
	.byte	'Com_RxSigConstPtrType',0,15,180,2,68
	.word	11645
	.byte	12,15,211,5,9,24,13
	.byte	'BuffPtr',0
	.word	682
	.byte	4,2,35,0,13
	.byte	'Com_TMConstPtr',0
	.word	11263
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'Timeout_Fact',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Min_Delay_Time_Fact',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	167
	.byte	2,2,35,14,13
	.byte	'PdurId',0
	.word	167
	.byte	2,2,35,16,13
	.byte	'TxSigId_Index',0
	.word	150
	.byte	1,2,35,18,13
	.byte	'txIPduFields',0
	.word	167
	.byte	2,2,35,20,13
	.byte	'MainFunctionRef',0
	.word	150
	.byte	1,2,35,22,13
	.byte	'PaddingByte',0
	.word	150
	.byte	1,2,35,23,0,11
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,15,162,6,3
	.word	11681
	.byte	23
	.word	11681
	.byte	6
	.word	11960
	.byte	11
	.byte	'Com_TxIpduConstPtrType',0,15,171,6,72
	.word	11965
	.byte	12,15,137,7,9,20,13
	.byte	'BuffPtr',0
	.word	682
	.byte	4,2,35,0,13
	.byte	'TimeOutNotification_Cbk',0
	.word	2128
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'FirstTimeout_Factor',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Timeout_Fact',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	167
	.byte	2,2,35,14,13
	.byte	'RxSigId_Index',0
	.word	150
	.byte	1,2,35,16,13
	.byte	'MainFunctionRef',0
	.word	150
	.byte	1,2,35,17,13
	.byte	'rxIPduFields',0
	.word	150
	.byte	1,2,35,18,0,11
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,15,197,7,3
	.word	12002
	.byte	12,15,219,7,9,4,13
	.byte	'FirstIpdu_Index',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'NoOfRxPdus',0
	.word	167
	.byte	2,2,35,2,0,11
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,15,224,7,3
	.word	12253
	.byte	12,15,244,7,9,1,13
	.byte	'txSigRAMFields',0
	.word	150
	.byte	1,2,35,0,0,11
	.byte	'Com_TxSignalFlagType',0,15,248,7,2
	.word	12342
	.byte	12,15,167,8,9,1,13
	.byte	'rxSigRAMFields',0
	.word	150
	.byte	1,2,35,0,0,11
	.byte	'Com_RxSignalFlagType',0,15,171,8,2
	.word	12403
	.byte	12,15,135,9,9,16,13
	.byte	'CurrentTxModePtr',0
	.word	11268
	.byte	4,2,35,0,13
	.byte	'Com_MinDelayTick',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'Com_Tick_Tx',0
	.word	167
	.byte	2,2,35,6,13
	.byte	'Com_n_Tick_Tx',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'Com_TickTxTimeout',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Com_TxFlags',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'Com_n',0
	.word	150
	.byte	1,2,35,14,13
	.byte	'Com_TransMode',0
	.word	150
	.byte	1,2,35,15,0,11
	.byte	'Com_TxIpduRamData',0,15,189,9,3
	.word	12464
	.byte	23
	.word	11108
	.byte	6
	.word	12680
	.byte	6
	.word	12464
	.byte	11
	.byte	'Com_TxIpduRamPtrType',0,15,198,9,62
	.word	12690
	.byte	12,15,218,9,9,6,13
	.byte	'RxIPduLength',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'RxTicks_u16',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RxFlags',0
	.word	150
	.byte	1,2,35,4,0,11
	.byte	'Com_RxIpduRamData',0,15,245,9,2
	.word	12725
	.byte	6
	.word	167
	.byte	12,15,128,10,9,8,13
	.byte	'RxGwQueuePtr',0
	.word	12819
	.byte	4,2,35,0,13
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'Com_RxGwQueueRead_ux',0
	.word	150
	.byte	1,2,35,5,0,11
	.byte	'Com_RxGwQueueRAMType',0,15,133,10,2
	.word	12824
	.byte	12,15,138,10,9,4,13
	.byte	'indexGwMapSigDestIdArray',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'destCount',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,15,142,10,2
	.word	12944
	.byte	12,15,147,10,9,2,13
	.byte	'GwMap_DestId',0
	.word	167
	.byte	2,2,35,0,0,11
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,15,150,10,2
	.word	13038
	.byte	12,15,183,10,9,4,13
	.byte	'StartIPduId',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'NumOfIpdus',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'TimeBaseInMs',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Com_MainFunctionCfgType',0,15,188,10,3
	.word	13103
	.byte	12,15,194,10,9,12,13
	.byte	'Com_SigType_pu8',0
	.word	682
	.byte	4,2,35,0,13
	.byte	'Com_SigType_pu16',0
	.word	510
	.byte	4,2,35,4,13
	.byte	'Com_SigType_pu32',0
	.word	596
	.byte	4,2,35,8,0,11
	.byte	'Com_Prv_xRxRamBuf_tst',0,15,253,10,3
	.word	13206
	.byte	11
	.byte	'rba_BswSrv_uint64',0,16,66,28
	.word	1070
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0
	.byte	54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0
	.byte	73,19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	26,21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_SendSignalGroupArray.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     3  /*
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     4  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     5  * Includes
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     6  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     7  */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     8  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	     9  #include "Com_Prv_Inl.h"
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    10  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    11  /*
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    12  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    13  * Global function Definitions (declared in header files)
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    14  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    15  */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    16  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    17  /* Com_SendSignalGroupArray() API shall only be available when the configuration switch
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    18   *  ComEnableSignalGroupArrayApi is enabled */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    19  #if defined ( COM_TX_SIGNALGROUP_ARRAY )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    20  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    21  # ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    22  /* Check if GroupSignal data has changed from the last update */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    23  LOCAL_INLINE FUNC(void, COM_CODE) Com_InternalSigGrpArrayTrigOnChange( Com_SignalGroupIdType SignalGroupId );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    24  # endif /* #ifdef COM_EffectiveSigGrpTOC */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    25  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    26  /*
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    27  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    28  * Function name    : Com_SendSignalGroupArray
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    29  * Syntax           : uint8
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    30  *                    Com_SendSignalGroupArray( Com_SignalGroupIdType SignalGroupId, const uint8* SignalGroupArrayPtr )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    31  * Description      : The service Com_SendSignalGroupArray copies the content of the provided SignalGroupArrayPtr to
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    32  *                    the associated I-PDU. The provided data shall correspond to the array representation of
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    33  *                    the signal group.
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    34  * Parameters    IN : SignalGroupId       - Id of signal group to be sent
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    35  *                    SignalGroupArrayPtr - Reference to the signal group array
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    36  * Sync/Async       : Asynchronous
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    37  * Reentrancy       : Non Reentrant for the same signal group. Reentrant for different signal groups.
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    38  * Return value     : E_OK                      : service has been accepted
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    39  *                    COM_SERVICE_NOT_AVAILABLE : corresponding I-PDU group was stopped
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    40  *                                                (or service failed due to development error)
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    41  *                    COM_BUSY                  : in case the TP-Buffer is locked for large data types handling
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    42  **********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    43  */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    44  # define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    45  # include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    46  /* HIS METRIC CALLS VIOLATION IN Com_SendSignalGroupArray:
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    47     Com_SendSignalGroupArray function contains necessary function calls statements.
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    48     HIS metric compliance would decrease readability and maintainability */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    49  FUNC(uint8, COM_CODE) Com_SendSignalGroupArray( Com_SignalGroupIdType SignalGroupId, const uint8 * SignalGroupArrayPtr )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    50  {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    51      Com_TxIpduConstPtrType        TxIpduConstPtr;        /* Local pointer to Tx IPdu             static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    52      Com_TxIpduRamPtrType          TxIpduRamPtr;          /* Local pointer to Tx IPdu             RAM    configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    53      Com_TxSigGrpConstPtrType      TxSigGrpConstPtr;      /* Local pointer to Tx SignalGroup      static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    54      Com_TxSigGrpArrayConstPtrType TxSigGrpArrayConstPtr; /* Local pointer to Tx SignalGroupArray static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    55      uint8                         ConstxSignalGrpFields;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    56      uint8                         returnValue_u8;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    57      #ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    58      uint8                         TransferProperty_u8; /* Variable to hold the transfer Property */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    59      #endif
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    60  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    61      returnValue_u8  =  COM_SERVICE_NOT_AVAILABLE;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    62  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    63      /*Call DET Function to check for the DET Error COM_E_UNINIT, COM_E_PARAM and COM_E_PARAM_POINTER*/
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    64  #if(COM_CONFIGURATION_USE_DET == STD_ON)
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    65      if (Com_Prv_DETCheck_Param_Ptr((SignalGroupId >= COM_GET_NUM_TX_SIGNALGRP),(SignalGroupArrayPtr == NULL_PTR),
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    66                                                                                  COMServiceId_SendSignalGroupArray))
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    67  #endif
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    68      {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    69          /* If PB variant is selected, then PduId which is passed to this function will be changed
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    70           * to internal Id which is generated through configuration
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    71           * If PC variant is selected, then no mapping table will be used. */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    72          SignalGroupId         = COM_GET_TXSIGNALGRP_ID( SignalGroupId );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    73          TxSigGrpConstPtr      = COM_GET_TXSIGGRP_CONSTDATA( SignalGroupId );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    74          ConstxSignalGrpFields = TxSigGrpConstPtr->txSignalGrpFields;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    75  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    76          /* Proceed only if Tx-SignalGroup is enabled with Array Access */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    77          if ( Com_GetValue(TXSIGGRP,_ARRAYACCESS,ConstxSignalGrpFields) )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    78          {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    79              Com_IpduIdType IpduId_ui;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    80              IpduId_ui    = TxSigGrpConstPtr->IpduRef;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    81              TxIpduRamPtr = &COM_GET_TXPDURAM_S( IpduId_ui );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    82              /* Proceed only if Large Data tranmission is not in Progress */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    83  #ifdef COM_TP_IPDUTYPE
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    84              if ( Com_GetRamValue(TXIPDU,_LARGEDATAINPROG, TxIpduRamPtr->Com_TxFlags) == COM_TRUE )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    85              {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    86                  returnValue_u8 = COM_BUSY;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    87              }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    88              else
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    89  #endif /*#ifdef COM_TP_IPDUTYPE*/
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    90              {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    91                  TxIpduConstPtr        = COM_GET_TX_IPDU_CONSTDATA( IpduId_ui );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    92                  TxSigGrpArrayConstPtr = COM_GET_TXSIGGRP_ARRAY_CONSTDATA( TxSigGrpConstPtr->SigGrpArray_Index );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    93                  SchM_Enter_Com_TxIpduProtArea(SENDSIGNALGRP);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    94                  /* The service Com_SendSignalGroupArray() shall copy the content designated by the SignalGroupArrayPtr
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    95                   * to the associated I-PDU Buffer */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    96                  Com_ByteCopy(
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    97                     ( P2VAR(uint8,AUTOMATIC,COM_APPL_DATA) )( TxIpduConstPtr->BuffPtr + TxSigGrpArrayConstPtr->FirstByteNo ),
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    98                   ( P2CONST(uint8,AUTOMATIC,COM_APPL_DATA) )( SignalGroupArrayPtr ),
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	    99                                              ( uint32  )( TxSigGrpArrayConstPtr->Length ) );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   100                  SchM_Exit_Com_TxIpduProtArea(SENDSIGNALGRP);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   101      #  ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   102                  TransferProperty_u8 = Com_GetValue(TXSIGGRP,_TP,ConstxSignalGrpFields);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   103                  if(COM_SIG_TP_IS_TRIGGERED_ON_CHANGE(TransferProperty_u8))
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   104                  {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   105                      /* Unpack & check, if any of the GroupSignal data has changed whose transfer property is
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   106                       * configured with TRIGGERED_ON_CHANGE/TRIGGERED_ON_CHANGE_WITHOUT_REPETIION */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   107                      Com_InternalSigGrpArrayTrigOnChange( SignalGroupId );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   108                  }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   109                  else
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   110                  {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   111                      /* Do-nothing */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   112                  }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   113      #  endif /* #  ifdef COM_EffectiveSigGrpTOC */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   114                  returnValue_u8 = Com_InternalSendSignalGroup( SignalGroupId );
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   115  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   116              }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   117          }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   118      }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   119     return returnValue_u8;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   120  }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   121  # define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   122  # include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   123  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   124  # ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   125  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   126  /**********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   127   * Function name : Com_InternalSigGrpArrayTrigOnChange
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   128   * Description   : Check if GroupSignal data has changed from the last update
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   129   * Parameters    : (IN) SignalGroupId - Tx SignalGroup Id
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   130   * Return Value  : None
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   131   *********************************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   132  LOCAL_INLINE FUNC(void, COM_CODE) Com_InternalSigGrpArrayTrigOnChange( Com_SignalGroupIdType SignalGroupId )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   133  {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   134      Com_TxIpduConstPtrType    TxIPduConstPtr;   /* Local pointer to Tx IPdu        static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   135      Com_TxSigGrpConstPtrType  TxSigGrpConstPtr; /* Local pointer to Tx SignalGroup static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   136      Com_TxGrpSigConstPtrType  TxGrpSigConstPtr; /* Local pointer to Tx GroupSignal static configuration */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   137      Com_TxSigGrpRamPtrType    TxSigGrpRamPtr;   /* Local pointer to Tx SignalGroup status structure     */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   138      Com_SigMaxType            TxNewVal_GrpSig;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   139      uint16_least              GrpSig_Index_ui;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   140      uint8                     ConstByteValue_u8;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   141      uint8                     GrpSigType_u8;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   142  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   143      TxSigGrpConstPtr = COM_GET_TXSIGGRP_CONSTDATA(SignalGroupId);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   144      TxSigGrpRamPtr   = &COM_GET_TXSIGGRPFLAG(SignalGroupId);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   145  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   146      TxIPduConstPtr   = COM_GET_TX_IPDU_CONSTDATA(TxSigGrpConstPtr->IpduRef);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   147  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   148      TxGrpSigConstPtr = COM_GET_TXGRPSIG_CONSTDATA(TxSigGrpConstPtr->FirstGrpSig_Index);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   149  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   150      for ( GrpSig_Index_ui = TxSigGrpConstPtr->No_Of_GrpSig; GrpSig_Index_ui != 0u; GrpSig_Index_ui-- )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   151      {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   152          ConstByteValue_u8 = TxGrpSigConstPtr->txGrpSigFields;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   153  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   154          GrpSigType_u8     = Com_GetValue(TXGRPSIG,_TYPE,ConstByteValue_u8);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   155  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   156          /* Check if the group signal contributes to evaluation of transfer property of signal group */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   157          if ( Com_GetValue(TXGRPSIG,_TP,ConstByteValue_u8) != COM_FALSE )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   158          {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   159              /* Unpack GroupSignal data from SignalGroup with ArrayAccess */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   160              TxNewVal_GrpSig = Com_UnpackSignal( Com_GetValue(TXGRPSIG,_ENDIANESS,ConstByteValue_u8),
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   161                                                  TxGrpSigConstPtr->Bit_Pos,
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   162                                                  TxGrpSigConstPtr->BitSize,
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   163                                                  TxIPduConstPtr->BuffPtr,
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   164                                                  ((GrpSigType_u8 & 0x01u) != 0x0u));
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   165  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   166              /* Check if GroupSignal data has changed */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   167              if ( COM_GET_OLDVALTRIGONCHANGE(TxGrpSigConstPtr->OldValue_Index) !=
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   168                                                                              (Com_OldValTrigOnChngType)TxNewVal_GrpSig )
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   169              {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   170                  /* Update the old value with the latest data */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   171                  COM_GET_OLDVALTRIGONCHANGE(TxGrpSigConstPtr->OldValue_Index) =
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   172                                                                               (Com_OldValTrigOnChngType)TxNewVal_GrpSig;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   173                  /* Set the global TRIGGERED_ON_CHANGE flag if SignalGroup data has changed */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   174                  Com_SetRamValue(TXSIGGRP,_TRIGONCHNG,TxSigGrpRamPtr->txSigGrpRAMFields,COM_TRUE);
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   175              }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   176              else
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   177              {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   178                  /* If GroupSignal data is unchanged, then it is not stored into Old_Value Buffer */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   179              }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   180          }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   181          else
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   182          {
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   183              /* GroupSignal configured with TRIGGERED_ON_CHANGE TP is not supported for Array(UINT8_N) and
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   184                 FLOAT64 Types */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   185          }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   186          TxGrpSigConstPtr++;
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   187      }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   188  }
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   189  # endif /* # ifdef COM_EffectiveSigGrpTOC */
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   190  
; BSW\src\BSW\Gen\Com\src\Com_SendSignalGroupArray.c	   191  #endif /* #if defined ( COM_TX_SIGNALGROUP_ARRAY ) */

	; Module end
