	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc3004a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_InvalidateSignalGroup.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_InvalidateSignalGroup.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_InvalidateSignalGroup.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	13345
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_InvalidateSignalGroup.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	151
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	168
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	151
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	151
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	261
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	151
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	151
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	151
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	151
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBits_u8u8u8_u8_Inl',0,3,1,179,3,20
	.word	151
	.byte	1,1,4
	.byte	'Data',0,1,179,3,56
	.word	151
	.byte	4
	.byte	'BitStartPn',0,1,179,3,68
	.word	151
	.byte	4
	.byte	'BitLn',0,1,179,3,86
	.word	151
	.byte	5,0,6
	.word	168
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	511
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	151
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	151
	.byte	5,0,6
	.word	261
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	597
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	151
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	151
	.byte	5,0,6
	.word	151
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	683
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	151
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	151
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	151
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	261
	.byte	5,0,8
	.word	190
	.byte	9
	.word	230
	.byte	9
	.word	244
	.byte	5,0,8
	.word	277
	.byte	9
	.word	317
	.byte	9
	.word	331
	.byte	5,0,8
	.word	348
	.byte	9
	.word	387
	.byte	9
	.word	401
	.byte	5,0,8
	.word	418
	.byte	9
	.word	460
	.byte	9
	.word	474
	.byte	9
	.word	494
	.byte	5,0,8
	.word	516
	.byte	9
	.word	551
	.byte	9
	.word	565
	.byte	9
	.word	580
	.byte	5,0,8
	.word	602
	.byte	9
	.word	637
	.byte	9
	.word	651
	.byte	9
	.word	666
	.byte	5,0,8
	.word	688
	.byte	9
	.word	722
	.byte	9
	.word	736
	.byte	9
	.word	751
	.byte	5,0,8
	.word	768
	.byte	9
	.word	813
	.byte	5,0,10,1,6
	.word	980
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	982
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	1005
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	151
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	168
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	261
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	1071
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	151
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	151
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	151
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	168
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	151
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	151
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	151
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	1172
	.byte	11
	.byte	'PduIdType',0,5,22,19
	.word	168
	.byte	11
	.byte	'PduLengthType',0,5,26,19
	.word	168
	.byte	14,6,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,6,118,3
	.word	1362
	.byte	11
	.byte	'Com_SignalIdType',0,7,100,16
	.word	168
	.byte	11
	.byte	'Com_SignalGroupIdType',0,7,102,16
	.word	168
	.byte	11
	.byte	'Com_IpduIdType',0,7,104,15
	.word	151
	.byte	11
	.byte	'Com_GrpSignalIdType',0,7,107,18
	.word	151
	.byte	11
	.byte	'Com_TxIntSignalIdType',0,8,138,3,18
	.word	151
	.byte	11
	.byte	'Com_RxIntSignalIdType',0,8,139,3,18
	.word	151
	.byte	11
	.byte	'Com_BitsizeType',0,8,155,3,17
	.word	151
	.byte	11
	.byte	'Com_BitpositionType',0,8,156,3,15
	.word	151
	.byte	11
	.byte	'Com_RxGwQueueIndexType',0,8,161,3,15
	.word	151
	.byte	11
	.byte	'Com_SigBuffIndexType',0,8,164,3,15
	.word	151
	.byte	11
	.byte	'Com_SigMaxType',0,8,198,3,16
	.word	261
	.byte	11
	.byte	'Com_MainFuncType',0,8,231,3,16
	.word	151
	.byte	11
	.byte	'Com_NumOfIpdusType',0,8,233,3,15
	.word	151
	.byte	11
	.byte	'Com_TimeBaseType',0,8,235,3,15
	.word	151
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	261
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	168
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	151
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	261
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1870
	.byte	16,68
	.word	261
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	1950
	.byte	68,2,35,0,0,16,68
	.word	1959
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1981
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	261
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	261
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2041
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2041
	.byte	18,1,1,6
	.word	2126
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2129
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	151
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2192
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	261
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	168
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	261
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	261
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	261
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	597
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	168
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	168
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2499
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2592
	.byte	20
	.byte	'void',0,6
	.word	2704
	.byte	21,1,1,22
	.word	151
	.byte	22
	.word	2710
	.byte	0,6
	.word	2715
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2729
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	261
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	261
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2041
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2041
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2041
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2041
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2764
	.byte	6
	.word	2764
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2962
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	151
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	261
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2764
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3041
	.byte	6
	.word	3041
	.byte	23
	.word	3102
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2134
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3107
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	261
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2041
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	151
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3112
	.byte	6
	.word	2126
	.byte	23
	.word	3112
	.byte	6
	.word	3271
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3276
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	261
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	261
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	261
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	261
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	261
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3384
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	261
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	261
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	261
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3448
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	151
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	1990
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2764
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	151
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3546
	.byte	16,68
	.word	1959
	.byte	17,0,0,6
	.word	3546
	.byte	23
	.word	3672
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3677
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2134
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3384
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3448
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3448
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	168
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	261
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2041
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	151
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	151
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3682
	.byte	23
	.word	3682
	.byte	6
	.word	3932
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	3937
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	3960
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3448
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4047
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4070
	.byte	6
	.word	4070
	.byte	23
	.word	4150
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4155
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3448
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4160
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	261
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4259
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	151
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	261
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4354
	.byte	26
	.word	151
	.byte	1,1,6
	.word	4440
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4447
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	261
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4483
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4511
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4530
	.byte	6
	.word	4530
	.byte	23
	.word	4608
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4613
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4452
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4259
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2710
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	151
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4618
	.byte	6
	.word	4440
	.byte	23
	.word	4618
	.byte	6
	.word	4770
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4775
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4801
	.byte	23
	.word	.L6-.L3
	.byte	6
	.word	5001
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5006
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5011
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4801
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	168
	.byte	2,2,35,12,0,6
	.word	5038
	.byte	23
	.word	5131
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5136
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4780
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	151
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	168
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	151
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	151
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	151
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5141
	.byte	23
	.word	5141
	.byte	6
	.word	5321
	.byte	23
	.word	4618
	.byte	6
	.word	5331
	.byte	27
	.word	2434
	.byte	27
	.word	3384
	.byte	27
	.word	3281
	.byte	27
	.word	3942
	.byte	27
	.word	3448
	.byte	27
	.word	151
	.byte	27
	.word	3942
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	1870
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5341
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5346
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5351
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5356
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5361
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	2967
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2764
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	151
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5366
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2041
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	151
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5371
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2041
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	151
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	151
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	151
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5376
	.byte	6
	.word	261
	.byte	23
	.word	3112
	.byte	6
	.word	5832
	.byte	23
	.word	3682
	.byte	6
	.word	5842
	.byte	6
	.word	2764
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	261
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	261
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	261
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	261
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	1990
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	151
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5857
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	261
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	151
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	261
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6134
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	151
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	151
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6270
	.byte	16,4
	.word	151
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6410
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6419
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	168
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6520
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	168
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6595
	.byte	23
	.word	6595
	.byte	6
	.word	6760
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6765
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6770
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6410
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6870
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	151
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	151
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2710
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2710
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	151
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7016
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7103
	.byte	6
	.word	7016
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7201
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	151
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	168
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2710
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2710
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7103
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7206
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	261
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	168
	.byte	16,128,8
	.word	151
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7444
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	261
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	168
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	151
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	151
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	151
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	151
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7635
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	151
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	151
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	151
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	151
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	151
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	168
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	151
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	151
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7976
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	168
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	151
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	261
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	168
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	151
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	151
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	151
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	151
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	151
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	151
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	151
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	151
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	151
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	151
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	151
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	151
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	151
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	151
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8208
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	168
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	151
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	151
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	151
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	151
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	151
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8712
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	151
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	151
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	151
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	151
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	151
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7455
	.byte	16,128,8
	.word	151
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7455
	.byte	11
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3942
	.byte	11
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	151
	.byte	11
	.byte	'Rte_EventType',0,14,186,1,32
	.word	261
	.byte	11
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	151
	.byte	6
	.word	151
	.byte	11
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	9634
	.byte	12,14,255,1,9,8,13
	.byte	'task',0
	.word	9530
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9639
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	9672
	.byte	23
	.word	3682
	.byte	6
	.word	9736
	.byte	6
	.word	151
	.byte	23
	.word	9672
	.byte	6
	.word	9751
	.byte	11
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9756
	.byte	11
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	168
	.byte	6
	.word	168
	.byte	11
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9821
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	151
	.byte	6
	.word	151
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9889
	.byte	12,14,163,2,9,24,13
	.byte	'counter',0
	.word	9826
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	151
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	9894
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9530
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9639
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	151
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	168
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9929
	.byte	6
	.word	168
	.byte	6
	.word	151
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	151
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	151
	.byte	12,14,182,2,9,4,13
	.byte	'pending',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	151
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	151
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	10147
	.byte	6
	.word	10147
	.byte	12,14,226,2,9,12,13
	.byte	'event_id',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10239
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	261
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	10244
	.byte	23
	.word	10244
	.byte	6
	.word	10333
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	10338
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	9672
	.byte	19
	.byte	'Rte_QTaskType',0,14,243,2,16,28,13
	.byte	'cmn',0
	.word	7206
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9530
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	10415
	.byte	19
	.byte	'Rte_QREType',0,14,250,2,16,28,13
	.byte	'cmn',0
	.word	7206
	.byte	24,2,35,0,13
	.byte	're',0
	.word	9761
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,14,253,2,3
	.word	10486
	.byte	23
	.word	9672
	.byte	6
	.word	10551
	.byte	19
	.byte	'Rte_QWWPType',0,14,129,3,16,28,13
	.byte	'cmn',0
	.word	7206
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10343
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	10561
	.byte	23
	.word	10244
	.byte	6
	.word	10629
	.byte	19
	.byte	'Rte_QEvType',0,14,136,3,16,36,13
	.byte	'cmn',0
	.word	7206
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9530
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	151
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9639
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	10639
	.byte	19
	.byte	'Rte_QMSIType',0,14,145,3,16,48,13
	.byte	'cmn',0
	.word	7206
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9530
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	151
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9639
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	9826
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	9894
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	168
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10734
	.byte	12,15,52,9,1,28
	.byte	'isEventTrig',0,1
	.word	151
	.byte	1,7,2,35,0,28
	.byte	'isTriggerIpduSendWithMetadata',0,1
	.word	151
	.byte	1,6,2,35,0,28
	.byte	'isGwIpduSend',0,1
	.word	151
	.byte	1,5,2,35,0,28
	.byte	'isModeChangd',0,1
	.word	151
	.byte	1,4,2,35,0,28
	.byte	'sigTransProp',0,1
	.word	151
	.byte	1,3,2,35,0,28
	.byte	'isTimeoutReq',0,1
	.word	151
	.byte	1,2,2,35,0,28
	.byte	'ignoreRepetitions',0,1
	.word	151
	.byte	1,1,2,35,0,0,11
	.byte	'Com_SendIpduInfo',0,15,61,3
	.word	10889
	.byte	12,15,76,9,8,13
	.byte	'TimePeriodFact',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'TimeOffsetFact',0
	.word	168
	.byte	2,2,35,2,13
	.byte	'RepetitionPeriodFact',0
	.word	168
	.byte	2,2,35,4,13
	.byte	'NumOfRepetitions',0
	.word	151
	.byte	1,2,35,6,13
	.byte	'Mode',0
	.word	151
	.byte	1,2,35,7,0,11
	.byte	'Com_TransModeInfo',0,15,93,2
	.word	11109
	.byte	23
	.word	11109
	.byte	6
	.word	11259
	.byte	11
	.byte	'Com_TMConstPtrType',0,15,103,65
	.word	11264
	.byte	12,15,136,1,9,12,13
	.byte	'Init_Val',0
	.word	261
	.byte	4,2,35,0,13
	.byte	'txSignalFields',0
	.word	168
	.byte	2,2,35,4,13
	.byte	'Bit_Pos',0
	.word	151
	.byte	1,2,35,6,13
	.byte	'BitSize',0
	.word	151
	.byte	1,2,35,7,13
	.byte	'IpduRef',0
	.word	151
	.byte	1,2,35,8,13
	.byte	'General',0
	.word	151
	.byte	1,2,35,9,0,11
	.byte	'Com_Prv_xTxSigCfg_tst',0,15,201,1,2
	.word	11296
	.byte	12,15,247,1,9,16,13
	.byte	'Notification_Cbk',0
	.word	2129
	.byte	4,2,35,0,13
	.byte	'Init_Val',0
	.word	261
	.byte	4,2,35,4,13
	.byte	'Bit_Pos',0
	.word	151
	.byte	1,2,35,8,13
	.byte	'SigBuff_Index',0
	.word	151
	.byte	1,2,35,9,13
	.byte	'BitSize',0
	.word	151
	.byte	1,2,35,10,13
	.byte	'IpduRef',0
	.word	151
	.byte	1,2,35,11,13
	.byte	'General',0
	.word	151
	.byte	1,2,35,12,13
	.byte	'rxSignalFields',0
	.word	151
	.byte	1,2,35,13,0,11
	.byte	'Com_Prv_xRxSigCfg_tst',0,15,171,2,2
	.word	11444
	.byte	23
	.word	11444
	.byte	6
	.word	11641
	.byte	11
	.byte	'Com_RxSigConstPtrType',0,15,180,2,68
	.word	11646
	.byte	12,15,211,5,9,24,13
	.byte	'BuffPtr',0
	.word	683
	.byte	4,2,35,0,13
	.byte	'Com_TMConstPtr',0
	.word	11264
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'Timeout_Fact',0
	.word	168
	.byte	2,2,35,10,13
	.byte	'Min_Delay_Time_Fact',0
	.word	168
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	168
	.byte	2,2,35,14,13
	.byte	'PdurId',0
	.word	168
	.byte	2,2,35,16,13
	.byte	'TxSigId_Index',0
	.word	151
	.byte	1,2,35,18,13
	.byte	'txIPduFields',0
	.word	168
	.byte	2,2,35,20,13
	.byte	'MainFunctionRef',0
	.word	151
	.byte	1,2,35,22,13
	.byte	'PaddingByte',0
	.word	151
	.byte	1,2,35,23,0,11
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,15,162,6,3
	.word	11682
	.byte	23
	.word	11682
	.byte	6
	.word	11961
	.byte	11
	.byte	'Com_TxIpduConstPtrType',0,15,171,6,72
	.word	11966
	.byte	12,15,137,7,9,20,13
	.byte	'BuffPtr',0
	.word	683
	.byte	4,2,35,0,13
	.byte	'TimeOutNotification_Cbk',0
	.word	2129
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'FirstTimeout_Factor',0
	.word	168
	.byte	2,2,35,10,13
	.byte	'Timeout_Fact',0
	.word	168
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	168
	.byte	2,2,35,14,13
	.byte	'RxSigId_Index',0
	.word	151
	.byte	1,2,35,16,13
	.byte	'MainFunctionRef',0
	.word	151
	.byte	1,2,35,17,13
	.byte	'rxIPduFields',0
	.word	151
	.byte	1,2,35,18,0,11
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,15,197,7,3
	.word	12003
	.byte	12,15,219,7,9,4,13
	.byte	'FirstIpdu_Index',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'NoOfRxPdus',0
	.word	168
	.byte	2,2,35,2,0,11
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,15,224,7,3
	.word	12254
	.byte	12,15,244,7,9,1,13
	.byte	'txSigRAMFields',0
	.word	151
	.byte	1,2,35,0,0,11
	.byte	'Com_TxSignalFlagType',0,15,248,7,2
	.word	12343
	.byte	12,15,167,8,9,1,13
	.byte	'rxSigRAMFields',0
	.word	151
	.byte	1,2,35,0,0,11
	.byte	'Com_RxSignalFlagType',0,15,171,8,2
	.word	12404
	.byte	12,15,135,9,9,16,13
	.byte	'CurrentTxModePtr',0
	.word	11269
	.byte	4,2,35,0,13
	.byte	'Com_MinDelayTick',0
	.word	168
	.byte	2,2,35,4,13
	.byte	'Com_Tick_Tx',0
	.word	168
	.byte	2,2,35,6,13
	.byte	'Com_n_Tick_Tx',0
	.word	168
	.byte	2,2,35,8,13
	.byte	'Com_TickTxTimeout',0
	.word	168
	.byte	2,2,35,10,13
	.byte	'Com_TxFlags',0
	.word	168
	.byte	2,2,35,12,13
	.byte	'Com_n',0
	.word	151
	.byte	1,2,35,14,13
	.byte	'Com_TransMode',0
	.word	151
	.byte	1,2,35,15,0,11
	.byte	'Com_TxIpduRamData',0,15,189,9,3
	.word	12465
	.byte	23
	.word	11109
	.byte	6
	.word	12681
	.byte	6
	.word	12465
	.byte	11
	.byte	'Com_TxIpduRamPtrType',0,15,198,9,62
	.word	12691
	.byte	12,15,218,9,9,6,13
	.byte	'RxIPduLength',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'RxTicks_u16',0
	.word	168
	.byte	2,2,35,2,13
	.byte	'RxFlags',0
	.word	151
	.byte	1,2,35,4,0,11
	.byte	'Com_RxIpduRamData',0,15,245,9,2
	.word	12726
	.byte	6
	.word	168
	.byte	12,15,128,10,9,8,13
	.byte	'RxGwQueuePtr',0
	.word	12820
	.byte	4,2,35,0,13
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	151
	.byte	1,2,35,4,13
	.byte	'Com_RxGwQueueRead_ux',0
	.word	151
	.byte	1,2,35,5,0,11
	.byte	'Com_RxGwQueueRAMType',0,15,133,10,2
	.word	12825
	.byte	12,15,138,10,9,4,13
	.byte	'indexGwMapSigDestIdArray',0
	.word	168
	.byte	2,2,35,0,13
	.byte	'destCount',0
	.word	151
	.byte	1,2,35,2,0,11
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,15,142,10,2
	.word	12945
	.byte	12,15,147,10,9,2,13
	.byte	'GwMap_DestId',0
	.word	168
	.byte	2,2,35,0,0,11
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,15,150,10,2
	.word	13039
	.byte	12,15,183,10,9,4,13
	.byte	'StartIPduId',0
	.word	151
	.byte	1,2,35,0,13
	.byte	'NumOfIpdus',0
	.word	151
	.byte	1,2,35,1,13
	.byte	'TimeBaseInMs',0
	.word	151
	.byte	1,2,35,2,0,11
	.byte	'Com_MainFunctionCfgType',0,15,188,10,3
	.word	13104
	.byte	12,15,194,10,9,12,13
	.byte	'Com_SigType_pu8',0
	.word	683
	.byte	4,2,35,0,13
	.byte	'Com_SigType_pu16',0
	.word	511
	.byte	4,2,35,4,13
	.byte	'Com_SigType_pu32',0
	.word	597
	.byte	4,2,35,8,0,11
	.byte	'Com_Prv_xRxRamBuf_tst',0,15,253,10,3
	.word	13207
	.byte	11
	.byte	'rba_BswSrv_uint64',0,16,66,28
	.word	1071
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0
	.byte	54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0
	.byte	73,19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	26,21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_InvalidateSignalGroup.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     3  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     4  /* Preprocessor includes                                                                          */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     5  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     6  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     7  #include "Com_Prv_Inl.h"
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     8  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	     9  /* Global functions (declared in header files )                                                   */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    10  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    11  /***************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    12   Function name    : Com_InvalidateSignalGroup
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    13   Syntax           : uint8 Com_InvalidateSignalGroup(Com_SignalGroupIdType   SignalGroupId)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    14   Description      : Service for Invalidating the Signal Group
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    15   Parameter        : SignalGroupId -> Id of the Signal Group
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    16   Return value     : E_OK/COM_SERVICE_NOT_AVAILABLE
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    17  ***************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    18  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    19  #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    20  #define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    21  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    22  FUNC(uint8, COM_CODE) Com_InvalidateSignalGroup(VAR(Com_SignalGroupIdType, AUTOMATIC) SignalGroupId)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    23  {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    24  #ifdef COM_TxGrpSigInvalid
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    25      Com_TxSigGrpConstPtrType     TxSigGrpConstPtr; /* Local pointer to Tx SignalGroup static configuration */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    26      Com_TxGrpSigConstPtrType     TxGrpSigConstPtr; /* Local pointer to Tx GroupSignal static configuration */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    27      Com_TxIpduRamPtrType         TxIpduRamPtr;     /* Local pointer to Tx IPdu        static configuration */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    28      VAR(uint16_least, AUTOMATIC) Index_ui;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    29      /* Local variable to store the no. of group signals for a signal group */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    30      VAR(uint16_least, AUTOMATIC) No_Of_GrpSig_ui;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    31      /* Status of InvalidValue is configured for any of the GroupSignal or not  */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    32      VAR(uint8, AUTOMATIC)        InvalidValueFound;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    33      VAR(uint8, AUTOMATIC)        Status;           /* return status */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    34  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    35      /* Initialize status variable */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    36      InvalidValueFound = COM_ZERO;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    37      Status = COM_SERVICE_NOT_AVAILABLE;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    38  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    39  #if(COM_CONFIGURATION_USE_DET == STD_ON)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    40      if(Com_Prv_DETCheck_Param((SignalGroupId >= COM_GET_NUM_TX_SIGNALGRP), COMServiceId_InvalidateSignalGroup))
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    41  #endif
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    42      {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    43          /* If PB variant is selected, then PduId which is passed to this function will be changed
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    44           * to internal Id which is generated through configuration
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    45           * If PC variant is selected, then no mapping table will be used. */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    46  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    47          SignalGroupId = COM_GET_TXSIGNALGRP_ID(SignalGroupId);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    48  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    49          /* check if the IpduGroup is started
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    50           * If the IPdu group is stopped the call to the function shall still update the values
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    51           * in the COM internal buff-ers but the COM_SERVICE_NOT_AVAILABLE is returned */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    52         /* For Each Group signal of this Signal Group perform the Invalidate shadow signal */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    53  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    54          TxSigGrpConstPtr = COM_GET_TXSIGGRP_CONSTDATA(SignalGroupId);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    55  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    56          TxGrpSigConstPtr = COM_GET_TXGRPSIG_CONSTDATA(TxSigGrpConstPtr->FirstGrpSig_Index);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    57  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    58          TxIpduRamPtr     = &COM_GET_TXPDURAM_S( TxSigGrpConstPtr->IpduRef );
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    59  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    60          No_Of_GrpSig_ui  = (uint32)TxSigGrpConstPtr->FirstGrpSig_Index + (uint32)TxSigGrpConstPtr->No_Of_GrpSig;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    61          for(Index_ui = (uint16_least)TxSigGrpConstPtr->FirstGrpSig_Index; Index_ui < No_Of_GrpSig_ui; Index_ui++)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    62          {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    63              /*Note: Uint8[n] check is done in Com_InvalidateShadowSignal() so no need of Checking here*/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    64              /* Call to  Com_InternalInvalidateShadowSignal( ) has to be done to invalidate the signal,
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    65               * with the signal Id */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    66  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    67              if (Com_GetValue(TXGRPSIG,_INVACTION,TxGrpSigConstPtr->txGrpSigFields))
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    68              {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    69                  Com_InternalInvalidateShadowSignal((Com_SignalIdType)Index_ui);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    70                  /* Set the flag indicating ComSignalDataInvalidValue is configured for any of the group signals
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    71                   * in SignalGroup */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    72                  InvalidValueFound = COM_ONE;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    73              }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    74              TxGrpSigConstPtr++;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    75          }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    76          /* Check if ComSignalDataInvalidValue is configured for any of the group signals in SignalGroup */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    77          if (InvalidValueFound != COM_ZERO)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    78          {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    79  #ifdef COM_TP_IPDUTYPE
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    80              /* Proceed only if Large Data tranmission is not in Progress */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    81              if(Com_GetRamValue(TXIPDU,_LARGEDATAINPROG,TxIpduRamPtr->Com_TxFlags) == COM_TRUE)
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    82              {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    83                  Status = COM_BUSY;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    84  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    85              }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    86              else
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    87  #endif /*#ifdef COM_TP_IPDUTYPE*/
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    88              {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    89                  /* SWS_Com_00645: Com_SendSignalGroup() is performed internally. As per design
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    90                  * Com_InternalSendSignalGroup() is called. */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    91                  Status = Com_InternalSendSignalGroup(SignalGroupId);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    92              }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    93          }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    94          else
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    95          {
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    96              /* Return COM_SERVICE_NOT_AVAILABLE if no ComSignalDataInvalidValue is configured for any of the
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    97               * group signals */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    98          }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	    99      }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   100      /* Note: if IPdu Group is stopped, then the Com_InternalSendSignal( ) will return COM_SERVICE_NOT_AVAILABLE */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   101      return (Status);
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   102  #else
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   103      (void)SignalGroupId;
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   104      return( COM_SERVICE_NOT_AVAILABLE );
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   105  #endif /* #ifdef COM_TxGrpSigInvalid */
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   106  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   107  }
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   108  #define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   109  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   110  #endif
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   111  
; BSW\src\BSW\Gen\Com\src\Com_InvalidateSignalGroup.c	   112  

	; Module end
