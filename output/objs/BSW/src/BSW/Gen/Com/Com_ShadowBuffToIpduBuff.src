	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc13372a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_ShadowBuffToIpduBuff.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_ShadowBuffToIpduBuff.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ShadowBuffToIpduBuff.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	12867
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ShadowBuffToIpduBuff.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	167
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	150
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	260
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	150
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	150
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	150
	.byte	5,0,6
	.word	167
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	417
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	150
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	150
	.byte	5,0,6
	.word	260
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	503
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	150
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	150
	.byte	5,0,6
	.word	150
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	589
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	150
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	150
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	150
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	260
	.byte	5,0,8
	.word	189
	.byte	9
	.word	229
	.byte	9
	.word	243
	.byte	5,0,8
	.word	276
	.byte	9
	.word	316
	.byte	9
	.word	330
	.byte	5,0,8
	.word	347
	.byte	9
	.word	386
	.byte	9
	.word	400
	.byte	5,0,8
	.word	422
	.byte	9
	.word	457
	.byte	9
	.word	471
	.byte	9
	.word	486
	.byte	5,0,8
	.word	508
	.byte	9
	.word	543
	.byte	9
	.word	557
	.byte	9
	.word	572
	.byte	5,0,8
	.word	594
	.byte	9
	.word	628
	.byte	9
	.word	642
	.byte	9
	.word	657
	.byte	5,0,8
	.word	674
	.byte	9
	.word	719
	.byte	5,0,10,1,6
	.word	864
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	866
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	889
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	150
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	167
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	260
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	955
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	150
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	150
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	150
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	150
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	150
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	1056
	.byte	11
	.byte	'PduIdType',0,5,22,19
	.word	167
	.byte	11
	.byte	'PduLengthType',0,5,26,19
	.word	167
	.byte	14,6,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,6,118,3
	.word	1246
	.byte	11
	.byte	'Com_SignalIdType',0,7,100,16
	.word	167
	.byte	11
	.byte	'Com_SignalGroupIdType',0,7,102,16
	.word	167
	.byte	11
	.byte	'Com_IpduIdType',0,7,104,15
	.word	150
	.byte	11
	.byte	'Com_GrpSignalIdType',0,7,107,18
	.word	150
	.byte	11
	.byte	'Com_TxIntSignalIdType',0,8,138,3,18
	.word	150
	.byte	11
	.byte	'Com_RxIntSignalIdType',0,8,139,3,18
	.word	150
	.byte	11
	.byte	'Com_BitsizeType',0,8,155,3,17
	.word	150
	.byte	11
	.byte	'Com_BitpositionType',0,8,156,3,15
	.word	150
	.byte	11
	.byte	'Com_RxGwQueueIndexType',0,8,161,3,15
	.word	150
	.byte	11
	.byte	'Com_SigBuffIndexType',0,8,164,3,15
	.word	150
	.byte	11
	.byte	'Com_MainFuncType',0,8,231,3,16
	.word	150
	.byte	11
	.byte	'Com_NumOfIpdusType',0,8,233,3,15
	.word	150
	.byte	11
	.byte	'Com_TimeBaseType',0,8,235,3,15
	.word	150
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	260
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	167
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1730
	.byte	16,68
	.word	260
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	1810
	.byte	68,2,35,0,0,16,68
	.word	1819
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1841
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	260
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	1901
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	1901
	.byte	18,1,1,6
	.word	1986
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	1989
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	150
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2052
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	260
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	167
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	260
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	260
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	260
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	503
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	167
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	167
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2359
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2452
	.byte	20
	.byte	'void',0,6
	.word	2564
	.byte	21,1,1,22
	.word	150
	.byte	22
	.word	2570
	.byte	0,6
	.word	2575
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2589
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	260
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	1901
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	1901
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	1901
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	1901
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2624
	.byte	6
	.word	2624
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2822
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	150
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	260
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2624
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	2901
	.byte	6
	.word	2901
	.byte	23
	.word	2962
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	1994
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	2967
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	1901
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	2972
	.byte	6
	.word	1986
	.byte	23
	.word	2972
	.byte	6
	.word	3131
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3136
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	260
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	260
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	260
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	260
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	260
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3244
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	260
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	260
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	260
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3308
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	150
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	1850
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2624
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3406
	.byte	16,68
	.word	1819
	.byte	17,0,0,6
	.word	3406
	.byte	23
	.word	3532
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3537
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	1994
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3244
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3308
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3308
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	167
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	260
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	1901
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	150
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3542
	.byte	23
	.word	3542
	.byte	6
	.word	3792
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	3797
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	3820
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3308
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	3907
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	3930
	.byte	6
	.word	3930
	.byte	23
	.word	4010
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4015
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3308
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4020
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	260
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4119
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4214
	.byte	26
	.word	150
	.byte	1,1,6
	.word	4300
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4307
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	260
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4343
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4371
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4390
	.byte	6
	.word	4390
	.byte	23
	.word	4468
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4473
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4312
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4119
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2570
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4478
	.byte	6
	.word	4300
	.byte	23
	.word	4478
	.byte	6
	.word	4630
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4635
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4661
	.byte	23
	.word	.L6-.L3
	.byte	6
	.word	4861
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	4866
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	4871
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4661
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	167
	.byte	2,2,35,12,0,6
	.word	4898
	.byte	23
	.word	4991
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	4996
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4640
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	150
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	150
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5001
	.byte	23
	.word	5001
	.byte	6
	.word	5181
	.byte	23
	.word	4478
	.byte	6
	.word	5191
	.byte	27
	.word	2294
	.byte	27
	.word	3244
	.byte	27
	.word	3141
	.byte	27
	.word	3802
	.byte	27
	.word	3308
	.byte	27
	.word	150
	.byte	27
	.word	3802
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	1730
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5201
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5206
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5211
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5216
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5221
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	2827
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2624
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	150
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5226
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	1901
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	150
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5231
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	1901
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	150
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	150
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	150
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5236
	.byte	6
	.word	260
	.byte	23
	.word	2972
	.byte	6
	.word	5692
	.byte	23
	.word	3542
	.byte	6
	.word	5702
	.byte	6
	.word	2624
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	260
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	260
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	260
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	260
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	1850
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	150
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5717
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	260
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	260
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5994
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	150
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6130
	.byte	16,4
	.word	150
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6270
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6279
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	167
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6380
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	167
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6455
	.byte	23
	.word	6455
	.byte	6
	.word	6620
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6625
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6630
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6270
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6730
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	150
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	150
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2570
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2570
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	150
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6876
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6963
	.byte	6
	.word	6876
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7061
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	167
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2570
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2570
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	6963
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7066
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	260
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	167
	.byte	16,128,8
	.word	150
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7304
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	260
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	167
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	150
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	150
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	150
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	150
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7495
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	150
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	150
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	150
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	150
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	150
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	167
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	150
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7836
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	167
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	150
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	260
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	167
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	150
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	150
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	150
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	150
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	150
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	150
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	150
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	150
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	150
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	150
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	150
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8068
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	150
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	150
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	150
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8572
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	150
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	150
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	150
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7315
	.byte	16,128,8
	.word	150
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7315
	.byte	11
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3802
	.byte	11
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	150
	.byte	11
	.byte	'Rte_EventType',0,14,186,1,32
	.word	260
	.byte	11
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	150
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	9494
	.byte	12,14,255,1,9,8,13
	.byte	'task',0
	.word	9390
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9499
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	9532
	.byte	23
	.word	3542
	.byte	6
	.word	9596
	.byte	6
	.word	150
	.byte	23
	.word	9532
	.byte	6
	.word	9611
	.byte	11
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9616
	.byte	11
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	167
	.byte	6
	.word	167
	.byte	11
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9681
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	150
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9749
	.byte	12,14,163,2,9,24,13
	.byte	'counter',0
	.word	9686
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	9754
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9390
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9499
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	150
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	167
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9789
	.byte	6
	.word	167
	.byte	6
	.word	150
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	150
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	150
	.byte	12,14,182,2,9,4,13
	.byte	'pending',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	10007
	.byte	6
	.word	10007
	.byte	12,14,226,2,9,12,13
	.byte	'event_id',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10099
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	260
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	10104
	.byte	23
	.word	10104
	.byte	6
	.word	10193
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	10198
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	9532
	.byte	19
	.byte	'Rte_QTaskType',0,14,243,2,16,28,13
	.byte	'cmn',0
	.word	7066
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9390
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	10275
	.byte	19
	.byte	'Rte_QREType',0,14,250,2,16,28,13
	.byte	'cmn',0
	.word	7066
	.byte	24,2,35,0,13
	.byte	're',0
	.word	9621
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,14,253,2,3
	.word	10346
	.byte	23
	.word	9532
	.byte	6
	.word	10411
	.byte	19
	.byte	'Rte_QWWPType',0,14,129,3,16,28,13
	.byte	'cmn',0
	.word	7066
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10203
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	10421
	.byte	23
	.word	10104
	.byte	6
	.word	10489
	.byte	19
	.byte	'Rte_QEvType',0,14,136,3,16,36,13
	.byte	'cmn',0
	.word	7066
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9390
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9499
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	10499
	.byte	19
	.byte	'Rte_QMSIType',0,14,145,3,16,48,13
	.byte	'cmn',0
	.word	7066
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9390
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	150
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9499
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	9686
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	9754
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	167
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10594
	.byte	12,15,76,9,8,13
	.byte	'TimePeriodFact',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'TimeOffsetFact',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RepetitionPeriodFact',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'NumOfRepetitions',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'Mode',0
	.word	150
	.byte	1,2,35,7,0,11
	.byte	'Com_TransModeInfo',0,15,93,2
	.word	10749
	.byte	23
	.word	10749
	.byte	6
	.word	10899
	.byte	11
	.byte	'Com_TMConstPtrType',0,15,103,65
	.word	10904
	.byte	12,15,136,1,9,12,13
	.byte	'Init_Val',0
	.word	260
	.byte	4,2,35,0,13
	.byte	'txSignalFields',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'Bit_Pos',0
	.word	150
	.byte	1,2,35,6,13
	.byte	'BitSize',0
	.word	150
	.byte	1,2,35,7,13
	.byte	'IpduRef',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'General',0
	.word	150
	.byte	1,2,35,9,0,11
	.byte	'Com_Prv_xTxSigCfg_tst',0,15,201,1,2
	.word	10936
	.byte	12,15,247,1,9,16,13
	.byte	'Notification_Cbk',0
	.word	1989
	.byte	4,2,35,0,13
	.byte	'Init_Val',0
	.word	260
	.byte	4,2,35,4,13
	.byte	'Bit_Pos',0
	.word	150
	.byte	1,2,35,8,13
	.byte	'SigBuff_Index',0
	.word	150
	.byte	1,2,35,9,13
	.byte	'BitSize',0
	.word	150
	.byte	1,2,35,10,13
	.byte	'IpduRef',0
	.word	150
	.byte	1,2,35,11,13
	.byte	'General',0
	.word	150
	.byte	1,2,35,12,13
	.byte	'rxSignalFields',0
	.word	150
	.byte	1,2,35,13,0,11
	.byte	'Com_Prv_xRxSigCfg_tst',0,15,171,2,2
	.word	11084
	.byte	12,15,211,5,9,24,13
	.byte	'BuffPtr',0
	.word	589
	.byte	4,2,35,0,13
	.byte	'Com_TMConstPtr',0
	.word	10904
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'Timeout_Fact',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Min_Delay_Time_Fact',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	167
	.byte	2,2,35,14,13
	.byte	'PdurId',0
	.word	167
	.byte	2,2,35,16,13
	.byte	'TxSigId_Index',0
	.word	150
	.byte	1,2,35,18,13
	.byte	'txIPduFields',0
	.word	167
	.byte	2,2,35,20,13
	.byte	'MainFunctionRef',0
	.word	150
	.byte	1,2,35,22,13
	.byte	'PaddingByte',0
	.word	150
	.byte	1,2,35,23,0,11
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,15,162,6,3
	.word	11281
	.byte	12,15,137,7,9,20,13
	.byte	'BuffPtr',0
	.word	589
	.byte	4,2,35,0,13
	.byte	'TimeOutNotification_Cbk',0
	.word	1989
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'FirstTimeout_Factor',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Timeout_Fact',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	167
	.byte	2,2,35,14,13
	.byte	'RxSigId_Index',0
	.word	150
	.byte	1,2,35,16,13
	.byte	'MainFunctionRef',0
	.word	150
	.byte	1,2,35,17,13
	.byte	'rxIPduFields',0
	.word	150
	.byte	1,2,35,18,0,11
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,15,197,7,3
	.word	11560
	.byte	12,15,219,7,9,4,13
	.byte	'FirstIpdu_Index',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'NoOfRxPdus',0
	.word	167
	.byte	2,2,35,2,0,11
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,15,224,7,3
	.word	11811
	.byte	12,15,244,7,9,1,13
	.byte	'txSigRAMFields',0
	.word	150
	.byte	1,2,35,0,0,11
	.byte	'Com_TxSignalFlagType',0,15,248,7,2
	.word	11900
	.byte	12,15,167,8,9,1,13
	.byte	'rxSigRAMFields',0
	.word	150
	.byte	1,2,35,0,0,11
	.byte	'Com_RxSignalFlagType',0,15,171,8,2
	.word	11961
	.byte	12,15,135,9,9,16,13
	.byte	'CurrentTxModePtr',0
	.word	10909
	.byte	4,2,35,0,13
	.byte	'Com_MinDelayTick',0
	.word	167
	.byte	2,2,35,4,13
	.byte	'Com_Tick_Tx',0
	.word	167
	.byte	2,2,35,6,13
	.byte	'Com_n_Tick_Tx',0
	.word	167
	.byte	2,2,35,8,13
	.byte	'Com_TickTxTimeout',0
	.word	167
	.byte	2,2,35,10,13
	.byte	'Com_TxFlags',0
	.word	167
	.byte	2,2,35,12,13
	.byte	'Com_n',0
	.word	150
	.byte	1,2,35,14,13
	.byte	'Com_TransMode',0
	.word	150
	.byte	1,2,35,15,0,11
	.byte	'Com_TxIpduRamData',0,15,189,9,3
	.word	12022
	.byte	23
	.word	10749
	.byte	6
	.word	12238
	.byte	12,15,218,9,9,6,13
	.byte	'RxIPduLength',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'RxTicks_u16',0
	.word	167
	.byte	2,2,35,2,13
	.byte	'RxFlags',0
	.word	150
	.byte	1,2,35,4,0,11
	.byte	'Com_RxIpduRamData',0,15,245,9,2
	.word	12248
	.byte	6
	.word	167
	.byte	12,15,128,10,9,8,13
	.byte	'RxGwQueuePtr',0
	.word	12342
	.byte	4,2,35,0,13
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	150
	.byte	1,2,35,4,13
	.byte	'Com_RxGwQueueRead_ux',0
	.word	150
	.byte	1,2,35,5,0,11
	.byte	'Com_RxGwQueueRAMType',0,15,133,10,2
	.word	12347
	.byte	12,15,138,10,9,4,13
	.byte	'indexGwMapSigDestIdArray',0
	.word	167
	.byte	2,2,35,0,13
	.byte	'destCount',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,15,142,10,2
	.word	12467
	.byte	12,15,147,10,9,2,13
	.byte	'GwMap_DestId',0
	.word	167
	.byte	2,2,35,0,0,11
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,15,150,10,2
	.word	12561
	.byte	12,15,183,10,9,4,13
	.byte	'StartIPduId',0
	.word	150
	.byte	1,2,35,0,13
	.byte	'NumOfIpdus',0
	.word	150
	.byte	1,2,35,1,13
	.byte	'TimeBaseInMs',0
	.word	150
	.byte	1,2,35,2,0,11
	.byte	'Com_MainFunctionCfgType',0,15,188,10,3
	.word	12626
	.byte	12,15,194,10,9,12,13
	.byte	'Com_SigType_pu8',0
	.word	589
	.byte	4,2,35,0,13
	.byte	'Com_SigType_pu16',0
	.word	417
	.byte	4,2,35,4,13
	.byte	'Com_SigType_pu32',0
	.word	503
	.byte	4,2,35,8,0,11
	.byte	'Com_Prv_xRxRamBuf_tst',0,15,253,10,3
	.word	12729
	.byte	11
	.byte	'rba_BswSrv_uint64',0,16,66,28
	.word	955
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0
	.byte	54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0
	.byte	73,19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	26,21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ShadowBuffToIpduBuff.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     3  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     4  /* Preprocessor includes                                                                          */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     5  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     6  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     7  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     8  /* Global functions (declared in header files )                                                   */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	     9  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    10  /***************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    11   Function name    : Com_ShadowBuffToIpduBuff
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    12   Syntax           : void Com_ShadowBuffToIpduBuff(Com_SignalGroupIdType SignalGrpId)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    13   Description      : Internal function used for copying the Signal Group data from the shadow buffer to IPDU buffer
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    14   Parameter        : SignalGrpId -> Id of the SignalGroup
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    15   Return value     : None
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    16   ***************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    17  #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    18  #define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    19  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    20  FUNC(void, COM_CODE) Com_ShadowBuffToIpduBuff(VAR(Com_SignalGroupIdType, AUTOMATIC) SignalGrpId)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    21  {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    22  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    23      Com_TxIpduConstPtrType              TxIPduConstPtr;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    24      Com_TxGrpSigConstPtrType            TxGrpSigConstPtr;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    25      Com_TxSigGrpConstPtrType            TxSigGrpConstPtr;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    26      VAR(Com_SigMaxType,AUTOMATIC)       TxGrpSig_NewVal;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    27      VAR(uint16_least, AUTOMATIC)        index_ui;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    28      VAR(uint8, AUTOMATIC)               SigType_u8;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    29      VAR(uint8, AUTOMATIC)               ConstByteValue_u8;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    30      VAR(Com_MainFuncType,AUTOMATIC)     txMainFuncId; /* Fetch the Tx-MainFunction internal Id */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    31  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    32      TxSigGrpConstPtr = COM_GET_TXSIGGRP_CONSTDATA(SignalGrpId);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    33  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    34      TxGrpSigConstPtr = COM_GET_TXGRPSIG_CONSTDATA(TxSigGrpConstPtr ->FirstGrpSig_Index);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    35  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    36      TxIPduConstPtr   = COM_GET_TX_IPDU_CONSTDATA(TxSigGrpConstPtr->IpduRef);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    37  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    38      txMainFuncId     = TxIPduConstPtr->MainFunctionRef;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    39  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    40      /*To avoid misra warning*/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    41      TxGrpSig_NewVal  = 0;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    42  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    43      for (index_ui = TxSigGrpConstPtr->No_Of_GrpSig; index_ui != 0u; index_ui--)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    44      {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    45          ConstByteValue_u8 = TxGrpSigConstPtr->txGrpSigFields;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    46  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    47          SigType_u8 = Com_GetValue(TXGRPSIG,_TYPE,ConstByteValue_u8);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    48          if(SigType_u8 != (uint8)COM_UINT8_N)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    49          {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    50              VAR(uint8, AUTOMATIC) SigEndianess;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    51  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    52              SigEndianess = Com_GetValue(TXGRPSIG,_ENDIANESS,ConstByteValue_u8);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    53  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    54              /* Now copy the bytes to shadow buffer */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    55              /* Size of the shadow buffer */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    56              switch(SigType_u8 >> 1u)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    57              {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    58              case 0x00u: /* UINT8, SINT8 signal */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    59              case 0x03u: /* Boolean Signal      */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    60                  TxGrpSig_NewVal = COM_GET_TXGRPSIGTYPEU8_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    61                  break;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    62  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    63              case 0x01u:
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    64                  /* UINT16 signal */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    65                  TxGrpSig_NewVal = COM_GET_TXGRPSIGTYPEU16_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    66                  break;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    67  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    68              case 0x02u:
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    69                  /* UINT32 signal */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    70                  /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    71              case (COM_FLOAT32 >> 1u):
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    72                  /* FLOAT32 signal */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    73                  /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    74                  TxGrpSig_NewVal = COM_GET_TXGRPSIGTYPEU32_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    75                  break;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    76  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    77  #ifdef COM_TXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    78              case 0x08u:
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    79                  /* UINT64 signal */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    80                  TxGrpSig_NewVal = COM_GET_TXGRPSIGTYPEU64_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    81                  break;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    82  #endif /* #ifdef COM_TXGRPSIG_INT64 */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    83  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    84              default:
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    85                  /**
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    86                   * Default case is mandatory in switch syntax. Moreover only AUTOSAR Com defined signal types are
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    87                   * allowed to be configured, hence default case is intentionally left empty.
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    88                   */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    89                  break;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    90  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    91              }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    92              /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    93  #ifdef COM_TXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    94              if(SigType_u8 == COM_FLOAT64)
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    95              {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    96                  /* Convert the float value into 32 bit stream and then pack the value */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    97                  Com_PackFloatSignal(
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    98                              SigEndianess, TxGrpSigConstPtr->Bit_Pos,
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	    99                              COM_GET_TXGRPSIGTYPEFLOAT64_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index),
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   100                              TxIPduConstPtr->BuffPtr
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   101                                     );
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   102              }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   103              else
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   104  #endif /* #ifdef COM_TXGRPSIG_FLOAT64SUPP */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   105              /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   106              {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   107                  /*Now Update the Ipdu buffer with the value obtained*/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   108                  Com_PackSignal(SigEndianess,TxGrpSigConstPtr->Bit_Pos,TxGrpSigConstPtr->BitSize,
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   109                                 TxGrpSig_NewVal,TxIPduConstPtr->BuffPtr);
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   110              }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   111          }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   112          else
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   113          {
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   114              /* SigType_u8 == COM_UINT8_N */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   115              PduLengthType ByteNo_uo;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   116              /* Find the starting byte position(ByteNo_uo) of ComGroupSignal in the IPDU buffer */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   117              ByteNo_uo = ( PduLengthType )( TxGrpSigConstPtr->Bit_Pos >> 3 );
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   118              /* Now copy the Group Signal into the SignalDataPtr from Shadow Buffer */
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   119              Com_ByteCopy( ( TxIPduConstPtr->BuffPtr + ByteNo_uo ),
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   120                              &COM_GET_TXGRPSIGTYPEU8_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index),
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   121                              TxGrpSigConstPtr->BitSize );
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   122          }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   123  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   124          TxGrpSigConstPtr++;
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   125      }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   126  }
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   127  #define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   128  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   129  
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   130  #endif /*#ifdef COM_TX_SIGNALGROUP*/
; BSW\src\BSW\Gen\Com\src\Com_ShadowBuffToIpduBuff.c	   131  

	; Module end
