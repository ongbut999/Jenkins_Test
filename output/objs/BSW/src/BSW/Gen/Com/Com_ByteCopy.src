	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc13624a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_ByteCopy.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c'

	
$TC16X
	
	.sdecl	'.text.Com_ByteCopy.Com_ByteCopy',code,cluster('Com_ByteCopy')
	.sect	'.text.Com_ByteCopy.Com_ByteCopy'
	.align	2
	
	.global	Com_ByteCopy

; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     3  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     4  /* Preprocessor includes                                                                          */
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     5  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     6  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     7  
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     8  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	     9  /* Global functions (declared in header files )                                                   */
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    10  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    11  /***************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    12   Function name    : Com_ByteCopy
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    13   Syntax           : void Com_ByteCopy(uint8 *dest,const uint8 *src,uint32 Len)
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    14   Description      : Service for copying the bytes from source to destination
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    15   Parameter        : dest -> Pointer to Destination
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    16                    : src  -> Pointer to Source
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    17                    : Length -> No.of bytes
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    18   Return value     : None
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    19  ***************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    20  #define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    21  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    22  FUNC(void,COM_CODE) Com_ByteCopy(P2VAR(uint8, AUTOMATIC, COM_APPL_DATA) dest,
; Function Com_ByteCopy
.L6:
Com_ByteCopy:	.type	func

; .\Integration\BSW\Include\rba_BswSrv.h	     1  /*
; .\Integration\BSW\Include\rba_BswSrv.h	     2   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	     3   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     4   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	     5   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	     6   *
; .\Integration\BSW\Include\rba_BswSrv.h	     7   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	     8   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	     9   */
; .\Integration\BSW\Include\rba_BswSrv.h	    10  
; .\Integration\BSW\Include\rba_BswSrv.h	    11  
; .\Integration\BSW\Include\rba_BswSrv.h	    12  
; .\Integration\BSW\Include\rba_BswSrv.h	    13  
; .\Integration\BSW\Include\rba_BswSrv.h	    14  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    15   * This is a template file. It defines integration functions necessary to complete RTA-BSW.
; .\Integration\BSW\Include\rba_BswSrv.h	    16   * The integrator must complete the templates before deploying software containing functions defined in this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    17   * Once templates have been completed, the integrator should delete the #error line.
; .\Integration\BSW\Include\rba_BswSrv.h	    18   * Note: The integrator is responsible for updates made to this file.
; .\Integration\BSW\Include\rba_BswSrv.h	    19   *
; .\Integration\BSW\Include\rba_BswSrv.h	    20   * To remove the following error define the macro NOT_READY_FOR_TESTING_OR_DEPLOYMENT with a compiler option (e.g. -D NOT_READY_FOR_TESTING_OR_DEPLOYMENT)
; .\Integration\BSW\Include\rba_BswSrv.h	    21   * The removal of the error only allows the user to proceed with the building phase
; .\Integration\BSW\Include\rba_BswSrv.h	    22   */
; .\Integration\BSW\Include\rba_BswSrv.h	    23  
; .\Integration\BSW\Include\rba_BswSrv.h	    24  
; .\Integration\BSW\Include\rba_BswSrv.h	    25  #ifndef RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    26  #define RBA_BSWSRV_H
; .\Integration\BSW\Include\rba_BswSrv.h	    27  
; .\Integration\BSW\Include\rba_BswSrv.h	    28  
; .\Integration\BSW\Include\rba_BswSrv.h	    29  
; .\Integration\BSW\Include\rba_BswSrv.h	    30  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    31   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    32   * Includes
; .\Integration\BSW\Include\rba_BswSrv.h	    33   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    34   */
; .\Integration\BSW\Include\rba_BswSrv.h	    35  
; .\Integration\BSW\Include\rba_BswSrv.h	    36  #include "Std_Types.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    37  
; .\Integration\BSW\Include\rba_BswSrv.h	    38  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    39   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    40   * Defines
; .\Integration\BSW\Include\rba_BswSrv.h	    41   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    42   */
; .\Integration\BSW\Include\rba_BswSrv.h	    43  /* Vendor and module identification */
; .\Integration\BSW\Include\rba_BswSrv.h	    44  #define RBA_BSWSRV_VENDOR_ID   (6)
; .\Integration\BSW\Include\rba_BswSrv.h	    45  #define RBA_BSWSRV_MODULE_ID   (255)
; .\Integration\BSW\Include\rba_BswSrv.h	    46  #define RBA_BSWSRV_INSTANCE_ID (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    47  
; .\Integration\BSW\Include\rba_BswSrv.h	    48  /* Module version information */
; .\Integration\BSW\Include\rba_BswSrv.h	    49  #define RBA_BSWSRV_SW_MAJOR_VERSION (3)
; .\Integration\BSW\Include\rba_BswSrv.h	    50  #define RBA_BSWSRV_SW_MINOR_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    51  #define RBA_BSWSRV_SW_PATCH_VERSION (0)
; .\Integration\BSW\Include\rba_BswSrv.h	    52  
; .\Integration\BSW\Include\rba_BswSrv.h	    53  
; .\Integration\BSW\Include\rba_BswSrv.h	    54  
; .\Integration\BSW\Include\rba_BswSrv.h	    55  
; .\Integration\BSW\Include\rba_BswSrv.h	    56  #  define RBA_BSWSRV_PARAM_UNUSED(param)          (void)(param)         /* iwm7abt workaround for defect CSCRM00957569 */
; .\Integration\BSW\Include\rba_BswSrv.h	    57  #  define RBA_BSWSRV_PRV_C_IMPL
; .\Integration\BSW\Include\rba_BswSrv.h	    58  
; .\Integration\BSW\Include\rba_BswSrv.h	    59  
; .\Integration\BSW\Include\rba_BswSrv.h	    60  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    61   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    62   * Type definition
; .\Integration\BSW\Include\rba_BswSrv.h	    63   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    64   */
; .\Integration\BSW\Include\rba_BswSrv.h	    65  
; .\Integration\BSW\Include\rba_BswSrv.h	    66  typedef unsigned long long rba_BswSrv_uint64;
; .\Integration\BSW\Include\rba_BswSrv.h	    67  
; .\Integration\BSW\Include\rba_BswSrv.h	    68  
; .\Integration\BSW\Include\rba_BswSrv.h	    69  /*
; .\Integration\BSW\Include\rba_BswSrv.h	    70   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    71   * Variable declarations
; .\Integration\BSW\Include\rba_BswSrv.h	    72   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    73   */
; .\Integration\BSW\Include\rba_BswSrv.h	    74  
; .\Integration\BSW\Include\rba_BswSrv.h	    75   /*
; .\Integration\BSW\Include\rba_BswSrv.h	    76   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    77   * Prototypes
; .\Integration\BSW\Include\rba_BswSrv.h	    78   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	    79   */
; .\Integration\BSW\Include\rba_BswSrv.h	    80  
; .\Integration\BSW\Include\rba_BswSrv.h	    81  #define RBA_BSWSRV_START_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    82  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    83  extern void* rba_BswSrv_MemCopy(void* xDest_pv, const void* xSrc_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    84  extern void* rba_BswSrv_MemSet(void* xDest_pv, sint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    85  extern sint32 rba_BswSrv_MemCompare(const void* xSrc1_pcv, const void* xSrc2_pcv, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    86  #define RBA_BSWSRV_STOP_SEC_CODE
; .\Integration\BSW\Include\rba_BswSrv.h	    87  #include "rba_BswSrv_MemMap.h"
; .\Integration\BSW\Include\rba_BswSrv.h	    88  
; .\Integration\BSW\Include\rba_BswSrv.h	    89  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    90  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16);
; .\Integration\BSW\Include\rba_BswSrv.h	    91  LOCAL_INLINE void   rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    92  LOCAL_INLINE void   rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    93  LOCAL_INLINE void   rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    94  LOCAL_INLINE void   rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    95  LOCAL_INLINE uint32 rba_BswSrv_MemCompare64(const rba_BswSrv_uint64* xSrc1_pcu64, const rba_BswSrv_uint64* xSrc2_pcu64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    96  LOCAL_INLINE uint32 rba_BswSrv_MemCompare32(const uint32* xSrc1_pcu32, const uint32* xSrc2_pcu32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    97  LOCAL_INLINE uint32 rba_BswSrv_MemCompare16(const uint16* xSrc1_pcu16, const uint16* xSrc2_pcu16, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    98  LOCAL_INLINE uint32 rba_BswSrv_MemCompare8(const uint8* xSrc1_pcu8, const uint8* xSrc2_pcu8, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	    99  LOCAL_INLINE void   rba_BswSrv_MemSet64(rba_BswSrv_uint64* xDest_pu64, rba_BswSrv_uint64 xPattern_u64, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   100  LOCAL_INLINE void   rba_BswSrv_MemSet32(uint32* xDest_pu32, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   101  LOCAL_INLINE void   rba_BswSrv_MemSet16(uint16* xDest_pu16, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   102  LOCAL_INLINE void   rba_BswSrv_MemSet8(uint8* xDest_pu8, uint32 xPattern_u32, uint32 numBytes_u32);
; .\Integration\BSW\Include\rba_BswSrv.h	   103  
; .\Integration\BSW\Include\rba_BswSrv.h	   104  /*
; .\Integration\BSW\Include\rba_BswSrv.h	   105   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   106   * Inline function definitions
; .\Integration\BSW\Include\rba_BswSrv.h	   107   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   108   */
; .\Integration\BSW\Include\rba_BswSrv.h	   109  
; .\Integration\BSW\Include\rba_BswSrv.h	   110  
; .\Integration\BSW\Include\rba_BswSrv.h	   111  
; .\Integration\BSW\Include\rba_BswSrv.h	   112  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   113   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   114   * rba_BswSrv_ByteOrderSwap32
; .\Integration\BSW\Include\rba_BswSrv.h	   115   *
; .\Integration\BSW\Include\rba_BswSrv.h	   116   * Swaps the byte order of a 32 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   117   *
; .\Integration\BSW\Include\rba_BswSrv.h	   118   * \param   Input_u32: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   119   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   120   * \retval  uint32
; .\Integration\BSW\Include\rba_BswSrv.h	   121   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   122   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   123   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   124   */
; .\Integration\BSW\Include\rba_BswSrv.h	   125  LOCAL_INLINE uint32 rba_BswSrv_ByteOrderSwap32(uint32 Input_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   126  {
; .\Integration\BSW\Include\rba_BswSrv.h	   127      uint32 retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   128  
; .\Integration\BSW\Include\rba_BswSrv.h	   129  
; .\Integration\BSW\Include\rba_BswSrv.h	   130      retVal_u32 = (Input_u32 << 24) | ((Input_u32 & 0xFF00u) << 8) | ((Input_u32 & 0x00FF0000u) >> 8) | (Input_u32 >> 24);
; .\Integration\BSW\Include\rba_BswSrv.h	   131  
; .\Integration\BSW\Include\rba_BswSrv.h	   132  
; .\Integration\BSW\Include\rba_BswSrv.h	   133      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   134      return retVal_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   135  }
; .\Integration\BSW\Include\rba_BswSrv.h	   136  
; .\Integration\BSW\Include\rba_BswSrv.h	   137  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   138   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   139   * rba_BswSrv_ByteOrderSwap16
; .\Integration\BSW\Include\rba_BswSrv.h	   140   *
; .\Integration\BSW\Include\rba_BswSrv.h	   141   * Swaps the byte order of a 16 bit value for endianess conversion.
; .\Integration\BSW\Include\rba_BswSrv.h	   142   *
; .\Integration\BSW\Include\rba_BswSrv.h	   143   * \param   Input_u16: input value
; .\Integration\BSW\Include\rba_BswSrv.h	   144   * \return  value with swapped byte order
; .\Integration\BSW\Include\rba_BswSrv.h	   145   * \retval  uint16
; .\Integration\BSW\Include\rba_BswSrv.h	   146   * \seealso
; .\Integration\BSW\Include\rba_BswSrv.h	   147   * \usedresources
; .\Integration\BSW\Include\rba_BswSrv.h	   148   *********************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   149   */
; .\Integration\BSW\Include\rba_BswSrv.h	   150  LOCAL_INLINE uint16 rba_BswSrv_ByteOrderSwap16(uint16 Input_u16)
; .\Integration\BSW\Include\rba_BswSrv.h	   151  {
; .\Integration\BSW\Include\rba_BswSrv.h	   152      uint16 retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   153  
; .\Integration\BSW\Include\rba_BswSrv.h	   154  
; .\Integration\BSW\Include\rba_BswSrv.h	   155      retVal_u16 = ((Input_u16 & 0x00FFu) << 8) | ((Input_u16 & 0xFF00u) >> 8);
; .\Integration\BSW\Include\rba_BswSrv.h	   156  
; .\Integration\BSW\Include\rba_BswSrv.h	   157  
; .\Integration\BSW\Include\rba_BswSrv.h	   158      /* MISRA RULE 9.1 VIOLATION: variable is set by inline assembly but the checker does not understand this */
; .\Integration\BSW\Include\rba_BswSrv.h	   159      return retVal_u16;
; .\Integration\BSW\Include\rba_BswSrv.h	   160  }
; .\Integration\BSW\Include\rba_BswSrv.h	   161  
; .\Integration\BSW\Include\rba_BswSrv.h	   162  
; .\Integration\BSW\Include\rba_BswSrv.h	   163  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   164   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   165   * rba_BswSrv_MemCopy64 - copy non overlapping memory in 64 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   166   *
; .\Integration\BSW\Include\rba_BswSrv.h	   167   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 8 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   168   * aligned. The size should be a multiple of 8. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   169   * of 8.
; .\Integration\BSW\Include\rba_BswSrv.h	   170   *
; .\Integration\BSW\Include\rba_BswSrv.h	   171   * \param   xDest_pu64      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   172   * \param   xSrc_pcu64      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   173   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   174   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy32
; .\Integration\BSW\Include\rba_BswSrv.h	   175   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   176   */
; .\Integration\BSW\Include\rba_BswSrv.h	   177  LOCAL_INLINE void rba_BswSrv_MemCopy64(rba_BswSrv_uint64* xDest_pu64, const rba_BswSrv_uint64* xSrc_pcu64, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   178  {
; .\Integration\BSW\Include\rba_BswSrv.h	   179  
; .\Integration\BSW\Include\rba_BswSrv.h	   180      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   181  
; .\Integration\BSW\Include\rba_BswSrv.h	   182      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 8); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   183      {
; .\Integration\BSW\Include\rba_BswSrv.h	   184          *xDest_pu64 = *xSrc_pcu64;
; .\Integration\BSW\Include\rba_BswSrv.h	   185          xDest_pu64++;
; .\Integration\BSW\Include\rba_BswSrv.h	   186          xSrc_pcu64++;
; .\Integration\BSW\Include\rba_BswSrv.h	   187      }
; .\Integration\BSW\Include\rba_BswSrv.h	   188  
; .\Integration\BSW\Include\rba_BswSrv.h	   189      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   190  }
; .\Integration\BSW\Include\rba_BswSrv.h	   191  
; .\Integration\BSW\Include\rba_BswSrv.h	   192  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   193   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   194   * rba_BswSrv_MemCopy32 - copy non overlapping memory in 32 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   195   *
; .\Integration\BSW\Include\rba_BswSrv.h	   196   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 4 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   197   * aligned. The size should be a multiple of 4. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   198   * of 4.
; .\Integration\BSW\Include\rba_BswSrv.h	   199   *
; .\Integration\BSW\Include\rba_BswSrv.h	   200   * \param   xDest_pu32      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   201   * \param   xSrc_pcu32      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   202   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   203   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   204   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   205   */
; .\Integration\BSW\Include\rba_BswSrv.h	   206  LOCAL_INLINE void rba_BswSrv_MemCopy32(uint32* xDest_pu32, const uint32* xSrc_pcu32, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   207  {
; .\Integration\BSW\Include\rba_BswSrv.h	   208      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   209  
; .\Integration\BSW\Include\rba_BswSrv.h	   210      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 4); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   211      {
; .\Integration\BSW\Include\rba_BswSrv.h	   212          *xDest_pu32 = *xSrc_pcu32;
; .\Integration\BSW\Include\rba_BswSrv.h	   213          xDest_pu32++;
; .\Integration\BSW\Include\rba_BswSrv.h	   214          xSrc_pcu32++;
; .\Integration\BSW\Include\rba_BswSrv.h	   215      }
; .\Integration\BSW\Include\rba_BswSrv.h	   216  
; .\Integration\BSW\Include\rba_BswSrv.h	   217      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   218  }
; .\Integration\BSW\Include\rba_BswSrv.h	   219  
; .\Integration\BSW\Include\rba_BswSrv.h	   220  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   221   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   222   * rba_BswSrv_MemCopy16 - copy non overlapping memory in 16 Bit blocks
; .\Integration\BSW\Include\rba_BswSrv.h	   223   *
; .\Integration\BSW\Include\rba_BswSrv.h	   224   * Memory copy routine. Source and destination must not overlap. Pointer parameters must be 2 Byte
; .\Integration\BSW\Include\rba_BswSrv.h	   225   * aligned. The size should be a multiple of 2. If not, it is rounded down to the next multiple
; .\Integration\BSW\Include\rba_BswSrv.h	   226   * of 2.
; .\Integration\BSW\Include\rba_BswSrv.h	   227   *
; .\Integration\BSW\Include\rba_BswSrv.h	   228   * \param   xDest_pu16      destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   229   * \param   xSrc_pcu16      source address
; .\Integration\BSW\Include\rba_BswSrv.h	   230   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   231   * \seealso     rba_BswSrv_MemCopy8, rba_BswSrv_MemCopy32, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   232   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   233   */
; .\Integration\BSW\Include\rba_BswSrv.h	   234  LOCAL_INLINE void rba_BswSrv_MemCopy16(uint16* xDest_pu16, const uint16* xSrc_pcu16, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   235  {
; .\Integration\BSW\Include\rba_BswSrv.h	   236      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   237  
; .\Integration\BSW\Include\rba_BswSrv.h	   238      for(ctLoop_u32 = 0; ctLoop_u32 < (numBytes_u32 / 2); ctLoop_u32++)
; .\Integration\BSW\Include\rba_BswSrv.h	   239      {
; .\Integration\BSW\Include\rba_BswSrv.h	   240          *xDest_pu16 = *xSrc_pcu16;
; .\Integration\BSW\Include\rba_BswSrv.h	   241          xDest_pu16++;
; .\Integration\BSW\Include\rba_BswSrv.h	   242          xSrc_pcu16++;
; .\Integration\BSW\Include\rba_BswSrv.h	   243      }
; .\Integration\BSW\Include\rba_BswSrv.h	   244  
; .\Integration\BSW\Include\rba_BswSrv.h	   245      return;
; .\Integration\BSW\Include\rba_BswSrv.h	   246  }
; .\Integration\BSW\Include\rba_BswSrv.h	   247  
; .\Integration\BSW\Include\rba_BswSrv.h	   248  /**
; .\Integration\BSW\Include\rba_BswSrv.h	   249   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   250   * rba_BswSrv_MemCopy8 - copy non overlapping memory
; .\Integration\BSW\Include\rba_BswSrv.h	   251   *
; .\Integration\BSW\Include\rba_BswSrv.h	   252   * Memory copy routine. Source and destination must not overlap.
; .\Integration\BSW\Include\rba_BswSrv.h	   253   *
; .\Integration\BSW\Include\rba_BswSrv.h	   254   * \param   xDest_pu8       destination address
; .\Integration\BSW\Include\rba_BswSrv.h	   255   * \param   xSrc_pcu8       source address
; .\Integration\BSW\Include\rba_BswSrv.h	   256   * \param   numBytes_u32    number of bytes to be copied
; .\Integration\BSW\Include\rba_BswSrv.h	   257   * \seealso     rba_BswSrv_MemCopy16, rba_BswSrv_MemCopy32, rba_BswSrv_MemCopy64
; .\Integration\BSW\Include\rba_BswSrv.h	   258   ***************************************************************************************************
; .\Integration\BSW\Include\rba_BswSrv.h	   259   */
; .\Integration\BSW\Include\rba_BswSrv.h	   260  LOCAL_INLINE void rba_BswSrv_MemCopy8(uint8* xDest_pu8, const uint8* xSrc_pcu8, uint32 numBytes_u32)
; .\Integration\BSW\Include\rba_BswSrv.h	   261  {
; .\Integration\BSW\Include\rba_BswSrv.h	   262      uint32 ctLoop_u32;
; .\Integration\BSW\Include\rba_BswSrv.h	   263  
; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)
	mov	d15,#0
.L32:

; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)      (inlined)
	j	.L2
.L3:

; .\Integration\BSW\Include\rba_BswSrv.h	   265      {
; .\Integration\BSW\Include\rba_BswSrv.h	   266          *xDest_pu8 = *xSrc_pcu8;
	ld.bu	d0,[a5]
.L42:
	st.b	[a4],d0
.L43:

; .\Integration\BSW\Include\rba_BswSrv.h	   267          xDest_pu8++;
	add.a	a4,#1
.L44:

; .\Integration\BSW\Include\rba_BswSrv.h	   268          xSrc_pcu8++;
	add.a	a5,#1
.L45:
	add	d15,#1

; .\Integration\BSW\Include\rba_BswSrv.h	   264      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)      (inlined)
.L2:
	jlt.u	d15,d4,.L3
.L46:

; .\Integration\BSW\Include\rba_BswSrv.h	   271      return;      (inlined)
	j	.L4

; .\Integration\BSW\Include\rba_BswSrv.h	   272  }      (inlined)
.L4:

; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    23                                   P2CONST(uint8, AUTOMATIC, COM_APPL_DATA) src,
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    24                                   VAR(uint32, AUTOMATIC) Len)
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    25  {
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    26  /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    27      /* Call to rba_BswSrv_MemCopy8 is made, the implementation is a rb specific Memory copy */
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    28      rba_BswSrv_MemCopy8(dest,src,Len);
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    29  /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    30  
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    31  }
	ret
.L16:
	
__Com_ByteCopy_function_end:
	.size	Com_ByteCopy,__Com_ByteCopy_function_end-Com_ByteCopy
.L15:
	; End of function
	
	.calls	'Com_ByteCopy','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L8:
	.word	12977
	.half	3
	.word	.L9
	.byte	4
.L7:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L10
	.byte	2
	.byte	'unsigned char',0,1,8
.L17:
	.byte	3
	.word	138
	.byte	4
	.word	138
.L19:
	.byte	3
	.word	160
.L21:
	.byte	2
	.byte	'unsigned int',0,4,7
.L23:
	.byte	5
	.byte	'rba_BswSrv_MemCopy8',0,3,1,132,2,19,1,1
.L24:
	.byte	6
	.byte	'xDest_pu8',0,1,132,2,46
	.word	155
.L26:
	.byte	6
	.byte	'xSrc_pcu8',0,1,132,2,70
	.word	165
.L28:
	.byte	6
	.byte	'numBytes_u32',0,1,132,2,88
	.word	170
.L30:
	.byte	7,0,2
	.byte	'unsigned short int',0,2,7,8
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,2,207,2,22
	.word	138
	.byte	1,1,6
	.byte	'Data',0,2,207,2,57
	.word	276
	.byte	6
	.byte	'BitPn',0,2,207,2,69
	.word	138
	.byte	7,0,8
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,2,227,2,22
	.word	138
	.byte	1,1,6
	.byte	'Data',0,2,227,2,57
	.word	170
	.byte	6
	.byte	'BitPn',0,2,227,2,69
	.word	138
	.byte	7,0,8
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,2,247,2,22
	.word	138
	.byte	1,1,6
	.byte	'Data',0,2,247,2,55
	.word	138
	.byte	6
	.byte	'BitPn',0,2,247,2,67
	.word	138
	.byte	7,0,3
	.word	276
	.byte	5
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,2,200,3,19,1,1,6
	.byte	'Data',0,2,200,3,54
	.word	510
	.byte	6
	.byte	'BitPn',0,2,200,3,66
	.word	138
	.byte	6
	.byte	'Value',0,2,200,3,81
	.word	138
	.byte	7,0,3
	.word	170
	.byte	5
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,2,224,3,19,1,1,6
	.byte	'Data',0,2,224,3,54
	.word	596
	.byte	6
	.byte	'BitPn',0,2,224,3,66
	.word	138
	.byte	6
	.byte	'Value',0,2,224,3,81
	.word	138
	.byte	7,0,5
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,2,248,3,19,1,1,6
	.byte	'Data',0,2,248,3,52
	.word	155
	.byte	6
	.byte	'BitPn',0,2,248,3,64
	.word	138
	.byte	6
	.byte	'Value',0,2,248,3,79
	.word	138
	.byte	7,0,8
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,2,143,10,22
	.word	138
	.byte	1,1,6
	.byte	'Data',0,2,143,10,62
	.word	170
	.byte	7,0,9
	.word	186
	.byte	10
	.word	214
	.byte	10
	.word	233
	.byte	10
	.word	252
	.byte	7,0,9
	.word	298
	.byte	10
	.word	338
	.byte	10
	.word	352
	.byte	7,0,9
	.word	369
	.byte	10
	.word	409
	.byte	10
	.word	423
	.byte	7,0,9
	.word	440
	.byte	10
	.word	479
	.byte	10
	.word	493
	.byte	7,0,9
	.word	515
	.byte	10
	.word	550
	.byte	10
	.word	564
	.byte	10
	.word	579
	.byte	7,0,9
	.word	601
	.byte	10
	.word	636
	.byte	10
	.word	650
	.byte	10
	.word	665
	.byte	7,0,9
	.word	682
	.byte	10
	.word	716
	.byte	10
	.word	730
	.byte	10
	.word	745
	.byte	7,0,9
	.word	762
	.byte	10
	.word	807
	.byte	7,0,11,1,3
	.word	974
	.byte	12
	.byte	'__codeptr',0,3,1,1
	.word	976
	.byte	2
	.byte	'char',0,1,6,12
	.byte	'sint8',0,4,76,25
	.word	999
	.byte	12
	.byte	'uint8',0,4,81,25
	.word	138
	.byte	12
	.byte	'uint16',0,4,91,25
	.word	276
	.byte	12
	.byte	'uint32',0,4,106,24
	.word	170
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'uint64',0,4,111,30
	.word	1065
	.byte	12
	.byte	'boolean',0,4,127,25
	.word	138
	.byte	12
	.byte	'StatusType',0,5,191,1,27
	.word	138
	.byte	12
	.byte	'Std_ReturnType',0,5,199,1,15
	.word	138
	.byte	13,5,206,1,9,8,14
	.byte	'vendorID',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'moduleID',0
	.word	276
	.byte	2,2,35,2,14
	.byte	'sw_major_version',0
	.word	138
	.byte	1,2,35,4,14
	.byte	'sw_minor_version',0
	.word	138
	.byte	1,2,35,5,14
	.byte	'sw_patch_version',0
	.word	138
	.byte	1,2,35,6,0,12
	.byte	'Std_VersionInfoType',0,5,213,1,3
	.word	1166
	.byte	12
	.byte	'PduIdType',0,6,22,19
	.word	276
	.byte	12
	.byte	'PduLengthType',0,6,26,19
	.word	276
	.byte	15,7,113,9,4,16
	.byte	'TP_DATACONF',0,0,16
	.byte	'TP_DATARETRY',0,1,16
	.byte	'TP_CONFPENDING',0,2,0,12
	.byte	'TpDataStateType',0,7,118,3
	.word	1356
	.byte	12
	.byte	'Com_SignalIdType',0,8,100,16
	.word	276
	.byte	12
	.byte	'Com_SignalGroupIdType',0,8,102,16
	.word	276
	.byte	12
	.byte	'Com_IpduIdType',0,8,104,15
	.word	138
	.byte	12
	.byte	'Com_GrpSignalIdType',0,8,107,18
	.word	138
	.byte	12
	.byte	'Com_TxIntSignalIdType',0,9,138,3,18
	.word	138
	.byte	12
	.byte	'Com_RxIntSignalIdType',0,9,139,3,18
	.word	138
	.byte	12
	.byte	'Com_BitsizeType',0,9,155,3,17
	.word	138
	.byte	12
	.byte	'Com_BitpositionType',0,9,156,3,15
	.word	138
	.byte	12
	.byte	'Com_RxGwQueueIndexType',0,9,161,3,15
	.word	138
	.byte	12
	.byte	'Com_SigBuffIndexType',0,9,164,3,15
	.word	138
	.byte	12
	.byte	'Com_MainFuncType',0,9,231,3,16
	.word	138
	.byte	12
	.byte	'Com_NumOfIpdusType',0,9,233,3,15
	.word	138
	.byte	12
	.byte	'Com_TimeBaseType',0,9,235,3,15
	.word	138
	.byte	12
	.byte	'Can_IdType',0,10,32,16
	.word	170
	.byte	12
	.byte	'Can_HwHandleType',0,10,43,16
	.word	276
	.byte	13,11,93,9,8,14
	.byte	'Class',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'TIN',0
	.word	138
	.byte	1,2,35,1,14
	.byte	'ReturnAddress',0
	.word	170
	.byte	4,2,35,4,0,12
	.byte	'OsTrapInfoType',0,11,97,3
	.word	1840
	.byte	17,68
	.word	170
	.byte	18,16,0,13,11,154,1,9,68,14
	.byte	'store',0
	.word	1920
	.byte	68,2,35,0,0,17,68
	.word	1929
	.byte	18,0,0,12
	.byte	'Os_JumpBufType',0,11,156,1,3
	.word	1951
	.byte	12
	.byte	'Os_StackTraceType',0,11,174,1,18
	.word	170
	.byte	13,11,175,1,9,8,14
	.byte	'sp',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'ctx',0
	.word	170
	.byte	4,2,35,4,0,12
	.byte	'Os_StackValueType',0,11,175,1,63
	.word	2011
	.byte	12
	.byte	'Os_StackSizeType',0,11,176,1,27
	.word	2011
	.byte	19,1,1,3
	.word	2096
	.byte	12
	.byte	'Os_VoidVoidFunctionType',0,11,179,1,16
	.word	2099
	.byte	12
	.byte	'ApplicationType',0,11,193,1,23
	.word	138
	.byte	20
	.byte	'Os_ApplicationConfigurationType_s',0,11,198,1,16,2,14
	.byte	'app_id',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,1,0,12
	.byte	'Os_ApplicationConfigurationType',0,11,201,1,3
	.word	2162
	.byte	12
	.byte	'Os_CoreStateType',0,11,203,1,16
	.word	170
	.byte	12
	.byte	'AreaIdType',0,11,204,1,16
	.word	276
	.byte	12
	.byte	'Os_PeripheralAddressType',0,11,212,1,22
	.word	170
	.byte	12
	.byte	'TickType',0,11,221,1,22
	.word	170
	.byte	12
	.byte	'Os_StopwatchTickType',0,11,225,1,22
	.word	170
	.byte	12
	.byte	'Os_Lockable',0,11,234,1,18
	.word	596
	.byte	12
	.byte	'CoreIdType',0,11,236,1,16
	.word	276
	.byte	12
	.byte	'SpinlockIdType',0,11,237,1,16
	.word	276
	.byte	15,11,239,1,9,4,16
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,16
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,12
	.byte	'TryToGetSpinlockType',0,11,239,1,74
	.word	2469
	.byte	15,11,174,2,9,4,16
	.byte	'APPLICATION_ACCESSIBLE',0,0,16
	.byte	'APPLICATION_RESTARTING',0,1,16
	.byte	'APPLICATION_TERMINATED',0,2,0,12
	.byte	'ApplicationStateType',0,11,174,2,92
	.word	2562
	.byte	21
	.byte	'void',0,3
	.word	2674
	.byte	22,1,1,23
	.word	138
	.byte	23
	.word	2680
	.byte	0,3
	.word	2685
	.byte	12
	.byte	'Os_FunctionEntryType',0,11,183,2,16
	.word	2699
	.byte	20
	.byte	'Os_MeterInfoType_s',0,11,193,2,16,48,14
	.byte	'elapsed',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'previous',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'max',0
	.word	170
	.byte	4,2,35,8,14
	.byte	'cumulative',0
	.word	170
	.byte	4,2,35,12,14
	.byte	'stackbase',0
	.word	2011
	.byte	8,2,35,16,14
	.byte	'stackusage',0
	.word	2011
	.byte	8,2,35,24,14
	.byte	'stackmax',0
	.word	2011
	.byte	8,2,35,32,14
	.byte	'stackbudget',0
	.word	2011
	.byte	8,2,35,40,0,12
	.byte	'Os_MeterInfoType',0,11,202,2,3
	.word	2734
	.byte	3
	.word	2734
	.byte	12
	.byte	'Os_MeterInfoRefType',0,11,203,2,50
	.word	2932
	.byte	12
	.byte	'EventMaskType',0,11,206,2,15
	.word	138
	.byte	12
	.byte	'Os_imaskType',0,11,211,2,16
	.word	170
	.byte	20
	.byte	'Os_ISRDynType_s',0,11,213,2,16,48,14
	.byte	'meter',0
	.word	2734
	.byte	48,2,35,0,0,12
	.byte	'Os_ISRDynType',0,11,215,2,3
	.word	3011
	.byte	3
	.word	3011
	.byte	4
	.word	3072
	.byte	20
	.byte	'Os_ISRType_s',0,11,216,2,16,24,14
	.byte	'entry_function',0
	.word	2104
	.byte	4,2,35,0,14
	.byte	'dynamic',0
	.word	3077
	.byte	4,2,35,4,14
	.byte	'imask',0
	.word	170
	.byte	4,2,35,8,14
	.byte	'stackbudget',0
	.word	2011
	.byte	8,2,35,12,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,20,14
	.byte	'application',0
	.word	138
	.byte	1,2,35,21,0,12
	.byte	'Os_ISRType',0,11,223,2,3
	.word	3082
	.byte	3
	.word	2096
	.byte	4
	.word	3082
	.byte	3
	.word	3241
	.byte	12
	.byte	'ISRType',0,11,224,2,46
	.word	3246
	.byte	12
	.byte	'Os_bitmask',0,11,239,2,22
	.word	170
	.byte	12
	.byte	'Os_pset0Type',0,11,240,2,20
	.word	170
	.byte	12
	.byte	'Os_pset1Type',0,11,241,2,20
	.word	170
	.byte	12
	.byte	'Os_pset2Type',0,11,242,2,20
	.word	170
	.byte	24,11,243,2,9,4,14
	.byte	'p0',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'p1',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'p2',0
	.word	170
	.byte	4,2,35,0,0,12
	.byte	'Os_psetType',0,11,247,2,3
	.word	3354
	.byte	24,11,249,2,9,4,14
	.byte	't0',0
	.word	170
	.byte	4,2,35,0,14
	.byte	't1',0
	.word	170
	.byte	4,2,35,0,14
	.byte	't2',0
	.word	170
	.byte	4,2,35,0,0,12
	.byte	'Os_tpmaskType',0,11,253,2,3
	.word	3418
	.byte	12
	.byte	'Os_ActivationCountType',0,11,254,2,23
	.word	138
	.byte	20
	.byte	'Os_TaskDynType_s',0,11,128,3,16,120,14
	.byte	'terminate_jump_buf',0
	.word	1960
	.byte	68,2,35,0,14
	.byte	'meter',0
	.word	2734
	.byte	48,2,35,68,14
	.byte	'activation_count',0
	.word	138
	.byte	1,2,35,116,0,12
	.byte	'Os_TaskDynType',0,11,132,3,3
	.word	3516
	.byte	17,68
	.word	1929
	.byte	18,0,0,3
	.word	3516
	.byte	4
	.word	3642
	.byte	20
	.byte	'Os_TaskType_s',0,11,134,3,16,40,14
	.byte	'dynamic',0
	.word	3647
	.byte	4,2,35,0,14
	.byte	'entry_function',0
	.word	2104
	.byte	4,2,35,4,14
	.byte	'pset',0
	.word	3354
	.byte	4,2,35,8,14
	.byte	'base_tpmask',0
	.word	3418
	.byte	4,2,35,12,14
	.byte	'tpmask',0
	.word	3418
	.byte	4,2,35,16,14
	.byte	'core_id',0
	.word	276
	.byte	2,2,35,20,14
	.byte	'index',0
	.word	170
	.byte	4,2,35,24,14
	.byte	'stackbudget',0
	.word	2011
	.byte	8,2,35,28,14
	.byte	'activation_count',0
	.word	138
	.byte	1,2,35,36,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,37,14
	.byte	'application',0
	.word	138
	.byte	1,2,35,38,0,12
	.byte	'Os_TaskType',0,11,146,3,3
	.word	3652
	.byte	4
	.word	3652
	.byte	3
	.word	3902
	.byte	12
	.byte	'TaskType',0,11,147,3,47
	.word	3907
	.byte	25
	.byte	'Os_TaskStateType',0,11,155,3,6,4,16
	.byte	'SUSPENDED',0,0,16
	.byte	'READY',0,1,16
	.byte	'WAITING',0,2,16
	.byte	'RUNNING',0,3,0,12
	.byte	'TaskStateType',0,11,156,3,31
	.word	3930
	.byte	24,11,167,3,3,4,14
	.byte	'tpmask',0
	.word	3418
	.byte	4,2,35,0,0,20
	.byte	'Os_ResourceDynType_s',0,11,166,3,16,4,14
	.byte	'saved_priority',0
	.word	4017
	.byte	4,2,35,0,0,12
	.byte	'Os_ResourceDynType',0,11,170,3,3
	.word	4040
	.byte	3
	.word	4040
	.byte	4
	.word	4120
	.byte	20
	.byte	'Os_ResourceType_s',0,11,171,3,16,12,14
	.byte	'dynamic',0
	.word	4125
	.byte	4,2,35,0,14
	.byte	'tpmask',0
	.word	3418
	.byte	4,2,35,4,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,8,0,12
	.byte	'Os_ResourceType',0,11,175,3,3
	.word	4130
	.byte	13,11,181,3,9,12,14
	.byte	'maxallowedvalue',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'ticksperbase',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'mincycle',0
	.word	170
	.byte	4,2,35,8,0,12
	.byte	'AlarmBaseType',0,11,185,3,3
	.word	4229
	.byte	13,11,206,3,9,8,14
	.byte	'Running',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'Pending',0
	.word	138
	.byte	1,2,35,1,14
	.byte	'Delay',0
	.word	170
	.byte	4,2,35,4,0,12
	.byte	'Os_CounterStatusType',0,11,210,3,3
	.word	4324
	.byte	26
	.word	138
	.byte	1,1,3
	.word	4410
	.byte	12
	.byte	'Os_CounterIncrAdvType',0,11,217,3,22
	.word	4417
	.byte	20
	.byte	's_swd',0,11,222,3,12,4,14
	.byte	'count',0
	.word	170
	.byte	4,2,35,0,0,24,11,221,3,3,4,14
	.byte	'sw',0
	.word	4453
	.byte	4,2,35,0,0,20
	.byte	'Os_CounterDynType_s',0,11,220,3,16,4,14
	.byte	'type_dependent',0
	.word	4481
	.byte	4,2,35,0,0,12
	.byte	'Os_CounterDynType',0,11,226,3,3
	.word	4500
	.byte	3
	.word	4500
	.byte	4
	.word	4578
	.byte	20
	.byte	'Os_CounterType_s',0,11,227,3,16,28,14
	.byte	'dynamic',0
	.word	4583
	.byte	4,2,35,0,14
	.byte	'advincr',0
	.word	4422
	.byte	4,2,35,4,14
	.byte	'base',0
	.word	4229
	.byte	12,2,35,8,14
	.byte	'core',0
	.word	2680
	.byte	4,2,35,20,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,24,14
	.byte	'application',0
	.word	138
	.byte	1,2,35,25,0,12
	.byte	'Os_CounterType',0,11,234,3,3
	.word	4588
	.byte	3
	.word	4410
	.byte	4
	.word	4588
	.byte	3
	.word	4740
	.byte	12
	.byte	'CounterType',0,11,235,3,52
	.word	4745
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,11,240,3,6,4,16
	.byte	'SCHEDULETABLE_STOPPED',0,0,16
	.byte	'SCHEDULETABLE_NEXT',0,1,16
	.byte	'SCHEDULETABLE_WAITING',0,2,16
	.byte	'SCHEDULETABLE_RUNNING',0,3,16
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,12
	.byte	'ScheduleTableStatusType',0,11,241,3,41
	.word	4771
	.byte	4
	.word	.L33-.L8
	.byte	3
	.word	4971
	.byte	12
	.byte	'ScheduleTableType',0,11,128,4,58
	.word	4976
	.byte	20
	.byte	'Os_ScheduleTableDynType_s',0,11,130,4,16,16,14
	.byte	'match',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'next',0
	.word	4981
	.byte	4,2,35,4,14
	.byte	'state',0
	.word	4771
	.byte	4,2,35,8,14
	.byte	'config',0
	.word	276
	.byte	2,2,35,12,0,3
	.word	5008
	.byte	4
	.word	5101
.L33:
	.byte	20
	.byte	'Os_ScheduleTableType_s',0,11,247,3,16,16,14
	.byte	'dynamic',0
	.word	5106
	.byte	4,2,35,0,14
	.byte	'counter',0
	.word	4750
	.byte	4,2,35,4,14
	.byte	'repeat',0
	.word	138
	.byte	1,2,35,8,14
	.byte	'config',0
	.word	276
	.byte	2,2,35,10,14
	.byte	'initial',0
	.word	138
	.byte	1,2,35,12,14
	.byte	'access',0
	.word	138
	.byte	1,2,35,13,14
	.byte	'application',0
	.word	138
	.byte	1,2,35,14,0,12
	.byte	'Os_ScheduleTableType',0,11,255,3,3
	.word	5111
	.byte	4
	.word	5111
	.byte	3
	.word	5291
	.byte	4
	.word	4588
	.byte	3
	.word	5301
	.byte	27
	.word	2404
	.byte	27
	.word	3354
	.byte	27
	.word	3251
	.byte	27
	.word	3912
	.byte	27
	.word	3418
	.byte	27
	.word	138
	.byte	27
	.word	3912
	.byte	20
	.byte	'Os_ControlledCoreType_s',0,11,251,6,16,112,14
	.byte	'TrapInfo',0
	.word	1840
	.byte	8,2,35,0,14
	.byte	'lock_taskaccess',0
	.word	5311
	.byte	4,2,35,8,14
	.byte	'ReadyTasks',0
	.word	5316
	.byte	4,2,35,12,14
	.byte	'RunningISR',0
	.word	5321
	.byte	4,2,35,16,14
	.byte	'RunningTask',0
	.word	5326
	.byte	4,2,35,20,14
	.byte	'RunningTPMask',0
	.word	5331
	.byte	4,2,35,24,14
	.byte	'CurrentMeteredObject',0
	.word	2937
	.byte	4,2,35,28,14
	.byte	'IdleMeter',0
	.word	2734
	.byte	48,2,35,32,14
	.byte	'AppAccess',0
	.word	138
	.byte	1,2,35,80,14
	.byte	'AppOverride',0
	.word	5336
	.byte	1,2,35,81,14
	.byte	'GetStackValueAdjust',0
	.word	2011
	.byte	8,2,35,84,14
	.byte	'InErrorHook',0
	.word	138
	.byte	1,2,35,92,14
	.byte	'ChainTaskRef',0
	.word	5341
	.byte	4,2,35,96,14
	.byte	'GetStackUsageAdjust',0
	.word	2011
	.byte	8,2,35,100,14
	.byte	'InProtectionHook',0
	.word	138
	.byte	1,2,35,108,14
	.byte	'CoreIsActive',0
	.word	138
	.byte	1,2,35,109,14
	.byte	'InShutdownHook',0
	.word	138
	.byte	1,2,35,110,0,12
	.byte	'Os_ControlledCoreType',0,11,141,7,3
	.word	5346
	.byte	3
	.word	170
	.byte	4
	.word	3082
	.byte	3
	.word	5802
	.byte	4
	.word	3652
	.byte	3
	.word	5812
	.byte	3
	.word	2734
	.byte	20
	.byte	'Os_AnyCoreType_s',0,11,151,7,16,96,14
	.byte	'DisableAllImask',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'SuspendAllImask',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'SuspendOSImask',0
	.word	170
	.byte	4,2,35,8,14
	.byte	'DisableAllCount',0
	.word	170
	.byte	4,2,35,12,14
	.byte	'SuspendAllCount',0
	.word	170
	.byte	4,2,35,16,14
	.byte	'SuspendOSCount',0
	.word	170
	.byte	4,2,35,20,14
	.byte	'RestartJumpBuf',0
	.word	1960
	.byte	68,2,35,24,14
	.byte	'Restartable',0
	.word	138
	.byte	1,2,35,92,0,12
	.byte	'Os_AnyCoreType',0,11,160,7,3
	.word	5827
	.byte	12
	.byte	'Can_TxObjPriorityClassType',0,12,219,3,16
	.word	170
	.byte	20
	.byte	'Can_TxHwObjectConfigType',0,12,231,3,16,8,14
	.byte	'MsgObjId',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'HwControllerId',0
	.word	138
	.byte	1,2,35,1,14
	.byte	'TxObjPriorityClass',0
	.word	170
	.byte	4,2,35,4,0,12
	.byte	'Can_TxHwObjectConfigType',0,12,252,3,3
	.word	6104
	.byte	20
	.byte	'Can_RxHwObjectConfigType',0,12,129,4,16,12,14
	.byte	'MaskRef',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'MsgId',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'MsgObjId',0
	.word	138
	.byte	1,2,35,8,14
	.byte	'HwControllerId',0
	.word	138
	.byte	1,2,35,9,0,12
	.byte	'Can_RxHwObjectConfigType',0,12,147,4,3
	.word	6240
	.byte	17,4
	.word	138
	.byte	18,3,0,20
	.byte	'Can_ControllerMOMapConfigType',0,12,181,4,16,4,14
	.byte	'ControllerMOMap',0
	.word	6380
	.byte	4,2,35,0,0,12
	.byte	'Can_ControllerMOMapConfigType',0,12,184,4,3
	.word	6389
	.byte	20
	.byte	'Can_NPCRValueType',0,12,188,4,16,2,14
	.byte	'Can_NPCRValue',0
	.word	276
	.byte	2,2,35,0,0,12
	.byte	'Can_NPCRValueType',0,12,191,4,3
	.word	6490
	.byte	20
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,194,4,16,8,14
	.byte	'CanControllerBaudrate',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'CanControllerBaudrateCfg',0
	.word	276
	.byte	2,2,35,4,0,12
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,198,4,3
	.word	6565
	.byte	4
	.word	6565
	.byte	3
	.word	6730
	.byte	20
	.byte	'Can_BaudrateConfigPtrType',0,12,201,4,16,4,14
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6735
	.byte	4,2,35,0,0,12
	.byte	'Can_BaudrateConfigPtrType',0,12,204,4,3
	.word	6740
	.byte	20
	.byte	'Can_EventHandlingType',0,12,226,4,16,4,14
	.byte	'CanEventType',0
	.word	6380
	.byte	4,2,35,0,0,12
	.byte	'Can_EventHandlingType',0,12,229,4,3
	.word	6840
	.byte	12
	.byte	'Rte_TransformerErrorCode',0,13,130,1,15
	.word	138
	.byte	12
	.byte	'Rte_TransformerClass',0,13,131,1,15
	.word	138
	.byte	13,13,168,1,9,12,14
	.byte	'in',0
	.word	2680
	.byte	4,2,35,0,14
	.byte	'out',0
	.word	2680
	.byte	4,2,35,4,14
	.byte	'used',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'lost_data',0
	.word	138
	.byte	1,2,35,10,0,12
	.byte	'Rte_QDynType',0,13,173,1,3
	.word	6986
	.byte	15,13,175,1,9,4,16
	.byte	'RTE_DRA',0,0,16
	.byte	'RTE_WOWP',0,1,16
	.byte	'RTE_TASK',0,2,16
	.byte	'RTE_ARE',0,3,16
	.byte	'RTE_EV',0,4,16
	.byte	'RTE_MSI',0,5,0,12
	.byte	'Rte_NotificationType',0,13,182,1,3
	.word	7073
	.byte	3
	.word	6986
	.byte	20
	.byte	'Rte_QCmnType',0,13,184,1,16,24,14
	.byte	'dynamic',0
	.word	7171
	.byte	4,2,35,0,14
	.byte	'copy',0
	.word	138
	.byte	1,2,35,4,14
	.byte	'queue_size',0
	.word	276
	.byte	2,2,35,6,14
	.byte	'element_size',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'buffer_start',0
	.word	2680
	.byte	4,2,35,12,14
	.byte	'buffer_end',0
	.word	2680
	.byte	4,2,35,16,14
	.byte	'notification_type',0
	.word	7073
	.byte	4,2,35,20,0,12
	.byte	'Rte_QCmnType',0,13,192,1,3
	.word	7176
	.byte	12
	.byte	'Rte_AlarmRefType',0,13,224,1,32
	.word	170
	.byte	12
	.byte	'Rte_AlarmIndexType',0,13,226,1,32
	.word	276
	.byte	17,128,8
	.word	138
	.byte	18,255,7,0,12
	.byte	'Impl_NVM_DstPtrType_1024',0,14,50,15
	.word	7414
	.byte	12
	.byte	'CanIf_u32_impl',0,14,69,16
	.word	170
	.byte	12
	.byte	'CanIf_u16_impl',0,14,71,16
	.word	276
	.byte	12
	.byte	'CanIf_u8_impl',0,14,73,15
	.word	138
	.byte	12
	.byte	'CanIf_ControllerModeType_Enum_impl',0,14,88,15
	.word	138
	.byte	12
	.byte	'CanIf_PduModeType_Enum_impl',0,14,90,15
	.word	138
	.byte	13,14,92,9,2,14
	.byte	'DeviceMode',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'ChannelMode',0
	.word	138
	.byte	1,2,35,1,0,12
	.byte	'CanIf_ControllerStateType_struct_impl',0,14,95,3
	.word	7605
	.byte	12
	.byte	'CanIf_NotifStatusType_Enum_impl',0,14,100,15
	.word	138
	.byte	12
	.byte	'CanSM_boolean_Impl',0,14,120,15
	.word	138
	.byte	12
	.byte	'CanSM_u8_Impl',0,14,123,15
	.word	138
	.byte	12
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,14,128,1,15
	.word	138
	.byte	12
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,14,132,1,15
	.word	138
	.byte	12
	.byte	'CanSM_u16_Impl',0,14,136,1,16
	.word	276
	.byte	12
	.byte	'CanSM_TimerStateType_Enum_impl',0,14,138,1,15
	.word	138
	.byte	13,14,140,1,9,4,14
	.byte	'cntTick_u16',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'stTimer',0
	.word	138
	.byte	1,2,35,2,0,12
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,14,143,1,3
	.word	7946
	.byte	12
	.byte	'Com_impl_u16',0,14,154,1,16
	.word	276
	.byte	12
	.byte	'Com_impl_u8',0,14,157,1,15
	.word	138
	.byte	12
	.byte	'ComM_uint32_Impl',0,14,173,1,16
	.word	170
	.byte	12
	.byte	'ComM_uint16_Impl',0,14,175,1,16
	.word	276
	.byte	12
	.byte	'ComM_uint8_Impl',0,14,177,1,15
	.word	138
	.byte	12
	.byte	'ComM_bool_Impl',0,14,179,1,15
	.word	138
	.byte	13,14,181,1,9,24,14
	.byte	'ChannelState_e',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'LightTimeoutCtr_u32',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'ChannelMode_u8',0
	.word	138
	.byte	1,2,35,10,14
	.byte	'BusSmMode_u8',0
	.word	138
	.byte	1,2,35,11,14
	.byte	'UserRequestCtr_u8',0
	.word	138
	.byte	1,2,35,12,14
	.byte	'PassiveRequestState_u8',0
	.word	138
	.byte	1,2,35,13,14
	.byte	'PncRequestCtr_u8',0
	.word	138
	.byte	1,2,35,14,14
	.byte	'InhibitionReqStatus_u8',0
	.word	138
	.byte	1,2,35,15,14
	.byte	'NmNetworkRequestStatus_b',0
	.word	138
	.byte	1,2,35,16,14
	.byte	'DiagnosticRequestState_b',0
	.word	138
	.byte	1,2,35,17,14
	.byte	'CommunicationAllowed_b',0
	.word	138
	.byte	1,2,35,18,14
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	138
	.byte	1,2,35,19,14
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	138
	.byte	1,2,35,20,14
	.byte	'NmNetworkModeStatus_b',0
	.word	138
	.byte	1,2,35,21,0,12
	.byte	'ComM_ChannelStruct_Impl',0,14,197,1,3
	.word	8178
	.byte	13,14,206,1,9,10,14
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'LimitToNoComCtr_u16',0
	.word	276
	.byte	2,2,35,2,14
	.byte	'RequestedUserMode_t',0
	.word	138
	.byte	1,2,35,4,14
	.byte	'IndicatedUserMode_t',0
	.word	138
	.byte	1,2,35,5,14
	.byte	'numChannelsInFullCom_u8',0
	.word	138
	.byte	1,2,35,6,14
	.byte	'numChannelsInSilentCom_u8',0
	.word	138
	.byte	1,2,35,7,14
	.byte	'numChannelsInNoCom_u8',0
	.word	138
	.byte	1,2,35,8,0,12
	.byte	'ComM_UserStruct_Impl',0,14,214,1,3
	.word	8682
	.byte	12
	.byte	'Dcm_IOOperationResponseType',0,14,252,1,15
	.word	138
	.byte	12
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	14,138,2,15
	.word	138
	.byte	12
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,14,146,2,15
	.word	138
	.byte	12
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,14,150,2,15
	.word	138
	.byte	12
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,14,154,2,15
	.word	138
	.byte	12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,14,243,3,34
	.word	7425
	.byte	17,128,8
	.word	138
	.byte	18,255,7,0,12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,14,246,3,34
	.word	7425
	.byte	12
	.byte	'Rte_TaskRefType',0,15,184,1,32
	.word	3912
	.byte	12
	.byte	'Rte_EventRefType',0,15,185,1,32
	.word	138
	.byte	12
	.byte	'Rte_EventType',0,15,186,1,32
	.word	170
	.byte	12
	.byte	'Rte_REActCounterType',0,15,252,1,15
	.word	138
	.byte	3
	.word	138
	.byte	12
	.byte	'Rte_REActCounterRefType',0,15,253,1,58
	.word	9604
	.byte	13,15,255,1,9,8,14
	.byte	'task',0
	.word	9500
	.byte	4,2,35,0,14
	.byte	'acnt',0
	.word	9609
	.byte	4,2,35,4,0,12
	.byte	'Rte_REContainerType',0,15,130,2,3
	.word	9642
	.byte	4
	.word	3652
	.byte	3
	.word	9706
	.byte	3
	.word	138
	.byte	4
	.word	9642
	.byte	3
	.word	9721
	.byte	12
	.byte	'Rte_REContainerRefType',0,15,132,2,60
	.word	9726
	.byte	12
	.byte	'Rte_MSICounterType',0,15,149,2,16
	.word	276
	.byte	3
	.word	276
	.byte	12
	.byte	'Rte_MSICounterRefType',0,15,150,2,56
	.word	9791
	.byte	12
	.byte	'Rte_MSIPendingFlagType',0,15,152,2,17
	.word	138
	.byte	3
	.word	138
	.byte	12
	.byte	'Rte_MSIPendingFlagRefType',0,15,153,2,60
	.word	9859
	.byte	13,15,163,2,9,24,14
	.byte	'counter',0
	.word	9796
	.byte	4,2,35,0,14
	.byte	'incCounter',0
	.word	138
	.byte	1,2,35,4,14
	.byte	'pending',0
	.word	9864
	.byte	4,2,35,8,14
	.byte	'osTask',0
	.word	9500
	.byte	4,2,35,12,14
	.byte	'acnt',0
	.word	9609
	.byte	4,2,35,16,14
	.byte	'osEvent',0
	.word	138
	.byte	1,2,35,20,14
	.byte	'MSIInit',0
	.word	276
	.byte	2,2,35,22,0,12
	.byte	'Rte_MSITableEntry',0,15,172,2,3
	.word	9899
	.byte	3
	.word	276
	.byte	3
	.word	138
	.byte	12
	.byte	'Rte_TaskArrayIndex',0,15,179,2,16
	.word	138
	.byte	12
	.byte	'Rte_NrWaitingTasks',0,15,180,2,16
	.word	138
	.byte	13,15,182,2,9,4,14
	.byte	'pending',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'count',0
	.word	138
	.byte	1,2,35,1,14
	.byte	'firstWaitingTask',0
	.word	138
	.byte	1,2,35,2,0,12
	.byte	'Rte_WaitableDatum',0,15,186,2,3
	.word	10117
	.byte	3
	.word	10117
	.byte	13,15,226,2,9,12,14
	.byte	'event_id',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'wd',0
	.word	10209
	.byte	4,2,35,4,14
	.byte	'timeout',0
	.word	170
	.byte	4,2,35,8,0,12
	.byte	'Rte_WOWP_NotificationType',0,15,230,2,3
	.word	10214
	.byte	4
	.word	10214
	.byte	3
	.word	10303
	.byte	12
	.byte	'Rte_WOWP_NotificationRefType',0,15,232,2,66
	.word	10308
	.byte	12
	.byte	'Rte_ARE_NotificationType',0,15,234,2,29
	.word	9642
	.byte	20
	.byte	'Rte_QTaskType',0,15,243,2,16,28,14
	.byte	'cmn',0
	.word	7176
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	9500
	.byte	4,2,35,24,0,12
	.byte	'Rte_QTaskType',0,15,246,2,3
	.word	10385
	.byte	20
	.byte	'Rte_QREType',0,15,250,2,16,28,14
	.byte	'cmn',0
	.word	7176
	.byte	24,2,35,0,14
	.byte	're',0
	.word	9731
	.byte	4,2,35,24,0,12
	.byte	'Rte_QREType',0,15,253,2,3
	.word	10456
	.byte	4
	.word	9642
	.byte	3
	.word	10521
	.byte	20
	.byte	'Rte_QWWPType',0,15,129,3,16,28,14
	.byte	'cmn',0
	.word	7176
	.byte	24,2,35,0,14
	.byte	'wwp',0
	.word	10313
	.byte	4,2,35,24,0,12
	.byte	'Rte_QWWPType',0,15,132,3,3
	.word	10531
	.byte	4
	.word	10214
	.byte	3
	.word	10599
	.byte	20
	.byte	'Rte_QEvType',0,15,136,3,16,36,14
	.byte	'cmn',0
	.word	7176
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	9500
	.byte	4,2,35,24,14
	.byte	'mask',0
	.word	138
	.byte	1,2,35,28,14
	.byte	'acnt',0
	.word	9609
	.byte	4,2,35,32,0,12
	.byte	'Rte_QEvType',0,15,141,3,3
	.word	10609
	.byte	20
	.byte	'Rte_QMSIType',0,15,145,3,16,48,14
	.byte	'cmn',0
	.word	7176
	.byte	24,2,35,0,14
	.byte	'task',0
	.word	9500
	.byte	4,2,35,24,14
	.byte	'mask',0
	.word	138
	.byte	1,2,35,28,14
	.byte	'acnt',0
	.word	9609
	.byte	4,2,35,32,14
	.byte	'msiCounter',0
	.word	9796
	.byte	4,2,35,36,14
	.byte	'msiPending',0
	.word	9864
	.byte	4,2,35,40,14
	.byte	'msiLimit',0
	.word	276
	.byte	2,2,35,44,0,12
	.byte	'Rte_QMSIType',0,15,153,3,3
	.word	10704
	.byte	13,16,76,9,8,14
	.byte	'TimePeriodFact',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'TimeOffsetFact',0
	.word	276
	.byte	2,2,35,2,14
	.byte	'RepetitionPeriodFact',0
	.word	276
	.byte	2,2,35,4,14
	.byte	'NumOfRepetitions',0
	.word	138
	.byte	1,2,35,6,14
	.byte	'Mode',0
	.word	138
	.byte	1,2,35,7,0,12
	.byte	'Com_TransModeInfo',0,16,93,2
	.word	10859
	.byte	4
	.word	10859
	.byte	3
	.word	11009
	.byte	12
	.byte	'Com_TMConstPtrType',0,16,103,65
	.word	11014
	.byte	13,16,136,1,9,12,14
	.byte	'Init_Val',0
	.word	170
	.byte	4,2,35,0,14
	.byte	'txSignalFields',0
	.word	276
	.byte	2,2,35,4,14
	.byte	'Bit_Pos',0
	.word	138
	.byte	1,2,35,6,14
	.byte	'BitSize',0
	.word	138
	.byte	1,2,35,7,14
	.byte	'IpduRef',0
	.word	138
	.byte	1,2,35,8,14
	.byte	'General',0
	.word	138
	.byte	1,2,35,9,0,12
	.byte	'Com_Prv_xTxSigCfg_tst',0,16,201,1,2
	.word	11046
	.byte	13,16,247,1,9,16,14
	.byte	'Notification_Cbk',0
	.word	2099
	.byte	4,2,35,0,14
	.byte	'Init_Val',0
	.word	170
	.byte	4,2,35,4,14
	.byte	'Bit_Pos',0
	.word	138
	.byte	1,2,35,8,14
	.byte	'SigBuff_Index',0
	.word	138
	.byte	1,2,35,9,14
	.byte	'BitSize',0
	.word	138
	.byte	1,2,35,10,14
	.byte	'IpduRef',0
	.word	138
	.byte	1,2,35,11,14
	.byte	'General',0
	.word	138
	.byte	1,2,35,12,14
	.byte	'rxSignalFields',0
	.word	138
	.byte	1,2,35,13,0,12
	.byte	'Com_Prv_xRxSigCfg_tst',0,16,171,2,2
	.word	11194
	.byte	13,16,211,5,9,24,14
	.byte	'BuffPtr',0
	.word	155
	.byte	4,2,35,0,14
	.byte	'Com_TMConstPtr',0
	.word	11014
	.byte	4,2,35,4,14
	.byte	'Size',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'Timeout_Fact',0
	.word	276
	.byte	2,2,35,10,14
	.byte	'Min_Delay_Time_Fact',0
	.word	276
	.byte	2,2,35,12,14
	.byte	'No_Of_Sig_Ref',0
	.word	276
	.byte	2,2,35,14,14
	.byte	'PdurId',0
	.word	276
	.byte	2,2,35,16,14
	.byte	'TxSigId_Index',0
	.word	138
	.byte	1,2,35,18,14
	.byte	'txIPduFields',0
	.word	276
	.byte	2,2,35,20,14
	.byte	'MainFunctionRef',0
	.word	138
	.byte	1,2,35,22,14
	.byte	'PaddingByte',0
	.word	138
	.byte	1,2,35,23,0,12
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,16,162,6,3
	.word	11391
	.byte	13,16,137,7,9,20,14
	.byte	'BuffPtr',0
	.word	155
	.byte	4,2,35,0,14
	.byte	'TimeOutNotification_Cbk',0
	.word	2099
	.byte	4,2,35,4,14
	.byte	'Size',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'FirstTimeout_Factor',0
	.word	276
	.byte	2,2,35,10,14
	.byte	'Timeout_Fact',0
	.word	276
	.byte	2,2,35,12,14
	.byte	'No_Of_Sig_Ref',0
	.word	276
	.byte	2,2,35,14,14
	.byte	'RxSigId_Index',0
	.word	138
	.byte	1,2,35,16,14
	.byte	'MainFunctionRef',0
	.word	138
	.byte	1,2,35,17,14
	.byte	'rxIPduFields',0
	.word	138
	.byte	1,2,35,18,0,12
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,16,197,7,3
	.word	11670
	.byte	13,16,219,7,9,4,14
	.byte	'FirstIpdu_Index',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'NoOfRxPdus',0
	.word	276
	.byte	2,2,35,2,0,12
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,16,224,7,3
	.word	11921
	.byte	13,16,244,7,9,1,14
	.byte	'txSigRAMFields',0
	.word	138
	.byte	1,2,35,0,0,12
	.byte	'Com_TxSignalFlagType',0,16,248,7,2
	.word	12010
	.byte	13,16,167,8,9,1,14
	.byte	'rxSigRAMFields',0
	.word	138
	.byte	1,2,35,0,0,12
	.byte	'Com_RxSignalFlagType',0,16,171,8,2
	.word	12071
	.byte	13,16,135,9,9,16,14
	.byte	'CurrentTxModePtr',0
	.word	11019
	.byte	4,2,35,0,14
	.byte	'Com_MinDelayTick',0
	.word	276
	.byte	2,2,35,4,14
	.byte	'Com_Tick_Tx',0
	.word	276
	.byte	2,2,35,6,14
	.byte	'Com_n_Tick_Tx',0
	.word	276
	.byte	2,2,35,8,14
	.byte	'Com_TickTxTimeout',0
	.word	276
	.byte	2,2,35,10,14
	.byte	'Com_TxFlags',0
	.word	276
	.byte	2,2,35,12,14
	.byte	'Com_n',0
	.word	138
	.byte	1,2,35,14,14
	.byte	'Com_TransMode',0
	.word	138
	.byte	1,2,35,15,0,12
	.byte	'Com_TxIpduRamData',0,16,189,9,3
	.word	12132
	.byte	4
	.word	10859
	.byte	3
	.word	12348
	.byte	13,16,218,9,9,6,14
	.byte	'RxIPduLength',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'RxTicks_u16',0
	.word	276
	.byte	2,2,35,2,14
	.byte	'RxFlags',0
	.word	138
	.byte	1,2,35,4,0,12
	.byte	'Com_RxIpduRamData',0,16,245,9,2
	.word	12358
	.byte	3
	.word	276
	.byte	13,16,128,10,9,8,14
	.byte	'RxGwQueuePtr',0
	.word	12452
	.byte	4,2,35,0,14
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	138
	.byte	1,2,35,4,14
	.byte	'Com_RxGwQueueRead_ux',0
	.word	138
	.byte	1,2,35,5,0,12
	.byte	'Com_RxGwQueueRAMType',0,16,133,10,2
	.word	12457
	.byte	13,16,138,10,9,4,14
	.byte	'indexGwMapSigDestIdArray',0
	.word	276
	.byte	2,2,35,0,14
	.byte	'destCount',0
	.word	138
	.byte	1,2,35,2,0,12
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,16,142,10,2
	.word	12577
	.byte	13,16,147,10,9,2,14
	.byte	'GwMap_DestId',0
	.word	276
	.byte	2,2,35,0,0,12
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,16,150,10,2
	.word	12671
	.byte	13,16,183,10,9,4,14
	.byte	'StartIPduId',0
	.word	138
	.byte	1,2,35,0,14
	.byte	'NumOfIpdus',0
	.word	138
	.byte	1,2,35,1,14
	.byte	'TimeBaseInMs',0
	.word	138
	.byte	1,2,35,2,0,12
	.byte	'Com_MainFunctionCfgType',0,16,188,10,3
	.word	12736
	.byte	13,16,194,10,9,12,14
	.byte	'Com_SigType_pu8',0
	.word	155
	.byte	4,2,35,0,14
	.byte	'Com_SigType_pu16',0
	.word	510
	.byte	4,2,35,4,14
	.byte	'Com_SigType_pu32',0
	.word	596
	.byte	4,2,35,8,0,12
	.byte	'Com_Prv_xRxRamBuf_tst',0,16,253,10,3
	.word	12839
	.byte	12
	.byte	'rba_BswSrv_uint64',0,1,66,28
	.word	1065
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L9:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,38,0,73,19
	.byte	0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,11,0,0
	.byte	0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,46,1,49,19,0,0,10,5,0,49,19,0,0,11,21,0,54
	.byte	15,0,0,12,22,0,3,8,58,15,59,15,57,15,73,19,0,0,13,19,1,58,15,59,15,57,15,11,15,0,0,14,13,0,3,8,73,19,11
	.byte	15,56,9,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0,17,1,1,11,15,73,19,0,0,18,33,0,47
	.byte	15,0,0,19,21,0,54,15,39,12,0,0,20,19,1,3,8,58,15,59,15,57,15,11,15,0,0,21,59,0,3,8,0,0,22,21,1,54,15,39
	.byte	12,0,0,23,5,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0,26
	.byte	21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L10:
	.word	.L35-.L34
.L34:
	.half	3
	.word	.L37-.L36
.L36:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0,0
.L37:
.L35:
	.sdecl	'.debug_info',debug,cluster('Com_ByteCopy')
	.sect	'.debug_info'
.L11:
	.word	315
	.half	3
	.word	.L12
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L14,.L13
	.byte	2
	.word	.L7
	.byte	3
	.byte	'Com_ByteCopy',0,1,22,21,1,1,1
	.word	.L6,.L16,.L5
	.byte	4
	.byte	'dest',0,1,22,73
	.word	.L17,.L18
	.byte	4
	.byte	'src',0,1,23,75
	.word	.L19,.L20
	.byte	4
	.byte	'Len',0,1,24,57
	.word	.L21,.L22
	.byte	5
	.word	.L6,.L16
	.byte	6
	.word	.L23,.L6,.L4
	.byte	7
	.word	.L24,.L25
	.byte	7
	.word	.L26,.L27
	.byte	7
	.word	.L28,.L29
	.byte	8
	.word	.L30,.L6,.L4
	.byte	9
	.byte	'ctLoop_u32',0,2,134,2,12
	.word	.L21,.L31
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Com_ByteCopy')
	.sect	'.debug_abbrev'
.L12:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6
	.byte	0,0,0
	.sdecl	'.debug_line',debug,cluster('Com_ByteCopy')
	.sect	'.debug_line'
.L13:
	.word	.L39-.L38
.L38:
	.half	3
	.word	.L41-.L40
.L40:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_ByteCopy.c',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L41:
	.byte	4,2,5,20,7,0,5,2
	.word	.L6
	.byte	3,135,2,1,5,50,9
	.half	.L32-.L6
	.byte	1,5,22,9
	.half	.L3-.L32
	.byte	3,2,1,5,20,9
	.half	.L42-.L3
	.byte	1,5,18,9
	.half	.L43-.L42
	.byte	3,1,1,9
	.half	.L44-.L43
	.byte	3,1,1,5,62,9
	.half	.L45-.L44
	.byte	3,124,1,5,50,9
	.half	.L2-.L45
	.byte	1,5,5,7,9
	.half	.L46-.L2
	.byte	3,7,1,4,1,5,1,9
	.half	.L4-.L46
	.byte	3,144,126,1,7,9
	.half	.L15-.L4
	.byte	0,1,1
.L39:
	.sdecl	'.debug_ranges',debug,cluster('Com_ByteCopy')
	.sect	'.debug_ranges'
.L14:
	.word	-1,.L6,0,.L15-.L6,0,0
	.sdecl	'.debug_loc',debug,cluster('Com_ByteCopy')
	.sect	'.debug_loc'
.L5:
	.word	-1,.L6,0,.L16-.L6
	.half	2
	.byte	138,0
	.word	0,0
.L22:
	.word	-1,.L6,0,.L16-.L6
	.half	1
	.byte	84
	.word	0,0
.L31:
	.word	-1,.L6,.L32-.L6,.L16-.L6
	.half	1
	.byte	95
	.word	0,0
.L18:
	.word	-1,.L6,0,.L16-.L6
	.half	1
	.byte	100
	.word	0,0
.L29:
	.word	0,0
.L20:
	.word	-1,.L6,0,.L16-.L6
	.half	1
	.byte	101
	.word	0,0
.L25:
	.word	0,0
.L27:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L47:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Com_ByteCopy')
	.sect	'.debug_frame'
	.word	20
	.word	.L47,.L6,.L16-.L6
	.byte	8,18,8,19,8,22,8,23

; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    32  #define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    33  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_ByteCopy.c	    34  

	; Module end
