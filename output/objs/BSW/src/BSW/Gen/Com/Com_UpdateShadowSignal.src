	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15008a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_UpdateShadowSignal.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_UpdateShadowSignal.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_UpdateShadowSignal.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	13342
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_UpdateShadowSignal.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	148
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	165
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	148
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	148
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	258
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	148
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	148
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	148
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	148
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBits_u8u8u8_u8_Inl',0,3,1,179,3,20
	.word	148
	.byte	1,1,4
	.byte	'Data',0,1,179,3,56
	.word	148
	.byte	4
	.byte	'BitStartPn',0,1,179,3,68
	.word	148
	.byte	4
	.byte	'BitLn',0,1,179,3,86
	.word	148
	.byte	5,0,6
	.word	165
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	508
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	148
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	148
	.byte	5,0,6
	.word	258
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	594
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	148
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	148
	.byte	5,0,6
	.word	148
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	680
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	148
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	148
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	148
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	258
	.byte	5,0,8
	.word	187
	.byte	9
	.word	227
	.byte	9
	.word	241
	.byte	5,0,8
	.word	274
	.byte	9
	.word	314
	.byte	9
	.word	328
	.byte	5,0,8
	.word	345
	.byte	9
	.word	384
	.byte	9
	.word	398
	.byte	5,0,8
	.word	415
	.byte	9
	.word	457
	.byte	9
	.word	471
	.byte	9
	.word	491
	.byte	5,0,8
	.word	513
	.byte	9
	.word	548
	.byte	9
	.word	562
	.byte	9
	.word	577
	.byte	5,0,8
	.word	599
	.byte	9
	.word	634
	.byte	9
	.word	648
	.byte	9
	.word	663
	.byte	5,0,8
	.word	685
	.byte	9
	.word	719
	.byte	9
	.word	733
	.byte	9
	.word	748
	.byte	5,0,8
	.word	765
	.byte	9
	.word	810
	.byte	5,0,10,1,6
	.word	977
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	979
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	1002
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	148
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	165
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	258
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	1068
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	148
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	148
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	148
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	165
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	148
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	148
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	148
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	1169
	.byte	11
	.byte	'PduIdType',0,5,22,19
	.word	165
	.byte	11
	.byte	'PduLengthType',0,5,26,19
	.word	165
	.byte	14,6,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,6,118,3
	.word	1359
	.byte	11
	.byte	'Com_SignalIdType',0,7,100,16
	.word	165
	.byte	11
	.byte	'Com_SignalGroupIdType',0,7,102,16
	.word	165
	.byte	11
	.byte	'Com_IpduIdType',0,7,104,15
	.word	148
	.byte	11
	.byte	'Com_GrpSignalIdType',0,7,107,18
	.word	148
	.byte	11
	.byte	'Com_TxIntSignalIdType',0,8,138,3,18
	.word	148
	.byte	11
	.byte	'Com_RxIntSignalIdType',0,8,139,3,18
	.word	148
	.byte	11
	.byte	'Com_BitsizeType',0,8,155,3,17
	.word	148
	.byte	11
	.byte	'Com_BitpositionType',0,8,156,3,15
	.word	148
	.byte	11
	.byte	'Com_RxGwQueueIndexType',0,8,161,3,15
	.word	148
	.byte	11
	.byte	'Com_SigBuffIndexType',0,8,164,3,15
	.word	148
	.byte	11
	.byte	'Com_SigMaxType',0,8,198,3,16
	.word	258
	.byte	11
	.byte	'Com_MainFuncType',0,8,231,3,16
	.word	148
	.byte	11
	.byte	'Com_NumOfIpdusType',0,8,233,3,15
	.word	148
	.byte	11
	.byte	'Com_TimeBaseType',0,8,235,3,15
	.word	148
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	258
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	165
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	148
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	258
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1867
	.byte	16,68
	.word	258
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	1947
	.byte	68,2,35,0,0,16,68
	.word	1956
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1978
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	258
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	258
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2038
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2038
	.byte	18,1,1,6
	.word	2123
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2126
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	148
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2189
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	258
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	165
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	258
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	258
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	258
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	594
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	165
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	165
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2496
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2589
	.byte	20
	.byte	'void',0,6
	.word	2701
	.byte	21,1,1,22
	.word	148
	.byte	22
	.word	2707
	.byte	0,6
	.word	2712
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2726
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	258
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	258
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2038
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2038
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2038
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2038
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2761
	.byte	6
	.word	2761
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2959
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	148
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	258
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2761
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3038
	.byte	6
	.word	3038
	.byte	23
	.word	3099
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2131
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3104
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	258
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2038
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	148
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3109
	.byte	6
	.word	2123
	.byte	23
	.word	3109
	.byte	6
	.word	3268
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3273
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	258
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	258
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	258
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	258
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	258
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3381
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	258
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	258
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	258
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3445
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	148
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	1987
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2761
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3543
	.byte	16,68
	.word	1956
	.byte	17,0,0,6
	.word	3543
	.byte	23
	.word	3669
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3674
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2131
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3381
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3445
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3445
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	165
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	258
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2038
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	148
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3679
	.byte	23
	.word	3679
	.byte	6
	.word	3929
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	3934
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	3957
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3445
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4044
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4067
	.byte	6
	.word	4067
	.byte	23
	.word	4147
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4152
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3445
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4157
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	258
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4256
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	148
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	258
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4351
	.byte	26
	.word	148
	.byte	1,1,6
	.word	4437
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4444
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	258
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4480
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4508
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4527
	.byte	6
	.word	4527
	.byte	23
	.word	4605
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4610
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4449
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4256
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2707
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	148
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4615
	.byte	6
	.word	4437
	.byte	23
	.word	4615
	.byte	6
	.word	4767
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4772
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4798
	.byte	23
	.word	.L6-.L3
	.byte	6
	.word	4998
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5003
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5008
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4798
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	165
	.byte	2,2,35,12,0,6
	.word	5035
	.byte	23
	.word	5128
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5133
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4777
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	148
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	165
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	148
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	148
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	148
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5138
	.byte	23
	.word	5138
	.byte	6
	.word	5318
	.byte	23
	.word	4615
	.byte	6
	.word	5328
	.byte	27
	.word	2431
	.byte	27
	.word	3381
	.byte	27
	.word	3278
	.byte	27
	.word	3939
	.byte	27
	.word	3445
	.byte	27
	.word	148
	.byte	27
	.word	3939
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	1867
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5338
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5343
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5348
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5353
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5358
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	2964
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2761
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	148
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5363
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2038
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	148
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5368
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2038
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	148
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	148
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	148
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5373
	.byte	6
	.word	258
	.byte	23
	.word	3109
	.byte	6
	.word	5829
	.byte	23
	.word	3679
	.byte	6
	.word	5839
	.byte	6
	.word	2761
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	258
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	258
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	258
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	258
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	1987
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	148
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5854
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	258
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	258
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6131
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6267
	.byte	16,4
	.word	148
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6407
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6416
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	165
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6517
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	165
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6592
	.byte	23
	.word	6592
	.byte	6
	.word	6757
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6762
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6767
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6407
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6867
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	148
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	148
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2707
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2707
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	148
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7013
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7100
	.byte	6
	.word	7013
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7198
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	148
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	165
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2707
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2707
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7100
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7203
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	258
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	165
	.byte	16,128,8
	.word	148
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7441
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	258
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	165
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	148
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	148
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	148
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	148
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7632
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	148
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	148
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	148
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	148
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	148
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	165
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	148
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	148
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7973
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	165
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	148
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	258
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	165
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	148
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	148
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	148
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	148
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	148
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	148
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	148
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	148
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	148
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	148
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	148
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	148
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8205
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	165
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	148
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	148
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	148
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	148
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	148
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8709
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	148
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	148
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	148
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	148
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	148
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7452
	.byte	16,128,8
	.word	148
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7452
	.byte	11
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3939
	.byte	11
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	148
	.byte	11
	.byte	'Rte_EventType',0,14,186,1,32
	.word	258
	.byte	11
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	148
	.byte	6
	.word	148
	.byte	11
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	9631
	.byte	12,14,255,1,9,8,13
	.byte	'task',0
	.word	9527
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9636
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	9669
	.byte	23
	.word	3679
	.byte	6
	.word	9733
	.byte	6
	.word	148
	.byte	23
	.word	9669
	.byte	6
	.word	9748
	.byte	11
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9753
	.byte	11
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	165
	.byte	6
	.word	165
	.byte	11
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9818
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	148
	.byte	6
	.word	148
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9886
	.byte	12,14,163,2,9,24,13
	.byte	'counter',0
	.word	9823
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	148
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	9891
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9527
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9636
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	148
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	165
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9926
	.byte	6
	.word	165
	.byte	6
	.word	148
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	148
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	148
	.byte	12,14,182,2,9,4,13
	.byte	'pending',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	148
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	148
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	10144
	.byte	6
	.word	10144
	.byte	12,14,226,2,9,12,13
	.byte	'event_id',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10236
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	258
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	10241
	.byte	23
	.word	10241
	.byte	6
	.word	10330
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	10335
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	9669
	.byte	19
	.byte	'Rte_QTaskType',0,14,243,2,16,28,13
	.byte	'cmn',0
	.word	7203
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9527
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	10412
	.byte	19
	.byte	'Rte_QREType',0,14,250,2,16,28,13
	.byte	'cmn',0
	.word	7203
	.byte	24,2,35,0,13
	.byte	're',0
	.word	9758
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,14,253,2,3
	.word	10483
	.byte	23
	.word	9669
	.byte	6
	.word	10548
	.byte	19
	.byte	'Rte_QWWPType',0,14,129,3,16,28,13
	.byte	'cmn',0
	.word	7203
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10340
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	10558
	.byte	23
	.word	10241
	.byte	6
	.word	10626
	.byte	19
	.byte	'Rte_QEvType',0,14,136,3,16,36,13
	.byte	'cmn',0
	.word	7203
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9527
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	148
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9636
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	10636
	.byte	19
	.byte	'Rte_QMSIType',0,14,145,3,16,48,13
	.byte	'cmn',0
	.word	7203
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9527
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	148
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9636
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	9823
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	9891
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	165
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10731
	.byte	12,15,52,9,1,28
	.byte	'isEventTrig',0,1
	.word	148
	.byte	1,7,2,35,0,28
	.byte	'isTriggerIpduSendWithMetadata',0,1
	.word	148
	.byte	1,6,2,35,0,28
	.byte	'isGwIpduSend',0,1
	.word	148
	.byte	1,5,2,35,0,28
	.byte	'isModeChangd',0,1
	.word	148
	.byte	1,4,2,35,0,28
	.byte	'sigTransProp',0,1
	.word	148
	.byte	1,3,2,35,0,28
	.byte	'isTimeoutReq',0,1
	.word	148
	.byte	1,2,2,35,0,28
	.byte	'ignoreRepetitions',0,1
	.word	148
	.byte	1,1,2,35,0,0,11
	.byte	'Com_SendIpduInfo',0,15,61,3
	.word	10886
	.byte	12,15,76,9,8,13
	.byte	'TimePeriodFact',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'TimeOffsetFact',0
	.word	165
	.byte	2,2,35,2,13
	.byte	'RepetitionPeriodFact',0
	.word	165
	.byte	2,2,35,4,13
	.byte	'NumOfRepetitions',0
	.word	148
	.byte	1,2,35,6,13
	.byte	'Mode',0
	.word	148
	.byte	1,2,35,7,0,11
	.byte	'Com_TransModeInfo',0,15,93,2
	.word	11106
	.byte	23
	.word	11106
	.byte	6
	.word	11256
	.byte	11
	.byte	'Com_TMConstPtrType',0,15,103,65
	.word	11261
	.byte	12,15,136,1,9,12,13
	.byte	'Init_Val',0
	.word	258
	.byte	4,2,35,0,13
	.byte	'txSignalFields',0
	.word	165
	.byte	2,2,35,4,13
	.byte	'Bit_Pos',0
	.word	148
	.byte	1,2,35,6,13
	.byte	'BitSize',0
	.word	148
	.byte	1,2,35,7,13
	.byte	'IpduRef',0
	.word	148
	.byte	1,2,35,8,13
	.byte	'General',0
	.word	148
	.byte	1,2,35,9,0,11
	.byte	'Com_Prv_xTxSigCfg_tst',0,15,201,1,2
	.word	11293
	.byte	12,15,247,1,9,16,13
	.byte	'Notification_Cbk',0
	.word	2126
	.byte	4,2,35,0,13
	.byte	'Init_Val',0
	.word	258
	.byte	4,2,35,4,13
	.byte	'Bit_Pos',0
	.word	148
	.byte	1,2,35,8,13
	.byte	'SigBuff_Index',0
	.word	148
	.byte	1,2,35,9,13
	.byte	'BitSize',0
	.word	148
	.byte	1,2,35,10,13
	.byte	'IpduRef',0
	.word	148
	.byte	1,2,35,11,13
	.byte	'General',0
	.word	148
	.byte	1,2,35,12,13
	.byte	'rxSignalFields',0
	.word	148
	.byte	1,2,35,13,0,11
	.byte	'Com_Prv_xRxSigCfg_tst',0,15,171,2,2
	.word	11441
	.byte	23
	.word	11441
	.byte	6
	.word	11638
	.byte	11
	.byte	'Com_RxSigConstPtrType',0,15,180,2,68
	.word	11643
	.byte	12,15,211,5,9,24,13
	.byte	'BuffPtr',0
	.word	680
	.byte	4,2,35,0,13
	.byte	'Com_TMConstPtr',0
	.word	11261
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'Timeout_Fact',0
	.word	165
	.byte	2,2,35,10,13
	.byte	'Min_Delay_Time_Fact',0
	.word	165
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	165
	.byte	2,2,35,14,13
	.byte	'PdurId',0
	.word	165
	.byte	2,2,35,16,13
	.byte	'TxSigId_Index',0
	.word	148
	.byte	1,2,35,18,13
	.byte	'txIPduFields',0
	.word	165
	.byte	2,2,35,20,13
	.byte	'MainFunctionRef',0
	.word	148
	.byte	1,2,35,22,13
	.byte	'PaddingByte',0
	.word	148
	.byte	1,2,35,23,0,11
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,15,162,6,3
	.word	11679
	.byte	23
	.word	11679
	.byte	6
	.word	11958
	.byte	11
	.byte	'Com_TxIpduConstPtrType',0,15,171,6,72
	.word	11963
	.byte	12,15,137,7,9,20,13
	.byte	'BuffPtr',0
	.word	680
	.byte	4,2,35,0,13
	.byte	'TimeOutNotification_Cbk',0
	.word	2126
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'FirstTimeout_Factor',0
	.word	165
	.byte	2,2,35,10,13
	.byte	'Timeout_Fact',0
	.word	165
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	165
	.byte	2,2,35,14,13
	.byte	'RxSigId_Index',0
	.word	148
	.byte	1,2,35,16,13
	.byte	'MainFunctionRef',0
	.word	148
	.byte	1,2,35,17,13
	.byte	'rxIPduFields',0
	.word	148
	.byte	1,2,35,18,0,11
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,15,197,7,3
	.word	12000
	.byte	12,15,219,7,9,4,13
	.byte	'FirstIpdu_Index',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'NoOfRxPdus',0
	.word	165
	.byte	2,2,35,2,0,11
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,15,224,7,3
	.word	12251
	.byte	12,15,244,7,9,1,13
	.byte	'txSigRAMFields',0
	.word	148
	.byte	1,2,35,0,0,11
	.byte	'Com_TxSignalFlagType',0,15,248,7,2
	.word	12340
	.byte	12,15,167,8,9,1,13
	.byte	'rxSigRAMFields',0
	.word	148
	.byte	1,2,35,0,0,11
	.byte	'Com_RxSignalFlagType',0,15,171,8,2
	.word	12401
	.byte	12,15,135,9,9,16,13
	.byte	'CurrentTxModePtr',0
	.word	11266
	.byte	4,2,35,0,13
	.byte	'Com_MinDelayTick',0
	.word	165
	.byte	2,2,35,4,13
	.byte	'Com_Tick_Tx',0
	.word	165
	.byte	2,2,35,6,13
	.byte	'Com_n_Tick_Tx',0
	.word	165
	.byte	2,2,35,8,13
	.byte	'Com_TickTxTimeout',0
	.word	165
	.byte	2,2,35,10,13
	.byte	'Com_TxFlags',0
	.word	165
	.byte	2,2,35,12,13
	.byte	'Com_n',0
	.word	148
	.byte	1,2,35,14,13
	.byte	'Com_TransMode',0
	.word	148
	.byte	1,2,35,15,0,11
	.byte	'Com_TxIpduRamData',0,15,189,9,3
	.word	12462
	.byte	23
	.word	11106
	.byte	6
	.word	12678
	.byte	6
	.word	12462
	.byte	11
	.byte	'Com_TxIpduRamPtrType',0,15,198,9,62
	.word	12688
	.byte	12,15,218,9,9,6,13
	.byte	'RxIPduLength',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'RxTicks_u16',0
	.word	165
	.byte	2,2,35,2,13
	.byte	'RxFlags',0
	.word	148
	.byte	1,2,35,4,0,11
	.byte	'Com_RxIpduRamData',0,15,245,9,2
	.word	12723
	.byte	6
	.word	165
	.byte	12,15,128,10,9,8,13
	.byte	'RxGwQueuePtr',0
	.word	12817
	.byte	4,2,35,0,13
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	148
	.byte	1,2,35,4,13
	.byte	'Com_RxGwQueueRead_ux',0
	.word	148
	.byte	1,2,35,5,0,11
	.byte	'Com_RxGwQueueRAMType',0,15,133,10,2
	.word	12822
	.byte	12,15,138,10,9,4,13
	.byte	'indexGwMapSigDestIdArray',0
	.word	165
	.byte	2,2,35,0,13
	.byte	'destCount',0
	.word	148
	.byte	1,2,35,2,0,11
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,15,142,10,2
	.word	12942
	.byte	12,15,147,10,9,2,13
	.byte	'GwMap_DestId',0
	.word	165
	.byte	2,2,35,0,0,11
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,15,150,10,2
	.word	13036
	.byte	12,15,183,10,9,4,13
	.byte	'StartIPduId',0
	.word	148
	.byte	1,2,35,0,13
	.byte	'NumOfIpdus',0
	.word	148
	.byte	1,2,35,1,13
	.byte	'TimeBaseInMs',0
	.word	148
	.byte	1,2,35,2,0,11
	.byte	'Com_MainFunctionCfgType',0,15,188,10,3
	.word	13101
	.byte	12,15,194,10,9,12,13
	.byte	'Com_SigType_pu8',0
	.word	680
	.byte	4,2,35,0,13
	.byte	'Com_SigType_pu16',0
	.word	508
	.byte	4,2,35,4,13
	.byte	'Com_SigType_pu32',0
	.word	594
	.byte	4,2,35,8,0,11
	.byte	'Com_Prv_xRxRamBuf_tst',0,15,253,10,3
	.word	13204
	.byte	11
	.byte	'rba_BswSrv_uint64',0,16,66,28
	.word	1068
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0
	.byte	54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0
	.byte	73,19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	26,21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_UpdateShadowSignal.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     3  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     4  /* Preprocessor includes                                                                          */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     5  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     6  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     7  #include "Com_Prv_Inl.h"
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     8  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	     9  /* Global functions (declared in header files )                                                   */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    10  /**************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    11  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    12  /***************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    13   Function name    : Com_UpdateShadowSignal
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    14   Syntax           : void Com_UpdateShadowSignal(Com_SignalIdType  SignalId,const void*   SignalDataPtr)
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    15   Description      : Service updates a group signal with the data, referenced by SignalDataPtr
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    16                      The update of the group signal data is done in the shadow buffer
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    17   Parameter        : SignalId -> Id of the GroupSignal
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    18                    : SignalDataPtr -> Pointer to the address where application data is available
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    19   Return value     : None
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    20   ***************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    21  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    22  #ifdef COM_TX_SIGNALGROUP
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    23  #define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    24  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    25  /* HIS METRIC V(G), CALLS VIOLATION IN Com_UpdateShadowSignal:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    26     Com_UpdateShadowSignal function contains simple "if" and "else if" statements and necesary function calls.
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    27     HIS metric compliance would decrease readability and maintainability */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    28  FUNC(void, COM_CODE) Com_UpdateShadowSignal(VAR(Com_SignalIdType, AUTOMATIC)  SignalId,
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    29                                              P2CONST(void, AUTOMATIC, COM_APPL_DATA) SignalDataPtr)
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    30  {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    31  #ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    32      Com_TxSigGrpRamPtrType TxSigGrpRamPtr;      /* Local pointer to hold the status of the SignalGroup */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    33  #endif
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    34      /* Local pointer to hold the address of Tx GroupSignal static configuration */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    35      Com_TxGrpSigConstPtrType  TxGrpSigConstPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    36      VAR(Com_SigMaxType, AUTOMATIC) TxNewVal;    /* Local variable to store the new value */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    37      VAR(uint8, AUTOMATIC) ConstByteValue_u8;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    38      VAR(uint8, AUTOMATIC) Type;                 /* Type of the GroupSignal */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    39      VAR(Com_MainFuncType,AUTOMATIC) txMainFuncId;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    40  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    41      /*Call DET Function to check for the DET Error COM_E_UNINIT, COM_E_PARAM and COM_E_PARAM_POINTER*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    42  #if(COM_CONFIGURATION_USE_DET == STD_ON)
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    43      if (Com_Prv_DETCheck_Param_Ptr((SignalId >= COM_GET_NUM_TX_GRPSIGNALS),(SignalDataPtr == NULL_PTR),
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    44                                      COMServiceId_UpdateShadowSignal))
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    45  #endif
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    46      {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    47          SignalId = COM_GET_TXGRPSIGNAL_ID(SignalId);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    48  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    49          TxGrpSigConstPtr = COM_GET_TXGRPSIG_CONSTDATA(SignalId);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    50  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    51          /* Fetch the Tx-MainFunction internal Id */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    52          txMainFuncId = (COM_GET_TX_IPDU_CONSTDATA((COM_GET_TXSIGGRP_CONSTDATA(TxGrpSigConstPtr->SigGrpRef))->IpduRef))->MainFunctionRef;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    53  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    54          /*Get the Bit field Byte value*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    55          ConstByteValue_u8 = TxGrpSigConstPtr->txGrpSigFields;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    56          /*     Type = TxGrpSigConstPtr->txGrpSigFields.Type; */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    57          Type = Com_GetValue(TXGRPSIG,_TYPE,ConstByteValue_u8);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    58          TxNewVal = 0u;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    59  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    60          /* Even if the IPDU Group is stopped this API will update the data in the Internal Buffer */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    61          if(Type != (uint8)COM_UINT8_N)
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    62          {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    63              switch(Type)
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    64              {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    65              /* MR12 RULE 11.5 VIOLATION: SignalDataPtr is defined as void pointer in AUTOSAR specification,
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    66                 so suppressing warning "Cast from a pointer to void to a pointer to object". */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    67              case COM_UINT8:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    68              case COM_SINT8:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    69                  /* Update the Src_Buf with the data i.e typecast the data to uint8*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    70                  TxNewVal = *(P2CONST(uint8, AUTOMATIC, COM_APPL_DATA))SignalDataPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    71                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    72              case COM_UINT16:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    73              case COM_SINT16:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    74                  /* Update the Src_Buf with the data i.e typecast the data to uint16*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    75                  TxNewVal = *(P2CONST(uint16, AUTOMATIC, COM_APPL_DATA))SignalDataPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    76                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    77              case COM_BOOLEAN:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    78                  /* Update the Src_Buf with the data i.e typecast the data to the boolean variable*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    79                  TxNewVal = COM_BOOL_TO_UNSIGNED(*(P2CONST(boolean,AUTOMATIC,COM_APPL_DATA))SignalDataPtr);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    80                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    81              case COM_UINT32:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    82              case COM_SINT32:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    83                  /* Update the Src_Buf with the data i.e typecast the data to the uint32 variable*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    84                  TxNewVal = *(P2CONST(uint32,AUTOMATIC,COM_APPL_DATA))SignalDataPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    85                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    86  #ifdef COM_TXGRPSIG_INT64
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    87              case COM_UINT64:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    88              case COM_SINT64:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    89                  /* Update the Src_Buf with the data i.e typecast the data to the uint64 variable*/
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    90                  TxNewVal = *(P2CONST(uint64, AUTOMATIC, COM_APPL_DATA))SignalDataPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    91                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    92  #endif /* #ifdef COM_TXGRPSIG_INT64 */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    93  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    94  /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    95  #ifdef COM_GRPSIGFLOAT32SUPP
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    96              case COM_FLOAT32:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    97                  /* Convert the float value into 32 bit stream and then pack the value into shadow buffer */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    98                  /* MR12 DIR 1.1 VIOLATION: Explicit cast is provided in line with rba_BswSrv_MemCopy() definition.
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	    99                     But the void pointer is always deferenced to a type, based on the pointers alignment.
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   100                     Hence the alignment warning can safely be ignored. */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   101                  (void)rba_BswSrv_MemCopy( (void *)(&TxNewVal),(const void *)SignalDataPtr, 4 );
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   102                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   103  #endif /* #ifdef COM_GRPSIGFLOAT32SUPP */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   104  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   105  #ifdef COM_TXGRPSIG_FLOAT64SUPP
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   106              case COM_FLOAT64:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   107                  /* Pack the float value into float64 shadow buffer */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   108                  /* MR12 RULE 11.5 VIOLATION: SignalDataPtr is defined as void pointer in AUTOSAR specification,
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   109                     so suppressing warning "Cast from a pointer to void to a pointer to object". */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   110                  SchM_Enter_Com_TxGrpSigBuffer();
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   111                  COM_GET_TXGRPSIGTYPEFLOAT64_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index) =
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   112                          *(P2CONST(float64,AUTOMATIC,COM_APPL_DATA))SignalDataPtr;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   113                  SchM_Exit_Com_TxGrpSigBuffer();
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   114                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   115  #endif
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   116  /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   117  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   118              default:
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   119                  /**
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   120                   * Default case is mandatory in switch syntax. Moreover only AUTOSAR Com defined signal types are
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   121                   * allowed to be configured, hence default case is intentionally left empty.
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   122                   */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   123                  break;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   124              }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   125  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   126              /* Call a generic internal api which copies the TxNewVal data into corresponding GroupSignal buffer */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   127              Com_CopyTxGroupSignalData(SignalId, TxNewVal, txMainFuncId);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   128              /* Before updating endianess conversion should be performed */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   129              /* Update the Signal in the Shadow buffer, here you have to find the bitposition in the shadow
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   130              buffer for this signal  */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   131  #ifdef COM_EffectiveSigGrpTOC
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   132              TxSigGrpRamPtr = &COM_GET_TXSIGGRPFLAG(TxGrpSigConstPtr->SigGrpRef);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   133              /* Check if the group signal contributes to evaluation of transfer property of signal group */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   134              if((Com_GetValue(TXGRPSIG,_TP,ConstByteValue_u8) != COM_FALSE)  &&
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   135                 (COM_GET_OLDVALTRIGONCHANGE(TxGrpSigConstPtr->OldValue_Index) != (Com_OldValTrigOnChngType)TxNewVal))
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   136              {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   137                  /* Update the old value */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   138                  COM_GET_OLDVALTRIGONCHANGE(TxGrpSigConstPtr->OldValue_Index) = (Com_OldValTrigOnChngType)TxNewVal;
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   139                  /* TxSigGrpRamPtr ->txSigGrpRAMFields.TrigOnChange = COM_TRUE */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   140                  Com_SetRamValue(TXSIGGRP,_TRIGONCHNG,TxSigGrpRamPtr ->txSigGrpRAMFields,COM_TRUE);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   141              }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   142  #endif
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   143          }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   144          else
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   145          {
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   146              /* The locks inside the function Com_ByteCopy() are removed.
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   147               * Hence locks are used here
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   148               * Copy the *SignalDataPtr to all the Bytes of this signal in Shadow buffer */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   149              SchM_Enter_Com_TxGrpSigBuffer();
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   150  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   151              /* MR12 RULE 11.5 VIOLATION: SignalDataPtr is defined as void pointer in AUTOSAR specification,
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   152                 so suppressing warning "Cast from a pointer to void to a pointer to object". */
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   153              Com_ByteCopy(&COM_GET_TXGRPSIGTYPEU8_BUFF(txMainFuncId, TxGrpSigConstPtr->TxGrpSigBuff_Index),
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   154                      (P2CONST(uint8, AUTOMATIC, COM_APPL_DATA))SignalDataPtr,(uint32)TxGrpSigConstPtr->BitSize);
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   155  
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   156              SchM_Exit_Com_TxGrpSigBuffer();
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   157          }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   158      }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   159  }
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   160  #define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   161  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   162  #endif
; BSW\src\BSW\Gen\Com\src\Com_UpdateShadowSignal.c	   163  

	; Module end
