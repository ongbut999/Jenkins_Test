	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14324a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Com\\Com_Filter.src BSW\\src\\BSW\\Gen\\Com\\src\\Com_Filter.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Filter.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	12853
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Filter.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	136
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	153
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	136
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	136
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	246
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	136
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	136
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	136
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	136
	.byte	5,0,6
	.word	153
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	403
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	136
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	136
	.byte	5,0,6
	.word	246
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	489
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	136
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	136
	.byte	5,0,6
	.word	136
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	575
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	136
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	136
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	136
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	246
	.byte	5,0,8
	.word	175
	.byte	9
	.word	215
	.byte	9
	.word	229
	.byte	5,0,8
	.word	262
	.byte	9
	.word	302
	.byte	9
	.word	316
	.byte	5,0,8
	.word	333
	.byte	9
	.word	372
	.byte	9
	.word	386
	.byte	5,0,8
	.word	408
	.byte	9
	.word	443
	.byte	9
	.word	457
	.byte	9
	.word	472
	.byte	5,0,8
	.word	494
	.byte	9
	.word	529
	.byte	9
	.word	543
	.byte	9
	.word	558
	.byte	5,0,8
	.word	580
	.byte	9
	.word	614
	.byte	9
	.word	628
	.byte	9
	.word	643
	.byte	5,0,8
	.word	660
	.byte	9
	.word	705
	.byte	5,0,10,1,6
	.word	850
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	852
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,3,76,25
	.word	875
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	136
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	153
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	246
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,3,111,30
	.word	941
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	136
	.byte	11
	.byte	'StatusType',0,4,191,1,27
	.word	136
	.byte	11
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	136
	.byte	12,4,206,1,9,8,13
	.byte	'vendorID',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	153
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	136
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	136
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	136
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	1042
	.byte	11
	.byte	'PduIdType',0,5,22,19
	.word	153
	.byte	11
	.byte	'PduLengthType',0,5,26,19
	.word	153
	.byte	14,6,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,6,118,3
	.word	1232
	.byte	11
	.byte	'Com_SignalIdType',0,7,100,16
	.word	153
	.byte	11
	.byte	'Com_SignalGroupIdType',0,7,102,16
	.word	153
	.byte	11
	.byte	'Com_IpduIdType',0,7,104,15
	.word	136
	.byte	11
	.byte	'Com_GrpSignalIdType',0,7,107,18
	.word	136
	.byte	11
	.byte	'Com_TxIntSignalIdType',0,8,138,3,18
	.word	136
	.byte	11
	.byte	'Com_RxIntSignalIdType',0,8,139,3,18
	.word	136
	.byte	11
	.byte	'Com_BitsizeType',0,8,155,3,17
	.word	136
	.byte	11
	.byte	'Com_BitpositionType',0,8,156,3,15
	.word	136
	.byte	11
	.byte	'Com_RxGwQueueIndexType',0,8,161,3,15
	.word	136
	.byte	11
	.byte	'Com_SigBuffIndexType',0,8,164,3,15
	.word	136
	.byte	11
	.byte	'Com_MainFuncType',0,8,231,3,16
	.word	136
	.byte	11
	.byte	'Com_NumOfIpdusType',0,8,233,3,15
	.word	136
	.byte	11
	.byte	'Com_TimeBaseType',0,8,235,3,15
	.word	136
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	246
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	153
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	136
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	246
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1716
	.byte	16,68
	.word	246
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	1796
	.byte	68,2,35,0,0,16,68
	.word	1805
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1827
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	246
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	246
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	1887
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	1887
	.byte	18,1,1,6
	.word	1972
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	1975
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	136
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2038
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	246
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	153
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	246
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	246
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	246
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	489
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	153
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	153
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2345
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2438
	.byte	20
	.byte	'void',0,6
	.word	2550
	.byte	21,1,1,22
	.word	136
	.byte	22
	.word	2556
	.byte	0,6
	.word	2561
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2575
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	246
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	246
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	1887
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	1887
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	1887
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	1887
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2610
	.byte	6
	.word	2610
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2808
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	136
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	246
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2610
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	2887
	.byte	6
	.word	2887
	.byte	23
	.word	2948
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	1980
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	2953
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	246
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	1887
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	136
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	2958
	.byte	6
	.word	1972
	.byte	23
	.word	2958
	.byte	6
	.word	3117
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3122
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	246
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	246
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	246
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	246
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	246
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3230
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	246
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	246
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	246
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3294
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	136
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	1836
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2610
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	136
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3392
	.byte	16,68
	.word	1805
	.byte	17,0,0,6
	.word	3392
	.byte	23
	.word	3518
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3523
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	1980
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3230
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3294
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3294
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	153
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	246
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	1887
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	136
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	136
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3528
	.byte	23
	.word	3528
	.byte	6
	.word	3778
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	3783
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	3806
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3294
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	3893
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	3916
	.byte	6
	.word	3916
	.byte	23
	.word	3996
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4001
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3294
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4006
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	246
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4105
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	136
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	246
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4200
	.byte	26
	.word	136
	.byte	1,1,6
	.word	4286
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4293
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	246
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4329
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4357
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4376
	.byte	6
	.word	4376
	.byte	23
	.word	4454
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4459
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4298
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4105
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2556
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	136
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4464
	.byte	6
	.word	4286
	.byte	23
	.word	4464
	.byte	6
	.word	4616
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4621
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4647
	.byte	23
	.word	.L6-.L3
	.byte	6
	.word	4847
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	4852
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	4857
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	4647
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	153
	.byte	2,2,35,12,0,6
	.word	4884
	.byte	23
	.word	4977
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	4982
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4626
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	136
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	153
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	136
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	136
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	136
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	4987
	.byte	23
	.word	4987
	.byte	6
	.word	5167
	.byte	23
	.word	4464
	.byte	6
	.word	5177
	.byte	27
	.word	2280
	.byte	27
	.word	3230
	.byte	27
	.word	3127
	.byte	27
	.word	3788
	.byte	27
	.word	3294
	.byte	27
	.word	136
	.byte	27
	.word	3788
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	1716
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5187
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5192
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5197
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5202
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5207
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	2813
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2610
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	136
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5212
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	1887
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	136
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5217
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	1887
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	136
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	136
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	136
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5222
	.byte	6
	.word	246
	.byte	23
	.word	2958
	.byte	6
	.word	5678
	.byte	23
	.word	3528
	.byte	6
	.word	5688
	.byte	6
	.word	2610
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	246
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	246
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	246
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	246
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	1836
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	136
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5703
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	246
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	136
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	246
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5980
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	136
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	136
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6116
	.byte	16,4
	.word	136
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6256
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6265
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	153
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6366
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	153
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6441
	.byte	23
	.word	6441
	.byte	6
	.word	6606
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6611
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6616
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6256
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6716
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	136
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	136
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2556
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2556
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	136
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6862
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6949
	.byte	6
	.word	6862
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7047
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	136
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	153
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2556
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2556
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	6949
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7052
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	246
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	153
	.byte	16,128,8
	.word	136
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7290
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	246
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	153
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	136
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	136
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	136
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	136
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7481
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	136
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	136
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	136
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	136
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	136
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	153
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	136
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	136
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7822
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	153
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	136
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	246
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	153
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	136
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	136
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	136
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	136
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	136
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	136
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	136
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	136
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	136
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	136
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	136
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	136
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	136
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	136
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8054
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	153
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	136
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	136
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	136
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	136
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	136
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8558
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	136
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	136
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	136
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	136
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	136
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7301
	.byte	16,128,8
	.word	136
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7301
	.byte	11
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3788
	.byte	11
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	136
	.byte	11
	.byte	'Rte_EventType',0,14,186,1,32
	.word	246
	.byte	11
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	136
	.byte	6
	.word	136
	.byte	11
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	9480
	.byte	12,14,255,1,9,8,13
	.byte	'task',0
	.word	9376
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9485
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	9518
	.byte	23
	.word	3528
	.byte	6
	.word	9582
	.byte	6
	.word	136
	.byte	23
	.word	9518
	.byte	6
	.word	9597
	.byte	11
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9602
	.byte	11
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	153
	.byte	6
	.word	153
	.byte	11
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9667
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	136
	.byte	6
	.word	136
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9735
	.byte	12,14,163,2,9,24,13
	.byte	'counter',0
	.word	9672
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	136
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	9740
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9376
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9485
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	136
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	153
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9775
	.byte	6
	.word	153
	.byte	6
	.word	136
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	136
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	136
	.byte	12,14,182,2,9,4,13
	.byte	'pending',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	136
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	136
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	9993
	.byte	6
	.word	9993
	.byte	12,14,226,2,9,12,13
	.byte	'event_id',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10085
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	246
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	10090
	.byte	23
	.word	10090
	.byte	6
	.word	10179
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	10184
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	9518
	.byte	19
	.byte	'Rte_QTaskType',0,14,243,2,16,28,13
	.byte	'cmn',0
	.word	7052
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9376
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	10261
	.byte	19
	.byte	'Rte_QREType',0,14,250,2,16,28,13
	.byte	'cmn',0
	.word	7052
	.byte	24,2,35,0,13
	.byte	're',0
	.word	9607
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,14,253,2,3
	.word	10332
	.byte	23
	.word	9518
	.byte	6
	.word	10397
	.byte	19
	.byte	'Rte_QWWPType',0,14,129,3,16,28,13
	.byte	'cmn',0
	.word	7052
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10189
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	10407
	.byte	23
	.word	10090
	.byte	6
	.word	10475
	.byte	19
	.byte	'Rte_QEvType',0,14,136,3,16,36,13
	.byte	'cmn',0
	.word	7052
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9376
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	136
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9485
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	10485
	.byte	19
	.byte	'Rte_QMSIType',0,14,145,3,16,48,13
	.byte	'cmn',0
	.word	7052
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9376
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	136
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9485
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	9672
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	9740
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	153
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10580
	.byte	12,15,76,9,8,13
	.byte	'TimePeriodFact',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'TimeOffsetFact',0
	.word	153
	.byte	2,2,35,2,13
	.byte	'RepetitionPeriodFact',0
	.word	153
	.byte	2,2,35,4,13
	.byte	'NumOfRepetitions',0
	.word	136
	.byte	1,2,35,6,13
	.byte	'Mode',0
	.word	136
	.byte	1,2,35,7,0,11
	.byte	'Com_TransModeInfo',0,15,93,2
	.word	10735
	.byte	23
	.word	10735
	.byte	6
	.word	10885
	.byte	11
	.byte	'Com_TMConstPtrType',0,15,103,65
	.word	10890
	.byte	12,15,136,1,9,12,13
	.byte	'Init_Val',0
	.word	246
	.byte	4,2,35,0,13
	.byte	'txSignalFields',0
	.word	153
	.byte	2,2,35,4,13
	.byte	'Bit_Pos',0
	.word	136
	.byte	1,2,35,6,13
	.byte	'BitSize',0
	.word	136
	.byte	1,2,35,7,13
	.byte	'IpduRef',0
	.word	136
	.byte	1,2,35,8,13
	.byte	'General',0
	.word	136
	.byte	1,2,35,9,0,11
	.byte	'Com_Prv_xTxSigCfg_tst',0,15,201,1,2
	.word	10922
	.byte	12,15,247,1,9,16,13
	.byte	'Notification_Cbk',0
	.word	1975
	.byte	4,2,35,0,13
	.byte	'Init_Val',0
	.word	246
	.byte	4,2,35,4,13
	.byte	'Bit_Pos',0
	.word	136
	.byte	1,2,35,8,13
	.byte	'SigBuff_Index',0
	.word	136
	.byte	1,2,35,9,13
	.byte	'BitSize',0
	.word	136
	.byte	1,2,35,10,13
	.byte	'IpduRef',0
	.word	136
	.byte	1,2,35,11,13
	.byte	'General',0
	.word	136
	.byte	1,2,35,12,13
	.byte	'rxSignalFields',0
	.word	136
	.byte	1,2,35,13,0,11
	.byte	'Com_Prv_xRxSigCfg_tst',0,15,171,2,2
	.word	11070
	.byte	12,15,211,5,9,24,13
	.byte	'BuffPtr',0
	.word	575
	.byte	4,2,35,0,13
	.byte	'Com_TMConstPtr',0
	.word	10890
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'Timeout_Fact',0
	.word	153
	.byte	2,2,35,10,13
	.byte	'Min_Delay_Time_Fact',0
	.word	153
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	153
	.byte	2,2,35,14,13
	.byte	'PdurId',0
	.word	153
	.byte	2,2,35,16,13
	.byte	'TxSigId_Index',0
	.word	136
	.byte	1,2,35,18,13
	.byte	'txIPduFields',0
	.word	153
	.byte	2,2,35,20,13
	.byte	'MainFunctionRef',0
	.word	136
	.byte	1,2,35,22,13
	.byte	'PaddingByte',0
	.word	136
	.byte	1,2,35,23,0,11
	.byte	'Com_Prv_xTxIpduInfoCfg_tst',0,15,162,6,3
	.word	11267
	.byte	12,15,137,7,9,20,13
	.byte	'BuffPtr',0
	.word	575
	.byte	4,2,35,0,13
	.byte	'TimeOutNotification_Cbk',0
	.word	1975
	.byte	4,2,35,4,13
	.byte	'Size',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'FirstTimeout_Factor',0
	.word	153
	.byte	2,2,35,10,13
	.byte	'Timeout_Fact',0
	.word	153
	.byte	2,2,35,12,13
	.byte	'No_Of_Sig_Ref',0
	.word	153
	.byte	2,2,35,14,13
	.byte	'RxSigId_Index',0
	.word	136
	.byte	1,2,35,16,13
	.byte	'MainFunctionRef',0
	.word	136
	.byte	1,2,35,17,13
	.byte	'rxIPduFields',0
	.word	136
	.byte	1,2,35,18,0,11
	.byte	'Com_Prv_xRxIpduInfoCfg_tst',0,15,197,7,3
	.word	11546
	.byte	12,15,219,7,9,4,13
	.byte	'FirstIpdu_Index',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'NoOfRxPdus',0
	.word	153
	.byte	2,2,35,2,0,11
	.byte	'Com_Prv_xIpduGrpInfoCfg_tst',0,15,224,7,3
	.word	11797
	.byte	12,15,244,7,9,1,13
	.byte	'txSigRAMFields',0
	.word	136
	.byte	1,2,35,0,0,11
	.byte	'Com_TxSignalFlagType',0,15,248,7,2
	.word	11886
	.byte	12,15,167,8,9,1,13
	.byte	'rxSigRAMFields',0
	.word	136
	.byte	1,2,35,0,0,11
	.byte	'Com_RxSignalFlagType',0,15,171,8,2
	.word	11947
	.byte	12,15,135,9,9,16,13
	.byte	'CurrentTxModePtr',0
	.word	10895
	.byte	4,2,35,0,13
	.byte	'Com_MinDelayTick',0
	.word	153
	.byte	2,2,35,4,13
	.byte	'Com_Tick_Tx',0
	.word	153
	.byte	2,2,35,6,13
	.byte	'Com_n_Tick_Tx',0
	.word	153
	.byte	2,2,35,8,13
	.byte	'Com_TickTxTimeout',0
	.word	153
	.byte	2,2,35,10,13
	.byte	'Com_TxFlags',0
	.word	153
	.byte	2,2,35,12,13
	.byte	'Com_n',0
	.word	136
	.byte	1,2,35,14,13
	.byte	'Com_TransMode',0
	.word	136
	.byte	1,2,35,15,0,11
	.byte	'Com_TxIpduRamData',0,15,189,9,3
	.word	12008
	.byte	23
	.word	10735
	.byte	6
	.word	12224
	.byte	12,15,218,9,9,6,13
	.byte	'RxIPduLength',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'RxTicks_u16',0
	.word	153
	.byte	2,2,35,2,13
	.byte	'RxFlags',0
	.word	136
	.byte	1,2,35,4,0,11
	.byte	'Com_RxIpduRamData',0,15,245,9,2
	.word	12234
	.byte	6
	.word	153
	.byte	12,15,128,10,9,8,13
	.byte	'RxGwQueuePtr',0
	.word	12328
	.byte	4,2,35,0,13
	.byte	'Com_RxGwQueueWrite_ux',0
	.word	136
	.byte	1,2,35,4,13
	.byte	'Com_RxGwQueueRead_ux',0
	.word	136
	.byte	1,2,35,5,0,11
	.byte	'Com_RxGwQueueRAMType',0,15,133,10,2
	.word	12333
	.byte	12,15,138,10,9,4,13
	.byte	'indexGwMapSigDestIdArray',0
	.word	153
	.byte	2,2,35,0,13
	.byte	'destCount',0
	.word	136
	.byte	1,2,35,2,0,11
	.byte	'Com_Prv_xGwMapSigCfg_tst',0,15,142,10,2
	.word	12453
	.byte	12,15,147,10,9,2,13
	.byte	'GwMap_DestId',0
	.word	153
	.byte	2,2,35,0,0,11
	.byte	'Com_Prv_xGwMapSigIdCfg_tst',0,15,150,10,2
	.word	12547
	.byte	12,15,183,10,9,4,13
	.byte	'StartIPduId',0
	.word	136
	.byte	1,2,35,0,13
	.byte	'NumOfIpdus',0
	.word	136
	.byte	1,2,35,1,13
	.byte	'TimeBaseInMs',0
	.word	136
	.byte	1,2,35,2,0,11
	.byte	'Com_MainFunctionCfgType',0,15,188,10,3
	.word	12612
	.byte	12,15,194,10,9,12,13
	.byte	'Com_SigType_pu8',0
	.word	575
	.byte	4,2,35,0,13
	.byte	'Com_SigType_pu16',0
	.word	403
	.byte	4,2,35,4,13
	.byte	'Com_SigType_pu32',0
	.word	489
	.byte	4,2,35,8,0,11
	.byte	'Com_Prv_xRxRamBuf_tst',0,15,253,10,3
	.word	12715
	.byte	11
	.byte	'rba_BswSrv_uint64',0,16,66,28
	.word	941
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0
	.byte	54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0
	.byte	73,19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0
	.byte	26,21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Filter.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Com\\Com_Cfg_Internal.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Com\\src\\Com_Prv_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     1  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     2  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     3  /*********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     4  * Preprocessor includes
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     5  *********************************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     6  #include "Com_Prv.h"
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     7  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     8  /*********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	     9  * Global functions (declared in header files )
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    10  *********************************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    11  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    12  /*********************************************************************************************************************
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    13   Function name    : Com_Filter
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    14   Syntax           : boolean Com_Filter(uint32 NewVal,uint8 Algorithm,Com_FilterType FilterIndex,boolean CallContext_b)
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    15   Description      : Service used for filtering the signal depending on the conditions
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    16   Parameter        : Algorithm -> Filter type
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    17                    : NewVal  -> New value for filtering
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    18                    : FilterIndex -> Filter Index
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    19                    : CallContext_b -> Whether to increment occurrence for ONE_EVERYN filters
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    20   Return value     : COM_TRUE/COM_FALSE
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    21  *********************************************************************************************************************/
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    22  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    23  #if (defined(COM_TxFilters) || defined(COM_RxFilters))
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    24  #define COM_START_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    25  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    26  FUNC(boolean, COM_CODE) Com_Filter( VAR(uint32, AUTOMATIC) NewVal, VAR(uint8, AUTOMATIC) Algorithm,
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    27                                      VAR(Com_FilterType, AUTOMATIC) FilterIndex, VAR(boolean,AUTOMATIC) CallContext_b )
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    28  {
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    29  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    30      VAR(boolean, AUTOMATIC) State;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    31  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    32      /* This ternary operator intializes the state variable with TRUE if the algorithm is COM_ALWAYS
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    33       * For all other filter algorithm's, it will be intialized with FALSE */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    34      State = ((Algorithm == COM_ALWAYS) ? COM_TRUE : COM_FALSE);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    35  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    36      switch(Algorithm)
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    37      {
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    38  #ifdef COM_F_MASKEDNEWEQUALSX
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    39       case COM_MASKED_NEW_EQUALS_X:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    40           State = ((NewVal & COM_GET_MASK_X(FilterIndex).Mask) == COM_GET_MASK_X(FilterIndex).X_Val);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    41           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    42  #endif /* #ifdef COM_F_MASKEDNEWEQUALSX */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    43  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    44  #ifdef COM_F_MASKEDNEWDIFFERSX
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    45       case COM_MASKED_NEW_DIFFERS_X:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    46           State = ((NewVal & COM_GET_MASK_X(FilterIndex).Mask) != COM_GET_MASK_X(FilterIndex).X_Val);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    47           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    48  #endif /* #ifdef COM_F_MASKEDNEWDIFFERSX */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    49  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    50  #ifdef COM_F_MASKEDNEWDIFFERSOLD
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    51       case COM_MASKED_NEW_DIFFERS_MASKED_OLD:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    52           State = ((NewVal & COM_GET_MASK(FilterIndex)) != (COM_GET_F_OLDVALUE(FilterIndex) & COM_GET_MASK(FilterIndex)));
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    53             if(State)
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    54              {
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    55                /* If Filter evaluates to TRUE then the New_value is placed into Old_Value */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    56                COM_GET_F_OLDVALUE(FilterIndex) = NewVal;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    57              }
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    58           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    59  #endif /* COM_F_MASKEDNEWDIFFERSOLD */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    60  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    61  #ifdef COM_F_NEWISWITHIN_POS
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    62       case COM_NEW_IS_WITHIN_POS:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    63           State = ((COM_GET_POSMINMAX(FilterIndex).Min <= NewVal) && (NewVal <= COM_GET_POSMINMAX(FilterIndex).Max));
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    64           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    65  #endif /* #ifdef COM_F_NEWISWITHIN_POS */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    66  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    67  #ifdef COM_F_NEWISWITHIN_NEG
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    68       case COM_NEW_IS_WITHIN_NEG:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    69           State = ((COM_GET_NEGMINMAX(FilterIndex).Min <= (sint32)NewVal) && ((sint32)NewVal <= COM_GET_NEGMINMAX(FilterIndex).Max));
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    70           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    71  #endif /* #ifdef COM_F_NEWISWITHIN_NEG */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    72  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    73  #ifdef COM_F_NEWISOUTSIDE_POS
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    74       case COM_NEW_IS_OUTSIDE_POS:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    75           State = ((NewVal < COM_GET_POSMINMAX(FilterIndex).Min) || (NewVal > COM_GET_POSMINMAX(FilterIndex).Max));
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    76           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    77  #endif /* #ifdef COM_F_NEWISOUTSIDE_POS */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    78  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    79  #ifdef COM_F_NEWISOUTSIDE_NEG
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    80       case COM_NEW_IS_OUTSIDE_NEG:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    81           State = (((sint32)NewVal < COM_GET_NEGMINMAX(FilterIndex).Min) || ((sint32)NewVal > COM_GET_NEGMINMAX(FilterIndex).Max));
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    82           break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    83  #endif /* #ifdef COM_F_NEWISOUTSIDE_NEG */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    84  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    85  #ifdef COM_F_ONEEVERYN
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    86       case COM_ONE_EVERY_N:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    87           State = (COM_GET_ONEEVERYN(FilterIndex).Occurrence == COM_GET_ONEEVERYN(FilterIndex).Offset);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    88           /* NOTE on CallContext_b:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    89            * 1.Currently the values for the parameter CallContext_b are COM_TRUE/COM_FALSE
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    90            * 2.It is used only for filter ONE_EVERYN */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    91           COM_GET_ONEEVERYN(FilterIndex).Occurrence += ((CallContext_b != COM_FALSE) ? 1u : 0u);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    92  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    93           COM_GET_ONEEVERYN(FilterIndex).Occurrence = ((COM_GET_ONEEVERYN(FilterIndex).Occurrence == COM_GET_ONEEVERYN(FilterIndex).Period)
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    94                                                              ? 0 : COM_GET_ONEEVERYN(FilterIndex).Occurrence);
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    95              break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    96  #endif /* #ifdef COM_F_ONEEVERYN */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    97  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    98       default:
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	    99               /* Default also covers algorithm == COM_NEVER case, hence there is no explicit case COM_NEVER */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   100               /**
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   101                * Default case is mandatory in switch syntax. Moreover only AUTOSAR Com defined filterAlgorithm(s)
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   102                * are allowed to be configured, hence default case is intentionally left empty.
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   103                */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   104              break;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   105      }
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   106  
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   107  #ifndef COM_F_ONEEVERYN
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   108    (void)CallContext_b;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   109  #endif
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   110      return State;
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   111  }
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   112  #define COM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   113  #include "Com_MemMap.h"
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   114  #endif /* #if (defined(COM_TxFilters) || defined(COM_RxFilters)) */
; BSW\src\BSW\Gen\Com\src\Com_Filter.c	   115  

	; Module end
