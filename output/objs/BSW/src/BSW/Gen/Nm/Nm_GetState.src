	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15968a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Nm\\Nm_GetState.src BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c'

	
$TC16X
	
	.sdecl	'.text.Nm_GetState.Nm_GetState',code,cluster('Nm_GetState')
	.sect	'.text.Nm_GetState.Nm_GetState'
	.align	2
	
	.global	Nm_GetState

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     1  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     2  /*
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     3   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     4   * Includes
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     5   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     6   */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     7  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     8  /* NM Interface private header file, this file is included only by Nm module */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	     9  #include "Nm_Priv.h"
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    10  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    11  /*
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    12   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    13   * Variables
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    14   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    15   */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    16  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    17  /*
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    18   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    19   * Defines
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    20   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    21   */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    22  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    23  /***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    24   * Function
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    25   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    26   ***************************************************************************************************
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    27   * Function Name: Nm_GetState
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    28  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    29   * Description:   This is the AUTOSAR interface to get the current state of NM,
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    30   *                this API calls either CanNm_GetState or FrNm_GetState based on the configuration.
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    31   *
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    32   * Parameter1:    NetworkHandle - Identification of the NM-channel
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    33   * Parameter2:    nmStatePtr    - Pointer to the location where the state of the network
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    34   *                                        management shall be copied.
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    35   * Parameter3:    nmModePtr     - Pointer to the location where the mode of the network
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    36   *                                        management shall be copied.
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    37   * Return:        Std_ReturnType
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    38   * Retval:        E_OK         - No error
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    39   * Retval:        E_NOT_OK     - Getting of NM state has failed
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    40   ****************************************************************************************************/
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    41  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    42  #define NM_START_SEC_CODE
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    43  #include "Nm_MemMap.h"
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    44  FUNC(Std_ReturnType, NM_CODE) Nm_GetState(
; Function Nm_GetState
.L13:
Nm_GetState:	.type	func
	mov	d8,d4
.L37:
	mov.aa	a12,a4
.L38:
	mov.aa	a13,a5
.L39:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    45                                           VAR(NetworkHandleType, AUTOMATIC) NetworkHandle,
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    46                                           P2VAR(Nm_StateType, AUTOMATIC, NM_APPL_DATA) nmStatePtr,
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    47                                           P2VAR(Nm_ModeType, AUTOMATIC, NM_APPL_DATA) nmModePtr
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    48                                          )
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    49  {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    50      P2CONST(Nm_ConfigType,AUTOMATIC,NM_APPL_CONST)      ConfDataPtr; /* Configuration pointer holds referrence of configuration data */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    51      P2CONST(Nm_BusNmApiType,AUTOMATIC,NM_APPL_CONST)    FuncPtr;     /* Pointer to Bus specific APIs */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    52      VAR(Std_ReturnType, AUTOMATIC)  RetVal;                           /* Return value */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    53      VAR(NetworkHandleType, AUTOMATIC) Nm_NetworkHandle;              /* Network handle is received from ComM */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    54      /**** End of declarations ****/
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    55  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    56      /* Receive the Internal NmChannel structure index from the received ComM NetworkHandle*/
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    57      Nm_NetworkHandle = NM_GET_HANDLE(NetworkHandle);
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    58  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    59      /* process only if the channel handle is within allowed range and the data pointer is valid */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    60      if ((Nm_NetworkHandle < NM_NUMBER_OF_CHANNELS) && (nmStatePtr != NULL_PTR) && (nmModePtr != NULL_PTR))
	jne	d8,#0,.L2
.L58:
	jz.a	a12,.L3
.L59:
	jz.a	a13,.L4
.L60:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    61      {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    62          /* Configuration pointer initialization */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    63          ConfDataPtr = &Nm_ConfData_cs[Nm_NetworkHandle];
	movh.a	a15,#@his(Nm_ConfData_cs)
	lea	a15,[a15]@los(Nm_ConfData_cs)
.L61:
	mul	d15,d8,#20
	addsc.a	a15,a15,d15,#0
.L40:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    64          /* Holds the reference to Bus specific APIs */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    65          FuncPtr = &Nm_BusNmApi[ConfDataPtr->BusNmType];
	ld.w	d15,[a15]4
.L62:
	mul	d15,d15,#60
.L63:
	movh.a	a15,#@his(Nm_BusNmApi)
.L41:
	lea	a15,[a15]@los(Nm_BusNmApi)
.L64:
	addsc.a	a15,a15,d15,#0
.L42:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    66  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    67          /* Calls the Bus specific API */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    68          RetVal = (*FuncPtr->BusNm_GetState)(NetworkHandle,nmStatePtr,nmModePtr);
	ld.a	a15,[a15]40
.L43:
	mov	d4,d8
	mov.aa	a4,a12
	mov.aa	a5,a13
	calli	a15
.L36:
	j	.L5
.L4:
.L3:
.L2:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    69      }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    70      else
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    71      {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    72          if (!(Nm_NetworkHandle < NM_NUMBER_OF_CHANNELS))
	jeq	d8,#0,.L6
.L65:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    73          {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    74              /* Report to DET as the network handle parameter is not a configured network handle */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    75               NM_DET_REPORT_ERROR(NetworkHandle, NM_SID_GETSTATE, NM_E_HANDLE_UNDEF);
	mov	d4,#29
.L44:
	mov	d6,#14
	mov	d7,#1
	mov	d5,d8
.L46:
	call	Det_ReportError
.L45:
	j	.L7
.L6:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    76          }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    77          else
.L7:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    78          {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    79              //do nothing
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    80          }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    81          if ((nmStatePtr == NULL_PTR) || (nmModePtr == NULL_PTR))
	jz.a	a12,.L8
.L66:
	jnz.a	a13,.L9
.L8:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    82          {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    83              /* Report to DET as the parameter passed is  a null pointer*/
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    84              NM_DET_REPORT_ERROR(NetworkHandle, NM_SID_GETSTATE, NM_E_PARAM_POINTER);
	mov	d4,#29
	mov	d6,#14
	mov	d7,#2
	mov	d5,d8
.L47:
	call	Det_ReportError
.L48:
	j	.L10
.L9:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    85          }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    86          else
.L10:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    87          {
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    88              //do nothing
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    89          }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    90  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    91  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    92          /* reject the call as pointers passed are not valid */
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    93          RetVal = E_NOT_OK;
	mov	d2,#1
.L5:

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    94      }
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    95  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    96  
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    97      return(RetVal);
	j	.L11

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    98  }
.L11:
	ret
.L24:
	
__Nm_GetState_function_end:
	.size	Nm_GetState,__Nm_GetState_function_end-Nm_GetState
.L22:
	; End of function
	
	.calls	'Nm_GetState','__INDIRECT__'
	.calls	'Nm_GetState','Det_ReportError'
	.extern	Det_ReportError
	.extern	Nm_ConfData_cs
	.extern	Nm_BusNmApi
	.extern	__INDIRECT__
	.calls	'Nm_GetState','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L15:
	.word	10268
	.half	3
	.word	.L16
	.byte	4
.L14:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L17
.L23:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Det_ReportError',0,1,112,16
	.word	136
	.byte	1,1,1,1,4
	.byte	'ModuleId',0,1,112,39
	.word	153
	.byte	4
	.byte	'InstanceId',0,1,112,55
	.word	136
	.byte	4
	.byte	'ApiId',0,1,112,73
	.word	136
	.byte	4
	.byte	'ErrorId',0,1,112,86
	.word	136
	.byte	0,5,2,67,9,4,6
	.byte	'NM_STATE_UNINIT',0,0,6
	.byte	'NM_STATE_BUS_SLEEP',0,1,6
	.byte	'NM_STATE_PREPARE_BUS_SLEEP',0,2,6
	.byte	'NM_STATE_READY_SLEEP',0,3,6
	.byte	'NM_STATE_NORMAL_OPERATION',0,4,6
	.byte	'NM_STATE_REPEAT_MESSAGE',0,5,6
	.byte	'NM_STATE_SYNCHRONIZE',0,6,6
	.byte	'NM_STATE_OFFLINE',0,7,0
.L26:
	.byte	7
	.word	270
	.byte	5,2,43,9,4,6
	.byte	'NM_MODE_BUS_SLEEP',0,0,6
	.byte	'NM_MODE_PREPARE_BUS_SLEEP',0,1,6
	.byte	'NM_MODE_SYNCHRONIZE',0,2,6
	.byte	'NM_MODE_NETWORK',0,3,0
.L28:
	.byte	7
	.word	468
	.byte	2
	.byte	'unsigned int',0,4,7,5,4,186,1,10,4,6
	.byte	'NM_BUS_TYPE_CAN',0,0,0,5,2,116,9,4,6
	.byte	'NM_ACTIVE_CHANNEL',0,0,6
	.byte	'NM_PASSIVE_CHANNEL',0,1,0,8,3,95,9,20,9
	.byte	'ShutdownDelay',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'BusNmType',0
	.word	583
	.byte	4,2,35,4,9
	.byte	'NmChannelType',0
	.word	608
	.byte	4,2,35,8,9
	.byte	'ClusterIdx',0
	.word	136
	.byte	1,2,35,12,9
	.byte	'comMHandle',0
	.word	136
	.byte	1,2,35,13,9
	.byte	'NmChannelSleepMaster',0
	.word	136
	.byte	1,2,35,14,9
	.byte	'NmSynchronizingNetwork',0
	.word	136
	.byte	1,2,35,15,9
	.byte	'NmNodeDetectionEnabled',0
	.word	136
	.byte	1,2,35,16,9
	.byte	'NmNodeIdEnabled',0
	.word	136
	.byte	1,2,35,17,9
	.byte	'NmRepeatMsgIndEnabled',0
	.word	136
	.byte	1,2,35,18,0,10
	.word	655
.L30:
	.byte	7
	.word	916
	.byte	11
	.word	136
	.byte	1,1,12
	.word	136
	.byte	0,7
	.word	926
	.byte	7
	.word	136
	.byte	11
	.word	136
	.byte	1,1,12
	.word	136
	.byte	12
	.word	944
	.byte	0,7
	.word	949
	.byte	7
	.word	270
	.byte	7
	.word	468
	.byte	11
	.word	136
	.byte	1,1,12
	.word	136
	.byte	12
	.word	972
	.byte	12
	.word	977
	.byte	0,7
	.word	982
	.byte	10
	.word	136
	.byte	7
	.word	1010
	.byte	11
	.word	136
	.byte	1,1,12
	.word	136
	.byte	12
	.word	1015
	.byte	0,7
	.word	1020
	.byte	11
	.word	136
	.byte	1,1,12
	.word	136
	.byte	12
	.word	136
	.byte	0,7
	.word	1043
	.byte	8,5,156,4,9,60,9
	.byte	'BusNm_NetworkRelease',0
	.word	939
	.byte	4,2,35,0,9
	.byte	'BusNm_NetworkRequest',0
	.word	939
	.byte	4,2,35,4,9
	.byte	'BusNm_PassiveStartUp',0
	.word	939
	.byte	4,2,35,8,9
	.byte	'BusNm_RequestBusSynchronization',0
	.word	939
	.byte	4,2,35,12,9
	.byte	'BusNm_CheckRemoteSleepIndication',0
	.word	967
	.byte	4,2,35,16,9
	.byte	'BusNm_DisableCommunication',0
	.word	939
	.byte	4,2,35,20,9
	.byte	'BusNm_EnableCommunication',0
	.word	939
	.byte	4,2,35,24,9
	.byte	'BusNm_GetLocalNodeIdentifier',0
	.word	967
	.byte	4,2,35,28,9
	.byte	'BusNm_GetNodeIdentifier',0
	.word	967
	.byte	4,2,35,32,9
	.byte	'BusNm_GetPduData',0
	.word	967
	.byte	4,2,35,36,9
	.byte	'BusNm_GetState',0
	.word	1005
	.byte	4,2,35,40,9
	.byte	'BusNm_GetUserData',0
	.word	967
	.byte	4,2,35,44,9
	.byte	'BusNm_RepeatMessageRequest',0
	.word	939
	.byte	4,2,35,48,9
	.byte	'BusNm_SetUserData',0
	.word	1038
	.byte	4,2,35,52,9
	.byte	'BusNm_SetSleepReadyBit',0
	.word	1061
	.byte	4,2,35,56,0,10
	.word	1066
.L32:
	.byte	7
	.word	1560
	.byte	13
	.byte	'__INDIRECT__',0,6,1,1,1,1,1,14,1,7
	.word	1590
	.byte	15
	.byte	'__codeptr',0,6,1,1
	.word	1592
	.byte	15
	.byte	'Nm_ModeType',0,2,49,3
	.word	468
	.byte	15
	.byte	'Nm_StateType',0,2,77,3
	.word	270
	.byte	15
	.byte	'Nm_ChannelType',0,2,120,3
	.word	608
	.byte	2
	.byte	'char',0,1,6,15
	.byte	'sint8',0,7,76,25
	.word	1679
	.byte	15
	.byte	'uint8',0,7,81,25
	.word	136
	.byte	15
	.byte	'uint16',0,7,91,25
	.word	153
	.byte	15
	.byte	'uint32',0,7,106,24
	.word	567
	.byte	2
	.byte	'unsigned long long int',0,8,7,15
	.byte	'uint64',0,7,111,30
	.word	1745
	.byte	15
	.byte	'boolean',0,7,127,25
	.word	136
	.byte	15
	.byte	'StatusType',0,8,191,1,27
	.word	136
	.byte	15
	.byte	'Std_ReturnType',0,8,199,1,15
	.word	136
	.byte	8,8,206,1,9,8,9
	.byte	'vendorID',0
	.word	153
	.byte	2,2,35,0,9
	.byte	'moduleID',0
	.word	153
	.byte	2,2,35,2,9
	.byte	'sw_major_version',0
	.word	136
	.byte	1,2,35,4,9
	.byte	'sw_minor_version',0
	.word	136
	.byte	1,2,35,5,9
	.byte	'sw_patch_version',0
	.word	136
	.byte	1,2,35,6,0,15
	.byte	'Std_VersionInfoType',0,8,213,1,3
	.word	1846
	.byte	15
	.byte	'PduIdType',0,9,22,19
	.word	153
	.byte	15
	.byte	'PduLengthType',0,9,26,19
	.word	153
	.byte	5,10,113,9,4,6
	.byte	'TP_DATACONF',0,0,6
	.byte	'TP_DATARETRY',0,1,6
	.byte	'TP_CONFPENDING',0,2,0,15
	.byte	'TpDataStateType',0,10,118,3
	.word	2036
	.byte	15
	.byte	'NetworkHandleType',0,10,128,1,17
	.word	136
	.byte	15
	.byte	'CanNm_TimerType',0,11,74,17
	.word	567
	.byte	15
	.byte	'Can_IdType',0,12,32,16
	.word	567
	.byte	15
	.byte	'Can_HwHandleType',0,12,43,16
	.word	153
	.byte	8,13,93,9,8,9
	.byte	'Class',0
	.word	136
	.byte	1,2,35,0,9
	.byte	'TIN',0
	.word	136
	.byte	1,2,35,1,9
	.byte	'ReturnAddress',0
	.word	567
	.byte	4,2,35,4,0,15
	.byte	'OsTrapInfoType',0,13,97,3
	.word	2207
	.byte	16,68
	.word	567
	.byte	17,16,0,8,13,154,1,9,68,9
	.byte	'store',0
	.word	2287
	.byte	68,2,35,0,0,16,68
	.word	2296
	.byte	17,0,0,15
	.byte	'Os_JumpBufType',0,13,156,1,3
	.word	2318
	.byte	15
	.byte	'Os_StackTraceType',0,13,174,1,18
	.word	567
	.byte	8,13,175,1,9,8,9
	.byte	'sp',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'ctx',0
	.word	567
	.byte	4,2,35,4,0,15
	.byte	'Os_StackValueType',0,13,175,1,63
	.word	2378
	.byte	15
	.byte	'Os_StackSizeType',0,13,176,1,27
	.word	2378
	.byte	18,1,1,7
	.word	2463
	.byte	15
	.byte	'Os_VoidVoidFunctionType',0,13,179,1,16
	.word	2466
	.byte	15
	.byte	'ApplicationType',0,13,193,1,23
	.word	136
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,13,198,1,16,2,9
	.byte	'app_id',0
	.word	136
	.byte	1,2,35,0,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,1,0,15
	.byte	'Os_ApplicationConfigurationType',0,13,201,1,3
	.word	2529
	.byte	15
	.byte	'Os_CoreStateType',0,13,203,1,16
	.word	567
	.byte	15
	.byte	'AreaIdType',0,13,204,1,16
	.word	153
	.byte	15
	.byte	'Os_PeripheralAddressType',0,13,212,1,22
	.word	567
	.byte	15
	.byte	'TickType',0,13,221,1,22
	.word	567
	.byte	15
	.byte	'Os_StopwatchTickType',0,13,225,1,22
	.word	567
	.byte	7
	.word	567
	.byte	15
	.byte	'Os_Lockable',0,13,234,1,18
	.word	2771
	.byte	15
	.byte	'CoreIdType',0,13,236,1,16
	.word	153
	.byte	15
	.byte	'SpinlockIdType',0,13,237,1,16
	.word	153
	.byte	5,13,239,1,9,4,6
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,6
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,15
	.byte	'TryToGetSpinlockType',0,13,239,1,74
	.word	2841
	.byte	5,13,174,2,9,4,6
	.byte	'APPLICATION_ACCESSIBLE',0,0,6
	.byte	'APPLICATION_RESTARTING',0,1,6
	.byte	'APPLICATION_TERMINATED',0,2,0,15
	.byte	'ApplicationStateType',0,13,174,2,92
	.word	2934
	.byte	20
	.byte	'void',0,7
	.word	3046
	.byte	21,1,1,12
	.word	136
	.byte	12
	.word	3052
	.byte	0,7
	.word	3057
	.byte	15
	.byte	'Os_FunctionEntryType',0,13,183,2,16
	.word	3071
	.byte	19
	.byte	'Os_MeterInfoType_s',0,13,193,2,16,48,9
	.byte	'elapsed',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'previous',0
	.word	567
	.byte	4,2,35,4,9
	.byte	'max',0
	.word	567
	.byte	4,2,35,8,9
	.byte	'cumulative',0
	.word	567
	.byte	4,2,35,12,9
	.byte	'stackbase',0
	.word	2378
	.byte	8,2,35,16,9
	.byte	'stackusage',0
	.word	2378
	.byte	8,2,35,24,9
	.byte	'stackmax',0
	.word	2378
	.byte	8,2,35,32,9
	.byte	'stackbudget',0
	.word	2378
	.byte	8,2,35,40,0,15
	.byte	'Os_MeterInfoType',0,13,202,2,3
	.word	3106
	.byte	7
	.word	3106
	.byte	15
	.byte	'Os_MeterInfoRefType',0,13,203,2,50
	.word	3304
	.byte	15
	.byte	'EventMaskType',0,13,206,2,15
	.word	136
	.byte	15
	.byte	'Os_imaskType',0,13,211,2,16
	.word	567
	.byte	19
	.byte	'Os_ISRDynType_s',0,13,213,2,16,48,9
	.byte	'meter',0
	.word	3106
	.byte	48,2,35,0,0,15
	.byte	'Os_ISRDynType',0,13,215,2,3
	.word	3383
	.byte	7
	.word	3383
	.byte	10
	.word	3444
	.byte	19
	.byte	'Os_ISRType_s',0,13,216,2,16,24,9
	.byte	'entry_function',0
	.word	2471
	.byte	4,2,35,0,9
	.byte	'dynamic',0
	.word	3449
	.byte	4,2,35,4,9
	.byte	'imask',0
	.word	567
	.byte	4,2,35,8,9
	.byte	'stackbudget',0
	.word	2378
	.byte	8,2,35,12,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,20,9
	.byte	'application',0
	.word	136
	.byte	1,2,35,21,0,15
	.byte	'Os_ISRType',0,13,223,2,3
	.word	3454
	.byte	7
	.word	2463
	.byte	10
	.word	3454
	.byte	7
	.word	3613
	.byte	15
	.byte	'ISRType',0,13,224,2,46
	.word	3618
	.byte	15
	.byte	'Os_bitmask',0,13,239,2,22
	.word	567
	.byte	15
	.byte	'Os_pset0Type',0,13,240,2,20
	.word	567
	.byte	15
	.byte	'Os_pset1Type',0,13,241,2,20
	.word	567
	.byte	15
	.byte	'Os_pset2Type',0,13,242,2,20
	.word	567
	.byte	22,13,243,2,9,4,9
	.byte	'p0',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'p1',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'p2',0
	.word	567
	.byte	4,2,35,0,0,15
	.byte	'Os_psetType',0,13,247,2,3
	.word	3726
	.byte	22,13,249,2,9,4,9
	.byte	't0',0
	.word	567
	.byte	4,2,35,0,9
	.byte	't1',0
	.word	567
	.byte	4,2,35,0,9
	.byte	't2',0
	.word	567
	.byte	4,2,35,0,0,15
	.byte	'Os_tpmaskType',0,13,253,2,3
	.word	3790
	.byte	15
	.byte	'Os_ActivationCountType',0,13,254,2,23
	.word	136
	.byte	19
	.byte	'Os_TaskDynType_s',0,13,128,3,16,120,9
	.byte	'terminate_jump_buf',0
	.word	2327
	.byte	68,2,35,0,9
	.byte	'meter',0
	.word	3106
	.byte	48,2,35,68,9
	.byte	'activation_count',0
	.word	136
	.byte	1,2,35,116,0,15
	.byte	'Os_TaskDynType',0,13,132,3,3
	.word	3888
	.byte	16,68
	.word	2296
	.byte	17,0,0,7
	.word	3888
	.byte	10
	.word	4014
	.byte	19
	.byte	'Os_TaskType_s',0,13,134,3,16,40,9
	.byte	'dynamic',0
	.word	4019
	.byte	4,2,35,0,9
	.byte	'entry_function',0
	.word	2471
	.byte	4,2,35,4,9
	.byte	'pset',0
	.word	3726
	.byte	4,2,35,8,9
	.byte	'base_tpmask',0
	.word	3790
	.byte	4,2,35,12,9
	.byte	'tpmask',0
	.word	3790
	.byte	4,2,35,16,9
	.byte	'core_id',0
	.word	153
	.byte	2,2,35,20,9
	.byte	'index',0
	.word	567
	.byte	4,2,35,24,9
	.byte	'stackbudget',0
	.word	2378
	.byte	8,2,35,28,9
	.byte	'activation_count',0
	.word	136
	.byte	1,2,35,36,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,37,9
	.byte	'application',0
	.word	136
	.byte	1,2,35,38,0,15
	.byte	'Os_TaskType',0,13,146,3,3
	.word	4024
	.byte	10
	.word	4024
	.byte	7
	.word	4274
	.byte	15
	.byte	'TaskType',0,13,147,3,47
	.word	4279
	.byte	23
	.byte	'Os_TaskStateType',0,13,155,3,6,4,6
	.byte	'SUSPENDED',0,0,6
	.byte	'READY',0,1,6
	.byte	'WAITING',0,2,6
	.byte	'RUNNING',0,3,0,15
	.byte	'TaskStateType',0,13,156,3,31
	.word	4302
	.byte	22,13,167,3,3,4,9
	.byte	'tpmask',0
	.word	3790
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,13,166,3,16,4,9
	.byte	'saved_priority',0
	.word	4389
	.byte	4,2,35,0,0,15
	.byte	'Os_ResourceDynType',0,13,170,3,3
	.word	4412
	.byte	7
	.word	4412
	.byte	10
	.word	4492
	.byte	19
	.byte	'Os_ResourceType_s',0,13,171,3,16,12,9
	.byte	'dynamic',0
	.word	4497
	.byte	4,2,35,0,9
	.byte	'tpmask',0
	.word	3790
	.byte	4,2,35,4,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,8,0,15
	.byte	'Os_ResourceType',0,13,175,3,3
	.word	4502
	.byte	8,13,181,3,9,12,9
	.byte	'maxallowedvalue',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'ticksperbase',0
	.word	567
	.byte	4,2,35,4,9
	.byte	'mincycle',0
	.word	567
	.byte	4,2,35,8,0,15
	.byte	'AlarmBaseType',0,13,185,3,3
	.word	4601
	.byte	8,13,206,3,9,8,9
	.byte	'Running',0
	.word	136
	.byte	1,2,35,0,9
	.byte	'Pending',0
	.word	136
	.byte	1,2,35,1,9
	.byte	'Delay',0
	.word	567
	.byte	4,2,35,4,0,15
	.byte	'Os_CounterStatusType',0,13,210,3,3
	.word	4696
	.byte	24
	.word	136
	.byte	1,1,7
	.word	4782
	.byte	15
	.byte	'Os_CounterIncrAdvType',0,13,217,3,22
	.word	4789
	.byte	19
	.byte	's_swd',0,13,222,3,12,4,9
	.byte	'count',0
	.word	567
	.byte	4,2,35,0,0,22,13,221,3,3,4,9
	.byte	'sw',0
	.word	4825
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,13,220,3,16,4,9
	.byte	'type_dependent',0
	.word	4853
	.byte	4,2,35,0,0,15
	.byte	'Os_CounterDynType',0,13,226,3,3
	.word	4872
	.byte	7
	.word	4872
	.byte	10
	.word	4950
	.byte	19
	.byte	'Os_CounterType_s',0,13,227,3,16,28,9
	.byte	'dynamic',0
	.word	4955
	.byte	4,2,35,0,9
	.byte	'advincr',0
	.word	4794
	.byte	4,2,35,4,9
	.byte	'base',0
	.word	4601
	.byte	12,2,35,8,9
	.byte	'core',0
	.word	3052
	.byte	4,2,35,20,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,24,9
	.byte	'application',0
	.word	136
	.byte	1,2,35,25,0,15
	.byte	'Os_CounterType',0,13,234,3,3
	.word	4960
	.byte	7
	.word	4782
	.byte	10
	.word	4960
	.byte	7
	.word	5112
	.byte	15
	.byte	'CounterType',0,13,235,3,52
	.word	5117
	.byte	23
	.byte	'Os_ScheduleTableStatusType',0,13,240,3,6,4,6
	.byte	'SCHEDULETABLE_STOPPED',0,0,6
	.byte	'SCHEDULETABLE_NEXT',0,1,6
	.byte	'SCHEDULETABLE_WAITING',0,2,6
	.byte	'SCHEDULETABLE_RUNNING',0,3,6
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,15
	.byte	'ScheduleTableStatusType',0,13,241,3,41
	.word	5143
	.byte	10
	.word	.L49-.L15
	.byte	7
	.word	5343
	.byte	15
	.byte	'ScheduleTableType',0,13,128,4,58
	.word	5348
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,13,130,4,16,16,9
	.byte	'match',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'next',0
	.word	5353
	.byte	4,2,35,4,9
	.byte	'state',0
	.word	5143
	.byte	4,2,35,8,9
	.byte	'config',0
	.word	153
	.byte	2,2,35,12,0,7
	.word	5380
	.byte	10
	.word	5473
.L49:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,13,247,3,16,16,9
	.byte	'dynamic',0
	.word	5478
	.byte	4,2,35,0,9
	.byte	'counter',0
	.word	5122
	.byte	4,2,35,4,9
	.byte	'repeat',0
	.word	136
	.byte	1,2,35,8,9
	.byte	'config',0
	.word	153
	.byte	2,2,35,10,9
	.byte	'initial',0
	.word	136
	.byte	1,2,35,12,9
	.byte	'access',0
	.word	136
	.byte	1,2,35,13,9
	.byte	'application',0
	.word	136
	.byte	1,2,35,14,0,15
	.byte	'Os_ScheduleTableType',0,13,255,3,3
	.word	5483
	.byte	10
	.word	5483
	.byte	7
	.word	5663
	.byte	10
	.word	4960
	.byte	7
	.word	5673
	.byte	25
	.word	2776
	.byte	25
	.word	3726
	.byte	25
	.word	3623
	.byte	25
	.word	4284
	.byte	25
	.word	3790
	.byte	25
	.word	136
	.byte	25
	.word	4284
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,13,251,6,16,112,9
	.byte	'TrapInfo',0
	.word	2207
	.byte	8,2,35,0,9
	.byte	'lock_taskaccess',0
	.word	5683
	.byte	4,2,35,8,9
	.byte	'ReadyTasks',0
	.word	5688
	.byte	4,2,35,12,9
	.byte	'RunningISR',0
	.word	5693
	.byte	4,2,35,16,9
	.byte	'RunningTask',0
	.word	5698
	.byte	4,2,35,20,9
	.byte	'RunningTPMask',0
	.word	5703
	.byte	4,2,35,24,9
	.byte	'CurrentMeteredObject',0
	.word	3309
	.byte	4,2,35,28,9
	.byte	'IdleMeter',0
	.word	3106
	.byte	48,2,35,32,9
	.byte	'AppAccess',0
	.word	136
	.byte	1,2,35,80,9
	.byte	'AppOverride',0
	.word	5708
	.byte	1,2,35,81,9
	.byte	'GetStackValueAdjust',0
	.word	2378
	.byte	8,2,35,84,9
	.byte	'InErrorHook',0
	.word	136
	.byte	1,2,35,92,9
	.byte	'ChainTaskRef',0
	.word	5713
	.byte	4,2,35,96,9
	.byte	'GetStackUsageAdjust',0
	.word	2378
	.byte	8,2,35,100,9
	.byte	'InProtectionHook',0
	.word	136
	.byte	1,2,35,108,9
	.byte	'CoreIsActive',0
	.word	136
	.byte	1,2,35,109,9
	.byte	'InShutdownHook',0
	.word	136
	.byte	1,2,35,110,0,15
	.byte	'Os_ControlledCoreType',0,13,141,7,3
	.word	5718
	.byte	7
	.word	567
	.byte	10
	.word	3454
	.byte	7
	.word	6174
	.byte	10
	.word	4024
	.byte	7
	.word	6184
	.byte	7
	.word	3106
	.byte	19
	.byte	'Os_AnyCoreType_s',0,13,151,7,16,96,9
	.byte	'DisableAllImask',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'SuspendAllImask',0
	.word	567
	.byte	4,2,35,4,9
	.byte	'SuspendOSImask',0
	.word	567
	.byte	4,2,35,8,9
	.byte	'DisableAllCount',0
	.word	567
	.byte	4,2,35,12,9
	.byte	'SuspendAllCount',0
	.word	567
	.byte	4,2,35,16,9
	.byte	'SuspendOSCount',0
	.word	567
	.byte	4,2,35,20,9
	.byte	'RestartJumpBuf',0
	.word	2327
	.byte	68,2,35,24,9
	.byte	'Restartable',0
	.word	136
	.byte	1,2,35,92,0,15
	.byte	'Os_AnyCoreType',0,13,160,7,3
	.word	6199
	.byte	15
	.byte	'Can_TxObjPriorityClassType',0,14,219,3,16
	.word	567
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,14,231,3,16,8,9
	.byte	'MsgObjId',0
	.word	136
	.byte	1,2,35,0,9
	.byte	'HwControllerId',0
	.word	136
	.byte	1,2,35,1,9
	.byte	'TxObjPriorityClass',0
	.word	567
	.byte	4,2,35,4,0,15
	.byte	'Can_TxHwObjectConfigType',0,14,252,3,3
	.word	6476
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,14,129,4,16,12,9
	.byte	'MaskRef',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'MsgId',0
	.word	567
	.byte	4,2,35,4,9
	.byte	'MsgObjId',0
	.word	136
	.byte	1,2,35,8,9
	.byte	'HwControllerId',0
	.word	136
	.byte	1,2,35,9,0,15
	.byte	'Can_RxHwObjectConfigType',0,14,147,4,3
	.word	6612
	.byte	16,4
	.word	136
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,14,181,4,16,4,9
	.byte	'ControllerMOMap',0
	.word	6752
	.byte	4,2,35,0,0,15
	.byte	'Can_ControllerMOMapConfigType',0,14,184,4,3
	.word	6761
	.byte	19
	.byte	'Can_NPCRValueType',0,14,188,4,16,2,9
	.byte	'Can_NPCRValue',0
	.word	153
	.byte	2,2,35,0,0,15
	.byte	'Can_NPCRValueType',0,14,191,4,3
	.word	6862
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,14,194,4,16,8,9
	.byte	'CanControllerBaudrate',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'CanControllerBaudrateCfg',0
	.word	153
	.byte	2,2,35,4,0,15
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,14,198,4,3
	.word	6937
	.byte	10
	.word	6937
	.byte	7
	.word	7102
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,14,201,4,16,4,9
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7107
	.byte	4,2,35,0,0,15
	.byte	'Can_BaudrateConfigPtrType',0,14,204,4,3
	.word	7112
	.byte	19
	.byte	'Can_EventHandlingType',0,14,226,4,16,4,9
	.byte	'CanEventType',0
	.word	6752
	.byte	4,2,35,0,0,15
	.byte	'Can_EventHandlingType',0,14,229,4,3
	.word	7212
	.byte	15
	.byte	'Rte_TransformerErrorCode',0,15,130,1,15
	.word	136
	.byte	15
	.byte	'Rte_TransformerClass',0,15,131,1,15
	.word	136
	.byte	8,15,168,1,9,12,9
	.byte	'in',0
	.word	3052
	.byte	4,2,35,0,9
	.byte	'out',0
	.word	3052
	.byte	4,2,35,4,9
	.byte	'used',0
	.word	153
	.byte	2,2,35,8,9
	.byte	'lost_data',0
	.word	136
	.byte	1,2,35,10,0,15
	.byte	'Rte_QDynType',0,15,173,1,3
	.word	7358
	.byte	5,15,175,1,9,4,6
	.byte	'RTE_DRA',0,0,6
	.byte	'RTE_WOWP',0,1,6
	.byte	'RTE_TASK',0,2,6
	.byte	'RTE_ARE',0,3,6
	.byte	'RTE_EV',0,4,6
	.byte	'RTE_MSI',0,5,0,15
	.byte	'Rte_NotificationType',0,15,182,1,3
	.word	7445
	.byte	16,128,8
	.word	136
	.byte	17,255,7,0,15
	.byte	'Impl_NVM_DstPtrType_1024',0,16,50,15
	.word	7543
	.byte	15
	.byte	'CanIf_u32_impl',0,16,69,16
	.word	567
	.byte	15
	.byte	'CanIf_u16_impl',0,16,71,16
	.word	153
	.byte	15
	.byte	'CanIf_u8_impl',0,16,73,15
	.word	136
	.byte	15
	.byte	'CanIf_ControllerModeType_Enum_impl',0,16,88,15
	.word	136
	.byte	15
	.byte	'CanIf_PduModeType_Enum_impl',0,16,90,15
	.word	136
	.byte	8,16,92,9,2,9
	.byte	'DeviceMode',0
	.word	136
	.byte	1,2,35,0,9
	.byte	'ChannelMode',0
	.word	136
	.byte	1,2,35,1,0,15
	.byte	'CanIf_ControllerStateType_struct_impl',0,16,95,3
	.word	7734
	.byte	15
	.byte	'CanIf_NotifStatusType_Enum_impl',0,16,100,15
	.word	136
	.byte	15
	.byte	'CanSM_boolean_Impl',0,16,120,15
	.word	136
	.byte	15
	.byte	'CanSM_u8_Impl',0,16,123,15
	.word	136
	.byte	15
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,16,128,1,15
	.word	136
	.byte	15
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,16,132,1,15
	.word	136
	.byte	15
	.byte	'CanSM_u16_Impl',0,16,136,1,16
	.word	153
	.byte	15
	.byte	'CanSM_TimerStateType_Enum_impl',0,16,138,1,15
	.word	136
	.byte	8,16,140,1,9,4,9
	.byte	'cntTick_u16',0
	.word	153
	.byte	2,2,35,0,9
	.byte	'stTimer',0
	.word	136
	.byte	1,2,35,2,0,15
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,16,143,1,3
	.word	8075
	.byte	15
	.byte	'Com_impl_u16',0,16,154,1,16
	.word	153
	.byte	15
	.byte	'Com_impl_u8',0,16,157,1,15
	.word	136
	.byte	15
	.byte	'ComM_uint32_Impl',0,16,173,1,16
	.word	567
	.byte	15
	.byte	'ComM_uint16_Impl',0,16,175,1,16
	.word	153
	.byte	15
	.byte	'ComM_uint8_Impl',0,16,177,1,15
	.word	136
	.byte	15
	.byte	'ComM_bool_Impl',0,16,179,1,15
	.word	136
	.byte	8,16,181,1,9,24,9
	.byte	'ChannelState_e',0
	.word	567
	.byte	4,2,35,0,9
	.byte	'LightTimeoutCtr_u32',0
	.word	567
	.byte	4,2,35,4,9
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	153
	.byte	2,2,35,8,9
	.byte	'ChannelMode_u8',0
	.word	136
	.byte	1,2,35,10,9
	.byte	'BusSmMode_u8',0
	.word	136
	.byte	1,2,35,11,9
	.byte	'UserRequestCtr_u8',0
	.word	136
	.byte	1,2,35,12,9
	.byte	'PassiveRequestState_u8',0
	.word	136
	.byte	1,2,35,13,9
	.byte	'PncRequestCtr_u8',0
	.word	136
	.byte	1,2,35,14,9
	.byte	'InhibitionReqStatus_u8',0
	.word	136
	.byte	1,2,35,15,9
	.byte	'NmNetworkRequestStatus_b',0
	.word	136
	.byte	1,2,35,16,9
	.byte	'DiagnosticRequestState_b',0
	.word	136
	.byte	1,2,35,17,9
	.byte	'CommunicationAllowed_b',0
	.word	136
	.byte	1,2,35,18,9
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	136
	.byte	1,2,35,19,9
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	136
	.byte	1,2,35,20,9
	.byte	'NmNetworkModeStatus_b',0
	.word	136
	.byte	1,2,35,21,0,15
	.byte	'ComM_ChannelStruct_Impl',0,16,197,1,3
	.word	8307
	.byte	8,16,206,1,9,10,9
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	153
	.byte	2,2,35,0,9
	.byte	'LimitToNoComCtr_u16',0
	.word	153
	.byte	2,2,35,2,9
	.byte	'RequestedUserMode_t',0
	.word	136
	.byte	1,2,35,4,9
	.byte	'IndicatedUserMode_t',0
	.word	136
	.byte	1,2,35,5,9
	.byte	'numChannelsInFullCom_u8',0
	.word	136
	.byte	1,2,35,6,9
	.byte	'numChannelsInSilentCom_u8',0
	.word	136
	.byte	1,2,35,7,9
	.byte	'numChannelsInNoCom_u8',0
	.word	136
	.byte	1,2,35,8,0,15
	.byte	'ComM_UserStruct_Impl',0,16,214,1,3
	.word	8811
	.byte	15
	.byte	'Dcm_IOOperationResponseType',0,16,252,1,15
	.word	136
	.byte	15
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	16,138,2,15
	.word	136
	.byte	15
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,16,146,2,15
	.word	136
	.byte	15
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,16,150,2,15
	.word	136
	.byte	15
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,16,154,2,15
	.word	136
	.byte	15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,16,243,3,34
	.word	7554
	.byte	16,128,8
	.word	136
	.byte	17,255,7,0,15
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,16,246,3,34
	.word	7554
	.byte	15
	.byte	'Nm_BusType',0,4,189,1,3
	.word	583
	.byte	15
	.byte	'Nm_TimerType',0,3,73,16
	.word	567
	.byte	15
	.byte	'Nm_ConfigType',0,3,111,3
	.word	655
	.byte	15
	.byte	'rba_BswSrv_uint64',0,17,66,28
	.word	1745
	.byte	5,5,136,3,9,4,6
	.byte	'NM_SYNCPOINT_INVALID',0,0,6
	.byte	'NM_SYNCPOINT_INIT',0,1,6
	.byte	'NM_SYNCPOINT_READY',0,2,6
	.byte	'NM_SYNCPOINT_REACHED',0,3,0,15
	.byte	'Nm_SynchType',0,5,142,3,3
	.word	9718
	.byte	5,5,155,3,9,4,6
	.byte	'NM_CLUSTER_INIT',0,0,6
	.byte	'NM_CLUSTER_PASSIVE',0,1,6
	.byte	'NM_CLUSTER_ACTIVE_ACTIVE',0,2,6
	.byte	'NM_CLUSTER_ACTIVE_PASSIVE',0,3,0,15
	.byte	'Nm_ClusterStateType',0,5,161,3,3
	.word	9834
	.byte	5,5,177,3,9,4,6
	.byte	'NM_CHANNEL_STATE_UNINIT',0,0,6
	.byte	'NM_CHANNEL_STATE_INIT',0,1,6
	.byte	'NM_CHANNEL_STATE_NORMAL',0,2,6
	.byte	'NM_CHANNEL_STATE_PREPARE_WAIT_SLEEP',0,3,6
	.byte	'NM_CHANNEL_STATE_WAIT_SLEEP',0,4,6
	.byte	'NM_CHANNEL_STATE_BUS_SLEEP',0,5,0,15
	.byte	'Nm_ChannelStateType',0,5,186,3,3
	.word	9964
	.byte	15
	.byte	'Nm_BusNmApiType',0,5,182,4,3
	.word	1066
	.byte	26
	.word	655
	.byte	27,0,10
	.word	10198
	.byte	28
	.byte	'Nm_ConfData_cs',0,5,226,4,39
	.word	10205
	.byte	1,1,26
	.word	1066
	.byte	27,0,10
	.word	10236
	.byte	28
	.byte	'Nm_BusNmApi',0,5,237,4,41
	.word	10243
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L16:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,4,1,58,15,59,15,57,15,11,15
	.byte	0,0,6,40,0,3,8,28,13,0,0,7,15,0,73,19,0,0,8,19,1,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,10,38,0,73,19,0,0,11,21,1,73,19,54,15,39,12,0,0,12,5,0,73,19,0,0,13,46,0,3,8,58,15,59,15,57,15,54
	.byte	15,63,12,60,12,0,0,14,21,0,54,15,0,0,15,22,0,3,8,58,15,59,15,57,15,73,19,0,0,16,1,1,11,15,73,19,0,0,17
	.byte	33,0,47,15,0,0,18,21,0,54,15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1
	.byte	54,15,39,12,0,0,22,23,1,58,15,59,15,57,15,11,15,0,0,23,4,1,3,8,58,15,59,15,57,15,11,15,0,0,24,21,0,73
	.byte	19,54,15,39,12,0,0,25,53,0,73,19,0,0,26,1,1,73,19,0,0,27,33,0,0,0,28,52,0,3,8,58,15,59,15,57,15,73,19
	.byte	63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L17:
	.word	.L51-.L50
.L50:
	.half	3
	.word	.L53-.L52
.L52:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\NmStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\Nm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\Nm_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\Nm_Priv.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\CanNm_PreCompile_and_PB_Variant\\CanNm_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0,0
.L53:
.L51:
	.sdecl	'.debug_info',debug,cluster('Nm_GetState')
	.sect	'.debug_info'
.L18:
	.word	351
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L21,.L20
	.byte	2
	.word	.L14
	.byte	3
	.byte	'Nm_GetState',0,1,44,31
	.word	.L23
	.byte	1,1,1
	.word	.L13,.L24,.L12
	.byte	4
	.byte	'NetworkHandle',0,1,45,76
	.word	.L23,.L25
	.byte	4
	.byte	'nmStatePtr',0,1,46,87
	.word	.L26,.L27
	.byte	4
	.byte	'nmModePtr',0,1,47,86
	.word	.L28,.L29
	.byte	5
	.word	.L13,.L24
	.byte	6
	.byte	'ConfDataPtr',0,1,50,57
	.word	.L30,.L31
	.byte	6
	.byte	'FuncPtr',0,1,51,57
	.word	.L32,.L33
	.byte	6
	.byte	'RetVal',0,1,52,37
	.word	.L23,.L34
	.byte	6
	.byte	'Nm_NetworkHandle',0,1,53,39
	.word	.L23,.L35
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Nm_GetState')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Nm_GetState')
	.sect	'.debug_line'
.L20:
	.word	.L55-.L54
.L54:
	.half	3
	.word	.L57-.L56
.L56:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Nm\\src\\Nm_GetState.c',0,0,0,0,0
.L57:
	.byte	5,31,7,0,5,2
	.word	.L13
	.byte	3,43,1,5,9,9
	.half	.L39-.L13
	.byte	3,16,1,5,67,7,9
	.half	.L58-.L39
	.byte	1,5,94,7,9
	.half	.L59-.L58
	.byte	1,5,24,7,9
	.half	.L60-.L59
	.byte	3,3,1,5,38,9
	.half	.L61-.L60
	.byte	1,5,43,9
	.half	.L40-.L61
	.byte	3,2,1,5,31,9
	.half	.L62-.L40
	.byte	1,5,20,9
	.half	.L63-.L62
	.byte	1,5,31,9
	.half	.L64-.L63
	.byte	1,5,27,9
	.half	.L42-.L64
	.byte	3,3,1,5,70,9
	.half	.L43-.L42
	.byte	1,5,56,9
	.half	.L36-.L43
	.byte	3,123,1,5,14,9
	.half	.L2-.L36
	.byte	3,9,1,7,9
	.half	.L65-.L2
	.byte	3,3,1,5,84,9
	.half	.L45-.L65
	.byte	1,5,13,9
	.half	.L7-.L45
	.byte	3,6,1,5,52,7,9
	.half	.L66-.L7
	.byte	1,5,13,7,9
	.half	.L8-.L66
	.byte	3,3,1,5,84,9
	.half	.L48-.L8
	.byte	1,5,16,9
	.half	.L10-.L48
	.byte	3,9,1,5,5,9
	.half	.L5-.L10
	.byte	3,4,1,5,1,9
	.half	.L11-.L5
	.byte	3,1,1,7,9
	.half	.L22-.L11
	.byte	0,1,1
.L55:
	.sdecl	'.debug_ranges',debug,cluster('Nm_GetState')
	.sect	'.debug_ranges'
.L21:
	.word	-1,.L13,0,.L22-.L13,0,0
	.sdecl	'.debug_loc',debug,cluster('Nm_GetState')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L13,.L40-.L13,.L41-.L13
	.half	1
	.byte	111
	.word	0,0
.L33:
	.word	-1,.L13,.L42-.L13,.L43-.L13
	.half	1
	.byte	111
	.word	0,0
.L25:
	.word	-1,.L13,0,.L36-.L13
	.half	1
	.byte	84
	.word	.L37-.L13,.L24-.L13
	.half	1
	.byte	88
	.word	.L2-.L13,.L44-.L13
	.half	1
	.byte	84
	.word	.L46-.L13,.L45-.L13
	.half	1
	.byte	85
	.word	.L47-.L13,.L48-.L13
	.half	1
	.byte	85
	.word	0,0
.L12:
	.word	-1,.L13,0,.L24-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L35:
	.word	0,0
.L34:
	.word	-1,.L13,.L36-.L13,.L2-.L13
	.half	1
	.byte	82
	.word	.L5-.L13,.L24-.L13
	.half	1
	.byte	82
	.word	0,0
.L29:
	.word	-1,.L13,0,.L36-.L13
	.half	1
	.byte	101
	.word	.L39-.L13,.L24-.L13
	.half	1
	.byte	109
	.word	.L2-.L13,.L45-.L13
	.half	1
	.byte	101
	.word	0,0
.L27:
	.word	-1,.L13,0,.L36-.L13
	.half	1
	.byte	100
	.word	.L38-.L13,.L24-.L13
	.half	1
	.byte	108
	.word	.L2-.L13,.L45-.L13
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L67:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Nm_GetState')
	.sect	'.debug_frame'
	.word	12
	.word	.L67,.L13,.L24-.L13

; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	    99  #define NM_STOP_SEC_CODE
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	   100  #include "Nm_MemMap.h"
; BSW\src\BSW\Gen\Nm\src\Nm_GetState.c	   101  

	; Module end
