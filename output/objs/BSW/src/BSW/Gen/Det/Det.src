	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15548a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Det\\Det.src BSW\\src\\BSW\\Gen\\Det\\src\\Det.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c'

	
$TC16X
	
	.sdecl	'.text.Det.Det_StoreErrorEntryInBuffer',code,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.text.Det.Det_StoreErrorEntryInBuffer'
	.align	2
	

; BSW\src\BSW\Gen\Det\src\Det.c	     1  
; BSW\src\BSW\Gen\Det\src\Det.c	     2  
; BSW\src\BSW\Gen\Det\src\Det.c	     3  /*
; BSW\src\BSW\Gen\Det\src\Det.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	     5   * Includes
; BSW\src\BSW\Gen\Det\src\Det.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	     7   */
; BSW\src\BSW\Gen\Det\src\Det.c	     8  #include "Det.h"
; BSW\src\BSW\Gen\Det\src\Det.c	     9  #include "Rte_Det.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    10  #include "Det_Cfg_SchM.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    11  #include "Det_Prv.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    12  
; BSW\src\BSW\Gen\Det\src\Det.c	    13  #if (DET_CFG_FORWARDTODLT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	    14  #include "Dlt_Det.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    15  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	    16  
; BSW\src\BSW\Gen\Det\src\Det.c	    17  /*
; BSW\src\BSW\Gen\Det\src\Det.c	    18   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    19   * Variables
; BSW\src\BSW\Gen\Det\src\Det.c	    20   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    21   */
; BSW\src\BSW\Gen\Det\src\Det.c	    22  #define DET_START_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Det\src\Det.c	    23  #include "Det_MemMap.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    24  
; BSW\src\BSW\Gen\Det\src\Det.c	    25  boolean Det_Initialized_b;
; BSW\src\BSW\Gen\Det\src\Det.c	    26  
; BSW\src\BSW\Gen\Det\src\Det.c	    27  #if (DET_CFG_ERRORBUFFER_ENABLED)
; BSW\src\BSW\Gen\Det\src\Det.c	    28  static uint16 Det_BufferIndex_u16;
; BSW\src\BSW\Gen\Det\src\Det.c	    29  Det_ErrorEntryBufferType Det_ErrorEntryBuffer[DET_CFG_ERRORBUFFERSIZE];
; BSW\src\BSW\Gen\Det\src\Det.c	    30  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED) */
; BSW\src\BSW\Gen\Det\src\Det.c	    31  
; BSW\src\BSW\Gen\Det\src\Det.c	    32  #define DET_STOP_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Det\src\Det.c	    33  #include "Det_MemMap.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    34  
; BSW\src\BSW\Gen\Det\src\Det.c	    35  #define DET_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Det\src\Det.c	    36  #include "Det_MemMap.h"
; BSW\src\BSW\Gen\Det\src\Det.c	    37  
; BSW\src\BSW\Gen\Det\src\Det.c	    38  /*
; BSW\src\BSW\Gen\Det\src\Det.c	    39   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    40   * Functions
; BSW\src\BSW\Gen\Det\src\Det.c	    41   **********************************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    42   */
; BSW\src\BSW\Gen\Det\src\Det.c	    43  
; BSW\src\BSW\Gen\Det\src\Det.c	    44  /*
; BSW\src\BSW\Gen\Det\src\Det.c	    45   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    46   * Det_GetLastBufferIndex
; BSW\src\BSW\Gen\Det\src\Det.c	    47   * Service to return the last used index of the Det Buffer.
; BSW\src\BSW\Gen\Det\src\Det.c	    48   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	    49   */
; BSW\src\BSW\Gen\Det\src\Det.c	    50  #if (DET_CFG_ERRORBUFFER_ENABLED && DET_CFG_ERRORBUFFERAPI_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	    51  Std_ReturnType Det_GetLastBufferIndex(Det_BufferIndexType* buffIdx)
; BSW\src\BSW\Gen\Det\src\Det.c	    52  {
; BSW\src\BSW\Gen\Det\src\Det.c	    53      Std_ReturnType retval = E_NOT_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	    54  
; BSW\src\BSW\Gen\Det\src\Det.c	    55      if (buffIdx == NULL_PTR)
; BSW\src\BSW\Gen\Det\src\Det.c	    56      {
; BSW\src\BSW\Gen\Det\src\Det.c	    57          /* No valid pointer */
; BSW\src\BSW\Gen\Det\src\Det.c	    58          retval = DET_E_PARAM_POINTER;
; BSW\src\BSW\Gen\Det\src\Det.c	    59      }
; BSW\src\BSW\Gen\Det\src\Det.c	    60      else if (!(Det_Initialized_b))
; BSW\src\BSW\Gen\Det\src\Det.c	    61      {
; BSW\src\BSW\Gen\Det\src\Det.c	    62          /* Not initialized */
; BSW\src\BSW\Gen\Det\src\Det.c	    63          retval = DET_E_UNAVAILABLE;
; BSW\src\BSW\Gen\Det\src\Det.c	    64      }
; BSW\src\BSW\Gen\Det\src\Det.c	    65      else if (Det_BufferIndex_u16 == 0)
; BSW\src\BSW\Gen\Det\src\Det.c	    66      {
; BSW\src\BSW\Gen\Det\src\Det.c	    67          /* No entry */
; BSW\src\BSW\Gen\Det\src\Det.c	    68          retval = E_NOT_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	    69      }
; BSW\src\BSW\Gen\Det\src\Det.c	    70      else
; BSW\src\BSW\Gen\Det\src\Det.c	    71      {
; BSW\src\BSW\Gen\Det\src\Det.c	    72          /* provide index of last buffer entry and return E_OK*/
; BSW\src\BSW\Gen\Det\src\Det.c	    73          *buffIdx = Det_BufferIndex_u16 - 1;
; BSW\src\BSW\Gen\Det\src\Det.c	    74          retval = E_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	    75      }
; BSW\src\BSW\Gen\Det\src\Det.c	    76      return retval;
; BSW\src\BSW\Gen\Det\src\Det.c	    77  }
; BSW\src\BSW\Gen\Det\src\Det.c	    78  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED && DET_CFG_ERRORBUFFERAPI_SUPPORTED) */
; BSW\src\BSW\Gen\Det\src\Det.c	    79  
; BSW\src\BSW\Gen\Det\src\Det.c	    80  #if (DET_CFG_ERRORBUFFER_ENABLED)
; BSW\src\BSW\Gen\Det\src\Det.c	    81  static void Det_StoreErrorEntryInBuffer(uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
; Function Det_StoreErrorEntryInBuffer
.L22:
Det_StoreErrorEntryInBuffer:	.type	func
	mov	d8,d4
.L111:
	mov	d15,d5
.L112:
	mov	d9,d6
.L113:
	mov	d10,d7

; BSW\src\BSW\Gen\Det\src\Det.c	    82  {
; BSW\src\BSW\Gen\Det\src\Det.c	    83      /* Enter Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	    84      SchM_Enter_Det_Monitoring();
.L2:
	call	Os_SuspendAllInterrupts
.L110:

; BSW\src\BSW\Gen\Det\src\Det.c	    85  
; BSW\src\BSW\Gen\Det\src\Det.c	    86      /* Check if there are free place in Det_ErrorEntryBuffer, then enter the new Development error in the buffer*/
; BSW\src\BSW\Gen\Det\src\Det.c	    87      if(Det_BufferIndex_u16 < (DET_CFG_ERRORBUFFERSIZE))
	movh.a	a2,#@his(Det_BufferIndex_u16)
	lea	a2,[a2]@los(Det_BufferIndex_u16)
	ld.hu	d0,[a2]0
.L162:
	jge.u	d0,#10,.L3
.L163:

; BSW\src\BSW\Gen\Det\src\Det.c	    88      {
; BSW\src\BSW\Gen\Det\src\Det.c	    89          Det_ErrorEntryBuffer[Det_BufferIndex_u16].ModuleId = ModuleId;
	mul	d1,d0,#6
.L164:
	movh.a	a15,#@his(Det_ErrorEntryBuffer)
	lea	a15,[a15]@los(Det_ErrorEntryBuffer)
.L165:
	addsc.a	a15,a15,d1,#0
.L166:
	st.h	[a15],d8
.L167:

; BSW\src\BSW\Gen\Det\src\Det.c	    90          Det_ErrorEntryBuffer[Det_BufferIndex_u16].InstanceId = InstanceId;
	st.b	[a15]2,d15
.L168:

; BSW\src\BSW\Gen\Det\src\Det.c	    91          Det_ErrorEntryBuffer[Det_BufferIndex_u16].ApiId = ApiId;
	st.b	[a15]3,d9
.L169:

; BSW\src\BSW\Gen\Det\src\Det.c	    92          Det_ErrorEntryBuffer[Det_BufferIndex_u16].ErrorId = ErrorId;
	st.b	[a15]4,d10
.L170:

; BSW\src\BSW\Gen\Det\src\Det.c	    93          Det_BufferIndex_u16++;
	add	d0,#1
	st.h	[a2],d0
.L3:

; BSW\src\BSW\Gen\Det\src\Det.c	    94      }
; BSW\src\BSW\Gen\Det\src\Det.c	    95  
; BSW\src\BSW\Gen\Det\src\Det.c	    96      /* Exit Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	    97      SchM_Exit_Det_Monitoring();
.L4:
	call	Os_ResumeAllInterrupts
.L171:

; BSW\src\BSW\Gen\Det\src\Det.c	    98  }
	ret
.L104:
	
__Det_StoreErrorEntryInBuffer_function_end:
	.size	Det_StoreErrorEntryInBuffer,__Det_StoreErrorEntryInBuffer_function_end-Det_StoreErrorEntryInBuffer
.L65:
	; End of function
	
	.sdecl	'.text.Det.Det_Init',code,cluster('Det_Init')
	.sect	'.text.Det.Det_Init'
	.align	2
	
	.global	Det_Init

; BSW\src\BSW\Gen\Det\src\Det.c	    99  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   100  
; BSW\src\BSW\Gen\Det\src\Det.c	   101  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   102   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   103   * Det_GetBufferEntry
; BSW\src\BSW\Gen\Det\src\Det.c	   104   * Service to return the error entry stored in the buffer at position index.
; BSW\src\BSW\Gen\Det\src\Det.c	   105   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   106   */
; BSW\src\BSW\Gen\Det\src\Det.c	   107  #if (DET_CFG_ERRORBUFFER_ENABLED && DET_CFG_ERRORBUFFERAPI_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   108  Std_ReturnType Det_GetBufferEntry(Det_BufferIndexType buffIdx, Det_ErrorEntryBufferType* buffEntry)
; BSW\src\BSW\Gen\Det\src\Det.c	   109  {
; BSW\src\BSW\Gen\Det\src\Det.c	   110      Std_ReturnType retval = E_NOT_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	   111  
; BSW\src\BSW\Gen\Det\src\Det.c	   112      if (buffEntry == NULL_PTR)
; BSW\src\BSW\Gen\Det\src\Det.c	   113      {
; BSW\src\BSW\Gen\Det\src\Det.c	   114          /* No valid pointer */
; BSW\src\BSW\Gen\Det\src\Det.c	   115          retval = DET_E_PARAM_POINTER;
; BSW\src\BSW\Gen\Det\src\Det.c	   116      }
; BSW\src\BSW\Gen\Det\src\Det.c	   117      else if ((!Det_Initialized_b))
; BSW\src\BSW\Gen\Det\src\Det.c	   118      {
; BSW\src\BSW\Gen\Det\src\Det.c	   119          /* Not initialized */
; BSW\src\BSW\Gen\Det\src\Det.c	   120          retval = DET_E_UNAVAILABLE;
; BSW\src\BSW\Gen\Det\src\Det.c	   121      }
; BSW\src\BSW\Gen\Det\src\Det.c	   122      else if (Det_BufferIndex_u16 == 0)
; BSW\src\BSW\Gen\Det\src\Det.c	   123      {
; BSW\src\BSW\Gen\Det\src\Det.c	   124          /* No entry */
; BSW\src\BSW\Gen\Det\src\Det.c	   125          retval = E_NOT_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	   126      }
; BSW\src\BSW\Gen\Det\src\Det.c	   127      else if (buffIdx >= Det_BufferIndex_u16)
; BSW\src\BSW\Gen\Det\src\Det.c	   128      {
; BSW\src\BSW\Gen\Det\src\Det.c	   129          /* Invalid index*/
; BSW\src\BSW\Gen\Det\src\Det.c	   130          retval = E_NOT_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	   131      }
; BSW\src\BSW\Gen\Det\src\Det.c	   132      else
; BSW\src\BSW\Gen\Det\src\Det.c	   133      {
; BSW\src\BSW\Gen\Det\src\Det.c	   134          /* provide error entry information for given index and return E_OK*/
; BSW\src\BSW\Gen\Det\src\Det.c	   135          *buffEntry = Det_ErrorEntryBuffer[buffIdx];
; BSW\src\BSW\Gen\Det\src\Det.c	   136          retval = E_OK;
; BSW\src\BSW\Gen\Det\src\Det.c	   137      }
; BSW\src\BSW\Gen\Det\src\Det.c	   138      return retval;
; BSW\src\BSW\Gen\Det\src\Det.c	   139  }
; BSW\src\BSW\Gen\Det\src\Det.c	   140  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED && DET_CFG_ERRORBUFFERAPI_SUPPORTED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   141  
; BSW\src\BSW\Gen\Det\src\Det.c	   142  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   143   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   144   * Det_Init
; BSW\src\BSW\Gen\Det\src\Det.c	   145   * Service to initialize the Default Error Tracer.
; BSW\src\BSW\Gen\Det\src\Det.c	   146   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   147   */
; BSW\src\BSW\Gen\Det\src\Det.c	   148  void Det_Init(const Det_ConfigType* ConfigPtr)
; Function Det_Init
.L24:
Det_Init:	.type	func

; BSW\src\BSW\Gen\Det\src\Det.c	   149  {
; BSW\src\BSW\Gen\Det\src\Det.c	   150      if (ConfigPtr != NULL_PTR)
	jz.a	a4,.L5
.L125:

; BSW\src\BSW\Gen\Det\src\Det.c	   151      {
; BSW\src\BSW\Gen\Det\src\Det.c	   152          /* Skip init execution */
; BSW\src\BSW\Gen\Det\src\Det.c	   153          return;
	j	.L6
.L5:

; BSW\src\BSW\Gen\Det\src\Det.c	   154      }
; BSW\src\BSW\Gen\Det\src\Det.c	   155      /* Enter Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	   156      SchM_Enter_Det_Monitoring()
; BSW\src\BSW\Gen\Det\src\Det.c	   157      ;
.L7:
	call	Os_SuspendAllInterrupts
.L114:

; BSW\src\BSW\Gen\Det\src\Det.c	   158  
; BSW\src\BSW\Gen\Det\src\Det.c	   159  #if (DET_CFG_ERRORBUFFER_ENABLED)
; BSW\src\BSW\Gen\Det\src\Det.c	   160      DET_MEMSET(&Det_ErrorEntryBuffer[0], 0x00, sizeof(Det_ErrorEntryBuffer));
	movh.a	a4,#@his(Det_ErrorEntryBuffer)
	lea	a4,[a4]@los(Det_ErrorEntryBuffer)
	mov	d4,#0
	mov	d5,#60
.L76:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L77:

; BSW\src\BSW\Gen\Det\src\Det.c	   161      Det_BufferIndex_u16 = 0;
	movh.a	a15,#@his(Det_BufferIndex_u16)
	lea	a15,[a15]@los(Det_BufferIndex_u16)
.L126:
	mov	d15,#0
.L127:
	st.h	[a15],d15
.L128:

; BSW\src\BSW\Gen\Det\src\Det.c	   162  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   163      Det_Initialized_b = TRUE;
	movh.a	a15,#@his(Det_Initialized_b)
	lea	a15,[a15]@los(Det_Initialized_b)
.L129:
	mov	d15,#1
.L130:
	st.b	[a15],d15

; BSW\src\BSW\Gen\Det\src\Det.c	   164  
; BSW\src\BSW\Gen\Det\src\Det.c	   165      /* Exit Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	   166      SchM_Exit_Det_Monitoring()
; BSW\src\BSW\Gen\Det\src\Det.c	   167      ;
.L8:
	call	Os_ResumeAllInterrupts

; BSW\src\BSW\Gen\Det\src\Det.c	   168  }
.L6:
	ret
.L72:
	
__Det_Init_function_end:
	.size	Det_Init,__Det_Init_function_end-Det_Init
.L40:
	; End of function
	
	.sdecl	'.text.Det.Det_Start',code,cluster('Det_Start')
	.sect	'.text.Det.Det_Start'
	.align	2
	
	.global	Det_Start

; BSW\src\BSW\Gen\Det\src\Det.c	   169  
; BSW\src\BSW\Gen\Det\src\Det.c	   170  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   171   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   172   * Det_Start
; BSW\src\BSW\Gen\Det\src\Det.c	   173   * Service to start the Default Error Tracer.
; BSW\src\BSW\Gen\Det\src\Det.c	   174   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   175   */
; BSW\src\BSW\Gen\Det\src\Det.c	   176  void Det_Start(void)
; Function Det_Start
Det_Start:	.type	func

; BSW\src\BSW\Gen\Det\src\Det.c	   177  {
; BSW\src\BSW\Gen\Det\src\Det.c	   178  #if (DET_CFG_ERRORBUFFER_ENABLED)
; BSW\src\BSW\Gen\Det\src\Det.c	   179      /* Enter Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	   180      SchM_Enter_Det_Monitoring();
.L9:
	call	Os_SuspendAllInterrupts
.L135:

; BSW\src\BSW\Gen\Det\src\Det.c	   181  
; BSW\src\BSW\Gen\Det\src\Det.c	   182      Det_BufferIndex_u16 = 0;
	movh.a	a15,#@his(Det_BufferIndex_u16)
	lea	a15,[a15]@los(Det_BufferIndex_u16)
.L136:
	mov	d15,#0
.L137:
	st.h	[a15],d15

; BSW\src\BSW\Gen\Det\src\Det.c	   183  
; BSW\src\BSW\Gen\Det\src\Det.c	   184      /* Exit Interrupt Lock */
; BSW\src\BSW\Gen\Det\src\Det.c	   185      SchM_Exit_Det_Monitoring();
.L10:
	call	Os_ResumeAllInterrupts
.L138:

; BSW\src\BSW\Gen\Det\src\Det.c	   186  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   187  }
	ret
.L85:
	
__Det_Start_function_end:
	.size	Det_Start,__Det_Start_function_end-Det_Start
.L45:
	; End of function
	
	.sdecl	'.text.Det.Det_ReportError',code,cluster('Det_ReportError')
	.sect	'.text.Det.Det_ReportError'
	.align	2
	
	.global	Det_ReportError

; BSW\src\BSW\Gen\Det\src\Det.c	   188  
; BSW\src\BSW\Gen\Det\src\Det.c	   189  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   190   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   191   * Det_GetVersionInfo
; BSW\src\BSW\Gen\Det\src\Det.c	   192   * Returns the version information of this module.
; BSW\src\BSW\Gen\Det\src\Det.c	   193   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   194   */
; BSW\src\BSW\Gen\Det\src\Det.c	   195  #if (DET_CFG_VERSIONINFO_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   196  void Det_GetVersionInfo(Std_VersionInfoType* versioninfo)
; BSW\src\BSW\Gen\Det\src\Det.c	   197  {
; BSW\src\BSW\Gen\Det\src\Det.c	   198      if (versioninfo != NULL_PTR)
; BSW\src\BSW\Gen\Det\src\Det.c	   199      {
; BSW\src\BSW\Gen\Det\src\Det.c	   200          versioninfo->vendorID = DET_VENDOR_ID;
; BSW\src\BSW\Gen\Det\src\Det.c	   201          versioninfo->moduleID = DET_MODULE_ID;
; BSW\src\BSW\Gen\Det\src\Det.c	   202          versioninfo->sw_major_version = DET_SW_MAJOR_VERSION;
; BSW\src\BSW\Gen\Det\src\Det.c	   203          versioninfo->sw_minor_version = DET_SW_MINOR_VERSION;
; BSW\src\BSW\Gen\Det\src\Det.c	   204          versioninfo->sw_patch_version = DET_SW_PATCH_VERSION;
; BSW\src\BSW\Gen\Det\src\Det.c	   205      }
; BSW\src\BSW\Gen\Det\src\Det.c	   206      else
; BSW\src\BSW\Gen\Det\src\Det.c	   207      {
; BSW\src\BSW\Gen\Det\src\Det.c	   208          /* throw the error DET_E_PARAM_POINTER */
; BSW\src\BSW\Gen\Det\src\Det.c	   209          (void) Det_ReportError(DET_MODULE_ID, DET_INSTANCE_ID, DET_APIID_GETVERSIONINFO, DET_E_PARAM_POINTER);
; BSW\src\BSW\Gen\Det\src\Det.c	   210      }
; BSW\src\BSW\Gen\Det\src\Det.c	   211  }
; BSW\src\BSW\Gen\Det\src\Det.c	   212  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   213  
; BSW\src\BSW\Gen\Det\src\Det.c	   214  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   215   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   216   * Det_ReportError
; BSW\src\BSW\Gen\Det\src\Det.c	   217   * Service to report development errors.
; BSW\src\BSW\Gen\Det\src\Det.c	   218   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   219   */
; BSW\src\BSW\Gen\Det\src\Det.c	   220  /* MR12 RULE 8.3 VIOLATION: The names of parameters in this function declaration are different from the names in a previous declaration.
; BSW\src\BSW\Gen\Det\src\Det.c	   221   * But this can be ignored, since the parameter names differ in RTE generated files */
; BSW\src\BSW\Gen\Det\src\Det.c	   222  Std_ReturnType Det_ReportError(uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
; Function Det_ReportError
.L27:
Det_ReportError:	.type	func

; BSW\src\BSW\Gen\Det\src\Det.c	   223  {
; BSW\src\BSW\Gen\Det\src\Det.c	   224      /* Check if DET was initialized, otherwise exit direclty */
; BSW\src\BSW\Gen\Det\src\Det.c	   225      if (!Det_Initialized_b)
	movh.a	a15,#@his(Det_Initialized_b)
	lea	a15,[a15]@los(Det_Initialized_b)
	ld.bu	d15,[a15]
	jne	d15,#0,.L11
.L143:

; BSW\src\BSW\Gen\Det\src\Det.c	   226      {
; BSW\src\BSW\Gen\Det\src\Det.c	   227          DET_UNUSED_PARAM(ModuleId);
	j	.L12
.L11:

; BSW\src\BSW\Gen\Det\src\Det.c	   228          DET_UNUSED_PARAM(InstanceId);
; BSW\src\BSW\Gen\Det\src\Det.c	   229          DET_UNUSED_PARAM(ApiId);
; BSW\src\BSW\Gen\Det\src\Det.c	   230          DET_UNUSED_PARAM(ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   231      }
; BSW\src\BSW\Gen\Det\src\Det.c	   232      else
; BSW\src\BSW\Gen\Det\src\Det.c	   233      {
; BSW\src\BSW\Gen\Det\src\Det.c	   234  #if (DET_CFG_HOOKCOUNT > 0)
; BSW\src\BSW\Gen\Det\src\Det.c	   235          DET_CFG_CALLERRORHOOKS(ModuleId, InstanceId, ApiId, ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   236  #endif /* #if (DET_CFG_HOOKCOUNT > 0) */
; BSW\src\BSW\Gen\Det\src\Det.c	   237  
; BSW\src\BSW\Gen\Det\src\Det.c	   238  #if (DET_CFG_ERRORBUFFER_ENABLED)
; BSW\src\BSW\Gen\Det\src\Det.c	   239  
; BSW\src\BSW\Gen\Det\src\Det.c	   240          /* Check if there are free place in Det_ErrorEntryBuffer, then enter the new Development error in the buffer*/
; BSW\src\BSW\Gen\Det\src\Det.c	   241          if (Det_BufferIndex_u16 < (DET_CFG_ERRORBUFFERSIZE))
	movh.a	a15,#@his(Det_BufferIndex_u16)
	lea	a15,[a15]@los(Det_BufferIndex_u16)
	ld.hu	d15,[a15]0
.L144:
	jge.u	d15,#10,.L13
.L145:

; BSW\src\BSW\Gen\Det\src\Det.c	   242          {
; BSW\src\BSW\Gen\Det\src\Det.c	   243  
; BSW\src\BSW\Gen\Det\src\Det.c	   244  #if (DET_CFG_ERRORBUFFER_FILTER_DUPLICATES)
; BSW\src\BSW\Gen\Det\src\Det.c	   245              boolean isErrorEntryStoreNeeded = TRUE;
; BSW\src\BSW\Gen\Det\src\Det.c	   246              uint16 errorCount;
; BSW\src\BSW\Gen\Det\src\Det.c	   247  
; BSW\src\BSW\Gen\Det\src\Det.c	   248              for(errorCount= 0; errorCount<Det_BufferIndex_u16; errorCount++)
; BSW\src\BSW\Gen\Det\src\Det.c	   249              {
; BSW\src\BSW\Gen\Det\src\Det.c	   250                  if((Det_ErrorEntryBuffer[errorCount].ModuleId == ModuleId) &&
; BSW\src\BSW\Gen\Det\src\Det.c	   251                     (Det_ErrorEntryBuffer[errorCount].InstanceId == InstanceId) &&
; BSW\src\BSW\Gen\Det\src\Det.c	   252                     (Det_ErrorEntryBuffer[errorCount].ApiId == ApiId) &&
; BSW\src\BSW\Gen\Det\src\Det.c	   253                     (Det_ErrorEntryBuffer[errorCount].ErrorId == ErrorId))
; BSW\src\BSW\Gen\Det\src\Det.c	   254                  {
; BSW\src\BSW\Gen\Det\src\Det.c	   255                      isErrorEntryStoreNeeded = FALSE;
; BSW\src\BSW\Gen\Det\src\Det.c	   256                      break;
; BSW\src\BSW\Gen\Det\src\Det.c	   257                  }
; BSW\src\BSW\Gen\Det\src\Det.c	   258              }
; BSW\src\BSW\Gen\Det\src\Det.c	   259              if(isErrorEntryStoreNeeded)
; BSW\src\BSW\Gen\Det\src\Det.c	   260              {
; BSW\src\BSW\Gen\Det\src\Det.c	   261  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   262              	Det_StoreErrorEntryInBuffer(ModuleId, InstanceId, ApiId, ErrorId);
	call	Det_StoreErrorEntryInBuffer
.L13:
.L12:

; BSW\src\BSW\Gen\Det\src\Det.c	   263  #if (DET_CFG_ERRORBUFFER_FILTER_DUPLICATES)
; BSW\src\BSW\Gen\Det\src\Det.c	   264              }
; BSW\src\BSW\Gen\Det\src\Det.c	   265  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   266          }
; BSW\src\BSW\Gen\Det\src\Det.c	   267  #endif /* #if (DET_CFG_ERRORBUFFER_ENABLED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   268  
; BSW\src\BSW\Gen\Det\src\Det.c	   269  #if (DET_CFG_FORWARDTODLT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   270          Dlt_DetForwardErrorTrace(ModuleId, InstanceId, ApiId, ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   271  #endif /* #if (DET_CFG_FORWARDTODLT_SUPPORTED) */
; BSW\src\BSW\Gen\Det\src\Det.c	   272      }
; BSW\src\BSW\Gen\Det\src\Det.c	   273      return E_OK;
	mov	d2,#0
.L146:
	j	.L14

; BSW\src\BSW\Gen\Det\src\Det.c	   274  }
.L14:
	ret
.L87:
	
__Det_ReportError_function_end:
	.size	Det_ReportError,__Det_ReportError_function_end-Det_ReportError
.L50:
	; End of function
	
	.sdecl	'.text.Det.Det_ReportRuntimeError',code,cluster('Det_ReportRuntimeError')
	.sect	'.text.Det.Det_ReportRuntimeError'
	.align	2
	
	.global	Det_ReportRuntimeError

; BSW\src\BSW\Gen\Det\src\Det.c	   275  
; BSW\src\BSW\Gen\Det\src\Det.c	   276  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   277   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   278   * Det_ReportRuntimeError
; BSW\src\BSW\Gen\Det\src\Det.c	   279   * Service to report runtime errors. If a callout has been configured then this callout shall
; BSW\src\BSW\Gen\Det\src\Det.c	   280   * be called.
; BSW\src\BSW\Gen\Det\src\Det.c	   281   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   282   */
; BSW\src\BSW\Gen\Det\src\Det.c	   283  /* MR12 RULE 8.3 VIOLATION: The names of parameters in this function declaration are different from the names in a previous declaration.
; BSW\src\BSW\Gen\Det\src\Det.c	   284   * But this can be ignored, since the parameter names differ in RTE generated files */
; BSW\src\BSW\Gen\Det\src\Det.c	   285  Std_ReturnType Det_ReportRuntimeError(uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 ErrorId)
; Function Det_ReportRuntimeError
.L29:
Det_ReportRuntimeError:	.type	func

; BSW\src\BSW\Gen\Det\src\Det.c	   286  {
; BSW\src\BSW\Gen\Det\src\Det.c	   287      /* Check if DET was initialized, otherwise exit directly */
; BSW\src\BSW\Gen\Det\src\Det.c	   288      if (!Det_Initialized_b)
	movh.a	a15,#@his(Det_Initialized_b)
	lea	a15,[a15]@los(Det_Initialized_b)
	ld.bu	d15,[a15]
	jne	d15,#0,.L15
.L151:

; BSW\src\BSW\Gen\Det\src\Det.c	   289      {
; BSW\src\BSW\Gen\Det\src\Det.c	   290          DET_UNUSED_PARAM(ModuleId);
	j	.L16
.L15:

; BSW\src\BSW\Gen\Det\src\Det.c	   291          DET_UNUSED_PARAM(InstanceId);
; BSW\src\BSW\Gen\Det\src\Det.c	   292          DET_UNUSED_PARAM(ApiId);
; BSW\src\BSW\Gen\Det\src\Det.c	   293          DET_UNUSED_PARAM(ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   294      }
; BSW\src\BSW\Gen\Det\src\Det.c	   295      else
.L16:

; BSW\src\BSW\Gen\Det\src\Det.c	   296      {
; BSW\src\BSW\Gen\Det\src\Det.c	   297  #if (DET_CFG_RUNTIMECALLOUT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   298          DET_CFG_CALLRUNTIMECALLOUT(ModuleId, InstanceId, ApiId, ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   299  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   300  
; BSW\src\BSW\Gen\Det\src\Det.c	   301  #if (DET_CFG_FORWARDTODLT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   302          Dlt_DetForwardErrorTrace(ModuleId, InstanceId, ApiId, ErrorId);
; BSW\src\BSW\Gen\Det\src\Det.c	   303  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   304      }
; BSW\src\BSW\Gen\Det\src\Det.c	   305      return E_OK;
	mov	d2,#0
.L152:
	j	.L17

; BSW\src\BSW\Gen\Det\src\Det.c	   306  }
.L17:
	ret
.L93:
	
__Det_ReportRuntimeError_function_end:
	.size	Det_ReportRuntimeError,__Det_ReportRuntimeError_function_end-Det_ReportRuntimeError
.L55:
	; End of function
	
	.sdecl	'.text.Det.Det_ReportTransientFault',code,cluster('Det_ReportTransientFault')
	.sect	'.text.Det.Det_ReportTransientFault'
	.align	2
	
	.global	Det_ReportTransientFault

; BSW\src\BSW\Gen\Det\src\Det.c	   307  
; BSW\src\BSW\Gen\Det\src\Det.c	   308  /*
; BSW\src\BSW\Gen\Det\src\Det.c	   309   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   310   * Det_ReportTransientFault
; BSW\src\BSW\Gen\Det\src\Det.c	   311   * Service to report transient faults. If a callout has been configured then this callout shall
; BSW\src\BSW\Gen\Det\src\Det.c	   312   * be called and the returned value of the callout shall be returned. Otherwise it returns
; BSW\src\BSW\Gen\Det\src\Det.c	   313   * immediately with E_OK.
; BSW\src\BSW\Gen\Det\src\Det.c	   314   **************************************************************************************************
; BSW\src\BSW\Gen\Det\src\Det.c	   315   */
; BSW\src\BSW\Gen\Det\src\Det.c	   316  /* MR12 RULE 8.3 VIOLATION: The names of parameters in this function declaration are different from the names in a previous declaration.
; BSW\src\BSW\Gen\Det\src\Det.c	   317   * But this can be ignored, since the parameter names differ in RTE generated files */
; BSW\src\BSW\Gen\Det\src\Det.c	   318  Std_ReturnType Det_ReportTransientFault(uint16 ModuleId, uint8 InstanceId, uint8 ApiId, uint8 FaultId)
; Function Det_ReportTransientFault
.L31:
Det_ReportTransientFault:	.type	func

; BSW\src\BSW\Gen\Det\src\Det.c	   319  {
; BSW\src\BSW\Gen\Det\src\Det.c	   320      Std_ReturnType retval = E_OK;
	mov	d2,#0
.L115:

; BSW\src\BSW\Gen\Det\src\Det.c	   321      /* Check if DET was initialized, otherwise exit direclty */
; BSW\src\BSW\Gen\Det\src\Det.c	   322      if (!Det_Initialized_b)
	movh.a	a15,#@his(Det_Initialized_b)
	lea	a15,[a15]@los(Det_Initialized_b)
	ld.bu	d15,[a15]
	jne	d15,#0,.L18
.L157:

; BSW\src\BSW\Gen\Det\src\Det.c	   323      {
; BSW\src\BSW\Gen\Det\src\Det.c	   324          DET_UNUSED_PARAM(ModuleId);
	j	.L19
.L18:

; BSW\src\BSW\Gen\Det\src\Det.c	   325          DET_UNUSED_PARAM(InstanceId);
; BSW\src\BSW\Gen\Det\src\Det.c	   326          DET_UNUSED_PARAM(ApiId);
; BSW\src\BSW\Gen\Det\src\Det.c	   327          DET_UNUSED_PARAM(FaultId);
; BSW\src\BSW\Gen\Det\src\Det.c	   328      }
; BSW\src\BSW\Gen\Det\src\Det.c	   329      else
.L19:

; BSW\src\BSW\Gen\Det\src\Det.c	   330      {
; BSW\src\BSW\Gen\Det\src\Det.c	   331  #if (DET_CFG_TRANSIENTCALLOUT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   332          retval = DET_CFG_CALLTRANSIENTCALLOUT(ModuleId, InstanceId, ApiId, FaultId);
; BSW\src\BSW\Gen\Det\src\Det.c	   333  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   334  
; BSW\src\BSW\Gen\Det\src\Det.c	   335  #if (DET_CFG_FORWARDTODLT_SUPPORTED)
; BSW\src\BSW\Gen\Det\src\Det.c	   336          Dlt_DetForwardErrorTrace(ModuleId, InstanceId, ApiId, FaultId);
; BSW\src\BSW\Gen\Det\src\Det.c	   337  #endif
; BSW\src\BSW\Gen\Det\src\Det.c	   338      }
; BSW\src\BSW\Gen\Det\src\Det.c	   339      return retval;
	j	.L20

; BSW\src\BSW\Gen\Det\src\Det.c	   340  }
.L20:
	ret
.L98:
	
__Det_ReportTransientFault_function_end:
	.size	Det_ReportTransientFault,__Det_ReportTransientFault_function_end-Det_ReportTransientFault
.L60:
	; End of function
	
	.sdecl	'.bss.Det.Det_Initialized_b',data,cluster('Det_Initialized_b')
	.sect	'.bss.Det.Det_Initialized_b'
	.global	Det_Initialized_b
Det_Initialized_b:	.type	object
	.size	Det_Initialized_b,1
	.space	1
	.sdecl	'.bss.Det.Det_BufferIndex_u16',data,cluster('Det_BufferIndex_u16')
	.sect	'.bss.Det.Det_BufferIndex_u16'
	.align	2
Det_BufferIndex_u16:	.type	object
	.size	Det_BufferIndex_u16,2
	.space	2
	.sdecl	'.bss.Det.Det_ErrorEntryBuffer',data,cluster('Det_ErrorEntryBuffer')
	.sect	'.bss.Det.Det_ErrorEntryBuffer'
	.global	Det_ErrorEntryBuffer
	.align	2
Det_ErrorEntryBuffer:	.type	object
	.size	Det_ErrorEntryBuffer,60
	.space	60
	.calls	'Det_StoreErrorEntryInBuffer','Os_SuspendAllInterrupts'
	.calls	'Det_StoreErrorEntryInBuffer','Os_ResumeAllInterrupts'
	.calls	'Det_Init','Os_SuspendAllInterrupts'
	.calls	'Det_Init','rba_BswSrv_MemSet'
	.calls	'Det_Init','Os_ResumeAllInterrupts'
	.calls	'Det_Start','Os_SuspendAllInterrupts'
	.calls	'Det_Start','Os_ResumeAllInterrupts'
	.calls	'Det_ReportError','Det_StoreErrorEntryInBuffer'
	.calls	'Det_StoreErrorEntryInBuffer','',0
	.calls	'Det_Init','',0
	.calls	'Det_Start','',0
	.calls	'Det_ReportError','',0
	.calls	'Det_ReportRuntimeError','',0
	.extern	Os_SuspendAllInterrupts
	.extern	Os_ResumeAllInterrupts
	.extern	rba_BswSrv_MemSet
	.calls	'Det_ReportTransientFault','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L33:
	.word	10205
	.half	3
	.word	.L34
	.byte	4
.L32:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L35
.L86:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	129
	.byte	2
	.byte	'int',0,4,5,2
	.byte	'unsigned int',0,4,7
.L75:
	.byte	4
	.byte	'rba_DiagLib_MemUtils_MemSet',0,3,1,26,19,1,1
.L78:
	.byte	5
	.byte	'xDest_pv',0,1,26,54
	.word	146
.L80:
	.byte	5
	.byte	'xPattern_u32',0,1,26,71
	.word	151
.L82:
	.byte	5
	.byte	'numBytes_s32',0,1,26,92
	.word	158
.L84:
	.byte	6,0,7
	.byte	'Os_SuspendAllInterrupts',0,2,215,7,28,1,1,1,1,7
	.byte	'Os_ResumeAllInterrupts',0,2,216,7,28,1,1,1,1,8,3,72,9,1,9
	.byte	'Dummy',0
	.word	129
	.byte	1,2,35,0,0,10
	.word	335
.L73:
	.byte	3
	.word	356
.L88:
	.byte	2
	.byte	'unsigned short int',0,2,7,11
	.byte	'void',0,3
	.word	388
	.byte	12
	.byte	'rba_BswSrv_MemSet',0,4,84,14
	.word	394
	.byte	1,1,1,1,5
	.byte	'xDest_pv',0,4,84,38
	.word	394
	.byte	5
	.byte	'xPattern_u32',0,4,84,55
	.word	151
	.byte	5
	.byte	'numBytes_u32',0,4,84,76
	.word	158
	.byte	0,13
	.word	174
	.byte	14
	.word	209
	.byte	14
	.word	226
	.byte	14
	.word	247
	.byte	6,0,15,1,3
	.word	511
	.byte	16
	.byte	'__codeptr',0,5,1,1
	.word	513
	.byte	2
	.byte	'char',0,1,6,16
	.byte	'sint8',0,6,76,25
	.word	536
	.byte	16
	.byte	'uint8',0,6,81,25
	.word	129
	.byte	16
	.byte	'uint16',0,6,91,25
	.word	366
	.byte	16
	.byte	'sint32',0,6,96,24
	.word	151
	.byte	16
	.byte	'uint32',0,6,106,24
	.word	158
	.byte	2
	.byte	'unsigned long long int',0,8,7,16
	.byte	'uint64',0,6,111,30
	.word	617
	.byte	16
	.byte	'boolean',0,6,127,25
	.word	129
	.byte	16
	.byte	'StatusType',0,7,191,1,27
	.word	129
	.byte	16
	.byte	'Std_ReturnType',0,7,199,1,15
	.word	129
	.byte	8,7,206,1,9,8,9
	.byte	'vendorID',0
	.word	366
	.byte	2,2,35,0,9
	.byte	'moduleID',0
	.word	366
	.byte	2,2,35,2,9
	.byte	'sw_major_version',0
	.word	129
	.byte	1,2,35,4,9
	.byte	'sw_minor_version',0
	.word	129
	.byte	1,2,35,5,9
	.byte	'sw_patch_version',0
	.word	129
	.byte	1,2,35,6,0,16
	.byte	'Std_VersionInfoType',0,7,213,1,3
	.word	718
	.byte	16
	.byte	'PduIdType',0,8,22,19
	.word	366
	.byte	16
	.byte	'PduLengthType',0,8,26,19
	.word	366
	.byte	17,9,113,9,4,18
	.byte	'TP_DATACONF',0,0,18
	.byte	'TP_DATARETRY',0,1,18
	.byte	'TP_CONFPENDING',0,2,0,16
	.byte	'TpDataStateType',0,9,118,3
	.word	908
	.byte	16
	.byte	'Can_IdType',0,10,32,16
	.word	158
	.byte	16
	.byte	'Can_HwHandleType',0,10,43,16
	.word	366
	.byte	8,2,93,9,8,9
	.byte	'Class',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'TIN',0
	.word	129
	.byte	1,2,35,1,9
	.byte	'ReturnAddress',0
	.word	158
	.byte	4,2,35,4,0,16
	.byte	'OsTrapInfoType',0,2,97,3
	.word	1028
	.byte	19,68
	.word	158
	.byte	20,16,0,8,2,154,1,9,68,9
	.byte	'store',0
	.word	1108
	.byte	68,2,35,0,0,19,68
	.word	1117
	.byte	20,0,0,16
	.byte	'Os_JumpBufType',0,2,156,1,3
	.word	1139
	.byte	16
	.byte	'Os_StackTraceType',0,2,174,1,18
	.word	158
	.byte	8,2,175,1,9,8,9
	.byte	'sp',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'ctx',0
	.word	158
	.byte	4,2,35,4,0,16
	.byte	'Os_StackValueType',0,2,175,1,63
	.word	1199
	.byte	16
	.byte	'Os_StackSizeType',0,2,176,1,27
	.word	1199
	.byte	21,1,1,3
	.word	1284
	.byte	16
	.byte	'Os_VoidVoidFunctionType',0,2,179,1,16
	.word	1287
	.byte	16
	.byte	'ApplicationType',0,2,193,1,23
	.word	129
	.byte	22
	.byte	'Os_ApplicationConfigurationType_s',0,2,198,1,16,2,9
	.byte	'app_id',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,1,0,16
	.byte	'Os_ApplicationConfigurationType',0,2,201,1,3
	.word	1350
	.byte	16
	.byte	'Os_CoreStateType',0,2,203,1,16
	.word	158
	.byte	16
	.byte	'AreaIdType',0,2,204,1,16
	.word	366
	.byte	16
	.byte	'Os_PeripheralAddressType',0,2,212,1,22
	.word	158
	.byte	16
	.byte	'TickType',0,2,221,1,22
	.word	158
	.byte	16
	.byte	'Os_StopwatchTickType',0,2,225,1,22
	.word	158
	.byte	3
	.word	158
	.byte	16
	.byte	'Os_Lockable',0,2,234,1,18
	.word	1592
	.byte	16
	.byte	'CoreIdType',0,2,236,1,16
	.word	366
	.byte	16
	.byte	'SpinlockIdType',0,2,237,1,16
	.word	366
	.byte	17,2,239,1,9,4,18
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,18
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,16
	.byte	'TryToGetSpinlockType',0,2,239,1,74
	.word	1662
	.byte	17,2,174,2,9,4,18
	.byte	'APPLICATION_ACCESSIBLE',0,0,18
	.byte	'APPLICATION_RESTARTING',0,1,18
	.byte	'APPLICATION_TERMINATED',0,2,0,16
	.byte	'ApplicationStateType',0,2,174,2,92
	.word	1755
	.byte	23,1,1,24
	.word	129
	.byte	24
	.word	394
	.byte	0,3
	.word	1867
	.byte	16
	.byte	'Os_FunctionEntryType',0,2,183,2,16
	.word	1881
	.byte	22
	.byte	'Os_MeterInfoType_s',0,2,193,2,16,48,9
	.byte	'elapsed',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'previous',0
	.word	158
	.byte	4,2,35,4,9
	.byte	'max',0
	.word	158
	.byte	4,2,35,8,9
	.byte	'cumulative',0
	.word	158
	.byte	4,2,35,12,9
	.byte	'stackbase',0
	.word	1199
	.byte	8,2,35,16,9
	.byte	'stackusage',0
	.word	1199
	.byte	8,2,35,24,9
	.byte	'stackmax',0
	.word	1199
	.byte	8,2,35,32,9
	.byte	'stackbudget',0
	.word	1199
	.byte	8,2,35,40,0,16
	.byte	'Os_MeterInfoType',0,2,202,2,3
	.word	1916
	.byte	3
	.word	1916
	.byte	16
	.byte	'Os_MeterInfoRefType',0,2,203,2,50
	.word	2114
	.byte	16
	.byte	'EventMaskType',0,2,206,2,15
	.word	129
	.byte	16
	.byte	'Os_imaskType',0,2,211,2,16
	.word	158
	.byte	22
	.byte	'Os_ISRDynType_s',0,2,213,2,16,48,9
	.byte	'meter',0
	.word	1916
	.byte	48,2,35,0,0,16
	.byte	'Os_ISRDynType',0,2,215,2,3
	.word	2193
	.byte	3
	.word	2193
	.byte	10
	.word	2254
	.byte	22
	.byte	'Os_ISRType_s',0,2,216,2,16,24,9
	.byte	'entry_function',0
	.word	1292
	.byte	4,2,35,0,9
	.byte	'dynamic',0
	.word	2259
	.byte	4,2,35,4,9
	.byte	'imask',0
	.word	158
	.byte	4,2,35,8,9
	.byte	'stackbudget',0
	.word	1199
	.byte	8,2,35,12,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,20,9
	.byte	'application',0
	.word	129
	.byte	1,2,35,21,0,16
	.byte	'Os_ISRType',0,2,223,2,3
	.word	2264
	.byte	3
	.word	1284
	.byte	10
	.word	2264
	.byte	3
	.word	2423
	.byte	16
	.byte	'ISRType',0,2,224,2,46
	.word	2428
	.byte	16
	.byte	'Os_bitmask',0,2,239,2,22
	.word	158
	.byte	16
	.byte	'Os_pset0Type',0,2,240,2,20
	.word	158
	.byte	16
	.byte	'Os_pset1Type',0,2,241,2,20
	.word	158
	.byte	16
	.byte	'Os_pset2Type',0,2,242,2,20
	.word	158
	.byte	25,2,243,2,9,4,9
	.byte	'p0',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'p1',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'p2',0
	.word	158
	.byte	4,2,35,0,0,16
	.byte	'Os_psetType',0,2,247,2,3
	.word	2536
	.byte	25,2,249,2,9,4,9
	.byte	't0',0
	.word	158
	.byte	4,2,35,0,9
	.byte	't1',0
	.word	158
	.byte	4,2,35,0,9
	.byte	't2',0
	.word	158
	.byte	4,2,35,0,0,16
	.byte	'Os_tpmaskType',0,2,253,2,3
	.word	2600
	.byte	16
	.byte	'Os_ActivationCountType',0,2,254,2,23
	.word	129
	.byte	22
	.byte	'Os_TaskDynType_s',0,2,128,3,16,120,9
	.byte	'terminate_jump_buf',0
	.word	1148
	.byte	68,2,35,0,9
	.byte	'meter',0
	.word	1916
	.byte	48,2,35,68,9
	.byte	'activation_count',0
	.word	129
	.byte	1,2,35,116,0,16
	.byte	'Os_TaskDynType',0,2,132,3,3
	.word	2698
	.byte	19,68
	.word	1117
	.byte	20,0,0,3
	.word	2698
	.byte	10
	.word	2824
	.byte	22
	.byte	'Os_TaskType_s',0,2,134,3,16,40,9
	.byte	'dynamic',0
	.word	2829
	.byte	4,2,35,0,9
	.byte	'entry_function',0
	.word	1292
	.byte	4,2,35,4,9
	.byte	'pset',0
	.word	2536
	.byte	4,2,35,8,9
	.byte	'base_tpmask',0
	.word	2600
	.byte	4,2,35,12,9
	.byte	'tpmask',0
	.word	2600
	.byte	4,2,35,16,9
	.byte	'core_id',0
	.word	366
	.byte	2,2,35,20,9
	.byte	'index',0
	.word	158
	.byte	4,2,35,24,9
	.byte	'stackbudget',0
	.word	1199
	.byte	8,2,35,28,9
	.byte	'activation_count',0
	.word	129
	.byte	1,2,35,36,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,37,9
	.byte	'application',0
	.word	129
	.byte	1,2,35,38,0,16
	.byte	'Os_TaskType',0,2,146,3,3
	.word	2834
	.byte	10
	.word	2834
	.byte	3
	.word	3084
	.byte	16
	.byte	'TaskType',0,2,147,3,47
	.word	3089
	.byte	26
	.byte	'Os_TaskStateType',0,2,155,3,6,4,18
	.byte	'SUSPENDED',0,0,18
	.byte	'READY',0,1,18
	.byte	'WAITING',0,2,18
	.byte	'RUNNING',0,3,0,16
	.byte	'TaskStateType',0,2,156,3,31
	.word	3112
	.byte	25,2,167,3,3,4,9
	.byte	'tpmask',0
	.word	2600
	.byte	4,2,35,0,0,22
	.byte	'Os_ResourceDynType_s',0,2,166,3,16,4,9
	.byte	'saved_priority',0
	.word	3199
	.byte	4,2,35,0,0,16
	.byte	'Os_ResourceDynType',0,2,170,3,3
	.word	3222
	.byte	3
	.word	3222
	.byte	10
	.word	3302
	.byte	22
	.byte	'Os_ResourceType_s',0,2,171,3,16,12,9
	.byte	'dynamic',0
	.word	3307
	.byte	4,2,35,0,9
	.byte	'tpmask',0
	.word	2600
	.byte	4,2,35,4,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,8,0,16
	.byte	'Os_ResourceType',0,2,175,3,3
	.word	3312
	.byte	8,2,181,3,9,12,9
	.byte	'maxallowedvalue',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'ticksperbase',0
	.word	158
	.byte	4,2,35,4,9
	.byte	'mincycle',0
	.word	158
	.byte	4,2,35,8,0,16
	.byte	'AlarmBaseType',0,2,185,3,3
	.word	3411
	.byte	8,2,206,3,9,8,9
	.byte	'Running',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'Pending',0
	.word	129
	.byte	1,2,35,1,9
	.byte	'Delay',0
	.word	158
	.byte	4,2,35,4,0,16
	.byte	'Os_CounterStatusType',0,2,210,3,3
	.word	3506
	.byte	27
	.word	129
	.byte	1,1,3
	.word	3592
	.byte	16
	.byte	'Os_CounterIncrAdvType',0,2,217,3,22
	.word	3599
	.byte	22
	.byte	's_swd',0,2,222,3,12,4,9
	.byte	'count',0
	.word	158
	.byte	4,2,35,0,0,25,2,221,3,3,4,9
	.byte	'sw',0
	.word	3635
	.byte	4,2,35,0,0,22
	.byte	'Os_CounterDynType_s',0,2,220,3,16,4,9
	.byte	'type_dependent',0
	.word	3663
	.byte	4,2,35,0,0,16
	.byte	'Os_CounterDynType',0,2,226,3,3
	.word	3682
	.byte	3
	.word	3682
	.byte	10
	.word	3760
	.byte	22
	.byte	'Os_CounterType_s',0,2,227,3,16,28,9
	.byte	'dynamic',0
	.word	3765
	.byte	4,2,35,0,9
	.byte	'advincr',0
	.word	3604
	.byte	4,2,35,4,9
	.byte	'base',0
	.word	3411
	.byte	12,2,35,8,9
	.byte	'core',0
	.word	394
	.byte	4,2,35,20,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,24,9
	.byte	'application',0
	.word	129
	.byte	1,2,35,25,0,16
	.byte	'Os_CounterType',0,2,234,3,3
	.word	3770
	.byte	3
	.word	3592
	.byte	10
	.word	3770
	.byte	3
	.word	3922
	.byte	16
	.byte	'CounterType',0,2,235,3,52
	.word	3927
	.byte	26
	.byte	'Os_ScheduleTableStatusType',0,2,240,3,6,4,18
	.byte	'SCHEDULETABLE_STOPPED',0,0,18
	.byte	'SCHEDULETABLE_NEXT',0,1,18
	.byte	'SCHEDULETABLE_WAITING',0,2,18
	.byte	'SCHEDULETABLE_RUNNING',0,3,18
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,16
	.byte	'ScheduleTableStatusType',0,2,241,3,41
	.word	3953
	.byte	10
	.word	.L116-.L33
	.byte	3
	.word	4153
	.byte	16
	.byte	'ScheduleTableType',0,2,128,4,58
	.word	4158
	.byte	22
	.byte	'Os_ScheduleTableDynType_s',0,2,130,4,16,16,9
	.byte	'match',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'next',0
	.word	4163
	.byte	4,2,35,4,9
	.byte	'state',0
	.word	3953
	.byte	4,2,35,8,9
	.byte	'config',0
	.word	366
	.byte	2,2,35,12,0,3
	.word	4190
	.byte	10
	.word	4283
.L116:
	.byte	22
	.byte	'Os_ScheduleTableType_s',0,2,247,3,16,16,9
	.byte	'dynamic',0
	.word	4288
	.byte	4,2,35,0,9
	.byte	'counter',0
	.word	3932
	.byte	4,2,35,4,9
	.byte	'repeat',0
	.word	129
	.byte	1,2,35,8,9
	.byte	'config',0
	.word	366
	.byte	2,2,35,10,9
	.byte	'initial',0
	.word	129
	.byte	1,2,35,12,9
	.byte	'access',0
	.word	129
	.byte	1,2,35,13,9
	.byte	'application',0
	.word	129
	.byte	1,2,35,14,0,16
	.byte	'Os_ScheduleTableType',0,2,255,3,3
	.word	4293
	.byte	10
	.word	4293
	.byte	3
	.word	4473
	.byte	10
	.word	3770
	.byte	3
	.word	4483
	.byte	28
	.word	1597
	.byte	28
	.word	2536
	.byte	28
	.word	2433
	.byte	28
	.word	3094
	.byte	28
	.word	2600
	.byte	28
	.word	129
	.byte	28
	.word	3094
	.byte	22
	.byte	'Os_ControlledCoreType_s',0,2,251,6,16,112,9
	.byte	'TrapInfo',0
	.word	1028
	.byte	8,2,35,0,9
	.byte	'lock_taskaccess',0
	.word	4493
	.byte	4,2,35,8,9
	.byte	'ReadyTasks',0
	.word	4498
	.byte	4,2,35,12,9
	.byte	'RunningISR',0
	.word	4503
	.byte	4,2,35,16,9
	.byte	'RunningTask',0
	.word	4508
	.byte	4,2,35,20,9
	.byte	'RunningTPMask',0
	.word	4513
	.byte	4,2,35,24,9
	.byte	'CurrentMeteredObject',0
	.word	2119
	.byte	4,2,35,28,9
	.byte	'IdleMeter',0
	.word	1916
	.byte	48,2,35,32,9
	.byte	'AppAccess',0
	.word	129
	.byte	1,2,35,80,9
	.byte	'AppOverride',0
	.word	4518
	.byte	1,2,35,81,9
	.byte	'GetStackValueAdjust',0
	.word	1199
	.byte	8,2,35,84,9
	.byte	'InErrorHook',0
	.word	129
	.byte	1,2,35,92,9
	.byte	'ChainTaskRef',0
	.word	4523
	.byte	4,2,35,96,9
	.byte	'GetStackUsageAdjust',0
	.word	1199
	.byte	8,2,35,100,9
	.byte	'InProtectionHook',0
	.word	129
	.byte	1,2,35,108,9
	.byte	'CoreIsActive',0
	.word	129
	.byte	1,2,35,109,9
	.byte	'InShutdownHook',0
	.word	129
	.byte	1,2,35,110,0,16
	.byte	'Os_ControlledCoreType',0,2,141,7,3
	.word	4528
	.byte	3
	.word	158
	.byte	10
	.word	2264
	.byte	3
	.word	4984
	.byte	10
	.word	2834
	.byte	3
	.word	4994
	.byte	3
	.word	1916
	.byte	22
	.byte	'Os_AnyCoreType_s',0,2,151,7,16,96,9
	.byte	'DisableAllImask',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'SuspendAllImask',0
	.word	158
	.byte	4,2,35,4,9
	.byte	'SuspendOSImask',0
	.word	158
	.byte	4,2,35,8,9
	.byte	'DisableAllCount',0
	.word	158
	.byte	4,2,35,12,9
	.byte	'SuspendAllCount',0
	.word	158
	.byte	4,2,35,16,9
	.byte	'SuspendOSCount',0
	.word	158
	.byte	4,2,35,20,9
	.byte	'RestartJumpBuf',0
	.word	1148
	.byte	68,2,35,24,9
	.byte	'Restartable',0
	.word	129
	.byte	1,2,35,92,0,16
	.byte	'Os_AnyCoreType',0,2,160,7,3
	.word	5009
	.byte	16
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	158
	.byte	22
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,9
	.byte	'MsgObjId',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'HwControllerId',0
	.word	129
	.byte	1,2,35,1,9
	.byte	'TxObjPriorityClass',0
	.word	158
	.byte	4,2,35,4,0,16
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5286
	.byte	22
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,9
	.byte	'MaskRef',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'MsgId',0
	.word	158
	.byte	4,2,35,4,9
	.byte	'MsgObjId',0
	.word	129
	.byte	1,2,35,8,9
	.byte	'HwControllerId',0
	.word	129
	.byte	1,2,35,9,0,16
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	5422
	.byte	19,4
	.word	129
	.byte	20,3,0,22
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,9
	.byte	'ControllerMOMap',0
	.word	5562
	.byte	4,2,35,0,0,16
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	5571
	.byte	22
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,9
	.byte	'Can_NPCRValue',0
	.word	366
	.byte	2,2,35,0,0,16
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	5672
	.byte	22
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,9
	.byte	'CanControllerBaudrate',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'CanControllerBaudrateCfg',0
	.word	366
	.byte	2,2,35,4,0,16
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	5747
	.byte	10
	.word	5747
	.byte	3
	.word	5912
	.byte	22
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,9
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5917
	.byte	4,2,35,0,0,16
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	5922
	.byte	22
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,9
	.byte	'CanEventType',0
	.word	5562
	.byte	4,2,35,0,0,16
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6022
	.byte	16
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	129
	.byte	16
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	129
	.byte	8,12,168,1,9,12,9
	.byte	'in',0
	.word	394
	.byte	4,2,35,0,9
	.byte	'out',0
	.word	394
	.byte	4,2,35,4,9
	.byte	'used',0
	.word	366
	.byte	2,2,35,8,9
	.byte	'lost_data',0
	.word	129
	.byte	1,2,35,10,0,16
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6168
	.byte	17,12,175,1,9,4,18
	.byte	'RTE_DRA',0,0,18
	.byte	'RTE_WOWP',0,1,18
	.byte	'RTE_TASK',0,2,18
	.byte	'RTE_ARE',0,3,18
	.byte	'RTE_EV',0,4,18
	.byte	'RTE_MSI',0,5,0,16
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6255
	.byte	3
	.word	6168
	.byte	22
	.byte	'Rte_QCmnType',0,12,184,1,16,24,9
	.byte	'dynamic',0
	.word	6353
	.byte	4,2,35,0,9
	.byte	'copy',0
	.word	129
	.byte	1,2,35,4,9
	.byte	'queue_size',0
	.word	366
	.byte	2,2,35,6,9
	.byte	'element_size',0
	.word	366
	.byte	2,2,35,8,9
	.byte	'buffer_start',0
	.word	394
	.byte	4,2,35,12,9
	.byte	'buffer_end',0
	.word	394
	.byte	4,2,35,16,9
	.byte	'notification_type',0
	.word	6255
	.byte	4,2,35,20,0,16
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	6358
	.byte	16
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	158
	.byte	16
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	366
	.byte	19,128,8
	.word	129
	.byte	20,255,7,0,16
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	6596
	.byte	16
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	158
	.byte	16
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	366
	.byte	16
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	129
	.byte	16
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	129
	.byte	16
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	129
	.byte	8,13,92,9,2,9
	.byte	'DeviceMode',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'ChannelMode',0
	.word	129
	.byte	1,2,35,1,0,16
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	6787
	.byte	16
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	129
	.byte	16
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	129
	.byte	16
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	129
	.byte	16
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	129
	.byte	16
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	129
	.byte	16
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	366
	.byte	16
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	129
	.byte	8,13,140,1,9,4,9
	.byte	'cntTick_u16',0
	.word	366
	.byte	2,2,35,0,9
	.byte	'stTimer',0
	.word	129
	.byte	1,2,35,2,0,16
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7128
	.byte	16
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	366
	.byte	16
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	129
	.byte	16
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	158
	.byte	16
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	366
	.byte	16
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	129
	.byte	16
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	129
	.byte	8,13,181,1,9,24,9
	.byte	'ChannelState_e',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'LightTimeoutCtr_u32',0
	.word	158
	.byte	4,2,35,4,9
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	366
	.byte	2,2,35,8,9
	.byte	'ChannelMode_u8',0
	.word	129
	.byte	1,2,35,10,9
	.byte	'BusSmMode_u8',0
	.word	129
	.byte	1,2,35,11,9
	.byte	'UserRequestCtr_u8',0
	.word	129
	.byte	1,2,35,12,9
	.byte	'PassiveRequestState_u8',0
	.word	129
	.byte	1,2,35,13,9
	.byte	'PncRequestCtr_u8',0
	.word	129
	.byte	1,2,35,14,9
	.byte	'InhibitionReqStatus_u8',0
	.word	129
	.byte	1,2,35,15,9
	.byte	'NmNetworkRequestStatus_b',0
	.word	129
	.byte	1,2,35,16,9
	.byte	'DiagnosticRequestState_b',0
	.word	129
	.byte	1,2,35,17,9
	.byte	'CommunicationAllowed_b',0
	.word	129
	.byte	1,2,35,18,9
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	129
	.byte	1,2,35,19,9
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	129
	.byte	1,2,35,20,9
	.byte	'NmNetworkModeStatus_b',0
	.word	129
	.byte	1,2,35,21,0,16
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	7360
	.byte	8,13,206,1,9,10,9
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	366
	.byte	2,2,35,0,9
	.byte	'LimitToNoComCtr_u16',0
	.word	366
	.byte	2,2,35,2,9
	.byte	'RequestedUserMode_t',0
	.word	129
	.byte	1,2,35,4,9
	.byte	'IndicatedUserMode_t',0
	.word	129
	.byte	1,2,35,5,9
	.byte	'numChannelsInFullCom_u8',0
	.word	129
	.byte	1,2,35,6,9
	.byte	'numChannelsInSilentCom_u8',0
	.word	129
	.byte	1,2,35,7,9
	.byte	'numChannelsInNoCom_u8',0
	.word	129
	.byte	1,2,35,8,0,16
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	7864
	.byte	16
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	129
	.byte	16
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	129
	.byte	16
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	129
	.byte	16
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	129
	.byte	16
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	129
	.byte	16
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	6607
	.byte	19,128,8
	.word	129
	.byte	20,255,7,0,16
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	6607
	.byte	16
	.byte	'Det_ConfigType',0,3,75,3
	.word	335
	.byte	8,3,81,9,6,9
	.byte	'ModuleId',0
	.word	366
	.byte	2,2,35,0,9
	.byte	'InstanceId',0
	.word	129
	.byte	1,2,35,2,9
	.byte	'ApiId',0
	.word	129
	.byte	1,2,35,3,9
	.byte	'ErrorId',0
	.word	129
	.byte	1,2,35,4,0,16
	.byte	'Det_ErrorEntryBufferType',0,3,87,3
	.word	8705
	.byte	16
	.byte	'Rte_TaskRefType',0,14,184,1,32
	.word	3094
	.byte	16
	.byte	'Rte_EventRefType',0,14,185,1,32
	.word	129
	.byte	16
	.byte	'Rte_EventType',0,14,186,1,32
	.word	158
	.byte	16
	.byte	'Rte_REActCounterType',0,14,252,1,15
	.word	129
	.byte	3
	.word	129
	.byte	16
	.byte	'Rte_REActCounterRefType',0,14,253,1,58
	.word	8918
	.byte	8,14,255,1,9,8,9
	.byte	'task',0
	.word	8814
	.byte	4,2,35,0,9
	.byte	'acnt',0
	.word	8923
	.byte	4,2,35,4,0,16
	.byte	'Rte_REContainerType',0,14,130,2,3
	.word	8956
	.byte	10
	.word	2834
	.byte	3
	.word	9020
	.byte	3
	.word	129
	.byte	10
	.word	8956
	.byte	3
	.word	9035
	.byte	16
	.byte	'Rte_REContainerRefType',0,14,132,2,60
	.word	9040
	.byte	16
	.byte	'Rte_MSICounterType',0,14,149,2,16
	.word	366
	.byte	3
	.word	366
	.byte	16
	.byte	'Rte_MSICounterRefType',0,14,150,2,56
	.word	9105
	.byte	16
	.byte	'Rte_MSIPendingFlagType',0,14,152,2,17
	.word	129
	.byte	3
	.word	129
	.byte	16
	.byte	'Rte_MSIPendingFlagRefType',0,14,153,2,60
	.word	9173
	.byte	8,14,163,2,9,24,9
	.byte	'counter',0
	.word	9110
	.byte	4,2,35,0,9
	.byte	'incCounter',0
	.word	129
	.byte	1,2,35,4,9
	.byte	'pending',0
	.word	9178
	.byte	4,2,35,8,9
	.byte	'osTask',0
	.word	8814
	.byte	4,2,35,12,9
	.byte	'acnt',0
	.word	8923
	.byte	4,2,35,16,9
	.byte	'osEvent',0
	.word	129
	.byte	1,2,35,20,9
	.byte	'MSIInit',0
	.word	366
	.byte	2,2,35,22,0,16
	.byte	'Rte_MSITableEntry',0,14,172,2,3
	.word	9213
	.byte	3
	.word	366
	.byte	3
	.word	129
	.byte	16
	.byte	'Rte_TaskArrayIndex',0,14,179,2,16
	.word	129
	.byte	16
	.byte	'Rte_NrWaitingTasks',0,14,180,2,16
	.word	129
	.byte	8,14,182,2,9,4,9
	.byte	'pending',0
	.word	129
	.byte	1,2,35,0,9
	.byte	'count',0
	.word	129
	.byte	1,2,35,1,9
	.byte	'firstWaitingTask',0
	.word	129
	.byte	1,2,35,2,0,16
	.byte	'Rte_WaitableDatum',0,14,186,2,3
	.word	9431
	.byte	3
	.word	9431
	.byte	8,14,226,2,9,12,9
	.byte	'event_id',0
	.word	158
	.byte	4,2,35,0,9
	.byte	'wd',0
	.word	9523
	.byte	4,2,35,4,9
	.byte	'timeout',0
	.word	158
	.byte	4,2,35,8,0,16
	.byte	'Rte_WOWP_NotificationType',0,14,230,2,3
	.word	9528
	.byte	10
	.word	9528
	.byte	3
	.word	9617
	.byte	16
	.byte	'Rte_WOWP_NotificationRefType',0,14,232,2,66
	.word	9622
	.byte	16
	.byte	'Rte_ARE_NotificationType',0,14,234,2,29
	.word	8956
	.byte	22
	.byte	'Rte_QTaskType',0,14,243,2,16,28,9
	.byte	'cmn',0
	.word	6358
	.byte	24,2,35,0,9
	.byte	'task',0
	.word	8814
	.byte	4,2,35,24,0,16
	.byte	'Rte_QTaskType',0,14,246,2,3
	.word	9699
	.byte	22
	.byte	'Rte_QREType',0,14,250,2,16,28,9
	.byte	'cmn',0
	.word	6358
	.byte	24,2,35,0,9
	.byte	're',0
	.word	9045
	.byte	4,2,35,24,0,16
	.byte	'Rte_QREType',0,14,253,2,3
	.word	9770
	.byte	10
	.word	8956
	.byte	3
	.word	9835
	.byte	22
	.byte	'Rte_QWWPType',0,14,129,3,16,28,9
	.byte	'cmn',0
	.word	6358
	.byte	24,2,35,0,9
	.byte	'wwp',0
	.word	9627
	.byte	4,2,35,24,0,16
	.byte	'Rte_QWWPType',0,14,132,3,3
	.word	9845
	.byte	10
	.word	9528
	.byte	3
	.word	9913
	.byte	22
	.byte	'Rte_QEvType',0,14,136,3,16,36,9
	.byte	'cmn',0
	.word	6358
	.byte	24,2,35,0,9
	.byte	'task',0
	.word	8814
	.byte	4,2,35,24,9
	.byte	'mask',0
	.word	129
	.byte	1,2,35,28,9
	.byte	'acnt',0
	.word	8923
	.byte	4,2,35,32,0,16
	.byte	'Rte_QEvType',0,14,141,3,3
	.word	9923
	.byte	22
	.byte	'Rte_QMSIType',0,14,145,3,16,48,9
	.byte	'cmn',0
	.word	6358
	.byte	24,2,35,0,9
	.byte	'task',0
	.word	8814
	.byte	4,2,35,24,9
	.byte	'mask',0
	.word	129
	.byte	1,2,35,28,9
	.byte	'acnt',0
	.word	8923
	.byte	4,2,35,32,9
	.byte	'msiCounter',0
	.word	9110
	.byte	4,2,35,36,9
	.byte	'msiPending',0
	.word	9178
	.byte	4,2,35,40,9
	.byte	'msiLimit',0
	.word	366
	.byte	2,2,35,44,0,16
	.byte	'Rte_QMSIType',0,14,153,3,3
	.word	10018
	.byte	16
	.byte	'rba_BswSrv_uint64',0,4,66,28
	.word	617
.L109:
	.byte	19,60
	.word	8705
	.byte	20,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L34:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,0,3,8,58,15
	.byte	59,15,57,15,54,15,39,12,63,12,60,12,0,0,8,19,1,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56,9
	.byte	0,0,10,38,0,73,19,0,0,11,59,0,3,8,0,0,12,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	13,46,1,49,19,0,0,14,5,0,49,19,0,0,15,21,0,54,15,0,0,16,22,0,3,8,58,15,59,15,57,15,73,19,0,0,17,4,1,58
	.byte	15,59,15,57,15,11,15,0,0,18,40,0,3,8,28,13,0,0,19,1,1,11,15,73,19,0,0,20,33,0,47,15,0,0,21,21,0,54,15
	.byte	39,12,0,0,22,19,1,3,8,58,15,59,15,57,15,11,15,0,0,23,21,1,54,15,39,12,0,0,24,5,0,73,19,0,0,25,23,1,58
	.byte	15,59,15,57,15,11,15,0,0,26,4,1,3,8,58,15,59,15,57,15,11,15,0,0,27,21,0,73,19,54,15,39,12,0,0,28,53,0
	.byte	73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L35:
	.word	.L118-.L117
.L117:
	.half	3
	.word	.L120-.L119
.L119:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L120:
.L118:
	.sdecl	'.debug_info',debug,cluster('Det_Init')
	.sect	'.debug_info'
.L36:
	.word	252
	.half	3
	.word	.L37
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L39,.L38
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_Init',0,1,148,1,6,1,1,1
	.word	.L24,.L72,.L23
	.byte	4
	.byte	'ConfigPtr',0,1,148,1,37
	.word	.L73,.L74
	.byte	5
	.word	.L24,.L72
	.byte	6
	.word	.L75,.L76,.L77
	.byte	7
	.word	.L78,.L79
	.byte	7
	.word	.L80,.L81
	.byte	7
	.word	.L82,.L83
	.byte	8
	.word	.L84,.L76,.L77
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_Init')
	.sect	'.debug_abbrev'
.L37:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_Init')
	.sect	'.debug_line'
.L38:
	.word	.L122-.L121
.L121:
	.half	3
	.word	.L124-.L123
.L123:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L124:
	.byte	5,5,7,0,5,2
	.word	.L24
	.byte	3,149,1,1,5,9,7,9
	.half	.L125-.L24
	.byte	3,3,1,5,5,9
	.half	.L7-.L125
	.byte	3,3,1,9
	.half	.L114-.L7
	.byte	3,4,1,4,2,5,54,9
	.half	.L76-.L114
	.byte	3,253,126,1,4,1,5,5,9
	.half	.L77-.L76
	.byte	3,132,1,1,5,27,9
	.half	.L126-.L77
	.byte	1,5,25,9
	.half	.L127-.L126
	.byte	1,5,5,9
	.half	.L128-.L127
	.byte	3,2,1,5,25,9
	.half	.L129-.L128
	.byte	1,5,23,9
	.half	.L130-.L129
	.byte	1,5,5,9
	.half	.L8-.L130
	.byte	3,3,1,5,1,9
	.half	.L6-.L8
	.byte	3,2,1,7,9
	.half	.L40-.L6
	.byte	0,1,1
.L122:
	.sdecl	'.debug_ranges',debug,cluster('Det_Init')
	.sect	'.debug_ranges'
.L39:
	.word	-1,.L24,0,.L40-.L24,0,0
	.sdecl	'.debug_info',debug,cluster('Det_Start')
	.sect	'.debug_info'
.L41:
	.word	175
	.half	3
	.word	.L42
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L44,.L43
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_Start',0,1,176,1,6,1,1,1
	.word	.L9,.L85,.L25
	.byte	4
	.word	.L9,.L85
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_Start')
	.sect	'.debug_abbrev'
.L42:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_Start')
	.sect	'.debug_line'
.L43:
	.word	.L132-.L131
.L131:
	.half	3
	.word	.L134-.L133
.L133:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0,0
.L134:
	.byte	5,5,7,0,5,2
	.word	.L9
	.byte	3,179,1,1,9
	.half	.L135-.L9
	.byte	3,2,1,5,27,9
	.half	.L136-.L135
	.byte	1,5,25,9
	.half	.L137-.L136
	.byte	1,5,5,9
	.half	.L10-.L137
	.byte	3,3,1,5,1,9
	.half	.L138-.L10
	.byte	3,2,1,7,9
	.half	.L45-.L138
	.byte	0,1,1
.L132:
	.sdecl	'.debug_ranges',debug,cluster('Det_Start')
	.sect	'.debug_ranges'
.L44:
	.word	-1,.L9,0,.L45-.L9,0,0
	.sdecl	'.debug_info',debug,cluster('Det_ReportError')
	.sect	'.debug_info'
.L46:
	.word	271
	.half	3
	.word	.L47
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L49,.L48
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_ReportError',0,1,222,1,16
	.word	.L86
	.byte	1,1,1
	.word	.L27,.L87,.L26
	.byte	4
	.byte	'ModuleId',0,1,222,1,39
	.word	.L88,.L89
	.byte	4
	.byte	'InstanceId',0,1,222,1,55
	.word	.L86,.L90
	.byte	4
	.byte	'ApiId',0,1,222,1,73
	.word	.L86,.L91
	.byte	4
	.byte	'ErrorId',0,1,222,1,86
	.word	.L86,.L92
	.byte	5
	.word	.L27,.L87
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_ReportError')
	.sect	'.debug_abbrev'
.L47:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_ReportError')
	.sect	'.debug_line'
.L48:
	.word	.L140-.L139
.L139:
	.half	3
	.word	.L142-.L141
.L141:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0,0
.L142:
	.byte	5,10,7,0,5,2
	.word	.L27
	.byte	3,224,1,1,5,35,9
	.half	.L143-.L27
	.byte	3,2,1,5,13,9
	.half	.L11-.L143
	.byte	3,14,1,5,9,9
	.half	.L144-.L11
	.byte	1,5,71,7,9
	.half	.L145-.L144
	.byte	3,21,1,5,12,9
	.half	.L12-.L145
	.byte	3,11,1,5,5,9
	.half	.L146-.L12
	.byte	1,5,1,9
	.half	.L14-.L146
	.byte	3,1,1,7,9
	.half	.L50-.L14
	.byte	0,1,1
.L140:
	.sdecl	'.debug_ranges',debug,cluster('Det_ReportError')
	.sect	'.debug_ranges'
.L49:
	.word	-1,.L27,0,.L50-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_info'
.L51:
	.word	278
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L54,.L53
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_ReportRuntimeError',0,1,157,2,16
	.word	.L86
	.byte	1,1,1
	.word	.L29,.L93,.L28
	.byte	4
	.byte	'ModuleId',0,1,157,2,46
	.word	.L88,.L94
	.byte	4
	.byte	'InstanceId',0,1,157,2,62
	.word	.L86,.L95
	.byte	4
	.byte	'ApiId',0,1,157,2,80
	.word	.L86,.L96
	.byte	4
	.byte	'ErrorId',0,1,157,2,93
	.word	.L86,.L97
	.byte	5
	.word	.L29,.L93
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_line'
.L53:
	.word	.L148-.L147
.L147:
	.half	3
	.word	.L150-.L149
.L149:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0,0
.L150:
	.byte	5,10,7,0,5,2
	.word	.L29
	.byte	3,159,2,1,5,35,9
	.half	.L151-.L29
	.byte	3,2,1,5,12,9
	.half	.L16-.L151
	.byte	3,15,1,5,5,9
	.half	.L152-.L16
	.byte	1,5,1,9
	.half	.L17-.L152
	.byte	3,1,1,7,9
	.half	.L55-.L17
	.byte	0,1,1
.L148:
	.sdecl	'.debug_ranges',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_ranges'
.L54:
	.word	-1,.L29,0,.L55-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_info'
.L56:
	.word	301
	.half	3
	.word	.L57
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L59,.L58
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_ReportTransientFault',0,1,190,2,16
	.word	.L86
	.byte	1,1,1
	.word	.L31,.L98,.L30
	.byte	4
	.byte	'ModuleId',0,1,190,2,48
	.word	.L88,.L99
	.byte	4
	.byte	'InstanceId',0,1,190,2,64
	.word	.L86,.L100
	.byte	4
	.byte	'ApiId',0,1,190,2,82
	.word	.L86,.L101
	.byte	4
	.byte	'FaultId',0,1,190,2,95
	.word	.L86,.L102
	.byte	5
	.word	.L31,.L98
	.byte	6
	.byte	'retval',0,1,192,2,20
	.word	.L86,.L103
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_abbrev'
.L57:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_line'
.L58:
	.word	.L154-.L153
.L153:
	.half	3
	.word	.L156-.L155
.L155:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0,0
.L156:
	.byte	5,27,7,0,5,2
	.word	.L31
	.byte	3,191,2,1,5,10,9
	.half	.L115-.L31
	.byte	3,2,1,5,35,9
	.half	.L157-.L115
	.byte	3,2,1,5,5,9
	.half	.L19-.L157
	.byte	3,15,1,5,1,9
	.half	.L20-.L19
	.byte	3,1,1,7,9
	.half	.L60-.L20
	.byte	0,1,1
.L154:
	.sdecl	'.debug_ranges',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_ranges'
.L59:
	.word	-1,.L31,0,.L60-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_info'
.L61:
	.word	273
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L64,.L63
	.byte	2
	.word	.L32
	.byte	3
	.byte	'Det_StoreErrorEntryInBuffer',0,1,81,13,1,1
	.word	.L22,.L104,.L21
	.byte	4
	.byte	'ModuleId',0,1,81,48
	.word	.L88,.L105
	.byte	4
	.byte	'InstanceId',0,1,81,64
	.word	.L86,.L106
	.byte	4
	.byte	'ApiId',0,1,81,82
	.word	.L86,.L107
	.byte	4
	.byte	'ErrorId',0,1,81,95
	.word	.L86,.L108
	.byte	5
	.word	.L22,.L104
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_line'
.L63:
	.word	.L159-.L158
.L158:
	.half	3
	.word	.L161-.L160
.L160:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0,0,0,0,0
.L161:
	.byte	5,13,7,0,5,2
	.word	.L22
	.byte	3,208,0,1,5,5,9
	.half	.L2-.L22
	.byte	3,3,1,5,8,9
	.half	.L110-.L2
	.byte	3,3,1,5,5,9
	.half	.L162-.L110
	.byte	1,5,29,7,9
	.half	.L163-.L162
	.byte	3,2,1,5,9,9
	.half	.L164-.L163
	.byte	1,5,29,9
	.half	.L165-.L164
	.byte	1,5,60,9
	.half	.L166-.L165
	.byte	1,5,62,9
	.half	.L167-.L166
	.byte	3,1,1,5,57,9
	.half	.L168-.L167
	.byte	3,1,1,5,59,9
	.half	.L169-.L168
	.byte	3,1,1,5,28,9
	.half	.L170-.L169
	.byte	3,1,1,5,5,9
	.half	.L4-.L170
	.byte	3,4,1,5,1,9
	.half	.L171-.L4
	.byte	3,1,1,7,9
	.half	.L65-.L171
	.byte	0,1,1
.L159:
	.sdecl	'.debug_ranges',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_ranges'
.L64:
	.word	-1,.L22,0,.L65-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('Det_Initialized_b')
	.sect	'.debug_info'
.L66:
	.word	160
	.half	3
	.word	.L67
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L32
	.byte	3
	.byte	'Det_Initialized_b',0,5,25,9
	.word	.L86
	.byte	1,5,3
	.word	Det_Initialized_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Det_Initialized_b')
	.sect	'.debug_abbrev'
.L67:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Det_ErrorEntryBuffer')
	.sect	'.debug_info'
.L68:
	.word	163
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L32
	.byte	3
	.byte	'Det_ErrorEntryBuffer',0,5,29,26
	.word	.L109
	.byte	1,5,3
	.word	Det_ErrorEntryBuffer
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Det_ErrorEntryBuffer')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Det_BufferIndex_u16')
	.sect	'.debug_info'
.L70:
	.word	161
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Det\\src\\Det.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L32
	.byte	3
	.byte	'Det_BufferIndex_u16',0,5,28,15
	.word	.L88
	.byte	5,3
	.word	Det_BufferIndex_u16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Det_BufferIndex_u16')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Det_Init')
	.sect	'.debug_loc'
.L74:
	.word	-1,.L24,0,.L114-.L24
	.half	1
	.byte	100
	.word	0,0
.L23:
	.word	-1,.L24,0,.L72-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L83:
	.word	0,0
.L79:
	.word	0,0
.L81:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Det_ReportError')
	.sect	'.debug_loc'
.L91:
	.word	-1,.L27,0,.L12-.L27
	.half	1
	.byte	86
	.word	0,0
.L26:
	.word	-1,.L27,0,.L87-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L92:
	.word	-1,.L27,0,.L12-.L27
	.half	1
	.byte	87
	.word	0,0
.L90:
	.word	-1,.L27,0,.L12-.L27
	.half	1
	.byte	85
	.word	0,0
.L89:
	.word	-1,.L27,0,.L12-.L27
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_loc'
.L96:
	.word	-1,.L29,0,.L93-.L29
	.half	1
	.byte	86
	.word	0,0
.L28:
	.word	-1,.L29,0,.L93-.L29
	.half	2
	.byte	138,0
	.word	0,0
.L97:
	.word	-1,.L29,0,.L93-.L29
	.half	1
	.byte	87
	.word	0,0
.L95:
	.word	-1,.L29,0,.L93-.L29
	.half	1
	.byte	85
	.word	0,0
.L94:
	.word	-1,.L29,0,.L93-.L29
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_loc'
.L101:
	.word	-1,.L31,0,.L98-.L31
	.half	1
	.byte	86
	.word	0,0
.L30:
	.word	-1,.L31,0,.L98-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L102:
	.word	-1,.L31,0,.L98-.L31
	.half	1
	.byte	87
	.word	0,0
.L100:
	.word	-1,.L31,0,.L98-.L31
	.half	1
	.byte	85
	.word	0,0
.L99:
	.word	-1,.L31,0,.L98-.L31
	.half	1
	.byte	84
	.word	0,0
.L103:
	.word	-1,.L31,.L115-.L31,.L98-.L31
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Det_Start')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L9,0,.L85-.L9
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_loc'
.L107:
	.word	-1,.L22,0,.L110-.L22
	.half	1
	.byte	86
	.word	.L113-.L22,.L104-.L22
	.half	1
	.byte	89
	.word	0,0
.L21:
	.word	-1,.L22,0,.L104-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L108:
	.word	-1,.L22,0,.L110-.L22
	.half	1
	.byte	87
	.word	.L2-.L22,.L104-.L22
	.half	1
	.byte	90
	.word	0,0
.L106:
	.word	-1,.L22,0,.L110-.L22
	.half	1
	.byte	85
	.word	.L112-.L22,.L104-.L22
	.half	1
	.byte	95
	.word	0,0
.L105:
	.word	-1,.L22,0,.L110-.L22
	.half	1
	.byte	84
	.word	.L111-.L22,.L104-.L22
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L172:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Det_StoreErrorEntryInBuffer')
	.sect	'.debug_frame'
	.word	12
	.word	.L172,.L22,.L104-.L22
	.sdecl	'.debug_frame',debug,cluster('Det_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L172,.L24,.L72-.L24
	.sdecl	'.debug_frame',debug,cluster('Det_Start')
	.sect	'.debug_frame'
	.word	12
	.word	.L172,.L9,.L85-.L9
	.sdecl	'.debug_frame',debug,cluster('Det_ReportError')
	.sect	'.debug_frame'
	.word	12
	.word	.L172,.L27,.L87-.L27
	.sdecl	'.debug_frame',debug,cluster('Det_ReportRuntimeError')
	.sect	'.debug_frame'
	.word	24
	.word	.L172,.L29,.L93-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Det_ReportTransientFault')
	.sect	'.debug_frame'
	.word	24
	.word	.L172,.L31,.L98-.L31
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; BSW\src\BSW\Gen\Det\src\Det.c	   341  
; BSW\src\BSW\Gen\Det\src\Det.c	   342  #define DET_STOP_SEC_ROM_CODE
; BSW\src\BSW\Gen\Det\src\Det.c	   343  #include "Det_MemMap.h"
; BSW\src\BSW\Gen\Det\src\Det.c	   344  

	; Module end
