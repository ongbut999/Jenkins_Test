	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16740a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\PduR\\PduR_Gateway_TpRx.src BSW\\src\\BSW\\Gen\\PduR\\src\\PduR_Gateway_TpRx.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\PduR\\src\\PduR_Gateway_TpRx.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	16541
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\PduR\\src\\PduR_Gateway_TpRx.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	144
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	161
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	161
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	144
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	144
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	144
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	161
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	144
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	144
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	474
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	496
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	496
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	144
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	474
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	474
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	496
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	144
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	144
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	813
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	829
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	829
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	144
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	813
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	813
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	144
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	829
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	144
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	144
	.byte	6,0,8
	.word	166
	.byte	9
	.word	196
	.byte	9
	.word	211
	.byte	6,0,8
	.word	234
	.byte	9
	.word	266
	.byte	9
	.word	281
	.byte	6,0,8
	.word	304
	.byte	9
	.word	344
	.byte	9
	.word	358
	.byte	6,0,8
	.word	381
	.byte	9
	.word	414
	.byte	9
	.word	428
	.byte	9
	.word	449
	.byte	6,0,8
	.word	501
	.byte	9
	.word	532
	.byte	9
	.word	547
	.byte	6,0,8
	.word	570
	.byte	9
	.word	603
	.byte	9
	.word	618
	.byte	6,0,8
	.word	641
	.byte	9
	.word	682
	.byte	9
	.word	696
	.byte	6,0,8
	.word	719
	.byte	9
	.word	753
	.byte	9
	.word	767
	.byte	9
	.word	788
	.byte	6,0,8
	.word	834
	.byte	9
	.word	865
	.byte	9
	.word	880
	.byte	6,0,8
	.word	903
	.byte	9
	.word	936
	.byte	9
	.word	951
	.byte	6,0,8
	.word	974
	.byte	9
	.word	1015
	.byte	9
	.word	1029
	.byte	6,0,8
	.word	1052
	.byte	9
	.word	1086
	.byte	9
	.word	1100
	.byte	9
	.word	1121
	.byte	6,0,10,1,3
	.word	1365
	.byte	11
	.byte	'__codeptr',0,4,1,1
	.word	1367
	.byte	2
	.byte	'char',0,1,6,11
	.byte	'sint8',0,5,76,25
	.word	1390
	.byte	11
	.byte	'uint8',0,5,81,25
	.word	144
	.byte	11
	.byte	'uint16',0,5,91,25
	.word	474
	.byte	11
	.byte	'uint32',0,5,106,24
	.word	813
	.byte	2
	.byte	'unsigned long long int',0,8,7,11
	.byte	'uint64',0,5,111,30
	.word	1456
	.byte	11
	.byte	'boolean',0,5,127,25
	.word	144
	.byte	2
	.byte	'unsigned long int',0,4,7,11
	.byte	'uint16_least',0,5,147,1,25
	.word	1513
	.byte	11
	.byte	'StatusType',0,6,191,1,27
	.word	144
	.byte	11
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	144
	.byte	12,6,206,1,9,8,13
	.byte	'vendorID',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'moduleID',0
	.word	474
	.byte	2,2,35,2,13
	.byte	'sw_major_version',0
	.word	144
	.byte	1,2,35,4,13
	.byte	'sw_minor_version',0
	.word	144
	.byte	1,2,35,5,13
	.byte	'sw_patch_version',0
	.word	144
	.byte	1,2,35,6,0,11
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	1600
	.byte	11
	.byte	'PduIdType',0,7,22,19
	.word	474
	.byte	11
	.byte	'PduLengthType',0,7,26,19
	.word	474
	.byte	12,8,71,9,8,13
	.byte	'SduDataPtr',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'SduLength',0
	.word	474
	.byte	2,2,35,4,0,11
	.byte	'PduInfoType',0,8,75,3
	.word	1790
	.byte	14,8,90,9,4,15
	.byte	'BUFREQ_OK',0,0,15
	.byte	'BUFREQ_E_NOT_OK',0,1,15
	.byte	'BUFREQ_E_BUSY',0,2,15
	.byte	'BUFREQ_E_OVFL',0,3,0,11
	.byte	'BufReq_ReturnType',0,8,96,3
	.word	1855
	.byte	14,8,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,8,118,3
	.word	1949
	.byte	11
	.byte	'Can_IdType',0,9,32,16
	.word	813
	.byte	11
	.byte	'Can_HwHandleType',0,9,43,16
	.word	474
	.byte	12,10,93,9,8,13
	.byte	'Class',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'TIN',0
	.word	144
	.byte	1,2,35,1,13
	.byte	'ReturnAddress',0
	.word	813
	.byte	4,2,35,4,0,11
	.byte	'OsTrapInfoType',0,10,97,3
	.word	2069
	.byte	16,68
	.word	813
	.byte	17,16,0,12,10,154,1,9,68,13
	.byte	'store',0
	.word	2149
	.byte	68,2,35,0,0,16,68
	.word	2158
	.byte	17,0,0,11
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	2180
	.byte	11
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	813
	.byte	12,10,175,1,9,8,13
	.byte	'sp',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'ctx',0
	.word	813
	.byte	4,2,35,4,0,11
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	2240
	.byte	11
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	2240
	.byte	18,1,1,3
	.word	2325
	.byte	11
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	2328
	.byte	11
	.byte	'ApplicationType',0,10,193,1,23
	.word	144
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,13
	.byte	'app_id',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,1,0,11
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	2391
	.byte	11
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	813
	.byte	11
	.byte	'AreaIdType',0,10,204,1,16
	.word	474
	.byte	11
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	813
	.byte	11
	.byte	'TickType',0,10,221,1,22
	.word	813
	.byte	11
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	813
	.byte	11
	.byte	'Os_Lockable',0,10,234,1,18
	.word	829
	.byte	11
	.byte	'CoreIdType',0,10,236,1,16
	.word	474
	.byte	11
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	474
	.byte	14,10,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,11
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	2698
	.byte	14,10,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,11
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	2791
	.byte	20
	.byte	'void',0,3
	.word	2903
	.byte	21,1,1,22
	.word	144
	.byte	22
	.word	2909
	.byte	0,3
	.word	2914
	.byte	11
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2928
	.byte	19
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,13
	.byte	'elapsed',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'previous',0
	.word	813
	.byte	4,2,35,4,13
	.byte	'max',0
	.word	813
	.byte	4,2,35,8,13
	.byte	'cumulative',0
	.word	813
	.byte	4,2,35,12,13
	.byte	'stackbase',0
	.word	2240
	.byte	8,2,35,16,13
	.byte	'stackusage',0
	.word	2240
	.byte	8,2,35,24,13
	.byte	'stackmax',0
	.word	2240
	.byte	8,2,35,32,13
	.byte	'stackbudget',0
	.word	2240
	.byte	8,2,35,40,0,11
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2963
	.byte	3
	.word	2963
	.byte	11
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	3161
	.byte	11
	.byte	'EventMaskType',0,10,206,2,15
	.word	144
	.byte	11
	.byte	'Os_imaskType',0,10,211,2,16
	.word	813
	.byte	19
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,13
	.byte	'meter',0
	.word	2963
	.byte	48,2,35,0,0,11
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	3240
	.byte	3
	.word	3240
	.byte	23
	.word	3301
	.byte	19
	.byte	'Os_ISRType_s',0,10,216,2,16,24,13
	.byte	'entry_function',0
	.word	2333
	.byte	4,2,35,0,13
	.byte	'dynamic',0
	.word	3306
	.byte	4,2,35,4,13
	.byte	'imask',0
	.word	813
	.byte	4,2,35,8,13
	.byte	'stackbudget',0
	.word	2240
	.byte	8,2,35,12,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,20,13
	.byte	'application',0
	.word	144
	.byte	1,2,35,21,0,11
	.byte	'Os_ISRType',0,10,223,2,3
	.word	3311
	.byte	3
	.word	2325
	.byte	23
	.word	3311
	.byte	3
	.word	3470
	.byte	11
	.byte	'ISRType',0,10,224,2,46
	.word	3475
	.byte	11
	.byte	'Os_bitmask',0,10,239,2,22
	.word	813
	.byte	11
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	813
	.byte	11
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	813
	.byte	11
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	813
	.byte	24,10,243,2,9,4,13
	.byte	'p0',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'p1',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'p2',0
	.word	813
	.byte	4,2,35,0,0,11
	.byte	'Os_psetType',0,10,247,2,3
	.word	3583
	.byte	24,10,249,2,9,4,13
	.byte	't0',0
	.word	813
	.byte	4,2,35,0,13
	.byte	't1',0
	.word	813
	.byte	4,2,35,0,13
	.byte	't2',0
	.word	813
	.byte	4,2,35,0,0,11
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	3647
	.byte	11
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	144
	.byte	19
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,13
	.byte	'terminate_jump_buf',0
	.word	2189
	.byte	68,2,35,0,13
	.byte	'meter',0
	.word	2963
	.byte	48,2,35,68,13
	.byte	'activation_count',0
	.word	144
	.byte	1,2,35,116,0,11
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	3745
	.byte	16,68
	.word	2158
	.byte	17,0,0,3
	.word	3745
	.byte	23
	.word	3871
	.byte	19
	.byte	'Os_TaskType_s',0,10,134,3,16,40,13
	.byte	'dynamic',0
	.word	3876
	.byte	4,2,35,0,13
	.byte	'entry_function',0
	.word	2333
	.byte	4,2,35,4,13
	.byte	'pset',0
	.word	3583
	.byte	4,2,35,8,13
	.byte	'base_tpmask',0
	.word	3647
	.byte	4,2,35,12,13
	.byte	'tpmask',0
	.word	3647
	.byte	4,2,35,16,13
	.byte	'core_id',0
	.word	474
	.byte	2,2,35,20,13
	.byte	'index',0
	.word	813
	.byte	4,2,35,24,13
	.byte	'stackbudget',0
	.word	2240
	.byte	8,2,35,28,13
	.byte	'activation_count',0
	.word	144
	.byte	1,2,35,36,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,37,13
	.byte	'application',0
	.word	144
	.byte	1,2,35,38,0,11
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3881
	.byte	23
	.word	3881
	.byte	3
	.word	4131
	.byte	11
	.byte	'TaskType',0,10,147,3,47
	.word	4136
	.byte	25
	.byte	'Os_TaskStateType',0,10,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,11
	.byte	'TaskStateType',0,10,156,3,31
	.word	4159
	.byte	24,10,167,3,3,4,13
	.byte	'tpmask',0
	.word	3647
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,13
	.byte	'saved_priority',0
	.word	4246
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	4269
	.byte	3
	.word	4269
	.byte	23
	.word	4349
	.byte	19
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,13
	.byte	'dynamic',0
	.word	4354
	.byte	4,2,35,0,13
	.byte	'tpmask',0
	.word	3647
	.byte	4,2,35,4,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,8,0,11
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	4359
	.byte	12,10,181,3,9,12,13
	.byte	'maxallowedvalue',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'ticksperbase',0
	.word	813
	.byte	4,2,35,4,13
	.byte	'mincycle',0
	.word	813
	.byte	4,2,35,8,0,11
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	4458
	.byte	12,10,206,3,9,8,13
	.byte	'Running',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'Pending',0
	.word	144
	.byte	1,2,35,1,13
	.byte	'Delay',0
	.word	813
	.byte	4,2,35,4,0,11
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	4553
	.byte	26
	.word	144
	.byte	1,1,3
	.word	4639
	.byte	11
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	4646
	.byte	19
	.byte	's_swd',0,10,222,3,12,4,13
	.byte	'count',0
	.word	813
	.byte	4,2,35,0,0,24,10,221,3,3,4,13
	.byte	'sw',0
	.word	4682
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,13
	.byte	'type_dependent',0
	.word	4710
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	4729
	.byte	3
	.word	4729
	.byte	23
	.word	4807
	.byte	19
	.byte	'Os_CounterType_s',0,10,227,3,16,28,13
	.byte	'dynamic',0
	.word	4812
	.byte	4,2,35,0,13
	.byte	'advincr',0
	.word	4651
	.byte	4,2,35,4,13
	.byte	'base',0
	.word	4458
	.byte	12,2,35,8,13
	.byte	'core',0
	.word	2909
	.byte	4,2,35,20,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,24,13
	.byte	'application',0
	.word	144
	.byte	1,2,35,25,0,11
	.byte	'Os_CounterType',0,10,234,3,3
	.word	4817
	.byte	3
	.word	4639
	.byte	23
	.word	4817
	.byte	3
	.word	4969
	.byte	11
	.byte	'CounterType',0,10,235,3,52
	.word	4974
	.byte	25
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,11
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	5000
	.byte	23
	.word	.L6-.L3
	.byte	3
	.word	5200
	.byte	11
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	5205
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,13
	.byte	'match',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'next',0
	.word	5210
	.byte	4,2,35,4,13
	.byte	'state',0
	.word	5000
	.byte	4,2,35,8,13
	.byte	'config',0
	.word	474
	.byte	2,2,35,12,0,3
	.word	5237
	.byte	23
	.word	5330
.L6:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,13
	.byte	'dynamic',0
	.word	5335
	.byte	4,2,35,0,13
	.byte	'counter',0
	.word	4979
	.byte	4,2,35,4,13
	.byte	'repeat',0
	.word	144
	.byte	1,2,35,8,13
	.byte	'config',0
	.word	474
	.byte	2,2,35,10,13
	.byte	'initial',0
	.word	144
	.byte	1,2,35,12,13
	.byte	'access',0
	.word	144
	.byte	1,2,35,13,13
	.byte	'application',0
	.word	144
	.byte	1,2,35,14,0,11
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	5340
	.byte	23
	.word	5340
	.byte	3
	.word	5520
	.byte	23
	.word	4817
	.byte	3
	.word	5530
	.byte	27
	.word	2633
	.byte	27
	.word	3583
	.byte	27
	.word	3480
	.byte	27
	.word	4141
	.byte	27
	.word	3647
	.byte	27
	.word	144
	.byte	27
	.word	4141
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,13
	.byte	'TrapInfo',0
	.word	2069
	.byte	8,2,35,0,13
	.byte	'lock_taskaccess',0
	.word	5540
	.byte	4,2,35,8,13
	.byte	'ReadyTasks',0
	.word	5545
	.byte	4,2,35,12,13
	.byte	'RunningISR',0
	.word	5550
	.byte	4,2,35,16,13
	.byte	'RunningTask',0
	.word	5555
	.byte	4,2,35,20,13
	.byte	'RunningTPMask',0
	.word	5560
	.byte	4,2,35,24,13
	.byte	'CurrentMeteredObject',0
	.word	3166
	.byte	4,2,35,28,13
	.byte	'IdleMeter',0
	.word	2963
	.byte	48,2,35,32,13
	.byte	'AppAccess',0
	.word	144
	.byte	1,2,35,80,13
	.byte	'AppOverride',0
	.word	5565
	.byte	1,2,35,81,13
	.byte	'GetStackValueAdjust',0
	.word	2240
	.byte	8,2,35,84,13
	.byte	'InErrorHook',0
	.word	144
	.byte	1,2,35,92,13
	.byte	'ChainTaskRef',0
	.word	5570
	.byte	4,2,35,96,13
	.byte	'GetStackUsageAdjust',0
	.word	2240
	.byte	8,2,35,100,13
	.byte	'InProtectionHook',0
	.word	144
	.byte	1,2,35,108,13
	.byte	'CoreIsActive',0
	.word	144
	.byte	1,2,35,109,13
	.byte	'InShutdownHook',0
	.word	144
	.byte	1,2,35,110,0,11
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	5575
	.byte	3
	.word	813
	.byte	23
	.word	3311
	.byte	3
	.word	6031
	.byte	23
	.word	3881
	.byte	3
	.word	6041
	.byte	3
	.word	2963
	.byte	19
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,13
	.byte	'DisableAllImask',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'SuspendAllImask',0
	.word	813
	.byte	4,2,35,4,13
	.byte	'SuspendOSImask',0
	.word	813
	.byte	4,2,35,8,13
	.byte	'DisableAllCount',0
	.word	813
	.byte	4,2,35,12,13
	.byte	'SuspendAllCount',0
	.word	813
	.byte	4,2,35,16,13
	.byte	'SuspendOSCount',0
	.word	813
	.byte	4,2,35,20,13
	.byte	'RestartJumpBuf',0
	.word	2189
	.byte	68,2,35,24,13
	.byte	'Restartable',0
	.word	144
	.byte	1,2,35,92,0,11
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	6056
	.byte	11
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	813
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,13
	.byte	'MsgObjId',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'HwControllerId',0
	.word	144
	.byte	1,2,35,1,13
	.byte	'TxObjPriorityClass',0
	.word	813
	.byte	4,2,35,4,0,11
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	6333
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,13
	.byte	'MaskRef',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'MsgId',0
	.word	813
	.byte	4,2,35,4,13
	.byte	'MsgObjId',0
	.word	144
	.byte	1,2,35,8,13
	.byte	'HwControllerId',0
	.word	144
	.byte	1,2,35,9,0,11
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	6469
	.byte	16,4
	.word	144
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,13
	.byte	'ControllerMOMap',0
	.word	6609
	.byte	4,2,35,0,0,11
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	6618
	.byte	19
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,13
	.byte	'Can_NPCRValue',0
	.word	474
	.byte	2,2,35,0,0,11
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	6719
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,13
	.byte	'CanControllerBaudrate',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'CanControllerBaudrateCfg',0
	.word	474
	.byte	2,2,35,4,0,11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	6794
	.byte	23
	.word	6794
	.byte	3
	.word	6959
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,13
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6964
	.byte	4,2,35,0,0,11
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6969
	.byte	19
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,13
	.byte	'CanEventType',0
	.word	6609
	.byte	4,2,35,0,0,11
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	7069
	.byte	11
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	144
	.byte	11
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	144
	.byte	12,12,168,1,9,12,13
	.byte	'in',0
	.word	2909
	.byte	4,2,35,0,13
	.byte	'out',0
	.word	2909
	.byte	4,2,35,4,13
	.byte	'used',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'lost_data',0
	.word	144
	.byte	1,2,35,10,0,11
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	7215
	.byte	14,12,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,11
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	7302
	.byte	3
	.word	7215
	.byte	19
	.byte	'Rte_QCmnType',0,12,184,1,16,24,13
	.byte	'dynamic',0
	.word	7400
	.byte	4,2,35,0,13
	.byte	'copy',0
	.word	144
	.byte	1,2,35,4,13
	.byte	'queue_size',0
	.word	474
	.byte	2,2,35,6,13
	.byte	'element_size',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'buffer_start',0
	.word	2909
	.byte	4,2,35,12,13
	.byte	'buffer_end',0
	.word	2909
	.byte	4,2,35,16,13
	.byte	'notification_type',0
	.word	7302
	.byte	4,2,35,20,0,11
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	7405
	.byte	11
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	813
	.byte	11
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	474
	.byte	16,128,8
	.word	144
	.byte	17,255,7,0,11
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	7643
	.byte	11
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	813
	.byte	11
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	474
	.byte	11
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	144
	.byte	11
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	144
	.byte	11
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	144
	.byte	12,13,92,9,2,13
	.byte	'DeviceMode',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'ChannelMode',0
	.word	144
	.byte	1,2,35,1,0,11
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	7834
	.byte	11
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	144
	.byte	11
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	144
	.byte	11
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	144
	.byte	11
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	144
	.byte	11
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	144
	.byte	11
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	474
	.byte	11
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	144
	.byte	12,13,140,1,9,4,13
	.byte	'cntTick_u16',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'stTimer',0
	.word	144
	.byte	1,2,35,2,0,11
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	8175
	.byte	11
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	474
	.byte	11
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	144
	.byte	11
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	813
	.byte	11
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	474
	.byte	11
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	144
	.byte	11
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	144
	.byte	12,13,181,1,9,24,13
	.byte	'ChannelState_e',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'LightTimeoutCtr_u32',0
	.word	813
	.byte	4,2,35,4,13
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'ChannelMode_u8',0
	.word	144
	.byte	1,2,35,10,13
	.byte	'BusSmMode_u8',0
	.word	144
	.byte	1,2,35,11,13
	.byte	'UserRequestCtr_u8',0
	.word	144
	.byte	1,2,35,12,13
	.byte	'PassiveRequestState_u8',0
	.word	144
	.byte	1,2,35,13,13
	.byte	'PncRequestCtr_u8',0
	.word	144
	.byte	1,2,35,14,13
	.byte	'InhibitionReqStatus_u8',0
	.word	144
	.byte	1,2,35,15,13
	.byte	'NmNetworkRequestStatus_b',0
	.word	144
	.byte	1,2,35,16,13
	.byte	'DiagnosticRequestState_b',0
	.word	144
	.byte	1,2,35,17,13
	.byte	'CommunicationAllowed_b',0
	.word	144
	.byte	1,2,35,18,13
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	144
	.byte	1,2,35,19,13
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	144
	.byte	1,2,35,20,13
	.byte	'NmNetworkModeStatus_b',0
	.word	144
	.byte	1,2,35,21,0,11
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	8407
	.byte	12,13,206,1,9,10,13
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'LimitToNoComCtr_u16',0
	.word	474
	.byte	2,2,35,2,13
	.byte	'RequestedUserMode_t',0
	.word	144
	.byte	1,2,35,4,13
	.byte	'IndicatedUserMode_t',0
	.word	144
	.byte	1,2,35,5,13
	.byte	'numChannelsInFullCom_u8',0
	.word	144
	.byte	1,2,35,6,13
	.byte	'numChannelsInSilentCom_u8',0
	.word	144
	.byte	1,2,35,7,13
	.byte	'numChannelsInNoCom_u8',0
	.word	144
	.byte	1,2,35,8,0,11
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8911
	.byte	11
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	144
	.byte	11
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	144
	.byte	11
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	144
	.byte	11
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	144
	.byte	11
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	144
	.byte	11
	.byte	'Dem_EventStatusType',0,13,170,2,15
	.word	144
	.byte	11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	7654
	.byte	16,128,8
	.word	144
	.byte	17,255,7,0,11
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	7654
	.byte	11
	.byte	'PduR_RoutingPathGroupIdType',0,14,156,1,17
	.word	474
	.byte	11
	.byte	'rba_BswSrv_uint64',0,15,66,28
	.word	1456
	.byte	11
	.byte	'Rte_TaskRefType',0,16,184,1,32
	.word	4141
	.byte	11
	.byte	'Rte_EventRefType',0,16,185,1,32
	.word	144
	.byte	11
	.byte	'Rte_EventType',0,16,186,1,32
	.word	813
	.byte	11
	.byte	'Rte_REActCounterType',0,16,252,1,15
	.word	144
	.byte	3
	.word	144
	.byte	11
	.byte	'Rte_REActCounterRefType',0,16,253,1,58
	.word	9925
	.byte	12,16,255,1,9,8,13
	.byte	'task',0
	.word	9821
	.byte	4,2,35,0,13
	.byte	'acnt',0
	.word	9930
	.byte	4,2,35,4,0,11
	.byte	'Rte_REContainerType',0,16,130,2,3
	.word	9963
	.byte	23
	.word	3881
	.byte	3
	.word	10027
	.byte	3
	.word	144
	.byte	23
	.word	9963
	.byte	3
	.word	10042
	.byte	11
	.byte	'Rte_REContainerRefType',0,16,132,2,60
	.word	10047
	.byte	11
	.byte	'Rte_MSICounterType',0,16,149,2,16
	.word	474
	.byte	3
	.word	474
	.byte	11
	.byte	'Rte_MSICounterRefType',0,16,150,2,56
	.word	10112
	.byte	11
	.byte	'Rte_MSIPendingFlagType',0,16,152,2,17
	.word	144
	.byte	3
	.word	144
	.byte	11
	.byte	'Rte_MSIPendingFlagRefType',0,16,153,2,60
	.word	10180
	.byte	12,16,163,2,9,24,13
	.byte	'counter',0
	.word	10117
	.byte	4,2,35,0,13
	.byte	'incCounter',0
	.word	144
	.byte	1,2,35,4,13
	.byte	'pending',0
	.word	10185
	.byte	4,2,35,8,13
	.byte	'osTask',0
	.word	9821
	.byte	4,2,35,12,13
	.byte	'acnt',0
	.word	9930
	.byte	4,2,35,16,13
	.byte	'osEvent',0
	.word	144
	.byte	1,2,35,20,13
	.byte	'MSIInit',0
	.word	474
	.byte	2,2,35,22,0,11
	.byte	'Rte_MSITableEntry',0,16,172,2,3
	.word	10220
	.byte	3
	.word	474
	.byte	3
	.word	144
	.byte	11
	.byte	'Rte_TaskArrayIndex',0,16,179,2,16
	.word	144
	.byte	11
	.byte	'Rte_NrWaitingTasks',0,16,180,2,16
	.word	144
	.byte	12,16,182,2,9,4,13
	.byte	'pending',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'count',0
	.word	144
	.byte	1,2,35,1,13
	.byte	'firstWaitingTask',0
	.word	144
	.byte	1,2,35,2,0,11
	.byte	'Rte_WaitableDatum',0,16,186,2,3
	.word	10438
	.byte	3
	.word	10438
	.byte	12,16,226,2,9,12,13
	.byte	'event_id',0
	.word	813
	.byte	4,2,35,0,13
	.byte	'wd',0
	.word	10530
	.byte	4,2,35,4,13
	.byte	'timeout',0
	.word	813
	.byte	4,2,35,8,0,11
	.byte	'Rte_WOWP_NotificationType',0,16,230,2,3
	.word	10535
	.byte	23
	.word	10535
	.byte	3
	.word	10624
	.byte	11
	.byte	'Rte_WOWP_NotificationRefType',0,16,232,2,66
	.word	10629
	.byte	11
	.byte	'Rte_ARE_NotificationType',0,16,234,2,29
	.word	9963
	.byte	19
	.byte	'Rte_QTaskType',0,16,243,2,16,28,13
	.byte	'cmn',0
	.word	7405
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9821
	.byte	4,2,35,24,0,11
	.byte	'Rte_QTaskType',0,16,246,2,3
	.word	10706
	.byte	19
	.byte	'Rte_QREType',0,16,250,2,16,28,13
	.byte	'cmn',0
	.word	7405
	.byte	24,2,35,0,13
	.byte	're',0
	.word	10052
	.byte	4,2,35,24,0,11
	.byte	'Rte_QREType',0,16,253,2,3
	.word	10777
	.byte	23
	.word	9963
	.byte	3
	.word	10842
	.byte	19
	.byte	'Rte_QWWPType',0,16,129,3,16,28,13
	.byte	'cmn',0
	.word	7405
	.byte	24,2,35,0,13
	.byte	'wwp',0
	.word	10634
	.byte	4,2,35,24,0,11
	.byte	'Rte_QWWPType',0,16,132,3,3
	.word	10852
	.byte	23
	.word	10535
	.byte	3
	.word	10920
	.byte	19
	.byte	'Rte_QEvType',0,16,136,3,16,36,13
	.byte	'cmn',0
	.word	7405
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9821
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	144
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9930
	.byte	4,2,35,32,0,11
	.byte	'Rte_QEvType',0,16,141,3,3
	.word	10930
	.byte	19
	.byte	'Rte_QMSIType',0,16,145,3,16,48,13
	.byte	'cmn',0
	.word	7405
	.byte	24,2,35,0,13
	.byte	'task',0
	.word	9821
	.byte	4,2,35,24,13
	.byte	'mask',0
	.word	144
	.byte	1,2,35,28,13
	.byte	'acnt',0
	.word	9930
	.byte	4,2,35,32,13
	.byte	'msiCounter',0
	.word	10117
	.byte	4,2,35,36,13
	.byte	'msiPending',0
	.word	10185
	.byte	4,2,35,40,13
	.byte	'msiLimit',0
	.word	474
	.byte	2,2,35,44,0,11
	.byte	'Rte_QMSIType',0,16,153,3,3
	.word	11025
	.byte	11
	.byte	'PduR_LayerType',0,17,132,1,15
	.word	144
	.byte	11
	.byte	'PduR_BuffLockType',0,17,166,1,25
	.word	144
	.byte	23
	.word	1790
	.byte	3
	.word	11231
	.byte	28
	.word	144
	.byte	1,1,22
	.word	474
	.byte	22
	.word	11236
	.byte	0,3
	.word	11241
	.byte	12,17,218,1,9,4,13
	.byte	'PduR_loTransmitFunc',0
	.word	11259
	.byte	4,2,35,0,0,11
	.byte	'PduR_loTransmitFuncType',0,17,221,1,2
	.word	11264
	.byte	28
	.word	144
	.byte	1,1,22
	.word	474
	.byte	0,3
	.word	11333
	.byte	12,17,243,1,9,4,13
	.byte	'PduR_loCancelTransmitFunc',0
	.word	11346
	.byte	4,2,35,0,0,11
	.byte	'PduR_loCancelTransmitFuncType',0,17,246,1,2
	.word	11351
	.byte	12,17,130,2,9,4,13
	.byte	'PduR_loCancelReceiveFunc',0
	.word	11346
	.byte	4,2,35,0,0,11
	.byte	'PduR_loCancelReceiveFuncType',0,17,133,2,2
	.word	11432
	.byte	21,1,1,22
	.word	474
	.byte	22
	.word	11236
	.byte	0,3
	.word	11511
	.byte	12,17,158,2,9,4,13
	.byte	'PduR_upIfRxIndicationFunc',0
	.word	11525
	.byte	4,2,35,0,0,11
	.byte	'PduR_upIfRxIndicationFuncType',0,17,161,2,2
	.word	11530
	.byte	21,1,1,22
	.word	474
	.byte	0,3
	.word	11611
	.byte	12,17,199,2,9,4,13
	.byte	'PduR_upIfTxConfirmationFunc',0
	.word	11620
	.byte	4,2,35,0,0,11
	.byte	'PduR_upIfTxConfirmationFuncType',0,17,202,2,2
	.word	11625
	.byte	3
	.word	1790
	.byte	28
	.word	144
	.byte	1,1,22
	.word	474
	.byte	22
	.word	11710
	.byte	0,3
	.word	11715
	.byte	12,17,230,2,9,4,13
	.byte	'PduR_upIfTriggerTxFunc',0
	.word	11733
	.byte	4,2,35,0,0,11
	.byte	'PduR_upIfTriggerTxFuncType',0,17,233,2,2
	.word	11738
	.byte	3
	.word	474
	.byte	28
	.word	1855
	.byte	1,1,22
	.word	474
	.byte	22
	.word	11236
	.byte	22
	.word	11813
	.byte	0,3
	.word	11818
	.byte	12,17,134,3,9,4,13
	.byte	'PduR_upTpCopyRxDataFunc',0
	.word	11841
	.byte	4,2,35,0,0,11
	.byte	'PduR_upTpCopyRxDataFuncType',0,17,137,3,2
	.word	11846
	.byte	28
	.word	1855
	.byte	1,1,22
	.word	474
	.byte	22
	.word	11236
	.byte	22
	.word	474
	.byte	22
	.word	11813
	.byte	0,3
	.word	11923
	.byte	12,17,158,3,9,4,13
	.byte	'PduR_upTpStartOfReceptionFunc',0
	.word	11951
	.byte	4,2,35,0,0,11
	.byte	'PduR_upTpStartOfReceptionFuncType',0,17,161,3,2
	.word	11956
	.byte	21,1,1,22
	.word	474
	.byte	22
	.word	144
	.byte	0,3
	.word	12045
	.byte	12,17,190,3,9,4,13
	.byte	'PduR_upTpRxIndicationFunc',0
	.word	12059
	.byte	4,2,35,0,0,11
	.byte	'PduR_upTpRxIndicationFuncType',0,17,193,3,2
	.word	12064
	.byte	12,8,121,9,8,13
	.byte	'TpDataState',0
	.word	1949
	.byte	4,2,35,0,13
	.byte	'TxTpDataCnt',0
	.word	474
	.byte	2,2,35,4,0,3
	.word	12145
	.byte	28
	.word	1855
	.byte	1,1,22
	.word	474
	.byte	22
	.word	11236
	.byte	22
	.word	12193
	.byte	22
	.word	11813
	.byte	0,3
	.word	12198
	.byte	12,17,223,3,9,4,13
	.byte	'PduR_upTpCopyTxDataFunc',0
	.word	12226
	.byte	4,2,35,0,0,11
	.byte	'PduR_upTpCopyTxDataFuncType',0,17,227,3,2
	.word	12231
	.byte	12,17,129,4,9,4,13
	.byte	'PduR_upTpTxConfirmationFunc',0
	.word	12059
	.byte	4,2,35,0,0,11
	.byte	'PduR_upTpTxConfirmationFuncType',0,17,132,4,2
	.word	12308
	.byte	11
	.byte	'PduR_loTransmitFP',0,17,140,4,15
	.word	144
	.byte	11
	.byte	'PduR_loCancelTransmitFP',0,17,146,4,15
	.word	144
	.byte	11
	.byte	'PduR_upIfRxIndicationFP',0,17,152,4,15
	.word	144
	.byte	11
	.byte	'PduR_upIfTxConfirmationFP',0,17,158,4,15
	.word	144
	.byte	11
	.byte	'PduR_upIfTriggerTxFP',0,17,164,4,15
	.word	144
	.byte	11
	.byte	'PduR_upTpStartOfReceptionFP',0,17,170,4,15
	.word	144
	.byte	11
	.byte	'PduR_upTpProvideRxBufFP',0,17,176,4,15
	.word	144
	.byte	11
	.byte	'PduR_upTpRxIndicationFP',0,17,182,4,15
	.word	144
	.byte	11
	.byte	'PduR_upTpProvideTxBufFP',0,17,188,4,15
	.word	144
	.byte	11
	.byte	'PduR_upTpTxConfirmationFP',0,17,194,4,15
	.word	144
	.byte	12,17,207,4,9,4,13
	.byte	'loId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'loTransmitID',0
	.word	144
	.byte	1,2,35,2,13
	.byte	'loCancelTransmitID',0
	.word	144
	.byte	1,2,35,3,0,11
	.byte	'PduR_RT_UpToLo',0,17,212,4,3
	.word	12722
	.byte	12,17,223,4,9,4,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'upRxIndicationID',0
	.word	144
	.byte	1,2,35,2,0,11
	.byte	'PduR_RT_LoIfRxToUp',0,17,227,4,3
	.word	12817
	.byte	12,17,238,4,9,4,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'upTxConfirmationID',0
	.word	144
	.byte	1,2,35,2,0,11
	.byte	'PduR_RT_LoIfTxToUp',0,17,242,4,3
	.word	12892
	.byte	12,17,254,4,9,4,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'upTriggerTxID',0
	.word	144
	.byte	1,2,35,2,13
	.byte	'upTxConfirmationID',0
	.word	144
	.byte	1,2,35,3,0,11
	.byte	'PduR_RT_LoTtIfTxToUp',0,17,131,5,4
	.word	12969
	.byte	12,17,144,5,9,6,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'upStartOfReceptionID',0
	.word	144
	.byte	1,2,35,2,13
	.byte	'upProvideRxBufID',0
	.word	144
	.byte	1,2,35,3,13
	.byte	'upRxIndicationID',0
	.word	144
	.byte	1,2,35,4,0,11
	.byte	'PduR_RT_LoTpRxToUp',0,17,150,5,3
	.word	13071
	.byte	12,17,162,5,9,4,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'upProvideTxBufID',0
	.word	144
	.byte	1,2,35,2,13
	.byte	'upTxConfirmationID',0
	.word	144
	.byte	1,2,35,3,0,11
	.byte	'PduR_RT_LoTpTxToUp',0,17,167,5,3
	.word	13202
	.byte	12,17,183,5,9,12,13
	.byte	'upToLo',0
	.word	12722
	.byte	4,2,35,0,13
	.byte	'isTpModule',0
	.word	144
	.byte	1,2,35,4,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,6,13
	.byte	'upLayerSymName',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'upSrcLayerName',0
	.word	144
	.byte	1,2,35,10,0,11
	.byte	'PduR_MT_UpToLo',0,17,194,5,3
	.word	13305
	.byte	12,17,205,5,9,6,13
	.byte	'toUp',0
	.word	12969
	.byte	4,2,35,0,13
	.byte	'destLowerLayers',0
	.word	144
	.byte	1,2,35,4,0,11
	.byte	'PduR_MT_LoIfTxToUp',0,17,209,5,3
	.word	13434
	.byte	3
	.word	1790
	.byte	12,17,221,5,9,12,13
	.byte	'pduPtr',0
	.word	13508
	.byte	4,2,35,0,13
	.byte	'allocError',0
	.word	1855
	.byte	4,2,35,4,13
	.byte	'txFailure',0
	.word	144
	.byte	1,2,35,8,13
	.byte	'txConf',0
	.word	144
	.byte	1,2,35,9,0,11
	.byte	'PduR_MS_LoTpTxToUp',0,17,227,5,5
	.word	13513
	.byte	12,17,237,5,9,6,13
	.byte	'toUp',0
	.word	13202
	.byte	4,2,35,0,13
	.byte	'destLowerLayers',0
	.word	144
	.byte	1,2,35,4,0,11
	.byte	'PduR_MT_LoTpTxToUp',0,17,241,5,3
	.word	13619
	.byte	12,17,255,5,9,6,13
	.byte	'length',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'loId',0
	.word	474
	.byte	2,2,35,2,13
	.byte	'transmitID',0
	.word	144
	.byte	1,2,35,4,0,11
	.byte	'PduR_GT_IfTx',0,17,132,6,3
	.word	13693
	.byte	23
	.word	2903
	.byte	3
	.word	13772
	.byte	12,17,147,6,9,8,13
	.byte	'buffer',0
	.word	13777
	.byte	4,2,35,0,13
	.byte	'loId',0
	.word	474
	.byte	2,2,35,4,13
	.byte	'transmitID',0
	.word	144
	.byte	1,2,35,6,13
	.byte	'isFifoType',0
	.word	144
	.byte	1,2,35,7,0,11
	.byte	'PduR_GT_If',0,17,153,6,3
	.word	13782
	.byte	12,17,181,6,9,32,13
	.byte	'bufferPtr',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'readPtr',0
	.word	161
	.byte	4,2,35,4,13
	.byte	'writePtr',0
	.word	161
	.byte	4,2,35,8,13
	.byte	'numRxLength',0
	.word	474
	.byte	2,2,35,12,13
	.byte	'numTxLength',0
	.word	474
	.byte	2,2,35,14,13
	.byte	'SduLength',0
	.word	474
	.byte	2,2,35,16,13
	.byte	'bufferLength',0
	.word	474
	.byte	2,2,35,18,13
	.byte	'remainingBuffLength',0
	.word	474
	.byte	2,2,35,20,13
	.byte	'RxChunkLength',0
	.word	474
	.byte	2,2,35,22,13
	.byte	'TxChunkLength',0
	.word	474
	.byte	2,2,35,24,13
	.byte	'Rx_Status',0
	.word	144
	.byte	1,2,35,26,13
	.byte	'Tx_Status',0
	.word	144
	.byte	1,2,35,27,13
	.byte	'Tx_E_OK_Count',0
	.word	144
	.byte	1,2,35,28,0,11
	.byte	'PduR_TpSession_Dynamic',0,17,201,6,3
	.word	13879
	.byte	3
	.word	13879
	.byte	12,17,218,6,9,4,13
	.byte	'GwTpSessionPtr',0
	.word	14191
	.byte	4,2,35,0,0,11
	.byte	'PduR_GwTp_SessionListType',0,17,221,6,2
	.word	14196
	.byte	12,17,250,6,9,4,13
	.byte	'primarySession',0
	.word	14191
	.byte	4,2,35,0,0,11
	.byte	'PduR_TpConnection_Dynamic',0,17,131,7,3
	.word	14262
	.byte	3
	.word	14262
	.byte	12,17,146,7,9,12,13
	.byte	'begin',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'connectionTable',0
	.word	14328
	.byte	4,2,35,4,13
	.byte	'eltSize',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'buffPoolId',0
	.word	474
	.byte	2,2,35,10,0,11
	.byte	'PduR_FIFO_Tp_fixed',0,17,152,7,3
	.word	14333
	.byte	23
	.word	14333
	.byte	3
	.word	14445
	.byte	12,17,169,7,9,16,13
	.byte	'buffer',0
	.word	14450
	.byte	4,2,35,0,13
	.byte	'numOfLowerLayers',0
	.word	474
	.byte	2,2,35,4,13
	.byte	'TpGwQueueSize',0
	.word	474
	.byte	2,2,35,6,13
	.byte	'loId',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'upId',0
	.word	474
	.byte	2,2,35,10,13
	.byte	'TpThreshold',0
	.word	474
	.byte	2,2,35,12,13
	.byte	'loTransmitID',0
	.word	144
	.byte	1,2,35,14,0,11
	.byte	'PduR_GT_Tp',0,17,180,7,3
	.word	14455
	.byte	11
	.byte	'PduR_loCancelReceiveFP',0,17,202,7,15
	.word	144
	.byte	12,17,213,7,9,4,13
	.byte	'LoTpRxId',0
	.word	474
	.byte	2,2,35,0,13
	.byte	'CancelRxFP',0
	.word	144
	.byte	1,2,35,2,0,11
	.byte	'PduR_RT_UpTpRxToLoTp',0,17,221,7,3
	.word	14650
	.byte	23
	.word	14650
	.byte	3
	.word	14725
	.byte	12,17,232,7,9,8,13
	.byte	'UpTpToLoTp',0
	.word	14730
	.byte	4,2,35,0,13
	.byte	'UpTpToLoTp_NrEntries',0
	.word	474
	.byte	2,2,35,4,0,11
	.byte	'PduR_UpTpToLoTpRxConfig',0,17,236,7,3
	.word	14735
	.byte	3
	.word	144
	.byte	12,17,129,8,9,16,13
	.byte	'info',0
	.word	1790
	.byte	8,2,35,0,13
	.byte	'lockPtr',0
	.word	14825
	.byte	4,2,35,8,13
	.byte	'readerPduInfo',0
	.word	13508
	.byte	4,2,35,12,0,11
	.byte	'PduR_SingleEntryBuffer',0,17,134,8,3
	.word	14830
	.byte	12,17,155,8,9,12,13
	.byte	'readPtr',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'writePtr',0
	.word	161
	.byte	4,2,35,4,13
	.byte	'actLen',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'used',0
	.word	144
	.byte	1,2,35,10,13
	.byte	'txConfPending',0
	.word	144
	.byte	1,2,35,11,0,11
	.byte	'PduR_FIFO_If_dynamic',0,17,163,8,3
	.word	14923
	.byte	12,17,174,8,9,2,13
	.byte	'byteDefaultValue',0
	.word	144
	.byte	1,2,35,0,13
	.byte	'bytePosition',0
	.word	144
	.byte	1,2,35,1,0,11
	.byte	'PduR_DefaultValues_fixed',0,17,178,8,3
	.word	15048
	.byte	12,17,219,8,9,12,13
	.byte	'begin',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'dyn',0
	.word	2909
	.byte	4,2,35,4,13
	.byte	'eltSize',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'nrElts',0
	.word	144
	.byte	1,2,35,10,0,11
	.byte	'PduR_FIFO_fixed',0,17,225,8,3
	.word	15137
	.byte	23
	.word	12722
	.byte	3
	.word	15230
	.byte	23
	.word	13305
	.byte	3
	.word	15240
	.byte	12,17,246,8,9,12,13
	.byte	'CddToLo',0
	.word	15235
	.byte	4,2,35,0,13
	.byte	'CddToLoMc',0
	.word	15245
	.byte	4,2,35,4,13
	.byte	'CddToLo_NrEntries',0
	.word	474
	.byte	2,2,35,8,0,11
	.byte	'PduR_CddConfig',0,17,251,8,3
	.word	15250
	.byte	23
	.word	13071
	.byte	3
	.word	15344
	.byte	23
	.word	13202
	.byte	3
	.word	15354
	.byte	12,17,136,9,9,12,13
	.byte	'LoTpRxToUp',0
	.word	15349
	.byte	4,2,35,0,13
	.byte	'LoTpTxToUp',0
	.word	15359
	.byte	4,2,35,4,13
	.byte	'LoTpRxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'LoTpTxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,10,0,11
	.byte	'PduR_LoTpConfig',0,17,142,9,3
	.word	15364
	.byte	12,17,154,9,9,12,13
	.byte	'UpToLo',0
	.word	15235
	.byte	4,2,35,0,13
	.byte	'UpToLoMc',0
	.word	15245
	.byte	4,2,35,4,13
	.byte	'UpToLo_NrEntries',0
	.word	474
	.byte	2,2,35,8,0,11
	.byte	'PduR_UpConfig',0,17,159,9,3
	.word	15496
	.byte	23
	.word	12817
	.byte	3
	.word	15586
	.byte	23
	.word	12892
	.byte	3
	.word	15596
	.byte	12,17,172,9,9,12,13
	.byte	'LoIfRxToUp',0
	.word	15591
	.byte	4,2,35,0,13
	.byte	'LoIfTxToUp',0
	.word	15601
	.byte	4,2,35,4,13
	.byte	'LoIfRxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'LoIfTxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,10,0,11
	.byte	'PduR_LoIfDConfig',0,17,178,9,3
	.word	15606
	.byte	23
	.word	12969
	.byte	3
	.word	15739
	.byte	12,17,190,9,9,12,13
	.byte	'LoIfRxToUp',0
	.word	15591
	.byte	4,2,35,0,13
	.byte	'LoIfTxToUp',0
	.word	15744
	.byte	4,2,35,4,13
	.byte	'LoIfRxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,8,13
	.byte	'LoIfTxToUp_NrEntries',0
	.word	474
	.byte	2,2,35,10,0,11
	.byte	'PduR_LoIfTTConfig',0,17,196,9,3
	.word	15749
	.byte	11
	.byte	'PduR_RPGVoidPtr',0,17,208,9,42
	.word	2909
	.byte	12,17,219,9,9,8,13
	.byte	'destInfo',0
	.word	15883
	.byte	4,2,35,0,13
	.byte	'pathType',0
	.word	144
	.byte	1,2,35,4,0,11
	.byte	'PduR_TargetInfoType',0,17,223,9,3
	.word	15908
	.byte	3
	.word	2903
	.byte	23
	.word	15048
	.byte	3
	.word	15985
	.byte	12,17,236,9,9,12,13
	.byte	'begin',0
	.word	161
	.byte	4,2,35,0,13
	.byte	'defaultValueElement',0
	.word	15990
	.byte	4,2,35,4,13
	.byte	'defaultValueSize',0
	.word	144
	.byte	1,2,35,8,0,11
	.byte	'PduR_DefaultValue_Info',0,17,241,9,2
	.word	15995
	.byte	23
	.word	11264
	.byte	3
	.word	16104
	.byte	23
	.word	11432
	.byte	3
	.word	16114
	.byte	23
	.word	11351
	.byte	3
	.word	16124
	.byte	23
	.word	11530
	.byte	3
	.word	16134
	.byte	23
	.word	11625
	.byte	3
	.word	16144
	.byte	23
	.word	11846
	.byte	3
	.word	16154
	.byte	23
	.word	11956
	.byte	3
	.word	16164
	.byte	23
	.word	12064
	.byte	3
	.word	16174
	.byte	23
	.word	12231
	.byte	3
	.word	16184
	.byte	23
	.word	12308
	.byte	3
	.word	16194
	.byte	23
	.word	11738
	.byte	3
	.word	16204
	.byte	12,17,154,10,9,44,13
	.byte	'loTxTablePtr',0
	.word	16109
	.byte	4,2,35,0,13
	.byte	'loCancelRxTable',0
	.word	16119
	.byte	4,2,35,4,13
	.byte	'loCnclTxTablePtr',0
	.word	16129
	.byte	4,2,35,8,13
	.byte	'upIfRxIndTablePtr',0
	.word	16139
	.byte	4,2,35,12,13
	.byte	'upIfTxConfTablePtr',0
	.word	16149
	.byte	4,2,35,16,13
	.byte	'upTpRxDataTablePtr',0
	.word	16159
	.byte	4,2,35,20,13
	.byte	'upTpStartRxTablePtr',0
	.word	16169
	.byte	4,2,35,24,13
	.byte	'upTpRxIndTablePtr',0
	.word	16179
	.byte	4,2,35,28,13
	.byte	'upTpTxDataTablePtr',0
	.word	16189
	.byte	4,2,35,32,13
	.byte	'upTpTxConfTablePtr',0
	.word	16199
	.byte	4,2,35,36,13
	.byte	'upIfTrigTxTablePtr',0
	.word	16209
	.byte	4,2,35,40,0,11
	.byte	'PduR_RPTablesType',0,17,167,10,3
	.word	16214
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14,4
	.byte	1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0,54
	.byte	15,39,12,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0,73
	.byte	19,0,0,23,38,0,73,19,0,0,24,23,1,58,15,59,15,57,15,11,15,0,0,25,4,1,3,8,58,15,59,15,57,15,11,15,0,0,26
	.byte	21,0,73,19,54,15,39,12,0,0,27,53,0,73,19,0,0,28,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\PduR\\src\\PduR_Gateway_TpRx.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\PduR\\api\\PduR.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\PduR\\api\\PduR_Types.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     1  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     2  /* StartOfReception, CopyRxData and RxIndication to support gatewaying between TP layers, when using a FIFO */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     3  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     4  #include "PduR_Prv.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     5  #include "Dem.h"             /* For Dem_ReportErrorStatus */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     6  #if (!defined(DEM_AR_RELEASE_MAJOR_VERSION) || (DEM_AR_RELEASE_MAJOR_VERSION != PDUR_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     7  #error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     8  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	     9  #if (!defined(DEM_AR_RELEASE_MINOR_VERSION) || (DEM_AR_RELEASE_MINOR_VERSION != PDUR_AR_RELEASE_MINOR_VERSION))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    10  #error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    11  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    12  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    13  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    14  #if defined(PDUR_TPGATEWAY_SUPPORT) && (PDUR_TPGATEWAY_SUPPORT != STD_OFF)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    15  #include "PduR_Gw.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    16  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    17  #ifdef PDUR_BUFFERPOOL_SUPPORT
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    18  #include "PduR_BufferPool.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    19  #endif /* PDUR_BUFFERPOOL_SUPPORT */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    20  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    21  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    22  /* Begin section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    23  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    24  #define PDUR_START_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    25  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    26  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    27  /**
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    28   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    29   * PduR_GF_Tp_StartOfReception_Func - Handle StartOfReception for TP gatewaying, for those cases where a
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    30   *                                    FIFO buffer is in use
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    31   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    32   * Note that the v2 PDUR specification:
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    33   * - does not appear to allow a FIFO to be configured for store-and-forward TP
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    34   * gatewaying (i.e. for concurrent operation of a TP gateway).
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    35   * - does not specify that a FIFO must be provided for
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    36   * store-and-forward TP gatewaying. Therefore, although our implementation allows a FIFO to be used
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    37   * for store-and- forward TP gatewaying, this cannot actually be configured and will never occur
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    38   * Store-and-forward gatewaying will always use a single buffer.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    39   * A FIFO will only be used for routing-on-the-fly, when the multiple chunks of a PDU must be stored
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    40   * separately (i.e. each in its own FIFO entry).
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    41   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    42   * \param           PduIdType gwId  :ID of N-PDU that has been received
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    43   *                  PduLengthType  len:This length identifies the overall number of bytes to be received.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    44   *                  PduR_TpRxPduInfoPtrPtr pduInfoPtr:  Pointer to pointer to PduInfoStructure containing SDU data
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    45   *                  pointer and SDU length of a receive buffer.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    46   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    47   * \retval          BufReq_ReturnType r
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    48   *                  BUFREQ_OK - Buffer request accomplished successful.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    49   *                  BUFREQ_E_OVFL - Receiver is not able to receive number of TpSduLength bytes; no buffer provided.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    50   *                  BUFREQ_E_NOT_OK - Buffer request not successful, no buffer provided.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    51   * \seealso
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    52   * \usedresources   PDUR172
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    53   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    54   */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    55  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    56  /* MR12 RULE 8.13 VIOLATION: A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    57   But AUTOSAR SWS specification signature is as below, Hence suppressed */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    58  FUNC( BufReq_ReturnType, PDUR_CODE ) PduR_GF_Tp_StartOfReception_Func( VAR(PduIdType, AUTOMATIC) gwId,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    59          P2CONST(PduInfoType,TYPEDEF,PDUR_APPL_DATA) info,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    60          VAR(PduLengthType, AUTOMATIC) TpSduLength,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    61          P2VAR(PduLengthType, TYPEDEF, PDUR_APPL_DATA) bufferSizePtr)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    62  {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    63  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    64      /* Start: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    65      PduR_GT_TpPtr gt;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    66      P2CONST( PduR_FIFO_Tp_fixed, TYPEDEF, PDUR_CONST ) fifo;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    67      VAR(BufReq_ReturnType, AUTOMATIC) rtn;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    68      PduR_TpSessDynPtr SessionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    69      PduR_TpConnDynPtr ConnectionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    70      /* End: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    71  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    72      /* Start: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    73      gt = PDUR_GW_TP_BASE+gwId;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    74      fifo = (gt->buffer);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    75      rtn = BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    76      ConnectionPtr = fifo->connectionTable;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    77      /* Working on primary session by default*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    78      SessionPtr = ConnectionPtr->primarySession;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    79      /* End: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    80  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    81  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    82      /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    83  #ifdef PDUR_QUEUEING_SUPPORT
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    84      if (ConnectionPtr->activeSessionCount == 0)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    85      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    86          /* The below function handles requesting two buffers in case of queuing is enabled */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    87          rtn = PduR_GetTpBuffer(gt,TpSduLength);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    88          if (rtn != BUFREQ_OK)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    89          {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    90              return rtn;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    91          }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    92  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    93      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    94      /* One session is already in progress */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    95      else if((ConnectionPtr->activeSessionCount == 1) && (gt->TpGwQueueSize == 2u))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    96  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    97      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    98          /* Second reception has to be accepted, only if the first reception is completed
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	    99           * There is no need to request the buffer here, as it is already requested
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   100           * Actually the check for Reception finished on primary session not required here, as TP itself wouldnt accept
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   101           * the second request on the same handle
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   102           * If there is no queue configured for the connection , then there is no point in considering the backup
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   103           * session
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   104           * If total PDU length of second SOR is more than allocated buffer, return with buffer overflow. */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   105          if(SessionPtr->Rx_Status != PDUR_RX_FINISHED)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   106          {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   107              return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   108          }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   109          if(TpSduLength > fifo->connectionTable->secondarySession->bufferLength)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   110          {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   111  #ifdef PDUR_STORE_AND_FORWARD
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   112              return BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   113  #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   114              return BUFREQ_E_OVFL;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   115  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   116          }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   117              /* Working on secondary session now */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   118              SessionPtr = ConnectionPtr->secondarySession;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   119      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   120      else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   121      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   122          /* More than 2 reception requests will not be handled, hence E_NOT_OK is returned to the TP
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   123           * Or if the first session's reception was not completed yet */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   124          return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   125      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   126      /* Increment active session count as a new session is acquired */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   127      ConnectionPtr->activeSessionCount++;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   128  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   129  #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   130      /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   131      /* Queuing not supported */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   132      /* It should be FREE for reception */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   133      if (SessionPtr->Rx_Status != PDUR_SESSION_IDLE)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   134      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   135          return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   136      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   137      rtn = PduR_GetTpBuffer(gt,TpSduLength);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   138      /* Check if requested buffer is successfully allocated */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   139      if (rtn != BUFREQ_OK)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   140      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   141          return rtn;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   142      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   143      /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   144  #endif /* #ifdef PDUR_QUEUEING_SUPPORT */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   145      /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   146      /* Buffer is allocated, initilize the session pointer variables */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   147  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   148      /* Update read ptr and write ptr to the buffer pointer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   149      SessionPtr->readPtr = SessionPtr->bufferPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   150      SessionPtr->writePtr = SessionPtr->bufferPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   151      /* Update the alloted buffer size to buffer size pointer  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   152      *bufferSizePtr = SessionPtr->bufferLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   153      /* Store the Complete Message Length Received */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   154      SessionPtr->SduLength = TpSduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   155  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   156  #ifdef PDUR_STORE_AND_FORWARD
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   157              SessionPtr->remainingBuffLength = SessionPtr->bufferLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   158  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   159  #if defined(PDUR_MULTICAST_FROM_TP_SUPPORT) && (PDUR_MULTICAST_FROM_TP_SUPPORT != 0)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   160      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   161         /*Stored the info fwd to the upper Layer*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   162          SessionPtr->infoPtr = info;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   163      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   164  #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   165      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   166          /* This PduInfoType info is not used, because the same pointer maybe provided in the first CopyRxData call
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   167               * Hence ignored  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   168           (void) info ;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   169      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   170  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   171      /* Set a flag indicating that the reception is started */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   172      SessionPtr->Rx_Status = PDUR_RX_INPROGRESS;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   173      return rtn;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   174  }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   175  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   176  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   177  /* End section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   178  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   179  #define PDUR_STOP_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   180  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   181  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   182  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   183  /* Begin section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   184  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   185  #define PDUR_START_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   186  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   187  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   188  /**
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   189   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   190   * PduR_GF_Tp_CopyRxData_Func - Handle CopyRxData for TP gatewaying, for those cases where a
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   191   *                                    FIFO buffer is in use
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   192   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   193   * Note that the v2 PDUR specification:
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   194   * - does not appear to allow a FIFO to be configured for store-and-forward TP
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   195   * gatewaying (i.e. for concurrent operation of a TP gateway).
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   196   * - does not specify that a FIFO must be provided for
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   197   * store-and-forward TP gatewaying. Therefore, although our implementation allows a FIFO to be used
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   198   * for store-and- forward TP gatewaying, this cannot actually be configured and will never occur
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   199   * Store-and-forward gatewaying will always use a single buffer.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   200   * A FIFO will only be used for routing-on-the-fly, when the multiple chunks of a PDU must be stored
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   201   * separately (i.e. each in its own FIFO entry).
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   202   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   203   * \param           PduIdType gwId  :ID of N-PDU that has been received
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   204   *                  PduLengthType  len:This length identifies the overall number of bytes to be received.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   205   *                  PduR_TpRxPduInfoPtrPtr pduInfoPtr:  Pointer to pointer to PduInfoStructure containing SDU data
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   206   *                  pointer and SDU length of a receive buffer.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   207   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   208   * \retval          BufReq_ReturnType r
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   209   *                  BUFREQ_OK - Buffer request accomplished successful.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   210   *                  BUFREQ_E_OVFL - Receiver is not able to receive number of TpSduLength bytes; no buffer provided.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   211   *                  BUFREQ_E_NOT_OK - Buffer request not successful, no buffer provided.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   212   * \seealso
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   213   * \usedresources   PDUR172
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   214   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   215   */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   216  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   217  /* MR12 RULE 8.13 VIOLATION: A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   218   But AUTOSAR SWS specification signature is as below, Hence suppressed */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   219  FUNC( BufReq_ReturnType, PDUR_CODE ) PduR_GF_Tp_CopyRxData_Func( VAR(PduIdType, AUTOMATIC) gwId,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   220          P2CONST( PduInfoType, TYPEDEF, PDUR_APPL_DATA ) info,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   221          P2VAR(PduLengthType, TYPEDEF, PDUR_APPL_DATA) bufferSizePtr)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   222  {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   223      /* Start: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   224      PduR_GT_TpPtr gt;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   225      P2CONST( PduR_FIFO_Tp_fixed, TYPEDEF, PDUR_CONST ) fifo;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   226      PduR_TpSessDynPtr SessionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   227      PduR_TpConnDynPtr ConnectionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   228      /* End: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   229  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   230      /* Start: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   231      gt = PDUR_GW_TP_BASE+gwId;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   232      fifo = (gt->buffer);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   233      ConnectionPtr = fifo->connectionTable;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   234  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   235      /* End: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   236  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   237      PduR_LoadActiveSession(&SessionPtr,ConnectionPtr);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   238  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   239      /* This check ensures that StartOfReception API is called before CopyRxData call*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   240      if ((SessionPtr == NULL_PTR) || (SessionPtr->Rx_Status != PDUR_RX_INPROGRESS) || (info->SduLength > (SessionPtr->SduLength - SessionPtr->numRxLength)))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   241      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   242          return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   243      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   244  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   245      if ( info->SduLength == 0u )
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   246      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   247          *bufferSizePtr = PduR_UpdateBuffSizePtr(SessionPtr);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   248          return BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   249      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   250  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   251  #ifdef PDUR_STORE_AND_FORWARD
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   252  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   253      if((SessionPtr->RxChunkLength == SessionPtr->bufferLength) && (((SessionPtr->RxChunkLength - SessionPtr->TxChunkLength) != 0u) || (SessionPtr->numRxLength == SessionPtr->numTxLength)))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   254      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   255          /* Received data length is equal to bufferLength
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   256           * reset writePtr ,RxChunlkLength and
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   257           * Update remainingBuffLength with transmitted data Length */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   258          SessionPtr->writePtr = SessionPtr->bufferPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   259          SessionPtr->RxChunkLength = 0;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   260          SessionPtr->remainingBuffLength = SessionPtr->TxChunkLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   261      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   262  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   263      if(info->SduLength > SessionPtr->remainingBuffLength)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   264      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   265          /*if CopyRxData called with sduLength greater than available bufferLength buffer*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   266          return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   267      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   268      else if(SessionPtr->TxChunkLength > SessionPtr->RxChunkLength)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   269      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   270          /* Transmited chunk Length is greter than received chunk length
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   271           * Copy the data into the receive buffer and update the write pointer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   272          rba_BswSrv_MemCopy8(SessionPtr->writePtr,info->SduDataPtr,info->SduLength);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   273          /* Increment the write pointer to the length of sdulength */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   274          SessionPtr->writePtr += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   275          /* Update the received Chunk Length of data  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   276          SessionPtr->RxChunkLength += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   277          /* Update the received total Length of data  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   278          SessionPtr->numRxLength += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   279          /* Update remaining buffer size info */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   280          SessionPtr->remainingBuffLength = SessionPtr->TxChunkLength - SessionPtr->RxChunkLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   281      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   282      /*In case of first Time CopyRxData 1st write is going on*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   283      else if((SessionPtr->numRxLength == SessionPtr->numTxLength) || (SessionPtr->RxChunkLength > SessionPtr->TxChunkLength))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   284      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   285          /* Total received length is equal to transmitted length or received chunk length is greater than transmitted chunk length
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   286           * Copy the data into the receive buffer and update the write pointer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   287          rba_BswSrv_MemCopy8(SessionPtr->writePtr,info->SduDataPtr,info->SduLength);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   288          /* Increment the write pointer to the length of sdulength */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   289          SessionPtr->writePtr += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   290          /* Update the received Chunk Length of data  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   291          SessionPtr->RxChunkLength += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   292          /* Length of data received */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   293          SessionPtr->numRxLength += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   294          /* Update remaining buffer size info */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   295          SessionPtr->remainingBuffLength = SessionPtr->bufferLength - SessionPtr->RxChunkLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   296      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   297      else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   298      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   299          /* To remove Misra warning
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   300           * do nothing*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   301      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   302      /* Update remaining buffer size info to underlying TP layer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   303      *bufferSizePtr = SessionPtr->remainingBuffLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   304  #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   305          /* Copy the data into the receive buffer and update the write pointer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   306          rba_BswSrv_MemCopy8(SessionPtr->writePtr,info->SduDataPtr,info->SduLength);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   307  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   308          /* Increment the write pointer to the length of sdulength */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   309          SessionPtr->writePtr += info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   310          /* Length of data received */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   311          SessionPtr->numRxLength = SessionPtr->numRxLength + info->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   312  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   313          /* Update remaining buffer size info to underlying TP layer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   314          *(bufferSizePtr) = SessionPtr->bufferLength - SessionPtr->numRxLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   315              /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   316  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   317  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   318  #ifdef PDUR_QUEUEING_SUPPORT
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   319      /* The transmission for primary session is ongoing, So do not trigger the transmission for the secondary session
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   320       * Just copy the secondary session's data into the buffer and return */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   321      if(SessionPtr == ConnectionPtr->secondarySession)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   322      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   323          return BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   324      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   325  #endif /* PDUR_QUEUEING_SUPPORT */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   326      /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   327  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   328      if(gt->numOfLowerLayers > 1u)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   329      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   330  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   331          /* If it is a multicast gateway, then this function should be called only once
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   332               * All the data should be copied in one single function call , as we take only single frame requests here
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   333               * */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   334          if((info->SduLength != SessionPtr->SduLength) || (SessionPtr->Tx_Status != PDUR_TX_IDLE))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   335              {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   336                  /* Because requested sdulength is more than the message length */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   337                  return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   338  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   339              } /* end of - ((info->SduLength == SessionPtr->SduLength) && (SessionPtr->Tx_Status == PDUR_TX_IDLE)) */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   340      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   341      /*Unicast Gateway */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   342      /* Check if TpTransmit API is called or not */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   343      /* Call LoTp transmit if received length in PduRTp buffer is more than or equal to TpThreshold
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   344       * If TpThreshold is not configured then call LoTp Transmit when Received data length is equal to bufferlength  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   345      else  if(!((SessionPtr->Tx_Status == PDUR_TX_IDLE) && ((SessionPtr->numRxLength >= gt->TpThreshold) || ((gt->TpThreshold == PDUR_TPTHRESHOLD_DEFVALUE) && (SessionPtr->numRxLength == SessionPtr->bufferLength)))))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   346       {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   347              /* Either the LoTp Transmit is already called or
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   348               * the PduR doesn't have enough data to trigger for the transmission */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   349              return BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   350       }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   351       else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   352       {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   353  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   354           VAR(PduInfoType,AUTOMATIC) readerPduInfo;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   355           VAR(Std_ReturnType, AUTOMATIC) Ret_val = E_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   356  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   357           /* Ensure that the reader's PduInfo object is initialized */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   358            readerPduInfo.SduDataPtr = SessionPtr->readPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   359           /*At the first time the complete length should be transmitted to lower layer when TpTransmit is called */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   360            readerPduInfo.SduLength = SessionPtr->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   361  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   362           /* Change the TxStatus to in-progress and then invoke <LoTp>_Transmit function */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   363           SessionPtr->Tx_Status = PDUR_TX_INPROGRESS;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   364  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   365           /* Call DestLoTp transmit once the TpThreshold is reached*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   366           #if(PDUR_CONFIGURATION_VARIANT != PDUR_VARIANT_PRE_COMPILE)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   367           Ret_val = PDUR_BASE_RPTBL(loTxTablePtr)[(gt->loTransmitID)].PduR_loTransmitFunc(gt->loId, &readerPduInfo);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   368           #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   369           Ret_val = PduR_loTransmitTable[(gt->loTransmitID)].PduR_loTransmitFunc(gt->loId, &readerPduInfo);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   370           #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   371  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   372           /* check the return value of the LoTp Transmit API */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   373           if(Ret_val != E_OK)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   374           {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   375               /* Change the TxStatus back to TxIdle if <LoTp>_Transmit function returns E_NOT_OK */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   376               SessionPtr->Tx_Status = PDUR_TX_IDLE;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   377  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   378               /* If Dest LoTP Transmit function returns E_NOT_OK, immediately cancel the ongoing reception*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   379                return BUFREQ_E_NOT_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   380            }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   381         }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   382  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   383      return BUFREQ_OK;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   384  }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   385  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   386  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   387  /* End section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   388  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   389  #define PDUR_STOP_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   390  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   391  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   392  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   393  /* Begin section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   394  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   395  #define PDUR_START_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   396  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   397  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   398  /**
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   399   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   400   * PduR_GF_Tp_RxIndication_Func - Called by the transport protocol module after an I-PDU has been received successfully or
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   401   *                                   when an error occurred. It is also used to confirm cancellation of an I-PDU.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   402   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   403   * \param           PduIdType gwId              :        ID of  N-PDU that has been received
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   404   *                  Std_ReturnType  result     : Result of the reception.
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   405   *                  E_OK in case TP reception completed successfully
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   406   *
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   407   * \retval          None
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   408   * \seealso
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   409   * \usedresources
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   410   **************************************************************************************************
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   411   */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   412  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   413  FUNC( void, PDUR_CODE ) PduR_GF_Tp_RxIndication_Func( VAR(PduIdType, AUTOMATIC) gwId,
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   414          VAR(Std_ReturnType, AUTOMATIC) result)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   415  {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   416      /* Start: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   417      PduR_GT_TpPtr gt;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   418      P2CONST( PduR_FIFO_Tp_fixed, TYPEDEF, PDUR_CONST ) fifo;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   419      PduR_TpSessDynPtr SessionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   420      PduR_TpConnDynPtr ConnectionPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   421      /* End: Variable declaration */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   422  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   423      /* Start: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   424      gt = PDUR_GW_TP_BASE+gwId;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   425      fifo = (gt->buffer);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   426      ConnectionPtr = (PduR_TpConnDynPtr)(fifo->connectionTable);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   427      /* End: Variable Initialization */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   428  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   429      PduR_LoadActiveSession(&SessionPtr,ConnectionPtr);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   430      /*At this stage Session ptr Rx status should be in PDUR_RX_INPROGRESS */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   431      if ((SessionPtr == NULL_PTR) || (SessionPtr->Rx_Status != PDUR_RX_INPROGRESS))
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   432      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   433          /* Session is not found */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   434          return;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   435      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   436  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   437      if (result == E_OK)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   438      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   439          /*If Rx Indication result is OK, then set Session ptr TRX status to FINISHED*/
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   440           SessionPtr->Rx_Status = PDUR_RX_FINISHED;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   441           /*Transmit only  */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   442           if(SessionPtr->Tx_Status == PDUR_TX_IDLE)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   443           {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   444               VAR(PduInfoType,AUTOMATIC) readerPduInfo;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   445               /* Ensure that the reader's PduInfo object is initialized */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   446               readerPduInfo.SduDataPtr = SessionPtr->readPtr;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   447               /*At the first time the complete length should be transmitted to lower layer when TpTransmit is called */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   448               readerPduInfo.SduLength = SessionPtr->SduLength;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   449               /* Change the TxStatus to in-progress and then invoke <LoTp>_Transmit function */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   450               SessionPtr->Tx_Status = PDUR_TX_INPROGRESS;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   451  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   452               /* Call the transmit api in case of multicast gateway */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   453               #if(PDUR_CONFIGURATION_VARIANT != PDUR_VARIANT_PRE_COMPILE)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   454               PDUR_BASE_RPTBL(loTxTablePtr)[(gt->loTransmitID)].PduR_loTransmitFunc(gt->loId, &readerPduInfo);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   455               #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   456               PduR_loTransmitTable[(gt->loTransmitID)].PduR_loTransmitFunc(gt->loId, &readerPduInfo);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   457               #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   458           }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   459      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   460      else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   461      {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   462          /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   463          /*If Rx Indication result is NOT OK, then release and reset respective buffer */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   464  #ifdef PDUR_QUEUEING_SUPPORT
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   465          /* Close the current session as it has reported error during reception */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   466          if(ConnectionPtr->activeSessionCount != 0)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   467          {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   468              ConnectionPtr->activeSessionCount--;
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   469              /* If there are no active sessions , then release the buffers */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   470              if(ConnectionPtr->activeSessionCount == 0)
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   471              {
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   472                  PduR_ReleaseTpBuffer(gt);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   473              }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   474          }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   475  #else
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   476          /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   477          /* Release the acquired buffers . The below function will release buffer only if buffer pool is used */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   478          PduR_ReleaseTpBuffer(gt);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   479          /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   480  #endif
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   481          /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   482          /* Clear the session states */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   483          PduR_ResetPduR_FIFO_Tp_dynamic_Structure(SessionPtr);
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   484  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   485      }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   486  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   487  }
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   488  /* ------------------------------------------------------------------------ */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   489  /* End section for code */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   490  
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   491  #define PDUR_STOP_SEC_CODE
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   492  #include "PduR_MemMap.h"
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   493  #endif /* PDUR_TPGATEWAY_SUPPORT */
; BSW\src\BSW\Gen\PduR\src\PduR_Gateway_TpRx.c	   494  

	; Module end
