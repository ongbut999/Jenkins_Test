	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16264a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dem\\src\\Dem_EnvMain.src BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c'

	
$TC16X
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvCaptureED',code,cluster('Dem_EnvCaptureED')
	.sect	'.text.Dem_EnvMain.Dem_EnvCaptureED'
	.align	2
	
	.global	Dem_EnvCaptureED

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     3  #include "Dem_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     4  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     5  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     6  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     7  #include "Dem_EvMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     8  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	     9  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    10  const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH] = DEM_CFG_ENVEVENTID2ENVDATA;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    11  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    13  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    14  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    15  void Dem_EnvCaptureED(Dem_EventIdType EventId, uint8* dest, uint16 destSize  DEM_DEBUGDATA_PARAM(Dem_DebugDataType debug0, Dem_DebugDataType debug1))
; Function Dem_EnvCaptureED
.L297:
Dem_EnvCaptureED:	.type	func
	sub.a	a10,#32
.L1254:
	mov.aa	a12,a4
.L1259:
	mov	d8,d5
.L1260:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    17  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    18  	uint16 size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    19  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L1465:
	addsc.a	a2,a2,d4,#1
.L1466:
	ld.bu	d9,[a2]
.L1262:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    20      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    21      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1467:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    22  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    23      internalEnvData.debug0 = debug0;
	st.w	[a10]4,d6
.L1468:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    24      internalEnvData.debug1 = debug1;
	st.w	[a10]8,d7
.L1469:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    25  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    26      internalEnvData.evMemLocation = NULL_PTR;
	mov.a	a15,#0
.L1470:
	st.a	[a10]12,a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    28  	DEM_ASSERT(Dem_isEventIdValid(EventId), DEM_DET_APIID_ENVCAPTUREED, 0);
.L2:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     4  #ifndef DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     5  #define DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     7  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     8  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     9  #include "Dem_Lib.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    10  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    11  #include "Dem_Cfg_EventId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    12  #include "Dem_Cfg_DtcId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    13  #include "Dem_Cfg_NodeId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    14  #include "Dem_Cfg_Nodes.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    15  #include "Dem_Cfg_EventIndicators.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    16  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    17  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    18  /*** EVENTID *****************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    19  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    20  DEM_INLINE Dem_boolean_least Dem_isEventIdValid(Dem_EventIdType checkID)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    21  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));
	mov	d0,#0
.L1471:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));      (inlined)
	jeq	d4,#0,.L3
.L1472:
	ge.u	d15,d4,#6
.L1473:
	cmovn	d0,d15,#1

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));      (inlined)
.L4:
.L3:
	j	.L5

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    23  }      (inlined)
.L5:
	jne	d0,#0,.L6
.L416:
	mov	d4,#54
.L1255:
	mov	d5,#0
.L1258:
	mov	d6,#171
.L1256:
	mov	d7,#0
.L1257:
	call	Det_ReportError
.L6:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    29  	if (edId != 0)
	jeq	d9,#0,.L7
.L421:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a13,#@his(Dem_Cfg_EnvExtData)
	lea	a13,[a13]@los(Dem_Cfg_EnvExtData)

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    31  		DEM_ASSERT(Dem_EnvEDGetRawByteSize(edId) <= destSize, DEM_DET_APIID_ENVCAPTUREED, 1);
.L8:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	addsc.a	a15,a13,d9,#2
.L1474:
	ld.hu	d15,[a15]2
.L1475:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L9

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L9:
	jge.u	d8,d15,.L10
.L1476:
	mov	d4,#54
	mov	d5,#0
	mov	d6,#171
	mov	d7,#1
	call	Det_ReportError
.L10:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	addsc.a	a15,a13,d9,#2
.L1477:
	ld.hu	d15,[a15]2
.L1263:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L11

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L11:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    32  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    33  		size = Dem_EnvEDGetRawByteSize (edId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    34  		Dem_EnvEDCapture (edId, writepos, size, &internalEnvData);
	st.a	[a10]16,a12
.L426:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
	addsc.a	a15,a12,d15,#0
.L1264:
	st.a	[a10]24,a15
.L1266:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	addsc.a	a15,a13,d9,#2
.L1265:
	st.a	[a10]28,a15
.L1478:
	ld.hu	d8,[a15]-4
.L1261:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L12
.L13:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1479:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L1480:
	lea	a12,[a10]16
.L427:
	lea	a15,[a10]0
.L438:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
	st.a	[a10]20,a15
.L444:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d0,#6
.L1481:
	movh.a	a15,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtDataRec)
	addsc.a	a13,a15,d15,#0
.L1482:
	ld.hu	d9,[a13]-2
.L1267:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L14

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)      (inlined)
.L15:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1483:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L457:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
	mov	d10,#1
.L1268:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
	mul	d15,d0,#12
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]8

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
.L16:
	ld.w	d0,[a12]
	ld.bu	d1,[a14]
	add	d0,d1
	ld.a	a2,[a10]24
	mov.d	d15,a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
	jge.u	d15,d0,.L17
	mov	d4,#54
	mov	d5,#0
	mov	d6,#167
	mov	d7,#0
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
.L17:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1484:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jne	d15,#0,.L18
.L1485:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1486:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L19
.L1487:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	ld.a	a4,[a12]
	calli	a2
.L1269:
	mov	d10,d2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L19:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1488:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L20
.L1489:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1490:
	ld.a	a5,[a10]20
	calli	a15
.L1270:
	mov	d10,d2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L20:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)      (inlined)
	jeq	d10,#0,.L21
.L1491:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L470:
	ld.a	a4,[a12]
	mov	d4,#255
.L478:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L471:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#167
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)      (inlined)
.L21:
	j	.L22

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L18:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L486:
	ld.a	a4,[a12]
	mov	d4,#255
.L487:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else      (inlined)
.L22:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1492:
	ld.bu	d15,[a14]
.L1493:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L458:
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L14:
	ld.hu	d15,[a13]4
.L1494:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d9,d15,.L15
.L445:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L12:
	ld.a	a15,[a10]28
	ld.hu	d15,[a15]0
.L1495:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d8,d15,.L13
.L7:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    35  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    36  }
	ret
.L400:
	
__Dem_EnvCaptureED_function_end:
	.size	Dem_EnvCaptureED,__Dem_EnvCaptureED_function_end-Dem_EnvCaptureED
.L332:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvCaptureFF',code,cluster('Dem_EnvCaptureFF')
	.sect	'.text.Dem_EnvMain.Dem_EnvCaptureFF'
	.align	2
	
	.global	Dem_EnvCaptureFF

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    39  #if(DEM_CFG_DISTURBANCE_MEMORY == DEM_CFG_DISTURBANCE_MEMORY_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    40  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    41  void Dem_EnvCaptureForDisturbanceMemory(Dem_EventIdType EventId, uint8* dest, uint16 destSize  DEM_DEBUGDATA_PARAM(Dem_DebugDataType debug0, Dem_DebugDataType debug1))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    43  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    44  	uint16 size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    45      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    46  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    47      internalEnvData.eventId = EventId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    48  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    49      internalEnvData.debug0 = debug0;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    50      internalEnvData.debug1 = debug1;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    51  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    52      internalEnvData.evMemLocation = NULL_PTR;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    53  	DEM_ASSERT(Dem_EnvEDGetRawByteSize (DEM_CFG_DIST_MEM_EXTENDED_DATA_ID) <= destSize, DEM_DET_APIID_ENVCAPTUREED, 2);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    55  	size = Dem_EnvEDGetRawByteSize (DEM_CFG_DIST_MEM_EXTENDED_DATA_ID);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    56  	Dem_EnvEDCapture (DEM_CFG_DIST_MEM_EXTENDED_DATA_ID, writepos, size, &internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    57  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    58  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    59  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    61  void Dem_EnvCaptureFF(Dem_EventIdType EventId, uint8* dest, uint16 destSize   DEM_DEBUGDATA_PARAM(Dem_DebugDataType debug0, Dem_DebugDataType debug1))
; Function Dem_EnvCaptureFF
.L299:
Dem_EnvCaptureFF:	.type	func
	sub.a	a10,#32
.L1271:
	mov.aa	a12,a4
.L1276:
	mov	d8,d5
.L1277:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    62  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    63  	uint8* writepos;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    64  	uint16 size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    65  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1500:
	addsc.a	a15,a15,d4,#1
.L1501:
	ld.bu	d9,[a15]
.L1278:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    66  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	ld.bu	d10,[a15]1
.L1280:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    67      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    68      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1502:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    69  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    70      internalEnvData.debug0 = debug0;
	st.w	[a10]4,d6
.L1503:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    71      internalEnvData.debug1 = debug1;
	st.w	[a10]8,d7
.L1504:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    72  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    73      internalEnvData.evMemLocation = NULL_PTR;
	mov.a	a15,#0
.L1505:
	st.a	[a10]12,a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    75  	DEM_ASSERT(Dem_isEventIdValid(EventId),DEM_DET_APIID_ENVCAPTUREFF,0);
.L23:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     4  #ifndef DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     5  #define DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     7  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     8  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     9  #include "Dem_Lib.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    10  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    11  #include "Dem_Cfg_EventId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    12  #include "Dem_Cfg_DtcId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    13  #include "Dem_Cfg_NodeId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    14  #include "Dem_Cfg_Nodes.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    15  #include "Dem_Cfg_EventIndicators.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    16  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    17  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    18  /*** EVENTID *****************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    19  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    20  DEM_INLINE Dem_boolean_least Dem_isEventIdValid(Dem_EventIdType checkID)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    21  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));
	mov	d0,#0
.L1506:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));      (inlined)
	jeq	d4,#0,.L24
.L1507:
	ge.u	d15,d4,#6
.L1508:
	cmovn	d0,d15,#1

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));      (inlined)
.L25:
.L24:
	j	.L26

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    23  }      (inlined)
.L26:
	jne	d0,#0,.L27
.L499:
	mov	d4,#54
.L1272:
	mov	d5,#0
.L1275:
	mov	d6,#172
.L1273:
	mov	d7,#0
.L1274:
	call	Det_ReportError
.L27:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    76  	if (ffId != 0)
	jeq	d10,#0,.L28
.L501:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a13,#@his(Dem_Cfg_EnvExtData)
	lea	a13,[a13]@los(Dem_Cfg_EnvExtData)
.L502:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	movh.a	a14,#@his(Dem_Cfg_EnvFreezeFrame)
	lea	a14,[a14]@los(Dem_Cfg_EnvFreezeFrame)

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    77  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    78  		DEM_ASSERT((Dem_EnvEDGetRawByteSize (edId) + Dem_EnvFFGetRawByteSize (ffId) )<= destSize, DEM_DET_APIID_ENVCAPTUREFF, 1);
.L29:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	addsc.a	a15,a13,d9,#2
.L1509:
	ld.hu	d0,[a15]2
.L1510:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L30

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L30:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	addsc.a	a15,a14,d10,#2
.L1511:
	ld.hu	d1,[a15]2
.L1512:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L31

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L31:
	add	d0,d1
	jge	d8,d0,.L32
	mov	d4,#54
	mov	d5,#0
	mov	d6,#172
	mov	d7,#1
	call	Det_ReportError
.L32:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	addsc.a	a15,a13,d9,#2
.L1513:
	ld.hu	d15,[a15]2
.L1514:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L33

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L33:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    80  		writepos = (dest + Dem_EnvEDGetRawByteSize(edId));
	addsc.a	a15,a12,d15,#0
.L510:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	addsc.a	a2,a14,d10,#2
.L1515:
	ld.hu	d15,[a2]2
.L1282:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L34

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L34:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    81  		size = Dem_EnvFFGetRawByteSize (ffId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    82  		Dem_EnvFFCapture (ffId, writepos, size, &internalEnvData);
	st.a	[a10]16,a15
.L512:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
	addsc.a	a15,a15,d15,#0
.L1281:
	st.a	[a10]24,a15
.L1284:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
	addsc.a	a15,a14,d10,#2
.L1283:
	st.a	[a10]28,a15
.L1516:
	ld.hu	d9,[a15]-4
.L1279:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	j	.L35
.L36:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame2Did)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame2Did)
.L1517:
	addsc.a	a15,a15,d9,#0
	ld.bu	d15,[a15]
.L1518:
	lea	a12,[a10]16
.L513:
	lea	a15,[a10]0
.L524:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
	st.a	[a10]20,a15
.L528:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
	movh.a	a15,#@his(Dem_Cfg_EnvDid)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid)
	addsc.a	a13,a15,d15,#2
.L1519:
	ld.hu	d8,[a13]-4
.L1285:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L37

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)      (inlined)
.L38:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L1520:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L540:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
	mov	d10,#1
.L1286:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
	mul	d15,d0,#12
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]8

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
.L39:
	ld.w	d0,[a12]
	ld.bu	d1,[a14]
	add	d0,d1
	ld.a	a2,[a10]24
	mov.d	d15,a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
	jge.u	d15,d0,.L40
	mov	d4,#54
	mov	d5,#0
	mov	d6,#167
	mov	d7,#0
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);      (inlined)
.L40:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1521:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jne	d15,#0,.L41
.L1522:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1523:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L42
.L1524:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	ld.a	a4,[a12]
	calli	a2
.L1287:
	mov	d10,d2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L42:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1525:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L43
.L1526:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1527:
	ld.a	a5,[a10]20
	calli	a15
.L1288:
	mov	d10,d2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L43:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)      (inlined)
	jeq	d10,#0,.L44
.L1528:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L547:
	ld.a	a4,[a12]
	mov	d4,#255
.L551:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L548:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#167
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)      (inlined)
.L44:
	j	.L45

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L41:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L555:
	ld.a	a4,[a12]
	mov	d4,#255
.L556:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else      (inlined)
.L45:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1529:
	ld.bu	d15,[a14]
.L1530:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L541:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L37:
	ld.hu	d15,[a13]0
.L1531:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d8,d15,.L38
.L529:
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
.L35:
	ld.a	a15,[a10]28
	ld.hu	d15,[a15]0
.L1532:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	jlt.u	d9,d15,.L36
.L28:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    83  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    84  }
	ret
.L488:
	
__Dem_EnvCaptureFF_function_end:
	.size	Dem_EnvCaptureFF,__Dem_EnvCaptureFF_function_end-Dem_EnvCaptureFF
.L337:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvCopyRawFF',code,cluster('Dem_EnvCopyRawFF')
	.sect	'.text.Dem_EnvMain.Dem_EnvCopyRawFF'
	.align	2
	
	.global	Dem_EnvCopyRawFF

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    86  void Dem_EnvCopyRawFF(Dem_EventIdType EventId,
; Function Dem_EnvCopyRawFF
.L301:
Dem_EnvCopyRawFF:	.type	func
	mov.aa	a12,a5
.L1293:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    87  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    88  		uint16 destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    89  		uint8 ffIndex,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    90  		const uint8* src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    91  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    92  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    93  	uint16 size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    95  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1537:
	addsc.a	a15,a15,d4,#1
.L1538:
	ld.bu	d8,[a15]
.L1294:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    96  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	ld.bu	d9,[a15]1
.L1295:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    98  	if (ffId != 0)
	jeq	d9,#0,.L46
.L567:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a13,#@his(Dem_Cfg_EnvExtData)
	lea	a13,[a13]@los(Dem_Cfg_EnvExtData)
.L1539:
	addsc.a	a15,a13,d8,#2
.L1540:
	ld.hu	d15,[a15]2
.L1541:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L47

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L47:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   100  		writepos += Dem_EnvEDGetRawByteSize (edId);
	addsc.a	a15,a4,d15,#0
.L569:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	movh.a	a14,#@his(Dem_Cfg_EnvFreezeFrame)
	lea	a14,[a14]@los(Dem_Cfg_EnvFreezeFrame)
.L1542:
	addsc.a	a2,a14,d9,#2
.L1543:
	ld.hu	d15,[a2]2
.L1544:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L48

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L48:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   101  		writepos += (ffIndex * Dem_EnvFFGetRawByteSize (ffId));
	mul	d6,d15
.L1292:
	addsc.a	a15,a15,d6,#0
.L571:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	addsc.a	a2,a14,d9,#2
.L1545:
	ld.hu	d10,[a2]2
.L1296:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L49

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L49:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   102  		size = Dem_EnvFFGetRawByteSize (ffId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   104  		DEM_ASSERT((writepos + size) <= (dest + destSize), DEM_DET_APIID_ENVCOPYRAWFF, 0);
.L50:
	addsc.a	a2,a15,d10,#0
	addsc.a	a4,a4,d5,#0
.L1290:
	ge.a	d15,a4,a2
	jne	d15,#0,.L51
	mov	d4,#54
.L1289:
	mov	d5,#0
.L1291:
	mov	d6,#173
	mov	d7,#0
	call	Det_ReportError
.L51:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	addsc.a	a2,a13,d8,#2
.L1546:
	ld.hu	d15,[a2]2
.L1547:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L52

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L52:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   105  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   106  		Dem_EnvFFCopyRaw (ffId, writepos, size, src + Dem_EnvEDGetRawByteSize (edId));
	addsc.a	a12,a12,d15,#0
.L573:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   101  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   103  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   104  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   105  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   106  DEM_INLINE Dem_boolean_least Dem_EnvFFRetrieveDid(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   107  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   108  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   109  		uint16 did,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   110  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   111  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   112  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   113  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   114  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   115  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   116  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   118  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   119  		if (Dem_EnvDIDRetrieveSpecificDid (Dem_Cfg_EnvFreezeFrame2Did[i], did, &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   120  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   121  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   122  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   123  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   124  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   125  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   126  	*bufsize = 0;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   127  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   128  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   129  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   130  DEM_INLINE void Dem_EnvFFCopyRaw(uint8 freezeFrameId, uint8* dest, uint16 bufsize, const uint8* src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   131  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   132  	const uint16 bytesize = Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	addsc.a	a2,a14,d9,#2
.L1548:
	ld.hu	d15,[a2]2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   134  	DEM_ASSERT(bytesize <= bufsize, DEM_DET_APIID_ENVFFCOPYRAW, 0);      (inlined)
.L53:
	jge.u	d10,d15,.L54
.L1549:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   134  	DEM_ASSERT(bytesize <= bufsize, DEM_DET_APIID_ENVFFCOPYRAW, 0);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#174
	mov	d7,#0
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   134  	DEM_ASSERT(bytesize <= bufsize, DEM_DET_APIID_ENVFFCOPYRAW, 0);      (inlined)
.L54:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	mov.aa	a4,a15
	mov.aa	a5,a12
	mov	d4,d15
.L1297:
	call	rba_BswSrv_MemCopy
.L46:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   107  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   108  }
	ret
.L557:
	
__Dem_EnvCopyRawFF_function_end:
	.size	Dem_EnvCopyRawFF,__Dem_EnvCopyRawFF_function_end-Dem_EnvCopyRawFF
.L342:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvCopyRawED',code,cluster('Dem_EnvCopyRawED')
	.sect	'.text.Dem_EnvMain.Dem_EnvCopyRawED'
	.align	2
	
	.global	Dem_EnvCopyRawED

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   109  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   110  void Dem_EnvCopyRawED(Dem_EventIdType EventId, uint8* dest, uint16 destSize, const uint8* src, Dem_EnvTriggerParamType *triggerParam)
; Function Dem_EnvCopyRawED
.L303:
Dem_EnvCopyRawED:	.type	func
	sub.a	a10,#24
.L1298:
	mov.aa	a12,a4
.L1301:
	mov.aa	a15,a5
.L1302:
	mov.aa	a13,a6
.L1304:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   111  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   112  	/* Dem_InternalEnvData internalEventData = { EventId  DEM_DEBUGDATA_PARAM(0, 0) }; */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   113  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   114  	const uint8* readpos = src;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   115  	uint16 size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   116  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   117  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L1554:
	addsc.a	a2,a2,d4,#1
.L1555:
	ld.bu	d15,[a2]
.L1305:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   118  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   119  	if (edId != 0)
	jeq	d15,#0,.L55
.L604:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a14,#@his(Dem_Cfg_EnvExtData)
	lea	a14,[a14]@los(Dem_Cfg_EnvExtData)
.L1556:
	addsc.a	a2,a14,d15,#2
.L1557:
	ld.hu	d8,[a2]2
.L1306:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L56

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L56:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   120  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   121  		size = Dem_EnvEDGetRawByteSize (edId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   122  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   123  		DEM_ASSERT(size <= destSize,DEM_DET_APIID_ENVUPDATERAWED, 0);
.L57:
	jge.u	d5,d8,.L58
.L1558:
	mov	d4,#54
.L1299:
	mov	d5,#0
.L1300:
	mov	d6,#175
	mov	d7,#0
	call	Det_ReportError
.L58:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   124  		Dem_EnvEDCopyRaw (edId, writepos, size, readpos, triggerParam);
	st.a	[a10],a12
.L1559:
	st.a	[a10]4,a15
.L1560:
	st.a	[a10]12,a13
.L607:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
	addsc.a	a15,a12,d8,#0
.L1303:
	st.a	[a10]8,a15
.L1309:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	addsc.a	a15,a14,d15,#2
.L1308:
	st.a	[a10]16,a15
.L1561:
	ld.hu	d8,[a15]-4
.L1307:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L59
.L60:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1562:
	addsc.a	a15,a15,d8,#0
	ld.bu	d3,[a15]
.L1563:
	lea	a12,[a10]0
.L622:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
	movh.a	a2,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtDataRec)
.L1564:
	mul	d15,d3,#6
	addsc.a	a15,a2,d15,#0
.L1565:
	ld.bu	d4,[a15]1
.L1310:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;      (inlined)
	j	.L61

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }      (inlined)
.L61:
	mul	d15,d3,#6
	addsc.a	a15,a2,d15,#0
.L1566:
	ld.bu	d0,[a15]2
.L1567:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;      (inlined)
	j	.L62

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }      (inlined)
.L62:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
	ld.a	a15,[a10]12
	ld.bu	d1,[a15]
.L657:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     3  #ifndef DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     4  #define DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     7  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     8  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     9  	/* In Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    10  	Dem_TriggerType currentTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    11  	Dem_TriggerType storedTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    12  	/* Out Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    13  	Dem_TriggerType matchingTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    14  } Dem_EnvTriggerParamType;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    17  DEM_INLINE void Dem_EnvSetTrigger(Dem_TriggerType* trigger, Dem_TriggerType trigger2set)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    18  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    19  	*trigger = (*trigger) | trigger2set;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    20  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    22  DEM_INLINE Dem_boolean_least Dem_EnvIsAnyTriggerSet(Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    23  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    27  DEM_INLINE Dem_boolean_least Dem_EnvIsTriggerSet(Dem_TriggerType trigger, Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    28  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);
	and	d2,d1,d4
.L665:
	ne	d15,d2,#0
.L1568:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);      (inlined)
	j	.L63

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }      (inlined)
.L63:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);      (inlined)
	j	.L64

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    30  }      (inlined)
.L64:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&      (inlined)
	jeq	d15,#0,.L65
.L658:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
	ld.bu	d15,[a15]1
.L669:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     3  #ifndef DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     4  #define DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     7  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     8  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     9  	/* In Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    10  	Dem_TriggerType currentTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    11  	Dem_TriggerType storedTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    12  	/* Out Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    13  	Dem_TriggerType matchingTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    14  } Dem_EnvTriggerParamType;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    17  DEM_INLINE void Dem_EnvSetTrigger(Dem_TriggerType* trigger, Dem_TriggerType trigger2set)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    18  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    19  	*trigger = (*trigger) | trigger2set;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    20  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    22  DEM_INLINE Dem_boolean_least Dem_EnvIsAnyTriggerSet(Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    23  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    27  DEM_INLINE Dem_boolean_least Dem_EnvIsTriggerSet(Dem_TriggerType trigger, Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    28  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);
	and	d2,d15,d4
.L671:
	ne	d15,d2,#0
.L1569:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);      (inlined)
	j	.L66

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }      (inlined)
.L66:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);      (inlined)
	j	.L67

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    30  }      (inlined)
.L67:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))      (inlined)
	jeq	d15,#0,.L68
.L670:
	jne	d0,#0,.L69

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&      (inlined)
.L65:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    34      if ((trigger & DEM_TRIGGER_ON_TEST_FAILED) == DEM_TRIGGER_ON_TEST_FAILED )      (inlined)
	jz.t	d1:0,.L70
.L1570:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    30  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    31  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    32  DEM_INLINE Dem_TriggerType Dem_GetSmallerTrigger(Dem_TriggerType trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    33  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    34      if ((trigger & DEM_TRIGGER_ON_TEST_FAILED) == DEM_TRIGGER_ON_TEST_FAILED )
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    35      {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    36          return DEM_TRIGGER_ON_FDC_THRESHOLD;
	mov	d15,#8

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    36          return DEM_TRIGGER_ON_FDC_THRESHOLD;      (inlined)
	j	.L71

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    34      if ((trigger & DEM_TRIGGER_ON_TEST_FAILED) == DEM_TRIGGER_ON_TEST_FAILED )      (inlined)
.L70:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    38      else if((trigger & DEM_TRIGGER_ON_PENDING) == DEM_TRIGGER_ON_PENDING )      (inlined)
	jz.t	d1:1,.L72
.L1571:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    37      }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    38      else if((trigger & DEM_TRIGGER_ON_PENDING) == DEM_TRIGGER_ON_PENDING )
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    39      {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    40          return (DEM_TRIGGER_ON_FDC_THRESHOLD | DEM_TRIGGER_ON_TEST_FAILED);
	mov	d15,#9

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    40          return (DEM_TRIGGER_ON_FDC_THRESHOLD | DEM_TRIGGER_ON_TEST_FAILED);      (inlined)
	j	.L73

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    38      else if((trigger & DEM_TRIGGER_ON_PENDING) == DEM_TRIGGER_ON_PENDING )      (inlined)
.L72:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    42      else if((trigger & DEM_TRIGGER_ON_CONFIRMED) == DEM_TRIGGER_ON_CONFIRMED )      (inlined)
	jz.t	d1:2,.L74
.L1572:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    41      }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    42      else if((trigger & DEM_TRIGGER_ON_CONFIRMED) == DEM_TRIGGER_ON_CONFIRMED )
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    43      {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    44          return (DEM_TRIGGER_ON_FDC_THRESHOLD | DEM_TRIGGER_ON_TEST_FAILED | DEM_TRIGGER_ON_PENDING);
	mov	d15,#11

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    44          return (DEM_TRIGGER_ON_FDC_THRESHOLD | DEM_TRIGGER_ON_TEST_FAILED | DEM_TRIGGER_ON_PENDING);      (inlined)
	j	.L75

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    42      else if((trigger & DEM_TRIGGER_ON_CONFIRMED) == DEM_TRIGGER_ON_CONFIRMED )      (inlined)
.L74:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    45      }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    46      else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    47      {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    48          return DEM_TRIGGER_NONE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    48          return DEM_TRIGGER_NONE;      (inlined)
	j	.L76

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    51  }      (inlined)
.L76:
.L75:
.L73:
.L71:
	and	d0,d15,d4
.L677:
	ne	d15,d0,#0
.L1573:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);      (inlined)
	j	.L77

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }      (inlined)
.L77:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);      (inlined)
	j	.L78

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    30  }      (inlined)
.L78:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&      (inlined)
	jeq	d15,#0,.L79
.L676:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
	ld.bu	d15,[a15]1
.L678:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     3  #ifndef DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     4  #define DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     7  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     8  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     9  	/* In Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    10  	Dem_TriggerType currentTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    11  	Dem_TriggerType storedTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    12  	/* Out Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    13  	Dem_TriggerType matchingTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    14  } Dem_EnvTriggerParamType;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    17  DEM_INLINE void Dem_EnvSetTrigger(Dem_TriggerType* trigger, Dem_TriggerType trigger2set)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    18  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    19  	*trigger = (*trigger) | trigger2set;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    20  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    22  DEM_INLINE Dem_boolean_least Dem_EnvIsAnyTriggerSet(Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    23  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    27  DEM_INLINE Dem_boolean_least Dem_EnvIsTriggerSet(Dem_TriggerType trigger, Dem_TriggerType trigger2test)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    28  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);
	and	d0,d15,d4
.L679:
	ne	d15,d0,#0
.L1574:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    24  	return (Dem_boolean_least)(trigger2test != 0);      (inlined)
	j	.L80

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    25  }      (inlined)
.L80:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    29  	return Dem_EnvIsAnyTriggerSet(trigger & trigger2test);      (inlined)
	j	.L81

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    30  }      (inlined)
.L81:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))      (inlined)
	jne	d15,#0,.L82

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&      (inlined)
.L69:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))      (inlined)
.L68:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
	add.a	a15,#2
.L681:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     3  #ifndef DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     4  #define DEM_ENVTRIGGER_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     7  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     8  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	     9  	/* In Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    10  	Dem_TriggerType currentTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    11  	Dem_TriggerType storedTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    12  	/* Out Parameter */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    13  	Dem_TriggerType matchingTrigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    14  } Dem_EnvTriggerParamType;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    17  DEM_INLINE void Dem_EnvSetTrigger(Dem_TriggerType* trigger, Dem_TriggerType trigger2set)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    18  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvTrigger.h	    19  	*trigger = (*trigger) | trigger2set;
	ld.bu	d15,[a15]
.L1575:
	or	d4,d15
.L1311:
	st.b	[a15],d4
.L682:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d3,#6
.L1576:
	addsc.a	a13,a2,d15,#0
.L1577:
	ld.hu	d9,[a13]-2
.L1312:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L83

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)      (inlined)
.L84:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1578:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L689:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
	mul	d15,d0,#12
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]8

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);      (inlined)
.L85:
	ld.w	d0,[a12]
	ld.bu	d1,[a14]
	add	d0,d1
	ld.a	a15,[a10]8
	mov.d	d1,a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);      (inlined)
	jge.u	d1,d0,.L86
	mov	d4,#54
	mov	d5,#0
	mov	d6,#169
	mov	d7,#0
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);      (inlined)
.L86:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a4,[a12]
.L623:
	lea	a15,[a10]4
.L636:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a15]
	ld.bu	d4,[a14]
.L701:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy
.L702:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1579:
	ld.bu	d15,[a14]
.L1580:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L637:
	lea	a15,[a10]4
.L638:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a15]
.L1581:
	ld.bu	d15,[a14]
.L1582:
	addsc.a	a15,a15,d15,#0
.L639:
	lea	a2,[a10]4
.L640:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	st.a	[a2],a15
.L700:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L83:
	ld.hu	d15,[a13]4
.L1583:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d9,d15,.L84
.L1584:
	j	.L87

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&      (inlined)
.L82:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))      (inlined)
.L79:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d3,#6
.L1585:
	addsc.a	a13,a2,d15,#0
.L1586:
	ld.hu	d9,[a13]-2
.L1313:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L88

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)      (inlined)
.L89:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1587:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L707:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
	mul	d15,d0,#12
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]8

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);      (inlined)
.L90:
	ld.w	d0,[a12]
	ld.bu	d1,[a14]
	add	d0,d1
	ld.a	a15,[a10]8
	mov.d	d1,a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);      (inlined)
	jge.u	d1,d0,.L91
	mov	d4,#54
	mov	d5,#0
	mov	d6,#168
	mov	d7,#0
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);      (inlined)
.L91:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1588:
	ld.bu	d15,[a14]
.L1589:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L641:
	lea	a15,[a10]4
.L642:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a15]
.L1590:
	ld.bu	d15,[a14]
.L1591:
	addsc.a	a15,a15,d15,#0
.L643:
	lea	a2,[a10]4
.L644:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	st.a	[a2],a15
.L718:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L88:
	ld.hu	d15,[a13]4
.L1592:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d9,d15,.L89

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else      (inlined)
.L87:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L59:
	ld.a	a15,[a10]16
	ld.hu	d15,[a15]0
.L1593:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d8,d15,.L60
.L55:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   125  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   126  }
	ret
.L593:
	
__Dem_EnvCopyRawED_function_end:
	.size	Dem_EnvCopyRawED,__Dem_EnvCopyRawED_function_end-Dem_EnvCopyRawED
.L347:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvIsEDRNumberValid',code,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.text.Dem_EnvMain.Dem_EnvIsEDRNumberValid'
	.align	2
	
	.global	Dem_EnvIsEDRNumberValid

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   127  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   128  /* Support functions for DCM-querries: Dem_GetExtendedDataRecordByDTC, Dem_GetFreezeFrameDataByDTC */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   129  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   130  Dem_boolean_least Dem_EnvIsEDRNumberValid(Dem_EventIdType EventId, uint8 RecordNumber, Dem_TriggerType* trigger)
; Function Dem_EnvIsEDRNumberValid
.L305:
Dem_EnvIsEDRNumberValid:	.type	func

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   131  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   132  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1598:
	addsc.a	a15,a15,d4,#1
.L1599:
	ld.bu	d15,[a15]
.L1314:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   133  	if (edId != 0)
	jeq	d15,#0,.L92
.L726:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
	addsc.a	a15,a15,d15,#2
.L1600:
	ld.hu	d0,[a15]-4
.L1315:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L93
.L94:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
	movh.a	a2,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1601:
	addsc.a	a2,a2,d0,#0
	ld.bu	d1,[a2]
.L736:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
	movh.a	a2,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtDataRec)
.L1602:
	mul	d15,d1,#6
	addsc.a	a5,a2,d15,#0
.L1603:
	ld.bu	d15,[a5]
.L1604:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;      (inlined)
	j	.L95

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }      (inlined)
.L95:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
	jne	d15,d5,.L96
.L740:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
	mul	d15,d1,#6
	addsc.a	a15,a2,d15,#0
.L1605:
	ld.bu	d15,[a15]1
.L1606:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;      (inlined)
	j	.L97

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }      (inlined)
.L97:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
	st.b	[a4],d15
.L1607:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
	mov	d2,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;      (inlined)
	j	.L98

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
.L96:
	add	d0,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L93:
	ld.hu	d15,[a15]0
.L1608:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d0,d15,.L94
.L1609:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;      (inlined)
	j	.L99

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }      (inlined)
.L99:
.L98:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   134  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   135  		return Dem_EnvEDIsRecordNumberValid (edId, RecordNumber, trigger);
	j	.L100
.L92:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   136  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   137  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   138  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   139  		return FALSE;
	mov	d2,#0
.L1610:
	j	.L101

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   140  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   141  }
.L101:
.L100:
	ret
.L719:
	
__Dem_EnvIsEDRNumberValid_function_end:
	.size	Dem_EnvIsEDRNumberValid,__Dem_EnvIsEDRNumberValid_function_end-Dem_EnvIsEDRNumberValid
.L352:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveEDR',code,cluster('Dem_EnvRetrieveEDR')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveEDR'
	.align	2
	
	.global	Dem_EnvRetrieveEDR

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   142  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   143  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   144  Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvRetrieveEDR(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveEDR
.L307:
Dem_EnvRetrieveEDR:	.type	func
	sub.a	a10,#48
.L1316:
	mov	d9,d5
.L1320:
	st.a	[a10]36,a4
.L1321:
	st.a	[a10]40,a5
.L1322:
	mov.aa	a15,a6
.L1323:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   145  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   146  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   147  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   148  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   149  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   151  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L1615:
	addsc.a	a4,a2,d4,#1
.L1319:
	ld.bu	d8,[a4]
.L1325:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   152      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   153  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   154      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1616:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   155  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   156      internalEnvData.debug0 = 0;
	mov	d15,#0
.L1617:
	st.w	[a10]4,d15
.L1618:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   157      internalEnvData.debug1 = 0;
	mov	d15,#0
.L1619:
	st.w	[a10]8,d15
.L1620:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   158  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   159      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]12,a7

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   160  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   161  	DEM_ASSERT(Dem_EnvHasExtendedData(EventId), DEM_DET_APIID_ENVRETRIEVEEDR, 0);
.L102:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
	addsc.a	a2,a2,d4,#1
.L1621:
	ld.bu	d15,[a2]
.L1622:
	ne	d15,d15,#0
.L1623:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);      (inlined)
	j	.L103

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }      (inlined)
.L103:
	jne	d15,#0,.L104
.L1624:
	mov	d4,#54
.L1317:
	mov	d5,#0
.L1318:
	mov	d6,#165
	mov	d7,#0
	call	Det_ReportError
.L104:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   162  	return Dem_EnvEDRetrieveExtendedDataRecord (edId, RecordNumber, dest, destSize, src, &internalEnvData);
	st.a	[a10]16,a15
.L1625:
	lea	a4,[a10]0
.L758:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
	ld.a	a15,[a10]36
.L1324:
	st.a	[a10]20,a15
.L1626:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
	ld.a	a2,[a10]40
.L1328:
	ld.hu	d15,[a2]0
.L1627:
	addsc.a	a5,a15,d15,#0
.L1329:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
.L1327:
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
	addsc.a	a6,a15,d8,#2
.L1628:
	ld.hu	d0,[a6]-4
.L1330:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L105
.L106:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1629:
	addsc.a	a15,a15,d0,#0
	ld.bu	d1,[a15]
.L775:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
	movh.a	a2,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtDataRec)
.L1630:
	mul	d15,d1,#6
	addsc.a	a15,a2,d15,#0
.L1631:
	ld.bu	d15,[a15]
.L1632:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;      (inlined)
	j	.L107

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }      (inlined)
.L107:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
	jne	d15,d9,.L108
.L1633:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
	lea	a12,[a10]20
.L1634:
	st.a	[a10]32,a5
.L1635:
	lea	a13,[a10]16
.L1636:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
	st.a	[a10]28,a4
.L778:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d1,#6
.L1637:
	addsc.a	a15,a2,d15,#0
	st.a	[a10]24,a15
.L1638:
	ld.hu	d8,[a15]-2
.L1326:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L109

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)      (inlined)
.L110:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1639:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L792:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1331:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L1640:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1641:
	addsc.a	a15,a15,d15,#0
.L1642:
	lea	a14,[a15]8
	ld.bu	d4,[a14]
.L1643:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L1644:
	add	d0,d4
.L1645:
	ld.a	a2,[a10]32
	mov.d	d1,a2
.L1646:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d1,d0,.L111
.L1647:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L112

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L111:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1648:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L113
.L1649:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1650:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L114
.L1651:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L114:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1652:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L115
.L1653:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1654:
	ld.a	a5,[a10]28
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L115:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L116
.L1655:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L805:
	ld.a	a4,[a12]
	mov	d4,#255
.L809:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L806:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L116:
	j	.L117

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L113:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a13]
.L813:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L117:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1656:
	ld.bu	d15,[a14]
.L1657:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L1658:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a13]
.L1659:
	ld.bu	d15,[a14]
.L1660:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L1661:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L118

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L118:
.L112:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L119
.L1662:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;      (inlined)
	j	.L120

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L119:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L109:
	ld.a	a15,[a10]24
	ld.hu	d15,[a15]4
.L1663:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d8,d15,.L110
.L1664:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;      (inlined)
	j	.L121

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }      (inlined)
.L121:
.L120:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
	jne	d15,#0,.L122
.L1665:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   109  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;
	mov	d2,#5

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;      (inlined)
	j	.L123

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
.L122:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   111  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   112  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]20
.L1666:
	ld.a	a15,[a10]36
.L1332:
	sub.a	a15,a2,a15
.L1333:
	mov.d	d15,a15
.L1667:
	ld.a	a15,[a10]40
.L1334:
	st.h	[a15],d15
.L1668:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;      (inlined)
	j	.L124

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
.L108:
	lea	a7,[a10]16
.L818:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   118  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   119  DEM_INLINE uint16 Dem_EnvEDRGetSize (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   120  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   121     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   122     uint16 byteSize = 0;
	mov	d2,#0
.L1335:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   123     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d1,#6
.L1669:
	addsc.a	a2,a2,d15,#0
.L1670:
	ld.hu	d1,[a2]-2
.L1337:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L125

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)      (inlined)
.L126:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   126     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   127        byteSize += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvExtData2DataElement[i]);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1671:
	addsc.a	a15,a15,d1,#0
	ld.bu	d15,[a15]
.L835:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   148  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   149  DEM_INLINE uint8 Dem_EnvDAGetSizeOf(uint8 dataElementId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;
	mul	d15,d15,#12
.L1672:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1673:
	addsc.a	a15,a15,d15,#0
.L1674:
	ld.bu	d15,[a15]8
.L1675:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;      (inlined)
	j	.L127

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   152  }      (inlined)
.L127:
	add	d2,d15
.L1336:
	extr.u	d2,d2,#0,#16
.L1338:
	add	d1,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L125:
	ld.hu	d15,[a2]4
.L1676:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d1,d15,.L126
.L1677:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   129     return byteSize;      (inlined)
	j	.L128

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   130  }      (inlined)
.L128:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   128     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   129     return byteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   130  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   131  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   132  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   133  DEM_INLINE void Dem_EnvEDRSkipSrc (uint8 extDataRecId, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   134  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   135  	*src += Dem_EnvEDRGetSize(extDataRecId);
	ld.a	a15,[a7]
.L830:
	addsc.a	a15,a15,d2,#0
.L831:
	st.a	[a7],a15
.L819:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	add	d0,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L105:
	ld.hu	d15,[a6]0
.L1678:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d0,d15,.L106
.L1679:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   109  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   111  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   112  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   114  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   115  		else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   116  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   117  			Dem_EnvEDRSkipSrc (Dem_Cfg_EnvExtData2ExtDataRec[i], &src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   118  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   119  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   120  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   121  	return DEM_RECORD_WRONG_NUMBER;
	mov	d2,#4

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   121  	return DEM_RECORD_WRONG_NUMBER;      (inlined)
	j	.L129

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   122  }      (inlined)
.L129:
.L124:
.L123:
	j	.L130

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   163  /*	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   164  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   165  		return DEM_RECORD_WRONG_NUMBER;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   166  	}*/
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   167  }
.L130:
	ret
.L742:
	
__Dem_EnvRetrieveEDR_function_end:
	.size	Dem_EnvRetrieveEDR,__Dem_EnvRetrieveEDR_function_end-Dem_EnvRetrieveEDR
.L357:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvGetSizeOfEDR',code,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.text.Dem_EnvMain.Dem_EnvGetSizeOfEDR'
	.align	2
	
	.global	Dem_EnvGetSizeOfEDR

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   168  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   169  Dem_ReturnGetSizeOfExtendedDataRecordByDTCType Dem_EnvGetSizeOfEDR(Dem_EventIdType EventId,
; Function Dem_EnvGetSizeOfEDR
.L309:
Dem_EnvGetSizeOfEDR:	.type	func
	mov	d9,d5
.L1341:
	mov.aa	a12,a4
.L1342:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   170  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   171  		uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   172  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   173  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1768:
	addsc.a	a2,a15,d4,#1
.L1769:
	ld.bu	d8,[a2]

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   174  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   175  	DEM_ASSERT(Dem_EnvHasExtendedData(EventId), DEM_DET_APIID_ENVGETSIZEOFEDR, 0);
.L131:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
	addsc.a	a15,a15,d4,#1
.L1770:
	ld.bu	d15,[a15]
.L1771:
	ne	d15,d15,#0
.L1772:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);      (inlined)
	j	.L132

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }      (inlined)
.L132:
	jne	d15,#0,.L133
.L1773:
	mov	d4,#54
.L1339:
	mov	d5,#0
.L1340:
	mov	d6,#163
	mov	d7,#0
	call	Det_ReportError
.L133:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   109  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   111  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   112  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   114  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   115  		else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   116  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   117  			Dem_EnvEDRSkipSrc (Dem_Cfg_EnvExtData2ExtDataRec[i], &src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   118  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   119  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   120  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   121  	return DEM_RECORD_WRONG_NUMBER;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   122  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   123  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   124  DEM_INLINE Dem_ReturnGetSizeOfExtendedDataRecordByDTCType Dem_EnvEDGetSizeOfEDR(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   125  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   126  		uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   127  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   128  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   129  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   130  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
	addsc.a	a15,a15,d8,#2
.L1774:
	ld.hu	d0,[a15]-4
.L1343:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   130  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L134
.L135:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   131  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   132  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
	movh.a	a2,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1775:
	addsc.a	a2,a2,d0,#0
	ld.bu	d1,[a2]
.L948:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
	movh.a	a2,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtDataRec)
.L1776:
	mul	d15,d1,#6
	addsc.a	a4,a2,d15,#0
.L1777:
	ld.bu	d15,[a4]
.L1778:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;      (inlined)
	j	.L136

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }      (inlined)
.L136:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   132  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
	jne	d15,d9,.L137
.L950:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   118  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   119  DEM_INLINE uint16 Dem_EnvEDRGetSize (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   120  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   121     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   122     uint16 byteSize = 0;
	mov	d0,#0
.L1344:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   123     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d1,#6
.L1779:
	addsc.a	a2,a2,d15,#0
.L1780:
	ld.hu	d1,[a2]-2
.L1346:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L138

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)      (inlined)
.L139:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   126     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   127        byteSize += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvExtData2DataElement[i]);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1781:
	addsc.a	a15,a15,d1,#0
	ld.bu	d15,[a15]
.L955:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   148  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   149  DEM_INLINE uint8 Dem_EnvDAGetSizeOf(uint8 dataElementId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;
	mul	d15,d15,#12
.L1782:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1783:
	addsc.a	a15,a15,d15,#0
.L1784:
	ld.bu	d15,[a15]8
.L1785:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;      (inlined)
	j	.L140

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   152  }      (inlined)
.L140:
	add	d0,d15
.L1345:
	extr.u	d0,d0,#0,#16
.L1347:
	add	d1,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L138:
	ld.hu	d15,[a2]4
.L1786:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d1,d15,.L139
.L1787:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   129     return byteSize;      (inlined)
	j	.L141

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   130  }      (inlined)
.L141:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   133  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   134  			*size = (uint16)Dem_EnvEDRGetSize (Dem_Cfg_EnvExtData2ExtDataRec[i]);
	st.h	[a12],d0
.L951:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   135  			return DEM_GET_SIZEOFEDRBYDTC_OK;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   135  			return DEM_GET_SIZEOFEDRBYDTC_OK;      (inlined)
	j	.L142

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   132  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
.L137:
	add	d0,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   130  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L134:
	ld.hu	d15,[a15]0
.L1788:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   130  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d0,d15,.L135
.L1789:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   136  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   137  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   138  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   139  	return DEM_GET_SIZEOFEDRBYDTC_W_RNUM;
	mov	d2,#4

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   139  	return DEM_GET_SIZEOFEDRBYDTC_W_RNUM;      (inlined)
	j	.L143

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   140  }      (inlined)
.L143:
.L142:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   176  	return Dem_EnvEDGetSizeOfEDR (edId, RecordNumber, size);
	j	.L144

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   177  /*	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   178  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   179  		return DEM_GET_SIZEOFEDRBYDTC_W_RNUM;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   180  	}*/
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   181  }
.L144:
	ret
.L933:
	
__Dem_EnvGetSizeOfEDR_function_end:
	.size	Dem_EnvGetSizeOfEDR,__Dem_EnvGetSizeOfEDR_function_end-Dem_EnvGetSizeOfEDR
.L367:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvGetSizeOfED',code,cluster('Dem_EnvGetSizeOfED')
	.sect	'.text.Dem_EnvMain.Dem_EnvGetSizeOfED'
	.align	2
	
	.global	Dem_EnvGetSizeOfED

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   182  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   183  Dem_ReturnGetSizeOfExtendedDataRecordByDTCType Dem_EnvGetSizeOfED(Dem_EventIdType EventId, uint16* size)
; Function Dem_EnvGetSizeOfED
.L311:
Dem_EnvGetSizeOfED:	.type	func
	mov.aa	a12,a4
.L1349:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   184  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   185  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1794:
	addsc.a	a2,a15,d4,#1
.L1795:
	ld.bu	d8,[a2]

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   186  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   187  	DEM_ASSERT(Dem_EnvHasExtendedData(EventId), DEM_DET_APIID_ENVGETSIZEOFED, DEM_E_WRONG_CONFIGURATION);
.L145:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
	addsc.a	a15,a15,d4,#1
.L1796:
	ld.bu	d15,[a15]
.L1797:
	ne	d15,d15,#0
.L1798:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);      (inlined)
	j	.L146

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }      (inlined)
.L146:
	jne	d15,#0,.L147
.L1799:
	mov	d4,#54
.L1348:
	mov	d5,#0
	mov	d6,#164
	mov	d7,#16
	call	Det_ReportError
.L147:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
.L1800:
	addsc.a	a15,a15,d8,#2
.L1801:
	ld.hu	d15,[a15]2
.L1802:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L148

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L148:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   188  	*size = Dem_EnvEDGetRawByteSize(edId);
	st.h	[a12],d15
.L1803:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   189  	return DEM_GET_SIZEOFEDRBYDTC_OK;
	mov	d2,#0
.L1804:
	j	.L149

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   190  }
.L149:
	ret
.L957:
	
__Dem_EnvGetSizeOfED_function_end:
	.size	Dem_EnvGetSizeOfED,__Dem_EnvGetSizeOfED_function_end-Dem_EnvGetSizeOfED
.L372:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveFF',code,cluster('Dem_EnvRetrieveFF')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveFF'
	.align	2
	
	.global	Dem_EnvRetrieveFF

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   191  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   192  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   193  Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvRetrieveFF(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveFF
.L313:
Dem_EnvRetrieveFF:	.type	func
	sub.a	a10,#56
.L1350:
	st.a	[a10]44,a4
.L1353:
	st.a	[a10]48,a5
.L1354:
	mov	d8,d5
.L1355:
	mov.aa	a12,a6
.L1357:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   194  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   195  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   196  		uint8 ffIndex,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   197  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   198  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   199  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   200  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L1684:
	addsc.a	a15,a2,d4,#1
.L1685:
	ld.bu	d9,[a15]
.L1358:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   201  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	ld.bu	d10,[a15]1
.L1359:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   202  	const uint8* readpos;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   203      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   204  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   205      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1686:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   206  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   207      internalEnvData.debug0 = 0;
	mov	d15,#0
.L1687:
	st.w	[a10]4,d15
.L1688:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   208      internalEnvData.debug1 = 0;
	mov	d15,#0
.L1689:
	st.w	[a10]8,d15
.L1690:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   209  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   210      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]12,a7

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   211  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   212  	DEM_ASSERT(Dem_EnvHasFreezeFrame(EventId),DEM_DET_APIID_ENVRETRIEVEFF,0);
.L150:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    34  DEM_INLINE Dem_boolean_least Dem_EnvHasFreezeFrame(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);
	addsc.a	a15,a2,d4,#1
.L1691:
	ld.bu	d15,[a15]1
.L1692:
	ne	d15,d15,#0
.L1693:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);      (inlined)
	j	.L151

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    37  }      (inlined)
.L151:
	jne	d15,#0,.L152
.L1694:
	mov	d4,#54
.L1351:
	mov	d5,#0
.L1352:
	mov	d6,#166
	mov	d7,#0
	call	Det_ReportError
.L152:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	movh.a	a5,#@his(Dem_Cfg_EnvFreezeFrame)
	lea	a5,[a5]@los(Dem_Cfg_EnvFreezeFrame)
.L1695:
	addsc.a	a15,a5,d10,#2
.L1696:
	ld.hu	d0,[a15]2
.L1697:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L153

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L153:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   213  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   214  	readpos = src + Dem_EnvEDGetRawByteSize (edId) /* if event does not have extdata, size=0 will be returned */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   215  			+ (Dem_EnvFFGetRawByteSize (ffId) * ffIndex);
	mul	d0,d8
.L855:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
.L1698:
	addsc.a	a15,a15,d9,#2
.L1699:
	ld.hu	d15,[a15]2
.L1700:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L154

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L154:
	addsc.a	a15,a12,d15,#0
.L1701:
	addsc.a	a15,a15,d0,#0
.L858:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     3  #ifndef DEM_ENVFFRECNUMERATION_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     4  #define DEM_ENVFFRECNUMERATION_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     7  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     8  #include "Dem_Cfg_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	     9  #include "Dem_Events.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    10  #include "Dem_EvMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    11  #include "Dem_Cfg_Events_DataStructures.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    13  #if (DEM_CFG_FFRECNUM == DEM_CFG_FFRECNUM_CALCULATED)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    16  DEM_INLINE Dem_boolean_least Dem_EnvIsFFRecNumValid(Dem_EventIdType EventId, uint8 RecNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    17  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    18  	return ((RecNumber > 0) && (RecNumber <= Dem_EvtParam_GetMaxNumberFreezeFrameRecords(EventId)));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    19  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    20  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    21  DEM_INLINE uint8 Dem_EnvGetIndexFromFFRecNum(Dem_EventIdType EventId, uint8 RecNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    22  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    23  	DEM_UNUSED_PARAM(EventId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    24  	return (RecNumber - 1);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    25  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    28  DEM_INLINE uint8 Dem_EnvGetFFRecNumFromIndex(Dem_EventIdType EventId, uint8 idx)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    29  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    30  	DEM_UNUSED_PARAM(EventId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    31  	return (idx + 1);
	add	d8,#1
.L1356:
	extr.u	d0,d8,#0,#8
.L1702:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    31  	return (idx + 1);      (inlined)
	j	.L155

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFFRecNumeration.h	    32  }      (inlined)
.L155:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   216  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   217  	return Dem_EnvFFRetrieve (ffId, Dem_EnvGetFFRecNumFromIndex (EventId, ffIndex), dest,
	ld.a	a2,[a10]44
.L1361:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   218              destSize, readpos, &internalEnvData);
	st.a	[a10]16,a15
.L865:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
	ld.a	a15,[a10]44
.L1360:
	st.a	[a10]20,a15
.L1703:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
	ld.a	a4,[a10]48
.L1363:
	ld.hu	d15,[a4]0
.L1704:
	addsc.a	a15,a15,d15,#0
.L1362:
	st.a	[a10]36,a15
.L1365:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)      (inlined)
	jge.u	d15,#2,.L156
.L1705:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
	mov	d2,#5

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;      (inlined)
	j	.L157

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)      (inlined)
.L156:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
	st.b	[a2],d0
.L1366:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
	ld.a	a15,[a10]20
.L1364:
	add.a	a15,#1
	st.a	[a10]20,a15
.L1706:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
	addsc.a	a15,a5,d10,#2
	st.a	[a10]40,a15
.L1707:
	ld.a	a2,[a10]20
.L1708:
	ld.hu	d15,[a15]0
.L1709:
	ld.hu	d0,[a15]-4
.L1710:
	sub	d15,d0
.L1711:
	st.b	[a2],d15
.L1712:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
	ld.a	a15,[a10]20
.L1713:
	add.a	a15,#1
	st.a	[a10]20,a15
.L1714:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
	ld.a	a15,[a10]40
	ld.hu	d8,[a15]-4
.L1367:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	j	.L158
.L159:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame2Did)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame2Did)
.L1715:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L1716:
	lea	a12,[a10]20
.L1717:
	lea	a6,[a10]16
.L886:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    34  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    35  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    36  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    38  /* copies all dataelements of DID from input stream to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    40  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    41  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveRaw(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    43  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    45  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    48  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    50  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    52  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    53  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    59  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieve(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)
	ld.a	a2,[a12]
.L1718:
	ld.a	a15,[a10]36
.L1368:
	sub.a	a4,a15,a2
	mov.d	d0,a4
.L1719:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)      (inlined)
	jge	d0,#2,.L160
.L1720:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    62  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    63  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    63  		return FALSE;      (inlined)
	j	.L161

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)      (inlined)
.L160:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    64  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    65  	**start = (uint8) ((Dem_Cfg_EnvDid[didId].identifier / 256u) & 0xFFu);
	movh.a	a4,#@his(Dem_Cfg_EnvDid)
	lea	a4,[a4]@los(Dem_Cfg_EnvDid)
.L1721:
	addsc.a	a5,a4,d15,#2
.L1722:
	add.a	a5,#2
	ld.hu	d0,[a5]0
	sh	d0,#-8
.L1723:
	st.b	[a2],d0
.L1724:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    66  	(*start)++;
	ld.a	a2,[a12]
.L1725:
	add.a	a2,#1
	st.a	[a12],a2
.L1726:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    67  	**start = (uint8)((Dem_Cfg_EnvDid[didId].identifier) & 0xFFu);
	ld.a	a2,[a12]
.L1727:
	ld.hu	d0,[a5]0
.L1728:
	st.b	[a2],d0
.L1729:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    68  	(*start)++;
	ld.a	a2,[a12]
.L1730:
	add.a	a2,#1
	st.a	[a12],a2
.L1731:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    69  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    70  	return Dem_EnvDIDRetrieveRaw(didId, start, end, src, internalEnvData);
	st.a	[a10]36,a15
.L1369:
	st.a	[a10]24,a6
.L866:
	lea	a15,[a10]0
.L881:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    34  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    35  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    36  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    38  /* copies all dataelements of DID from input stream to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    40  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    41  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveRaw(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    43  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    45  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    48  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    50  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    52  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    53  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    59  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieve(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    62  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    63  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    64  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    65  	**start = (uint8) ((Dem_Cfg_EnvDid[didId].identifier / 256u) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    66  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    67  	**start = (uint8)((Dem_Cfg_EnvDid[didId].identifier) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    68  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    69  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    70  	return Dem_EnvDIDRetrieveRaw(didId, start, end, src, internalEnvData);
	st.a	[a10]32,a15
.L901:
	addsc.a	a15,a4,d15,#2
	st.a	[a10]28,a15
.L1732:
	ld.hu	d9,[a15]-4
.L1370:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L162

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)      (inlined)
.L163:
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L1733:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L914:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1371:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L1734:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1735:
	addsc.a	a15,a15,d15,#0
.L1736:
	lea	a13,[a15]8
	ld.bu	d4,[a13]
.L1737:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L1738:
	add	d0,d4
.L1739:
	ld.a	a2,[a10]36
	mov.d	d1,a2
.L1740:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d1,d0,.L164
.L1741:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L165

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L164:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1742:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L166
.L1743:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1744:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L167
.L1745:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L167:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1746:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L168
.L1747:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1748:
	ld.a	a5,[a10]32
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L168:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L169
.L1749:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a13]
.L921:
	ld.a	a4,[a12]
	mov	d4,#255
.L925:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L922:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L169:
	j	.L170

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L166:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a15,[a10]24
	ld.a	a5,[a15]
.L929:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L170:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1750:
	ld.bu	d15,[a13]
.L1751:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L1752:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a10]24
	ld.a	a15,[a15]
.L1753:
	ld.bu	d15,[a13]
.L1754:
	addsc.a	a2,a15,d15,#0
	ld.a	a15,[a10]24
	st.a	[a15],a2
.L1755:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L171

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L171:
.L165:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L172
.L1756:
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;      (inlined)
	j	.L173

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L172:
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L162:
	ld.a	a15,[a10]28
	ld.hu	d15,[a15]0
.L1757:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d9,d15,.L163
.L1758:
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;      (inlined)
	j	.L174

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }      (inlined)
.L174:
.L173:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    70  	return Dem_EnvDIDRetrieveRaw(didId, start, end, src, internalEnvData);      (inlined)
	j	.L175

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    71  }      (inlined)
.L175:
.L161:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))      (inlined)
	jne	d15,#0,.L176
.L899:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
	mov	d2,#5

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;      (inlined)
	j	.L177

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))      (inlined)
.L176:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
.L158:
	ld.a	a15,[a10]40
	ld.hu	d15,[a15]0
.L1759:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	jlt.u	d8,d15,.L159
.L1760:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]20
.L1761:
	ld.a	a15,[a10]44
.L1372:
	sub.a	a15,a2,a15
.L1373:
	mov.d	d15,a15
.L1762:
	ld.a	a15,[a10]48
.L1374:
	st.h	[a15],d15
.L1763:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;      (inlined)
	j	.L178

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }      (inlined)
.L178:
.L177:
.L157:
	j	.L179

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   219  /*	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   220  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   221  		return DEM_GET_FFDATABYDTC_WRONG_RECORDNUMBER;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   222  	}*/
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   223  }
.L179:
	ret
.L839:
	
__Dem_EnvRetrieveFF_function_end:
	.size	Dem_EnvRetrieveFF,__Dem_EnvRetrieveFF_function_end-Dem_EnvRetrieveFF
.L362:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvGetSizeOfFF',code,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.text.Dem_EnvMain.Dem_EnvGetSizeOfFF'
	.align	2
	
	.global	Dem_EnvGetSizeOfFF

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   224  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   225  Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvGetSizeOfFF(Dem_EventIdType EventId, uint16* size)
; Function Dem_EnvGetSizeOfFF
.L315:
Dem_EnvGetSizeOfFF:	.type	func

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   226  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   227  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L1809:
	addsc.a	a15,a2,d4,#1
.L1810:
	ld.bu	d15,[a15]1
.L967:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    34  DEM_INLINE Dem_boolean_least Dem_EnvHasFreezeFrame(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);
	addsc.a	a15,a2,d4,#1
.L1811:
	ld.bu	d0,[a15]1
.L1812:
	ne	d0,d0,#0
.L1813:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);      (inlined)
	j	.L180

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    37  }      (inlined)
.L180:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   228  	if (Dem_EnvHasFreezeFrame(EventId))
	jeq	d0,#0,.L181
.L970:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
	mov	d0,#2
.L1814:
	st.h	[a4],d0
.L1815:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame)
	addsc.a	a2,a15,d15,#2
.L1816:
	ld.hu	d1,[a2]-4
.L1375:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	j	.L182
.L183:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame2Did)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame2Did)
.L1817:
	addsc.a	a15,a15,d1,#0
	ld.bu	d15,[a15]
.L978:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    34  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    35  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    36  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    38  /* copies all dataelements of DID from input stream to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    40  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    41  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveRaw(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    43  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    45  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    48  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    50  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    52  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    53  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    59  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieve(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    62  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    63  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    64  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    65  	**start = (uint8) ((Dem_Cfg_EnvDid[didId].identifier / 256u) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    66  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    67  	**start = (uint8)((Dem_Cfg_EnvDid[didId].identifier) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    68  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    69  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    70  	return Dem_EnvDIDRetrieveRaw(didId, start, end, src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    71  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    74  /* if identifier matches selected DID (didId), the data of the DID didId is returned. Otherwise
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    75     the DID data is skipped in the inputstream (readpointer is increased by current DID size). */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveSpecificDid (uint8 didId, uint16 identifier, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    81  	if (Dem_Cfg_EnvDid[didId].identifier == identifier)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    83  		for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    84  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    85  			 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    86  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    87  			if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    88  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    89  				return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    90  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    91  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    92  		return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    93  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    94  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    95  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    96  		for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    97  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    98  			 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    99  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   100  			*src += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvDid2DataElement[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   101  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   102  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   104  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   105  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   106  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   107  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   108  DEM_INLINE uint16 Dem_EnvDIDGetSize(uint8 didId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   109  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   110  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   111  	uint16 byteSize = 2;
	mov	d0,#2
.L1376:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   113  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
	movh.a	a15,#@his(Dem_Cfg_EnvDid)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid)
	addsc.a	a5,a15,d15,#2
.L1818:
	ld.hu	d2,[a5]-4
.L1378:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   114  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L184

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   115  		 i++)      (inlined)
.L185:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   114  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   115  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   116  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   117  		byteSize += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvDid2DataElement[i]);
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L1819:
	addsc.a	a15,a15,d2,#0
	ld.bu	d15,[a15]
.L987:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   148  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   149  DEM_INLINE uint8 Dem_EnvDAGetSizeOf(uint8 dataElementId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;
	mul	d15,d15,#12
.L1820:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1821:
	addsc.a	a15,a15,d15,#0
.L1822:
	ld.bu	d15,[a15]8
.L1823:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;      (inlined)
	j	.L186

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   152  }      (inlined)
.L186:
	add	d0,d15
.L1377:
	extr.u	d0,d0,#0,#16
.L1379:
	add	d2,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   114  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L184:
	ld.hu	d15,[a5]0
.L1824:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   114  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d2,d15,.L185
.L1825:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   119  	return byteSize;      (inlined)
	j	.L187

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   120  }      (inlined)
.L187:
	ld.hu	d15,[a4]0
.L983:
	add	d15,d0
.L984:
	st.h	[a4],d15
.L1826:
	add	d1,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
.L182:
	ld.hu	d15,[a2]0
.L1827:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	jlt.u	d1,d15,.L183
.L1828:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;      (inlined)
	j	.L188

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }      (inlined)
.L188:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   229  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   230  		return Dem_EnvFFGetSize (ffId, size);
	j	.L189
.L181:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   231  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   232  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   233  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   234  		return DEM_GET_SIZEOFFF_WRONG_RNUM;
	mov	d2,#4
.L1829:
	j	.L190

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   235  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   236  }
.L190:
.L189:
	ret
.L963:
	
__Dem_EnvGetSizeOfFF_function_end:
	.size	Dem_EnvGetSizeOfFF,__Dem_EnvGetSizeOfFF_function_end-Dem_EnvGetSizeOfFF
.L377:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveRawED',code,cluster('Dem_EnvRetrieveRawED')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveRawED'
	.align	2
	
	.global	Dem_EnvRetrieveRawED

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   237  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   238  /* Support functions for DLT: Dem_GetEventExtendedDataRecord, Dem_GetEventFreezeFrameData */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   239  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   240  Std_ReturnType Dem_EnvRetrieveRawED(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveRawED
.L317:
Dem_EnvRetrieveRawED:	.type	func
	sub.a	a10,#48
.L1380:
	st.a	[a10]40,a4
.L1383:
	st.a	[a10]36,a5
.L1384:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   241  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   242  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   243  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   244  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   245  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   246  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1834:
	addsc.a	a2,a15,d4,#1
.L1835:
	ld.bu	d0,[a2]
.L998:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a2,#@his(Dem_Cfg_EnvExtData)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtData)
.L1836:
	addsc.a	a4,a2,d0,#2
.L1381:
	ld.hu	d8,[a4]2
.L1837:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L191

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L191:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   247  	uint16 size = Dem_EnvEDGetRawByteSize (edId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   248      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   249  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   250      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1838:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   251  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   252      internalEnvData.debug0 = 0;
	mov	d15,#0
.L1839:
	st.w	[a10]4,d15
.L1840:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   253      internalEnvData.debug1 = 0;
	mov	d15,#0
.L1841:
	st.w	[a10]8,d15
.L1842:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   254  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   255      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]12,a7
.L1000:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
	addsc.a	a15,a15,d4,#1
.L1843:
	ld.bu	d15,[a15]
.L1844:
	ne	d15,d15,#0
.L1845:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);      (inlined)
	j	.L192

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }      (inlined)
.L192:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   256  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   257  	if (Dem_EnvHasExtendedData(EventId) && (size <= *destSize))
	jeq	d15,#0,.L193
.L1846:
	ld.a	a15,[a10]36
.L1382:
	ld.hu	d15,[a15]0
.L1847:
	jlt.u	d15,d8,.L194
.L1848:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   258  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   259          (void)Dem_EnvEDRetrieveExtendedData (edId, dest, destSize, src, &internalEnvData);
	st.a	[a10]16,a6
.L1003:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
	ld.a	a15,[a10]40
.L1385:
	st.a	[a10]20,a15
.L1849:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
	ld.a	a4,[a10]36
.L1387:
	ld.hu	d15,[a4]0
.L1850:
	addsc.a	a15,a15,d15,#0
.L1386:
	st.a	[a10]28,a15
.L1389:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	addsc.a	a15,a2,d0,#2
.L1388:
	st.a	[a10]32,a15
.L1851:
	ld.hu	d9,[a15]-4
.L1390:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L195
.L196:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1852:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L1853:
	lea	a12,[a10]20
.L1854:
	lea	a13,[a10]16
.L1021:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d0,#6
.L1855:
	movh.a	a15,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtDataRec)
	addsc.a	a15,a15,d15,#0
	st.a	[a10]24,a15
.L1856:
	ld.hu	d10,[a15]-2
.L1391:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L197

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)      (inlined)
.L198:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1857:
	addsc.a	a15,a15,d10,#0
	ld.bu	d0,[a15]
.L1029:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1392:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L1858:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1859:
	addsc.a	a15,a15,d15,#0
.L1860:
	lea	a14,[a15]8
	ld.bu	d4,[a14]
.L1861:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L1862:
	add	d0,d4
.L1863:
	ld.a	a2,[a10]28
.L1393:
	mov.d	d1,a2
.L1395:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d1,d0,.L199
.L1864:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L200

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L199:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1865:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L201
.L1866:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1394:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L202
.L1867:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L202:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1868:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L203
.L1869:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1004:
	lea	a5,[a10]0
.L1017:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L203:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L204
.L1870:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L1037:
	ld.a	a4,[a12]
	mov	d4,#255
.L1041:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L1038:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L204:
	j	.L205

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L201:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a13]
.L1045:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L205:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1871:
	ld.bu	d15,[a14]
.L1872:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L1873:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a13]
.L1874:
	ld.bu	d15,[a14]
.L1875:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L1876:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L206

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L206:
.L200:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L207
.L1877:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;      (inlined)
	j	.L208

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L207:
	add	d10,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L197:
	ld.a	a15,[a10]24
	ld.hu	d15,[a15]4
.L1878:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d10,d15,.L198
.L1879:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;      (inlined)
	j	.L209

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }      (inlined)
.L209:
.L208:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
	jne	d15,#0,.L210
.L1880:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;      (inlined)
	j	.L211

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
.L210:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L195:
	ld.a	a15,[a10]32
	ld.hu	d15,[a15]0
.L1881:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d9,d15,.L196
.L1882:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]20
.L1883:
	ld.a	a15,[a10]40
.L1396:
	sub.a	a15,a2,a15
.L1397:
	mov.d	d15,a15
.L1884:
	ld.a	a15,[a10]36
.L1398:
	st.h	[a15],d15
.L1885:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;      (inlined)
	j	.L212

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }      (inlined)
.L212:
.L211:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   260  		*destSize = size;
	ld.a	a15,[a10]36
.L1399:
	st.h	[a15],d8
.L1886:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   261  		return E_OK;
	mov	d2,#0
.L1887:
	j	.L213
.L194:
.L193:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   262  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   263  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   264  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   265  		return E_NOT_OK;
	mov	d2,#1
.L1888:
	j	.L214

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   266  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   267  }
.L214:
.L213:
	ret
.L989:
	
__Dem_EnvRetrieveRawED_function_end:
	.size	Dem_EnvRetrieveRawED,__Dem_EnvRetrieveRawED_function_end-Dem_EnvRetrieveRawED
.L382:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveRawEDR',code,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveRawEDR'
	.align	2
	
	.global	Dem_EnvRetrieveRawEDR

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   268  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   269  Dem_boolean_least Dem_EnvRetrieveRawEDR(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveRawEDR
.L319:
Dem_EnvRetrieveRawEDR:	.type	func
	sub.a	a10,#48
.L1400:
	st.a	[a10]36,a4
.L1403:
	st.a	[a10]40,a5
.L1404:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   270  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   271  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   272  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   273  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   274  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   275  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   276  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a15,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a15,[a15]@los(Dem_Cfg_EnvEventId2EnvData)
.L1893:
	addsc.a	a2,a15,d4,#1
.L1894:
	ld.bu	d0,[a2]
.L1405:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   277      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   278  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   279      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L1895:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   280  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   281      internalEnvData.debug0 = 0;
	mov	d15,#0
.L1896:
	st.w	[a10]4,d15
.L1897:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   282      internalEnvData.debug1 = 0;
	mov	d15,#0
.L1898:
	st.w	[a10]8,d15
.L1899:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   283  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   284      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]12,a7
.L1058:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
	addsc.a	a15,a15,d4,#1
.L1900:
	ld.bu	d15,[a15]
.L1901:
	ne	d15,d15,#0
.L1902:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);      (inlined)
	j	.L215

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }      (inlined)
.L215:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   285  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   286  	if (Dem_EnvHasExtendedData(EventId))
	jeq	d15,#0,.L216
.L1903:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   287  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   288          return (Dem_EnvEDRetrieveExtendedDataRecord (edId, RecordNumber, dest, destSize, src, &internalEnvData)
	st.a	[a10]16,a6
.L1904:
	lea	a4,[a10]0
.L1060:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
	ld.a	a15,[a10]36
.L1407:
	st.a	[a10]20,a15
.L1905:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
	ld.a	a2,[a10]40
.L1401:
	ld.hu	d15,[a2]0
.L1906:
	addsc.a	a5,a15,d15,#0
.L1409:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
.L1408:
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
	addsc.a	a6,a15,d0,#2
.L1402:
	ld.hu	d0,[a6]-4
.L1406:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	j	.L217
.L218:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2ExtDataRec)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2ExtDataRec)
.L1907:
	addsc.a	a15,a15,d0,#0
	ld.bu	d1,[a15]
.L1070:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
	movh.a	a2,#@his(Dem_Cfg_EnvExtDataRec)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtDataRec)
.L1908:
	mul	d15,d1,#6
	addsc.a	a15,a2,d15,#0
.L1909:
	ld.bu	d15,[a15]
.L1910:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;      (inlined)
	j	.L219

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }      (inlined)
.L219:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
	jne	d15,d5,.L220
.L1911:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
	lea	a12,[a10]20
.L1912:
	st.a	[a10]32,a5
.L1913:
	lea	a13,[a10]16
.L1914:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
	st.a	[a10]28,a4
.L1072:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d1,#6
.L1915:
	addsc.a	a15,a2,d15,#0
	st.a	[a10]24,a15
.L1916:
	ld.hu	d8,[a15]-2
.L1410:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L221

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)      (inlined)
.L222:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1917:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L1079:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1411:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L1918:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1919:
	addsc.a	a15,a15,d15,#0
.L1920:
	lea	a14,[a15]8
	ld.bu	d4,[a14]
.L1921:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L1922:
	add	d0,d4
.L1923:
	ld.a	a2,[a10]32
	mov.d	d1,a2
.L1924:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d1,d0,.L223
.L1925:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L224

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L223:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L1926:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L225
.L1927:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L1928:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L226
.L1929:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L226:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L1930:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L227
.L1931:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L1932:
	ld.a	a5,[a10]28
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L227:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L228
.L1933:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L1086:
	ld.a	a4,[a12]
	mov	d4,#255
.L1090:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L1087:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L228:
	j	.L229

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L225:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a13]
.L1094:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L229:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L1934:
	ld.bu	d15,[a14]
.L1935:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L1936:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a13]
.L1937:
	ld.bu	d15,[a14]
.L1938:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L1939:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L230

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L230:
.L224:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L231
.L1940:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;      (inlined)
	j	.L232

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L231:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L221:
	ld.a	a15,[a10]24
	ld.hu	d15,[a15]4
.L1941:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d8,d15,.L222
.L1942:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;      (inlined)
	j	.L233

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }      (inlined)
.L233:
.L232:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
	jne	d15,#0,.L234
.L1943:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   109  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;
	mov	d15,#5

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;      (inlined)
	j	.L235

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))      (inlined)
.L234:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   111  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   112  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]20
.L1944:
	ld.a	a15,[a10]36
.L1412:
	sub.a	a15,a2,a15
.L1413:
	mov.d	d15,a15
.L1945:
	ld.a	a15,[a10]40
.L1414:
	st.h	[a15],d15
.L1946:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;      (inlined)
	j	.L236

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)      (inlined)
.L220:
	lea	a7,[a10]16
.L1098:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     4  #ifndef DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     5  #define DEM_ENVEXTENDEDDATAREC_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	     9  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    10  #include "Dem_Cfg_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    11  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    12  #include "Dem_EnvTrigger.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    16     uint8 recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    17     Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    18     boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    19     uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    20  } Dem_EnvExtDataRec;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    21  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    22  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    23  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    24  extern const uint8 Dem_Cfg_EnvExtData2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    25  extern const Dem_EnvExtDataRec Dem_Cfg_EnvExtDataRec[DEM_CFG_ENVEXTDATAREC_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    26  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    29  DEM_INLINE uint8 Dem_EnvEDRGetRecordNumber (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    30  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    31     return Dem_Cfg_EnvExtDataRec[extDataRecId].recordNumber;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    32  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    34  DEM_INLINE boolean Dem_EnvEDRGetUpdate (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    36     return Dem_Cfg_EnvExtDataRec[extDataRecId].update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    40  DEM_INLINE Dem_TriggerType Dem_EnvEDRGetRecordTrigger (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    42     return Dem_Cfg_EnvExtDataRec[extDataRecId].trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    45  DEM_INLINE void Dem_EnvEDRCapture (uint8 extDataRecId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    46  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    47     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    48     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    49          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    50          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    51     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    52        Dem_EnvDACapture(Dem_Cfg_EnvExtData2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    53     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    54  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    59  DEM_INLINE void Dem_EnvEDRCopyRaw (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    61  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    62  	Dem_TriggerType trigger;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    63  	boolean update;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    65  	/* Extended Data Record will be modified if
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    66  	 * 1. Trigger is set for this Extended Data Record
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    67  	 *    and
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    68  	 * 2. Trigger is set for this Extended Data Record the first time or Update is configured
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    69  	 */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    70  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    71  	trigger = Dem_EnvEDRGetRecordTrigger(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    72  	update  = Dem_EnvEDRGetUpdate(extDataRecId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    74  	if ( (Dem_EnvIsTriggerSet(triggerParam->currentTrigger,trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    75  		(!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger) || update))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    77  	    || (Dem_EnvIsTriggerSet(Dem_GetSmallerTrigger(triggerParam->currentTrigger),trigger) &&
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    78  	            (!Dem_EnvIsTriggerSet(triggerParam->storedTrigger, trigger))))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    79  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    80  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    81  		Dem_EnvSetTrigger(&triggerParam->matchingTrigger, trigger);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    82  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    83  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    84  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    85  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    86  			Dem_EnvDACopy(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    89  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    90  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    91  		for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    92  				i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    93  				i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    94  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    95  			Dem_EnvDASkip(Dem_Cfg_EnvExtData2DataElement[i], start, end, src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    96  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    97  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    98  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	    99  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   100  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   101  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   102  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   103  DEM_INLINE Dem_boolean_least Dem_EnvEDRRetrieve (uint8 extDataRecId, uint8** start, const uint8* end, const uint8** const src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   104  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   105     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   106     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   107          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   108          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   109     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   110        if (!Dem_EnvDARetrieve(Dem_Cfg_EnvExtData2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   111        {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   112           return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   113        }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   114     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   115     return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   116  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   118  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   119  DEM_INLINE uint16 Dem_EnvEDRGetSize (uint8 extDataRecId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   120  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   121     uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   122     uint16 byteSize = 0;
	mov	d2,#0
.L1415:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   123     for (i = Dem_Cfg_EnvExtDataRec[extDataRecId-1].dataElementIndex;
	mul	d15,d1,#6
.L1947:
	addsc.a	a2,a2,d15,#0
.L1948:
	ld.hu	d1,[a2]-2
.L1417:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	j	.L237

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)      (inlined)
.L238:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   125          i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   126     {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   127        byteSize += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvExtData2DataElement[i]);
	movh.a	a15,#@his(Dem_Cfg_EnvExtData2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData2DataElement)
.L1949:
	addsc.a	a15,a15,d1,#0
	ld.bu	d15,[a15]
.L1108:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   148  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   149  DEM_INLINE uint8 Dem_EnvDAGetSizeOf(uint8 dataElementId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;
	mul	d15,d15,#12
.L1950:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1951:
	addsc.a	a15,a15,d15,#0
.L1952:
	ld.bu	d15,[a15]8
.L1953:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;      (inlined)
	j	.L239

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   152  }      (inlined)
.L239:
	add	d2,d15
.L1416:
	extr.u	d2,d2,#0,#16
.L1418:
	add	d1,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
.L237:
	ld.hu	d15,[a2]4
.L1954:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   124          i < Dem_Cfg_EnvExtDataRec[extDataRecId].dataElementIndex;      (inlined)
	jlt.u	d1,d15,.L238
.L1955:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   129     return byteSize;      (inlined)
	j	.L240

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   130  }      (inlined)
.L240:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   128     }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   129     return byteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   130  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   131  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   132  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   133  DEM_INLINE void Dem_EnvEDRSkipSrc (uint8 extDataRecId, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   134  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedDataRec.h	   135  	*src += Dem_EnvEDRGetSize(extDataRecId);
	ld.a	a15,[a7]
.L1104:
	addsc.a	a15,a15,d2,#0
.L1105:
	st.a	[a7],a15
.L1099:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    43  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    44  DEM_INLINE void Dem_EnvEDCopyRaw(uint8 extDataId, uint8* dest, uint16 bufsize, const uint8* src, Dem_EnvTriggerParamType* triggerParam)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    45  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    46  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    47  	const uint8* end = dest + bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    48  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    49  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    50  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    51  		Dem_EnvEDRCopyRaw (Dem_Cfg_EnvExtData2ExtDataRec[i], &dest, end, &src, triggerParam);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    52  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    53  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    54  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    55  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedData(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    56  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    57  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    58  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    59  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    61  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    62  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    63  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    65  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    66  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    67  		if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    68  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    69  			return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    70  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    71  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    73  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    74  	return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    75  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvEDIsRecordNumberValid(uint8 extDataId, uint8 RecordNumber, Dem_TriggerType* trigger)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    81  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    83  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    84  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    85  			*trigger = Dem_EnvEDRGetRecordTrigger(Dem_Cfg_EnvExtData2ExtDataRec[i]);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    86  			return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    87  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    88  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    90  	return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    91  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    92  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    93  DEM_INLINE Dem_ReturnGetExtendedDataRecordByDTCType Dem_EnvEDRetrieveExtendedDataRecord(uint8 extDataId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    94  		uint8 RecordNumber,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    95  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    96  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    97  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    98  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    99  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   100  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   101  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   102  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
	add	d0,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
.L217:
	ld.hu	d15,[a6]0
.L1956:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   104  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)      (inlined)
	jlt.u	d0,d15,.L218
.L1957:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   105  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   106  		if (Dem_EnvEDRGetRecordNumber (Dem_Cfg_EnvExtData2ExtDataRec[i]) == RecordNumber)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   107  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   108  			if (!Dem_EnvEDRRetrieve (Dem_Cfg_EnvExtData2ExtDataRec[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   109  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   110  				return DEM_RECORD_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   111  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   112  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   113  			return DEM_RECORD_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   114  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   115  		else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   116  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   117  			Dem_EnvEDRSkipSrc (Dem_Cfg_EnvExtData2ExtDataRec[i], &src);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   118  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   119  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   120  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   121  	return DEM_RECORD_WRONG_NUMBER;
	mov	d15,#4

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   121  	return DEM_RECORD_WRONG_NUMBER;      (inlined)
	j	.L241

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	   122  }      (inlined)
.L241:
.L236:
.L235:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   289  				== DEM_RECORD_OK);
	eq	d2,d15,#0
.L1958:
	j	.L242
.L216:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   290  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   291  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   292  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   293  		return FALSE;
	mov	d2,#0
.L1959:
	j	.L243

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   294  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   295  }
.L243:
.L242:
	ret
.L1049:
	
__Dem_EnvRetrieveRawEDR_function_end:
	.size	Dem_EnvRetrieveRawEDR,__Dem_EnvRetrieveRawEDR_function_end-Dem_EnvRetrieveRawEDR
.L387:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveRawFF',code,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveRawFF'
	.align	2
	
	.global	Dem_EnvRetrieveRawFF

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   296  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   297  Std_ReturnType Dem_EnvRetrieveRawFF(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveRawFF
.L321:
Dem_EnvRetrieveRawFF:	.type	func
	sub.a	a10,#56
.L1419:
	st.a	[a10]44,a4
.L1422:
	st.a	[a10]48,a5
.L1423:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   298  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   299  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   300  		uint8 ffIndex,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   301  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   302  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   303  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   304  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a4,#@his(Dem_Cfg_EnvEventId2EnvData)
.L1420:
	lea	a4,[a4]@los(Dem_Cfg_EnvEventId2EnvData)
.L1964:
	addsc.a	a15,a4,d4,#1
.L1965:
	ld.bu	d0,[a15]
.L1424:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   305  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	ld.bu	d1,[a15]1
.L1122:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	movh.a	a5,#@his(Dem_Cfg_EnvFreezeFrame)
.L1421:
	lea	a5,[a5]@los(Dem_Cfg_EnvFreezeFrame)
.L1966:
	addsc.a	a2,a5,d1,#2
.L1967:
	ld.hu	d2,[a2]2
.L1968:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L244

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L244:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   306  	uint16 size = Dem_EnvFFGetRawByteSize (ffId);
	st.h	[a10],d2
.L1124:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	addsc.a	a2,a5,d1,#2
.L1969:
	ld.hu	d15,[a2]2
.L1970:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L245

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L245:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   307      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   308  	const uint8* readpos = src + Dem_EnvEDGetRawByteSize (edId) + (Dem_EnvFFGetRawByteSize (ffId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   309  			* ffIndex);
	mul	d5,d15
.L1125:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a2,#@his(Dem_Cfg_EnvExtData)
	lea	a2,[a2]@los(Dem_Cfg_EnvExtData)
.L1971:
	addsc.a	a2,a2,d0,#2
.L1972:
	ld.hu	d15,[a2]2
.L1973:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L246

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L246:
	addsc.a	a2,a6,d15,#0
.L1974:
	addsc.a	a2,a2,d5,#0
.L1425:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   310  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   311      internalEnvData.eventId = EventId;
	st.h	[a10]4,d4
.L1975:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   312  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   313      internalEnvData.debug0 = 0;
	mov	d15,#0
.L1976:
	st.w	[a10]8,d15
.L1977:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   314      internalEnvData.debug1 = 0;
	mov	d15,#0
.L1978:
	st.w	[a10]12,d15
.L1979:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   315  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   316      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]16,a7
.L1127:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    34  DEM_INLINE Dem_boolean_least Dem_EnvHasFreezeFrame(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);
	addsc.a	a15,a4,d4,#1
.L1980:
	ld.bu	d15,[a15]1
.L1981:
	ne	d15,d15,#0
.L1982:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);      (inlined)
	j	.L247

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    37  }      (inlined)
.L247:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   317  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   318  	if (Dem_EnvHasFreezeFrame(EventId) && (size <= *destSize))
	jeq	d15,#0,.L248
.L1983:
	ld.a	a15,[a10]48
.L1426:
	ld.hu	d15,[a15]0
.L1984:
	jlt.u	d15,d2,.L249
.L1985:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   319  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   320          Dem_EnvFFRetrieveRaw (ffId, dest, &size, readpos, &internalEnvData);
	st.a	[a10]20,a2
.L1130:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
	ld.a	a15,[a10]44
.L1427:
	st.a	[a10]24,a15
.L1986:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
	ld.hu	d15,[a10]0
.L1987:
	addsc.a	a15,a15,d15,#0
.L1428:
	st.a	[a10]36,a15
.L1430:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
	addsc.a	a15,a5,d1,#2
.L1429:
	st.a	[a10]40,a15
.L1988:
	ld.hu	d8,[a15]-4
.L1431:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	j	.L250
.L251:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame2Did)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame2Did)
.L1989:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L1990:
	lea	a12,[a10]24
.L1991:
	lea	a13,[a10]20
.L1131:
	lea	a15,[a10]4
.L1144:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
	st.a	[a10]32,a15
.L1151:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    34  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    35  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    36  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    38  /* copies all dataelements of DID from input stream to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    40  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    41  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveRaw(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    43  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    45  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
	movh.a	a15,#@his(Dem_Cfg_EnvDid)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid)
	addsc.a	a15,a15,d15,#2
	st.a	[a10]28,a15
.L1992:
	ld.hu	d9,[a15]-4
.L1432:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L252

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)      (inlined)
.L253:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    48  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L1993:
	addsc.a	a15,a15,d9,#0
	ld.bu	d0,[a15]
.L1158:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1433:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L1994:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L1995:
	addsc.a	a15,a15,d15,#0
.L1996:
	lea	a14,[a15]8
	ld.bu	d4,[a14]
.L1997:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L1998:
	add	d0,d4
.L1999:
	ld.a	a2,[a10]36
	mov.d	d1,a2
.L2000:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d1,d0,.L254
.L2001:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L255

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L254:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L2002:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L256
.L2003:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L2004:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L257
.L2005:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L257:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L2006:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L258
.L2007:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L2008:
	ld.a	a5,[a10]32
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L258:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L259
.L2009:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L1165:
	ld.a	a4,[a12]
	mov	d4,#255
.L1169:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L1166:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L259:
	j	.L260

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L256:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a13]
.L1173:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L260:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L2010:
	ld.bu	d15,[a14]
.L2011:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L2012:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a13]
.L2013:
	ld.bu	d15,[a14]
.L2014:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L2015:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L261

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L261:
.L255:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L262
.L2016:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;      (inlined)
	j	.L263

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L262:
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L252:
	ld.a	a15,[a10]28
	ld.hu	d15,[a15]0
.L2017:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d9,d15,.L253
.L2018:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;      (inlined)
	j	.L264

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }      (inlined)
.L264:
.L263:
	add	d8,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
.L250:
	ld.a	a15,[a10]40
	ld.hu	d15,[a15]0
.L2019:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	jlt.u	d8,d15,.L251
.L2020:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   101  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   103  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]24
.L2021:
	ld.a	a15,[a10]44
.L1434:
	sub.a	a15,a2,a15
.L1435:
	mov.d	d15,a15
.L1145:
	lea	a15,[a10]0
.L1146:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   101  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   103  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	st.h	[a15],d15
.L1147:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   321  		*destSize = size;
	ld.hu	d15,[a10]0
.L2022:
	ld.a	a15,[a10]48
.L1436:
	st.h	[a15],d15
.L2023:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   322  		return E_OK;
	mov	d2,#0
.L2024:
	j	.L265
.L249:
.L248:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   323  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   324  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   325  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   326  		return E_NOT_OK;
	mov	d2,#1
.L2025:
	j	.L266

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   327  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   328  }
.L266:
.L265:
	ret
.L1110:
	
__Dem_EnvRetrieveRawFF_function_end:
	.size	Dem_EnvRetrieveRawFF,__Dem_EnvRetrieveRawFF_function_end-Dem_EnvRetrieveRawFF
.L392:
	; End of function
	
	.sdecl	'.text.Dem_EnvMain.Dem_EnvRetrieveRawDid',code,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.text.Dem_EnvMain.Dem_EnvRetrieveRawDid'
	.align	2
	
	.global	Dem_EnvRetrieveRawDid

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   329  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   330  /* --- */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   331  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   332  Dem_boolean_least Dem_EnvRetrieveRawDid(Dem_EventIdType EventId,
; Function Dem_EnvRetrieveRawDid
.L323:
Dem_EnvRetrieveRawDid:	.type	func
	sub.a	a10,#48
.L1437:
	st.a	[a10]40,a4
.L1440:
	st.a	[a10]44,a5
.L1441:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   333  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   334  		uint16* destSize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   335  		uint8 ffIndex,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   336  		uint16 did,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   337  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   338  		Dem_EvMemEventMemoryType *evMemLocation)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   339  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   340  	uint8 edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
	movh.a	a2,#@his(Dem_Cfg_EnvEventId2EnvData)
	lea	a2,[a2]@los(Dem_Cfg_EnvEventId2EnvData)
.L2030:
	addsc.a	a15,a2,d4,#1
.L2031:
	ld.bu	d15,[a15]
.L1442:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   341  	uint8 ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
	ld.bu	d0,[a15]1
.L1189:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
	movh.a	a5,#@his(Dem_Cfg_EnvFreezeFrame)
.L1439:
	lea	a5,[a5]@los(Dem_Cfg_EnvFreezeFrame)
.L2032:
	addsc.a	a15,a5,d0,#2
.L2033:
	ld.hu	d1,[a15]2
.L2034:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;      (inlined)
	j	.L267

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }      (inlined)
.L267:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   342      Dem_InternalEnvData internalEnvData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   343  	const uint8* readpos = src + Dem_EnvEDGetRawByteSize (edId) + (Dem_EnvFFGetRawByteSize (ffId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   344  			* ffIndex);
	mul	d1,d5
.L1191:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     3  #ifndef DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     4  #define DEM_ENVEXTENDEDDATA_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     5  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     6  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     7  #include "Dem_EnvExtendedDataRec.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     8  #include "Dem_Cfg_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    10  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    14  	uint16 extDataRecIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    16  } Dem_EnvExtData;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    19  extern const uint8 Dem_Cfg_EnvExtData2ExtDataRec[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    20  extern const Dem_EnvExtData Dem_Cfg_EnvExtData[DEM_CFG_ENVEXTDATA_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    24  DEM_INLINE void Dem_EnvEDCapture(uint8 extDataId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    25  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    26  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    27  	const uint8* end = &buffer[size];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    28  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    29  	for (i = Dem_Cfg_EnvExtData[extDataId - 1].extDataRecIndex; i < Dem_Cfg_EnvExtData[extDataId].extDataRecIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    30  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    31  		Dem_EnvEDRCapture (Dem_Cfg_EnvExtData2ExtDataRec[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    32  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    34  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    35  	DEM_MEMSET(&buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    37  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    38  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    39  DEM_INLINE uint16 Dem_EnvEDGetRawByteSize(uint8 extDataId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    40  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;
	movh.a	a15,#@his(Dem_Cfg_EnvExtData)
	lea	a15,[a15]@los(Dem_Cfg_EnvExtData)
.L2035:
	addsc.a	a15,a15,d15,#2
.L2036:
	ld.hu	d15,[a15]2
.L1443:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    41  	return Dem_Cfg_EnvExtData[extDataId].rawByteSize;      (inlined)
	j	.L268

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvExtendedData.h	    42  }      (inlined)
.L268:
	addsc.a	a15,a6,d15,#0
.L2037:
	addsc.a	a4,a15,d1,#0
.L1438:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   345      internalEnvData.eventId = EventId;
	st.h	[a10],d4
.L2038:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   346  #if (DEM_CFG_DEBUGDATA != DEM_CFG_DEBUGDATA_OFF)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   347      internalEnvData.debug0 = 0;
	mov	d15,#0
.L2039:
	st.w	[a10]4,d15
.L2040:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   348      internalEnvData.debug1 = 0;
	mov	d15,#0
.L2041:
	st.w	[a10]8,d15
.L2042:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   349  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   350      internalEnvData.evMemLocation = evMemLocation;
	st.a	[a10]12,a7
.L1193:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     4  #ifndef DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     5  #define DEM_ENVMAIN_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     8  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	     9  #include "Dem_Cfg_EnvMain.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    10  #include "Dem_Cfg_DistMem.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    11  #include "Dem_EnvExtendedData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    12  #include "Dem_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    13  #include "Dem_EnvFFRecNumeration.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    15  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    16  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    17  /* Dem-internal functions for capture, copy and update */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    18  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    19  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    20  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    21  	uint8 extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    22  	uint8 freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    23  } Dem_EnvDataMap;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    24  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    25  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    26  extern const Dem_EnvDataMap Dem_Cfg_EnvEventId2EnvData[DEM_EVENTID_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    27  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    28  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    30  DEM_INLINE Dem_boolean_least Dem_EnvHasExtendedData(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    31  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    32  	return (Dem_Cfg_EnvEventId2EnvData[EventId].extDataId != 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    33  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    34  DEM_INLINE Dem_boolean_least Dem_EnvHasFreezeFrame(Dem_EventIdType EventId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    35  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);
	addsc.a	a15,a2,d4,#1
.L2043:
	ld.bu	d15,[a15]1
.L2044:
	ne	d15,d15,#0
.L2045:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    36  	return (Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId != 0);      (inlined)
	j	.L269

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.h	    37  }      (inlined)
.L269:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   351  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   352  	if (Dem_EnvHasFreezeFrame(EventId))
	jeq	d15,#0,.L270
.L2046:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   353  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   354  		return Dem_EnvFFRetrieveDid (ffId, dest, destSize, did, readpos, &internalEnvData);
	mov	d8,d6
.L2047:
	st.a	[a10]16,a4
.L1196:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   101  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   103  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   104  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   105  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   106  DEM_INLINE Dem_boolean_least Dem_EnvFFRetrieveDid(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   107  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   108  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   109  		uint16 did,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   110  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   111  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   112  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   113  	uint8* writepos = dest;
	ld.a	a15,[a10]40
.L1444:
	st.a	[a10]20,a15
.L2048:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   114  	uint8* end = dest + *bufsize;
	ld.a	a2,[a10]44
.L1446:
	ld.hu	d15,[a2]0
.L2049:
	addsc.a	a15,a15,d15,#0
.L1445:
	st.a	[a10]32,a15
.L1448:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   115  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   116  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
	addsc.a	a15,a5,d0,#2
.L1447:
	st.a	[a10]36,a15
.L2050:
	ld.hu	d9,[a15]-4
.L1449:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	j	.L271
.L272:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   118  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   119  		if (Dem_EnvDIDRetrieveSpecificDid (Dem_Cfg_EnvFreezeFrame2Did[i], did, &writepos, end, &src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvFreezeFrame2Did)
	lea	a15,[a15]@los(Dem_Cfg_EnvFreezeFrame2Did)
.L2051:
	addsc.a	a15,a15,d9,#0
	ld.bu	d15,[a15]
.L2052:
	lea	a12,[a10]20
.L2053:
	lea	a13,[a10]16
.L1197:
	lea	a15,[a10]0
.L1212:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     2  #ifndef DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     3  #define DEM_ENVFREEZEFRAME_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     7  #include "Dem_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     8  #include "Dem_Cfg_EnvFreezeFrame.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	     9  #include "Dem_Cfg_Main.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    11  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    12  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    13  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    14  	uint16 didIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    15  	uint16 rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    16  } Dem_EnvFreezeFrame;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    17  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    18  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    19  extern const uint8 Dem_Cfg_EnvFreezeFrame2Did[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    20  DEM_ARRAY_DECLARE_CONST(Dem_EnvFreezeFrame, Dem_Cfg_EnvFreezeFrame, DEM_CFG_ENVFREEZEFRAME_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    21  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    22  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    23  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    24  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    25  DEM_INLINE void Dem_EnvFFCapture(uint8 freezeFrameId, uint8* buffer, uint16 size, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    26  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    27  	uint32 i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    28  	uint8* end = buffer + size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    29  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    30  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    31  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    32  		Dem_EnvDIDCapture (Dem_Cfg_EnvFreezeFrame2Did[i], &buffer, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    33  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    34  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    35  #if (DEM_CFG_BUILDTARGET==DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    36  	DEM_MEMSET(buffer,0xFF,end-buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    37  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    38  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    40  DEM_INLINE uint16 Dem_EnvFFGetRawByteSize(uint8 freezeFrameId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    41  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    42  	return Dem_Cfg_EnvFreezeFrame[freezeFrameId].rawByteSize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    43  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    45  DEM_INLINE Dem_ReturnGetFreezeFrameDataByDTCType Dem_EnvFFRetrieve(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    46  		uint8 RecNum,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    47  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    48  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    49  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    50  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    51  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    52  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    53  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    54  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    56  	if (*bufsize < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    58  		return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    59  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    60  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    61  	*writepos = RecNum;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    62  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    63  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    64  	*writepos = (uint8)(Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex - Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    65  	writepos++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    66  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    67  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    68  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    69  		if (!Dem_EnvDIDRetrieve (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    70  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    71  			return DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    72  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    73  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    74  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    75  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    76  	return DEM_GET_FFDATABYDTC_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    77  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    78  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    79  DEM_INLINE Dem_ReturnGetSizeOfFreezeFrameByDTCType Dem_EnvFFGetSize(uint8 freezeFrameId, uint16* size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    80  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    81  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    82  	*size = 2;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    83  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    84  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    85  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    86  		*size += (Dem_EnvDIDGetSize (Dem_Cfg_EnvFreezeFrame2Did[i]));
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    87  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    88  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    89  	return DEM_GET_SIZEOFFF_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    90  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    91  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    92  DEM_INLINE void Dem_EnvFFRetrieveRaw(uint8 freezeFrameId, uint8* dest, uint16* bufsize, const uint8* src, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    93  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    94  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    95  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    96  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    97  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    98  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	    99  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   100  		(void)Dem_EnvDIDRetrieveRaw (Dem_Cfg_EnvFreezeFrame2Did[i], &writepos, end, &src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   101  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   103  	*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   104  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   105  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   106  DEM_INLINE Dem_boolean_least Dem_EnvFFRetrieveDid(uint8 freezeFrameId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   107  		uint8* dest,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   108  		uint16* bufsize,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   109  		uint16 did,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   110  		const uint8* src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   111  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   112  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   113  	uint8* writepos = dest;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   114  	uint8* end = dest + *bufsize;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   115  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   116  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   118  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   119  		if (Dem_EnvDIDRetrieveSpecificDid (Dem_Cfg_EnvFreezeFrame2Did[i], did, &writepos, end, &src, internalEnvData))
	st.a	[a10]28,a15
.L1217:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     2  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     3  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     4  #ifndef DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     5  #define DEM_ENVDID_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     6  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     7  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     8  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	     9  #include "Dem_Array.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    10  #include "Dem_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    11  #include "Dem_Cfg_EnvDid.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    12  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    14  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    15  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    16  	uint16 dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    17  	uint16 identifier;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    18  } Dem_EnvDid;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    19  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    21  extern const uint8 Dem_Cfg_EnvDid2DataElement[];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    22  DEM_ARRAY_DECLARE_CONST(Dem_EnvDid, Dem_Cfg_EnvDid, DEM_CFG_ENVDID_ARRAYLENGTH);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    23  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    24  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    25  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    26  DEM_INLINE void Dem_EnvDIDCapture(uint8 didId, uint8** start, const uint8* end, const Dem_InternalEnvData *internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    27  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    28  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    29  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    30  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    31  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    32  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    33  		Dem_EnvDACapture(Dem_Cfg_EnvDid2DataElement[i], start, end, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    34  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    35  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    36  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    37  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    38  /* copies all dataelements of DID from input stream to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    40  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    41  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveRaw(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    42  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    43  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    44  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    45  	for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    46  		 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    47  		 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    48  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    49  		if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    50  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    51  			return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    52  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    53  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    54  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    55  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    56  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    57  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    58  /* MR12 RULE 8.13 VIOLATION: parameter src not made const, as it is modified in subfunction */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    59  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieve(uint8 didId, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    60  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    61  	if ((end - *start) < 2)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    62  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    63  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    64  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    65  	**start = (uint8) ((Dem_Cfg_EnvDid[didId].identifier / 256u) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    66  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    67  	**start = (uint8)((Dem_Cfg_EnvDid[didId].identifier) & 0xFFu);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    68  	(*start)++;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    69  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    70  	return Dem_EnvDIDRetrieveRaw(didId, start, end, src, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    71  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    72  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    73  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    74  /* if identifier matches selected DID (didId), the data of the DID didId is returned. Otherwise
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    75     the DID data is skipped in the inputstream (readpointer is increased by current DID size). */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    76  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    77  DEM_INLINE Dem_boolean_least Dem_EnvDIDRetrieveSpecificDid (uint8 didId, uint16 identifier, uint8** start, const uint8* end, const uint8** src, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    78  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    79  	uint16_least i;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    80  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    81  	if (Dem_Cfg_EnvDid[didId].identifier == identifier)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    82  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    83  		for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
	movh.a	a15,#@his(Dem_Cfg_EnvDid)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid)
	addsc.a	a15,a15,d15,#2
	st.a	[a10]24,a15
.L2054:
	ld.hu	d10,[a15]-4
.L1450:
	ld.hu	d0,[a15]2
.L2055:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    81  	if (Dem_Cfg_EnvDid[didId].identifier == identifier)      (inlined)
	jne	d0,d8,.L273
.L2056:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    84  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L274

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    85  			 i++)      (inlined)
.L275:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    84  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    85  			 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    86  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    87  			if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L2057:
	addsc.a	a15,a15,d10,#0
	ld.bu	d0,[a15]
.L1232:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
	mov	d2,#1
.L1451:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
	mul	d15,d0,#12
.L2058:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L2059:
	addsc.a	a15,a15,d15,#0
.L2060:
	lea	a14,[a15]8
	ld.bu	d4,[a14]
.L2061:
	ld.a	a4,[a12]
	ld.w	d0,[a12]
.L2062:
	add	d0,d4
.L2063:
	ld.a	a2,[a10]32
	mov.d	d15,a2
.L2064:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
	jge.u	d15,d0,.L276
.L2065:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;      (inlined)
	j	.L277

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)      (inlined)
.L276:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
	ld.bu	d15,[a15]9
.L2066:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
	jeq	d15,#0,.L278
.L2067:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
	ld.a	a2,[a15]
.L2068:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
	jz.a	a2,.L279
.L2069:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
	calli	a2

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)      (inlined)
.L279:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
	ld.a	a15,[a15]4
.L2070:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
	jz.a	a15,.L280
.L2071:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
	ld.a	a4,[a12]
.L2072:
	ld.a	a5,[a10]28
	calli	a15

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)      (inlined)
.L280:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
	jeq	d2,#0,.L281
.L2073:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.bu	d5,[a14]
.L1239:
	ld.a	a4,[a12]
	mov	d4,#255
.L1243:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    26  LOCAL_INLINE void rba_DiagLib_MemUtils_MemSet(uint8* xDest_pv, sint32 xPattern_u32, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    28      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemSet converts argument 1 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    29      (void) rba_BswSrv_MemSet(xDest_pv, xPattern_u32, numBytes_s32);
	call	rba_BswSrv_MemSet
.L1240:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#162
	mov	d7,#48
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)      (inlined)
.L281:
	j	.L282

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)      (inlined)
.L278:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
	ld.a	a5,[a13]
.L1247:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     3  #ifndef RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     4  #define RBA_DIAGLIB_MEMUTILS_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     7  #include "rba_BswSrv.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	     9  #define RBA_DIAGLIB_MEMCPY(xDest_p, xSrc_pc, numBytes_u32)                  rba_DiagLib_MemUtils_MemCpy((uint8*)(xDest_p),(const uint8*)(xSrc_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    10  #define RBA_DIAGLIB_MEMSET(xDest_p, xPattern_u32, numBytes_u32)             rba_DiagLib_MemUtils_MemSet((uint8*)(xDest_p),(sint32)(xPattern_u32),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    11  #define RBA_DIAGLIB_MEMCMP(xSrc1_pc, xSrc2_pc, numBytes_u32)                rba_DiagLib_MemUtils_MemCmp((const uint8*)(xSrc1_pc),(const uint8*)(xSrc2_pc),(uint32)(numBytes_u32))
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    12  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    13  #define RBA_DIAGLIB_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    14  #include "rba_DiagLib_MemMap.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    15  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    16  /**
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    17   * Utility functions for MEMCPY, MEMSET, MEMCOMP.
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    18   */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    19  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    20  LOCAL_INLINE void rba_DiagLib_MemUtils_MemCpy(uint8* xDest_p, const uint8* xSrc_pc, uint32 numBytes_s32)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    21  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    22      /* MR12 DIR 1.1 VIOLATION: Function rba_BswSrv_MemCopy converts argument 1 and 2 to pointer to void, function has no side effects */
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_MemUtils.h	    23      (void) rba_BswSrv_MemCopy(xDest_p, xSrc_pc, numBytes_s32);
	call	rba_BswSrv_MemCopy

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else      (inlined)
.L282:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a12]
.L2074:
	ld.bu	d15,[a14]
.L2075:
	addsc.a	a15,a15,d15,#0
	st.a	[a12],a15
.L2076:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
	ld.a	a15,[a13]
.L2077:
	ld.bu	d15,[a14]
.L2078:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L2079:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;      (inlined)
	j	.L283

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }      (inlined)
.L283:
.L277:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    87  			if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
	jne	d15,#0,.L284
.L2080:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    88  			{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    89  				return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    89  				return FALSE;      (inlined)
	j	.L285

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    87  			if (!Dem_EnvDARetrieve(Dem_Cfg_EnvDid2DataElement[i], start, end, src, internalEnvData))      (inlined)
.L284:
	add	d10,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    84  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L274:
	ld.a	a15,[a10]24
	ld.hu	d15,[a15]0
.L2081:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    84  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d10,d15,.L275
.L2082:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    90  			}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    91  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    92  		return TRUE;
	mov	d15,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    92  		return TRUE;      (inlined)
	j	.L286

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    81  	if (Dem_Cfg_EnvDid[didId].identifier == identifier)      (inlined)
.L273:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    97  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	j	.L287

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    98  			 i++)      (inlined)
.L288:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    93  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    94  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    95  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    96  		for (i = Dem_Cfg_EnvDid[didId - 1].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    97  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    98  			 i++)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    99  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   100  			*src += Dem_EnvDAGetSizeOf(Dem_Cfg_EnvDid2DataElement[i]);
	movh.a	a15,#@his(Dem_Cfg_EnvDid2DataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDid2DataElement)
.L2083:
	addsc.a	a15,a15,d10,#0
	ld.bu	d15,[a15]
.L1251:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     1  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     2  #ifndef DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     3  #define DEM_ENVDATAELEMENT_H
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     4  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     5  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     6  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     7  #include "Dem_Cfg_EnvDataElement.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     8  #include "Dem_InternalEnvData.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	     9  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    10  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    11  typedef Std_ReturnType (*Dem_ReadExternalDataElementFnc)(uint8* Buffer);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    12  typedef Std_ReturnType (*Dem_ReadInternalDataElementFnc)(uint8* Buffer, const Dem_InternalEnvData* internalData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    13  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    14  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    15  typedef struct
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    16  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    17  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    18      Dem_ReadExternalDataElementFnc ReadExternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    19  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    20  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    21      Dem_ReadInternalDataElementFnc ReadInternalFnc;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    22  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    23      uint8 Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    24  	boolean captureOnRetrieve;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    25  } Dem_EnvDataElement;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    26  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    27  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    28  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    29  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    30  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    31  #define DEM_ENV_DATAELEMENTS_EXTCS_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    32  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    33  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    34  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    35  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)   (VAL),
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    36  #else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    37  #define DEM_ENV_DATAELEMENTS_INTERN_INIT(VAL)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    38  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    39  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    40  #define DEM_START_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    41  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    42  extern const Dem_EnvDataElement Dem_Cfg_EnvDataElement[DEM_CFG_ENV_DATAELEMENTS_ARRAYLENGTH];
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    43  #define DEM_STOP_SEC_ROM_CONST
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    44  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    45  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    46  DEM_INLINE void Dem_EnvInsertPadding(uint8* const* start, uint8 size)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    47  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    48  	DEM_MEMSET(*start,0xFF,size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    49  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    50  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    51  DEM_INLINE void Dem_EnvDACapture(uint8 dataElementId, uint8** start, const uint8* end, const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    52  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    53  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    54  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end,DEM_DET_APIID_ENVDACAPTURE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    55  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    56  	if (!Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    57  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    58  		#if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    59  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    60  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    61  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    62  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    63  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    64  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    65  		#if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    66  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    67  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    68  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    69  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    70  		#endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    71  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    72  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    73  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    74  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    75  			DEM_DET(DEM_DET_APIID_ENVDACAPTURE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    76  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    77  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    78  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    79  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    80  		Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    81  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    82  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    83  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    84  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    85  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    86  DEM_INLINE void Dem_EnvDACopy(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    87  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    88  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDAUPDATE, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    89  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    90  	DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    91  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    92  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    93  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    94  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    95  DEM_INLINE void Dem_EnvDASkip(uint8 dataElementId, uint8** start, const uint8* end, const uint8** src)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    96  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    97  	DEM_ASSERT((*start + Dem_Cfg_EnvDataElement[dataElementId].Size) <= end, DEM_DET_APIID_ENVDASKIP, 0);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    98  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	    99  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   100  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   101  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   102  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   103  /* copies DataElement data from input stream to output stream. if capture on retrieve
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   104   is configured, the data is captured and directly written to output stream */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   105  DEM_INLINE Dem_boolean_least Dem_EnvDARetrieve(uint8 dataElementId,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   106  		uint8** start,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   107  		const uint8* end,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   108  		const uint8** src,
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   109  		const Dem_InternalEnvData* internalEnvData)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   110  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   111  	Std_ReturnType result = E_NOT_OK;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   112  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   113  	if ((*start + Dem_Cfg_EnvDataElement[dataElementId].Size )> end)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   114  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   115  		return FALSE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   116  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   117  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   118  	if (Dem_Cfg_EnvDataElement[dataElementId].captureOnRetrieve)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   119  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   120  #if (DEM_CFG_ENV_DATAELEMENTS_EXTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   121  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   122  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   123  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadExternalFnc)(*start);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   124  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   125  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   126  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   127  #if (DEM_CFG_ENV_DATAELEMENTS_INTERN_AVAILABILITY == STD_ON)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   128  		if (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc != NULL_PTR)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   129  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   130  			result = (Dem_Cfg_EnvDataElement[dataElementId].ReadInternalFnc)(*start, internalEnvData);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   131  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   132  #endif
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   133  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   134  		if (result != E_OK)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   135  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   136  			Dem_EnvInsertPadding (start, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   137  			DEM_DET(DEM_DET_APIID_ENVDARETRIEVE, DEM_E_NODATAAVAILABLE);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   138  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   139  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   140  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   141  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   142  	    DEM_MEMCPY(*start, *src, Dem_Cfg_EnvDataElement[dataElementId].Size);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   143  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   144  	*start += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   145  	*src += Dem_Cfg_EnvDataElement[dataElementId].Size;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   146  	return TRUE;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   147  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   148  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   149  DEM_INLINE uint8 Dem_EnvDAGetSizeOf(uint8 dataElementId)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   150  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;
	mul	d15,d15,#12
.L2084:
	movh.a	a15,#@his(Dem_Cfg_EnvDataElement)
	lea	a15,[a15]@los(Dem_Cfg_EnvDataElement)
.L2085:
	addsc.a	a15,a15,d15,#0
.L2086:
	ld.bu	d15,[a15]8
.L2087:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   151  	return Dem_Cfg_EnvDataElement[dataElementId].Size;      (inlined)
	j	.L289

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDataElement.h	   152  }      (inlined)
.L289:
	ld.a	a15,[a13]
.L2088:
	addsc.a	a15,a15,d15,#0
	st.a	[a13],a15
.L2089:
	add	d10,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    97  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
.L287:
	ld.a	a15,[a10]24
	ld.hu	d15,[a15]0
.L2090:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	    97  			 i < Dem_Cfg_EnvDid[didId].dataElementIndex;      (inlined)
	jlt.u	d10,d15,.L288
.L2091:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   101  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   102  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   103  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   104  	return FALSE;
	mov	d15,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   104  	return FALSE;      (inlined)
	j	.L290

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvDid.h	   105  }      (inlined)
.L290:
.L286:
.L285:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   119  		if (Dem_EnvDIDRetrieveSpecificDid (Dem_Cfg_EnvFreezeFrame2Did[i], did, &writepos, end, &src, internalEnvData))      (inlined)
	jeq	d15,#0,.L291
.L2092:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   120  		{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   121  			*bufsize = (uint16)(writepos - dest); /* current writing position - starting writing position */
	ld.a	a2,[a10]20
.L2093:
	ld.a	a15,[a10]40
.L1452:
	sub.a	a15,a2,a15
.L1453:
	mov.d	d15,a15
.L2094:
	ld.a	a15,[a10]44
.L1454:
	st.h	[a15],d15
.L2095:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   122  			return TRUE;
	mov	d2,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   122  			return TRUE;      (inlined)
	j	.L292

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   119  		if (Dem_EnvDIDRetrieveSpecificDid (Dem_Cfg_EnvFreezeFrame2Did[i], did, &writepos, end, &src, internalEnvData))      (inlined)
.L291:
	add	d9,#1

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
.L271:
	ld.a	a15,[a10]36
	ld.hu	d15,[a15]0
.L2096:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   117  	for (i = Dem_Cfg_EnvFreezeFrame[freezeFrameId - 1].didIndex; i < Dem_Cfg_EnvFreezeFrame[freezeFrameId].didIndex; i++)      (inlined)
	jlt.u	d9,d15,.L272
.L2097:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   123  		}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   124  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   125  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   126  	*bufsize = 0;
	mov	d15,#0
.L2098:
	ld.a	a15,[a10]44
.L1455:
	st.h	[a15],d15
.L2099:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   127  	return FALSE;
	mov	d2,#0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   127  	return FALSE;      (inlined)
	j	.L293

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvFreezeFrame.h	   128  }      (inlined)
.L293:
.L292:
	j	.L294
.L270:

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   355  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   356  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   357  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   358  		return FALSE;
	mov	d2,#0
.L2100:
	j	.L295

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   359  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   360  }
.L295:
.L294:
	ret
.L1177:
	
__Dem_EnvRetrieveRawDid_function_end:
	.size	Dem_EnvRetrieveRawDid,__Dem_EnvRetrieveRawDid_function_end-Dem_EnvRetrieveRawDid
.L397:
	; End of function
	
	.sdecl	'.rodata.Dem_EnvMain.Dem_Cfg_EnvEventId2EnvData',data,rom,cluster('Dem_Cfg_EnvEventId2EnvData')
	.sect	'.rodata.Dem_EnvMain.Dem_Cfg_EnvEventId2EnvData'
	.global	Dem_Cfg_EnvEventId2EnvData
	.align	2
Dem_Cfg_EnvEventId2EnvData:	.type	object
	.size	Dem_Cfg_EnvEventId2EnvData,12
	.space	2
	.byte	1,1,1,1
	.byte	1,1,1,1
	.space	2
	.calls	'Dem_EnvCaptureED','Det_ReportError'
	.calls	'Dem_EnvCaptureED','__INDIRECT__'
	.calls	'Dem_EnvCaptureED','rba_BswSrv_MemSet'
	.calls	'Dem_EnvCaptureFF','Det_ReportError'
	.calls	'Dem_EnvCaptureFF','__INDIRECT__'
	.calls	'Dem_EnvCaptureFF','rba_BswSrv_MemSet'
	.calls	'Dem_EnvCopyRawFF','Det_ReportError'
	.calls	'Dem_EnvCopyRawFF','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvCopyRawED','Det_ReportError'
	.calls	'Dem_EnvCopyRawED','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvRetrieveEDR','Det_ReportError'
	.calls	'Dem_EnvRetrieveEDR','__INDIRECT__'
	.calls	'Dem_EnvRetrieveEDR','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveEDR','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvGetSizeOfEDR','Det_ReportError'
	.calls	'Dem_EnvGetSizeOfED','Det_ReportError'
	.calls	'Dem_EnvRetrieveFF','Det_ReportError'
	.calls	'Dem_EnvRetrieveFF','__INDIRECT__'
	.calls	'Dem_EnvRetrieveFF','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveFF','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvRetrieveRawED','__INDIRECT__'
	.calls	'Dem_EnvRetrieveRawED','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveRawED','Det_ReportError'
	.calls	'Dem_EnvRetrieveRawED','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvRetrieveRawEDR','__INDIRECT__'
	.calls	'Dem_EnvRetrieveRawEDR','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveRawEDR','Det_ReportError'
	.calls	'Dem_EnvRetrieveRawEDR','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvRetrieveRawFF','__INDIRECT__'
	.calls	'Dem_EnvRetrieveRawFF','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveRawFF','Det_ReportError'
	.calls	'Dem_EnvRetrieveRawFF','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvRetrieveRawDid','__INDIRECT__'
	.calls	'Dem_EnvRetrieveRawDid','rba_BswSrv_MemSet'
	.calls	'Dem_EnvRetrieveRawDid','Det_ReportError'
	.calls	'Dem_EnvRetrieveRawDid','rba_BswSrv_MemCopy'
	.calls	'Dem_EnvCaptureED','',32
	.calls	'Dem_EnvCaptureFF','',32
	.calls	'Dem_EnvCopyRawFF','',0
	.calls	'Dem_EnvCopyRawED','',24
	.calls	'Dem_EnvIsEDRNumberValid','',0
	.calls	'Dem_EnvRetrieveEDR','',48
	.calls	'Dem_EnvGetSizeOfEDR','',0
	.calls	'Dem_EnvGetSizeOfED','',0
	.calls	'Dem_EnvRetrieveFF','',56
	.calls	'Dem_EnvGetSizeOfFF','',0
	.calls	'Dem_EnvRetrieveRawED','',48
	.calls	'Dem_EnvRetrieveRawEDR','',48
	.calls	'Dem_EnvRetrieveRawFF','',56
	.extern	Det_ReportError
	.extern	rba_BswSrv_MemCopy
	.extern	rba_BswSrv_MemSet
	.extern	Dem_Cfg_EnvDataElement
	.extern	Dem_Cfg_EnvExtData2DataElement
	.extern	Dem_Cfg_EnvExtDataRec
	.extern	Dem_Cfg_EnvExtData2ExtDataRec
	.extern	Dem_Cfg_EnvExtData
	.extern	Dem_Cfg_EnvDid2DataElement
	.extern	Dem_Cfg_EnvDid
	.extern	Dem_Cfg_EnvFreezeFrame2Did
	.extern	Dem_Cfg_EnvFreezeFrame
	.extern	__INDIRECT__
	.calls	'Dem_EnvRetrieveRawDid','',48
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L325:
	.word	30034
	.half	3
	.word	.L326
	.byte	4
.L324:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L327
.L406:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'rba_BswSrv_ByteOrderSwap32',0,3,1,125,21
	.word	141
	.byte	1,1,4
	.byte	'Input_u32',0,1,125,55
	.word	141
	.byte	5,0
.L401:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.byte	'rba_BswSrv_ByteOrderSwap16',0,3,1,150,1,21
	.word	215
	.byte	1,1,4
	.byte	'Input_u16',0,1,150,1,55
	.word	215
	.byte	5,0
.L411:
	.byte	2
	.byte	'unsigned char',0,1,8
.L403:
	.byte	6
	.word	297
	.byte	7
	.word	297
.L441:
	.byte	6
	.word	319
.L585:
	.byte	8
	.byte	'rba_DiagLib_MemUtils_MemCpy',0,3,2,20,19,1,1
.L586:
	.byte	4
	.byte	'xDest_p',0,2,20,54
	.word	314
.L588:
	.byte	4
	.byte	'xSrc_pc',0,2,20,76
	.word	324
.L590:
	.byte	4
	.byte	'numBytes_s32',0,2,20,92
	.word	141
.L592:
	.byte	5,0,2
	.byte	'int',0,4,5
.L477:
	.byte	8
	.byte	'rba_DiagLib_MemUtils_MemSet',0,3,2,26,19,1,1
.L479:
	.byte	4
	.byte	'xDest_pv',0,2,26,54
	.word	314
.L481:
	.byte	4
	.byte	'xPattern_u32',0,2,26,71
	.word	419
.L483:
	.byte	4
	.byte	'numBytes_s32',0,2,26,92
	.word	141
.L485:
	.byte	5,0,3
	.byte	'Dem_LibGetParamUI8',0,3,3,36,18
	.word	297
	.byte	1,1,4
	.byte	'parameter',0,3,36,44
	.word	297
	.byte	5,0,3
	.byte	'Dem_LibGetParamBool',0,3,3,41,20
	.word	297
	.byte	1,1,4
	.byte	'parameter',0,3,41,49
	.word	297
	.byte	5,0
.L415:
	.byte	3
	.byte	'Dem_isEventIdValid',0,3,4,20,30
	.word	297
	.byte	1,1
.L417:
	.byte	4
	.byte	'checkID',0,4,20,65
	.word	215
.L419:
	.byte	5,0,3
	.byte	'Dem_isDtcIdValid',0,3,4,152,1,30
	.word	297
	.byte	1,1,4
	.byte	'id',0,4,152,1,62
	.word	215
	.byte	5,0,3
	.byte	'Dem_DtcIdFromEventId',0,3,4,158,1,27
	.word	215
	.byte	1,1,4
	.byte	'id',0,4,158,1,65
	.word	215
	.byte	5,0,3
	.byte	'Dem_DtcIdGetEventId',0,3,4,166,1,28
	.word	215
	.byte	1,1,4
	.byte	'dtcid',0,4,166,1,63
	.word	215
	.byte	5,0,3
	.byte	'Dem_DtcGroupIdIsValid',0,3,4,252,1,30
	.word	297
	.byte	1,1,4
	.byte	'dtcGroupID',0,4,252,1,72
	.word	297
	.byte	5,0,7
	.word	314
	.byte	6
	.word	866
.L469:
	.byte	8
	.byte	'Dem_EnvInsertPadding',0,3,5,46,17,1,1
.L472:
	.byte	4
	.byte	'start',0,5,46,52
	.word	871
.L474:
	.byte	4
	.byte	'size',0,5,46,65
	.word	297
.L476:
	.byte	9,5,0,0,6
	.word	314
	.byte	10,7,133,1,3,4,11
	.byte	'Status',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'EventId',0
	.word	215
	.byte	2,2,35,2,0,12,7,131,1,9,4,11
	.byte	'Data',0
	.word	940
	.byte	4,2,35,0,0,13,7
	.word	297
	.byte	14,6,0,10,7,144,1,9,20,11
	.byte	'Hdr',0
	.word	980
	.byte	4,2,35,0,11
	.byte	'Data',0
	.word	1001
	.byte	7,2,35,4,11
	.byte	'FailureCounter',0
	.word	297
	.byte	1,2,35,11,11
	.byte	'FreezeFrameCounter',0
	.word	297
	.byte	1,2,35,12,11
	.byte	'AgingCounter',0
	.word	297
	.byte	1,2,35,13,11
	.byte	'OccurrenceCounter',0
	.word	297
	.byte	1,2,35,14,11
	.byte	'Trigger',0
	.word	297
	.byte	1,2,35,15,11
	.byte	'TimeId',0
	.word	141
	.byte	4,2,35,16,0
.L749:
	.byte	6
	.word	1010
.L413:
	.byte	10,6,13,9,16,11
	.byte	'eventId',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'debug0',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'debug1',0
	.word	141
	.byte	4,2,35,8,11
	.byte	'evMemLocation',0
	.word	1178
	.byte	4,2,35,12,0,7
	.word	1183
	.byte	6
	.word	1261
.L456:
	.byte	8
	.byte	'Dem_EnvDACapture',0,3,5,51,17,1,1
.L459:
	.byte	4
	.byte	'dataElementId',0,5,51,40
	.word	297
.L461:
	.byte	4
	.byte	'start',0,5,51,63
	.word	935
.L463:
	.byte	4
	.byte	'end',0,5,51,83
	.word	324
.L465:
	.byte	4
	.byte	'internalEnvData',0,5,51,115
	.word	1266
.L467:
	.byte	9,5,5,0,0,6
	.word	324
.L688:
	.byte	8
	.byte	'Dem_EnvDACopy',0,3,5,86,17,1,1
.L690:
	.byte	4
	.byte	'dataElementId',0,5,86,37
	.word	297
.L692:
	.byte	4
	.byte	'start',0,5,86,60
	.word	935
.L694:
	.byte	4
	.byte	'end',0,5,86,80
	.word	324
.L696:
	.byte	4
	.byte	'src',0,5,86,99
	.word	1372
.L698:
	.byte	9,5,0,0
.L706:
	.byte	8
	.byte	'Dem_EnvDASkip',0,3,5,95,17,1,1
.L708:
	.byte	4
	.byte	'dataElementId',0,5,95,37
	.word	297
.L710:
	.byte	4
	.byte	'start',0,5,95,60
	.word	935
.L712:
	.byte	4
	.byte	'end',0,5,95,80
	.word	324
.L714:
	.byte	4
	.byte	'src',0,5,95,99
	.word	1372
.L716:
	.byte	5,0
.L791:
	.byte	3
	.byte	'Dem_EnvDARetrieve',0,3,5,105,30
	.word	297
	.byte	1,1
.L793:
	.byte	4
	.byte	'dataElementId',0,5,105,54
	.word	297
.L795:
	.byte	4
	.byte	'start',0,5,106,11
	.word	935
.L797:
	.byte	4
	.byte	'end',0,5,107,16
	.word	324
.L799:
	.byte	4
	.byte	'src',0,5,108,17
	.word	1372
.L801:
	.byte	4
	.byte	'internalEnvData',0,5,109,30
	.word	1266
.L803:
	.byte	9,5,5,0,0
.L834:
	.byte	3
	.byte	'Dem_EnvDAGetSizeOf',0,3,5,149,1,18
	.word	297
	.byte	1,1
.L836:
	.byte	4
	.byte	'dataElementId',0,5,149,1,43
	.word	297
.L838:
	.byte	5,0
.L722:
	.byte	6
	.word	297
.L680:
	.byte	8
	.byte	'Dem_EnvSetTrigger',0,3,8,17,17,1,1
.L683:
	.byte	4
	.byte	'trigger',0,8,17,52
	.word	1719
.L685:
	.byte	4
	.byte	'trigger2set',0,8,17,77
	.word	297
.L687:
	.byte	5,0
.L664:
	.byte	3
	.byte	'Dem_EnvIsAnyTriggerSet',0,3,8,22,30
	.word	297
	.byte	1,1
.L666:
	.byte	4
	.byte	'trigger2test',0,8,22,69
	.word	297
.L668:
	.byte	5,0
.L656:
	.byte	3
	.byte	'Dem_EnvIsTriggerSet',0,3,8,27,30
	.word	297
	.byte	1,1
.L659:
	.byte	4
	.byte	'trigger',0,8,27,66
	.word	297
.L661:
	.byte	4
	.byte	'trigger2test',0,8,27,91
	.word	297
.L663:
	.byte	9,5,0,0
.L672:
	.byte	3
	.byte	'Dem_GetSmallerTrigger',0,3,8,32,28
	.word	297
	.byte	1,1
.L673:
	.byte	4
	.byte	'trigger',0,8,32,66
	.word	297
.L675:
	.byte	5,0
.L735:
	.byte	3
	.byte	'Dem_EnvEDRGetRecordNumber',0,3,9,29,18
	.word	297
	.byte	1,1
.L737:
	.byte	4
	.byte	'extDataRecId',0,9,29,51
	.word	297
.L739:
	.byte	5,0
.L652:
	.byte	3
	.byte	'Dem_EnvEDRGetUpdate',0,3,9,34,20
	.word	297
	.byte	1,1
.L653:
	.byte	4
	.byte	'extDataRecId',0,9,34,47
	.word	297
.L655:
	.byte	5,0
.L648:
	.byte	3
	.byte	'Dem_EnvEDRGetRecordTrigger',0,3,9,40,28
	.word	297
	.byte	1,1
.L649:
	.byte	4
	.byte	'extDataRecId',0,9,40,62
	.word	297
.L651:
	.byte	5,0
.L443:
	.byte	8
	.byte	'Dem_EnvEDRCapture',0,3,9,45,17,1,1
.L446:
	.byte	4
	.byte	'extDataRecId',0,9,45,42
	.word	297
.L448:
	.byte	4
	.byte	'start',0,9,45,64
	.word	935
.L450:
	.byte	4
	.byte	'end',0,9,45,84
	.word	324
.L452:
	.byte	4
	.byte	'internalEnvData',0,9,45,116
	.word	1266
.L454:
	.byte	9,5,0,0,10,8,7,9,4,11
	.byte	'currentTrigger',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'storedTrigger',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'matchingTrigger',0
	.word	297
	.byte	1,2,35,2,0
.L598:
	.byte	6
	.word	2242
.L621:
	.byte	8
	.byte	'Dem_EnvEDRCopyRaw',0,3,9,59,17,1,1
.L624:
	.byte	4
	.byte	'extDataRecId',0,9,59,42
	.word	297
.L626:
	.byte	4
	.byte	'start',0,9,59,64
	.word	935
.L628:
	.byte	4
	.byte	'end',0,9,59,84
	.word	324
.L630:
	.byte	4
	.byte	'src',0,9,59,103
	.word	1372
.L632:
	.byte	4
	.byte	'triggerParam',0,9,59,133,1
	.word	2320
.L634:
	.byte	9,5,5,5,5,5,5,5,5,5,5,0,0,7
	.word	1372
.L777:
	.byte	3
	.byte	'Dem_EnvEDRRetrieve',0,3,9,103,30
	.word	297
	.byte	1,1
.L779:
	.byte	4
	.byte	'extDataRecId',0,9,103,56
	.word	297
.L781:
	.byte	4
	.byte	'start',0,9,103,78
	.word	935
.L783:
	.byte	4
	.byte	'end',0,9,103,98
	.word	324
.L785:
	.byte	4
	.byte	'src',0,9,103,123
	.word	2444
.L787:
	.byte	4
	.byte	'internalEnvData',0,9,103,155,1
	.word	1266
.L789:
	.byte	9,5,0,0
.L825:
	.byte	3
	.byte	'Dem_EnvEDRGetSize',0,3,9,119,19
	.word	215
	.byte	1,1
.L826:
	.byte	4
	.byte	'extDataRecId',0,9,119,44
	.word	297
.L828:
	.byte	9,5,0,0
.L817:
	.byte	8
	.byte	'Dem_EnvEDRSkipSrc',0,3,9,133,1,17,1,1
.L820:
	.byte	4
	.byte	'extDataRecId',0,9,133,1,42
	.word	297
.L822:
	.byte	4
	.byte	'src',0,9,133,1,70
	.word	1372
.L824:
	.byte	9,5,0,0
.L425:
	.byte	8
	.byte	'Dem_EnvEDCapture',0,3,10,24,17,1,1
.L428:
	.byte	4
	.byte	'extDataId',0,10,24,40
	.word	297
.L430:
	.byte	4
	.byte	'buffer',0,10,24,58
	.word	314
.L432:
	.byte	4
	.byte	'size',0,10,24,73
	.word	215
.L434:
	.byte	4
	.byte	'internalEnvData',0,10,24,106
	.word	1266
.L436:
	.byte	9,5,0,0
.L420:
	.byte	3
	.byte	'Dem_EnvEDGetRawByteSize',0,3,10,39,19
	.word	215
	.byte	1,1
.L422:
	.byte	4
	.byte	'extDataId',0,10,39,49
	.word	297
.L424:
	.byte	5,0
.L606:
	.byte	8
	.byte	'Dem_EnvEDCopyRaw',0,3,10,44,17,1,1
.L608:
	.byte	4
	.byte	'extDataId',0,10,44,40
	.word	297
.L610:
	.byte	4
	.byte	'dest',0,10,44,58
	.word	314
.L612:
	.byte	4
	.byte	'bufsize',0,10,44,71
	.word	215
.L614:
	.byte	4
	.byte	'src',0,10,44,93
	.word	324
.L616:
	.byte	4
	.byte	'triggerParam',0,10,44,123
	.word	2320
.L618:
	.byte	9,5,0,0
.L746:
	.byte	6
	.word	215
.L1002:
	.byte	3
	.byte	'Dem_EnvEDRetrieveExtendedData',0,3,10,55,53
	.word	297
	.byte	1,1
.L1005:
	.byte	4
	.byte	'extDataId',0,10,55,89
	.word	297
.L1007:
	.byte	4
	.byte	'dest',0,10,56,10
	.word	314
.L1009:
	.byte	4
	.byte	'bufsize',0,10,57,11
	.word	2947
.L1011:
	.byte	4
	.byte	'src',0,10,58,16
	.word	324
.L1013:
	.byte	4
	.byte	'internalEnvData',0,10,59,30
	.word	1266
.L1015:
	.byte	9,5,0,0
.L725:
	.byte	3
	.byte	'Dem_EnvEDIsRecordNumberValid',0,3,10,77,30
	.word	297
	.byte	1,1
.L727:
	.byte	4
	.byte	'extDataId',0,10,77,65
	.word	297
.L729:
	.byte	4
	.byte	'RecordNumber',0,10,77,82
	.word	297
.L731:
	.byte	4
	.byte	'trigger',0,10,77,113
	.word	1719
.L733:
	.byte	9,5,5,0,0
.L757:
	.byte	3
	.byte	'Dem_EnvEDRetrieveExtendedDataRecord',0,3,10,93,53
	.word	297
	.byte	1,1
.L759:
	.byte	4
	.byte	'extDataId',0,10,93,95
	.word	297
.L761:
	.byte	4
	.byte	'RecordNumber',0,10,94,9
	.word	297
.L763:
	.byte	4
	.byte	'dest',0,10,95,10
	.word	314
.L765:
	.byte	4
	.byte	'bufsize',0,10,96,11
	.word	2947
.L767:
	.byte	4
	.byte	'src',0,10,97,16
	.word	324
.L769:
	.byte	4
	.byte	'internalEnvData',0,10,98,30
	.word	1266
.L771:
	.byte	9,5,5,5,0,0
.L939:
	.byte	3
	.byte	'Dem_EnvEDGetSizeOfEDR',0,3,10,124,59
	.word	297
	.byte	1,1
.L940:
	.byte	4
	.byte	'extDataId',0,10,124,87
	.word	297
.L942:
	.byte	4
	.byte	'RecordNumber',0,10,125,9
	.word	297
.L944:
	.byte	4
	.byte	'size',0,10,126,11
	.word	2947
.L946:
	.byte	9,5,5,0,0
.L527:
	.byte	8
	.byte	'Dem_EnvDIDCapture',0,3,11,26,17,1,1
.L530:
	.byte	4
	.byte	'didId',0,11,26,41
	.word	297
.L532:
	.byte	4
	.byte	'start',0,11,26,56
	.word	935
.L534:
	.byte	4
	.byte	'end',0,11,26,76
	.word	324
.L536:
	.byte	4
	.byte	'internalEnvData',0,11,26,108
	.word	1266
.L538:
	.byte	9,5,0,0
.L900:
	.byte	3
	.byte	'Dem_EnvDIDRetrieveRaw',0,3,11,41,30
	.word	297
	.byte	1,1
.L902:
	.byte	4
	.byte	'didId',0,11,41,58
	.word	297
.L904:
	.byte	4
	.byte	'start',0,11,41,73
	.word	935
.L906:
	.byte	4
	.byte	'end',0,11,41,93
	.word	324
.L908:
	.byte	4
	.byte	'src',0,11,41,112
	.word	1372
.L910:
	.byte	4
	.byte	'internalEnvData',0,11,41,144,1
	.word	1266
.L912:
	.byte	9,5,0,0
.L885:
	.byte	3
	.byte	'Dem_EnvDIDRetrieve',0,3,11,59,30
	.word	297
	.byte	1,1
.L887:
	.byte	4
	.byte	'didId',0,11,59,55
	.word	297
.L889:
	.byte	4
	.byte	'start',0,11,59,70
	.word	935
.L891:
	.byte	4
	.byte	'end',0,11,59,90
	.word	324
.L893:
	.byte	4
	.byte	'src',0,11,59,109
	.word	1372
.L895:
	.byte	4
	.byte	'internalEnvData',0,11,59,141,1
	.word	1266
.L897:
	.byte	9,5,0,0
.L1216:
	.byte	3
	.byte	'Dem_EnvDIDRetrieveSpecificDid',0,3,11,77,30
	.word	297
	.byte	1,1
.L1218:
	.byte	4
	.byte	'didId',0,11,77,67
	.word	297
.L1220:
	.byte	4
	.byte	'identifier',0,11,77,81
	.word	215
.L1222:
	.byte	4
	.byte	'start',0,11,77,101
	.word	935
.L1224:
	.byte	4
	.byte	'end',0,11,77,121
	.word	324
.L1226:
	.byte	4
	.byte	'src',0,11,77,140,1
	.word	1372
.L1228:
	.byte	4
	.byte	'internalEnvData',0,11,77,172,1
	.word	1266
.L1230:
	.byte	9,5,5,0,0
.L977:
	.byte	3
	.byte	'Dem_EnvDIDGetSize',0,3,11,108,19
	.word	215
	.byte	1,1
.L979:
	.byte	4
	.byte	'didId',0,11,108,43
	.word	297
.L981:
	.byte	9,5,0,0
.L511:
	.byte	8
	.byte	'Dem_EnvFFCapture',0,3,12,25,17,1,1
.L514:
	.byte	4
	.byte	'freezeFrameId',0,12,25,40
	.word	297
.L516:
	.byte	4
	.byte	'buffer',0,12,25,62
	.word	314
.L518:
	.byte	4
	.byte	'size',0,12,25,77
	.word	215
.L520:
	.byte	4
	.byte	'internalEnvData',0,12,25,110
	.word	1266
.L522:
	.byte	9,5,0,0
.L505:
	.byte	3
	.byte	'Dem_EnvFFGetRawByteSize',0,3,12,40,19
	.word	215
	.byte	1,1
.L506:
	.byte	4
	.byte	'freezeFrameId',0,12,40,49
	.word	297
.L508:
	.byte	5,0
.L864:
	.byte	3
	.byte	'Dem_EnvFFRetrieve',0,3,12,45,50
	.word	297
	.byte	1,1
.L867:
	.byte	4
	.byte	'freezeFrameId',0,12,45,74
	.word	297
.L869:
	.byte	4
	.byte	'RecNum',0,12,46,9
	.word	297
.L871:
	.byte	4
	.byte	'dest',0,12,47,10
	.word	314
.L873:
	.byte	4
	.byte	'bufsize',0,12,48,11
	.word	2947
.L875:
	.byte	4
	.byte	'src',0,12,49,16
	.word	324
.L877:
	.byte	4
	.byte	'internalEnvData',0,12,50,30
	.word	1266
.L879:
	.byte	9,5,0,0
.L969:
	.byte	3
	.byte	'Dem_EnvFFGetSize',0,3,12,79,52
	.word	297
	.byte	1,1
.L971:
	.byte	4
	.byte	'freezeFrameId',0,12,79,75
	.word	297
.L973:
	.byte	4
	.byte	'size',0,12,79,98
	.word	2947
.L975:
	.byte	9,5,0,0
.L1129:
	.byte	8
	.byte	'Dem_EnvFFRetrieveRaw',0,3,12,92,17,1,1
.L1132:
	.byte	4
	.byte	'freezeFrameId',0,12,92,44
	.word	297
.L1134:
	.byte	4
	.byte	'dest',0,12,92,66
	.word	314
.L1136:
	.byte	4
	.byte	'bufsize',0,12,92,80
	.word	2947
.L1138:
	.byte	4
	.byte	'src',0,12,92,102
	.word	324
.L1140:
	.byte	4
	.byte	'internalEnvData',0,12,92,134,1
	.word	1266
.L1142:
	.byte	9,5,0,0
.L1195:
	.byte	3
	.byte	'Dem_EnvFFRetrieveDid',0,3,12,106,30
	.word	297
	.byte	1,1
.L1198:
	.byte	4
	.byte	'freezeFrameId',0,12,106,57
	.word	297
.L1200:
	.byte	4
	.byte	'dest',0,12,107,10
	.word	314
.L1202:
	.byte	4
	.byte	'bufsize',0,12,108,11
	.word	2947
.L1204:
	.byte	4
	.byte	'did',0,12,109,10
	.word	215
.L1206:
	.byte	4
	.byte	'src',0,12,110,16
	.word	324
.L1208:
	.byte	4
	.byte	'internalEnvData',0,12,111,30
	.word	1266
.L1210:
	.byte	9,5,0,0
.L572:
	.byte	8
	.byte	'Dem_EnvFFCopyRaw',0,3,12,130,1,17,1,1
.L574:
	.byte	4
	.byte	'freezeFrameId',0,12,130,1,40
	.word	297
.L576:
	.byte	4
	.byte	'dest',0,12,130,1,62
	.word	314
.L578:
	.byte	4
	.byte	'bufsize',0,12,130,1,75
	.word	215
.L580:
	.byte	4
	.byte	'src',0,12,130,1,97
	.word	324
.L582:
	.byte	9,5,0,0,8
	.byte	'rba_DiagLib_Bit8SetBit',0,3,13,36,19,1,1,4
	.byte	'buffer',0,13,36,49
	.word	314
	.byte	4
	.byte	'bit_position',0,13,36,63
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,13,42,19,1,1,4
	.byte	'buffer',0,13,42,51
	.word	314
	.byte	4
	.byte	'bit_position',0,13,42,65
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8OverwriteBit',0,3,13,48,19,1,1,4
	.byte	'buffer',0,13,48,55
	.word	314
	.byte	4
	.byte	'bit_position',0,13,48,69
	.word	297
	.byte	4
	.byte	'will_bit_be_set',0,13,48,91
	.word	297
	.byte	9,5,5,0,0,3
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,13,60,20
	.word	297
	.byte	1,1,4
	.byte	'value',0,13,60,55
	.word	297
	.byte	4
	.byte	'bit_position',0,13,60,68
	.word	297
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit8IsBitSet',0,3,13,64,22
	.word	297
	.byte	1,1,4
	.byte	'value',0,13,64,53
	.word	297
	.byte	4
	.byte	'bit_position',0,13,64,66
	.word	297
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_Bit8GetBits',0,3,13,69,20
	.word	297
	.byte	1,1,4
	.byte	'value',0,13,69,50
	.word	297
	.byte	4
	.byte	'bit_position',0,13,69,63
	.word	297
	.byte	4
	.byte	'number_of_bits',0,13,69,83
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,13,77,19,1,1,4
	.byte	'value',0,13,77,52
	.word	314
	.byte	4
	.byte	'bit_position',0,13,77,65
	.word	297
	.byte	4
	.byte	'number_of_bits',0,13,77,85
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8OverwriteBits',0,3,13,83,19,1,1,4
	.byte	'value',0,13,83,56
	.word	314
	.byte	4
	.byte	'bit_position',0,13,83,69
	.word	297
	.byte	4
	.byte	'number_of_bits',0,13,83,89
	.word	297
	.byte	4
	.byte	'newValue',0,13,83,111
	.word	297
	.byte	9,5,0,0,8
	.byte	'rba_DiagLib_Bit16SetBit',0,3,14,36,19,1,1,4
	.byte	'buffer',0,14,36,51
	.word	2947
	.byte	4
	.byte	'bit_position',0,14,36,65
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,14,42,19,1,1,4
	.byte	'buffer',0,14,42,53
	.word	2947
	.byte	4
	.byte	'bit_position',0,14,42,67
	.word	297
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,14,60,21
	.word	215
	.byte	1,1,4
	.byte	'value',0,14,60,58
	.word	215
	.byte	4
	.byte	'bit_position',0,14,60,71
	.word	297
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit16IsBitSet',0,3,14,65,22
	.word	297
	.byte	1,1,4
	.byte	'value',0,14,65,55
	.word	215
	.byte	4
	.byte	'bit_position',0,14,65,68
	.word	297
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_Bit16GetBits',0,3,14,70,21
	.word	215
	.byte	1,1,4
	.byte	'value',0,14,70,53
	.word	215
	.byte	4
	.byte	'bit_position',0,14,70,66
	.word	297
	.byte	4
	.byte	'number_of_bits',0,14,70,86
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,14,78,19,1,1,4
	.byte	'value',0,14,78,54
	.word	2947
	.byte	4
	.byte	'bit_position',0,14,78,67
	.word	297
	.byte	4
	.byte	'number_of_bits',0,14,78,87
	.word	297
	.byte	5,0,6
	.word	141
	.byte	8
	.byte	'rba_DiagLib_Bit32SetBit',0,3,15,36,19,1,1,4
	.byte	'buffer',0,15,36,51
	.word	5828
	.byte	4
	.byte	'bit_position',0,15,36,65
	.word	297
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,15,42,19,1,1,4
	.byte	'buffer',0,15,42,53
	.word	5828
	.byte	4
	.byte	'bit_position',0,15,42,67
	.word	297
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,15,60,21
	.word	141
	.byte	1,1,4
	.byte	'value',0,15,60,58
	.word	141
	.byte	4
	.byte	'bit_position',0,15,60,71
	.word	297
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit32IsBitSet',0,3,15,65,22
	.word	297
	.byte	1,1,4
	.byte	'value',0,15,65,55
	.word	141
	.byte	4
	.byte	'bit_position',0,15,65,68
	.word	297
	.byte	9,5,0,0,8
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,15,78,19,1,1,4
	.byte	'value',0,15,78,54
	.word	5828
	.byte	4
	.byte	'bit_position',0,15,78,67
	.word	297
	.byte	4
	.byte	'number_of_bits',0,15,78,87
	.word	297
	.byte	5,0,8
	.byte	'Dem_BitArraySetBit',0,3,16,33,17,1,1,4
	.byte	'buffer',0,16,33,36
	.word	5828
	.byte	4
	.byte	'bit_position',0,16,33,75
	.word	141
	.byte	5,0,8
	.byte	'Dem_BitArrayClearBit',0,3,16,46,17,1,1,4
	.byte	'buffer',0,16,46,38
	.word	5828
	.byte	4
	.byte	'bit_position',0,16,46,77
	.word	141
	.byte	5,0,8
	.byte	'Dem_BitArrayOverwriteBit',0,3,16,61,17,1,1,4
	.byte	'buffer',0,16,61,42
	.word	5828
	.byte	4
	.byte	'bit_position',0,16,62,25
	.word	141
	.byte	4
	.byte	'will_bit_be_set',0,16,62,57
	.word	297
	.byte	9,5,5,0,0,7
	.word	141
	.byte	6
	.word	6448
	.byte	3
	.byte	'Dem_BitArrayIsBitSet',0,3,16,75,30
	.word	297
	.byte	1,1,4
	.byte	'buffer',0,16,75,51
	.word	6453
	.byte	4
	.byte	'bit_position',0,16,75,95
	.word	141
	.byte	5,0,3
	.byte	'Dem_EnCoAreAllFulfilled',0,3,17,32,30
	.word	297
	.byte	1,1,4
	.byte	'enableConditionList',0,17,32,68
	.word	297
	.byte	5,0,3
	.byte	'Dem_NvMGetNvMBlocKId',0,3,18,49,28
	.word	215
	.byte	1,1,4
	.byte	'id',0,18,49,68
	.word	297
	.byte	5,0,8
	.byte	'Dem_NvMStartClear',0,3,18,138,1,17,1,1,5,0,3
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderS',0,3,19,36,21
	.word	215
	.byte	1,1,4
	.byte	'val',0,19,36,70
	.word	215
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderL',0,3,19,41,21
	.word	141
	.byte	1,1,4
	.byte	'val',0,19,41,70
	.word	141
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetStoreTestFailedToNextOC',0,3,20,55,22
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,55,78
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetEventIsStoredInPrimary',0,3,20,75,22
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,75,77
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetAgingAllowed',0,3,20,95,22
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,95,67
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetOperationCycleID',0,3,20,122,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,122,69
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetAgingCycleID',0,3,20,129,1,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,129,1,65
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetFailureCycleID',0,3,20,136,1,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,136,1,67
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetDebounceMethodIndex',0,3,20,149,1,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,149,1,72
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetDebounceParamSettingIndex',0,3,20,155,1,21
	.word	215
	.byte	1,1,4
	.byte	'indx',0,20,155,1,79
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetAgingThreshold',0,3,20,168,1,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,168,1,67
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetMaxNumberFreezeFrameRecords',0,3,20,194,1,20
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,194,1,80
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetEnableConditions',0,3,20,208,1,27
	.word	297
	.byte	1,1,4
	.byte	'indx',0,20,208,1,76
	.word	215
	.byte	5,0,2
	.byte	'short int',0,2,5,3
	.byte	'Dem_EvtGetDebounceLevel',0,3,21,193,1,19
	.word	7499
	.byte	1,1,4
	.byte	'EventId',0,21,193,1,60
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvtGetLastReportedEvent',0,3,21,219,1,32
	.word	297
	.byte	1,1,4
	.byte	'EventId',0,21,219,1,77
	.word	215
	.byte	5,0,8
	.byte	'Dem_EvtIncreaseGlobalInitMonitoringCounter',0,3,21,227,3,17,1,1,5,0,8
	.byte	'Dem_EvtSetAnyInitMonitoring',0,3,21,233,3,17,1,1,4
	.byte	'reason',0,21,233,3,72
	.word	297
	.byte	9,5,0,0
.L439:
	.byte	2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Dem_DebHandleDebounceAction__processBits',0,3,22,101,30
	.word	297
	.byte	1,1,4
	.byte	'EventId',0,22,101,87
	.word	215
	.byte	4
	.byte	'debAction',0,22,101,120
	.word	7735
	.byte	5,0,15
	.word	215
	.byte	6
	.word	7844
	.byte	8
	.byte	'Dem_ClientResultType_setResult',0,3,23,27,17,1,1,4
	.byte	'result',0,23,27,79
	.word	7849
	.byte	4
	.byte	'request',0,23,27,109
	.word	215
	.byte	4
	.byte	'newResult',0,23,27,133,1
	.word	297
	.byte	5,0,15
	.word	215
	.byte	6
	.word	7944
	.byte	8
	.byte	'Dem_ClientRequestType_setRequest',0,3,23,65,17,1,1,4
	.byte	'request',0,23,65,82
	.word	7949
	.byte	4
	.byte	'newRequest',0,23,65,97
	.word	297
	.byte	5,0,6
	.word	141
	.byte	8
	.byte	'Dem_ClientSelectionType_invalidateSelectionResult',0,3,23,151,1,17,1,1,4
	.byte	'selection',0,23,151,1,93
	.word	8031
	.byte	5,0,3
	.byte	'Dem_ClientSelectionType_getTypeOfSelection',0,3,23,168,1,18
	.word	297
	.byte	1,1,4
	.byte	'selection',0,23,168,1,86
	.word	141
	.byte	5,0,8
	.byte	'Dem_ClientClearMachine_SetMachineActiveClient',0,3,24,53,17,1,1,4
	.byte	'ClientId',0,24,53,80
	.word	297
	.byte	5,0,8
	.byte	'Dem_ClientClearMachine_SetMachineState',0,3,24,68,17,1,1,4
	.byte	'state',0,24,68,62
	.word	297
	.byte	5,0,3
	.byte	'Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected',0,3,24,78,20
	.word	297
	.byte	1,1,4
	.byte	'ClientId',0,24,78,91
	.word	297
	.byte	9,5,5,5,5,0,0,3
	.byte	'Dem_EvMemIsMemIdValid',0,3,25,103,30
	.word	297
	.byte	1,1,4
	.byte	'MemId',0,25,103,65
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemIsEventMemLocIdValid',0,3,25,112,30
	.word	297
	.byte	1,1,4
	.byte	'LocId',0,25,112,73
	.word	7735
	.byte	5,0,7
	.word	1010
	.byte	6
	.word	8520
	.byte	3
	.byte	'Dem_EvMemGetEventMemStatusByPtr',0,3,25,134,1,25
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,134,1,89
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemStatus',0,3,25,139,1,25
	.word	7735
	.byte	1,1,4
	.byte	'LocId',0,25,139,1,65
	.word	7735
	.byte	9,5,0,0,3
	.byte	'Dem_EvMemGetEventMemEventIdByPtr',0,3,25,152,1,28
	.word	215
	.byte	1,1,4
	.byte	'EventMemory',0,25,152,1,93
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemTimeIdByPtr',0,3,25,170,1,19
	.word	141
	.byte	1,1,4
	.byte	'EventMemory',0,25,170,1,83
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemDtcStatusByPtr',0,3,25,188,1,18
	.word	297
	.byte	1,1,4
	.byte	'EventMemory',0,25,188,1,85
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemFailureCounterByPtr',0,3,25,216,1,24
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,216,1,96
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemOccurrenceCounterByPtr',0,3,25,233,1,25
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,233,1,100
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounterByPtr',0,3,25,133,2,25
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,133,2,95
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounter',0,3,25,144,2,25
	.word	7735
	.byte	1,1,4
	.byte	'LocId',0,25,144,2,71
	.word	7735
	.byte	9,5,0,0,8
	.byte	'Dem_EvMemSetEventMemAgingCounter',0,3,25,150,2,17,1,1,4
	.byte	'LocId',0,25,150,2,63
	.word	7735
	.byte	4
	.byte	'AgingCounter',0,25,150,2,83
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounterForTFSLCByPtr',0,3,25,161,2,25
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,161,2,103
	.word	8525
	.byte	5,0,2
	.byte	'char',0,1,6,3
	.byte	'Dem_EvMemGetMaxFdcDuringCurrentCycleByPtr',0,3,25,213,2,18
	.word	9311
	.byte	1,1,4
	.byte	'EventMemory',0,25,213,2,92
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetMaxFdcSinceLastClearByPtr',0,3,25,224,2,18
	.word	9311
	.byte	1,1,4
	.byte	'EventMemory',0,25,224,2,88
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemFreezeFrameCounterByPtr',0,3,25,238,3,25
	.word	7735
	.byte	1,1,4
	.byte	'EventMemory',0,25,238,3,101
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemTriggerByPtr',0,3,25,141,4,28
	.word	297
	.byte	1,1,4
	.byte	'EventMemory',0,25,141,4,93
	.word	8525
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemDataByPtr',0,3,25,170,4,19
	.word	314
	.byte	1,1,4
	.byte	'EventMemory',0,25,170,4,75
	.word	1178
	.byte	5,0,3
	.byte	'Dem_EvMemIsStored',0,3,25,206,4,30
	.word	297
	.byte	1,1,4
	.byte	'Status',0,25,206,4,61
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemIsEmpty',0,3,25,211,4,30
	.word	297
	.byte	1,1,4
	.byte	'Status',0,25,211,4,60
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemSetToEmpty',0,3,25,226,4,25
	.word	7735
	.byte	1,1,5,0,3
	.byte	'Dem_EvMemGetShadowVisibility',0,3,25,242,4,30
	.word	297
	.byte	1,1,5,0,3
	.byte	'Dem_EvMemGetEventMemStartLocId',0,3,25,131,5,25
	.word	7735
	.byte	1,1,4
	.byte	'MemId',0,25,131,5,69
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemEndLocId',0,3,25,143,5,25
	.word	7735
	.byte	1,1,4
	.byte	'MemId',0,25,143,5,67
	.word	7735
	.byte	5,0,6
	.word	7735
	.byte	8
	.byte	'Dem_EvMemEventMemoryIteratorNew',0,3,25,179,5,17,1,1,4
	.byte	'MemId',0,25,179,5,63
	.word	9971
	.byte	5,0,7
	.word	7735
	.byte	6
	.word	10033
	.byte	3
	.byte	'Dem_EvMemEventMemoryIteratorIsValid',0,3,25,184,5,30
	.word	297
	.byte	1,1,4
	.byte	'MemId',0,25,184,5,86
	.word	10038
	.byte	5,0,8
	.byte	'Dem_EvMemEventMemoryIteratorNext',0,3,25,189,5,17,1,1,4
	.byte	'MemId',0,25,189,5,64
	.word	9971
	.byte	5,0,3
	.byte	'Dem_EvMemIsEdgeTrigger',0,3,25,247,5,30
	.word	297
	.byte	1,1,4
	.byte	'StatusOld',0,25,247,5,66
	.word	7735
	.byte	4
	.byte	'StatusNew',0,25,247,5,90
	.word	7735
	.byte	4
	.byte	'Trigger',0,25,247,5,114
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemGetRamStsMask',0,3,25,154,7,25
	.word	7735
	.byte	1,1,4
	.byte	'EventId',0,25,154,7,64
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EvMemGetCurrentAgingCycleCounterInt',0,3,26,20,25
	.word	7735
	.byte	1,1,4
	.byte	'EventId',0,26,20,81
	.word	215
	.byte	5,0,3
	.byte	'Dem_EvMemIsAged',0,3,26,61,30
	.word	297
	.byte	1,1,4
	.byte	'EventId',0,26,61,62
	.word	215
	.byte	4
	.byte	'LocId',0,26,61,84
	.word	7735
	.byte	4
	.byte	'StatusNew',0,26,61,104
	.word	7735
	.byte	5,0,3
	.byte	'Dem_EvMemGetMemIdForDTCOrigin',0,3,27,150,1,25
	.word	7735
	.byte	1,1,4
	.byte	'DTCOrigin',0,27,150,1,73
	.word	297
	.byte	5,0,3
	.byte	'Dem_EvMemGetMemIdForEvent',0,3,27,222,1,25
	.word	7735
	.byte	1,1,4
	.byte	'EventId',0,27,222,1,67
	.word	215
	.byte	9,5,0,0,3
	.byte	'Dem_EnvGetIndexFromFFRecNum',0,3,28,21,18
	.word	297
	.byte	1,1,4
	.byte	'EventId',0,28,21,62
	.word	215
	.byte	4
	.byte	'RecNumber',0,28,21,77
	.word	297
	.byte	5,0
.L857:
	.byte	3
	.byte	'Dem_EnvGetFFRecNumFromIndex',0,3,28,28,18
	.word	297
	.byte	1,1
.L859:
	.byte	4
	.byte	'EventId',0,28,28,62
	.word	215
.L861:
	.byte	4
	.byte	'idx',0,28,28,77
	.word	297
.L863:
	.byte	5,0
.L753:
	.byte	3
	.byte	'Dem_EnvHasExtendedData',0,3,29,30,30
	.word	297
	.byte	1,1
.L754:
	.byte	4
	.byte	'EventId',0,29,30,69
	.word	215
.L756:
	.byte	5,0
.L850:
	.byte	3
	.byte	'Dem_EnvHasFreezeFrame',0,3,29,34,30
	.word	297
	.byte	1,1
.L851:
	.byte	4
	.byte	'EventId',0,29,34,68
	.word	215
.L853:
	.byte	5,0,16
	.byte	'Det_ReportError',0,30,112,16
	.word	297
	.byte	1,1,1,1,4
	.byte	'ModuleId',0,30,112,39
	.word	215
	.byte	4
	.byte	'InstanceId',0,30,112,55
	.word	297
	.byte	4
	.byte	'ApiId',0,30,112,73
	.word	297
	.byte	4
	.byte	'ErrorId',0,30,112,86
	.word	297
	.byte	0,17
	.byte	'void',0,6
	.word	10924
	.byte	7
	.word	10924
	.byte	6
	.word	10935
	.byte	16
	.byte	'rba_BswSrv_MemCopy',0,1,83,14
	.word	10930
	.byte	1,1,1,1,4
	.byte	'xDest_pv',0,1,83,39
	.word	10930
	.byte	4
	.byte	'xSrc_pcv',0,1,83,61
	.word	10940
	.byte	4
	.byte	'numBytes_u32',0,1,83,78
	.word	141
	.byte	0,16
	.byte	'rba_BswSrv_MemSet',0,1,84,14
	.word	10930
	.byte	1,1,1,1,4
	.byte	'xDest_pv',0,1,84,38
	.word	10930
	.byte	4
	.byte	'xPattern_u32',0,1,84,55
	.word	419
	.byte	4
	.byte	'numBytes_u32',0,1,84,76
	.word	141
	.byte	0,18
	.word	157
	.byte	19
	.word	195
	.byte	5,0,18
	.word	237
	.byte	19
	.word	276
	.byte	5,0,18
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	5,0,18
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	5,0,18
	.word	522
	.byte	19
	.word	552
	.byte	5,0,18
	.word	572
	.byte	19
	.word	603
	.byte	5,0,18
	.word	623
	.byte	19
	.word	653
	.byte	5,0,18
	.word	671
	.byte	19
	.word	700
	.byte	5,0,18
	.word	714
	.byte	19
	.word	747
	.byte	5,0,18
	.word	761
	.byte	19
	.word	793
	.byte	5,0,18
	.word	810
	.byte	19
	.word	844
	.byte	5,0,18
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	9,20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,5,0,0,18
	.word	1271
	.byte	19
	.word	1295
	.byte	19
	.word	1317
	.byte	19
	.word	1331
	.byte	19
	.word	1343
	.byte	9,20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,5,20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,5,0,0,18
	.word	1377
	.byte	19
	.word	1398
	.byte	19
	.word	1420
	.byte	19
	.word	1434
	.byte	19
	.word	1446
	.byte	9,20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,5,0,0,18
	.word	1462
	.byte	19
	.word	1483
	.byte	19
	.word	1505
	.byte	19
	.word	1519
	.byte	19
	.word	1531
	.byte	5,0,18
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	9,20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,5,20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,5,0,0,18
	.word	1663
	.byte	19
	.word	1694
	.byte	5,0,18
	.word	1724
	.byte	19
	.word	1749
	.byte	19
	.word	1765
	.byte	5,0,18
	.word	1787
	.byte	19
	.word	1821
	.byte	5,0,18
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	9,20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,5,0,0,18
	.word	1916
	.byte	19
	.word	1949
	.byte	5,0,18
	.word	1967
	.byte	19
	.word	2004
	.byte	5,0,18
	.word	2027
	.byte	19
	.word	2058
	.byte	5,0,18
	.word	2081
	.byte	19
	.word	2119
	.byte	5,0,18
	.word	2142
	.byte	19
	.word	2167
	.byte	19
	.word	2188
	.byte	19
	.word	2202
	.byte	19
	.word	2214
	.byte	9,20
	.word	1271
	.byte	19
	.word	1295
	.byte	19
	.word	1317
	.byte	19
	.word	1331
	.byte	19
	.word	1343
	.byte	22
	.word	1367
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1368
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1369
	.byte	0,0,5,0,0,18
	.word	2325
	.byte	19
	.word	2350
	.byte	19
	.word	2371
	.byte	19
	.word	2385
	.byte	19
	.word	2397
	.byte	19
	.word	2409
	.byte	9,20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,5,20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,5,20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,5,20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,5,20
	.word	2081
	.byte	19
	.word	2119
	.byte	21
	.word	2140
	.byte	0,5,20
	.word	2027
	.byte	19
	.word	2058
	.byte	21
	.word	2079
	.byte	0,5,20
	.word	1724
	.byte	19
	.word	1749
	.byte	19
	.word	1765
	.byte	21
	.word	1785
	.byte	0,5,20
	.word	1916
	.byte	19
	.word	1949
	.byte	21
	.word	1965
	.byte	0,5,20
	.word	1462
	.byte	19
	.word	1483
	.byte	19
	.word	1505
	.byte	19
	.word	1519
	.byte	19
	.word	1531
	.byte	21
	.word	1543
	.byte	0,5,20
	.word	1377
	.byte	19
	.word	1398
	.byte	19
	.word	1420
	.byte	19
	.word	1434
	.byte	19
	.word	1446
	.byte	22
	.word	1458
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1459
	.byte	0,0,5,0,0,18
	.word	2449
	.byte	19
	.word	2479
	.byte	19
	.word	2500
	.byte	19
	.word	2514
	.byte	19
	.word	2526
	.byte	19
	.word	2538
	.byte	9,20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,5,0,0,18
	.word	2567
	.byte	19
	.word	2596
	.byte	9,20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,5,0,0,18
	.word	2621
	.byte	19
	.word	2647
	.byte	19
	.word	2669
	.byte	9,20
	.word	2567
	.byte	19
	.word	2596
	.byte	22
	.word	2617
	.byte	20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,21
	.word	2618
	.byte	0,0,5,0,0,18
	.word	2686
	.byte	19
	.word	2710
	.byte	19
	.word	2728
	.byte	19
	.word	2743
	.byte	19
	.word	2756
	.byte	9,20
	.word	2142
	.byte	19
	.word	2167
	.byte	19
	.word	2188
	.byte	19
	.word	2202
	.byte	19
	.word	2214
	.byte	22
	.word	2238
	.byte	20
	.word	1271
	.byte	19
	.word	1295
	.byte	19
	.word	1317
	.byte	19
	.word	1331
	.byte	19
	.word	1343
	.byte	22
	.word	1367
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1368
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1369
	.byte	0,0,21
	.word	2239
	.byte	0,0,5,0,0,18
	.word	2784
	.byte	19
	.word	2819
	.byte	5,0,18
	.word	2839
	.byte	19
	.word	2863
	.byte	19
	.word	2881
	.byte	19
	.word	2894
	.byte	19
	.word	2910
	.byte	19
	.word	2922
	.byte	9,20
	.word	2325
	.byte	19
	.word	2350
	.byte	19
	.word	2371
	.byte	19
	.word	2385
	.byte	19
	.word	2397
	.byte	19
	.word	2409
	.byte	22
	.word	2431
	.byte	20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,21
	.word	2432
	.byte	20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,21
	.word	2433
	.byte	20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,21
	.word	2434
	.byte	20
	.word	1844
	.byte	19
	.word	1875
	.byte	19
	.word	1891
	.byte	22
	.word	1912
	.byte	20
	.word	1787
	.byte	19
	.word	1821
	.byte	21
	.word	1842
	.byte	0,21
	.word	1913
	.byte	0,0,21
	.word	2435
	.byte	20
	.word	2081
	.byte	19
	.word	2119
	.byte	21
	.word	2140
	.byte	0,21
	.word	2436
	.byte	20
	.word	2027
	.byte	19
	.word	2058
	.byte	21
	.word	2079
	.byte	0,21
	.word	2437
	.byte	20
	.word	1724
	.byte	19
	.word	1749
	.byte	19
	.word	1765
	.byte	21
	.word	1785
	.byte	0,21
	.word	2438
	.byte	20
	.word	1916
	.byte	19
	.word	1949
	.byte	21
	.word	1965
	.byte	0,21
	.word	2439
	.byte	20
	.word	1462
	.byte	19
	.word	1483
	.byte	19
	.word	1505
	.byte	19
	.word	1519
	.byte	19
	.word	1531
	.byte	21
	.word	1543
	.byte	0,21
	.word	2440
	.byte	20
	.word	1377
	.byte	19
	.word	1398
	.byte	19
	.word	1420
	.byte	19
	.word	1434
	.byte	19
	.word	1446
	.byte	22
	.word	1458
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1459
	.byte	0,0,21
	.word	2441
	.byte	0,0,5,0,0,18
	.word	2952
	.byte	19
	.word	2993
	.byte	19
	.word	3011
	.byte	19
	.word	3024
	.byte	19
	.word	3040
	.byte	19
	.word	3052
	.byte	9,20
	.word	2449
	.byte	19
	.word	2479
	.byte	19
	.word	2500
	.byte	19
	.word	2514
	.byte	19
	.word	2526
	.byte	19
	.word	2538
	.byte	22
	.word	2563
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	2564
	.byte	0,0,5,0,0,18
	.word	3080
	.byte	19
	.word	3120
	.byte	19
	.word	3138
	.byte	19
	.word	3159
	.byte	9,20
	.word	1967
	.byte	19
	.word	2004
	.byte	21
	.word	2025
	.byte	0,5,20
	.word	2081
	.byte	19
	.word	2119
	.byte	21
	.word	2140
	.byte	0,5,0,0,18
	.word	3180
	.byte	19
	.word	3227
	.byte	19
	.word	3245
	.byte	19
	.word	3266
	.byte	19
	.word	3279
	.byte	19
	.word	3295
	.byte	19
	.word	3307
	.byte	9,20
	.word	1967
	.byte	19
	.word	2004
	.byte	21
	.word	2025
	.byte	0,5,20
	.word	2621
	.byte	19
	.word	2647
	.byte	19
	.word	2669
	.byte	22
	.word	2682
	.byte	20
	.word	2567
	.byte	19
	.word	2596
	.byte	22
	.word	2617
	.byte	20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,21
	.word	2618
	.byte	0,0,21
	.word	2683
	.byte	0,0,5,20
	.word	2449
	.byte	19
	.word	2479
	.byte	19
	.word	2500
	.byte	19
	.word	2514
	.byte	19
	.word	2526
	.byte	19
	.word	2538
	.byte	22
	.word	2563
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	2564
	.byte	0,0,5,0,0,18
	.word	3337
	.byte	19
	.word	3370
	.byte	19
	.word	3388
	.byte	19
	.word	3409
	.byte	9,20
	.word	1967
	.byte	19
	.word	2004
	.byte	21
	.word	2025
	.byte	0,5,20
	.word	2567
	.byte	19
	.word	2596
	.byte	22
	.word	2617
	.byte	20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,21
	.word	2618
	.byte	0,0,5,0,0,18
	.word	3427
	.byte	19
	.word	3452
	.byte	19
	.word	3466
	.byte	19
	.word	3480
	.byte	19
	.word	3492
	.byte	9,20
	.word	1271
	.byte	19
	.word	1295
	.byte	19
	.word	1317
	.byte	19
	.word	1331
	.byte	19
	.word	1343
	.byte	22
	.word	1367
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1368
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1369
	.byte	0,0,5,0,0,18
	.word	3520
	.byte	19
	.word	3553
	.byte	19
	.word	3567
	.byte	19
	.word	3581
	.byte	19
	.word	3593
	.byte	19
	.word	3605
	.byte	9,20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,5,0,0,18
	.word	3634
	.byte	19
	.word	3664
	.byte	19
	.word	3678
	.byte	19
	.word	3692
	.byte	19
	.word	3704
	.byte	19
	.word	3716
	.byte	9,20
	.word	3520
	.byte	19
	.word	3553
	.byte	19
	.word	3567
	.byte	19
	.word	3581
	.byte	19
	.word	3593
	.byte	19
	.word	3605
	.byte	22
	.word	3630
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	3631
	.byte	0,0,5,0,0,18
	.word	3745
	.byte	19
	.word	3786
	.byte	19
	.word	3800
	.byte	19
	.word	3819
	.byte	19
	.word	3833
	.byte	19
	.word	3845
	.byte	19
	.word	3858
	.byte	9,20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,5,20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,5,0,0,18
	.word	3888
	.byte	19
	.word	3917
	.byte	9,20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,5,0,0,18
	.word	3935
	.byte	19
	.word	3959
	.byte	19
	.word	3981
	.byte	19
	.word	3996
	.byte	19
	.word	4009
	.byte	9,20
	.word	3427
	.byte	19
	.word	3452
	.byte	19
	.word	3466
	.byte	19
	.word	3480
	.byte	19
	.word	3492
	.byte	22
	.word	3516
	.byte	20
	.word	1271
	.byte	19
	.word	1295
	.byte	19
	.word	1317
	.byte	19
	.word	1331
	.byte	19
	.word	1343
	.byte	22
	.word	1367
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1368
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1369
	.byte	0,0,21
	.word	3517
	.byte	0,0,5,0,0,18
	.word	4037
	.byte	19
	.word	4072
	.byte	5,0,18
	.word	4096
	.byte	19
	.word	4125
	.byte	19
	.word	4147
	.byte	19
	.word	4162
	.byte	19
	.word	4175
	.byte	19
	.word	4191
	.byte	19
	.word	4203
	.byte	9,20
	.word	3634
	.byte	19
	.word	3664
	.byte	19
	.word	3678
	.byte	19
	.word	3692
	.byte	19
	.word	3704
	.byte	19
	.word	3716
	.byte	22
	.word	3741
	.byte	20
	.word	3520
	.byte	19
	.word	3553
	.byte	19
	.word	3567
	.byte	19
	.word	3581
	.byte	19
	.word	3593
	.byte	19
	.word	3605
	.byte	22
	.word	3630
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	3631
	.byte	0,0,21
	.word	3742
	.byte	0,0,5,0,0,18
	.word	4231
	.byte	19
	.word	4259
	.byte	19
	.word	4281
	.byte	9,20
	.word	3888
	.byte	19
	.word	3917
	.byte	22
	.word	3931
	.byte	20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,21
	.word	3932
	.byte	0,0,5,0,0,18
	.word	4298
	.byte	19
	.word	4326
	.byte	19
	.word	4348
	.byte	19
	.word	4361
	.byte	19
	.word	4377
	.byte	19
	.word	4389
	.byte	9,20
	.word	3520
	.byte	19
	.word	3553
	.byte	19
	.word	3567
	.byte	19
	.word	3581
	.byte	19
	.word	3593
	.byte	19
	.word	3605
	.byte	22
	.word	3630
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	3631
	.byte	0,0,5,0,0,18
	.word	4418
	.byte	19
	.word	4450
	.byte	19
	.word	4472
	.byte	19
	.word	4485
	.byte	19
	.word	4501
	.byte	19
	.word	4513
	.byte	19
	.word	4525
	.byte	9,20
	.word	3745
	.byte	19
	.word	3786
	.byte	19
	.word	3800
	.byte	19
	.word	3819
	.byte	19
	.word	3833
	.byte	19
	.word	3845
	.byte	19
	.word	3858
	.byte	22
	.word	3883
	.byte	20
	.word	1663
	.byte	19
	.word	1694
	.byte	21
	.word	1717
	.byte	0,21
	.word	3884
	.byte	20
	.word	1545
	.byte	19
	.word	1574
	.byte	19
	.word	1596
	.byte	19
	.word	1610
	.byte	19
	.word	1622
	.byte	19
	.word	1634
	.byte	22
	.word	1658
	.byte	20
	.word	876
	.byte	19
	.word	904
	.byte	19
	.word	918
	.byte	22
	.word	931
	.byte	20
	.word	426
	.byte	19
	.word	461
	.byte	19
	.word	478
	.byte	19
	.word	499
	.byte	21
	.word	520
	.byte	0,21
	.word	932
	.byte	0,0,21
	.word	1659
	.byte	20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,21
	.word	1660
	.byte	0,0,21
	.word	3885
	.byte	0,0,5,0,0,18
	.word	4553
	.byte	19
	.word	4578
	.byte	19
	.word	4601
	.byte	19
	.word	4615
	.byte	19
	.word	4632
	.byte	9,20
	.word	329
	.byte	19
	.word	364
	.byte	19
	.word	380
	.byte	19
	.word	396
	.byte	21
	.word	417
	.byte	0,5,0,0,18
	.word	4649
	.byte	19
	.word	4679
	.byte	19
	.word	4694
	.byte	5,0,18
	.word	4717
	.byte	19
	.word	4749
	.byte	19
	.word	4764
	.byte	5,0,18
	.word	4787
	.byte	19
	.word	4823
	.byte	19
	.word	4838
	.byte	19
	.word	4859
	.byte	9,20
	.word	4649
	.byte	19
	.word	4679
	.byte	19
	.word	4694
	.byte	21
	.word	4715
	.byte	0,5,20
	.word	4717
	.byte	19
	.word	4749
	.byte	19
	.word	4764
	.byte	21
	.word	4785
	.byte	0,5,0,0,18
	.word	4888
	.byte	19
	.word	4928
	.byte	19
	.word	4942
	.byte	5,0,18
	.word	4965
	.byte	19
	.word	5001
	.byte	19
	.word	5015
	.byte	9,20
	.word	4888
	.byte	19
	.word	4928
	.byte	19
	.word	4942
	.byte	21
	.word	4963
	.byte	0,5,0,0,18
	.word	5040
	.byte	19
	.word	5075
	.byte	19
	.word	5089
	.byte	19
	.word	5110
	.byte	5,0,18
	.word	5135
	.byte	19
	.word	5168
	.byte	19
	.word	5182
	.byte	19
	.word	5203
	.byte	5,0,18
	.word	5228
	.byte	19
	.word	5265
	.byte	19
	.word	5279
	.byte	19
	.word	5300
	.byte	19
	.word	5323
	.byte	9,20
	.word	5135
	.byte	19
	.word	5168
	.byte	19
	.word	5182
	.byte	19
	.word	5203
	.byte	21
	.word	5226
	.byte	0,5,0,0,18
	.word	5344
	.byte	19
	.word	5375
	.byte	19
	.word	5390
	.byte	5,0,18
	.word	5413
	.byte	19
	.word	5446
	.byte	19
	.word	5461
	.byte	5,0,18
	.word	5484
	.byte	19
	.word	5525
	.byte	19
	.word	5539
	.byte	5,0,18
	.word	5562
	.byte	19
	.word	5599
	.byte	19
	.word	5613
	.byte	9,20
	.word	5484
	.byte	19
	.word	5525
	.byte	19
	.word	5539
	.byte	21
	.word	5560
	.byte	0,5,0,0,18
	.word	5638
	.byte	19
	.word	5674
	.byte	19
	.word	5688
	.byte	19
	.word	5709
	.byte	5,0,18
	.word	5734
	.byte	19
	.word	5768
	.byte	19
	.word	5782
	.byte	19
	.word	5803
	.byte	5,0,18
	.word	5833
	.byte	19
	.word	5864
	.byte	19
	.word	5879
	.byte	5,0,18
	.word	5902
	.byte	19
	.word	5935
	.byte	19
	.word	5950
	.byte	5,0,18
	.word	5973
	.byte	19
	.word	6014
	.byte	19
	.word	6028
	.byte	5,0,18
	.word	6051
	.byte	19
	.word	6088
	.byte	19
	.word	6102
	.byte	9,20
	.word	5973
	.byte	19
	.word	6014
	.byte	19
	.word	6028
	.byte	21
	.word	6049
	.byte	0,5,0,0,18
	.word	6127
	.byte	19
	.word	6161
	.byte	19
	.word	6175
	.byte	19
	.word	6196
	.byte	5,0,18
	.word	6221
	.byte	19
	.word	6247
	.byte	19
	.word	6262
	.byte	5,0,18
	.word	6285
	.byte	19
	.word	6313
	.byte	19
	.word	6328
	.byte	5,0,18
	.word	6351
	.byte	19
	.word	6383
	.byte	19
	.word	6398
	.byte	19
	.word	6419
	.byte	9,20
	.word	6221
	.byte	19
	.word	6247
	.byte	19
	.word	6262
	.byte	21
	.word	6283
	.byte	0,5,20
	.word	6285
	.byte	19
	.word	6313
	.byte	19
	.word	6328
	.byte	21
	.word	6349
	.byte	0,5,0,0,18
	.word	6458
	.byte	19
	.word	6490
	.byte	19
	.word	6505
	.byte	5,0,18
	.word	6528
	.byte	19
	.word	6563
	.byte	5,0,18
	.word	6593
	.byte	19
	.word	6625
	.byte	5,0,18
	.word	6638
	.byte	5,0,18
	.word	6666
	.byte	19
	.word	6719
	.byte	9,20
	.word	237
	.byte	19
	.word	276
	.byte	21
	.word	295
	.byte	0,5,0,0,18
	.word	6735
	.byte	19
	.word	6788
	.byte	9,20
	.word	157
	.byte	19
	.word	195
	.byte	21
	.word	213
	.byte	0,5,0,0,18
	.word	6804
	.byte	19
	.word	6855
	.byte	5,0,18
	.word	6870
	.byte	19
	.word	6920
	.byte	9,20
	.word	5562
	.byte	19
	.word	5599
	.byte	19
	.word	5613
	.byte	22
	.word	5634
	.byte	20
	.word	5484
	.byte	19
	.word	5525
	.byte	19
	.word	5539
	.byte	21
	.word	5560
	.byte	0,21
	.word	5635
	.byte	0,0,5,0,0,18
	.word	6937
	.byte	19
	.word	6977
	.byte	9,20
	.word	5562
	.byte	19
	.word	5599
	.byte	19
	.word	5613
	.byte	22
	.word	5634
	.byte	20
	.word	5484
	.byte	19
	.word	5525
	.byte	19
	.word	5539
	.byte	21
	.word	5560
	.byte	0,21
	.word	5635
	.byte	0,0,5,0,0,18
	.word	6994
	.byte	19
	.word	7038
	.byte	5,0,18
	.word	7053
	.byte	19
	.word	7094
	.byte	5,0,18
	.word	7110
	.byte	19
	.word	7153
	.byte	5,0,18
	.word	7169
	.byte	19
	.word	7217
	.byte	5,0,18
	.word	7233
	.byte	19
	.word	7287
	.byte	9,20
	.word	5638
	.byte	19
	.word	5674
	.byte	19
	.word	5688
	.byte	19
	.word	5709
	.byte	21
	.word	5732
	.byte	0,5,0,0,18
	.word	7305
	.byte	19
	.word	7348
	.byte	5,0,18
	.word	7364
	.byte	19
	.word	7420
	.byte	9,20
	.word	5638
	.byte	19
	.word	5674
	.byte	19
	.word	5688
	.byte	19
	.word	5709
	.byte	21
	.word	5732
	.byte	0,5,0,0,18
	.word	7438
	.byte	19
	.word	7483
	.byte	5,0,18
	.word	7512
	.byte	19
	.word	7548
	.byte	5,0,18
	.word	7567
	.byte	19
	.word	7607
	.byte	5,0,18
	.word	7626
	.byte	5,0,18
	.word	7679
	.byte	19
	.word	7715
	.byte	9,20
	.word	5833
	.byte	19
	.word	5864
	.byte	19
	.word	5879
	.byte	21
	.word	5900
	.byte	0,5,0,0,18
	.word	7756
	.byte	19
	.word	7808
	.byte	19
	.word	7824
	.byte	5,0,18
	.word	7854
	.byte	19
	.word	7892
	.byte	19
	.word	7907
	.byte	19
	.word	7923
	.byte	5,0,18
	.word	7954
	.byte	19
	.word	7994
	.byte	19
	.word	8010
	.byte	5,0,18
	.word	8036
	.byte	19
	.word	8094
	.byte	5,0,18
	.word	8115
	.byte	19
	.word	8170
	.byte	5,0,18
	.word	8191
	.byte	19
	.word	8244
	.byte	5,0,18
	.word	8263
	.byte	19
	.word	8309
	.byte	5,0,18
	.word	8325
	.byte	19
	.word	8390
	.byte	9,20
	.word	522
	.byte	19
	.word	552
	.byte	21
	.word	570
	.byte	0,5,20
	.word	522
	.byte	19
	.word	552
	.byte	21
	.word	570
	.byte	0,5,20
	.word	8115
	.byte	19
	.word	8170
	.byte	21
	.word	8189
	.byte	0,5,20
	.word	7854
	.byte	19
	.word	7892
	.byte	19
	.word	7907
	.byte	19
	.word	7923
	.byte	21
	.word	7942
	.byte	0,5,0,0,18
	.word	8414
	.byte	19
	.word	8447
	.byte	5,0,18
	.word	8463
	.byte	19
	.word	8504
	.byte	5,0,18
	.word	8530
	.byte	19
	.word	8574
	.byte	5,0,18
	.word	8597
	.byte	19
	.word	8636
	.byte	9,20
	.word	8530
	.byte	19
	.word	8574
	.byte	21
	.word	8595
	.byte	0,5,0,0,18
	.word	8655
	.byte	19
	.word	8700
	.byte	5,0,18
	.word	8723
	.byte	19
	.word	8767
	.byte	5,0,18
	.word	8790
	.byte	19
	.word	8837
	.byte	5,0,18
	.word	8860
	.byte	19
	.word	8912
	.byte	5,0,18
	.word	8935
	.byte	19
	.word	8990
	.byte	5,0,18
	.word	9013
	.byte	19
	.word	9063
	.byte	5,0,18
	.word	9086
	.byte	19
	.word	9131
	.byte	9,20
	.word	9013
	.byte	19
	.word	9063
	.byte	21
	.word	9084
	.byte	0,5,0,0,18
	.word	9150
	.byte	19
	.word	9191
	.byte	19
	.word	9206
	.byte	5,0,18
	.word	9230
	.byte	19
	.word	9288
	.byte	5,0,18
	.word	9319
	.byte	19
	.word	9373
	.byte	5,0,18
	.word	9396
	.byte	19
	.word	9446
	.byte	5,0,18
	.word	9469
	.byte	19
	.word	9525
	.byte	5,0,18
	.word	9548
	.byte	19
	.word	9593
	.byte	5,0,18
	.word	9616
	.byte	19
	.word	9658
	.byte	5,0,18
	.word	9681
	.byte	19
	.word	9711
	.byte	5,0,18
	.word	9729
	.byte	19
	.word	9758
	.byte	5,0,18
	.word	9776
	.byte	5,0,18
	.word	9810
	.byte	5,0,18
	.word	9853
	.byte	19
	.word	9896
	.byte	5,0,18
	.word	9913
	.byte	19
	.word	9954
	.byte	5,0,18
	.word	9976
	.byte	19
	.word	10016
	.byte	5,0,18
	.word	10043
	.byte	19
	.word	10091
	.byte	5,0,18
	.word	10108
	.byte	19
	.word	10149
	.byte	5,0,18
	.word	10166
	.byte	19
	.word	10201
	.byte	19
	.word	10220
	.byte	19
	.word	10239
	.byte	5,0,18
	.word	10258
	.byte	19
	.word	10293
	.byte	9,20
	.word	6804
	.byte	19
	.word	6855
	.byte	21
	.word	6868
	.byte	0,5,0,0,18
	.word	10314
	.byte	19
	.word	10365
	.byte	5,0,18
	.word	10383
	.byte	19
	.word	10410
	.byte	19
	.word	10426
	.byte	19
	.word	10440
	.byte	5,0,18
	.word	10460
	.byte	19
	.word	10502
	.byte	5,0,18
	.word	10523
	.byte	19
	.word	10561
	.byte	9,20
	.word	6870
	.byte	19
	.word	6920
	.byte	22
	.word	6933
	.byte	20
	.word	5562
	.byte	19
	.word	5599
	.byte	19
	.word	5613
	.byte	22
	.word	5634
	.byte	20
	.word	5484
	.byte	19
	.word	5525
	.byte	19
	.word	5539
	.byte	21
	.word	5560
	.byte	0,21
	.word	5635
	.byte	0,0,21
	.word	6934
	.byte	0,0,5,0,0,18
	.word	10582
	.byte	19
	.word	10621
	.byte	19
	.word	10637
	.byte	5,0,18
	.word	10657
	.byte	19
	.word	10696
	.byte	19
	.word	10712
	.byte	5,0,18
	.word	10726
	.byte	19
	.word	10760
	.byte	5,0,18
	.word	10778
	.byte	19
	.word	10811
	.byte	5,0
.L583:
	.byte	7
	.word	215
	.byte	23
	.byte	'__INDIRECT__',0,31,1,1,1,1,1,24,1,6
	.word	17543
	.byte	25
	.byte	'__codeptr',0,31,1,1
	.word	17545
	.byte	25
	.byte	'sint8',0,32,76,25
	.word	9311
	.byte	25
	.byte	'uint8',0,32,81,25
	.word	297
	.byte	25
	.byte	'sint16',0,32,86,25
	.word	7499
	.byte	25
	.byte	'uint16',0,32,91,25
	.word	215
	.byte	25
	.byte	'sint32',0,32,96,24
	.word	419
	.byte	25
	.byte	'uint32',0,32,106,24
	.word	141
	.byte	2
	.byte	'unsigned long long int',0,8,7,25
	.byte	'uint64',0,32,111,30
	.word	17656
	.byte	25
	.byte	'boolean',0,32,127,25
	.word	297
	.byte	25
	.byte	'uint8_least',0,32,137,1,25
	.word	7735
	.byte	25
	.byte	'uint16_least',0,32,147,1,25
	.word	7735
	.byte	25
	.byte	'StatusType',0,33,191,1,27
	.word	297
	.byte	25
	.byte	'Std_ReturnType',0,33,199,1,15
	.word	297
	.byte	10,33,206,1,9,8,11
	.byte	'vendorID',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'moduleID',0
	.word	215
	.byte	2,2,35,2,11
	.byte	'sw_major_version',0
	.word	297
	.byte	1,2,35,4,11
	.byte	'sw_minor_version',0
	.word	297
	.byte	1,2,35,5,11
	.byte	'sw_patch_version',0
	.word	297
	.byte	1,2,35,6,0,25
	.byte	'Std_VersionInfoType',0,33,213,1,3
	.word	17800
	.byte	25
	.byte	'Dem_ClientRequestType',0,34,46,16
	.word	215
	.byte	25
	.byte	'Dem_ClientResultType',0,34,47,16
	.word	215
	.byte	25
	.byte	'Dem_ClientSelectionType',0,34,48,16
	.word	141
	.byte	25
	.byte	'Dem_ClientPriorityType',0,34,50,15
	.word	297
	.byte	25
	.byte	'Dem_ComponentIdType',0,35,20,15
	.word	297
	.byte	25
	.byte	'PduIdType',0,36,22,19
	.word	215
	.byte	25
	.byte	'PduLengthType',0,36,26,19
	.word	215
	.byte	26,37,113,9,4,27
	.byte	'TP_DATACONF',0,0,27
	.byte	'TP_DATARETRY',0,1,27
	.byte	'TP_CONFPENDING',0,2,0,25
	.byte	'TpDataStateType',0,37,118,3
	.word	18140
	.byte	25
	.byte	'Can_IdType',0,38,32,16
	.word	141
	.byte	25
	.byte	'Can_HwHandleType',0,38,43,16
	.word	215
	.byte	10,39,93,9,8,11
	.byte	'Class',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'TIN',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'ReturnAddress',0
	.word	141
	.byte	4,2,35,4,0,25
	.byte	'OsTrapInfoType',0,39,97,3
	.word	18260
	.byte	13,68
	.word	141
	.byte	14,16,0,10,39,154,1,9,68,11
	.byte	'store',0
	.word	18340
	.byte	68,2,35,0,0,13,68
	.word	18349
	.byte	14,0,0,25
	.byte	'Os_JumpBufType',0,39,156,1,3
	.word	18371
	.byte	25
	.byte	'Os_StackTraceType',0,39,174,1,18
	.word	141
	.byte	10,39,175,1,9,8,11
	.byte	'sp',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'ctx',0
	.word	141
	.byte	4,2,35,4,0,25
	.byte	'Os_StackValueType',0,39,175,1,63
	.word	18431
	.byte	25
	.byte	'Os_StackSizeType',0,39,176,1,27
	.word	18431
	.byte	28,1,1,6
	.word	18516
	.byte	25
	.byte	'Os_VoidVoidFunctionType',0,39,179,1,16
	.word	18519
	.byte	25
	.byte	'ApplicationType',0,39,193,1,23
	.word	297
	.byte	29
	.byte	'Os_ApplicationConfigurationType_s',0,39,198,1,16,2,11
	.byte	'app_id',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,1,0,25
	.byte	'Os_ApplicationConfigurationType',0,39,201,1,3
	.word	18582
	.byte	25
	.byte	'Os_CoreStateType',0,39,203,1,16
	.word	141
	.byte	25
	.byte	'AreaIdType',0,39,204,1,16
	.word	215
	.byte	25
	.byte	'Os_PeripheralAddressType',0,39,212,1,22
	.word	141
	.byte	25
	.byte	'TickType',0,39,221,1,22
	.word	141
	.byte	25
	.byte	'Os_StopwatchTickType',0,39,225,1,22
	.word	141
	.byte	25
	.byte	'Os_Lockable',0,39,234,1,18
	.word	5828
	.byte	25
	.byte	'CoreIdType',0,39,236,1,16
	.word	215
	.byte	25
	.byte	'SpinlockIdType',0,39,237,1,16
	.word	215
	.byte	26,39,239,1,9,4,27
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,27
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,25
	.byte	'TryToGetSpinlockType',0,39,239,1,74
	.word	18889
	.byte	26,39,174,2,9,4,27
	.byte	'APPLICATION_ACCESSIBLE',0,0,27
	.byte	'APPLICATION_RESTARTING',0,1,27
	.byte	'APPLICATION_TERMINATED',0,2,0,25
	.byte	'ApplicationStateType',0,39,174,2,92
	.word	18982
	.byte	30,1,1,31
	.word	297
	.byte	31
	.word	10930
	.byte	0,6
	.word	19094
	.byte	25
	.byte	'Os_FunctionEntryType',0,39,183,2,16
	.word	19108
	.byte	29
	.byte	'Os_MeterInfoType_s',0,39,193,2,16,48,11
	.byte	'elapsed',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'previous',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'max',0
	.word	141
	.byte	4,2,35,8,11
	.byte	'cumulative',0
	.word	141
	.byte	4,2,35,12,11
	.byte	'stackbase',0
	.word	18431
	.byte	8,2,35,16,11
	.byte	'stackusage',0
	.word	18431
	.byte	8,2,35,24,11
	.byte	'stackmax',0
	.word	18431
	.byte	8,2,35,32,11
	.byte	'stackbudget',0
	.word	18431
	.byte	8,2,35,40,0,25
	.byte	'Os_MeterInfoType',0,39,202,2,3
	.word	19143
	.byte	6
	.word	19143
	.byte	25
	.byte	'Os_MeterInfoRefType',0,39,203,2,50
	.word	19341
	.byte	25
	.byte	'EventMaskType',0,39,206,2,15
	.word	297
	.byte	25
	.byte	'Os_imaskType',0,39,211,2,16
	.word	141
	.byte	29
	.byte	'Os_ISRDynType_s',0,39,213,2,16,48,11
	.byte	'meter',0
	.word	19143
	.byte	48,2,35,0,0,25
	.byte	'Os_ISRDynType',0,39,215,2,3
	.word	19420
	.byte	6
	.word	19420
	.byte	7
	.word	19481
	.byte	29
	.byte	'Os_ISRType_s',0,39,216,2,16,24,11
	.byte	'entry_function',0
	.word	18524
	.byte	4,2,35,0,11
	.byte	'dynamic',0
	.word	19486
	.byte	4,2,35,4,11
	.byte	'imask',0
	.word	141
	.byte	4,2,35,8,11
	.byte	'stackbudget',0
	.word	18431
	.byte	8,2,35,12,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,20,11
	.byte	'application',0
	.word	297
	.byte	1,2,35,21,0,25
	.byte	'Os_ISRType',0,39,223,2,3
	.word	19491
	.byte	6
	.word	18516
	.byte	7
	.word	19491
	.byte	6
	.word	19650
	.byte	25
	.byte	'ISRType',0,39,224,2,46
	.word	19655
	.byte	25
	.byte	'Os_bitmask',0,39,239,2,22
	.word	141
	.byte	25
	.byte	'Os_pset0Type',0,39,240,2,20
	.word	141
	.byte	25
	.byte	'Os_pset1Type',0,39,241,2,20
	.word	141
	.byte	25
	.byte	'Os_pset2Type',0,39,242,2,20
	.word	141
	.byte	12,39,243,2,9,4,11
	.byte	'p0',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'p1',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'p2',0
	.word	141
	.byte	4,2,35,0,0,25
	.byte	'Os_psetType',0,39,247,2,3
	.word	19763
	.byte	12,39,249,2,9,4,11
	.byte	't0',0
	.word	141
	.byte	4,2,35,0,11
	.byte	't1',0
	.word	141
	.byte	4,2,35,0,11
	.byte	't2',0
	.word	141
	.byte	4,2,35,0,0,25
	.byte	'Os_tpmaskType',0,39,253,2,3
	.word	19827
	.byte	25
	.byte	'Os_ActivationCountType',0,39,254,2,23
	.word	297
	.byte	29
	.byte	'Os_TaskDynType_s',0,39,128,3,16,120,11
	.byte	'terminate_jump_buf',0
	.word	18380
	.byte	68,2,35,0,11
	.byte	'meter',0
	.word	19143
	.byte	48,2,35,68,11
	.byte	'activation_count',0
	.word	297
	.byte	1,2,35,116,0,25
	.byte	'Os_TaskDynType',0,39,132,3,3
	.word	19925
	.byte	13,68
	.word	18349
	.byte	14,0,0,6
	.word	19925
	.byte	7
	.word	20051
	.byte	29
	.byte	'Os_TaskType_s',0,39,134,3,16,40,11
	.byte	'dynamic',0
	.word	20056
	.byte	4,2,35,0,11
	.byte	'entry_function',0
	.word	18524
	.byte	4,2,35,4,11
	.byte	'pset',0
	.word	19763
	.byte	4,2,35,8,11
	.byte	'base_tpmask',0
	.word	19827
	.byte	4,2,35,12,11
	.byte	'tpmask',0
	.word	19827
	.byte	4,2,35,16,11
	.byte	'core_id',0
	.word	215
	.byte	2,2,35,20,11
	.byte	'index',0
	.word	141
	.byte	4,2,35,24,11
	.byte	'stackbudget',0
	.word	18431
	.byte	8,2,35,28,11
	.byte	'activation_count',0
	.word	297
	.byte	1,2,35,36,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,37,11
	.byte	'application',0
	.word	297
	.byte	1,2,35,38,0,25
	.byte	'Os_TaskType',0,39,146,3,3
	.word	20061
	.byte	7
	.word	20061
	.byte	6
	.word	20311
	.byte	25
	.byte	'TaskType',0,39,147,3,47
	.word	20316
	.byte	32
	.byte	'Os_TaskStateType',0,39,155,3,6,4,27
	.byte	'SUSPENDED',0,0,27
	.byte	'READY',0,1,27
	.byte	'WAITING',0,2,27
	.byte	'RUNNING',0,3,0,25
	.byte	'TaskStateType',0,39,156,3,31
	.word	20339
	.byte	12,39,167,3,3,4,11
	.byte	'tpmask',0
	.word	19827
	.byte	4,2,35,0,0,29
	.byte	'Os_ResourceDynType_s',0,39,166,3,16,4,11
	.byte	'saved_priority',0
	.word	20426
	.byte	4,2,35,0,0,25
	.byte	'Os_ResourceDynType',0,39,170,3,3
	.word	20449
	.byte	6
	.word	20449
	.byte	7
	.word	20529
	.byte	29
	.byte	'Os_ResourceType_s',0,39,171,3,16,12,11
	.byte	'dynamic',0
	.word	20534
	.byte	4,2,35,0,11
	.byte	'tpmask',0
	.word	19827
	.byte	4,2,35,4,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,8,0,25
	.byte	'Os_ResourceType',0,39,175,3,3
	.word	20539
	.byte	10,39,181,3,9,12,11
	.byte	'maxallowedvalue',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'ticksperbase',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'mincycle',0
	.word	141
	.byte	4,2,35,8,0,25
	.byte	'AlarmBaseType',0,39,185,3,3
	.word	20638
	.byte	10,39,206,3,9,8,11
	.byte	'Running',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'Pending',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'Delay',0
	.word	141
	.byte	4,2,35,4,0,25
	.byte	'Os_CounterStatusType',0,39,210,3,3
	.word	20733
	.byte	33
	.word	297
	.byte	1,1,6
	.word	20819
	.byte	25
	.byte	'Os_CounterIncrAdvType',0,39,217,3,22
	.word	20826
	.byte	29
	.byte	's_swd',0,39,222,3,12,4,11
	.byte	'count',0
	.word	141
	.byte	4,2,35,0,0,12,39,221,3,3,4,11
	.byte	'sw',0
	.word	20862
	.byte	4,2,35,0,0,29
	.byte	'Os_CounterDynType_s',0,39,220,3,16,4,11
	.byte	'type_dependent',0
	.word	20890
	.byte	4,2,35,0,0,25
	.byte	'Os_CounterDynType',0,39,226,3,3
	.word	20909
	.byte	6
	.word	20909
	.byte	7
	.word	20987
	.byte	29
	.byte	'Os_CounterType_s',0,39,227,3,16,28,11
	.byte	'dynamic',0
	.word	20992
	.byte	4,2,35,0,11
	.byte	'advincr',0
	.word	20831
	.byte	4,2,35,4,11
	.byte	'base',0
	.word	20638
	.byte	12,2,35,8,11
	.byte	'core',0
	.word	10930
	.byte	4,2,35,20,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,24,11
	.byte	'application',0
	.word	297
	.byte	1,2,35,25,0,25
	.byte	'Os_CounterType',0,39,234,3,3
	.word	20997
	.byte	6
	.word	20819
	.byte	7
	.word	20997
	.byte	6
	.word	21149
	.byte	25
	.byte	'CounterType',0,39,235,3,52
	.word	21154
	.byte	32
	.byte	'Os_ScheduleTableStatusType',0,39,240,3,6,4,27
	.byte	'SCHEDULETABLE_STOPPED',0,0,27
	.byte	'SCHEDULETABLE_NEXT',0,1,27
	.byte	'SCHEDULETABLE_WAITING',0,2,27
	.byte	'SCHEDULETABLE_RUNNING',0,3,27
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,25
	.byte	'ScheduleTableStatusType',0,39,241,3,41
	.word	21180
	.byte	7
	.word	.L1456-.L325
	.byte	6
	.word	21380
	.byte	25
	.byte	'ScheduleTableType',0,39,128,4,58
	.word	21385
	.byte	29
	.byte	'Os_ScheduleTableDynType_s',0,39,130,4,16,16,11
	.byte	'match',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'next',0
	.word	21390
	.byte	4,2,35,4,11
	.byte	'state',0
	.word	21180
	.byte	4,2,35,8,11
	.byte	'config',0
	.word	215
	.byte	2,2,35,12,0,6
	.word	21417
	.byte	7
	.word	21510
.L1456:
	.byte	29
	.byte	'Os_ScheduleTableType_s',0,39,247,3,16,16,11
	.byte	'dynamic',0
	.word	21515
	.byte	4,2,35,0,11
	.byte	'counter',0
	.word	21159
	.byte	4,2,35,4,11
	.byte	'repeat',0
	.word	297
	.byte	1,2,35,8,11
	.byte	'config',0
	.word	215
	.byte	2,2,35,10,11
	.byte	'initial',0
	.word	297
	.byte	1,2,35,12,11
	.byte	'access',0
	.word	297
	.byte	1,2,35,13,11
	.byte	'application',0
	.word	297
	.byte	1,2,35,14,0,25
	.byte	'Os_ScheduleTableType',0,39,255,3,3
	.word	21520
	.byte	7
	.word	21520
	.byte	6
	.word	21700
	.byte	7
	.word	20997
	.byte	6
	.word	21710
	.byte	15
	.word	18824
	.byte	15
	.word	19763
	.byte	15
	.word	19660
	.byte	15
	.word	20321
	.byte	15
	.word	19827
	.byte	15
	.word	297
	.byte	15
	.word	20321
	.byte	29
	.byte	'Os_ControlledCoreType_s',0,39,251,6,16,112,11
	.byte	'TrapInfo',0
	.word	18260
	.byte	8,2,35,0,11
	.byte	'lock_taskaccess',0
	.word	21720
	.byte	4,2,35,8,11
	.byte	'ReadyTasks',0
	.word	21725
	.byte	4,2,35,12,11
	.byte	'RunningISR',0
	.word	21730
	.byte	4,2,35,16,11
	.byte	'RunningTask',0
	.word	21735
	.byte	4,2,35,20,11
	.byte	'RunningTPMask',0
	.word	21740
	.byte	4,2,35,24,11
	.byte	'CurrentMeteredObject',0
	.word	19346
	.byte	4,2,35,28,11
	.byte	'IdleMeter',0
	.word	19143
	.byte	48,2,35,32,11
	.byte	'AppAccess',0
	.word	297
	.byte	1,2,35,80,11
	.byte	'AppOverride',0
	.word	21745
	.byte	1,2,35,81,11
	.byte	'GetStackValueAdjust',0
	.word	18431
	.byte	8,2,35,84,11
	.byte	'InErrorHook',0
	.word	297
	.byte	1,2,35,92,11
	.byte	'ChainTaskRef',0
	.word	21750
	.byte	4,2,35,96,11
	.byte	'GetStackUsageAdjust',0
	.word	18431
	.byte	8,2,35,100,11
	.byte	'InProtectionHook',0
	.word	297
	.byte	1,2,35,108,11
	.byte	'CoreIsActive',0
	.word	297
	.byte	1,2,35,109,11
	.byte	'InShutdownHook',0
	.word	297
	.byte	1,2,35,110,0,25
	.byte	'Os_ControlledCoreType',0,39,141,7,3
	.word	21755
	.byte	6
	.word	141
	.byte	7
	.word	19491
	.byte	6
	.word	22211
	.byte	7
	.word	20061
	.byte	6
	.word	22221
	.byte	6
	.word	19143
	.byte	29
	.byte	'Os_AnyCoreType_s',0,39,151,7,16,96,11
	.byte	'DisableAllImask',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'SuspendAllImask',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'SuspendOSImask',0
	.word	141
	.byte	4,2,35,8,11
	.byte	'DisableAllCount',0
	.word	141
	.byte	4,2,35,12,11
	.byte	'SuspendAllCount',0
	.word	141
	.byte	4,2,35,16,11
	.byte	'SuspendOSCount',0
	.word	141
	.byte	4,2,35,20,11
	.byte	'RestartJumpBuf',0
	.word	18380
	.byte	68,2,35,24,11
	.byte	'Restartable',0
	.word	297
	.byte	1,2,35,92,0,25
	.byte	'Os_AnyCoreType',0,39,160,7,3
	.word	22236
	.byte	25
	.byte	'Can_TxObjPriorityClassType',0,40,219,3,16
	.word	141
	.byte	29
	.byte	'Can_TxHwObjectConfigType',0,40,231,3,16,8,11
	.byte	'MsgObjId',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'HwControllerId',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'TxObjPriorityClass',0
	.word	141
	.byte	4,2,35,4,0,25
	.byte	'Can_TxHwObjectConfigType',0,40,252,3,3
	.word	22513
	.byte	29
	.byte	'Can_RxHwObjectConfigType',0,40,129,4,16,12,11
	.byte	'MaskRef',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'MsgId',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'MsgObjId',0
	.word	297
	.byte	1,2,35,8,11
	.byte	'HwControllerId',0
	.word	297
	.byte	1,2,35,9,0,25
	.byte	'Can_RxHwObjectConfigType',0,40,147,4,3
	.word	22649
	.byte	13,4
	.word	297
	.byte	14,3,0,29
	.byte	'Can_ControllerMOMapConfigType',0,40,181,4,16,4,11
	.byte	'ControllerMOMap',0
	.word	22789
	.byte	4,2,35,0,0,25
	.byte	'Can_ControllerMOMapConfigType',0,40,184,4,3
	.word	22798
	.byte	29
	.byte	'Can_NPCRValueType',0,40,188,4,16,2,11
	.byte	'Can_NPCRValue',0
	.word	215
	.byte	2,2,35,0,0,25
	.byte	'Can_NPCRValueType',0,40,191,4,3
	.word	22899
	.byte	29
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,40,194,4,16,8,11
	.byte	'CanControllerBaudrate',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'CanControllerBaudrateCfg',0
	.word	215
	.byte	2,2,35,4,0,25
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,40,198,4,3
	.word	22974
	.byte	7
	.word	22974
	.byte	6
	.word	23139
	.byte	29
	.byte	'Can_BaudrateConfigPtrType',0,40,201,4,16,4,11
	.byte	'Can_kBaudrateConfigPtr',0
	.word	23144
	.byte	4,2,35,0,0,25
	.byte	'Can_BaudrateConfigPtrType',0,40,204,4,3
	.word	23149
	.byte	29
	.byte	'Can_EventHandlingType',0,40,226,4,16,4,11
	.byte	'CanEventType',0
	.word	22789
	.byte	4,2,35,0,0,25
	.byte	'Can_EventHandlingType',0,40,229,4,3
	.word	23249
	.byte	25
	.byte	'Rte_TransformerErrorCode',0,41,130,1,15
	.word	297
	.byte	25
	.byte	'Rte_TransformerClass',0,41,131,1,15
	.word	297
	.byte	10,41,168,1,9,12,11
	.byte	'in',0
	.word	10930
	.byte	4,2,35,0,11
	.byte	'out',0
	.word	10930
	.byte	4,2,35,4,11
	.byte	'used',0
	.word	215
	.byte	2,2,35,8,11
	.byte	'lost_data',0
	.word	297
	.byte	1,2,35,10,0,25
	.byte	'Rte_QDynType',0,41,173,1,3
	.word	23395
	.byte	26,41,175,1,9,4,27
	.byte	'RTE_DRA',0,0,27
	.byte	'RTE_WOWP',0,1,27
	.byte	'RTE_TASK',0,2,27
	.byte	'RTE_ARE',0,3,27
	.byte	'RTE_EV',0,4,27
	.byte	'RTE_MSI',0,5,0,25
	.byte	'Rte_NotificationType',0,41,182,1,3
	.word	23482
	.byte	13,128,8
	.word	297
	.byte	14,255,7,0,25
	.byte	'Impl_NVM_DstPtrType_1024',0,42,50,15
	.word	23580
	.byte	25
	.byte	'CanIf_u32_impl',0,42,69,16
	.word	141
	.byte	25
	.byte	'CanIf_u16_impl',0,42,71,16
	.word	215
	.byte	25
	.byte	'CanIf_u8_impl',0,42,73,15
	.word	297
	.byte	25
	.byte	'CanIf_ControllerModeType_Enum_impl',0,42,88,15
	.word	297
	.byte	25
	.byte	'CanIf_PduModeType_Enum_impl',0,42,90,15
	.word	297
	.byte	10,42,92,9,2,11
	.byte	'DeviceMode',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'ChannelMode',0
	.word	297
	.byte	1,2,35,1,0,25
	.byte	'CanIf_ControllerStateType_struct_impl',0,42,95,3
	.word	23771
	.byte	25
	.byte	'CanIf_NotifStatusType_Enum_impl',0,42,100,15
	.word	297
	.byte	25
	.byte	'CanSM_boolean_Impl',0,42,120,15
	.word	297
	.byte	25
	.byte	'CanSM_u8_Impl',0,42,123,15
	.word	297
	.byte	25
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,42,128,1,15
	.word	297
	.byte	25
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,42,132,1,15
	.word	297
	.byte	25
	.byte	'CanSM_u16_Impl',0,42,136,1,16
	.word	215
	.byte	25
	.byte	'CanSM_TimerStateType_Enum_impl',0,42,138,1,15
	.word	297
	.byte	10,42,140,1,9,4,11
	.byte	'cntTick_u16',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'stTimer',0
	.word	297
	.byte	1,2,35,2,0,25
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,42,143,1,3
	.word	24112
	.byte	25
	.byte	'Com_impl_u16',0,42,154,1,16
	.word	215
	.byte	25
	.byte	'Com_impl_u8',0,42,157,1,15
	.word	297
	.byte	25
	.byte	'ComM_uint32_Impl',0,42,173,1,16
	.word	141
	.byte	25
	.byte	'ComM_uint16_Impl',0,42,175,1,16
	.word	215
	.byte	25
	.byte	'ComM_uint8_Impl',0,42,177,1,15
	.word	297
	.byte	25
	.byte	'ComM_bool_Impl',0,42,179,1,15
	.word	297
	.byte	10,42,181,1,9,24,11
	.byte	'ChannelState_e',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'LightTimeoutCtr_u32',0
	.word	141
	.byte	4,2,35,4,11
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	215
	.byte	2,2,35,8,11
	.byte	'ChannelMode_u8',0
	.word	297
	.byte	1,2,35,10,11
	.byte	'BusSmMode_u8',0
	.word	297
	.byte	1,2,35,11,11
	.byte	'UserRequestCtr_u8',0
	.word	297
	.byte	1,2,35,12,11
	.byte	'PassiveRequestState_u8',0
	.word	297
	.byte	1,2,35,13,11
	.byte	'PncRequestCtr_u8',0
	.word	297
	.byte	1,2,35,14,11
	.byte	'InhibitionReqStatus_u8',0
	.word	297
	.byte	1,2,35,15,11
	.byte	'NmNetworkRequestStatus_b',0
	.word	297
	.byte	1,2,35,16,11
	.byte	'DiagnosticRequestState_b',0
	.word	297
	.byte	1,2,35,17,11
	.byte	'CommunicationAllowed_b',0
	.word	297
	.byte	1,2,35,18,11
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	297
	.byte	1,2,35,19,11
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	297
	.byte	1,2,35,20,11
	.byte	'NmNetworkModeStatus_b',0
	.word	297
	.byte	1,2,35,21,0,25
	.byte	'ComM_ChannelStruct_Impl',0,42,197,1,3
	.word	24344
	.byte	10,42,206,1,9,10,11
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'LimitToNoComCtr_u16',0
	.word	215
	.byte	2,2,35,2,11
	.byte	'RequestedUserMode_t',0
	.word	297
	.byte	1,2,35,4,11
	.byte	'IndicatedUserMode_t',0
	.word	297
	.byte	1,2,35,5,11
	.byte	'numChannelsInFullCom_u8',0
	.word	297
	.byte	1,2,35,6,11
	.byte	'numChannelsInSilentCom_u8',0
	.word	297
	.byte	1,2,35,7,11
	.byte	'numChannelsInNoCom_u8',0
	.word	297
	.byte	1,2,35,8,0,25
	.byte	'ComM_UserStruct_Impl',0,42,214,1,3
	.word	24848
	.byte	25
	.byte	'Dcm_IOOperationResponseType',0,42,252,1,15
	.word	297
	.byte	25
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	42,138,2,15
	.word	297
	.byte	25
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,42,146,2,15
	.word	297
	.byte	25
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,42,150,2,15
	.word	297
	.byte	25
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,42,154,2,15
	.word	297
	.byte	25
	.byte	'Dem_DTCFormatType',0,42,160,2,15
	.word	297
	.byte	25
	.byte	'Dem_DTCOriginType',0,42,162,2,15
	.word	297
	.byte	25
	.byte	'Dem_EventIdType',0,42,168,2,16
	.word	215
	.byte	25
	.byte	'Dem_EventStatusType',0,42,170,2,15
	.word	297
	.byte	25
	.byte	'Dem_InitMonitorReasonType',0,42,176,2,15
	.word	297
	.byte	25
	.byte	'Dem_OperationCycleIdType',0,42,179,2,15
	.word	297
	.byte	25
	.byte	'NvM_BlockIdType',0,42,215,2,16
	.word	215
	.byte	25
	.byte	'NvM_RequestResultType',0,42,225,2,15
	.word	297
	.byte	25
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,42,243,3,34
	.word	23591
	.byte	13,128,8
	.word	297
	.byte	14,255,7,0,25
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,42,246,3,34
	.word	23591
	.byte	25
	.byte	'Dem_DTCGroupIdType',0,43,49,15
	.word	297
	.byte	25
	.byte	'Dem_DtcIdType',0,43,50,16
	.word	215
	.byte	25
	.byte	'Dem_ClientIdType',0,43,53,15
	.word	297
	.byte	25
	.byte	'Dem_DtcCodeType',0,43,55,16
	.word	141
	.byte	25
	.byte	'Dem_boolean_least',0,43,60,17
	.word	297
	.byte	25
	.byte	'Dem_EventCategoryType',0,43,62,15
	.word	297
	.byte	25
	.byte	'Dem_ReturnGetExtendedDataRecordByDTCType',0,43,110,15
	.word	297
	.byte	25
	.byte	'Dem_ReturnGetSizeOfExtendedDataRecordByDTCType',0,43,132,1,15
	.word	297
	.byte	25
	.byte	'Dem_ReturnGetFreezeFrameDataByDTCType',0,43,154,1,15
	.word	297
	.byte	25
	.byte	'Dem_ReturnGetSizeOfFreezeFrameByDTCType',0,43,176,1,15
	.word	297
	.byte	25
	.byte	'Dem_DTCSeverityType',0,43,217,1,15
	.word	297
	.byte	25
	.byte	'Dem_DebugDataType',0,43,131,3,16
	.word	141
	.byte	25
	.byte	'Dem_DTCKindType',0,43,145,3,16
	.word	297
	.byte	25
	.byte	'Dem_TriggerType',0,43,167,3,15
	.word	297
	.byte	25
	.byte	'rba_BswSrv_uint64',0,1,66,28
	.word	17656
	.byte	25
	.byte	'Dem_EventIdIterator',0,4,27,22
	.word	7735
	.byte	25
	.byte	'Dem_DtcIdIterator',0,4,197,1,22
	.word	7735
	.byte	25
	.byte	'Dem_DtcGroupIdIterator',0,4,230,1,21
	.word	7735
	.byte	7
	.word	215
	.byte	6
	.word	26473
	.byte	10,4,171,2,9,8,11
	.byte	'it',0
	.word	26478
	.byte	4,2,35,0,11
	.byte	'end',0
	.word	26478
	.byte	4,2,35,4,0,25
	.byte	'Dem_EventIdListIterator',0,4,174,2,3
	.word	26483
	.byte	10,4,213,2,9,4,11
	.byte	'it',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'end',0
	.word	215
	.byte	2,2,35,2,0,25
	.byte	'Dem_DtcIdListIterator',0,4,216,2,3
	.word	26548
	.byte	25
	.byte	'Dem_EvtStateType',0,44,151,1,15
	.word	297
	.byte	25
	.byte	'Dem_EvMemOccurrenceCounterType',0,7,90,21
	.word	297
	.byte	25
	.byte	'Dem_EvMemAgingCounterType',0,7,99,21
	.word	297
	.byte	25
	.byte	'Dem_EvMemHdrType',0,7,141,1,4
	.word	980
	.byte	25
	.byte	'Dem_EvMemEventMemoryType',0,7,213,1,4
	.word	1010
	.byte	25
	.byte	'Dem_InternalEnvData',0,6,25,3
	.word	1183
	.byte	6
	.word	297
	.byte	34
	.word	297
	.byte	1,1,31
	.word	26798
	.byte	0,6
	.word	26803
	.byte	25
	.byte	'Dem_ReadExternalDataElementFnc',0,5,11,26
	.word	26816
	.byte	7
	.word	1183
	.byte	6
	.word	26860
	.byte	34
	.word	297
	.byte	1,1,31
	.word	26798
	.byte	31
	.word	26865
	.byte	0,6
	.word	26870
	.byte	25
	.byte	'Dem_ReadInternalDataElementFnc',0,5,12,26
	.word	26888
	.byte	10,5,15,9,12,11
	.byte	'ReadExternalFnc',0
	.word	26821
	.byte	4,2,35,0,11
	.byte	'ReadInternalFnc',0
	.word	26893
	.byte	4,2,35,4,11
	.byte	'Size',0
	.word	297
	.byte	1,2,35,8,11
	.byte	'captureOnRetrieve',0
	.word	297
	.byte	1,2,35,9,0,25
	.byte	'Dem_EnvDataElement',0,5,25,3
	.word	26932
	.byte	6
	.word	26803
	.byte	6
	.word	26870
	.byte	13,48
	.word	26932
	.byte	14,3,0,7
	.word	27066
	.byte	35
	.byte	'Dem_Cfg_EnvDataElement',0,5,42,33
	.word	27075
	.byte	1,1,25
	.byte	'Dem_EnvTriggerParamType',0,8,14,3
	.word	2242
	.byte	10,9,14,9,6,11
	.byte	'recordNumber',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'trigger',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'update',0
	.word	297
	.byte	1,2,35,2,11
	.byte	'dataElementIndex',0
	.word	215
	.byte	2,2,35,4,0,25
	.byte	'Dem_EnvExtDataRec',0,9,20,3
	.word	27145
	.byte	36
	.word	297
	.byte	37,0,7
	.word	27258
	.byte	35
	.byte	'Dem_Cfg_EnvExtData2DataElement',0,9,24,20
	.word	27265
	.byte	1,1,13,12
	.word	27145
	.byte	14,1,0,7
	.word	27311
	.byte	35
	.byte	'Dem_Cfg_EnvExtDataRec',0,9,25,32
	.word	27320
	.byte	1,1,10,10,12,9,4,11
	.byte	'extDataRecIndex',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'rawByteSize',0
	.word	215
	.byte	2,2,35,2,0,25
	.byte	'Dem_EnvExtData',0,10,16,3
	.word	27357
	.byte	7
	.word	27258
	.byte	35
	.byte	'Dem_Cfg_EnvExtData2ExtDataRec',0,10,19,20
	.word	27432
	.byte	1,1,13,8
	.word	27357
	.byte	14,1,0,7
	.word	27477
	.byte	35
	.byte	'Dem_Cfg_EnvExtData',0,10,20,29
	.word	27486
	.byte	1,1,10,11,14,9,4,11
	.byte	'dataElementIndex',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'identifier',0
	.word	215
	.byte	2,2,35,2,0,25
	.byte	'Dem_EnvDid',0,11,18,3
	.word	27520
	.byte	7
	.word	27258
	.byte	35
	.byte	'Dem_Cfg_EnvDid2DataElement',0,11,21,20
	.word	27591
	.byte	1,1,13,12
	.word	27520
	.byte	14,2,0,7
	.word	27633
	.byte	35
	.byte	'Dem_Cfg_EnvDid',0,11,22,1
	.word	27642
	.byte	1,1,10,12,12,9,4,11
	.byte	'didIndex',0
	.word	215
	.byte	2,2,35,0,11
	.byte	'rawByteSize',0
	.word	215
	.byte	2,2,35,2,0,25
	.byte	'Dem_EnvFreezeFrame',0,12,16,3
	.word	27672
	.byte	7
	.word	27258
	.byte	35
	.byte	'Dem_Cfg_EnvFreezeFrame2Did',0,12,19,20
	.word	27744
	.byte	1,1,13,8
	.word	27672
	.byte	14,1,0,7
	.word	27786
	.byte	35
	.byte	'Dem_Cfg_EnvFreezeFrame',0,12,20,1
	.word	27795
	.byte	1,1,25
	.byte	'Dem_EnCoList',0,45,31,15
	.word	297
	.byte	25
	.byte	'Dem_OperationCycleList',0,46,23,15
	.word	297
	.byte	25
	.byte	'Dem_StoCoList',0,47,32,15
	.word	297
	.byte	26,48,31,9,4,27
	.byte	'MEMIF_JOB_OK',0,0,27
	.byte	'MEMIF_JOB_FAILED',0,1,27
	.byte	'MEMIF_JOB_PENDING',0,2,27
	.byte	'MEMIF_JOB_CANCELED',0,3,27
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,27
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,25
	.byte	'MemIf_JobResultType',0,48,39,2
	.word	27907
	.byte	26,49,49,9,4,27
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,27
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,27
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,27
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,27
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,27
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,27
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,25
	.byte	'NvM_Prv_Activities_ten',0,49,58,3
	.word	28065
	.byte	26,49,104,9,4,27
	.byte	'NvM_Prv_idJob_Idle_e',0,0,27
	.byte	'NvM_Prv_idJob_Read_e',0,1,27
	.byte	'NvM_Prv_idJob_Write_e',0,2,27
	.byte	'NvM_Prv_idJob_Erase_e',0,3,27
	.byte	'NvM_Prv_idJob_Restore_e',0,4,27
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,27
	.byte	'NvM_Prv_idJob_Validate_e',0,6,27
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,27
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,27
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,27
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,27
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,27
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,27
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,25
	.byte	'NvM_Prv_idJob_ten',0,49,115,3
	.word	28306
	.byte	25
	.byte	'NvM_Prv_ServiceBit_tuo',0,49,168,1,16
	.word	215
	.byte	25
	.byte	'NvM_Prv_idService_tuo',0,49,173,1,15
	.word	297
	.byte	25
	.byte	'NvM_Prv_idQueue_tuo',0,49,206,1,15
	.word	297
	.byte	10,49,210,1,9,12,11
	.byte	'idService_uo',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'idBlock_uo',0
	.word	215
	.byte	2,2,35,2,11
	.byte	'ServiceBit_uo',0
	.word	215
	.byte	2,2,35,4,11
	.byte	'BlockData_pv',0
	.word	10930
	.byte	4,2,35,8,0,25
	.byte	'NvM_Prv_QueueEntry_tst',0,49,225,1,3
	.word	28863
	.byte	10,49,227,1,9,20,11
	.byte	'idJob_en',0
	.word	28306
	.byte	4,2,35,0,11
	.byte	'idBlock_uo',0
	.word	215
	.byte	2,2,35,4,11
	.byte	'RamBlock_pu8',0
	.word	314
	.byte	4,2,35,8,11
	.byte	'idxDataset_u8',0
	.word	297
	.byte	1,2,35,12,11
	.byte	'Result_en',0
	.word	27907
	.byte	4,2,35,16,0,25
	.byte	'NvM_Prv_JobData_tst',0,49,240,1,3
	.word	28989
	.byte	13,5
	.word	297
	.byte	14,4,0,13,10
	.word	215
	.byte	14,4,0,10,50,9,9,18,11
	.byte	'OperationCycleStates',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'OperationCycleQualified',0
	.word	297
	.byte	1,2,35,1,11
	.byte	'Overflow',0
	.word	29127
	.byte	5,2,35,2,11
	.byte	'DtcIdsByOccurrenceTime',0
	.word	29136
	.byte	10,2,35,8,0,25
	.byte	'Dem_GenericNvDataType',0,50,24,4
	.word	29145
	.byte	25
	.byte	'Dem_NvmBlockIdType',0,51,14,34
	.word	297
	.byte	12,51,16,9,20,11
	.byte	'evMemData',0
	.word	1010
	.byte	20,2,35,0,11
	.byte	'genericNvData',0
	.word	29145
	.byte	18,2,35,0,0,25
	.byte	'Dem_NvMStorageBufferData',0,51,37,3
	.word	29321
	.byte	25
	.byte	'Dem_NvmBlockStatusType',0,51,59,15
	.word	297
	.byte	25
	.byte	'Dem_NvmResultType',0,51,78,31
	.word	297
	.byte	25
	.byte	'Dem_EvtClearAllowedFncType',0,20,12,26
	.word	26816
	.byte	34
	.word	297
	.byte	1,1,31
	.word	297
	.byte	0,6
	.word	29494
	.byte	25
	.byte	'Dem_InitMForEAllowedFncType',0,21,38,27
	.word	29507
	.byte	34
	.word	7735
	.byte	1,1,31
	.word	215
	.byte	31
	.word	26798
	.byte	31
	.word	10940
	.byte	31
	.word	215
	.byte	0,6
	.word	29548
	.byte	25
	.byte	'Dem_DebFilter',0,52,12,23
	.word	29576
	.byte	2
	.byte	'long int',0,4,5,6
	.word	29603
	.byte	30,1,1,31
	.word	10940
	.byte	31
	.word	215
	.byte	31
	.word	29615
	.byte	31
	.word	29615
	.byte	0,6
	.word	29620
	.byte	25
	.byte	'Dem_DebGetLimits',0,52,13,23
	.word	29644
	.byte	30,1,1,31
	.word	215
	.byte	31
	.word	10940
	.byte	31
	.word	215
	.byte	0,6
	.word	29674
	.byte	25
	.byte	'Dem_DebCyclic',0,52,14,16
	.word	29693
	.byte	25
	.byte	'Dem_DebouncedActionType',0,52,35,21
	.word	7735
	.byte	12,53,37,9,4,11
	.byte	'EnforceAlignment',0
	.word	141
	.byte	4,2,35,0,11
	.byte	'Buffer',0
	.word	22789
	.byte	4,2,35,0,0,25
	.byte	'Dem_EvBuffEnvDataAlignedType',0,53,47,3
	.word	29752
	.byte	10,53,49,9,16,11
	.byte	'envData',0
	.word	29752
	.byte	4,2,35,0,11
	.byte	'eventType',0
	.word	297
	.byte	1,2,35,4,11
	.byte	'eventId',0
	.word	215
	.byte	2,2,35,6,11
	.byte	'debug0',0
	.word	141
	.byte	4,2,35,8,11
	.byte	'debug1',0
	.word	141
	.byte	4,2,35,12,0,25
	.byte	'Dem_EvBuffEvent',0,53,75,2
	.word	29837
	.byte	10,29,19,9,2,11
	.byte	'extDataId',0
	.word	297
	.byte	1,2,35,0,11
	.byte	'freezeFrameId',0
	.word	297
	.byte	1,2,35,1,0,25
	.byte	'Dem_EnvDataMap',0,29,23,3
	.word	29952
	.byte	13,12
	.word	29952
	.byte	14,5,0
.L1253:
	.byte	7
	.word	30023
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L326:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,38,0,73
	.byte	19,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,9,11,1,0,0,10,19,1,58,15,59,15,57,15,11,15,0
	.byte	0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,1,1,11,15,73,19,0,0,14,33,0
	.byte	47,15,0,0,15,53,0,73,19,0,0,16,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,17,59,0,3
	.byte	8,0,0,18,46,1,49,19,0,0,19,5,0,49,19,0,0,20,29,1,49,19,0,0,21,11,0,49,19,0,0,22,11,1,49,19,0,0,23,46,0
	.byte	3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,24,21,0,54,15,0,0,25,22,0,3,8,58,15,59,15,57,15,73,19,0,0
	.byte	26,4,1,58,15,59,15,57,15,11,15,0,0,27,40,0,3,8,28,13,0,0,28,21,0,54,15,39,12,0,0,29,19,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,30,21,1,54,15,39,12,0,0,31,5,0,73,19,0,0,32,4,1,3,8,58,15,59,15,57,15,11,15,0,0,33
	.byte	21,0,73,19,54,15,39,12,0,0,34,21,1,73,19,54,15,39,12,0,0,35,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60
	.byte	12,0,0,36,1,1,73,19,0,0,37,33,0,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L327:
	.word	.L1458-.L1457
.L1457:
	.half	3
	.word	.L1460-.L1459
.L1459:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_InternalEnvData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemTypes.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvTrigger.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_BitArray.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\enco\\Dem_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_ByteOrderUtils.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_Deb.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientClearMachine.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemAging.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMem.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFFRecNumeration.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientHandlingTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_NodeId.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\api\\Dem_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_StorageCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_GenericNvData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_DebBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evbuff\\Dem_EvBuffEvent.h',0,0,0,0,0
.L1460:
.L1458:
	.sdecl	'.debug_info',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_info'
.L328:
	.word	982
	.half	3
	.word	.L329
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L331,.L330
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvCaptureED',0,1,15,6,1,1,1
	.word	.L297,.L400,.L296
	.byte	4
	.byte	'EventId',0,1,15,39
	.word	.L401,.L402
	.byte	4
	.byte	'dest',0,1,15,55
	.word	.L403,.L404
	.byte	4
	.byte	'destSize',0,1,15,68
	.word	.L401,.L405
	.byte	4
	.byte	'debug0',0,1,15,78
	.word	.L406,.L407
	.byte	4
	.byte	'debug1',0,1,15,78
	.word	.L406,.L408
	.byte	5
	.word	.L297,.L400
	.byte	6
	.byte	'writepos',0,1,17,9
	.word	.L403,.L409
	.byte	6
	.byte	'size',0,1,18,9
	.word	.L401,.L410
	.byte	6
	.byte	'edId',0,1,19,8
	.word	.L411,.L412
	.byte	6
	.byte	'internalEnvData',0,1,20,25
	.word	.L413,.L414
	.byte	7
	.word	.L415,.L2,.L416
	.byte	8
	.word	.L417,.L418
	.byte	9
	.word	.L419,.L2,.L416
	.byte	0,7
	.word	.L420,.L421,.L9
	.byte	8
	.word	.L422,.L423
	.byte	9
	.word	.L424,.L421,.L9
	.byte	0,7
	.word	.L420,.L10,.L11
	.byte	8
	.word	.L422,.L423
	.byte	9
	.word	.L424,.L10,.L11
	.byte	0,7
	.word	.L425,.L426,.L427
	.byte	8
	.word	.L428,.L429
	.byte	8
	.word	.L430,.L431
	.byte	8
	.word	.L432,.L433
	.byte	8
	.word	.L434,.L435
	.byte	10
	.word	.L436,.L437
	.byte	6
	.byte	'i',0,2,26,15
	.word	.L439,.L440
	.byte	6
	.byte	'end',0,2,27,15
	.word	.L441,.L442
	.byte	7
	.word	.L443,.L444,.L445
	.byte	8
	.word	.L446,.L447
	.byte	8
	.word	.L448,.L449
	.byte	8
	.word	.L450,.L451
	.byte	8
	.word	.L452,.L453
	.byte	11
	.word	.L454,.L444,.L445
	.byte	6
	.byte	'i',0,3,47,11
	.word	.L406,.L455
	.byte	7
	.word	.L456,.L457,.L458
	.byte	8
	.word	.L459,.L460
	.byte	8
	.word	.L461,.L462
	.byte	8
	.word	.L463,.L464
	.byte	8
	.word	.L465,.L466
	.byte	11
	.word	.L467,.L457,.L458
	.byte	6
	.byte	'result',0,4,53,17
	.word	.L411,.L468
	.byte	7
	.word	.L469,.L470,.L471
	.byte	8
	.word	.L472,.L473
	.byte	8
	.word	.L474,.L475
	.byte	11
	.word	.L476,.L470,.L471
	.byte	7
	.word	.L477,.L478,.L471
	.byte	8
	.word	.L479,.L480
	.byte	8
	.word	.L481,.L482
	.byte	8
	.word	.L483,.L484
	.byte	9
	.word	.L485,.L478,.L471
	.byte	0,0,0,7
	.word	.L469,.L486,.L22
	.byte	8
	.word	.L472,.L473
	.byte	8
	.word	.L474,.L475
	.byte	11
	.word	.L476,.L486,.L22
	.byte	7
	.word	.L477,.L487,.L22
	.byte	8
	.word	.L479,.L480
	.byte	8
	.word	.L481,.L482
	.byte	8
	.word	.L483,.L484
	.byte	9
	.word	.L485,.L487,.L22
	.byte	0,0,0,0,0,0,0,0,0,7
	.word	.L425,.L438,.L7
	.byte	8
	.word	.L428,.L429
	.byte	8
	.word	.L430,.L431
	.byte	8
	.word	.L432,.L433
	.byte	8
	.word	.L434,.L435
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_abbrev'
.L329:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_line'
.L330:
	.word	.L1462-.L1461
.L1461:
	.half	3
	.word	.L1464-.L1463
.L1463:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1464:
	.byte	5,6,7,0,5,2
	.word	.L297
	.byte	3,14,1,5,15,9
	.half	.L1260-.L297
	.byte	3,4,1,5,41,9
	.half	.L1465-.L1260
	.byte	1,5,50,9
	.half	.L1466-.L1465
	.byte	1,5,29,9
	.half	.L1262-.L1466
	.byte	3,2,1,5,28,9
	.half	.L1467-.L1262
	.byte	3,2,1,9
	.half	.L1468-.L1467
	.byte	3,1,1,5,37,9
	.half	.L1469-.L1468
	.byte	3,2,1,5,35,9
	.half	.L1470-.L1469
	.byte	1,4,5,5,26,9
	.half	.L2-.L1470
	.byte	3,124,1,5,12,9
	.half	.L1471-.L2
	.byte	1,5,38,7,9
	.half	.L1472-.L1471
	.byte	1,5,26,9
	.half	.L1473-.L1472
	.byte	1,5,4,9
	.half	.L3-.L1473
	.byte	1,4,1,5,2,9
	.half	.L5-.L3
	.byte	3,6,1,7,9
	.half	.L416-.L5
	.byte	1,9
	.half	.L6-.L416
	.byte	3,1,1,4,2,5,9,7,9
	.half	.L421-.L6
	.byte	3,12,1,5,27,9
	.half	.L8-.L421
	.byte	1,5,38,9
	.half	.L1474-.L8
	.byte	1,5,2,9
	.half	.L1475-.L1474
	.byte	1,4,1,5,3,9
	.half	.L9-.L1475
	.byte	3,118,1,7,9
	.half	.L1476-.L9
	.byte	1,4,2,5,27,9
	.half	.L10-.L1476
	.byte	3,10,1,5,38,9
	.half	.L1477-.L10
	.byte	1,5,2,9
	.half	.L1263-.L1477
	.byte	1,4,1,5,27,9
	.half	.L11-.L1263
	.byte	3,121,1,4,2,5,28,9
	.half	.L426-.L11
	.byte	3,121,1,5,11,9
	.half	.L1266-.L426
	.byte	3,2,1,5,44,9
	.half	.L1478-.L1266
	.byte	1,5,111,9
	.half	.L1261-.L1478
	.byte	1,5,22,9
	.half	.L13-.L1261
	.byte	3,2,1,5,51,9
	.half	.L1479-.L13
	.byte	1,4,1,5,27,9
	.half	.L1480-.L1479
	.byte	3,3,1,5,44,9
	.half	.L427-.L1480
	.byte	1,4,2,5,70,9
	.half	.L438-.L427
	.byte	3,125,1,4,3,5,34,9
	.half	.L444-.L438
	.byte	3,17,1,5,13,9
	.half	.L1481-.L444
	.byte	1,5,50,9
	.half	.L1482-.L1481
	.byte	1,5,65,9
	.half	.L1267-.L1482
	.byte	3,1,1,5,24,9
	.half	.L15-.L1267
	.byte	3,3,1,5,54,9
	.half	.L1483-.L15
	.byte	1,4,4,5,24,9
	.half	.L457-.L1483
	.byte	3,1,1,5,2,9
	.half	.L1268-.L457
	.byte	3,1,1,5,44,9
	.half	.L17-.L1268
	.byte	3,2,1,5,7,9
	.half	.L1484-.L17
	.byte	1,5,44,7,9
	.half	.L1485-.L1484
	.byte	3,3,1,5,3,9
	.half	.L1486-.L1485
	.byte	1,5,69,7,9
	.half	.L1487-.L1486
	.byte	3,2,1,5,11,9
	.half	.L1269-.L1487
	.byte	1,5,44,9
	.half	.L19-.L1269
	.byte	3,5,1,5,3,9
	.half	.L1488-.L19
	.byte	1,5,69,7,9
	.half	.L1489-.L1488
	.byte	3,2,1,5,77,9
	.half	.L1490-.L1489
	.byte	1,5,11,9
	.half	.L1270-.L1490
	.byte	1,5,3,9
	.half	.L20-.L1270
	.byte	3,4,1,5,70,7,9
	.half	.L1491-.L20
	.byte	3,2,1,5,2,9
	.half	.L470-.L1491
	.byte	3,102,1,4,6,5,54,9
	.half	.L478-.L470
	.byte	3,109,1,4,4,5,4,9
	.half	.L471-.L478
	.byte	3,46,1,5,3,9
	.half	.L21-.L471
	.byte	3,125,1,5,69,9
	.half	.L18-.L21
	.byte	3,8,1,5,2,9
	.half	.L486-.L18
	.byte	3,96,1,4,6,5,54,9
	.half	.L487-.L486
	.byte	3,109,1,4,4,5,3,9
	.half	.L22-.L487
	.byte	3,54,1,5,49,9
	.half	.L1492-.L22
	.byte	1,5,9,9
	.half	.L1493-.L1492
	.byte	1,4,3,5,10,9
	.half	.L458-.L1493
	.byte	3,95,1,5,48,9
	.half	.L14-.L458
	.byte	3,127,1,5,65,9
	.half	.L1494-.L14
	.byte	1,4,2,5,114,7,9
	.half	.L445-.L1494
	.byte	3,108,1,5,95,9
	.half	.L12-.L445
	.byte	1,5,111,9
	.half	.L1495-.L12
	.byte	1,4,1,5,1,7,9
	.half	.L7-.L1495
	.byte	3,7,1,7,9
	.half	.L332-.L7
	.byte	0,1,1
.L1462:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_ranges'
.L331:
	.word	-1,.L297,0,.L332-.L297,0,0
.L437:
	.word	-1,.L297,.L426-.L297,.L427-.L297,.L438-.L297,.L7-.L297,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_info'
.L333:
	.word	1109
	.half	3
	.word	.L334
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L336,.L335
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvCaptureFF',0,1,61,6,1,1,1
	.word	.L299,.L488,.L298
	.byte	4
	.byte	'EventId',0,1,61,39
	.word	.L401,.L489
	.byte	4
	.byte	'dest',0,1,61,55
	.word	.L403,.L490
	.byte	4
	.byte	'destSize',0,1,61,68
	.word	.L401,.L491
	.byte	4
	.byte	'debug0',0,1,61,79
	.word	.L406,.L492
	.byte	4
	.byte	'debug1',0,1,61,79
	.word	.L406,.L493
	.byte	5
	.word	.L299,.L488
	.byte	6
	.byte	'writepos',0,1,63,9
	.word	.L403,.L494
	.byte	6
	.byte	'size',0,1,64,9
	.word	.L401,.L495
	.byte	6
	.byte	'edId',0,1,65,8
	.word	.L411,.L496
	.byte	6
	.byte	'ffId',0,1,66,8
	.word	.L411,.L497
	.byte	6
	.byte	'internalEnvData',0,1,67,25
	.word	.L413,.L498
	.byte	7
	.word	.L415,.L23,.L499
	.byte	8
	.word	.L417,.L500
	.byte	9
	.word	.L419,.L23,.L499
	.byte	0,7
	.word	.L420,.L501,.L502
	.byte	8
	.word	.L422,.L503
	.byte	10
	.word	.L424,.L504
	.byte	0,7
	.word	.L505,.L502,.L29
	.byte	8
	.word	.L506,.L507
	.byte	10
	.word	.L508,.L509
	.byte	0,7
	.word	.L420,.L29,.L30
	.byte	8
	.word	.L422,.L503
	.byte	0,7
	.word	.L505,.L30,.L31
	.byte	8
	.word	.L506,.L507
	.byte	0,7
	.word	.L420,.L32,.L33
	.byte	8
	.word	.L422,.L503
	.byte	9
	.word	.L424,.L32,.L33
	.byte	0,7
	.word	.L505,.L510,.L34
	.byte	8
	.word	.L506,.L507
	.byte	9
	.word	.L508,.L510,.L34
	.byte	0,7
	.word	.L511,.L512,.L513
	.byte	8
	.word	.L514,.L515
	.byte	8
	.word	.L516,.L517
	.byte	8
	.word	.L518,.L519
	.byte	8
	.word	.L520,.L521
	.byte	11
	.word	.L522,.L523
	.byte	6
	.byte	'i',0,2,27,9
	.word	.L406,.L525
	.byte	6
	.byte	'end',0,2,28,9
	.word	.L403,.L526
	.byte	7
	.word	.L527,.L528,.L529
	.byte	8
	.word	.L530,.L531
	.byte	8
	.word	.L532,.L533
	.byte	8
	.word	.L534,.L535
	.byte	8
	.word	.L536,.L537
	.byte	12
	.word	.L538,.L528,.L529
	.byte	6
	.byte	'i',0,3,28,15
	.word	.L439,.L539
	.byte	7
	.word	.L456,.L540,.L541
	.byte	8
	.word	.L459,.L542
	.byte	8
	.word	.L461,.L543
	.byte	8
	.word	.L463,.L544
	.byte	8
	.word	.L465,.L545
	.byte	12
	.word	.L467,.L540,.L541
	.byte	6
	.byte	'result',0,4,53,17
	.word	.L411,.L546
	.byte	7
	.word	.L469,.L547,.L548
	.byte	8
	.word	.L472,.L549
	.byte	8
	.word	.L474,.L550
	.byte	12
	.word	.L476,.L547,.L548
	.byte	7
	.word	.L477,.L551,.L548
	.byte	8
	.word	.L479,.L552
	.byte	8
	.word	.L481,.L553
	.byte	8
	.word	.L483,.L554
	.byte	9
	.word	.L485,.L551,.L548
	.byte	0,0,0,7
	.word	.L469,.L555,.L45
	.byte	8
	.word	.L472,.L549
	.byte	8
	.word	.L474,.L550
	.byte	12
	.word	.L476,.L555,.L45
	.byte	7
	.word	.L477,.L556,.L45
	.byte	8
	.word	.L479,.L552
	.byte	8
	.word	.L481,.L553
	.byte	8
	.word	.L483,.L554
	.byte	9
	.word	.L485,.L556,.L45
	.byte	0,0,0,0,0,0,0,0,0,7
	.word	.L511,.L524,.L28
	.byte	8
	.word	.L514,.L515
	.byte	8
	.word	.L516,.L517
	.byte	8
	.word	.L518,.L519
	.byte	8
	.word	.L520,.L521
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_abbrev'
.L334:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,85,6,0,0,11,11,1,49,16,85,6,0,0,12,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_line'
.L335:
	.word	.L1497-.L1496
.L1496:
	.half	3
	.word	.L1499-.L1498
.L1498:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1499:
	.byte	5,6,7,0,5,2
	.word	.L299
	.byte	3,60,1,5,15,9
	.half	.L1277-.L299
	.byte	3,4,1,5,41,9
	.half	.L1500-.L1277
	.byte	1,5,50,9
	.half	.L1501-.L1500
	.byte	1,9
	.half	.L1278-.L1501
	.byte	3,1,1,5,29,9
	.half	.L1280-.L1278
	.byte	3,2,1,5,28,9
	.half	.L1502-.L1280
	.byte	3,2,1,9
	.half	.L1503-.L1502
	.byte	3,1,1,5,37,9
	.half	.L1504-.L1503
	.byte	3,2,1,5,35,9
	.half	.L1505-.L1504
	.byte	1,4,5,5,26,9
	.half	.L23-.L1505
	.byte	3,77,1,5,12,9
	.half	.L1506-.L23
	.byte	1,5,38,7,9
	.half	.L1507-.L1506
	.byte	1,5,26,9
	.half	.L1508-.L1507
	.byte	1,5,4,9
	.half	.L24-.L1508
	.byte	1,4,1,5,2,9
	.half	.L26-.L24
	.byte	3,53,1,7,9
	.half	.L499-.L26
	.byte	1,9
	.half	.L27-.L499
	.byte	3,1,1,4,6,5,9,7,9
	.half	.L501-.L27
	.byte	3,93,1,4,2,9
	.half	.L502-.L501
	.byte	3,1,1,4,6,5,27,9
	.half	.L29-.L502
	.byte	3,127,1,5,38,9
	.half	.L1509-.L29
	.byte	1,5,2,9
	.half	.L1510-.L1509
	.byte	1,4,2,5,31,9
	.half	.L30-.L1510
	.byte	3,1,1,5,46,9
	.half	.L1511-.L30
	.byte	1,5,2,9
	.half	.L1512-.L1511
	.byte	1,4,1,5,3,9
	.half	.L31-.L1512
	.byte	3,36,1,4,6,5,27,9
	.half	.L32-.L31
	.byte	3,91,1,5,38,9
	.half	.L1513-.L32
	.byte	1,5,2,9
	.half	.L1514-.L1513
	.byte	1,4,1,5,20,9
	.half	.L33-.L1514
	.byte	3,39,1,4,2,5,31,9
	.half	.L510-.L33
	.byte	3,90,1,5,46,9
	.half	.L1515-.L510
	.byte	1,5,2,9
	.half	.L1282-.L1515
	.byte	1,4,1,5,27,9
	.half	.L34-.L1282
	.byte	3,40,1,4,2,5,22,9
	.half	.L512-.L34
	.byte	3,74,1,5,11,9
	.half	.L1284-.L512
	.byte	3,2,1,5,52,9
	.half	.L1516-.L1284
	.byte	1,5,113,9
	.half	.L1279-.L1516
	.byte	1,5,22,9
	.half	.L36-.L1279
	.byte	3,2,1,5,48,9
	.half	.L1517-.L36
	.byte	1,4,1,5,27,9
	.half	.L1518-.L1517
	.byte	3,50,1,5,44,9
	.half	.L513-.L1518
	.byte	1,4,2,5,67,9
	.half	.L524-.L513
	.byte	3,78,1,4,3,5,11,9
	.half	.L528-.L524
	.byte	3,125,1,5,36,9
	.half	.L1519-.L528
	.byte	1,5,46,9
	.half	.L1285-.L1519
	.byte	3,1,1,5,20,9
	.half	.L38-.L1285
	.byte	3,3,1,5,46,9
	.half	.L1520-.L38
	.byte	1,4,4,5,24,9
	.half	.L540-.L1520
	.byte	3,20,1,5,2,9
	.half	.L1286-.L540
	.byte	3,1,1,5,44,9
	.half	.L40-.L1286
	.byte	3,2,1,5,7,9
	.half	.L1521-.L40
	.byte	1,5,44,7,9
	.half	.L1522-.L1521
	.byte	3,3,1,5,3,9
	.half	.L1523-.L1522
	.byte	1,5,69,7,9
	.half	.L1524-.L1523
	.byte	3,2,1,5,11,9
	.half	.L1287-.L1524
	.byte	1,5,44,9
	.half	.L42-.L1287
	.byte	3,5,1,5,3,9
	.half	.L1525-.L42
	.byte	1,5,69,7,9
	.half	.L1526-.L1525
	.byte	3,2,1,5,77,9
	.half	.L1527-.L1526
	.byte	1,5,11,9
	.half	.L1288-.L1527
	.byte	1,5,3,9
	.half	.L43-.L1288
	.byte	3,4,1,5,70,7,9
	.half	.L1528-.L43
	.byte	3,2,1,5,2,9
	.half	.L547-.L1528
	.byte	3,102,1,4,7,5,54,9
	.half	.L551-.L547
	.byte	3,109,1,4,4,5,4,9
	.half	.L548-.L551
	.byte	3,46,1,5,3,9
	.half	.L44-.L548
	.byte	3,125,1,5,69,9
	.half	.L41-.L44
	.byte	3,8,1,5,2,9
	.half	.L555-.L41
	.byte	3,96,1,4,7,5,54,9
	.half	.L556-.L555
	.byte	3,109,1,4,4,5,3,9
	.half	.L45-.L556
	.byte	3,54,1,5,49,9
	.half	.L1529-.L45
	.byte	1,5,9,9
	.half	.L1530-.L1529
	.byte	1,4,3,5,5,9
	.half	.L541-.L1530
	.byte	3,76,1,5,29,9
	.half	.L37-.L541
	.byte	3,127,1,5,46,9
	.half	.L1531-.L37
	.byte	1,4,2,5,116,7,9
	.half	.L529-.L1531
	.byte	1,5,104,9
	.half	.L35-.L529
	.byte	1,5,113,9
	.half	.L1532-.L35
	.byte	1,4,1,5,1,7,9
	.half	.L28-.L1532
	.byte	3,54,1,7,9
	.half	.L337-.L28
	.byte	0,1,1
.L1497:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_ranges'
.L336:
	.word	-1,.L299,0,.L337-.L299,0,0
.L504:
	.word	-1,.L299,.L501-.L299,.L502-.L299,.L29-.L299,.L30-.L299,0,0
.L509:
	.word	-1,.L299,.L502-.L299,.L29-.L299,.L30-.L299,.L31-.L299,0,0
.L523:
	.word	-1,.L299,.L512-.L299,.L513-.L299,.L524-.L299,.L28-.L299,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_info'
.L338:
	.word	644
	.half	3
	.word	.L339
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L341,.L340
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvCopyRawFF',0,1,86,6,1,1,1
	.word	.L301,.L557,.L300
	.byte	4
	.byte	'EventId',0,1,86,39
	.word	.L401,.L558
	.byte	4
	.byte	'dest',0,1,87,10
	.word	.L403,.L559
	.byte	4
	.byte	'destSize',0,1,88,10
	.word	.L401,.L560
	.byte	4
	.byte	'ffIndex',0,1,89,9
	.word	.L411,.L561
	.byte	4
	.byte	'src',0,1,90,16
	.word	.L441,.L562
	.byte	5
	.word	.L301,.L557
	.byte	6
	.byte	'writepos',0,1,92,9
	.word	.L403,.L563
	.byte	6
	.byte	'size',0,1,93,9
	.word	.L401,.L564
	.byte	6
	.byte	'edId',0,1,95,8
	.word	.L411,.L565
	.byte	6
	.byte	'ffId',0,1,96,8
	.word	.L411,.L566
	.byte	7
	.word	.L420,.L567,.L47
	.byte	8
	.word	.L422,.L568
	.byte	9
	.word	.L424,.L567,.L47
	.byte	0,7
	.word	.L505,.L569,.L48
	.byte	8
	.word	.L506,.L570
	.byte	9
	.word	.L508,.L569,.L48
	.byte	0,7
	.word	.L505,.L571,.L50
	.byte	8
	.word	.L506,.L570
	.byte	9
	.word	.L508,.L571,.L50
	.byte	0,7
	.word	.L420,.L51,.L52
	.byte	8
	.word	.L422,.L568
	.byte	9
	.word	.L424,.L51,.L52
	.byte	0,7
	.word	.L572,.L573,.L46
	.byte	8
	.word	.L574,.L575
	.byte	8
	.word	.L576,.L577
	.byte	8
	.word	.L578,.L579
	.byte	8
	.word	.L580,.L581
	.byte	10
	.word	.L582,.L573,.L46
	.byte	6
	.byte	'bytesize',0,2,132,1,15
	.word	.L583,.L584
	.byte	7
	.word	.L585,.L54,.L46
	.byte	8
	.word	.L586,.L587
	.byte	8
	.word	.L588,.L589
	.byte	8
	.word	.L590,.L591
	.byte	9
	.word	.L592,.L54,.L46
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_abbrev'
.L339:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_line'
.L340:
	.word	.L1534-.L1533
.L1533:
	.half	3
	.word	.L1536-.L1535
.L1535:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1536:
	.byte	5,6,7,0,5,2
	.word	.L301
	.byte	3,213,0,1,5,15,9
	.half	.L1293-.L301
	.byte	3,9,1,5,41,9
	.half	.L1537-.L1293
	.byte	1,5,50,9
	.half	.L1538-.L1537
	.byte	1,9
	.half	.L1294-.L1538
	.byte	3,1,1,5,2,9
	.half	.L1295-.L1294
	.byte	3,2,1,4,3,5,9,7,9
	.half	.L567-.L1295
	.byte	3,71,1,5,27,9
	.half	.L1539-.L567
	.byte	1,5,38,9
	.half	.L1540-.L1539
	.byte	1,5,2,9
	.half	.L1541-.L1540
	.byte	1,4,1,5,12,9
	.half	.L47-.L1541
	.byte	3,59,1,4,2,5,9,9
	.half	.L569-.L47
	.byte	3,70,1,5,31,9
	.half	.L1542-.L569
	.byte	1,5,46,9
	.half	.L1543-.L1542
	.byte	1,5,2,9
	.half	.L1544-.L1543
	.byte	1,4,1,5,24,9
	.half	.L48-.L1544
	.byte	3,59,1,5,12,9
	.half	.L1292-.L48
	.byte	1,4,2,5,31,9
	.half	.L571-.L1292
	.byte	3,69,1,5,46,9
	.half	.L1545-.L571
	.byte	1,5,2,9
	.half	.L1296-.L1545
	.byte	1,4,1,5,3,9
	.half	.L50-.L1296
	.byte	3,62,1,4,3,5,27,9
	.half	.L51-.L50
	.byte	3,65,1,5,38,9
	.half	.L1546-.L51
	.byte	1,5,2,9
	.half	.L1547-.L1546
	.byte	1,4,1,5,47,9
	.half	.L52-.L1547
	.byte	3,193,0,1,4,2,5,48,9
	.half	.L573-.L52
	.byte	3,26,1,5,63,9
	.half	.L1548-.L573
	.byte	1,5,2,9
	.half	.L53-.L1548
	.byte	3,2,1,7,9
	.half	.L1549-.L53
	.byte	1,4,4,5,49,9
	.half	.L54-.L1549
	.byte	3,145,127,1,4,1,5,1,9
	.half	.L46-.L54
	.byte	3,213,0,1,7,9
	.half	.L342-.L46
	.byte	0,1,1
.L1534:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_ranges'
.L341:
	.word	-1,.L301,0,.L342-.L301,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_info'
.L343:
	.word	1828
	.half	3
	.word	.L344
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L346,.L345
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvCopyRawED',0,1,110,6,1,1,1
	.word	.L303,.L593,.L302
	.byte	4
	.byte	'EventId',0,1,110,39
	.word	.L401,.L594
	.byte	4
	.byte	'dest',0,1,110,55
	.word	.L403,.L595
	.byte	4
	.byte	'destSize',0,1,110,68
	.word	.L401,.L596
	.byte	4
	.byte	'src',0,1,110,91
	.word	.L441,.L597
	.byte	4
	.byte	'triggerParam',0,1,110,121
	.word	.L598,.L599
	.byte	5
	.word	.L303,.L593
	.byte	6
	.byte	'writepos',0,1,113,9
	.word	.L403,.L600
	.byte	6
	.byte	'readpos',0,1,114,15
	.word	.L441,.L601
	.byte	6
	.byte	'size',0,1,115,9
	.word	.L401,.L602
	.byte	6
	.byte	'edId',0,1,117,8
	.word	.L411,.L603
	.byte	7
	.word	.L420,.L604,.L57
	.byte	8
	.word	.L422,.L605
	.byte	9
	.word	.L424,.L604,.L57
	.byte	0,7
	.word	.L606,.L607,.L55
	.byte	8
	.word	.L608,.L609
	.byte	8
	.word	.L610,.L611
	.byte	8
	.word	.L612,.L613
	.byte	8
	.word	.L614,.L615
	.byte	8
	.word	.L616,.L617
	.byte	10
	.word	.L618,.L607,.L55
	.byte	6
	.byte	'i',0,2,46,15
	.word	.L439,.L619
	.byte	6
	.byte	'end',0,2,47,15
	.word	.L441,.L620
	.byte	7
	.word	.L621,.L622,.L623
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	11
	.word	.L634,.L635
	.byte	6
	.byte	'i',0,3,61,9
	.word	.L406,.L645
	.byte	6
	.byte	'trigger',0,3,62,18
	.word	.L411,.L646
	.byte	6
	.byte	'update',0,3,63,10
	.word	.L411,.L647
	.byte	7
	.word	.L648,.L622,.L61
	.byte	8
	.word	.L649,.L650
	.byte	9
	.word	.L651,.L622,.L61
	.byte	0,7
	.word	.L652,.L61,.L62
	.byte	8
	.word	.L653,.L654
	.byte	9
	.word	.L655,.L61,.L62
	.byte	0,7
	.word	.L656,.L657,.L658
	.byte	8
	.word	.L659,.L660
	.byte	8
	.word	.L661,.L662
	.byte	10
	.word	.L663,.L657,.L658
	.byte	7
	.word	.L664,.L665,.L63
	.byte	8
	.word	.L666,.L667
	.byte	9
	.word	.L668,.L665,.L63
	.byte	0,0,0,7
	.word	.L656,.L669,.L670
	.byte	8
	.word	.L659,.L660
	.byte	8
	.word	.L661,.L662
	.byte	10
	.word	.L663,.L669,.L670
	.byte	7
	.word	.L664,.L671,.L66
	.byte	8
	.word	.L666,.L667
	.byte	9
	.word	.L668,.L671,.L66
	.byte	0,0,0,7
	.word	.L672,.L65,.L71
	.byte	8
	.word	.L673,.L674
	.byte	9
	.word	.L675,.L65,.L71
	.byte	0,7
	.word	.L656,.L71,.L676
	.byte	8
	.word	.L659,.L660
	.byte	8
	.word	.L661,.L662
	.byte	10
	.word	.L663,.L71,.L676
	.byte	7
	.word	.L664,.L677,.L77
	.byte	8
	.word	.L666,.L667
	.byte	9
	.word	.L668,.L677,.L77
	.byte	0,0,0,7
	.word	.L656,.L678,.L68
	.byte	8
	.word	.L659,.L660
	.byte	8
	.word	.L661,.L662
	.byte	10
	.word	.L663,.L678,.L68
	.byte	7
	.word	.L664,.L679,.L80
	.byte	8
	.word	.L666,.L667
	.byte	9
	.word	.L668,.L679,.L80
	.byte	0,0,0,7
	.word	.L680,.L681,.L682
	.byte	8
	.word	.L683,.L684
	.byte	8
	.word	.L685,.L686
	.byte	9
	.word	.L687,.L681,.L682
	.byte	0,7
	.word	.L688,.L689,.L623
	.byte	8
	.word	.L690,.L691
	.byte	8
	.word	.L692,.L693
	.byte	8
	.word	.L694,.L695
	.byte	8
	.word	.L696,.L697
	.byte	11
	.word	.L698,.L699
	.byte	7
	.word	.L585,.L701,.L702
	.byte	8
	.word	.L586,.L703
	.byte	8
	.word	.L588,.L704
	.byte	8
	.word	.L590,.L705
	.byte	9
	.word	.L592,.L701,.L702
	.byte	0,0,0,7
	.word	.L688,.L636,.L637
	.byte	8
	.word	.L690,.L691
	.byte	8
	.word	.L692,.L693
	.byte	8
	.word	.L694,.L695
	.byte	8
	.word	.L696,.L697
	.byte	0,7
	.word	.L688,.L638,.L639
	.byte	8
	.word	.L690,.L691
	.byte	8
	.word	.L692,.L693
	.byte	8
	.word	.L694,.L695
	.byte	8
	.word	.L696,.L697
	.byte	0,7
	.word	.L688,.L640,.L700
	.byte	8
	.word	.L690,.L691
	.byte	8
	.word	.L692,.L693
	.byte	8
	.word	.L694,.L695
	.byte	8
	.word	.L696,.L697
	.byte	0,7
	.word	.L706,.L707,.L641
	.byte	8
	.word	.L708,.L709
	.byte	8
	.word	.L710,.L711
	.byte	8
	.word	.L712,.L713
	.byte	8
	.word	.L714,.L715
	.byte	12
	.word	.L716,.L717
	.byte	0,7
	.word	.L706,.L642,.L643
	.byte	8
	.word	.L708,.L709
	.byte	8
	.word	.L710,.L711
	.byte	8
	.word	.L712,.L713
	.byte	8
	.word	.L714,.L715
	.byte	0,7
	.word	.L706,.L644,.L718
	.byte	8
	.word	.L708,.L709
	.byte	8
	.word	.L710,.L711
	.byte	8
	.word	.L712,.L713
	.byte	8
	.word	.L714,.L715
	.byte	0,0,0,7
	.word	.L621,.L636,.L637
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	0,7
	.word	.L621,.L638,.L639
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	0,7
	.word	.L621,.L640,.L641
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	0,7
	.word	.L621,.L642,.L643
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	0,7
	.word	.L621,.L644,.L87
	.byte	8
	.word	.L624,.L625
	.byte	8
	.word	.L626,.L627
	.byte	8
	.word	.L628,.L629
	.byte	8
	.word	.L630,.L631
	.byte	8
	.word	.L632,.L633
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_abbrev'
.L344:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,12,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_line'
.L345:
	.word	.L1551-.L1550
.L1550:
	.half	3
	.word	.L1553-.L1552
.L1552:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvTrigger.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1553:
	.byte	5,6,7,0,5,2
	.word	.L303
	.byte	3,237,0,1,5,15,9
	.half	.L1304-.L303
	.byte	3,7,1,5,41,9
	.half	.L1554-.L1304
	.byte	1,5,50,9
	.half	.L1555-.L1554
	.byte	1,5,2,9
	.half	.L1305-.L1555
	.byte	3,2,1,4,2,5,9,7,9
	.half	.L604-.L1305
	.byte	3,178,127,1,5,27,9
	.half	.L1556-.L604
	.byte	1,5,38,9
	.half	.L1557-.L1556
	.byte	1,5,2,9
	.half	.L1306-.L1557
	.byte	1,4,1,5,3,9
	.half	.L57-.L1306
	.byte	3,210,0,1,7,9
	.half	.L1558-.L57
	.byte	1,5,27,9
	.half	.L58-.L1558
	.byte	3,1,1,5,43,9
	.half	.L1559-.L58
	.byte	1,5,52,9
	.half	.L1560-.L1559
	.byte	1,4,2,5,26,9
	.half	.L607-.L1560
	.byte	3,179,127,1,5,11,9
	.half	.L1309-.L607
	.byte	3,2,1,5,44,9
	.half	.L1561-.L1309
	.byte	1,5,111,9
	.half	.L1307-.L1561
	.byte	1,5,22,9
	.half	.L60-.L1307
	.byte	3,2,1,5,51,9
	.half	.L1562-.L60
	.byte	1,4,1,5,27,9
	.half	.L1563-.L1562
	.byte	3,201,0,1,4,3,5,11,9
	.half	.L622-.L1563
	.byte	3,174,127,1,5,32,9
	.half	.L1564-.L622
	.byte	1,5,46,9
	.half	.L1565-.L1564
	.byte	1,5,4,9
	.half	.L1310-.L1565
	.byte	1,5,32,9
	.half	.L61-.L1310
	.byte	3,122,1,5,46,9
	.half	.L1566-.L61
	.byte	1,5,4,9
	.half	.L1567-.L1566
	.byte	1,5,40,9
	.half	.L62-.L1567
	.byte	3,38,1,4,4,9
	.half	.L657-.L62
	.byte	3,83,1,5,42,9
	.half	.L665-.L657
	.byte	3,123,1,5,2,9
	.half	.L1568-.L665
	.byte	1,9
	.half	.L63-.L1568
	.byte	3,5,1,4,3,5,8,9
	.half	.L64-.L63
	.byte	3,45,1,5,37,7,9
	.half	.L658-.L64
	.byte	3,1,1,4,4,5,40,9
	.half	.L669-.L658
	.byte	3,82,1,5,42,9
	.half	.L671-.L669
	.byte	3,123,1,5,2,9
	.half	.L1569-.L671
	.byte	1,9
	.half	.L66-.L1569
	.byte	3,5,1,4,3,5,5,9
	.half	.L67-.L66
	.byte	3,46,1,5,66,7,9
	.half	.L670-.L67
	.byte	1,4,4,5,5,7,9
	.half	.L65-.L670
	.byte	3,87,1,5,9,7,9
	.half	.L1570-.L65
	.byte	3,2,1,5,10,9
	.half	.L70-.L1570
	.byte	3,2,1,5,9,7,9
	.half	.L1571-.L70
	.byte	3,2,1,5,10,9
	.half	.L72-.L1571
	.byte	3,2,1,5,9,7,9
	.half	.L1572-.L72
	.byte	3,2,1,9
	.half	.L74-.L1572
	.byte	3,4,1,5,40,9
	.half	.L71-.L74
	.byte	3,109,1,5,42,9
	.half	.L677-.L71
	.byte	3,123,1,5,2,9
	.half	.L1573-.L677
	.byte	1,9
	.half	.L77-.L1573
	.byte	3,5,1,4,3,5,10,9
	.half	.L78-.L77
	.byte	3,48,1,5,48,7,9
	.half	.L676-.L78
	.byte	3,1,1,4,4,5,40,9
	.half	.L678-.L676
	.byte	3,79,1,5,42,9
	.half	.L679-.L678
	.byte	3,123,1,5,2,9
	.half	.L1574-.L679
	.byte	1,9
	.half	.L80-.L1574
	.byte	3,5,1,4,3,5,16,9
	.half	.L81-.L80
	.byte	3,49,1,5,34,7,9
	.half	.L68-.L81
	.byte	3,3,1,4,4,5,14,9
	.half	.L681-.L68
	.byte	3,66,1,5,24,9
	.half	.L1575-.L681
	.byte	1,5,11,9
	.half	.L1311-.L1575
	.byte	1,4,3,5,33,9
	.half	.L682-.L1311
	.byte	3,63,1,5,12,9
	.half	.L1576-.L682
	.byte	1,5,49,9
	.half	.L1577-.L1576
	.byte	1,5,61,9
	.half	.L1312-.L1577
	.byte	3,1,1,5,18,9
	.half	.L84-.L1312
	.byte	3,3,1,5,48,9
	.half	.L1578-.L84
	.byte	1,4,5,5,2,9
	.half	.L689-.L1578
	.byte	3,2,1,9
	.half	.L86-.L689
	.byte	3,2,1,4,1,5,43,9
	.half	.L623-.L86
	.byte	3,34,1,4,5,5,2,9
	.half	.L636-.L623
	.byte	3,94,1,4,6,5,49,9
	.half	.L701-.L636
	.byte	3,189,127,1,4,5,5,3,9
	.half	.L702-.L701
	.byte	3,196,0,1,5,49,9
	.half	.L1579-.L702
	.byte	1,5,9,9
	.half	.L1580-.L1579
	.byte	1,4,1,5,43,9
	.half	.L637-.L1580
	.byte	3,33,1,4,5,5,3,9
	.half	.L638-.L637
	.byte	3,96,1,5,47,9
	.half	.L1581-.L638
	.byte	1,5,7,9
	.half	.L1582-.L1581
	.byte	1,4,1,5,43,9
	.half	.L639-.L1582
	.byte	3,32,1,4,5,5,7,9
	.half	.L640-.L639
	.byte	3,96,1,4,3,5,6,9
	.half	.L700-.L640
	.byte	3,120,1,5,44,9
	.half	.L83-.L700
	.byte	3,127,1,5,61,9
	.half	.L1583-.L83
	.byte	1,7,9
	.half	.L1584-.L1583
	.byte	1,5,33,9
	.half	.L79-.L1584
	.byte	3,8,1,5,12,9
	.half	.L1585-.L79
	.byte	1,5,49,9
	.half	.L1586-.L1585
	.byte	1,5,61,9
	.half	.L1313-.L1586
	.byte	3,1,1,5,18,9
	.half	.L89-.L1313
	.byte	3,3,1,5,48,9
	.half	.L1587-.L89
	.byte	1,4,5,5,2,9
	.half	.L707-.L1587
	.byte	3,2,1,5,3,9
	.half	.L91-.L707
	.byte	3,2,1,5,49,9
	.half	.L1588-.L91
	.byte	1,5,9,9
	.half	.L1589-.L1588
	.byte	1,4,1,5,43,9
	.half	.L641-.L1589
	.byte	3,25,1,4,5,5,3,9
	.half	.L642-.L641
	.byte	3,104,1,5,47,9
	.half	.L1590-.L642
	.byte	1,5,7,9
	.half	.L1591-.L1590
	.byte	1,4,1,5,43,9
	.half	.L643-.L1591
	.byte	3,24,1,4,5,5,7,9
	.half	.L644-.L643
	.byte	3,104,1,4,3,5,6,9
	.half	.L718-.L644
	.byte	3,121,1,5,44,9
	.half	.L88-.L718
	.byte	3,127,1,5,61,9
	.half	.L1592-.L88
	.byte	1,4,2,5,114,7,9
	.half	.L87-.L1592
	.byte	3,85,1,5,95,9
	.half	.L59-.L87
	.byte	1,5,111,9
	.half	.L1593-.L59
	.byte	1,4,1,5,1,7,9
	.half	.L55-.L1593
	.byte	3,205,0,1,7,9
	.half	.L347-.L55
	.byte	0,1,1
.L1551:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_ranges'
.L346:
	.word	-1,.L303,0,.L347-.L303,0,0
.L635:
	.word	-1,.L303,.L622-.L303,.L623-.L303,.L636-.L303,.L637-.L303,.L638-.L303,.L639-.L303,.L640-.L303,.L641-.L303
	.word	.L642-.L303,.L643-.L303,.L644-.L303,.L87-.L303,0,0
.L699:
	.word	-1,.L303,.L689-.L303,.L623-.L303,.L636-.L303,.L637-.L303,.L638-.L303,.L639-.L303,.L640-.L303,.L700-.L303
	.word	0,0
.L717:
	.word	-1,.L303,.L707-.L303,.L641-.L303,.L642-.L303,.L643-.L303,.L644-.L303,.L718-.L303,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_info'
.L348:
	.word	433
	.half	3
	.word	.L349
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L351,.L350
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvIsEDRNumberValid',0,1,130,1,19
	.word	.L411
	.byte	1,1,1
	.word	.L305,.L719,.L304
	.byte	4
	.byte	'EventId',0,1,130,1,59
	.word	.L401,.L720
	.byte	4
	.byte	'RecordNumber',0,1,130,1,74
	.word	.L411,.L721
	.byte	4
	.byte	'trigger',0,1,130,1,105
	.word	.L722,.L723
	.byte	5
	.word	.L305,.L719
	.byte	6
	.byte	'edId',0,1,132,1,8
	.word	.L411,.L724
	.byte	7
	.word	.L725,.L726,.L98
	.byte	8
	.word	.L727,.L728
	.byte	8
	.word	.L729,.L730
	.byte	8
	.word	.L731,.L732
	.byte	9
	.word	.L733,.L726,.L98
	.byte	6
	.byte	'i',0,2,79,15
	.word	.L439,.L734
	.byte	7
	.word	.L735,.L736,.L95
	.byte	8
	.word	.L737,.L738
	.byte	10
	.word	.L739,.L736,.L95
	.byte	0,7
	.word	.L648,.L740,.L97
	.byte	8
	.word	.L649,.L741
	.byte	10
	.word	.L651,.L740,.L97
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_abbrev'
.L349:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_line'
.L350:
	.word	.L1595-.L1594
.L1594:
	.half	3
	.word	.L1597-.L1596
.L1596:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0,0
.L1597:
	.byte	5,15,7,0,5,2
	.word	.L305
	.byte	3,131,1,1,5,41,9
	.half	.L1598-.L305
	.byte	1,5,50,9
	.half	.L1599-.L1598
	.byte	1,5,2,9
	.half	.L1314-.L1599
	.byte	3,1,1,4,2,5,11,7,9
	.half	.L726-.L1314
	.byte	3,76,1,5,44,9
	.half	.L1600-.L726
	.byte	1,5,111,9
	.half	.L1315-.L1600
	.byte	1,5,34,9
	.half	.L94-.L1315
	.byte	3,2,1,5,63,9
	.half	.L1601-.L94
	.byte	1,4,3,5,11,9
	.half	.L736-.L1601
	.byte	3,76,1,5,32,9
	.half	.L1602-.L736
	.byte	1,5,46,9
	.half	.L1603-.L1602
	.byte	1,5,4,9
	.half	.L1604-.L1603
	.byte	1,4,2,5,3,9
	.half	.L95-.L1604
	.byte	3,52,1,4,3,5,32,7,9
	.half	.L740-.L95
	.byte	3,87,1,5,46,9
	.half	.L1605-.L740
	.byte	1,5,4,9
	.half	.L1606-.L1605
	.byte	1,4,2,5,13,9
	.half	.L97-.L1606
	.byte	3,43,1,5,4,9
	.half	.L1607-.L97
	.byte	3,1,1,5,114,9
	.half	.L96-.L1607
	.byte	3,123,1,5,95,9
	.half	.L93-.L96
	.byte	1,5,111,9
	.half	.L1608-.L93
	.byte	1,5,2,7,9
	.half	.L1609-.L1608
	.byte	3,9,1,4,1,5,3,9
	.half	.L98-.L1609
	.byte	3,45,1,5,10,9
	.half	.L92-.L98
	.byte	3,4,1,5,3,9
	.half	.L1610-.L92
	.byte	1,5,1,9
	.half	.L100-.L1610
	.byte	3,2,1,7,9
	.half	.L352-.L100
	.byte	0,1,1
.L1595:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_ranges'
.L351:
	.word	-1,.L305,0,.L352-.L305,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_info'
.L353:
	.word	1090
	.half	3
	.word	.L354
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L356,.L355
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveEDR',0,1,144,1,42
	.word	.L411
	.byte	1,1,1
	.word	.L307,.L742,.L306
	.byte	4
	.byte	'EventId',0,1,144,1,77
	.word	.L401,.L743
	.byte	4
	.byte	'RecordNumber',0,1,145,1,9
	.word	.L411,.L744
	.byte	4
	.byte	'dest',0,1,146,1,10
	.word	.L403,.L745
	.byte	4
	.byte	'destSize',0,1,147,1,11
	.word	.L746,.L747
	.byte	4
	.byte	'src',0,1,148,1,16
	.word	.L441,.L748
	.byte	4
	.byte	'evMemLocation',0,1,149,1,29
	.word	.L749,.L750
	.byte	5
	.word	.L307,.L742
	.byte	6
	.byte	'edId',0,1,151,1,8
	.word	.L411,.L751
	.byte	6
	.byte	'internalEnvData',0,1,152,1,25
	.word	.L413,.L752
	.byte	7
	.word	.L753,.L102,.L103
	.byte	8
	.word	.L754,.L755
	.byte	9
	.word	.L756,.L102,.L103
	.byte	0,7
	.word	.L757,.L758,.L123
	.byte	8
	.word	.L759,.L760
	.byte	8
	.word	.L761,.L762
	.byte	8
	.word	.L763,.L764
	.byte	8
	.word	.L765,.L766
	.byte	8
	.word	.L767,.L768
	.byte	8
	.word	.L769,.L770
	.byte	10
	.word	.L771,.L758,.L123
	.byte	6
	.byte	'writepos',0,2,100,9
	.word	.L403,.L772
	.byte	6
	.byte	'end',0,2,101,9
	.word	.L403,.L773
	.byte	6
	.byte	'i',0,2,102,15
	.word	.L439,.L774
	.byte	7
	.word	.L735,.L775,.L107
	.byte	8
	.word	.L737,.L776
	.byte	9
	.word	.L739,.L775,.L107
	.byte	0,7
	.word	.L777,.L778,.L120
	.byte	8
	.word	.L779,.L780
	.byte	8
	.word	.L781,.L782
	.byte	8
	.word	.L783,.L784
	.byte	8
	.word	.L785,.L786
	.byte	8
	.word	.L787,.L788
	.byte	10
	.word	.L789,.L778,.L120
	.byte	6
	.byte	'i',0,3,105,11
	.word	.L406,.L790
	.byte	7
	.word	.L791,.L792,.L112
	.byte	8
	.word	.L793,.L794
	.byte	8
	.word	.L795,.L796
	.byte	8
	.word	.L797,.L798
	.byte	8
	.word	.L799,.L800
	.byte	8
	.word	.L801,.L802
	.byte	10
	.word	.L803,.L792,.L112
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L804
	.byte	7
	.word	.L469,.L805,.L806
	.byte	8
	.word	.L472,.L807
	.byte	8
	.word	.L474,.L808
	.byte	10
	.word	.L476,.L805,.L806
	.byte	7
	.word	.L477,.L809,.L806
	.byte	8
	.word	.L479,.L810
	.byte	8
	.word	.L481,.L811
	.byte	8
	.word	.L483,.L812
	.byte	9
	.word	.L485,.L809,.L806
	.byte	0,0,0,7
	.word	.L585,.L813,.L117
	.byte	8
	.word	.L586,.L814
	.byte	8
	.word	.L588,.L815
	.byte	8
	.word	.L590,.L816
	.byte	9
	.word	.L592,.L813,.L117
	.byte	0,0,0,0,0,7
	.word	.L817,.L818,.L819
	.byte	8
	.word	.L820,.L821
	.byte	8
	.word	.L822,.L823
	.byte	10
	.word	.L824,.L818,.L819
	.byte	7
	.word	.L825,.L818,.L128
	.byte	8
	.word	.L826,.L827
	.byte	11
	.word	.L828,.L829
	.byte	6
	.byte	'i',0,3,121,11
	.word	.L406,.L832
	.byte	6
	.byte	'byteSize',0,3,122,11
	.word	.L401,.L833
	.byte	7
	.word	.L834,.L835,.L127
	.byte	8
	.word	.L836,.L837
	.byte	9
	.word	.L838,.L835,.L127
	.byte	0,0,0,7
	.word	.L825,.L830,.L831
	.byte	8
	.word	.L826,.L827
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_abbrev'
.L354:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_line'
.L355:
	.word	.L1612-.L1611
.L1611:
	.half	3
	.word	.L1614-.L1613
.L1613:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1614:
	.byte	5,42,7,0,5,2
	.word	.L307
	.byte	3,143,1,1,5,15,9
	.half	.L1323-.L307
	.byte	3,7,1,5,41,9
	.half	.L1615-.L1323
	.byte	1,5,50,9
	.half	.L1319-.L1615
	.byte	1,5,29,9
	.half	.L1325-.L1319
	.byte	3,3,1,5,30,9
	.half	.L1616-.L1325
	.byte	3,2,1,5,28,9
	.half	.L1617-.L1616
	.byte	1,5,30,9
	.half	.L1618-.L1617
	.byte	3,1,1,5,28,9
	.half	.L1619-.L1618
	.byte	1,5,35,9
	.half	.L1620-.L1619
	.byte	3,2,1,4,5,5,36,9
	.half	.L102-.L1620
	.byte	3,129,127,1,5,45,9
	.half	.L1621-.L102
	.byte	1,5,56,9
	.half	.L1622-.L1621
	.byte	1,5,2,9
	.half	.L1623-.L1622
	.byte	1,4,1,9
	.half	.L103-.L1623
	.byte	3,129,1,1,7,9
	.half	.L1624-.L103
	.byte	1,5,82,9
	.half	.L104-.L1624
	.byte	3,1,1,5,88,9
	.half	.L1625-.L104
	.byte	1,4,2,5,18,9
	.half	.L758-.L1625
	.byte	3,66,1,5,22,9
	.half	.L1626-.L758
	.byte	3,1,1,5,20,9
	.half	.L1627-.L1626
	.byte	1,5,11,9
	.half	.L1329-.L1627
	.byte	3,3,1,5,44,9
	.half	.L1628-.L1329
	.byte	1,5,111,9
	.half	.L1330-.L1628
	.byte	1,5,34,9
	.half	.L106-.L1330
	.byte	3,2,1,5,63,9
	.half	.L1629-.L106
	.byte	1,4,3,5,11,9
	.half	.L775-.L1629
	.byte	3,181,127,1,5,32,9
	.half	.L1630-.L775
	.byte	1,5,46,9
	.half	.L1631-.L1630
	.byte	1,5,4,9
	.half	.L1632-.L1631
	.byte	1,4,2,5,3,9
	.half	.L107-.L1632
	.byte	3,203,0,1,5,64,7,9
	.half	.L1633-.L107
	.byte	3,2,1,5,74,9
	.half	.L1634-.L1633
	.byte	1,4,1,5,82,9
	.half	.L1635-.L1634
	.byte	3,54,1,4,2,5,85,9
	.half	.L1636-.L1635
	.byte	3,74,1,4,3,5,34,9
	.half	.L778-.L1636
	.byte	3,126,1,5,13,9
	.half	.L1637-.L778
	.byte	1,5,50,9
	.half	.L1638-.L1637
	.byte	1,5,65,9
	.half	.L1326-.L1638
	.byte	3,1,1,5,30,9
	.half	.L110-.L1326
	.byte	3,3,1,5,60,9
	.half	.L1639-.L110
	.byte	1,4,4,5,24,9
	.half	.L792-.L1639
	.byte	3,1,1,5,38,9
	.half	.L1331-.L792
	.byte	3,2,1,5,16,9
	.half	.L1640-.L1331
	.byte	1,5,38,9
	.half	.L1641-.L1640
	.byte	1,5,53,9
	.half	.L1642-.L1641
	.byte	1,5,7,9
	.half	.L1643-.L1642
	.byte	1,5,14,9
	.half	.L1644-.L1643
	.byte	1,5,62,9
	.half	.L1645-.L1644
	.byte	1,5,2,9
	.half	.L1646-.L1645
	.byte	1,5,3,7,9
	.half	.L1647-.L1646
	.byte	3,2,1,5,43,9
	.half	.L111-.L1647
	.byte	3,3,1,5,2,9
	.half	.L1648-.L111
	.byte	1,5,44,7,9
	.half	.L1649-.L1648
	.byte	3,3,1,5,3,9
	.half	.L1650-.L1649
	.byte	1,5,69,7,9
	.half	.L1651-.L1650
	.byte	3,2,1,5,44,9
	.half	.L114-.L1651
	.byte	3,5,1,5,3,9
	.half	.L1652-.L114
	.byte	1,5,69,7,9
	.half	.L1653-.L1652
	.byte	3,2,1,5,77,9
	.half	.L1654-.L1653
	.byte	1,5,3,9
	.half	.L115-.L1654
	.byte	3,4,1,5,70,7,9
	.half	.L1655-.L115
	.byte	3,2,1,5,2,9
	.half	.L805-.L1655
	.byte	3,168,127,1,4,6,5,54,9
	.half	.L809-.L805
	.byte	3,109,1,4,4,5,4,9
	.half	.L806-.L809
	.byte	3,236,0,1,5,3,9
	.half	.L116-.L806
	.byte	3,125,1,5,6,9
	.half	.L113-.L116
	.byte	3,8,1,4,6,5,49,9
	.half	.L813-.L113
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L117-.L813
	.byte	3,249,0,1,5,49,9
	.half	.L1656-.L117
	.byte	1,5,9,9
	.half	.L1657-.L1656
	.byte	1,5,3,9
	.half	.L1658-.L1657
	.byte	3,1,1,5,47,9
	.half	.L1659-.L1658
	.byte	1,5,7,9
	.half	.L1660-.L1659
	.byte	1,5,2,9
	.half	.L1661-.L1660
	.byte	3,1,1,4,3,5,12,9
	.half	.L112-.L1661
	.byte	3,92,1,5,10,7,9
	.half	.L1662-.L112
	.byte	3,2,1,9
	.half	.L119-.L1662
	.byte	3,124,1,5,48,9
	.half	.L109-.L119
	.byte	3,127,1,5,65,9
	.half	.L1663-.L109
	.byte	1,5,4,7,9
	.half	.L1664-.L1663
	.byte	3,8,1,4,2,5,9,9
	.half	.L120-.L1664
	.byte	3,121,1,5,5,7,9
	.half	.L1665-.L120
	.byte	3,2,1,5,24,9
	.half	.L122-.L1665
	.byte	3,2,1,5,33,9
	.half	.L1666-.L122
	.byte	1,5,13,9
	.half	.L1667-.L1666
	.byte	1,5,4,9
	.half	.L1668-.L1667
	.byte	3,1,1,4,1,5,82,9
	.half	.L108-.L1668
	.byte	3,49,1,4,3,5,20,9
	.half	.L818-.L108
	.byte	3,88,1,5,34,9
	.half	.L1335-.L818
	.byte	3,1,1,5,13,9
	.half	.L1669-.L1335
	.byte	1,5,50,9
	.half	.L1670-.L1669
	.byte	1,5,65,9
	.half	.L1337-.L1670
	.byte	3,1,1,5,38,9
	.half	.L126-.L1337
	.byte	3,3,1,5,68,9
	.half	.L1671-.L126
	.byte	1,4,4,5,31,9
	.half	.L835-.L1671
	.byte	3,24,1,5,9,9
	.half	.L1672-.L835
	.byte	1,5,31,9
	.half	.L1673-.L1672
	.byte	1,5,46,9
	.half	.L1674-.L1673
	.byte	1,5,2,9
	.half	.L1675-.L1674
	.byte	1,4,3,5,16,9
	.half	.L127-.L1675
	.byte	3,104,1,5,10,9
	.half	.L1338-.L127
	.byte	3,126,1,5,48,9
	.half	.L125-.L1338
	.byte	3,127,1,5,65,9
	.half	.L1676-.L125
	.byte	1,5,4,7,9
	.half	.L1677-.L1676
	.byte	3,5,1,5,3,9
	.half	.L128-.L1677
	.byte	3,6,1,5,7,9
	.half	.L830-.L128
	.byte	1,4,2,5,114,9
	.half	.L819-.L830
	.byte	3,97,1,5,95,9
	.half	.L105-.L819
	.byte	1,5,111,9
	.half	.L1678-.L105
	.byte	1,5,2,7,9
	.half	.L1679-.L1678
	.byte	3,17,1,4,1,9
	.half	.L123-.L1679
	.byte	3,41,1,5,1,9
	.half	.L130-.L123
	.byte	3,5,1,7,9
	.half	.L357-.L130
	.byte	0,1,1
.L1612:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_ranges'
.L356:
	.word	-1,.L307,0,.L357-.L307,0,0
.L829:
	.word	-1,.L307,.L818-.L307,.L128-.L307,.L830-.L307,.L831-.L307,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_info'
.L358:
	.word	1223
	.half	3
	.word	.L359
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L361,.L360
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveFF',0,1,193,1,39
	.word	.L411
	.byte	1,1,1
	.word	.L313,.L839,.L312
	.byte	4
	.byte	'EventId',0,1,193,1,73
	.word	.L401,.L840
	.byte	4
	.byte	'dest',0,1,194,1,10
	.word	.L403,.L841
	.byte	4
	.byte	'destSize',0,1,195,1,11
	.word	.L746,.L842
	.byte	4
	.byte	'ffIndex',0,1,196,1,9
	.word	.L411,.L843
	.byte	4
	.byte	'src',0,1,197,1,16
	.word	.L441,.L844
	.byte	4
	.byte	'evMemLocation',0,1,198,1,29
	.word	.L749,.L845
	.byte	5
	.word	.L313,.L839
	.byte	6
	.byte	'edId',0,1,200,1,8
	.word	.L411,.L846
	.byte	6
	.byte	'ffId',0,1,201,1,8
	.word	.L411,.L847
	.byte	6
	.byte	'readpos',0,1,202,1,15
	.word	.L441,.L848
	.byte	6
	.byte	'internalEnvData',0,1,203,1,25
	.word	.L413,.L849
	.byte	7
	.word	.L850,.L150,.L151
	.byte	8
	.word	.L851,.L852
	.byte	9
	.word	.L853,.L150,.L151
	.byte	0,7
	.word	.L505,.L152,.L153
	.byte	8
	.word	.L506,.L854
	.byte	9
	.word	.L508,.L152,.L153
	.byte	0,7
	.word	.L420,.L855,.L154
	.byte	8
	.word	.L422,.L856
	.byte	9
	.word	.L424,.L855,.L154
	.byte	0,7
	.word	.L857,.L858,.L155
	.byte	8
	.word	.L859,.L860
	.byte	8
	.word	.L861,.L862
	.byte	9
	.word	.L863,.L858,.L155
	.byte	0,7
	.word	.L864,.L865,.L866
	.byte	8
	.word	.L867,.L868
	.byte	8
	.word	.L869,.L870
	.byte	8
	.word	.L871,.L872
	.byte	8
	.word	.L873,.L874
	.byte	8
	.word	.L875,.L876
	.byte	8
	.word	.L877,.L878
	.byte	10
	.word	.L879,.L880
	.byte	6
	.byte	'writepos',0,2,52,9
	.word	.L403,.L882
	.byte	6
	.byte	'end',0,2,53,9
	.word	.L403,.L883
	.byte	6
	.byte	'i',0,2,54,15
	.word	.L439,.L884
	.byte	7
	.word	.L885,.L886,.L866
	.byte	8
	.word	.L887,.L888
	.byte	8
	.word	.L889,.L890
	.byte	8
	.word	.L891,.L892
	.byte	8
	.word	.L893,.L894
	.byte	8
	.word	.L895,.L896
	.byte	10
	.word	.L897,.L898
	.byte	7
	.word	.L900,.L901,.L173
	.byte	8
	.word	.L902,.L903
	.byte	8
	.word	.L904,.L905
	.byte	8
	.word	.L906,.L907
	.byte	8
	.word	.L908,.L909
	.byte	8
	.word	.L910,.L911
	.byte	11
	.word	.L912,.L901,.L173
	.byte	6
	.byte	'i',0,3,43,15
	.word	.L439,.L913
	.byte	7
	.word	.L791,.L914,.L165
	.byte	8
	.word	.L793,.L915
	.byte	8
	.word	.L795,.L916
	.byte	8
	.word	.L797,.L917
	.byte	8
	.word	.L799,.L918
	.byte	8
	.word	.L801,.L919
	.byte	11
	.word	.L803,.L914,.L165
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L920
	.byte	7
	.word	.L469,.L921,.L922
	.byte	8
	.word	.L472,.L923
	.byte	8
	.word	.L474,.L924
	.byte	11
	.word	.L476,.L921,.L922
	.byte	7
	.word	.L477,.L925,.L922
	.byte	8
	.word	.L479,.L926
	.byte	8
	.word	.L481,.L927
	.byte	8
	.word	.L483,.L928
	.byte	9
	.word	.L485,.L925,.L922
	.byte	0,0,0,7
	.word	.L585,.L929,.L170
	.byte	8
	.word	.L586,.L930
	.byte	8
	.word	.L588,.L931
	.byte	8
	.word	.L590,.L932
	.byte	9
	.word	.L592,.L929,.L170
	.byte	0,0,0,0,0,0,0,7
	.word	.L885,.L881,.L899
	.byte	8
	.word	.L887,.L888
	.byte	8
	.word	.L889,.L890
	.byte	8
	.word	.L891,.L892
	.byte	8
	.word	.L893,.L894
	.byte	8
	.word	.L895,.L896
	.byte	0,0,0,7
	.word	.L864,.L881,.L157
	.byte	8
	.word	.L867,.L868
	.byte	8
	.word	.L869,.L870
	.byte	8
	.word	.L871,.L872
	.byte	8
	.word	.L873,.L874
	.byte	8
	.word	.L875,.L876
	.byte	8
	.word	.L877,.L878
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_abbrev'
.L359:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_line'
.L360:
	.word	.L1681-.L1680
.L1680:
	.half	3
	.word	.L1683-.L1682
.L1682:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFFRecNumeration.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1683:
	.byte	5,39,7,0,5,2
	.word	.L313
	.byte	3,192,1,1,5,15,9
	.half	.L1357-.L313
	.byte	3,7,1,5,41,9
	.half	.L1684-.L1357
	.byte	1,5,50,9
	.half	.L1685-.L1684
	.byte	1,9
	.half	.L1358-.L1685
	.byte	3,1,1,5,29,9
	.half	.L1359-.L1358
	.byte	3,4,1,5,30,9
	.half	.L1686-.L1359
	.byte	3,2,1,5,28,9
	.half	.L1687-.L1686
	.byte	1,5,30,9
	.half	.L1688-.L1687
	.byte	3,1,1,5,28,9
	.half	.L1689-.L1688
	.byte	1,5,35,9
	.half	.L1690-.L1689
	.byte	3,2,1,4,5,5,36,9
	.half	.L150-.L1690
	.byte	3,210,126,1,5,45,9
	.half	.L1691-.L150
	.byte	1,5,60,9
	.half	.L1692-.L1691
	.byte	1,5,2,9
	.half	.L1693-.L1692
	.byte	1,4,1,9
	.half	.L151-.L1693
	.byte	3,176,1,1,7,9
	.half	.L1694-.L151
	.byte	1,4,2,5,9,9
	.half	.L152-.L1694
	.byte	3,214,126,1,5,31,9
	.half	.L1695-.L152
	.byte	1,5,46,9
	.half	.L1696-.L1695
	.byte	1,5,2,9
	.half	.L1697-.L1696
	.byte	1,4,1,5,38,9
	.half	.L153-.L1697
	.byte	3,173,1,1,4,6,5,9,9
	.half	.L855-.L153
	.byte	3,210,126,1,5,27,9
	.half	.L1698-.L855
	.byte	1,5,38,9
	.half	.L1699-.L1698
	.byte	1,5,2,9
	.half	.L1700-.L1699
	.byte	1,4,1,5,16,9
	.half	.L154-.L1700
	.byte	3,173,1,1,5,4,9
	.half	.L1701-.L154
	.byte	3,1,1,4,7,5,14,9
	.half	.L858-.L1701
	.byte	3,200,126,1,5,2,9
	.half	.L1702-.L858
	.byte	1,4,1,5,82,9
	.half	.L155-.L1702
	.byte	3,186,1,1,5,23,9
	.half	.L1361-.L155
	.byte	3,1,1,4,2,5,18,9
	.half	.L865-.L1361
	.byte	3,218,126,1,5,22,9
	.half	.L1703-.L865
	.byte	3,1,1,5,20,9
	.half	.L1704-.L1703
	.byte	1,5,2,9
	.half	.L1365-.L1704
	.byte	3,3,1,5,3,7,9
	.half	.L1705-.L1365
	.byte	3,2,1,5,12,9
	.half	.L156-.L1705
	.byte	3,3,1,5,2,9
	.half	.L1366-.L156
	.byte	3,1,1,5,10,9
	.half	.L1364-.L1366
	.byte	1,5,71,9
	.half	.L1706-.L1364
	.byte	3,2,1,5,3,9
	.half	.L1707-.L1706
	.byte	1,5,59,9
	.half	.L1708-.L1707
	.byte	1,5,112,9
	.half	.L1709-.L1708
	.byte	1,5,69,9
	.half	.L1710-.L1709
	.byte	1,5,12,9
	.half	.L1711-.L1710
	.byte	1,5,2,9
	.half	.L1712-.L1711
	.byte	3,1,1,5,10,9
	.half	.L1713-.L1712
	.byte	1,5,52,9
	.half	.L1714-.L1713
	.byte	3,2,1,5,113,9
	.half	.L1367-.L1714
	.byte	1,5,28,9
	.half	.L159-.L1367
	.byte	3,2,1,5,54,9
	.half	.L1715-.L159
	.byte	1,5,60,9
	.half	.L1716-.L1715
	.byte	1,4,1,5,23,9
	.half	.L1717-.L1716
	.byte	3,149,1,1,4,3,5,13,9
	.half	.L886-.L1717
	.byte	3,227,126,1,5,11,9
	.half	.L1718-.L886
	.byte	1,5,2,9
	.half	.L1719-.L1718
	.byte	1,5,3,7,9
	.half	.L1720-.L1719
	.byte	3,2,1,5,22,9
	.half	.L160-.L1720
	.byte	3,2,1,5,36,9
	.half	.L1721-.L160
	.byte	1,5,43,9
	.half	.L1722-.L1721
	.byte	1,5,10,9
	.half	.L1723-.L1722
	.byte	1,5,4,9
	.half	.L1724-.L1723
	.byte	3,1,1,5,10,9
	.half	.L1725-.L1724
	.byte	1,5,3,9
	.half	.L1726-.L1725
	.byte	3,1,1,5,42,9
	.half	.L1727-.L1726
	.byte	1,5,10,9
	.half	.L1728-.L1727
	.byte	1,5,4,9
	.half	.L1729-.L1728
	.byte	3,1,1,5,10,9
	.half	.L1730-.L1729
	.byte	1,5,45,9
	.half	.L1731-.L1730
	.byte	3,2,1,5,50,9
	.half	.L1369-.L1731
	.byte	1,4,1,5,33,9
	.half	.L866-.L1369
	.byte	3,148,1,1,4,3,5,55,9
	.half	.L881-.L866
	.byte	3,236,126,1,5,11,9
	.half	.L901-.L881
	.byte	3,103,1,5,36,9
	.half	.L1732-.L901
	.byte	1,5,46,9
	.half	.L1370-.L1732
	.byte	3,1,1,5,26,9
	.half	.L163-.L1370
	.byte	3,3,1,5,52,9
	.half	.L1733-.L163
	.byte	1,4,4,5,24,9
	.half	.L914-.L1733
	.byte	3,62,1,5,38,9
	.half	.L1371-.L914
	.byte	3,2,1,5,16,9
	.half	.L1734-.L1371
	.byte	1,5,38,9
	.half	.L1735-.L1734
	.byte	1,5,53,9
	.half	.L1736-.L1735
	.byte	1,5,7,9
	.half	.L1737-.L1736
	.byte	1,5,14,9
	.half	.L1738-.L1737
	.byte	1,5,62,9
	.half	.L1739-.L1738
	.byte	1,5,2,9
	.half	.L1740-.L1739
	.byte	1,5,3,7,9
	.half	.L1741-.L1740
	.byte	3,2,1,5,43,9
	.half	.L164-.L1741
	.byte	3,3,1,5,2,9
	.half	.L1742-.L164
	.byte	1,5,44,7,9
	.half	.L1743-.L1742
	.byte	3,3,1,5,3,9
	.half	.L1744-.L1743
	.byte	1,5,69,7,9
	.half	.L1745-.L1744
	.byte	3,2,1,5,44,9
	.half	.L167-.L1745
	.byte	3,5,1,5,3,9
	.half	.L1746-.L167
	.byte	1,5,69,7,9
	.half	.L1747-.L1746
	.byte	3,2,1,5,77,9
	.half	.L1748-.L1747
	.byte	1,5,3,9
	.half	.L168-.L1748
	.byte	3,4,1,5,70,7,9
	.half	.L1749-.L168
	.byte	3,2,1,5,2,9
	.half	.L921-.L1749
	.byte	3,168,127,1,4,8,5,54,9
	.half	.L925-.L921
	.byte	3,109,1,4,4,5,4,9
	.half	.L922-.L925
	.byte	3,236,0,1,5,3,9
	.half	.L169-.L922
	.byte	3,125,1,5,6,9
	.half	.L166-.L169
	.byte	3,8,1,4,8,5,49,9
	.half	.L929-.L166
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L170-.L929
	.byte	3,249,0,1,5,49,9
	.half	.L1750-.L170
	.byte	1,5,9,9
	.half	.L1751-.L1750
	.byte	1,5,3,9
	.half	.L1752-.L1751
	.byte	3,1,1,5,47,9
	.half	.L1753-.L1752
	.byte	1,5,7,9
	.half	.L1754-.L1753
	.byte	1,5,2,9
	.half	.L1755-.L1754
	.byte	3,1,1,4,3,5,8,9
	.half	.L165-.L1755
	.byte	3,159,127,1,5,4,7,9
	.half	.L1756-.L165
	.byte	3,2,1,5,5,9
	.half	.L172-.L1756
	.byte	3,124,1,5,29,9
	.half	.L162-.L172
	.byte	3,127,1,5,46,9
	.half	.L1757-.L162
	.byte	1,5,2,7,9
	.half	.L1758-.L1757
	.byte	3,8,1,9
	.half	.L173-.L1758
	.byte	3,16,1,4,2,5,8,9
	.half	.L161-.L173
	.byte	3,127,1,5,4,7,9
	.half	.L899-.L161
	.byte	3,2,1,5,116,9
	.half	.L176-.L899
	.byte	3,124,1,5,104,9
	.half	.L158-.L176
	.byte	1,5,113,9
	.half	.L1759-.L158
	.byte	1,5,22,7,9
	.half	.L1760-.L1759
	.byte	3,8,1,5,31,9
	.half	.L1761-.L1760
	.byte	1,5,11,9
	.half	.L1762-.L1761
	.byte	1,5,2,9
	.half	.L1763-.L1762
	.byte	3,1,1,4,1,9
	.half	.L157-.L1763
	.byte	3,141,1,1,5,1,9
	.half	.L179-.L157
	.byte	3,6,1,7,9
	.half	.L362-.L179
	.byte	0,1,1
.L1681:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_ranges'
.L361:
	.word	-1,.L313,0,.L362-.L313,0,0
.L880:
	.word	-1,.L313,.L865-.L313,.L866-.L313,.L881-.L313,.L157-.L313,0,0
.L898:
	.word	-1,.L313,.L886-.L313,.L866-.L313,.L881-.L313,.L899-.L313,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_info'
.L363:
	.word	535
	.half	3
	.word	.L364
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L366,.L365
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvGetSizeOfEDR',0,1,169,1,48
	.word	.L411
	.byte	1,1,1
	.word	.L309,.L933,.L308
	.byte	4
	.byte	'EventId',0,1,169,1,84
	.word	.L401,.L934
	.byte	4
	.byte	'RecordNumber',0,1,170,1,9
	.word	.L411,.L935
	.byte	4
	.byte	'size',0,1,171,1,11
	.word	.L746,.L936
	.byte	5
	.word	.L309,.L933
	.byte	6
	.byte	'edId',0,1,173,1,8
	.word	.L411,.L937
	.byte	7
	.word	.L753,.L131,.L132
	.byte	8
	.word	.L754,.L938
	.byte	9
	.word	.L756,.L131,.L132
	.byte	0,7
	.word	.L939,.L133,.L142
	.byte	8
	.word	.L940,.L941
	.byte	8
	.word	.L942,.L943
	.byte	8
	.word	.L944,.L945
	.byte	10
	.word	.L946,.L133,.L142
	.byte	6
	.byte	'i',0,2,128,1,15
	.word	.L439,.L947
	.byte	7
	.word	.L735,.L948,.L136
	.byte	8
	.word	.L737,.L949
	.byte	9
	.word	.L739,.L948,.L136
	.byte	0,7
	.word	.L825,.L950,.L951
	.byte	8
	.word	.L826,.L952
	.byte	10
	.word	.L828,.L950,.L951
	.byte	6
	.byte	'i',0,3,121,11
	.word	.L406,.L953
	.byte	6
	.byte	'byteSize',0,3,122,11
	.word	.L401,.L954
	.byte	7
	.word	.L834,.L955,.L140
	.byte	8
	.word	.L836,.L956
	.byte	9
	.word	.L838,.L955,.L140
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_abbrev'
.L364:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_line'
.L365:
	.word	.L1765-.L1764
.L1764:
	.half	3
	.word	.L1767-.L1766
.L1766:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0,0
.L1767:
	.byte	5,48,7,0,5,2
	.word	.L309
	.byte	3,168,1,1,5,15,9
	.half	.L1342-.L309
	.byte	3,4,1,5,41,9
	.half	.L1768-.L1342
	.byte	1,5,50,9
	.half	.L1769-.L1768
	.byte	1,4,4,5,36,9
	.half	.L131-.L1769
	.byte	3,243,126,1,5,45,9
	.half	.L1770-.L131
	.byte	1,5,56,9
	.half	.L1771-.L1770
	.byte	1,5,2,9
	.half	.L1772-.L1771
	.byte	1,4,1,9
	.half	.L132-.L1772
	.byte	3,143,1,1,7,9
	.half	.L1773-.L132
	.byte	1,4,2,5,11,9
	.half	.L133-.L1773
	.byte	3,83,1,5,44,9
	.half	.L1774-.L133
	.byte	1,5,111,9
	.half	.L1343-.L1774
	.byte	1,5,34,9
	.half	.L135-.L1343
	.byte	3,2,1,5,63,9
	.half	.L1775-.L135
	.byte	1,4,3,5,11,9
	.half	.L948-.L1775
	.byte	3,155,127,1,5,32,9
	.half	.L1776-.L948
	.byte	1,5,46,9
	.half	.L1777-.L1776
	.byte	1,5,4,9
	.half	.L1778-.L1777
	.byte	1,4,2,5,3,9
	.half	.L136-.L1778
	.byte	3,229,0,1,4,3,5,20,7,9
	.half	.L950-.L136
	.byte	3,118,1,5,34,9
	.half	.L1344-.L950
	.byte	3,1,1,5,13,9
	.half	.L1779-.L1344
	.byte	1,5,50,9
	.half	.L1780-.L1779
	.byte	1,5,65,9
	.half	.L1346-.L1780
	.byte	3,1,1,5,38,9
	.half	.L139-.L1346
	.byte	3,3,1,5,68,9
	.half	.L1781-.L139
	.byte	1,4,5,5,31,9
	.half	.L955-.L1781
	.byte	3,24,1,5,9,9
	.half	.L1782-.L955
	.byte	1,5,31,9
	.half	.L1783-.L1782
	.byte	1,5,46,9
	.half	.L1784-.L1783
	.byte	1,5,2,9
	.half	.L1785-.L1784
	.byte	1,4,3,5,16,9
	.half	.L140-.L1785
	.byte	3,104,1,5,10,9
	.half	.L1347-.L140
	.byte	3,126,1,5,48,9
	.half	.L138-.L1347
	.byte	3,127,1,5,65,9
	.half	.L1786-.L138
	.byte	1,5,4,7,9
	.half	.L1787-.L1786
	.byte	3,5,1,4,2,5,10,9
	.half	.L141-.L1787
	.byte	3,5,1,5,4,9
	.half	.L951-.L141
	.byte	3,1,1,5,114,9
	.half	.L137-.L951
	.byte	3,123,1,5,95,9
	.half	.L134-.L137
	.byte	1,5,111,9
	.half	.L1788-.L134
	.byte	1,5,2,7,9
	.half	.L1789-.L1788
	.byte	3,9,1,4,1,9
	.half	.L142-.L1789
	.byte	3,37,1,5,1,9
	.half	.L144-.L142
	.byte	3,5,1,7,9
	.half	.L367-.L144
	.byte	0,1,1
.L1765:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_ranges'
.L366:
	.word	-1,.L309,0,.L367-.L309,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_info'
.L368:
	.word	330
	.half	3
	.word	.L369
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L371,.L370
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvGetSizeOfED',0,1,183,1,48
	.word	.L411
	.byte	1,1,1
	.word	.L311,.L957,.L310
	.byte	4
	.byte	'EventId',0,1,183,1,83
	.word	.L401,.L958
	.byte	4
	.byte	'size',0,1,183,1,100
	.word	.L746,.L959
	.byte	5
	.word	.L311,.L957
	.byte	6
	.byte	'edId',0,1,185,1,8
	.word	.L411,.L960
	.byte	7
	.word	.L753,.L145,.L146
	.byte	8
	.word	.L754,.L961
	.byte	9
	.word	.L756,.L145,.L146
	.byte	0,7
	.word	.L420,.L147,.L148
	.byte	8
	.word	.L422,.L962
	.byte	9
	.word	.L424,.L147,.L148
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_abbrev'
.L369:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_line'
.L370:
	.word	.L1791-.L1790
.L1790:
	.half	3
	.word	.L1793-.L1792
.L1792:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0,0
.L1793:
	.byte	5,48,7,0,5,2
	.word	.L311
	.byte	3,182,1,1,5,15,9
	.half	.L1349-.L311
	.byte	3,2,1,5,41,9
	.half	.L1794-.L1349
	.byte	1,5,50,9
	.half	.L1795-.L1794
	.byte	1,4,2,5,36,9
	.half	.L145-.L1795
	.byte	3,231,126,1,5,45,9
	.half	.L1796-.L145
	.byte	1,5,56,9
	.half	.L1797-.L1796
	.byte	1,5,2,9
	.half	.L1798-.L1797
	.byte	1,4,1,9
	.half	.L146-.L1798
	.byte	3,155,1,1,7,9
	.half	.L1799-.L146
	.byte	1,4,3,5,9,9
	.half	.L147-.L1799
	.byte	3,238,126,1,5,27,9
	.half	.L1800-.L147
	.byte	1,5,38,9
	.half	.L1801-.L1800
	.byte	1,5,2,9
	.half	.L1802-.L1801
	.byte	1,4,1,5,8,9
	.half	.L148-.L1802
	.byte	3,147,1,1,5,9,9
	.half	.L1803-.L148
	.byte	3,1,1,5,2,9
	.half	.L1804-.L1803
	.byte	1,5,1,9
	.half	.L149-.L1804
	.byte	3,1,1,7,9
	.half	.L372-.L149
	.byte	0,1,1
.L1791:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_ranges'
.L371:
	.word	-1,.L311,0,.L372-.L311,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_info'
.L373:
	.word	481
	.half	3
	.word	.L374
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L376,.L375
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvGetSizeOfFF',0,1,225,1,41
	.word	.L411
	.byte	1,1,1
	.word	.L315,.L963,.L314
	.byte	4
	.byte	'EventId',0,1,225,1,76
	.word	.L401,.L964
	.byte	4
	.byte	'size',0,1,225,1,93
	.word	.L746,.L965
	.byte	5
	.word	.L315,.L963
	.byte	6
	.byte	'ffId',0,1,227,1,8
	.word	.L411,.L966
	.byte	7
	.word	.L850,.L967,.L180
	.byte	8
	.word	.L851,.L968
	.byte	9
	.word	.L853,.L967,.L180
	.byte	0,7
	.word	.L969,.L970,.L188
	.byte	8
	.word	.L971,.L972
	.byte	8
	.word	.L973,.L974
	.byte	10
	.word	.L975,.L970,.L188
	.byte	6
	.byte	'i',0,2,81,15
	.word	.L439,.L976
	.byte	7
	.word	.L977,.L978,.L187
	.byte	8
	.word	.L979,.L980
	.byte	11
	.word	.L981,.L982
	.byte	6
	.byte	'i',0,3,110,15
	.word	.L439,.L985
	.byte	6
	.byte	'byteSize',0,3,111,9
	.word	.L401,.L986
	.byte	7
	.word	.L834,.L987,.L186
	.byte	8
	.word	.L836,.L988
	.byte	9
	.word	.L838,.L987,.L186
	.byte	0,0,0,7
	.word	.L977,.L983,.L984
	.byte	8
	.word	.L979,.L980
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_abbrev'
.L374:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_line'
.L375:
	.word	.L1806-.L1805
.L1805:
	.half	3
	.word	.L1808-.L1807
.L1807:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0,0
.L1808:
	.byte	5,15,7,0,5,2
	.word	.L315
	.byte	3,226,1,1,5,41,9
	.half	.L1809-.L315
	.byte	1,5,50,9
	.half	.L1810-.L1809
	.byte	1,4,4,5,36,9
	.half	.L967-.L1810
	.byte	3,193,126,1,5,45,9
	.half	.L1811-.L967
	.byte	1,5,60,9
	.half	.L1812-.L1811
	.byte	1,5,2,9
	.half	.L1813-.L1812
	.byte	1,4,1,9
	.half	.L180-.L1813
	.byte	3,192,1,1,4,2,5,10,7,9
	.half	.L970-.L180
	.byte	3,238,126,1,5,8,9
	.half	.L1814-.L970
	.byte	1,5,11,9
	.half	.L1815-.L1814
	.byte	3,2,1,5,52,9
	.half	.L1816-.L1815
	.byte	1,5,113,9
	.half	.L1375-.L1816
	.byte	1,5,32,9
	.half	.L183-.L1375
	.byte	3,2,1,5,58,9
	.half	.L1817-.L183
	.byte	1,4,3,5,18,9
	.half	.L978-.L1817
	.byte	3,25,1,5,11,9
	.half	.L1376-.L978
	.byte	3,2,1,5,36,9
	.half	.L1818-.L1376
	.byte	1,5,46,9
	.half	.L1378-.L1818
	.byte	3,1,1,5,34,9
	.half	.L185-.L1378
	.byte	3,3,1,5,60,9
	.half	.L1819-.L185
	.byte	1,4,5,5,31,9
	.half	.L987-.L1819
	.byte	3,34,1,5,9,9
	.half	.L1820-.L987
	.byte	1,5,31,9
	.half	.L1821-.L1820
	.byte	1,5,46,9
	.half	.L1822-.L1821
	.byte	1,5,2,9
	.half	.L1823-.L1822
	.byte	1,4,3,5,12,9
	.half	.L186-.L1823
	.byte	3,94,1,5,5,9
	.half	.L1379-.L186
	.byte	3,126,1,5,29,9
	.half	.L184-.L1379
	.byte	3,127,1,5,46,9
	.half	.L1824-.L184
	.byte	1,5,2,7,9
	.half	.L1825-.L1824
	.byte	3,5,1,4,2,5,4,9
	.half	.L187-.L1825
	.byte	3,95,1,5,9,9
	.half	.L983-.L187
	.byte	1,5,116,9
	.half	.L1826-.L983
	.byte	3,126,1,5,104,9
	.half	.L182-.L1826
	.byte	1,5,113,9
	.half	.L1827-.L182
	.byte	1,5,2,7,9
	.half	.L1828-.L1827
	.byte	3,5,1,4,1,5,3,9
	.half	.L188-.L1828
	.byte	3,141,1,1,5,10,9
	.half	.L181-.L188
	.byte	3,4,1,5,3,9
	.half	.L1829-.L181
	.byte	1,5,1,9
	.half	.L189-.L1829
	.byte	3,2,1,7,9
	.half	.L377-.L189
	.byte	0,1,1
.L1806:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_ranges'
.L376:
	.word	-1,.L315,0,.L377-.L315,0,0
.L982:
	.word	-1,.L315,.L978-.L315,.L187-.L315,.L983-.L315,.L984-.L315,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_info'
.L378:
	.word	1067
	.half	3
	.word	.L379
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L381,.L380
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveRawED',0,1,240,1,16
	.word	.L411
	.byte	1,1,1
	.word	.L317,.L989,.L316
	.byte	4
	.byte	'EventId',0,1,240,1,53
	.word	.L401,.L990
	.byte	4
	.byte	'dest',0,1,241,1,10
	.word	.L403,.L991
	.byte	4
	.byte	'destSize',0,1,242,1,11
	.word	.L746,.L992
	.byte	4
	.byte	'src',0,1,243,1,16
	.word	.L441,.L993
	.byte	4
	.byte	'evMemLocation',0,1,244,1,29
	.word	.L749,.L994
	.byte	5
	.word	.L317,.L989
	.byte	6
	.byte	'edId',0,1,246,1,8
	.word	.L411,.L995
	.byte	6
	.byte	'size',0,1,247,1,9
	.word	.L401,.L996
	.byte	6
	.byte	'internalEnvData',0,1,248,1,25
	.word	.L413,.L997
	.byte	7
	.word	.L420,.L998,.L191
	.byte	8
	.word	.L422,.L999
	.byte	9
	.word	.L424,.L998,.L191
	.byte	0,7
	.word	.L753,.L1000,.L192
	.byte	8
	.word	.L754,.L1001
	.byte	9
	.word	.L756,.L1000,.L192
	.byte	0,7
	.word	.L1002,.L1003,.L1004
	.byte	8
	.word	.L1005,.L1006
	.byte	8
	.word	.L1007,.L1008
	.byte	8
	.word	.L1009,.L1010
	.byte	8
	.word	.L1011,.L1012
	.byte	8
	.word	.L1013,.L1014
	.byte	10
	.word	.L1015,.L1016
	.byte	6
	.byte	'writepos',0,2,61,9
	.word	.L403,.L1018
	.byte	6
	.byte	'end',0,2,62,9
	.word	.L403,.L1019
	.byte	6
	.byte	'i',0,2,63,15
	.word	.L439,.L1020
	.byte	7
	.word	.L777,.L1021,.L1004
	.byte	8
	.word	.L779,.L1022
	.byte	8
	.word	.L781,.L1023
	.byte	8
	.word	.L783,.L1024
	.byte	8
	.word	.L785,.L1025
	.byte	8
	.word	.L787,.L1026
	.byte	10
	.word	.L789,.L1027
	.byte	6
	.byte	'i',0,3,105,11
	.word	.L406,.L1028
	.byte	7
	.word	.L791,.L1029,.L1004
	.byte	8
	.word	.L793,.L1030
	.byte	8
	.word	.L795,.L1031
	.byte	8
	.word	.L797,.L1032
	.byte	8
	.word	.L799,.L1033
	.byte	8
	.word	.L801,.L1034
	.byte	10
	.word	.L803,.L1035
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L1036
	.byte	7
	.word	.L469,.L1037,.L1038
	.byte	8
	.word	.L472,.L1039
	.byte	8
	.word	.L474,.L1040
	.byte	11
	.word	.L476,.L1037,.L1038
	.byte	7
	.word	.L477,.L1041,.L1038
	.byte	8
	.word	.L479,.L1042
	.byte	8
	.word	.L481,.L1043
	.byte	8
	.word	.L483,.L1044
	.byte	9
	.word	.L485,.L1041,.L1038
	.byte	0,0,0,7
	.word	.L585,.L1045,.L205
	.byte	8
	.word	.L586,.L1046
	.byte	8
	.word	.L588,.L1047
	.byte	8
	.word	.L590,.L1048
	.byte	9
	.word	.L592,.L1045,.L205
	.byte	0,0,0,7
	.word	.L791,.L1017,.L200
	.byte	8
	.word	.L793,.L1030
	.byte	8
	.word	.L795,.L1031
	.byte	8
	.word	.L797,.L1032
	.byte	8
	.word	.L799,.L1033
	.byte	8
	.word	.L801,.L1034
	.byte	0,0,0,7
	.word	.L777,.L1017,.L208
	.byte	8
	.word	.L779,.L1022
	.byte	8
	.word	.L781,.L1023
	.byte	8
	.word	.L783,.L1024
	.byte	8
	.word	.L785,.L1025
	.byte	8
	.word	.L787,.L1026
	.byte	0,0,0,7
	.word	.L1002,.L1017,.L211
	.byte	8
	.word	.L1005,.L1006
	.byte	8
	.word	.L1007,.L1008
	.byte	8
	.word	.L1009,.L1010
	.byte	8
	.word	.L1011,.L1012
	.byte	8
	.word	.L1013,.L1014
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_abbrev'
.L379:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_line'
.L380:
	.word	.L1831-.L1830
.L1830:
	.half	3
	.word	.L1833-.L1832
.L1832:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1833:
	.byte	5,16,7,0,5,2
	.word	.L317
	.byte	3,239,1,1,5,15,9
	.half	.L1384-.L317
	.byte	3,6,1,5,41,9
	.half	.L1834-.L1384
	.byte	1,5,50,9
	.half	.L1835-.L1834
	.byte	1,4,2,5,9,9
	.half	.L998-.L1835
	.byte	3,179,126,1,5,27,9
	.half	.L1836-.L998
	.byte	1,5,38,9
	.half	.L1381-.L1836
	.byte	1,5,2,9
	.half	.L1837-.L1381
	.byte	1,4,1,5,29,9
	.half	.L191-.L1837
	.byte	3,209,1,1,5,30,9
	.half	.L1838-.L191
	.byte	3,2,1,5,28,9
	.half	.L1839-.L1838
	.byte	1,5,30,9
	.half	.L1840-.L1839
	.byte	3,1,1,5,28,9
	.half	.L1841-.L1840
	.byte	1,5,35,9
	.half	.L1842-.L1841
	.byte	3,2,1,4,5,5,36,9
	.half	.L1000-.L1842
	.byte	3,161,126,1,5,45,9
	.half	.L1843-.L1000
	.byte	1,5,56,9
	.half	.L1844-.L1843
	.byte	1,5,2,9
	.half	.L1845-.L1844
	.byte	1,4,1,5,6,9
	.half	.L192-.L1845
	.byte	3,225,1,1,5,50,7,9
	.half	.L1846-.L192
	.byte	1,5,47,9
	.half	.L1847-.L1846
	.byte	1,5,68,7,9
	.half	.L1848-.L1847
	.byte	3,2,1,4,2,5,18,9
	.half	.L1003-.L1848
	.byte	3,186,126,1,5,22,9
	.half	.L1849-.L1003
	.byte	3,1,1,5,20,9
	.half	.L1850-.L1849
	.byte	1,5,11,9
	.half	.L1389-.L1850
	.byte	3,3,1,5,44,9
	.half	.L1851-.L1389
	.byte	1,5,111,9
	.half	.L1390-.L1851
	.byte	1,5,28,9
	.half	.L196-.L1390
	.byte	3,2,1,5,57,9
	.half	.L1852-.L196
	.byte	1,5,63,9
	.half	.L1853-.L1852
	.byte	1,4,1,5,68,9
	.half	.L1854-.L1853
	.byte	3,192,1,1,4,3,5,34,9
	.half	.L1021-.L1854
	.byte	3,231,126,1,5,13,9
	.half	.L1855-.L1021
	.byte	1,5,50,9
	.half	.L1856-.L1855
	.byte	1,5,65,9
	.half	.L1391-.L1856
	.byte	3,1,1,5,30,9
	.half	.L198-.L1391
	.byte	3,3,1,5,60,9
	.half	.L1857-.L198
	.byte	1,4,4,5,24,9
	.half	.L1029-.L1857
	.byte	3,1,1,5,38,9
	.half	.L1392-.L1029
	.byte	3,2,1,5,16,9
	.half	.L1858-.L1392
	.byte	1,5,38,9
	.half	.L1859-.L1858
	.byte	1,5,53,9
	.half	.L1860-.L1859
	.byte	1,5,7,9
	.half	.L1861-.L1860
	.byte	1,5,14,9
	.half	.L1862-.L1861
	.byte	1,5,62,9
	.half	.L1863-.L1862
	.byte	1,5,2,9
	.half	.L1395-.L1863
	.byte	1,5,3,7,9
	.half	.L1864-.L1395
	.byte	3,2,1,5,43,9
	.half	.L199-.L1864
	.byte	3,3,1,5,2,9
	.half	.L1865-.L199
	.byte	1,5,44,7,9
	.half	.L1866-.L1865
	.byte	3,3,1,5,3,9
	.half	.L1394-.L1866
	.byte	1,5,69,7,9
	.half	.L1867-.L1394
	.byte	3,2,1,5,44,9
	.half	.L202-.L1867
	.byte	3,5,1,5,3,9
	.half	.L1868-.L202
	.byte	1,5,69,7,9
	.half	.L1869-.L1868
	.byte	3,2,1,4,1,5,74,9
	.half	.L1004-.L1869
	.byte	3,129,1,1,4,4,5,77,9
	.half	.L1017-.L1004
	.byte	3,255,126,1,5,3,9
	.half	.L203-.L1017
	.byte	3,4,1,5,70,7,9
	.half	.L1870-.L203
	.byte	3,2,1,5,2,9
	.half	.L1037-.L1870
	.byte	3,168,127,1,4,6,5,54,9
	.half	.L1041-.L1037
	.byte	3,109,1,4,4,5,4,9
	.half	.L1038-.L1041
	.byte	3,236,0,1,5,3,9
	.half	.L204-.L1038
	.byte	3,125,1,5,6,9
	.half	.L201-.L204
	.byte	3,8,1,4,6,5,49,9
	.half	.L1045-.L201
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L205-.L1045
	.byte	3,249,0,1,5,49,9
	.half	.L1871-.L205
	.byte	1,5,9,9
	.half	.L1872-.L1871
	.byte	1,5,3,9
	.half	.L1873-.L1872
	.byte	3,1,1,5,47,9
	.half	.L1874-.L1873
	.byte	1,5,7,9
	.half	.L1875-.L1874
	.byte	1,5,2,9
	.half	.L1876-.L1875
	.byte	3,1,1,4,3,5,12,9
	.half	.L200-.L1876
	.byte	3,92,1,5,10,7,9
	.half	.L1877-.L200
	.byte	3,2,1,9
	.half	.L207-.L1877
	.byte	3,124,1,5,48,9
	.half	.L197-.L207
	.byte	3,127,1,5,65,9
	.half	.L1878-.L197
	.byte	1,5,4,7,9
	.half	.L1879-.L1878
	.byte	3,8,1,4,2,5,8,9
	.half	.L208-.L1879
	.byte	3,80,1,5,4,7,9
	.half	.L1880-.L208
	.byte	3,2,1,5,114,9
	.half	.L210-.L1880
	.byte	3,124,1,5,95,9
	.half	.L195-.L210
	.byte	1,5,111,9
	.half	.L1881-.L195
	.byte	1,5,22,7,9
	.half	.L1882-.L1881
	.byte	3,8,1,5,31,9
	.half	.L1883-.L1882
	.byte	1,5,11,9
	.half	.L1884-.L1883
	.byte	1,5,2,9
	.half	.L1885-.L1884
	.byte	3,1,1,4,1,5,13,9
	.half	.L211-.L1885
	.byte	3,186,1,1,5,10,9
	.half	.L1886-.L211
	.byte	3,1,1,5,3,9
	.half	.L1887-.L1886
	.byte	1,5,10,9
	.half	.L193-.L1887
	.byte	3,4,1,5,3,9
	.half	.L1888-.L193
	.byte	1,5,1,9
	.half	.L213-.L1888
	.byte	3,2,1,7,9
	.half	.L382-.L213
	.byte	0,1,1
.L1831:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_ranges'
.L381:
	.word	-1,.L317,0,.L382-.L317,0,0
.L1016:
	.word	-1,.L317,.L1003-.L317,.L1004-.L317,.L1017-.L317,.L211-.L317,0,0
.L1027:
	.word	-1,.L317,.L1021-.L317,.L1004-.L317,.L1017-.L317,.L208-.L317,0,0
.L1035:
	.word	-1,.L317,.L1029-.L317,.L1004-.L317,.L1017-.L317,.L200-.L317,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_info'
.L383:
	.word	1093
	.half	3
	.word	.L384
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L386,.L385
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveRawEDR',0,1,141,2,19
	.word	.L411
	.byte	1,1,1
	.word	.L319,.L1049,.L318
	.byte	4
	.byte	'EventId',0,1,141,2,57
	.word	.L401,.L1050
	.byte	4
	.byte	'RecordNumber',0,1,142,2,9
	.word	.L411,.L1051
	.byte	4
	.byte	'dest',0,1,143,2,10
	.word	.L403,.L1052
	.byte	4
	.byte	'destSize',0,1,144,2,11
	.word	.L746,.L1053
	.byte	4
	.byte	'src',0,1,145,2,16
	.word	.L441,.L1054
	.byte	4
	.byte	'evMemLocation',0,1,146,2,29
	.word	.L749,.L1055
	.byte	5
	.word	.L319,.L1049
	.byte	6
	.byte	'edId',0,1,148,2,8
	.word	.L411,.L1056
	.byte	6
	.byte	'internalEnvData',0,1,149,2,25
	.word	.L413,.L1057
	.byte	7
	.word	.L753,.L1058,.L215
	.byte	8
	.word	.L754,.L1059
	.byte	9
	.word	.L756,.L1058,.L215
	.byte	0,7
	.word	.L757,.L1060,.L235
	.byte	8
	.word	.L759,.L1061
	.byte	8
	.word	.L761,.L1062
	.byte	8
	.word	.L763,.L1063
	.byte	8
	.word	.L765,.L1064
	.byte	8
	.word	.L767,.L1065
	.byte	8
	.word	.L769,.L1066
	.byte	10
	.word	.L771,.L1060,.L235
	.byte	6
	.byte	'writepos',0,2,100,9
	.word	.L403,.L1067
	.byte	6
	.byte	'end',0,2,101,9
	.word	.L403,.L1068
	.byte	6
	.byte	'i',0,2,102,15
	.word	.L439,.L1069
	.byte	7
	.word	.L735,.L1070,.L219
	.byte	8
	.word	.L737,.L1071
	.byte	9
	.word	.L739,.L1070,.L219
	.byte	0,7
	.word	.L777,.L1072,.L232
	.byte	8
	.word	.L779,.L1073
	.byte	8
	.word	.L781,.L1074
	.byte	8
	.word	.L783,.L1075
	.byte	8
	.word	.L785,.L1076
	.byte	8
	.word	.L787,.L1077
	.byte	10
	.word	.L789,.L1072,.L232
	.byte	6
	.byte	'i',0,3,105,11
	.word	.L406,.L1078
	.byte	7
	.word	.L791,.L1079,.L224
	.byte	8
	.word	.L793,.L1080
	.byte	8
	.word	.L795,.L1081
	.byte	8
	.word	.L797,.L1082
	.byte	8
	.word	.L799,.L1083
	.byte	8
	.word	.L801,.L1084
	.byte	10
	.word	.L803,.L1079,.L224
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L1085
	.byte	7
	.word	.L469,.L1086,.L1087
	.byte	8
	.word	.L472,.L1088
	.byte	8
	.word	.L474,.L1089
	.byte	10
	.word	.L476,.L1086,.L1087
	.byte	7
	.word	.L477,.L1090,.L1087
	.byte	8
	.word	.L479,.L1091
	.byte	8
	.word	.L481,.L1092
	.byte	8
	.word	.L483,.L1093
	.byte	9
	.word	.L485,.L1090,.L1087
	.byte	0,0,0,7
	.word	.L585,.L1094,.L229
	.byte	8
	.word	.L586,.L1095
	.byte	8
	.word	.L588,.L1096
	.byte	8
	.word	.L590,.L1097
	.byte	9
	.word	.L592,.L1094,.L229
	.byte	0,0,0,0,0,7
	.word	.L817,.L1098,.L1099
	.byte	8
	.word	.L820,.L1100
	.byte	8
	.word	.L822,.L1101
	.byte	10
	.word	.L824,.L1098,.L1099
	.byte	7
	.word	.L825,.L1098,.L240
	.byte	8
	.word	.L826,.L1102
	.byte	11
	.word	.L828,.L1103
	.byte	6
	.byte	'i',0,3,121,11
	.word	.L406,.L1106
	.byte	6
	.byte	'byteSize',0,3,122,11
	.word	.L401,.L1107
	.byte	7
	.word	.L834,.L1108,.L239
	.byte	8
	.word	.L836,.L1109
	.byte	9
	.word	.L838,.L1108,.L239
	.byte	0,0,0,7
	.word	.L825,.L1104,.L1105
	.byte	8
	.word	.L826,.L1102
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_abbrev'
.L384:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_line'
.L385:
	.word	.L1890-.L1889
.L1889:
	.half	3
	.word	.L1892-.L1891
.L1891:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedDataRec.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1892:
	.byte	5,19,7,0,5,2
	.word	.L319
	.byte	3,140,2,1,5,15,9
	.half	.L1404-.L319
	.byte	3,7,1,5,41,9
	.half	.L1893-.L1404
	.byte	1,5,50,9
	.half	.L1894-.L1893
	.byte	1,5,29,9
	.half	.L1405-.L1894
	.byte	3,3,1,5,30,9
	.half	.L1895-.L1405
	.byte	3,2,1,5,28,9
	.half	.L1896-.L1895
	.byte	1,5,30,9
	.half	.L1897-.L1896
	.byte	3,1,1,5,28,9
	.half	.L1898-.L1897
	.byte	1,5,35,9
	.half	.L1899-.L1898
	.byte	3,2,1,4,5,5,36,9
	.half	.L1058-.L1899
	.byte	3,132,126,1,5,45,9
	.half	.L1900-.L1058
	.byte	1,5,56,9
	.half	.L1901-.L1900
	.byte	1,5,2,9
	.half	.L1902-.L1901
	.byte	1,4,1,9
	.half	.L215-.L1902
	.byte	3,254,1,1,5,90,7,9
	.half	.L1903-.L215
	.byte	3,2,1,5,96,9
	.half	.L1904-.L1903
	.byte	1,4,2,5,18,9
	.half	.L1060-.L1904
	.byte	3,196,126,1,5,22,9
	.half	.L1905-.L1060
	.byte	3,1,1,5,20,9
	.half	.L1906-.L1905
	.byte	1,5,11,9
	.half	.L1409-.L1906
	.byte	3,3,1,5,44,9
	.half	.L1402-.L1409
	.byte	1,5,111,9
	.half	.L1406-.L1402
	.byte	1,5,34,9
	.half	.L218-.L1406
	.byte	3,2,1,5,63,9
	.half	.L1907-.L218
	.byte	1,4,3,5,11,9
	.half	.L1070-.L1907
	.byte	3,181,127,1,5,32,9
	.half	.L1908-.L1070
	.byte	1,5,46,9
	.half	.L1909-.L1908
	.byte	1,5,4,9
	.half	.L1910-.L1909
	.byte	1,4,2,5,3,9
	.half	.L219-.L1910
	.byte	3,203,0,1,5,64,7,9
	.half	.L1911-.L219
	.byte	3,2,1,5,74,9
	.half	.L1912-.L1911
	.byte	1,4,1,5,90,9
	.half	.L1913-.L1912
	.byte	3,180,1,1,4,2,5,85,9
	.half	.L1914-.L1913
	.byte	3,204,126,1,4,3,5,34,9
	.half	.L1072-.L1914
	.byte	3,126,1,5,13,9
	.half	.L1915-.L1072
	.byte	1,5,50,9
	.half	.L1916-.L1915
	.byte	1,5,65,9
	.half	.L1410-.L1916
	.byte	3,1,1,5,30,9
	.half	.L222-.L1410
	.byte	3,3,1,5,60,9
	.half	.L1917-.L222
	.byte	1,4,4,5,24,9
	.half	.L1079-.L1917
	.byte	3,1,1,5,38,9
	.half	.L1411-.L1079
	.byte	3,2,1,5,16,9
	.half	.L1918-.L1411
	.byte	1,5,38,9
	.half	.L1919-.L1918
	.byte	1,5,53,9
	.half	.L1920-.L1919
	.byte	1,5,7,9
	.half	.L1921-.L1920
	.byte	1,5,14,9
	.half	.L1922-.L1921
	.byte	1,5,62,9
	.half	.L1923-.L1922
	.byte	1,5,2,9
	.half	.L1924-.L1923
	.byte	1,5,3,7,9
	.half	.L1925-.L1924
	.byte	3,2,1,5,43,9
	.half	.L223-.L1925
	.byte	3,3,1,5,2,9
	.half	.L1926-.L223
	.byte	1,5,44,7,9
	.half	.L1927-.L1926
	.byte	3,3,1,5,3,9
	.half	.L1928-.L1927
	.byte	1,5,69,7,9
	.half	.L1929-.L1928
	.byte	3,2,1,5,44,9
	.half	.L226-.L1929
	.byte	3,5,1,5,3,9
	.half	.L1930-.L226
	.byte	1,5,69,7,9
	.half	.L1931-.L1930
	.byte	3,2,1,5,77,9
	.half	.L1932-.L1931
	.byte	1,5,3,9
	.half	.L227-.L1932
	.byte	3,4,1,5,70,7,9
	.half	.L1933-.L227
	.byte	3,2,1,5,2,9
	.half	.L1086-.L1933
	.byte	3,168,127,1,4,6,5,54,9
	.half	.L1090-.L1086
	.byte	3,109,1,4,4,5,4,9
	.half	.L1087-.L1090
	.byte	3,236,0,1,5,3,9
	.half	.L228-.L1087
	.byte	3,125,1,5,6,9
	.half	.L225-.L228
	.byte	3,8,1,4,6,5,49,9
	.half	.L1094-.L225
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L229-.L1094
	.byte	3,249,0,1,5,49,9
	.half	.L1934-.L229
	.byte	1,5,9,9
	.half	.L1935-.L1934
	.byte	1,5,3,9
	.half	.L1936-.L1935
	.byte	3,1,1,5,47,9
	.half	.L1937-.L1936
	.byte	1,5,7,9
	.half	.L1938-.L1937
	.byte	1,5,2,9
	.half	.L1939-.L1938
	.byte	3,1,1,4,3,5,12,9
	.half	.L224-.L1939
	.byte	3,92,1,5,10,7,9
	.half	.L1940-.L224
	.byte	3,2,1,9
	.half	.L231-.L1940
	.byte	3,124,1,5,48,9
	.half	.L221-.L231
	.byte	3,127,1,5,65,9
	.half	.L1941-.L221
	.byte	1,5,4,7,9
	.half	.L1942-.L1941
	.byte	3,8,1,4,2,5,9,9
	.half	.L232-.L1942
	.byte	3,121,1,5,5,7,9
	.half	.L1943-.L232
	.byte	3,2,1,5,24,9
	.half	.L234-.L1943
	.byte	3,2,1,5,33,9
	.half	.L1944-.L234
	.byte	1,5,13,9
	.half	.L1945-.L1944
	.byte	1,5,4,9
	.half	.L1946-.L1945
	.byte	3,1,1,4,1,5,90,9
	.half	.L220-.L1946
	.byte	3,175,1,1,4,3,5,20,9
	.half	.L1098-.L220
	.byte	3,218,126,1,5,34,9
	.half	.L1415-.L1098
	.byte	3,1,1,5,13,9
	.half	.L1947-.L1415
	.byte	1,5,50,9
	.half	.L1948-.L1947
	.byte	1,5,65,9
	.half	.L1417-.L1948
	.byte	3,1,1,5,38,9
	.half	.L238-.L1417
	.byte	3,3,1,5,68,9
	.half	.L1949-.L238
	.byte	1,4,4,5,31,9
	.half	.L1108-.L1949
	.byte	3,24,1,5,9,9
	.half	.L1950-.L1108
	.byte	1,5,31,9
	.half	.L1951-.L1950
	.byte	1,5,46,9
	.half	.L1952-.L1951
	.byte	1,5,2,9
	.half	.L1953-.L1952
	.byte	1,4,3,5,16,9
	.half	.L239-.L1953
	.byte	3,104,1,5,10,9
	.half	.L1418-.L239
	.byte	3,126,1,5,48,9
	.half	.L237-.L1418
	.byte	3,127,1,5,65,9
	.half	.L1954-.L237
	.byte	1,5,4,7,9
	.half	.L1955-.L1954
	.byte	3,5,1,5,3,9
	.half	.L240-.L1955
	.byte	3,6,1,5,7,9
	.half	.L1104-.L240
	.byte	1,4,2,5,114,9
	.half	.L1099-.L1104
	.byte	3,97,1,5,95,9
	.half	.L217-.L1099
	.byte	1,5,111,9
	.half	.L1956-.L217
	.byte	1,5,2,7,9
	.half	.L1957-.L1956
	.byte	3,17,1,4,1,5,5,9
	.half	.L235-.L1957
	.byte	3,168,1,1,5,9,9
	.half	.L1958-.L235
	.byte	3,127,1,5,10,9
	.half	.L216-.L1958
	.byte	3,5,1,5,3,9
	.half	.L1959-.L216
	.byte	1,5,1,9
	.half	.L242-.L1959
	.byte	3,2,1,7,9
	.half	.L387-.L242
	.byte	0,1,1
.L1890:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_ranges'
.L386:
	.word	-1,.L319,0,.L387-.L319,0,0
.L1103:
	.word	-1,.L319,.L1098-.L319,.L240-.L319,.L1104-.L319,.L1105-.L319,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_info'
.L388:
	.word	1148
	.half	3
	.word	.L389
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L391,.L390
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveRawFF',0,1,169,2,16
	.word	.L411
	.byte	1,1,1
	.word	.L321,.L1110,.L320
	.byte	4
	.byte	'EventId',0,1,169,2,53
	.word	.L401,.L1111
	.byte	4
	.byte	'dest',0,1,170,2,10
	.word	.L403,.L1112
	.byte	4
	.byte	'destSize',0,1,171,2,11
	.word	.L746,.L1113
	.byte	4
	.byte	'ffIndex',0,1,172,2,9
	.word	.L411,.L1114
	.byte	4
	.byte	'src',0,1,173,2,16
	.word	.L441,.L1115
	.byte	4
	.byte	'evMemLocation',0,1,174,2,29
	.word	.L749,.L1116
	.byte	5
	.word	.L321,.L1110
	.byte	6
	.byte	'edId',0,1,176,2,8
	.word	.L411,.L1117
	.byte	6
	.byte	'ffId',0,1,177,2,8
	.word	.L411,.L1118
	.byte	6
	.byte	'size',0,1,178,2,9
	.word	.L401,.L1119
	.byte	6
	.byte	'internalEnvData',0,1,179,2,25
	.word	.L413,.L1120
	.byte	6
	.byte	'readpos',0,1,180,2,15
	.word	.L441,.L1121
	.byte	7
	.word	.L505,.L1122,.L244
	.byte	8
	.word	.L506,.L1123
	.byte	9
	.word	.L508,.L1122,.L244
	.byte	0,7
	.word	.L505,.L1124,.L245
	.byte	8
	.word	.L506,.L1123
	.byte	9
	.word	.L508,.L1124,.L245
	.byte	0,7
	.word	.L420,.L1125,.L246
	.byte	8
	.word	.L422,.L1126
	.byte	9
	.word	.L424,.L1125,.L246
	.byte	0,7
	.word	.L850,.L1127,.L247
	.byte	8
	.word	.L851,.L1128
	.byte	9
	.word	.L853,.L1127,.L247
	.byte	0,7
	.word	.L1129,.L1130,.L1131
	.byte	8
	.word	.L1132,.L1133
	.byte	8
	.word	.L1134,.L1135
	.byte	8
	.word	.L1136,.L1137
	.byte	8
	.word	.L1138,.L1139
	.byte	8
	.word	.L1140,.L1141
	.byte	10
	.word	.L1142,.L1143
	.byte	6
	.byte	'writepos',0,2,94,9
	.word	.L403,.L1148
	.byte	6
	.byte	'end',0,2,95,9
	.word	.L403,.L1149
	.byte	6
	.byte	'i',0,2,96,15
	.word	.L439,.L1150
	.byte	7
	.word	.L900,.L1151,.L263
	.byte	8
	.word	.L902,.L1152
	.byte	8
	.word	.L904,.L1153
	.byte	8
	.word	.L906,.L1154
	.byte	8
	.word	.L908,.L1155
	.byte	8
	.word	.L910,.L1156
	.byte	11
	.word	.L912,.L1151,.L263
	.byte	6
	.byte	'i',0,3,43,15
	.word	.L439,.L1157
	.byte	7
	.word	.L791,.L1158,.L255
	.byte	8
	.word	.L793,.L1159
	.byte	8
	.word	.L795,.L1160
	.byte	8
	.word	.L797,.L1161
	.byte	8
	.word	.L799,.L1162
	.byte	8
	.word	.L801,.L1163
	.byte	11
	.word	.L803,.L1158,.L255
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L1164
	.byte	7
	.word	.L469,.L1165,.L1166
	.byte	8
	.word	.L472,.L1167
	.byte	8
	.word	.L474,.L1168
	.byte	11
	.word	.L476,.L1165,.L1166
	.byte	7
	.word	.L477,.L1169,.L1166
	.byte	8
	.word	.L479,.L1170
	.byte	8
	.word	.L481,.L1171
	.byte	8
	.word	.L483,.L1172
	.byte	9
	.word	.L485,.L1169,.L1166
	.byte	0,0,0,7
	.word	.L585,.L1173,.L260
	.byte	8
	.word	.L586,.L1174
	.byte	8
	.word	.L588,.L1175
	.byte	8
	.word	.L590,.L1176
	.byte	9
	.word	.L592,.L1173,.L260
	.byte	0,0,0,0,0,0,0,7
	.word	.L1129,.L1144,.L1145
	.byte	8
	.word	.L1132,.L1133
	.byte	8
	.word	.L1134,.L1135
	.byte	8
	.word	.L1136,.L1137
	.byte	8
	.word	.L1138,.L1139
	.byte	8
	.word	.L1140,.L1141
	.byte	0,7
	.word	.L1129,.L1146,.L1147
	.byte	8
	.word	.L1132,.L1133
	.byte	8
	.word	.L1134,.L1135
	.byte	8
	.word	.L1136,.L1137
	.byte	8
	.word	.L1138,.L1139
	.byte	8
	.word	.L1140,.L1141
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_abbrev'
.L389:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_line'
.L390:
	.word	.L1961-.L1960
.L1960:
	.half	3
	.word	.L1963-.L1962
.L1962:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L1963:
	.byte	5,16,7,0,5,2
	.word	.L321
	.byte	3,168,2,1,5,15,9
	.half	.L1423-.L321
	.byte	3,7,1,5,41,9
	.half	.L1964-.L1423
	.byte	1,5,50,9
	.half	.L1965-.L1964
	.byte	1,9
	.half	.L1424-.L1965
	.byte	3,1,1,4,2,5,9,9
	.half	.L1122-.L1424
	.byte	3,249,125,1,5,31,9
	.half	.L1966-.L1122
	.byte	1,5,46,9
	.half	.L1967-.L1966
	.byte	1,5,2,9
	.half	.L1968-.L1967
	.byte	1,4,1,5,14,9
	.half	.L244-.L1968
	.byte	3,136,2,1,4,2,5,31,9
	.half	.L1124-.L244
	.byte	3,248,125,1,5,46,9
	.half	.L1969-.L1124
	.byte	1,5,2,9
	.half	.L1970-.L1969
	.byte	1,4,1,5,4,9
	.half	.L245-.L1970
	.byte	3,139,2,1,4,5,5,9,9
	.half	.L1125-.L245
	.byte	3,244,125,1,5,27,9
	.half	.L1971-.L1125
	.byte	1,5,38,9
	.half	.L1972-.L1971
	.byte	1,5,2,9
	.half	.L1973-.L1972
	.byte	1,4,1,5,29,9
	.half	.L246-.L1973
	.byte	3,139,2,1,5,62,9
	.half	.L1974-.L246
	.byte	1,5,29,9
	.half	.L1425-.L1974
	.byte	3,3,1,5,30,9
	.half	.L1975-.L1425
	.byte	3,2,1,5,28,9
	.half	.L1976-.L1975
	.byte	1,5,30,9
	.half	.L1977-.L1976
	.byte	3,1,1,5,28,9
	.half	.L1978-.L1977
	.byte	1,5,35,9
	.half	.L1979-.L1978
	.byte	3,2,1,4,6,5,36,9
	.half	.L1127-.L1979
	.byte	3,232,125,1,5,45,9
	.half	.L1980-.L1127
	.byte	1,5,60,9
	.half	.L1981-.L1980
	.byte	1,5,2,9
	.half	.L1982-.L1981
	.byte	1,4,1,5,6,9
	.half	.L247-.L1982
	.byte	3,154,2,1,5,49,7,9
	.half	.L1983-.L247
	.byte	1,5,46,9
	.half	.L1984-.L1983
	.byte	1,5,50,7,9
	.half	.L1985-.L1984
	.byte	3,2,1,4,2,5,18,9
	.half	.L1130-.L1985
	.byte	3,158,126,1,5,22,9
	.half	.L1986-.L1130
	.byte	3,1,1,5,20,9
	.half	.L1987-.L1986
	.byte	1,5,11,9
	.half	.L1430-.L1987
	.byte	3,3,1,5,52,9
	.half	.L1988-.L1430
	.byte	1,5,113,9
	.half	.L1431-.L1988
	.byte	1,5,32,9
	.half	.L251-.L1431
	.byte	3,2,1,5,58,9
	.half	.L1989-.L251
	.byte	1,5,64,9
	.half	.L1990-.L1989
	.byte	1,4,1,5,50,9
	.half	.L1991-.L1990
	.byte	3,220,1,1,5,60,9
	.half	.L1131-.L1991
	.byte	1,4,2,5,85,9
	.half	.L1144-.L1131
	.byte	3,164,126,1,4,3,5,11,9
	.half	.L1151-.L1144
	.byte	3,73,1,5,36,9
	.half	.L1992-.L1151
	.byte	1,5,46,9
	.half	.L1432-.L1992
	.byte	3,1,1,5,26,9
	.half	.L253-.L1432
	.byte	3,3,1,5,52,9
	.half	.L1993-.L253
	.byte	1,4,4,5,24,9
	.half	.L1158-.L1993
	.byte	3,62,1,5,38,9
	.half	.L1433-.L1158
	.byte	3,2,1,5,16,9
	.half	.L1994-.L1433
	.byte	1,5,38,9
	.half	.L1995-.L1994
	.byte	1,5,53,9
	.half	.L1996-.L1995
	.byte	1,5,7,9
	.half	.L1997-.L1996
	.byte	1,5,14,9
	.half	.L1998-.L1997
	.byte	1,5,62,9
	.half	.L1999-.L1998
	.byte	1,5,2,9
	.half	.L2000-.L1999
	.byte	1,5,3,7,9
	.half	.L2001-.L2000
	.byte	3,2,1,5,43,9
	.half	.L254-.L2001
	.byte	3,3,1,5,2,9
	.half	.L2002-.L254
	.byte	1,5,44,7,9
	.half	.L2003-.L2002
	.byte	3,3,1,5,3,9
	.half	.L2004-.L2003
	.byte	1,5,69,7,9
	.half	.L2005-.L2004
	.byte	3,2,1,5,44,9
	.half	.L257-.L2005
	.byte	3,5,1,5,3,9
	.half	.L2006-.L257
	.byte	1,5,69,7,9
	.half	.L2007-.L2006
	.byte	3,2,1,5,77,9
	.half	.L2008-.L2007
	.byte	1,5,3,9
	.half	.L258-.L2008
	.byte	3,4,1,5,70,7,9
	.half	.L2009-.L258
	.byte	3,2,1,5,2,9
	.half	.L1165-.L2009
	.byte	3,168,127,1,4,7,5,54,9
	.half	.L1169-.L1165
	.byte	3,109,1,4,4,5,4,9
	.half	.L1166-.L1169
	.byte	3,236,0,1,5,3,9
	.half	.L259-.L1166
	.byte	3,125,1,5,6,9
	.half	.L256-.L259
	.byte	3,8,1,4,7,5,49,9
	.half	.L1173-.L256
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L260-.L1173
	.byte	3,249,0,1,5,49,9
	.half	.L2010-.L260
	.byte	1,5,9,9
	.half	.L2011-.L2010
	.byte	1,5,3,9
	.half	.L2012-.L2011
	.byte	3,1,1,5,47,9
	.half	.L2013-.L2012
	.byte	1,5,7,9
	.half	.L2014-.L2013
	.byte	1,5,2,9
	.half	.L2015-.L2014
	.byte	3,1,1,4,3,5,8,9
	.half	.L255-.L2015
	.byte	3,159,127,1,5,4,7,9
	.half	.L2016-.L255
	.byte	3,2,1,5,5,9
	.half	.L262-.L2016
	.byte	3,124,1,5,29,9
	.half	.L252-.L262
	.byte	3,127,1,5,46,9
	.half	.L2017-.L252
	.byte	1,5,2,7,9
	.half	.L2018-.L2017
	.byte	3,8,1,4,2,5,116,9
	.half	.L263-.L2018
	.byte	3,44,1,5,104,9
	.half	.L250-.L263
	.byte	1,5,113,9
	.half	.L2019-.L250
	.byte	1,5,22,7,9
	.half	.L2020-.L2019
	.byte	3,5,1,5,31,9
	.half	.L2021-.L2020
	.byte	1,4,1,5,44,9
	.half	.L1145-.L2021
	.byte	3,217,1,1,4,2,5,11,9
	.half	.L1146-.L1145
	.byte	3,167,126,1,4,1,5,15,9
	.half	.L1147-.L1146
	.byte	3,218,1,1,5,13,9
	.half	.L2022-.L1147
	.byte	1,5,10,9
	.half	.L2023-.L2022
	.byte	3,1,1,5,3,9
	.half	.L2024-.L2023
	.byte	1,5,10,9
	.half	.L248-.L2024
	.byte	3,4,1,5,3,9
	.half	.L2025-.L248
	.byte	1,5,1,9
	.half	.L265-.L2025
	.byte	3,2,1,7,9
	.half	.L392-.L265
	.byte	0,1,1
.L1961:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_ranges'
.L391:
	.word	-1,.L321,0,.L392-.L321,0,0
.L1143:
	.word	-1,.L321,.L1130-.L321,.L1131-.L321,.L1144-.L321,.L1145-.L321,.L1146-.L321,.L1147-.L321,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_info'
.L393:
	.word	1116
	.half	3
	.word	.L394
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L396,.L395
	.byte	2
	.word	.L324
	.byte	3
	.byte	'Dem_EnvRetrieveRawDid',0,1,204,2,19
	.word	.L411
	.byte	1,1,1
	.word	.L323,.L1177,.L322
	.byte	4
	.byte	'EventId',0,1,204,2,57
	.word	.L401,.L1178
	.byte	4
	.byte	'dest',0,1,205,2,10
	.word	.L403,.L1179
	.byte	4
	.byte	'destSize',0,1,206,2,11
	.word	.L746,.L1180
	.byte	4
	.byte	'ffIndex',0,1,207,2,9
	.word	.L411,.L1181
	.byte	4
	.byte	'did',0,1,208,2,10
	.word	.L401,.L1182
	.byte	4
	.byte	'src',0,1,209,2,16
	.word	.L441,.L1183
	.byte	4
	.byte	'evMemLocation',0,1,210,2,29
	.word	.L749,.L1184
	.byte	5
	.word	.L323,.L1177
	.byte	6
	.byte	'edId',0,1,212,2,8
	.word	.L411,.L1185
	.byte	6
	.byte	'ffId',0,1,213,2,8
	.word	.L411,.L1186
	.byte	6
	.byte	'internalEnvData',0,1,214,2,25
	.word	.L413,.L1187
	.byte	6
	.byte	'readpos',0,1,215,2,15
	.word	.L441,.L1188
	.byte	7
	.word	.L505,.L1189,.L267
	.byte	8
	.word	.L506,.L1190
	.byte	9
	.word	.L508,.L1189,.L267
	.byte	0,7
	.word	.L420,.L1191,.L268
	.byte	8
	.word	.L422,.L1192
	.byte	9
	.word	.L424,.L1191,.L268
	.byte	0,7
	.word	.L850,.L1193,.L269
	.byte	8
	.word	.L851,.L1194
	.byte	9
	.word	.L853,.L1193,.L269
	.byte	0,7
	.word	.L1195,.L1196,.L1197
	.byte	8
	.word	.L1198,.L1199
	.byte	8
	.word	.L1200,.L1201
	.byte	8
	.word	.L1202,.L1203
	.byte	8
	.word	.L1204,.L1205
	.byte	8
	.word	.L1206,.L1207
	.byte	8
	.word	.L1208,.L1209
	.byte	10
	.word	.L1210,.L1211
	.byte	6
	.byte	'writepos',0,2,113,9
	.word	.L403,.L1213
	.byte	6
	.byte	'end',0,2,114,9
	.word	.L403,.L1214
	.byte	6
	.byte	'i',0,2,115,15
	.word	.L439,.L1215
	.byte	7
	.word	.L1216,.L1217,.L285
	.byte	8
	.word	.L1218,.L1219
	.byte	8
	.word	.L1220,.L1221
	.byte	8
	.word	.L1222,.L1223
	.byte	8
	.word	.L1224,.L1225
	.byte	8
	.word	.L1226,.L1227
	.byte	8
	.word	.L1228,.L1229
	.byte	11
	.word	.L1230,.L1217,.L285
	.byte	6
	.byte	'i',0,3,79,15
	.word	.L439,.L1231
	.byte	7
	.word	.L791,.L1232,.L277
	.byte	8
	.word	.L793,.L1233
	.byte	8
	.word	.L795,.L1234
	.byte	8
	.word	.L797,.L1235
	.byte	8
	.word	.L799,.L1236
	.byte	8
	.word	.L801,.L1237
	.byte	11
	.word	.L803,.L1232,.L277
	.byte	6
	.byte	'result',0,4,111,17
	.word	.L411,.L1238
	.byte	7
	.word	.L469,.L1239,.L1240
	.byte	8
	.word	.L472,.L1241
	.byte	8
	.word	.L474,.L1242
	.byte	11
	.word	.L476,.L1239,.L1240
	.byte	7
	.word	.L477,.L1243,.L1240
	.byte	8
	.word	.L479,.L1244
	.byte	8
	.word	.L481,.L1245
	.byte	8
	.word	.L483,.L1246
	.byte	9
	.word	.L485,.L1243,.L1240
	.byte	0,0,0,7
	.word	.L585,.L1247,.L282
	.byte	8
	.word	.L586,.L1248
	.byte	8
	.word	.L588,.L1249
	.byte	8
	.word	.L590,.L1250
	.byte	9
	.word	.L592,.L1247,.L282
	.byte	0,0,0,7
	.word	.L834,.L1251,.L289
	.byte	8
	.word	.L836,.L1252
	.byte	9
	.word	.L838,.L1251,.L289
	.byte	0,0,0,0,0,7
	.word	.L1195,.L1212,.L292
	.byte	8
	.word	.L1198,.L1199
	.byte	8
	.word	.L1200,.L1201
	.byte	8
	.word	.L1202,.L1203
	.byte	8
	.word	.L1204,.L1205
	.byte	8
	.word	.L1206,.L1207
	.byte	8
	.word	.L1208,.L1209
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_abbrev'
.L394:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,85,6,0,0,11,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_line'
.L395:
	.word	.L2027-.L2026
.L2026:
	.half	3
	.word	.L2029-.L2028
.L2028:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvFreezeFrame.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDid.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvDataElement.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvExtendedData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_MemUtils.h',0,0,0,0,0
.L2029:
	.byte	5,19,7,0,5,2
	.word	.L323
	.byte	3,203,2,1,5,15,9
	.half	.L1441-.L323
	.byte	3,8,1,5,41,9
	.half	.L2030-.L1441
	.byte	1,5,50,9
	.half	.L2031-.L2030
	.byte	1,9
	.half	.L1442-.L2031
	.byte	3,1,1,4,2,5,9,9
	.half	.L1189-.L1442
	.byte	3,213,125,1,5,31,9
	.half	.L2032-.L1189
	.byte	1,5,46,9
	.half	.L2033-.L2032
	.byte	1,5,2,9
	.half	.L2034-.L2033
	.byte	1,4,1,5,4,9
	.half	.L267-.L2034
	.byte	3,174,2,1,4,5,5,9,9
	.half	.L1191-.L267
	.byte	3,209,125,1,5,27,9
	.half	.L2035-.L1191
	.byte	1,5,38,9
	.half	.L2036-.L2035
	.byte	1,5,2,9
	.half	.L1443-.L2036
	.byte	1,4,1,5,29,9
	.half	.L268-.L1443
	.byte	3,174,2,1,5,62,9
	.half	.L2037-.L268
	.byte	1,5,29,9
	.half	.L1438-.L2037
	.byte	3,2,1,5,30,9
	.half	.L2038-.L1438
	.byte	3,2,1,5,28,9
	.half	.L2039-.L2038
	.byte	1,5,30,9
	.half	.L2040-.L2039
	.byte	3,1,1,5,28,9
	.half	.L2041-.L2040
	.byte	1,5,35,9
	.half	.L2042-.L2041
	.byte	3,2,1,4,6,5,36,9
	.half	.L1193-.L2042
	.byte	3,198,125,1,5,45,9
	.half	.L2043-.L1193
	.byte	1,5,60,9
	.half	.L2044-.L2043
	.byte	1,5,2,9
	.half	.L2045-.L2044
	.byte	1,4,1,9
	.half	.L269-.L2045
	.byte	3,188,2,1,5,54,7,9
	.half	.L2046-.L269
	.byte	3,2,1,5,59,9
	.half	.L2047-.L2046
	.byte	1,4,2,5,18,9
	.half	.L1196-.L2047
	.byte	3,143,126,1,5,22,9
	.half	.L2048-.L1196
	.byte	3,1,1,5,20,9
	.half	.L2049-.L2048
	.byte	1,5,11,9
	.half	.L1448-.L2049
	.byte	3,3,1,5,52,9
	.half	.L2050-.L1448
	.byte	1,5,113,9
	.half	.L1449-.L2050
	.byte	1,5,38,9
	.half	.L272-.L1449
	.byte	3,2,1,5,64,9
	.half	.L2051-.L272
	.byte	1,5,75,9
	.half	.L2052-.L2051
	.byte	1,4,1,5,59,9
	.half	.L2053-.L2052
	.byte	3,235,1,1,5,69,9
	.half	.L1197-.L2053
	.byte	1,4,2,5,96,9
	.half	.L1212-.L1197
	.byte	3,149,126,1,4,3,5,12,9
	.half	.L1217-.L1212
	.byte	3,92,1,5,37,9
	.half	.L2054-.L1217
	.byte	1,5,27,9
	.half	.L1450-.L2054
	.byte	3,126,1,5,2,9
	.half	.L2055-.L1450
	.byte	1,5,47,7,9
	.half	.L2056-.L2055
	.byte	3,3,1,5,27,9
	.half	.L275-.L2056
	.byte	3,3,1,5,53,9
	.half	.L2057-.L275
	.byte	1,4,4,5,24,9
	.half	.L1232-.L2057
	.byte	3,24,1,5,38,9
	.half	.L1451-.L1232
	.byte	3,2,1,5,16,9
	.half	.L2058-.L1451
	.byte	1,5,38,9
	.half	.L2059-.L2058
	.byte	1,5,53,9
	.half	.L2060-.L2059
	.byte	1,5,7,9
	.half	.L2061-.L2060
	.byte	1,5,14,9
	.half	.L2062-.L2061
	.byte	1,5,62,9
	.half	.L2063-.L2062
	.byte	1,5,2,9
	.half	.L2064-.L2063
	.byte	1,5,3,7,9
	.half	.L2065-.L2064
	.byte	3,2,1,5,43,9
	.half	.L276-.L2065
	.byte	3,3,1,5,2,9
	.half	.L2066-.L276
	.byte	1,5,44,7,9
	.half	.L2067-.L2066
	.byte	3,3,1,5,3,9
	.half	.L2068-.L2067
	.byte	1,5,69,7,9
	.half	.L2069-.L2068
	.byte	3,2,1,5,44,9
	.half	.L279-.L2069
	.byte	3,5,1,5,3,9
	.half	.L2070-.L279
	.byte	1,5,69,7,9
	.half	.L2071-.L2070
	.byte	3,2,1,5,77,9
	.half	.L2072-.L2071
	.byte	1,5,3,9
	.half	.L280-.L2072
	.byte	3,4,1,5,70,7,9
	.half	.L2073-.L280
	.byte	3,2,1,5,2,9
	.half	.L1239-.L2073
	.byte	3,168,127,1,4,7,5,54,9
	.half	.L1243-.L1239
	.byte	3,109,1,4,4,5,4,9
	.half	.L1240-.L1243
	.byte	3,236,0,1,5,3,9
	.half	.L281-.L1240
	.byte	3,125,1,5,6,9
	.half	.L278-.L281
	.byte	3,8,1,4,7,5,49,9
	.half	.L1247-.L278
	.byte	3,137,127,1,4,4,5,3,9
	.half	.L282-.L1247
	.byte	3,249,0,1,5,49,9
	.half	.L2074-.L282
	.byte	1,5,9,9
	.half	.L2075-.L2074
	.byte	1,5,3,9
	.half	.L2076-.L2075
	.byte	3,1,1,5,47,9
	.half	.L2077-.L2076
	.byte	1,5,7,9
	.half	.L2078-.L2077
	.byte	1,5,2,9
	.half	.L2079-.L2078
	.byte	3,1,1,4,3,5,9,9
	.half	.L277-.L2079
	.byte	3,69,1,5,5,7,9
	.half	.L2080-.L277
	.byte	3,2,1,5,6,9
	.half	.L284-.L2080
	.byte	3,124,1,5,30,9
	.half	.L274-.L284
	.byte	3,127,1,5,47,9
	.half	.L2081-.L274
	.byte	1,5,3,7,9
	.half	.L2082-.L2081
	.byte	3,8,1,5,47,9
	.half	.L273-.L2082
	.byte	3,5,1,5,31,9
	.half	.L288-.L273
	.byte	3,3,1,5,57,9
	.half	.L2083-.L288
	.byte	1,4,4,5,31,9
	.half	.L1251-.L2083
	.byte	3,51,1,5,9,9
	.half	.L2084-.L1251
	.byte	1,5,31,9
	.half	.L2085-.L2084
	.byte	1,5,46,9
	.half	.L2086-.L2085
	.byte	1,5,2,9
	.half	.L2087-.L2086
	.byte	1,4,3,5,5,9
	.half	.L289-.L2087
	.byte	3,77,1,5,9,9
	.half	.L2088-.L289
	.byte	1,5,6,9
	.half	.L2089-.L2088
	.byte	3,126,1,5,30,9
	.half	.L287-.L2089
	.byte	3,127,1,5,47,9
	.half	.L2090-.L287
	.byte	1,5,2,7,9
	.half	.L2091-.L2090
	.byte	3,7,1,4,2,5,3,9
	.half	.L285-.L2091
	.byte	3,15,1,5,24,7,9
	.half	.L2092-.L285
	.byte	3,2,1,5,33,9
	.half	.L2093-.L2092
	.byte	1,5,13,9
	.half	.L2094-.L2093
	.byte	1,5,4,9
	.half	.L2095-.L2094
	.byte	3,1,1,5,116,9
	.half	.L291-.L2095
	.byte	3,123,1,5,104,9
	.half	.L271-.L291
	.byte	1,5,113,9
	.half	.L2096-.L271
	.byte	1,5,13,7,9
	.half	.L2097-.L2096
	.byte	3,9,1,5,11,9
	.half	.L2098-.L2097
	.byte	1,5,2,9
	.half	.L2099-.L2098
	.byte	3,1,1,4,1,5,3,9
	.half	.L292-.L2099
	.byte	3,227,1,1,5,10,9
	.half	.L270-.L292
	.byte	3,4,1,5,3,9
	.half	.L2100-.L270
	.byte	1,5,1,9
	.half	.L294-.L2100
	.byte	3,2,1,7,9
	.half	.L397-.L294
	.byte	0,1,1
.L2027:
	.sdecl	'.debug_ranges',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_ranges'
.L396:
	.word	-1,.L323,0,.L397-.L323,0,0
.L1211:
	.word	-1,.L323,.L1196-.L323,.L1197-.L323,.L1212-.L323,.L292-.L323,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_Cfg_EnvEventId2EnvData')
	.sect	'.debug_info'
.L398:
	.word	181
	.half	3
	.word	.L399
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvMain.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L324
	.byte	3
	.byte	'Dem_Cfg_EnvEventId2EnvData',0,31,10,22
	.word	.L1253
	.byte	1,5,3
	.word	Dem_Cfg_EnvEventId2EnvData
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_Cfg_EnvEventId2EnvData')
	.sect	'.debug_abbrev'
.L399:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_loc'
.L296:
	.word	-1,.L297,0,.L1254-.L297
	.half	2
	.byte	138,0
	.word	.L1254-.L297,.L400-.L297
	.half	2
	.byte	138,32
	.word	.L400-.L297,.L400-.L297
	.half	2
	.byte	138,0
	.word	0,0
.L402:
	.word	-1,.L297,0,.L1255-.L297
	.half	1
	.byte	84
	.word	0,0
.L431:
	.word	0,0
.L418:
	.word	0,0
.L460:
	.word	0,0
.L407:
	.word	-1,.L297,0,.L1256-.L297
	.half	1
	.byte	86
	.word	0,0
.L408:
	.word	-1,.L297,0,.L1257-.L297
	.half	1
	.byte	87
	.word	0,0
.L404:
	.word	-1,.L297,0,.L6-.L297
	.half	1
	.byte	100
	.word	.L1259-.L297,.L13-.L297
	.half	1
	.byte	108
	.word	0,0
.L405:
	.word	-1,.L297,0,.L1258-.L297
	.half	1
	.byte	85
	.word	.L1260-.L297,.L1261-.L297
	.half	1
	.byte	88
	.word	0,0
.L412:
	.word	-1,.L297,.L1262-.L297,.L13-.L297
	.half	1
	.byte	89
	.word	0,0
.L442:
	.word	-1,.L297,.L1264-.L297,.L1265-.L297
	.half	1
	.byte	111
	.word	.L1266-.L297,.L7-.L297
	.half	2
	.byte	145,120
	.word	0,0
.L451:
	.word	0,0
.L464:
	.word	0,0
.L429:
	.word	0,0
.L423:
	.word	0,0
.L447:
	.word	0,0
.L440:
	.word	-1,.L297,.L1261-.L297,.L7-.L297
	.half	1
	.byte	88
	.word	0,0
.L455:
	.word	-1,.L297,.L1267-.L297,.L12-.L297
	.half	1
	.byte	89
	.word	0,0
.L414:
	.word	-1,.L297,0,.L400-.L297
	.half	2
	.byte	145,96
	.word	0,0
.L435:
	.word	0,0
.L453:
	.word	0,0
.L466:
	.word	0,0
.L484:
	.word	0,0
.L468:
	.word	-1,.L297,.L1268-.L297,.L1269-.L297
	.half	1
	.byte	90
	.word	.L1269-.L297,.L19-.L297
	.half	1
	.byte	82
	.word	.L19-.L297,.L1270-.L297
	.half	1
	.byte	90
	.word	.L1270-.L297,.L20-.L297
	.half	1
	.byte	82
	.word	.L20-.L297,.L14-.L297
	.half	1
	.byte	90
	.word	0,0
.L410:
	.word	-1,.L297,.L1263-.L297,.L13-.L297
	.half	1
	.byte	95
	.word	0,0
.L433:
	.word	0,0
.L475:
	.word	0,0
.L449:
	.word	0,0
.L473:
	.word	0,0
.L462:
	.word	0,0
.L409:
	.word	0,0
.L480:
	.word	0,0
.L482:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_loc'
.L298:
	.word	-1,.L299,0,.L1271-.L299
	.half	2
	.byte	138,0
	.word	.L1271-.L299,.L488-.L299
	.half	2
	.byte	138,32
	.word	.L488-.L299,.L488-.L299
	.half	2
	.byte	138,0
	.word	0,0
.L489:
	.word	-1,.L299,0,.L1272-.L299
	.half	1
	.byte	84
	.word	0,0
.L517:
	.word	0,0
.L500:
	.word	0,0
.L542:
	.word	0,0
.L492:
	.word	-1,.L299,0,.L1273-.L299
	.half	1
	.byte	86
	.word	0,0
.L493:
	.word	-1,.L299,0,.L1274-.L299
	.half	1
	.byte	87
	.word	0,0
.L490:
	.word	-1,.L299,0,.L27-.L299
	.half	1
	.byte	100
	.word	.L1276-.L299,.L36-.L299
	.half	1
	.byte	108
	.word	0,0
.L491:
	.word	-1,.L299,0,.L1275-.L299
	.half	1
	.byte	85
	.word	.L1277-.L299,.L36-.L299
	.half	1
	.byte	88
	.word	0,0
.L531:
	.word	0,0
.L496:
	.word	-1,.L299,.L1278-.L299,.L1279-.L299
	.half	1
	.byte	89
	.word	0,0
.L535:
	.word	0,0
.L526:
	.word	-1,.L299,.L1281-.L299,.L1283-.L299
	.half	1
	.byte	111
	.word	.L1284-.L299,.L28-.L299
	.half	2
	.byte	145,120
	.word	0,0
.L544:
	.word	0,0
.L503:
	.word	0,0
.L497:
	.word	-1,.L299,.L1280-.L299,.L36-.L299
	.half	1
	.byte	90
	.word	0,0
.L515:
	.word	0,0
.L507:
	.word	0,0
.L525:
	.word	-1,.L299,.L1279-.L299,.L28-.L299
	.half	1
	.byte	89
	.word	0,0
.L539:
	.word	-1,.L299,.L1285-.L299,.L35-.L299
	.half	1
	.byte	88
	.word	0,0
.L521:
	.word	0,0
.L537:
	.word	0,0
.L545:
	.word	0,0
.L498:
	.word	-1,.L299,0,.L488-.L299
	.half	2
	.byte	145,96
	.word	0,0
.L554:
	.word	0,0
.L546:
	.word	-1,.L299,.L1286-.L299,.L1287-.L299
	.half	1
	.byte	90
	.word	.L1287-.L299,.L42-.L299
	.half	1
	.byte	82
	.word	.L42-.L299,.L1288-.L299
	.half	1
	.byte	90
	.word	.L1288-.L299,.L43-.L299
	.half	1
	.byte	82
	.word	.L43-.L299,.L37-.L299
	.half	1
	.byte	90
	.word	0,0
.L519:
	.word	0,0
.L550:
	.word	0,0
.L495:
	.word	-1,.L299,.L1282-.L299,.L36-.L299
	.half	1
	.byte	95
	.word	0,0
.L533:
	.word	0,0
.L549:
	.word	0,0
.L543:
	.word	0,0
.L494:
	.word	-1,.L299,.L510-.L299,.L1281-.L299
	.half	1
	.byte	111
	.word	0,0
.L552:
	.word	0,0
.L553:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_loc'
.L302:
	.word	-1,.L303,0,.L1298-.L303
	.half	2
	.byte	138,0
	.word	.L1298-.L303,.L593-.L303
	.half	2
	.byte	138,24
	.word	.L593-.L303,.L593-.L303
	.half	2
	.byte	138,0
	.word	0,0
.L594:
	.word	-1,.L303,0,.L1299-.L303
	.half	1
	.byte	84
	.word	0,0
.L613:
	.word	0,0
.L691:
	.word	0,0
.L709:
	.word	0,0
.L611:
	.word	0,0
.L595:
	.word	-1,.L303,0,.L58-.L303
	.half	1
	.byte	100
	.word	.L1301-.L303,.L60-.L303
	.half	1
	.byte	108
	.word	0,0
.L596:
	.word	-1,.L303,0,.L1300-.L303
	.half	1
	.byte	85
	.word	0,0
.L603:
	.word	-1,.L303,.L1305-.L303,.L60-.L303
	.half	1
	.byte	95
	.word	0,0
.L620:
	.word	-1,.L303,.L1303-.L303,.L1308-.L303
	.half	1
	.byte	111
	.word	.L1309-.L303,.L55-.L303
	.half	2
	.byte	145,112
	.word	0,0
.L629:
	.word	0,0
.L695:
	.word	0,0
.L713:
	.word	0,0
.L605:
	.word	0,0
.L609:
	.word	0,0
.L654:
	.word	0,0
.L650:
	.word	0,0
.L625:
	.word	0,0
.L619:
	.word	-1,.L303,.L1307-.L303,.L55-.L303
	.half	1
	.byte	88
	.word	0,0
.L645:
	.word	-1,.L303,.L1312-.L303,.L79-.L303
	.half	1
	.byte	89
	.word	.L1313-.L303,.L87-.L303
	.half	1
	.byte	89
	.word	0,0
.L705:
	.word	0,0
.L601:
	.word	0,0
.L602:
	.word	-1,.L303,.L1306-.L303,.L1307-.L303
	.half	1
	.byte	88
	.word	0,0
.L615:
	.word	0,0
.L631:
	.word	0,0
.L697:
	.word	0,0
.L715:
	.word	0,0
.L597:
	.word	-1,.L303,0,.L58-.L303
	.half	1
	.byte	101
	.word	.L1302-.L303,.L1303-.L303
	.half	1
	.byte	111
	.word	0,0
.L627:
	.word	0,0
.L693:
	.word	0,0
.L711:
	.word	0,0
.L684:
	.word	0,0
.L660:
	.word	0,0
.L674:
	.word	0,0
.L646:
	.word	-1,.L303,.L1310-.L303,.L1311-.L303
	.half	1
	.byte	84
	.word	.L79-.L303,.L89-.L303
	.half	1
	.byte	84
	.word	0,0
.L686:
	.word	0,0
.L667:
	.word	0,0
.L662:
	.word	0,0
.L617:
	.word	0,0
.L633:
	.word	0,0
.L599:
	.word	-1,.L303,0,.L58-.L303
	.half	1
	.byte	102
	.word	.L1304-.L303,.L60-.L303
	.half	1
	.byte	109
	.word	0,0
.L647:
	.word	0,0
.L600:
	.word	0,0
.L703:
	.word	0,0
.L704:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_loc'
.L300:
	.word	-1,.L301,0,.L557-.L301
	.half	2
	.byte	138,0
	.word	0,0
.L558:
	.word	-1,.L301,0,.L1289-.L301
	.half	1
	.byte	84
	.word	0,0
.L579:
	.word	0,0
.L584:
	.word	-1,.L301,.L53-.L301,.L46-.L301
	.half	1
	.byte	95
	.word	.L1297-.L301,.L46-.L301
	.half	1
	.byte	84
	.word	0,0
.L559:
	.word	-1,.L301,0,.L1290-.L301
	.half	1
	.byte	100
	.word	0,0
.L577:
	.word	0,0
.L560:
	.word	-1,.L301,0,.L1291-.L301
	.half	1
	.byte	85
	.word	0,0
.L565:
	.word	-1,.L301,.L1294-.L301,.L557-.L301
	.half	1
	.byte	88
	.word	0,0
.L568:
	.word	0,0
.L566:
	.word	-1,.L301,.L1295-.L301,.L557-.L301
	.half	1
	.byte	89
	.word	0,0
.L561:
	.word	-1,.L301,0,.L1292-.L301
	.half	1
	.byte	86
	.word	0,0
.L570:
	.word	0,0
.L575:
	.word	0,0
.L591:
	.word	0,0
.L564:
	.word	-1,.L301,.L1296-.L301,.L46-.L301
	.half	1
	.byte	90
	.word	0,0
.L562:
	.word	-1,.L301,0,.L51-.L301
	.half	1
	.byte	101
	.word	.L1293-.L301,.L573-.L301
	.half	1
	.byte	108
	.word	0,0
.L581:
	.word	0,0
.L563:
	.word	-1,.L301,.L569-.L301,.L46-.L301
	.half	1
	.byte	111
	.word	0,0
.L587:
	.word	0,0
.L589:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_loc'
.L310:
	.word	-1,.L311,0,.L957-.L311
	.half	2
	.byte	138,0
	.word	0,0
.L961:
	.word	0,0
.L958:
	.word	-1,.L311,0,.L1348-.L311
	.half	1
	.byte	84
	.word	0,0
.L960:
	.word	-1,.L311,.L145-.L311,.L957-.L311
	.half	1
	.byte	88
	.word	0,0
.L962:
	.word	0,0
.L959:
	.word	-1,.L311,0,.L147-.L311
	.half	1
	.byte	100
	.word	.L1349-.L311,.L957-.L311
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_loc'
.L308:
	.word	-1,.L309,0,.L933-.L309
	.half	2
	.byte	138,0
	.word	0,0
.L938:
	.word	0,0
.L934:
	.word	-1,.L309,0,.L1339-.L309
	.half	1
	.byte	84
	.word	0,0
.L943:
	.word	0,0
.L935:
	.word	-1,.L309,0,.L1340-.L309
	.half	1
	.byte	85
	.word	.L1341-.L309,.L933-.L309
	.half	1
	.byte	89
	.word	0,0
.L954:
	.word	-1,.L309,.L1344-.L309,.L1345-.L309
	.half	5
	.byte	144,32,157,32,0
	.word	.L1347-.L309,.L137-.L309
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L956:
	.word	0,0
.L937:
	.word	-1,.L309,.L131-.L309,.L933-.L309
	.half	1
	.byte	88
	.word	0,0
.L941:
	.word	0,0
.L949:
	.word	0,0
.L952:
	.word	0,0
.L953:
	.word	-1,.L309,.L1346-.L309,.L137-.L309
	.half	1
	.byte	81
	.word	0,0
.L947:
	.word	-1,.L309,.L1343-.L309,.L1344-.L309
	.half	5
	.byte	144,32,157,32,0
	.word	.L137-.L309,.L142-.L309
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L945:
	.word	0,0
.L936:
	.word	-1,.L309,0,.L133-.L309
	.half	1
	.byte	100
	.word	.L1342-.L309,.L933-.L309
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_loc'
.L314:
	.word	-1,.L315,0,.L963-.L315
	.half	2
	.byte	138,0
	.word	0,0
.L968:
	.word	0,0
.L964:
	.word	-1,.L315,0,.L963-.L315
	.half	1
	.byte	84
	.word	0,0
.L986:
	.word	-1,.L315,.L1376-.L315,.L1377-.L315
	.half	5
	.byte	144,32,157,32,0
	.word	.L1379-.L315,.L182-.L315
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L988:
	.word	0,0
.L980:
	.word	0,0
.L966:
	.word	-1,.L315,.L967-.L315,.L183-.L315
	.half	1
	.byte	95
	.word	.L181-.L315,.L189-.L315
	.half	1
	.byte	95
	.word	0,0
.L972:
	.word	0,0
.L976:
	.word	-1,.L315,.L1375-.L315,.L181-.L315
	.half	1
	.byte	81
	.word	0,0
.L985:
	.word	-1,.L315,.L1378-.L315,.L182-.L315
	.half	1
	.byte	82
	.word	0,0
.L974:
	.word	0,0
.L965:
	.word	-1,.L315,0,.L963-.L315
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_loc'
.L304:
	.word	-1,.L305,0,.L719-.L305
	.half	2
	.byte	138,0
	.word	0,0
.L720:
	.word	-1,.L305,0,.L719-.L305
	.half	1
	.byte	84
	.word	0,0
.L730:
	.word	0,0
.L721:
	.word	-1,.L305,0,.L719-.L305
	.half	1
	.byte	85
	.word	0,0
.L724:
	.word	-1,.L305,.L1314-.L305,.L94-.L305
	.half	1
	.byte	95
	.word	.L92-.L305,.L100-.L305
	.half	1
	.byte	95
	.word	0,0
.L728:
	.word	0,0
.L738:
	.word	0,0
.L741:
	.word	0,0
.L734:
	.word	-1,.L305,.L1315-.L305,.L92-.L305
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L732:
	.word	0,0
.L723:
	.word	-1,.L305,0,.L719-.L305
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_loc'
.L306:
	.word	-1,.L307,0,.L1316-.L307
	.half	2
	.byte	138,0
	.word	.L1316-.L307,.L742-.L307
	.half	2
	.byte	138,48
	.word	.L742-.L307,.L742-.L307
	.half	2
	.byte	138,0
	.word	0,0
.L755:
	.word	0,0
.L743:
	.word	-1,.L307,0,.L1317-.L307
	.half	1
	.byte	84
	.word	0,0
.L762:
	.word	0,0
.L744:
	.word	-1,.L307,0,.L1318-.L307
	.half	1
	.byte	85
	.word	.L1320-.L307,.L742-.L307
	.half	1
	.byte	89
	.word	0,0
.L766:
	.word	0,0
.L833:
	.word	-1,.L307,.L1335-.L307,.L1336-.L307
	.half	1
	.byte	82
	.word	.L1338-.L307,.L105-.L307
	.half	1
	.byte	82
	.word	0,0
.L794:
	.word	0,0
.L837:
	.word	0,0
.L764:
	.word	0,0
.L745:
	.word	-1,.L307,0,.L1319-.L307
	.half	1
	.byte	100
	.word	.L1321-.L307,.L742-.L307
	.half	2
	.byte	145,116
	.word	.L1324-.L307,.L1327-.L307
	.half	1
	.byte	111
	.word	.L1332-.L307,.L1333-.L307
	.half	1
	.byte	111
	.word	0,0
.L747:
	.word	-1,.L307,0,.L104-.L307
	.half	1
	.byte	101
	.word	.L1322-.L307,.L742-.L307
	.half	2
	.byte	145,120
	.word	.L1328-.L307,.L106-.L307
	.half	1
	.byte	98
	.word	.L1334-.L307,.L108-.L307
	.half	1
	.byte	111
	.word	0,0
.L751:
	.word	-1,.L307,.L1325-.L307,.L1326-.L307
	.half	1
	.byte	88
	.word	.L108-.L307,.L123-.L307
	.half	1
	.byte	88
	.word	0,0
.L773:
	.word	-1,.L307,.L1329-.L307,.L110-.L307
	.half	1
	.byte	101
	.word	.L108-.L307,.L123-.L307
	.half	1
	.byte	101
	.word	0,0
.L784:
	.word	0,0
.L798:
	.word	0,0
.L750:
	.word	-1,.L307,0,.L104-.L307
	.half	1
	.byte	103
	.word	0,0
.L760:
	.word	0,0
.L776:
	.word	0,0
.L780:
	.word	0,0
.L827:
	.word	0,0
.L821:
	.word	0,0
.L774:
	.word	-1,.L307,.L1330-.L307,.L110-.L307
	.half	5
	.byte	144,32,157,32,0
	.word	.L108-.L307,.L123-.L307
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L790:
	.word	-1,.L307,.L1326-.L307,.L108-.L307
	.half	1
	.byte	88
	.word	0,0
.L832:
	.word	-1,.L307,.L1337-.L307,.L105-.L307
	.half	1
	.byte	81
	.word	0,0
.L770:
	.word	0,0
.L788:
	.word	0,0
.L802:
	.word	0,0
.L752:
	.word	-1,.L307,0,.L742-.L307
	.half	2
	.byte	145,80
	.word	0,0
.L816:
	.word	0,0
.L812:
	.word	0,0
.L804:
	.word	-1,.L307,.L1331-.L307,.L806-.L307
	.half	1
	.byte	82
	.word	.L113-.L307,.L117-.L307
	.half	1
	.byte	82
	.word	0,0
.L808:
	.word	0,0
.L768:
	.word	0,0
.L786:
	.word	0,0
.L800:
	.word	0,0
.L823:
	.word	0,0
.L748:
	.word	-1,.L307,0,.L104-.L307
	.half	1
	.byte	102
	.word	.L1323-.L307,.L1324-.L307
	.half	1
	.byte	111
	.word	0,0
.L807:
	.word	0,0
.L782:
	.word	0,0
.L796:
	.word	0,0
.L772:
	.word	-1,.L307,0,.L742-.L307
	.half	2
	.byte	145,100
	.word	0,0
.L814:
	.word	0,0
.L810:
	.word	0,0
.L811:
	.word	0,0
.L815:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_loc'
.L312:
	.word	-1,.L313,0,.L1350-.L313
	.half	2
	.byte	138,0
	.word	.L1350-.L313,.L839-.L313
	.half	2
	.byte	138,56
	.word	.L839-.L313,.L839-.L313
	.half	2
	.byte	138,0
	.word	0,0
.L860:
	.word	0,0
.L852:
	.word	0,0
.L840:
	.word	-1,.L313,0,.L1351-.L313
	.half	1
	.byte	84
	.word	0,0
.L870:
	.word	0,0
.L874:
	.word	0,0
.L915:
	.word	0,0
.L872:
	.word	0,0
.L841:
	.word	-1,.L313,0,.L152-.L313
	.half	1
	.byte	100
	.word	.L1353-.L313,.L839-.L313
	.half	2
	.byte	145,116
	.word	.L1361-.L313,.L1360-.L313
	.half	1
	.byte	98
	.word	.L1360-.L313,.L1362-.L313
	.half	1
	.byte	111
	.word	.L156-.L313,.L1366-.L313
	.half	1
	.byte	98
	.word	.L1372-.L313,.L1373-.L313
	.half	1
	.byte	111
	.word	0,0
.L842:
	.word	-1,.L313,0,.L152-.L313
	.half	1
	.byte	101
	.word	.L1354-.L313,.L839-.L313
	.half	2
	.byte	145,120
	.word	.L1363-.L313,.L159-.L313
	.half	1
	.byte	100
	.word	.L1374-.L313,.L157-.L313
	.half	1
	.byte	111
	.word	0,0
.L903:
	.word	0,0
.L888:
	.word	0,0
.L846:
	.word	-1,.L313,.L1358-.L313,.L159-.L313
	.half	1
	.byte	89
	.word	0,0
.L907:
	.word	0,0
.L883:
	.word	-1,.L313,.L1362-.L313,.L1364-.L313
	.half	1
	.byte	111
	.word	.L1365-.L313,.L159-.L313
	.half	2
	.byte	145,108
	.word	.L1368-.L313,.L1369-.L313
	.half	1
	.byte	111
	.word	.L1369-.L313,.L161-.L313
	.half	2
	.byte	145,108
	.word	0,0
.L892:
	.word	0,0
.L917:
	.word	0,0
.L845:
	.word	-1,.L313,0,.L152-.L313
	.half	1
	.byte	103
	.word	0,0
.L856:
	.word	0,0
.L847:
	.word	-1,.L313,.L1359-.L313,.L839-.L313
	.half	1
	.byte	90
	.word	0,0
.L843:
	.word	-1,.L313,0,.L1352-.L313
	.half	1
	.byte	85
	.word	.L1355-.L313,.L1356-.L313
	.half	1
	.byte	88
	.word	0,0
.L854:
	.word	0,0
.L868:
	.word	0,0
.L913:
	.word	-1,.L313,.L1370-.L313,.L161-.L313
	.half	1
	.byte	89
	.word	0,0
.L884:
	.word	-1,.L313,.L1367-.L313,.L157-.L313
	.half	1
	.byte	88
	.word	0,0
.L862:
	.word	0,0
.L911:
	.word	0,0
.L878:
	.word	0,0
.L896:
	.word	0,0
.L919:
	.word	0,0
.L849:
	.word	-1,.L313,0,.L839-.L313
	.half	2
	.byte	145,72
	.word	0,0
.L932:
	.word	0,0
.L928:
	.word	0,0
.L848:
	.word	-1,.L313,.L858-.L313,.L1360-.L313
	.half	1
	.byte	111
	.word	0,0
.L920:
	.word	-1,.L313,.L1371-.L313,.L922-.L313
	.half	1
	.byte	82
	.word	.L166-.L313,.L170-.L313
	.half	1
	.byte	82
	.word	0,0
.L924:
	.word	0,0
.L909:
	.word	0,0
.L876:
	.word	0,0
.L894:
	.word	0,0
.L918:
	.word	0,0
.L844:
	.word	-1,.L313,0,.L152-.L313
	.half	1
	.byte	102
	.word	.L1357-.L313,.L159-.L313
	.half	1
	.byte	108
	.word	0,0
.L905:
	.word	0,0
.L923:
	.word	0,0
.L890:
	.word	0,0
.L916:
	.word	0,0
.L882:
	.word	-1,.L313,0,.L839-.L313
	.half	2
	.byte	145,92
	.word	0,0
.L930:
	.word	0,0
.L926:
	.word	0,0
.L927:
	.word	0,0
.L931:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_loc'
.L322:
	.word	-1,.L323,0,.L1437-.L323
	.half	2
	.byte	138,0
	.word	.L1437-.L323,.L1177-.L323
	.half	2
	.byte	138,48
	.word	.L1177-.L323,.L1177-.L323
	.half	2
	.byte	138,0
	.word	0,0
.L1194:
	.word	0,0
.L1178:
	.word	-1,.L323,0,.L272-.L323
	.half	1
	.byte	84
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	84
	.word	0,0
.L1203:
	.word	0,0
.L1233:
	.word	0,0
.L1252:
	.word	0,0
.L1201:
	.word	0,0
.L1179:
	.word	-1,.L323,0,.L1438-.L323
	.half	1
	.byte	100
	.word	.L1440-.L323,.L1177-.L323
	.half	2
	.byte	145,120
	.word	.L1444-.L323,.L1445-.L323
	.half	1
	.byte	111
	.word	.L1452-.L323,.L1453-.L323
	.half	1
	.byte	111
	.word	0,0
.L1180:
	.word	-1,.L323,0,.L1439-.L323
	.half	1
	.byte	101
	.word	.L1441-.L323,.L1177-.L323
	.half	2
	.byte	145,124
	.word	.L1446-.L323,.L272-.L323
	.half	1
	.byte	98
	.word	.L1454-.L323,.L291-.L323
	.half	1
	.byte	111
	.word	.L1455-.L323,.L292-.L323
	.half	1
	.byte	111
	.word	0,0
.L1205:
	.word	0,0
.L1182:
	.word	-1,.L323,0,.L272-.L323
	.half	1
	.byte	86
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	86
	.word	0,0
.L1219:
	.word	0,0
.L1185:
	.word	-1,.L323,.L1442-.L323,.L1443-.L323
	.half	1
	.byte	95
	.word	0,0
.L1225:
	.word	0,0
.L1235:
	.word	0,0
.L1214:
	.word	-1,.L323,.L1445-.L323,.L1447-.L323
	.half	1
	.byte	111
	.word	.L1448-.L323,.L270-.L323
	.half	2
	.byte	145,112
	.word	0,0
.L1184:
	.word	-1,.L323,0,.L272-.L323
	.half	1
	.byte	103
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	103
	.word	0,0
.L1192:
	.word	0,0
.L1186:
	.word	-1,.L323,.L1189-.L323,.L272-.L323
	.half	5
	.byte	144,32,157,32,0
	.word	.L270-.L323,.L294-.L323
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1181:
	.word	-1,.L323,0,.L272-.L323
	.half	1
	.byte	85
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	85
	.word	0,0
.L1190:
	.word	0,0
.L1199:
	.word	0,0
.L1231:
	.word	-1,.L323,.L1450-.L323,.L271-.L323
	.half	1
	.byte	90
	.word	0,0
.L1215:
	.word	-1,.L323,.L1449-.L323,.L270-.L323
	.half	1
	.byte	89
	.word	0,0
.L1221:
	.word	0,0
.L1229:
	.word	0,0
.L1237:
	.word	0,0
.L1209:
	.word	0,0
.L1187:
	.word	-1,.L323,0,.L1177-.L323
	.half	2
	.byte	145,80
	.word	0,0
.L1250:
	.word	0,0
.L1246:
	.word	0,0
.L1188:
	.word	-1,.L323,.L1438-.L323,.L272-.L323
	.half	1
	.byte	100
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	100
	.word	0,0
.L1238:
	.word	-1,.L323,.L1451-.L323,.L1240-.L323
	.half	1
	.byte	82
	.word	.L278-.L323,.L282-.L323
	.half	1
	.byte	82
	.word	0,0
.L1242:
	.word	0,0
.L1227:
	.word	0,0
.L1236:
	.word	0,0
.L1207:
	.word	0,0
.L1183:
	.word	-1,.L323,0,.L272-.L323
	.half	1
	.byte	102
	.word	.L270-.L323,.L294-.L323
	.half	1
	.byte	102
	.word	0,0
.L1241:
	.word	0,0
.L1223:
	.word	0,0
.L1234:
	.word	0,0
.L1213:
	.word	-1,.L323,0,.L1177-.L323
	.half	2
	.byte	145,100
	.word	0,0
.L1248:
	.word	0,0
.L1244:
	.word	0,0
.L1245:
	.word	0,0
.L1249:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_loc'
.L316:
	.word	-1,.L317,0,.L1380-.L317
	.half	2
	.byte	138,0
	.word	.L1380-.L317,.L989-.L317
	.half	2
	.byte	138,48
	.word	.L989-.L317,.L989-.L317
	.half	2
	.byte	138,0
	.word	0,0
.L1001:
	.word	0,0
.L990:
	.word	-1,.L317,0,.L196-.L317
	.half	1
	.byte	84
	.word	.L193-.L317,.L213-.L317
	.half	1
	.byte	84
	.word	0,0
.L1010:
	.word	0,0
.L1030:
	.word	0,0
.L1008:
	.word	0,0
.L991:
	.word	-1,.L317,0,.L1381-.L317
	.half	1
	.byte	100
	.word	.L1383-.L317,.L989-.L317
	.half	2
	.byte	145,120
	.word	.L1385-.L317,.L1386-.L317
	.half	1
	.byte	111
	.word	.L1396-.L317,.L1397-.L317
	.half	1
	.byte	111
	.word	0,0
.L992:
	.word	-1,.L317,0,.L1382-.L317
	.half	1
	.byte	101
	.word	.L1384-.L317,.L989-.L317
	.half	2
	.byte	145,116
	.word	.L1382-.L317,.L1385-.L317
	.half	1
	.byte	111
	.word	.L1387-.L317,.L196-.L317
	.half	1
	.byte	100
	.word	.L1398-.L317,.L211-.L317
	.half	1
	.byte	111
	.word	.L1399-.L317,.L193-.L317
	.half	1
	.byte	111
	.word	0,0
.L995:
	.word	-1,.L317,.L998-.L317,.L196-.L317
	.half	5
	.byte	144,32,157,32,0
	.word	.L193-.L317,.L213-.L317
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1019:
	.word	-1,.L317,.L1386-.L317,.L1388-.L317
	.half	1
	.byte	111
	.word	.L1389-.L317,.L193-.L317
	.half	2
	.byte	145,108
	.word	.L1393-.L317,.L1394-.L317
	.half	1
	.byte	98
	.word	.L1395-.L317,.L202-.L317
	.half	1
	.byte	81
	.word	.L201-.L317,.L205-.L317
	.half	1
	.byte	81
	.word	.L201-.L317,.L205-.L317
	.half	1
	.byte	98
	.word	0,0
.L1024:
	.word	0,0
.L1032:
	.word	0,0
.L994:
	.word	-1,.L317,0,.L196-.L317
	.half	1
	.byte	103
	.word	.L193-.L317,.L213-.L317
	.half	1
	.byte	103
	.word	0,0
.L999:
	.word	0,0
.L1006:
	.word	0,0
.L1022:
	.word	0,0
.L1020:
	.word	-1,.L317,.L1390-.L317,.L193-.L317
	.half	1
	.byte	89
	.word	0,0
.L1028:
	.word	-1,.L317,.L1391-.L317,.L195-.L317
	.half	1
	.byte	90
	.word	0,0
.L1014:
	.word	0,0
.L1026:
	.word	0,0
.L1034:
	.word	0,0
.L997:
	.word	-1,.L317,0,.L989-.L317
	.half	2
	.byte	145,80
	.word	0,0
.L1048:
	.word	0,0
.L1044:
	.word	0,0
.L1036:
	.word	-1,.L317,.L1392-.L317,.L1038-.L317
	.half	1
	.byte	82
	.word	.L201-.L317,.L205-.L317
	.half	1
	.byte	82
	.word	0,0
.L1040:
	.word	0,0
.L996:
	.word	0,0
.L1012:
	.word	0,0
.L1025:
	.word	0,0
.L1033:
	.word	0,0
.L993:
	.word	-1,.L317,0,.L196-.L317
	.half	1
	.byte	102
	.word	.L193-.L317,.L213-.L317
	.half	1
	.byte	102
	.word	0,0
.L1039:
	.word	0,0
.L1023:
	.word	0,0
.L1031:
	.word	0,0
.L1018:
	.word	-1,.L317,0,.L989-.L317
	.half	2
	.byte	145,100
	.word	0,0
.L1046:
	.word	0,0
.L1042:
	.word	0,0
.L1043:
	.word	0,0
.L1047:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_loc'
.L318:
	.word	-1,.L319,0,.L1400-.L319
	.half	2
	.byte	138,0
	.word	.L1400-.L319,.L1049-.L319
	.half	2
	.byte	138,48
	.word	.L1049-.L319,.L1049-.L319
	.half	2
	.byte	138,0
	.word	0,0
.L1059:
	.word	0,0
.L1050:
	.word	-1,.L319,0,.L222-.L319
	.half	1
	.byte	84
	.word	.L220-.L319,.L235-.L319
	.half	1
	.byte	84
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	84
	.word	0,0
.L1062:
	.word	0,0
.L1051:
	.word	-1,.L319,0,.L222-.L319
	.half	1
	.byte	85
	.word	.L220-.L319,.L235-.L319
	.half	1
	.byte	85
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	85
	.word	0,0
.L1064:
	.word	0,0
.L1107:
	.word	-1,.L319,.L1415-.L319,.L1416-.L319
	.half	1
	.byte	82
	.word	.L1418-.L319,.L217-.L319
	.half	1
	.byte	82
	.word	0,0
.L1080:
	.word	0,0
.L1109:
	.word	0,0
.L1063:
	.word	0,0
.L1052:
	.word	-1,.L319,0,.L1060-.L319
	.half	1
	.byte	100
	.word	.L1403-.L319,.L1049-.L319
	.half	2
	.byte	145,116
	.word	.L1407-.L319,.L1408-.L319
	.half	1
	.byte	111
	.word	.L1412-.L319,.L1413-.L319
	.half	1
	.byte	111
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	100
	.word	0,0
.L1053:
	.word	-1,.L319,0,.L1401-.L319
	.half	1
	.byte	101
	.word	.L1404-.L319,.L1049-.L319
	.half	2
	.byte	145,120
	.word	.L1401-.L319,.L218-.L319
	.half	1
	.byte	98
	.word	.L1414-.L319,.L220-.L319
	.half	1
	.byte	111
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	101
	.word	0,0
.L1056:
	.word	-1,.L319,.L1405-.L319,.L1406-.L319
	.half	5
	.byte	144,32,157,32,0
	.word	.L216-.L319,.L242-.L319
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1068:
	.word	-1,.L319,.L1409-.L319,.L222-.L319
	.half	1
	.byte	101
	.word	.L220-.L319,.L235-.L319
	.half	1
	.byte	101
	.word	0,0
.L1075:
	.word	0,0
.L1082:
	.word	0,0
.L1055:
	.word	-1,.L319,0,.L218-.L319
	.half	1
	.byte	103
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	103
	.word	0,0
.L1061:
	.word	0,0
.L1071:
	.word	0,0
.L1073:
	.word	0,0
.L1102:
	.word	0,0
.L1100:
	.word	0,0
.L1069:
	.word	-1,.L319,.L1406-.L319,.L222-.L319
	.half	5
	.byte	144,32,157,32,0
	.word	.L220-.L319,.L235-.L319
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1078:
	.word	-1,.L319,.L1410-.L319,.L220-.L319
	.half	1
	.byte	88
	.word	0,0
.L1106:
	.word	-1,.L319,.L1417-.L319,.L217-.L319
	.half	1
	.byte	81
	.word	0,0
.L1066:
	.word	0,0
.L1077:
	.word	0,0
.L1084:
	.word	0,0
.L1057:
	.word	-1,.L319,0,.L1049-.L319
	.half	2
	.byte	145,80
	.word	0,0
.L1097:
	.word	0,0
.L1093:
	.word	0,0
.L1085:
	.word	-1,.L319,.L1411-.L319,.L1087-.L319
	.half	1
	.byte	82
	.word	.L225-.L319,.L229-.L319
	.half	1
	.byte	82
	.word	0,0
.L1089:
	.word	0,0
.L1065:
	.word	0,0
.L1076:
	.word	0,0
.L1083:
	.word	0,0
.L1101:
	.word	0,0
.L1054:
	.word	-1,.L319,0,.L1402-.L319
	.half	1
	.byte	102
	.word	.L216-.L319,.L242-.L319
	.half	1
	.byte	102
	.word	0,0
.L1088:
	.word	0,0
.L1074:
	.word	0,0
.L1081:
	.word	0,0
.L1067:
	.word	-1,.L319,0,.L1049-.L319
	.half	2
	.byte	145,100
	.word	0,0
.L1095:
	.word	0,0
.L1091:
	.word	0,0
.L1092:
	.word	0,0
.L1096:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_loc'
.L320:
	.word	-1,.L321,0,.L1419-.L321
	.half	2
	.byte	138,0
	.word	.L1419-.L321,.L1110-.L321
	.half	2
	.byte	138,56
	.word	.L1110-.L321,.L1110-.L321
	.half	2
	.byte	138,0
	.word	0,0
.L1128:
	.word	0,0
.L1111:
	.word	-1,.L321,0,.L251-.L321
	.half	1
	.byte	84
	.word	.L248-.L321,.L265-.L321
	.half	1
	.byte	84
	.word	0,0
.L1137:
	.word	0,0
.L1159:
	.word	0,0
.L1135:
	.word	0,0
.L1112:
	.word	-1,.L321,0,.L1420-.L321
	.half	1
	.byte	100
	.word	.L1422-.L321,.L1110-.L321
	.half	2
	.byte	145,116
	.word	.L1427-.L321,.L1428-.L321
	.half	1
	.byte	111
	.word	.L1434-.L321,.L1435-.L321
	.half	1
	.byte	111
	.word	0,0
.L1113:
	.word	-1,.L321,0,.L1421-.L321
	.half	1
	.byte	101
	.word	.L1423-.L321,.L1110-.L321
	.half	2
	.byte	145,120
	.word	.L1426-.L321,.L1427-.L321
	.half	1
	.byte	111
	.word	.L1436-.L321,.L248-.L321
	.half	1
	.byte	111
	.word	0,0
.L1152:
	.word	0,0
.L1117:
	.word	-1,.L321,.L1424-.L321,.L251-.L321
	.half	5
	.byte	144,32,157,32,0
	.word	.L248-.L321,.L265-.L321
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1154:
	.word	0,0
.L1149:
	.word	-1,.L321,.L1428-.L321,.L1429-.L321
	.half	1
	.byte	111
	.word	.L1430-.L321,.L248-.L321
	.half	2
	.byte	145,108
	.word	0,0
.L1161:
	.word	0,0
.L1116:
	.word	-1,.L321,0,.L251-.L321
	.half	1
	.byte	103
	.word	.L248-.L321,.L265-.L321
	.half	1
	.byte	103
	.word	0,0
.L1126:
	.word	0,0
.L1118:
	.word	-1,.L321,.L1122-.L321,.L251-.L321
	.half	1
	.byte	81
	.word	.L248-.L321,.L265-.L321
	.half	1
	.byte	81
	.word	0,0
.L1114:
	.word	-1,.L321,0,.L1125-.L321
	.half	1
	.byte	85
	.word	0,0
.L1123:
	.word	0,0
.L1133:
	.word	0,0
.L1157:
	.word	-1,.L321,.L1432-.L321,.L250-.L321
	.half	1
	.byte	89
	.word	0,0
.L1150:
	.word	-1,.L321,.L1431-.L321,.L248-.L321
	.half	1
	.byte	88
	.word	0,0
.L1156:
	.word	0,0
.L1141:
	.word	0,0
.L1163:
	.word	0,0
.L1120:
	.word	-1,.L321,0,.L1110-.L321
	.half	2
	.byte	145,76
	.word	0,0
.L1176:
	.word	0,0
.L1172:
	.word	0,0
.L1121:
	.word	-1,.L321,.L1425-.L321,.L251-.L321
	.half	1
	.byte	98
	.word	.L248-.L321,.L265-.L321
	.half	1
	.byte	98
	.word	0,0
.L1164:
	.word	-1,.L321,.L1433-.L321,.L1166-.L321
	.half	1
	.byte	82
	.word	.L256-.L321,.L260-.L321
	.half	1
	.byte	82
	.word	0,0
.L1168:
	.word	0,0
.L1119:
	.word	-1,.L321,0,.L1110-.L321
	.half	2
	.byte	145,72
	.word	0,0
.L1155:
	.word	0,0
.L1139:
	.word	0,0
.L1162:
	.word	0,0
.L1115:
	.word	-1,.L321,0,.L251-.L321
	.half	1
	.byte	102
	.word	.L248-.L321,.L265-.L321
	.half	1
	.byte	102
	.word	0,0
.L1153:
	.word	0,0
.L1167:
	.word	0,0
.L1160:
	.word	0,0
.L1148:
	.word	-1,.L321,0,.L1110-.L321
	.half	2
	.byte	145,96
	.word	0,0
.L1174:
	.word	0,0
.L1170:
	.word	0,0
.L1171:
	.word	0,0
.L1175:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L2101:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvCaptureED')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L297,.L400-.L297
	.byte	4
	.word	(.L1254-.L297)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L400-.L1254)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvCaptureFF')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L299,.L488-.L299
	.byte	4
	.word	(.L1271-.L299)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L488-.L1271)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvCopyRawFF')
	.sect	'.debug_frame'
	.word	12
	.word	.L2101,.L301,.L557-.L301
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvCopyRawED')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L303,.L593-.L303
	.byte	4
	.word	(.L1298-.L303)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L593-.L1298)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvIsEDRNumberValid')
	.sect	'.debug_frame'
	.word	20
	.word	.L2101,.L305,.L719-.L305
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveEDR')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L307,.L742-.L307
	.byte	4
	.word	(.L1316-.L307)/2
	.byte	19,48,22,26,3,19,138,48,4
	.word	(.L742-.L1316)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvGetSizeOfEDR')
	.sect	'.debug_frame'
	.word	12
	.word	.L2101,.L309,.L933-.L309
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvGetSizeOfED')
	.sect	'.debug_frame'
	.word	12
	.word	.L2101,.L311,.L957-.L311
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveFF')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L313,.L839-.L313
	.byte	4
	.word	(.L1350-.L313)/2
	.byte	19,56,22,26,3,19,138,56,4
	.word	(.L839-.L1350)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvGetSizeOfFF')
	.sect	'.debug_frame'
	.word	20
	.word	.L2101,.L315,.L963-.L315
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveRawED')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L317,.L989-.L317
	.byte	4
	.word	(.L1380-.L317)/2
	.byte	19,48,22,26,3,19,138,48,4
	.word	(.L989-.L1380)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveRawEDR')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L319,.L1049-.L319
	.byte	4
	.word	(.L1400-.L319)/2
	.byte	19,48,22,26,3,19,138,48,4
	.word	(.L1049-.L1400)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveRawFF')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L321,.L1110-.L321
	.byte	4
	.word	(.L1419-.L321)/2
	.byte	19,56,22,26,3,19,138,56,4
	.word	(.L1110-.L1419)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_EnvRetrieveRawDid')
	.sect	'.debug_frame'
	.word	36
	.word	.L2101,.L323,.L1177-.L323
	.byte	4
	.word	(.L1437-.L323)/2
	.byte	19,48,22,26,3,19,138,48,4
	.word	(.L1177-.L1437)/2
	.byte	19,0,8,26,0,0

; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   361  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   362  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   363  #define DEM_STOP_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   364  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   365  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   366  /*uint8 Dem_EnvGetMaxNumberOfFreezeFrames(Dem_EventIdType EventId, uint16 totalSize)
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   367  {
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   368  	uint8_least edId = Dem_Cfg_EnvEventId2EnvData[EventId].extDataId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   369  	uint8_least ffId = Dem_Cfg_EnvEventId2EnvData[EventId].freezeFrameId;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   370  
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   371  	if ((totalSize - Dem_EnvEDGetRawByteSize (edId) > 0) && (Dem_EnvFFGetRawByteSize (ffId) > 0))
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   372  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   373  		return (totalSize - Dem_EnvEDGetRawByteSize (edId)) / Dem_EnvFFGetRawByteSize (ffId);
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   374  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   375  	else
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   376  	{
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   377  		return 0;
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   378  	}
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   379  }
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   380  */
; BSW\src\BSW\Gen\Dem\src\env\Dem_EnvMain.c	   381  

	; Module end
