	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15564a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dem\\src\\Dem_EventRecheck.src BSW\\src\\BSW\\Gen\\Dem\\src\\evdep\\Dem_EventRecheck.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dem\\src\\evdep\\Dem_EventRecheck.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	17239
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\evdep\\Dem_EventRecheck.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	148
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	165
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	165
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8OverwriteBit',0,3,1,48,19,1,1,5
	.byte	'buffer',0,1,48,55
	.word	165
	.byte	5
	.byte	'bit_position',0,1,48,69
	.word	148
	.byte	5
	.byte	'will_bit_be_set',0,1,48,91
	.word	148
	.byte	7,6,6,0,0,8
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	148
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	148
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit8IsBitSet',0,3,1,64,22
	.word	148
	.byte	1,1,5
	.byte	'value',0,1,64,53
	.word	148
	.byte	5
	.byte	'bit_position',0,1,64,66
	.word	148
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_Bit8GetBits',0,3,1,69,20
	.word	148
	.byte	1,1,5
	.byte	'value',0,1,69,50
	.word	148
	.byte	5
	.byte	'bit_position',0,1,69,63
	.word	148
	.byte	5
	.byte	'number_of_bits',0,1,69,83
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	165
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	148
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8OverwriteBits',0,3,1,83,19,1,1,5
	.byte	'value',0,1,83,56
	.word	165
	.byte	5
	.byte	'bit_position',0,1,83,69
	.word	148
	.byte	5
	.byte	'number_of_bits',0,1,83,89
	.word	148
	.byte	5
	.byte	'newValue',0,1,83,111
	.word	148
	.byte	7,6,0,0,2
	.byte	'unsigned int',0,4,7,8
	.byte	'rba_BswSrv_ByteOrderSwap32',0,3,2,125,21
	.word	865
	.byte	1,1,5
	.byte	'Input_u32',0,2,125,55
	.word	865
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,8
	.byte	'rba_BswSrv_ByteOrderSwap16',0,3,2,150,1,21
	.word	939
	.byte	1,1,5
	.byte	'Input_u16',0,2,150,1,55
	.word	939
	.byte	6,0,8
	.byte	'Dem_LibGetParamBool',0,3,3,41,20
	.word	148
	.byte	1,1,5
	.byte	'parameter',0,3,41,49
	.word	148
	.byte	6,0,8
	.byte	'Dem_isDtcIdValid',0,3,4,152,1,30
	.word	148
	.byte	1,1,5
	.byte	'id',0,4,152,1,62
	.word	939
	.byte	6,0,8
	.byte	'Dem_DtcIdGetEventId',0,3,4,166,1,28
	.word	939
	.byte	1,1,5
	.byte	'dtcid',0,4,166,1,63
	.word	939
	.byte	6,0,8
	.byte	'Dem_DtcGroupIdIsValid',0,3,4,252,1,30
	.word	148
	.byte	1,1,5
	.byte	'dtcGroupID',0,4,252,1,72
	.word	148
	.byte	6,0,3
	.word	939
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,5,36,19,1,1,5
	.byte	'buffer',0,5,36,51
	.word	1220
	.byte	5
	.byte	'bit_position',0,5,36,65
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,5,42,19,1,1,5
	.byte	'buffer',0,5,42,53
	.word	1220
	.byte	5
	.byte	'bit_position',0,5,42,67
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,5,60,21
	.word	939
	.byte	1,1,5
	.byte	'value',0,5,60,58
	.word	939
	.byte	5
	.byte	'bit_position',0,5,60,71
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit16IsBitSet',0,3,5,65,22
	.word	148
	.byte	1,1,5
	.byte	'value',0,5,65,55
	.word	939
	.byte	5
	.byte	'bit_position',0,5,65,68
	.word	148
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_Bit16GetBits',0,3,5,70,21
	.word	939
	.byte	1,1,5
	.byte	'value',0,5,70,53
	.word	939
	.byte	5
	.byte	'bit_position',0,5,70,66
	.word	148
	.byte	5
	.byte	'number_of_bits',0,5,70,86
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,5,78,19,1,1,5
	.byte	'value',0,5,78,54
	.word	1220
	.byte	5
	.byte	'bit_position',0,5,78,67
	.word	148
	.byte	5
	.byte	'number_of_bits',0,5,78,87
	.word	148
	.byte	6,0,3
	.word	865
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,6,36,19,1,1,5
	.byte	'buffer',0,6,36,51
	.word	1709
	.byte	5
	.byte	'bit_position',0,6,36,65
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,6,42,19,1,1,5
	.byte	'buffer',0,6,42,53
	.word	1709
	.byte	5
	.byte	'bit_position',0,6,42,67
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,6,60,21
	.word	865
	.byte	1,1,5
	.byte	'value',0,6,60,58
	.word	865
	.byte	5
	.byte	'bit_position',0,6,60,71
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit32IsBitSet',0,3,6,65,22
	.word	148
	.byte	1,1,5
	.byte	'value',0,6,65,55
	.word	865
	.byte	5
	.byte	'bit_position',0,6,65,68
	.word	148
	.byte	7,6,0,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,6,78,19,1,1,5
	.byte	'value',0,6,78,54
	.word	1709
	.byte	5
	.byte	'bit_position',0,6,78,67
	.word	148
	.byte	5
	.byte	'number_of_bits',0,6,78,87
	.word	148
	.byte	6,0,4
	.byte	'Dem_BitArraySetBit',0,3,7,33,17,1,1,5
	.byte	'buffer',0,7,33,36
	.word	1709
	.byte	5
	.byte	'bit_position',0,7,33,75
	.word	865
	.byte	6,0,4
	.byte	'Dem_BitArrayClearBit',0,3,7,46,17,1,1,5
	.byte	'buffer',0,7,46,38
	.word	1709
	.byte	5
	.byte	'bit_position',0,7,46,77
	.word	865
	.byte	6,0,4
	.byte	'Dem_BitArrayOverwriteBit',0,3,7,61,17,1,1,5
	.byte	'buffer',0,7,61,42
	.word	1709
	.byte	5
	.byte	'bit_position',0,7,62,25
	.word	865
	.byte	5
	.byte	'will_bit_be_set',0,7,62,57
	.word	148
	.byte	7,6,6,0,0,9
	.word	865
	.byte	3
	.word	2329
	.byte	8
	.byte	'Dem_BitArrayIsBitSet',0,3,7,75,30
	.word	148
	.byte	1,1,5
	.byte	'buffer',0,7,75,51
	.word	2334
	.byte	5
	.byte	'bit_position',0,7,75,95
	.word	865
	.byte	6,0,8
	.byte	'Dem_ISO14229ByteIsTestFailed',0,3,8,122,30
	.word	148
	.byte	1,1,5
	.byte	'self',0,8,122,66
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsTestFailedTOC',0,3,8,129,1,30
	.word	148
	.byte	1,1,5
	.byte	'self',0,8,129,1,69
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsTestCompleteTOC',0,3,8,157,1,30
	.word	148
	.byte	1,1,5
	.byte	'self',0,8,157,1,71
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsPendingDTC',0,3,8,164,1,30
	.word	148
	.byte	1,1,5
	.byte	'self',0,8,164,1,66
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsWarningIndicatorRequested',0,3,8,177,1,30
	.word	148
	.byte	1,1,5
	.byte	'self',0,8,177,1,81
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailed',0,3,8,186,1,17,1,1,5
	.byte	'self',0,8,186,1,55
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,186,1,79
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailedTOC',0,3,8,193,1,17,1,1,5
	.byte	'self',0,8,193,1,58
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,193,1,82
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailedSLC',0,3,8,200,1,17,1,1,5
	.byte	'self',0,8,200,1,58
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,200,1,82
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestCompleteTOC',0,3,8,214,1,17,1,1,5
	.byte	'self',0,8,214,1,60
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,214,1,84
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestCompleteSLC',0,3,8,221,1,17,1,1,5
	.byte	'self',0,8,221,1,60
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,221,1,84
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetPendingDTC',0,3,8,228,1,17,1,1,5
	.byte	'self',0,8,228,1,55
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,228,1,79
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetConfirmedDTC',0,3,8,235,1,17,1,1,5
	.byte	'self',0,8,235,1,57
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,235,1,81
	.word	148
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetWarningIndicatorRequested',0,3,8,242,1,17,1,1,5
	.byte	'self',0,8,242,1,70
	.word	165
	.byte	5
	.byte	'setOrReset',0,8,242,1,94
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_EnCoAreAllFulfilled',0,3,9,32,30
	.word	148
	.byte	1,1,5
	.byte	'enableConditionList',0,9,32,68
	.word	148
	.byte	6,0,8
	.byte	'Dem_NvMGetNvMBlocKId',0,3,10,49,28
	.word	939
	.byte	1,1,5
	.byte	'id',0,10,49,68
	.word	148
	.byte	6,0,8
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderS',0,3,11,36,21
	.word	939
	.byte	1,1,5
	.byte	'val',0,11,36,70
	.word	939
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderL',0,3,11,41,21
	.word	865
	.byte	1,1,5
	.byte	'val',0,11,41,70
	.word	865
	.byte	7,6,0,0,8
	.byte	'Dem_EvtParam_GetOperationCycleID',0,3,12,122,20
	.word	148
	.byte	1,1,5
	.byte	'indx',0,12,122,69
	.word	939
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetAgingCycleID',0,3,12,129,1,20
	.word	148
	.byte	1,1,5
	.byte	'indx',0,12,129,1,65
	.word	939
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetFailureCycleID',0,3,12,136,1,20
	.word	148
	.byte	1,1,5
	.byte	'indx',0,12,136,1,67
	.word	939
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetEnableConditions',0,3,12,208,1,27
	.word	148
	.byte	1,1,5
	.byte	'indx',0,12,208,1,76
	.word	939
	.byte	6,0,4
	.byte	'Dem_EvtIncreaseGlobalInitMonitoringCounter',0,3,13,227,3,17,1,1,6,0,4
	.byte	'Dem_EvtSetAnyInitMonitoring',0,3,13,233,3,17,1,1,5
	.byte	'reason',0,13,233,3,72
	.word	148
	.byte	7,6,0,0,8
	.byte	'Dem_EvtIsSuppressed',0,3,13,244,4,30
	.word	148
	.byte	1,1,5
	.byte	'EventId',0,13,244,4,67
	.word	939
	.byte	7,6,0,0,8
	.byte	'Dem_EvtGetIsoByte',0,3,14,42,34
	.word	148
	.byte	1,1,5
	.byte	'EventId',0,14,42,69
	.word	939
	.byte	6,0,10
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	6,0,10
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	6,0,10
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	7,12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,6,12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,6,0,0,10
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	6,0,10
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	7,12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,6,0,0,10
	.word	561
	.byte	11
	.word	596
	.byte	11
	.word	610
	.byte	11
	.word	631
	.byte	6,0,10
	.word	656
	.byte	11
	.word	689
	.byte	11
	.word	703
	.byte	11
	.word	724
	.byte	6,0,10
	.word	749
	.byte	11
	.word	786
	.byte	11
	.word	800
	.byte	11
	.word	821
	.byte	11
	.word	844
	.byte	7,12
	.word	656
	.byte	11
	.word	689
	.byte	11
	.word	703
	.byte	11
	.word	724
	.byte	13
	.word	747
	.byte	0,6,0,0,10
	.word	881
	.byte	11
	.word	919
	.byte	6,0,10
	.word	961
	.byte	11
	.word	1000
	.byte	6,0,10
	.word	1021
	.byte	11
	.word	1052
	.byte	6,0,10
	.word	1072
	.byte	11
	.word	1101
	.byte	6,0,10
	.word	1115
	.byte	11
	.word	1147
	.byte	6,0,10
	.word	1164
	.byte	11
	.word	1198
	.byte	6,0,10
	.word	1225
	.byte	11
	.word	1256
	.byte	11
	.word	1271
	.byte	6,0,10
	.word	1294
	.byte	11
	.word	1327
	.byte	11
	.word	1342
	.byte	6,0,10
	.word	1365
	.byte	11
	.word	1406
	.byte	11
	.word	1420
	.byte	6,0,10
	.word	1443
	.byte	11
	.word	1480
	.byte	11
	.word	1494
	.byte	7,12
	.word	1365
	.byte	11
	.word	1406
	.byte	11
	.word	1420
	.byte	13
	.word	1441
	.byte	0,6,0,0,10
	.word	1519
	.byte	11
	.word	1555
	.byte	11
	.word	1569
	.byte	11
	.word	1590
	.byte	6,0,10
	.word	1615
	.byte	11
	.word	1649
	.byte	11
	.word	1663
	.byte	11
	.word	1684
	.byte	6,0,10
	.word	1714
	.byte	11
	.word	1745
	.byte	11
	.word	1760
	.byte	6,0,10
	.word	1783
	.byte	11
	.word	1816
	.byte	11
	.word	1831
	.byte	6,0,10
	.word	1854
	.byte	11
	.word	1895
	.byte	11
	.word	1909
	.byte	6,0,10
	.word	1932
	.byte	11
	.word	1969
	.byte	11
	.word	1983
	.byte	7,12
	.word	1854
	.byte	11
	.word	1895
	.byte	11
	.word	1909
	.byte	13
	.word	1930
	.byte	0,6,0,0,10
	.word	2008
	.byte	11
	.word	2042
	.byte	11
	.word	2056
	.byte	11
	.word	2077
	.byte	6,0,10
	.word	2102
	.byte	11
	.word	2128
	.byte	11
	.word	2143
	.byte	6,0,10
	.word	2166
	.byte	11
	.word	2194
	.byte	11
	.word	2209
	.byte	6,0,10
	.word	2232
	.byte	11
	.word	2264
	.byte	11
	.word	2279
	.byte	11
	.word	2300
	.byte	7,12
	.word	2102
	.byte	11
	.word	2128
	.byte	11
	.word	2143
	.byte	13
	.word	2164
	.byte	0,6,12
	.word	2166
	.byte	11
	.word	2194
	.byte	11
	.word	2209
	.byte	13
	.word	2230
	.byte	0,6,0,0,10
	.word	2339
	.byte	11
	.word	2371
	.byte	11
	.word	2386
	.byte	6,0,10
	.word	2409
	.byte	11
	.word	2449
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	2466
	.byte	11
	.word	2510
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	2528
	.byte	11
	.word	2574
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	2592
	.byte	11
	.word	2633
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	2651
	.byte	11
	.word	2707
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	2725
	.byte	11
	.word	2763
	.byte	11
	.word	2777
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	2801
	.byte	11
	.word	2842
	.byte	11
	.word	2856
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	2880
	.byte	11
	.word	2921
	.byte	11
	.word	2935
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	2959
	.byte	11
	.word	3002
	.byte	11
	.word	3016
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	3040
	.byte	11
	.word	3083
	.byte	11
	.word	3097
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	3121
	.byte	11
	.word	3159
	.byte	11
	.word	3173
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	3197
	.byte	11
	.word	3237
	.byte	11
	.word	3251
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	3275
	.byte	11
	.word	3328
	.byte	11
	.word	3342
	.byte	7,12
	.word	308
	.byte	11
	.word	344
	.byte	11
	.word	359
	.byte	11
	.word	380
	.byte	14
	.word	404
	.byte	12
	.word	170
	.byte	11
	.word	200
	.byte	11
	.word	215
	.byte	13
	.word	236
	.byte	0,13
	.word	405
	.byte	12
	.word	238
	.byte	11
	.word	270
	.byte	11
	.word	285
	.byte	13
	.word	306
	.byte	0,13
	.word	406
	.byte	0,0,6,0,0,10
	.word	3366
	.byte	11
	.word	3401
	.byte	6,0,10
	.word	3431
	.byte	11
	.word	3463
	.byte	6,0,10
	.word	3476
	.byte	11
	.word	3529
	.byte	7,12
	.word	961
	.byte	11
	.word	1000
	.byte	13
	.word	1019
	.byte	0,6,0,0,10
	.word	3545
	.byte	11
	.word	3598
	.byte	7,12
	.word	881
	.byte	11
	.word	919
	.byte	13
	.word	937
	.byte	0,6,0,0,10
	.word	3614
	.byte	11
	.word	3658
	.byte	6,0,10
	.word	3673
	.byte	11
	.word	3714
	.byte	6,0,10
	.word	3730
	.byte	11
	.word	3773
	.byte	6,0,10
	.word	3789
	.byte	11
	.word	3834
	.byte	6,0,10
	.word	3850
	.byte	6,0,10
	.word	3903
	.byte	11
	.word	3939
	.byte	7,12
	.word	1714
	.byte	11
	.word	1745
	.byte	11
	.word	1760
	.byte	13
	.word	1781
	.byte	0,6,0,0,10
	.word	3959
	.byte	11
	.word	3991
	.byte	7,12
	.word	486
	.byte	11
	.word	522
	.byte	11
	.word	536
	.byte	14
	.word	557
	.byte	12
	.word	409
	.byte	11
	.word	449
	.byte	11
	.word	463
	.byte	13
	.word	484
	.byte	0,13
	.word	558
	.byte	0,0,6,0,0,10
	.word	4012
	.byte	11
	.word	4041
	.byte	6,0,15,1,3
	.word	6096
	.byte	16
	.byte	'__codeptr',0,15,1,1
	.word	6098
	.byte	2
	.byte	'char',0,1,6,16
	.byte	'sint8',0,16,76,25
	.word	6121
	.byte	16
	.byte	'uint8',0,16,81,25
	.word	148
	.byte	2
	.byte	'short int',0,2,5,16
	.byte	'sint16',0,16,86,25
	.word	6157
	.byte	16
	.byte	'uint16',0,16,91,25
	.word	939
	.byte	2
	.byte	'int',0,4,5,16
	.byte	'sint32',0,16,96,24
	.word	6200
	.byte	16
	.byte	'uint32',0,16,106,24
	.word	865
	.byte	2
	.byte	'unsigned long long int',0,8,7,16
	.byte	'uint64',0,16,111,30
	.word	6237
	.byte	16
	.byte	'boolean',0,16,127,25
	.word	148
	.byte	2
	.byte	'unsigned long int',0,4,7,16
	.byte	'uint8_least',0,16,137,1,25
	.word	6294
	.byte	16
	.byte	'uint16_least',0,16,147,1,25
	.word	6294
	.byte	16
	.byte	'StatusType',0,17,191,1,27
	.word	148
	.byte	16
	.byte	'Std_ReturnType',0,17,199,1,15
	.word	148
	.byte	17,17,206,1,9,8,18
	.byte	'vendorID',0
	.word	939
	.byte	2,2,35,0,18
	.byte	'moduleID',0
	.word	939
	.byte	2,2,35,2,18
	.byte	'sw_major_version',0
	.word	148
	.byte	1,2,35,4,18
	.byte	'sw_minor_version',0
	.word	148
	.byte	1,2,35,5,18
	.byte	'sw_patch_version',0
	.word	148
	.byte	1,2,35,6,0,16
	.byte	'Std_VersionInfoType',0,17,213,1,3
	.word	6402
	.byte	16
	.byte	'Dem_StoCoList',0,18,32,15
	.word	148
	.byte	16
	.byte	'Dem_ComponentIdType',0,19,20,15
	.word	148
	.byte	16
	.byte	'PduIdType',0,20,22,19
	.word	939
	.byte	16
	.byte	'PduLengthType',0,20,26,19
	.word	939
	.byte	19,21,113,9,4,20
	.byte	'TP_DATACONF',0,0,20
	.byte	'TP_DATARETRY',0,1,20
	.byte	'TP_CONFPENDING',0,2,0,16
	.byte	'TpDataStateType',0,21,118,3
	.word	6642
	.byte	16
	.byte	'Can_IdType',0,22,32,16
	.word	865
	.byte	16
	.byte	'Can_HwHandleType',0,22,43,16
	.word	939
	.byte	17,23,93,9,8,18
	.byte	'Class',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'TIN',0
	.word	148
	.byte	1,2,35,1,18
	.byte	'ReturnAddress',0
	.word	865
	.byte	4,2,35,4,0,16
	.byte	'OsTrapInfoType',0,23,97,3
	.word	6762
	.byte	21,68
	.word	865
	.byte	22,16,0,17,23,154,1,9,68,18
	.byte	'store',0
	.word	6842
	.byte	68,2,35,0,0,21,68
	.word	6851
	.byte	22,0,0,16
	.byte	'Os_JumpBufType',0,23,156,1,3
	.word	6873
	.byte	16
	.byte	'Os_StackTraceType',0,23,174,1,18
	.word	865
	.byte	17,23,175,1,9,8,18
	.byte	'sp',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'ctx',0
	.word	865
	.byte	4,2,35,4,0,16
	.byte	'Os_StackValueType',0,23,175,1,63
	.word	6933
	.byte	16
	.byte	'Os_StackSizeType',0,23,176,1,27
	.word	6933
	.byte	23,1,1,3
	.word	7018
	.byte	16
	.byte	'Os_VoidVoidFunctionType',0,23,179,1,16
	.word	7021
	.byte	16
	.byte	'ApplicationType',0,23,193,1,23
	.word	148
	.byte	24
	.byte	'Os_ApplicationConfigurationType_s',0,23,198,1,16,2,18
	.byte	'app_id',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,1,0,16
	.byte	'Os_ApplicationConfigurationType',0,23,201,1,3
	.word	7084
	.byte	16
	.byte	'Os_CoreStateType',0,23,203,1,16
	.word	865
	.byte	16
	.byte	'AreaIdType',0,23,204,1,16
	.word	939
	.byte	16
	.byte	'Os_PeripheralAddressType',0,23,212,1,22
	.word	865
	.byte	16
	.byte	'TickType',0,23,221,1,22
	.word	865
	.byte	16
	.byte	'Os_StopwatchTickType',0,23,225,1,22
	.word	865
	.byte	16
	.byte	'Os_Lockable',0,23,234,1,18
	.word	1709
	.byte	16
	.byte	'CoreIdType',0,23,236,1,16
	.word	939
	.byte	16
	.byte	'SpinlockIdType',0,23,237,1,16
	.word	939
	.byte	19,23,239,1,9,4,20
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,20
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,16
	.byte	'TryToGetSpinlockType',0,23,239,1,74
	.word	7391
	.byte	19,23,174,2,9,4,20
	.byte	'APPLICATION_ACCESSIBLE',0,0,20
	.byte	'APPLICATION_RESTARTING',0,1,20
	.byte	'APPLICATION_TERMINATED',0,2,0,16
	.byte	'ApplicationStateType',0,23,174,2,92
	.word	7484
	.byte	25
	.byte	'void',0,3
	.word	7596
	.byte	26,1,1,27
	.word	148
	.byte	27
	.word	7602
	.byte	0,3
	.word	7607
	.byte	16
	.byte	'Os_FunctionEntryType',0,23,183,2,16
	.word	7621
	.byte	24
	.byte	'Os_MeterInfoType_s',0,23,193,2,16,48,18
	.byte	'elapsed',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'previous',0
	.word	865
	.byte	4,2,35,4,18
	.byte	'max',0
	.word	865
	.byte	4,2,35,8,18
	.byte	'cumulative',0
	.word	865
	.byte	4,2,35,12,18
	.byte	'stackbase',0
	.word	6933
	.byte	8,2,35,16,18
	.byte	'stackusage',0
	.word	6933
	.byte	8,2,35,24,18
	.byte	'stackmax',0
	.word	6933
	.byte	8,2,35,32,18
	.byte	'stackbudget',0
	.word	6933
	.byte	8,2,35,40,0,16
	.byte	'Os_MeterInfoType',0,23,202,2,3
	.word	7656
	.byte	3
	.word	7656
	.byte	16
	.byte	'Os_MeterInfoRefType',0,23,203,2,50
	.word	7854
	.byte	16
	.byte	'EventMaskType',0,23,206,2,15
	.word	148
	.byte	16
	.byte	'Os_imaskType',0,23,211,2,16
	.word	865
	.byte	24
	.byte	'Os_ISRDynType_s',0,23,213,2,16,48,18
	.byte	'meter',0
	.word	7656
	.byte	48,2,35,0,0,16
	.byte	'Os_ISRDynType',0,23,215,2,3
	.word	7933
	.byte	3
	.word	7933
	.byte	9
	.word	7994
	.byte	24
	.byte	'Os_ISRType_s',0,23,216,2,16,24,18
	.byte	'entry_function',0
	.word	7026
	.byte	4,2,35,0,18
	.byte	'dynamic',0
	.word	7999
	.byte	4,2,35,4,18
	.byte	'imask',0
	.word	865
	.byte	4,2,35,8,18
	.byte	'stackbudget',0
	.word	6933
	.byte	8,2,35,12,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,20,18
	.byte	'application',0
	.word	148
	.byte	1,2,35,21,0,16
	.byte	'Os_ISRType',0,23,223,2,3
	.word	8004
	.byte	3
	.word	7018
	.byte	9
	.word	8004
	.byte	3
	.word	8163
	.byte	16
	.byte	'ISRType',0,23,224,2,46
	.word	8168
	.byte	16
	.byte	'Os_bitmask',0,23,239,2,22
	.word	865
	.byte	16
	.byte	'Os_pset0Type',0,23,240,2,20
	.word	865
	.byte	16
	.byte	'Os_pset1Type',0,23,241,2,20
	.word	865
	.byte	16
	.byte	'Os_pset2Type',0,23,242,2,20
	.word	865
	.byte	28,23,243,2,9,4,18
	.byte	'p0',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'p1',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'p2',0
	.word	865
	.byte	4,2,35,0,0,16
	.byte	'Os_psetType',0,23,247,2,3
	.word	8276
	.byte	28,23,249,2,9,4,18
	.byte	't0',0
	.word	865
	.byte	4,2,35,0,18
	.byte	't1',0
	.word	865
	.byte	4,2,35,0,18
	.byte	't2',0
	.word	865
	.byte	4,2,35,0,0,16
	.byte	'Os_tpmaskType',0,23,253,2,3
	.word	8340
	.byte	16
	.byte	'Os_ActivationCountType',0,23,254,2,23
	.word	148
	.byte	24
	.byte	'Os_TaskDynType_s',0,23,128,3,16,120,18
	.byte	'terminate_jump_buf',0
	.word	6882
	.byte	68,2,35,0,18
	.byte	'meter',0
	.word	7656
	.byte	48,2,35,68,18
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,116,0,16
	.byte	'Os_TaskDynType',0,23,132,3,3
	.word	8438
	.byte	21,68
	.word	6851
	.byte	22,0,0,3
	.word	8438
	.byte	9
	.word	8564
	.byte	24
	.byte	'Os_TaskType_s',0,23,134,3,16,40,18
	.byte	'dynamic',0
	.word	8569
	.byte	4,2,35,0,18
	.byte	'entry_function',0
	.word	7026
	.byte	4,2,35,4,18
	.byte	'pset',0
	.word	8276
	.byte	4,2,35,8,18
	.byte	'base_tpmask',0
	.word	8340
	.byte	4,2,35,12,18
	.byte	'tpmask',0
	.word	8340
	.byte	4,2,35,16,18
	.byte	'core_id',0
	.word	939
	.byte	2,2,35,20,18
	.byte	'index',0
	.word	865
	.byte	4,2,35,24,18
	.byte	'stackbudget',0
	.word	6933
	.byte	8,2,35,28,18
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,36,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,37,18
	.byte	'application',0
	.word	148
	.byte	1,2,35,38,0,16
	.byte	'Os_TaskType',0,23,146,3,3
	.word	8574
	.byte	9
	.word	8574
	.byte	3
	.word	8824
	.byte	16
	.byte	'TaskType',0,23,147,3,47
	.word	8829
	.byte	29
	.byte	'Os_TaskStateType',0,23,155,3,6,4,20
	.byte	'SUSPENDED',0,0,20
	.byte	'READY',0,1,20
	.byte	'WAITING',0,2,20
	.byte	'RUNNING',0,3,0,16
	.byte	'TaskStateType',0,23,156,3,31
	.word	8852
	.byte	28,23,167,3,3,4,18
	.byte	'tpmask',0
	.word	8340
	.byte	4,2,35,0,0,24
	.byte	'Os_ResourceDynType_s',0,23,166,3,16,4,18
	.byte	'saved_priority',0
	.word	8939
	.byte	4,2,35,0,0,16
	.byte	'Os_ResourceDynType',0,23,170,3,3
	.word	8962
	.byte	3
	.word	8962
	.byte	9
	.word	9042
	.byte	24
	.byte	'Os_ResourceType_s',0,23,171,3,16,12,18
	.byte	'dynamic',0
	.word	9047
	.byte	4,2,35,0,18
	.byte	'tpmask',0
	.word	8340
	.byte	4,2,35,4,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,8,0,16
	.byte	'Os_ResourceType',0,23,175,3,3
	.word	9052
	.byte	17,23,181,3,9,12,18
	.byte	'maxallowedvalue',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'ticksperbase',0
	.word	865
	.byte	4,2,35,4,18
	.byte	'mincycle',0
	.word	865
	.byte	4,2,35,8,0,16
	.byte	'AlarmBaseType',0,23,185,3,3
	.word	9151
	.byte	17,23,206,3,9,8,18
	.byte	'Running',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'Pending',0
	.word	148
	.byte	1,2,35,1,18
	.byte	'Delay',0
	.word	865
	.byte	4,2,35,4,0,16
	.byte	'Os_CounterStatusType',0,23,210,3,3
	.word	9246
	.byte	30
	.word	148
	.byte	1,1,3
	.word	9332
	.byte	16
	.byte	'Os_CounterIncrAdvType',0,23,217,3,22
	.word	9339
	.byte	24
	.byte	's_swd',0,23,222,3,12,4,18
	.byte	'count',0
	.word	865
	.byte	4,2,35,0,0,28,23,221,3,3,4,18
	.byte	'sw',0
	.word	9375
	.byte	4,2,35,0,0,24
	.byte	'Os_CounterDynType_s',0,23,220,3,16,4,18
	.byte	'type_dependent',0
	.word	9403
	.byte	4,2,35,0,0,16
	.byte	'Os_CounterDynType',0,23,226,3,3
	.word	9422
	.byte	3
	.word	9422
	.byte	9
	.word	9500
	.byte	24
	.byte	'Os_CounterType_s',0,23,227,3,16,28,18
	.byte	'dynamic',0
	.word	9505
	.byte	4,2,35,0,18
	.byte	'advincr',0
	.word	9344
	.byte	4,2,35,4,18
	.byte	'base',0
	.word	9151
	.byte	12,2,35,8,18
	.byte	'core',0
	.word	7602
	.byte	4,2,35,20,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,24,18
	.byte	'application',0
	.word	148
	.byte	1,2,35,25,0,16
	.byte	'Os_CounterType',0,23,234,3,3
	.word	9510
	.byte	3
	.word	9332
	.byte	9
	.word	9510
	.byte	3
	.word	9662
	.byte	16
	.byte	'CounterType',0,23,235,3,52
	.word	9667
	.byte	29
	.byte	'Os_ScheduleTableStatusType',0,23,240,3,6,4,20
	.byte	'SCHEDULETABLE_STOPPED',0,0,20
	.byte	'SCHEDULETABLE_NEXT',0,1,20
	.byte	'SCHEDULETABLE_WAITING',0,2,20
	.byte	'SCHEDULETABLE_RUNNING',0,3,20
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,16
	.byte	'ScheduleTableStatusType',0,23,241,3,41
	.word	9693
	.byte	9
	.word	.L6-.L3
	.byte	3
	.word	9893
	.byte	16
	.byte	'ScheduleTableType',0,23,128,4,58
	.word	9898
	.byte	24
	.byte	'Os_ScheduleTableDynType_s',0,23,130,4,16,16,18
	.byte	'match',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'next',0
	.word	9903
	.byte	4,2,35,4,18
	.byte	'state',0
	.word	9693
	.byte	4,2,35,8,18
	.byte	'config',0
	.word	939
	.byte	2,2,35,12,0,3
	.word	9930
	.byte	9
	.word	10023
.L6:
	.byte	24
	.byte	'Os_ScheduleTableType_s',0,23,247,3,16,16,18
	.byte	'dynamic',0
	.word	10028
	.byte	4,2,35,0,18
	.byte	'counter',0
	.word	9672
	.byte	4,2,35,4,18
	.byte	'repeat',0
	.word	148
	.byte	1,2,35,8,18
	.byte	'config',0
	.word	939
	.byte	2,2,35,10,18
	.byte	'initial',0
	.word	148
	.byte	1,2,35,12,18
	.byte	'access',0
	.word	148
	.byte	1,2,35,13,18
	.byte	'application',0
	.word	148
	.byte	1,2,35,14,0,16
	.byte	'Os_ScheduleTableType',0,23,255,3,3
	.word	10033
	.byte	9
	.word	10033
	.byte	3
	.word	10213
	.byte	9
	.word	9510
	.byte	3
	.word	10223
	.byte	31
	.word	7326
	.byte	31
	.word	8276
	.byte	31
	.word	8173
	.byte	31
	.word	8834
	.byte	31
	.word	8340
	.byte	31
	.word	148
	.byte	31
	.word	8834
	.byte	24
	.byte	'Os_ControlledCoreType_s',0,23,251,6,16,112,18
	.byte	'TrapInfo',0
	.word	6762
	.byte	8,2,35,0,18
	.byte	'lock_taskaccess',0
	.word	10233
	.byte	4,2,35,8,18
	.byte	'ReadyTasks',0
	.word	10238
	.byte	4,2,35,12,18
	.byte	'RunningISR',0
	.word	10243
	.byte	4,2,35,16,18
	.byte	'RunningTask',0
	.word	10248
	.byte	4,2,35,20,18
	.byte	'RunningTPMask',0
	.word	10253
	.byte	4,2,35,24,18
	.byte	'CurrentMeteredObject',0
	.word	7859
	.byte	4,2,35,28,18
	.byte	'IdleMeter',0
	.word	7656
	.byte	48,2,35,32,18
	.byte	'AppAccess',0
	.word	148
	.byte	1,2,35,80,18
	.byte	'AppOverride',0
	.word	10258
	.byte	1,2,35,81,18
	.byte	'GetStackValueAdjust',0
	.word	6933
	.byte	8,2,35,84,18
	.byte	'InErrorHook',0
	.word	148
	.byte	1,2,35,92,18
	.byte	'ChainTaskRef',0
	.word	10263
	.byte	4,2,35,96,18
	.byte	'GetStackUsageAdjust',0
	.word	6933
	.byte	8,2,35,100,18
	.byte	'InProtectionHook',0
	.word	148
	.byte	1,2,35,108,18
	.byte	'CoreIsActive',0
	.word	148
	.byte	1,2,35,109,18
	.byte	'InShutdownHook',0
	.word	148
	.byte	1,2,35,110,0,16
	.byte	'Os_ControlledCoreType',0,23,141,7,3
	.word	10268
	.byte	3
	.word	865
	.byte	9
	.word	8004
	.byte	3
	.word	10724
	.byte	9
	.word	8574
	.byte	3
	.word	10734
	.byte	3
	.word	7656
	.byte	24
	.byte	'Os_AnyCoreType_s',0,23,151,7,16,96,18
	.byte	'DisableAllImask',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'SuspendAllImask',0
	.word	865
	.byte	4,2,35,4,18
	.byte	'SuspendOSImask',0
	.word	865
	.byte	4,2,35,8,18
	.byte	'DisableAllCount',0
	.word	865
	.byte	4,2,35,12,18
	.byte	'SuspendAllCount',0
	.word	865
	.byte	4,2,35,16,18
	.byte	'SuspendOSCount',0
	.word	865
	.byte	4,2,35,20,18
	.byte	'RestartJumpBuf',0
	.word	6882
	.byte	68,2,35,24,18
	.byte	'Restartable',0
	.word	148
	.byte	1,2,35,92,0,16
	.byte	'Os_AnyCoreType',0,23,160,7,3
	.word	10749
	.byte	16
	.byte	'Can_TxObjPriorityClassType',0,24,219,3,16
	.word	865
	.byte	24
	.byte	'Can_TxHwObjectConfigType',0,24,231,3,16,8,18
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,1,18
	.byte	'TxObjPriorityClass',0
	.word	865
	.byte	4,2,35,4,0,16
	.byte	'Can_TxHwObjectConfigType',0,24,252,3,3
	.word	11026
	.byte	24
	.byte	'Can_RxHwObjectConfigType',0,24,129,4,16,12,18
	.byte	'MaskRef',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'MsgId',0
	.word	865
	.byte	4,2,35,4,18
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,8,18
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,9,0,16
	.byte	'Can_RxHwObjectConfigType',0,24,147,4,3
	.word	11162
	.byte	21,4
	.word	148
	.byte	22,3,0,24
	.byte	'Can_ControllerMOMapConfigType',0,24,181,4,16,4,18
	.byte	'ControllerMOMap',0
	.word	11302
	.byte	4,2,35,0,0,16
	.byte	'Can_ControllerMOMapConfigType',0,24,184,4,3
	.word	11311
	.byte	24
	.byte	'Can_NPCRValueType',0,24,188,4,16,2,18
	.byte	'Can_NPCRValue',0
	.word	939
	.byte	2,2,35,0,0,16
	.byte	'Can_NPCRValueType',0,24,191,4,3
	.word	11412
	.byte	24
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,24,194,4,16,8,18
	.byte	'CanControllerBaudrate',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'CanControllerBaudrateCfg',0
	.word	939
	.byte	2,2,35,4,0,16
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,24,198,4,3
	.word	11487
	.byte	9
	.word	11487
	.byte	3
	.word	11652
	.byte	24
	.byte	'Can_BaudrateConfigPtrType',0,24,201,4,16,4,18
	.byte	'Can_kBaudrateConfigPtr',0
	.word	11657
	.byte	4,2,35,0,0,16
	.byte	'Can_BaudrateConfigPtrType',0,24,204,4,3
	.word	11662
	.byte	24
	.byte	'Can_EventHandlingType',0,24,226,4,16,4,18
	.byte	'CanEventType',0
	.word	11302
	.byte	4,2,35,0,0,16
	.byte	'Can_EventHandlingType',0,24,229,4,3
	.word	11762
	.byte	16
	.byte	'Rte_TransformerErrorCode',0,25,130,1,15
	.word	148
	.byte	16
	.byte	'Rte_TransformerClass',0,25,131,1,15
	.word	148
	.byte	17,25,168,1,9,12,18
	.byte	'in',0
	.word	7602
	.byte	4,2,35,0,18
	.byte	'out',0
	.word	7602
	.byte	4,2,35,4,18
	.byte	'used',0
	.word	939
	.byte	2,2,35,8,18
	.byte	'lost_data',0
	.word	148
	.byte	1,2,35,10,0,16
	.byte	'Rte_QDynType',0,25,173,1,3
	.word	11908
	.byte	19,25,175,1,9,4,20
	.byte	'RTE_DRA',0,0,20
	.byte	'RTE_WOWP',0,1,20
	.byte	'RTE_TASK',0,2,20
	.byte	'RTE_ARE',0,3,20
	.byte	'RTE_EV',0,4,20
	.byte	'RTE_MSI',0,5,0,16
	.byte	'Rte_NotificationType',0,25,182,1,3
	.word	11995
	.byte	21,128,8
	.word	148
	.byte	22,255,7,0,16
	.byte	'Impl_NVM_DstPtrType_1024',0,26,50,15
	.word	12093
	.byte	16
	.byte	'CanIf_u32_impl',0,26,69,16
	.word	865
	.byte	16
	.byte	'CanIf_u16_impl',0,26,71,16
	.word	939
	.byte	16
	.byte	'CanIf_u8_impl',0,26,73,15
	.word	148
	.byte	16
	.byte	'CanIf_ControllerModeType_Enum_impl',0,26,88,15
	.word	148
	.byte	16
	.byte	'CanIf_PduModeType_Enum_impl',0,26,90,15
	.word	148
	.byte	17,26,92,9,2,18
	.byte	'DeviceMode',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'ChannelMode',0
	.word	148
	.byte	1,2,35,1,0,16
	.byte	'CanIf_ControllerStateType_struct_impl',0,26,95,3
	.word	12284
	.byte	16
	.byte	'CanIf_NotifStatusType_Enum_impl',0,26,100,15
	.word	148
	.byte	16
	.byte	'CanSM_boolean_Impl',0,26,120,15
	.word	148
	.byte	16
	.byte	'CanSM_u8_Impl',0,26,123,15
	.word	148
	.byte	16
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,26,128,1,15
	.word	148
	.byte	16
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,26,132,1,15
	.word	148
	.byte	16
	.byte	'CanSM_u16_Impl',0,26,136,1,16
	.word	939
	.byte	16
	.byte	'CanSM_TimerStateType_Enum_impl',0,26,138,1,15
	.word	148
	.byte	17,26,140,1,9,4,18
	.byte	'cntTick_u16',0
	.word	939
	.byte	2,2,35,0,18
	.byte	'stTimer',0
	.word	148
	.byte	1,2,35,2,0,16
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,26,143,1,3
	.word	12625
	.byte	16
	.byte	'Com_impl_u16',0,26,154,1,16
	.word	939
	.byte	16
	.byte	'Com_impl_u8',0,26,157,1,15
	.word	148
	.byte	16
	.byte	'ComM_uint32_Impl',0,26,173,1,16
	.word	865
	.byte	16
	.byte	'ComM_uint16_Impl',0,26,175,1,16
	.word	939
	.byte	16
	.byte	'ComM_uint8_Impl',0,26,177,1,15
	.word	148
	.byte	16
	.byte	'ComM_bool_Impl',0,26,179,1,15
	.word	148
	.byte	17,26,181,1,9,24,18
	.byte	'ChannelState_e',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'LightTimeoutCtr_u32',0
	.word	865
	.byte	4,2,35,4,18
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	939
	.byte	2,2,35,8,18
	.byte	'ChannelMode_u8',0
	.word	148
	.byte	1,2,35,10,18
	.byte	'BusSmMode_u8',0
	.word	148
	.byte	1,2,35,11,18
	.byte	'UserRequestCtr_u8',0
	.word	148
	.byte	1,2,35,12,18
	.byte	'PassiveRequestState_u8',0
	.word	148
	.byte	1,2,35,13,18
	.byte	'PncRequestCtr_u8',0
	.word	148
	.byte	1,2,35,14,18
	.byte	'InhibitionReqStatus_u8',0
	.word	148
	.byte	1,2,35,15,18
	.byte	'NmNetworkRequestStatus_b',0
	.word	148
	.byte	1,2,35,16,18
	.byte	'DiagnosticRequestState_b',0
	.word	148
	.byte	1,2,35,17,18
	.byte	'CommunicationAllowed_b',0
	.word	148
	.byte	1,2,35,18,18
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,19,18
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,20,18
	.byte	'NmNetworkModeStatus_b',0
	.word	148
	.byte	1,2,35,21,0,16
	.byte	'ComM_ChannelStruct_Impl',0,26,197,1,3
	.word	12857
	.byte	17,26,206,1,9,10,18
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	939
	.byte	2,2,35,0,18
	.byte	'LimitToNoComCtr_u16',0
	.word	939
	.byte	2,2,35,2,18
	.byte	'RequestedUserMode_t',0
	.word	148
	.byte	1,2,35,4,18
	.byte	'IndicatedUserMode_t',0
	.word	148
	.byte	1,2,35,5,18
	.byte	'numChannelsInFullCom_u8',0
	.word	148
	.byte	1,2,35,6,18
	.byte	'numChannelsInSilentCom_u8',0
	.word	148
	.byte	1,2,35,7,18
	.byte	'numChannelsInNoCom_u8',0
	.word	148
	.byte	1,2,35,8,0,16
	.byte	'ComM_UserStruct_Impl',0,26,214,1,3
	.word	13361
	.byte	16
	.byte	'Dcm_IOOperationResponseType',0,26,252,1,15
	.word	148
	.byte	16
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	26,138,2,15
	.word	148
	.byte	16
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,26,146,2,15
	.word	148
	.byte	16
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,26,150,2,15
	.word	148
	.byte	16
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,26,154,2,15
	.word	148
	.byte	16
	.byte	'Dem_DTCFormatType',0,26,160,2,15
	.word	148
	.byte	16
	.byte	'Dem_DTCOriginType',0,26,162,2,15
	.word	148
	.byte	16
	.byte	'Dem_EventIdType',0,26,168,2,16
	.word	939
	.byte	16
	.byte	'Dem_EventStatusType',0,26,170,2,15
	.word	148
	.byte	16
	.byte	'Dem_InitMonitorReasonType',0,26,176,2,15
	.word	148
	.byte	16
	.byte	'Dem_OperationCycleIdType',0,26,179,2,15
	.word	148
	.byte	16
	.byte	'Dem_UdsStatusByteType',0,26,185,2,15
	.word	148
	.byte	16
	.byte	'NvM_BlockIdType',0,26,215,2,16
	.word	939
	.byte	16
	.byte	'NvM_RequestResultType',0,26,225,2,15
	.word	148
	.byte	16
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,26,243,3,34
	.word	12104
	.byte	21,128,8
	.word	148
	.byte	22,255,7,0,16
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,26,246,3,34
	.word	12104
	.byte	16
	.byte	'Dem_DTCGroupIdType',0,27,49,15
	.word	148
	.byte	16
	.byte	'Dem_DtcIdType',0,27,50,16
	.word	939
	.byte	16
	.byte	'Dem_DtcCodeType',0,27,55,16
	.word	865
	.byte	16
	.byte	'Dem_boolean_least',0,27,60,17
	.word	148
	.byte	16
	.byte	'Dem_EventCategoryType',0,27,62,15
	.word	148
	.byte	16
	.byte	'Dem_DTCSeverityType',0,27,217,1,15
	.word	148
	.byte	16
	.byte	'Dem_DebugDataType',0,27,131,3,16
	.word	865
	.byte	16
	.byte	'Dem_DTCKindType',0,27,145,3,16
	.word	148
	.byte	16
	.byte	'Dem_TriggerType',0,27,167,3,15
	.word	148
	.byte	16
	.byte	'rba_BswSrv_uint64',0,2,66,28
	.word	6237
	.byte	16
	.byte	'Dem_EventIdIterator',0,4,27,22
	.word	6294
	.byte	16
	.byte	'Dem_DtcIdIterator',0,4,197,1,22
	.word	6294
	.byte	16
	.byte	'Dem_DtcGroupIdIterator',0,4,230,1,21
	.word	6294
	.byte	9
	.word	939
	.byte	3
	.word	14791
	.byte	17,4,171,2,9,8,18
	.byte	'it',0
	.word	14796
	.byte	4,2,35,0,18
	.byte	'end',0
	.word	14796
	.byte	4,2,35,4,0,16
	.byte	'Dem_EventIdListIterator',0,4,174,2,3
	.word	14801
	.byte	17,4,213,2,9,4,18
	.byte	'it',0
	.word	939
	.byte	2,2,35,0,18
	.byte	'end',0
	.word	939
	.byte	2,2,35,2,0,16
	.byte	'Dem_DtcIdListIterator',0,4,216,2,3
	.word	14866
	.byte	16
	.byte	'Dem_EnCoList',0,28,31,15
	.word	148
	.byte	16
	.byte	'Dem_OperationCycleList',0,29,23,15
	.word	148
	.byte	16
	.byte	'Dem_EvtStateType',0,30,151,1,15
	.word	148
	.byte	19,31,31,9,4,20
	.byte	'MEMIF_JOB_OK',0,0,20
	.byte	'MEMIF_JOB_FAILED',0,1,20
	.byte	'MEMIF_JOB_PENDING',0,2,20
	.byte	'MEMIF_JOB_CANCELED',0,3,20
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,20
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,16
	.byte	'MemIf_JobResultType',0,31,39,2
	.word	15007
	.byte	19,32,49,9,4,20
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,20
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,20
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,20
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,20
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,20
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,20
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,16
	.byte	'NvM_Prv_Activities_ten',0,32,58,3
	.word	15165
	.byte	19,32,104,9,4,20
	.byte	'NvM_Prv_idJob_Idle_e',0,0,20
	.byte	'NvM_Prv_idJob_Read_e',0,1,20
	.byte	'NvM_Prv_idJob_Write_e',0,2,20
	.byte	'NvM_Prv_idJob_Erase_e',0,3,20
	.byte	'NvM_Prv_idJob_Restore_e',0,4,20
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,20
	.byte	'NvM_Prv_idJob_Validate_e',0,6,20
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,20
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,20
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,20
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,20
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,20
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,20
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,16
	.byte	'NvM_Prv_idJob_ten',0,32,115,3
	.word	15406
	.byte	16
	.byte	'NvM_Prv_ServiceBit_tuo',0,32,168,1,16
	.word	939
	.byte	16
	.byte	'NvM_Prv_idService_tuo',0,32,173,1,15
	.word	148
	.byte	16
	.byte	'NvM_Prv_idQueue_tuo',0,32,206,1,15
	.word	148
	.byte	17,32,210,1,9,12,18
	.byte	'idService_uo',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'idBlock_uo',0
	.word	939
	.byte	2,2,35,2,18
	.byte	'ServiceBit_uo',0
	.word	939
	.byte	2,2,35,4,18
	.byte	'BlockData_pv',0
	.word	7602
	.byte	4,2,35,8,0,16
	.byte	'NvM_Prv_QueueEntry_tst',0,32,225,1,3
	.word	15963
	.byte	17,32,227,1,9,20,18
	.byte	'idJob_en',0
	.word	15406
	.byte	4,2,35,0,18
	.byte	'idBlock_uo',0
	.word	939
	.byte	2,2,35,4,18
	.byte	'RamBlock_pu8',0
	.word	165
	.byte	4,2,35,8,18
	.byte	'idxDataset_u8',0
	.word	148
	.byte	1,2,35,12,18
	.byte	'Result_en',0
	.word	15007
	.byte	4,2,35,16,0,16
	.byte	'NvM_Prv_JobData_tst',0,32,240,1,3
	.word	16089
	.byte	16
	.byte	'Dem_EvMemOccurrenceCounterType',0,33,90,21
	.word	148
	.byte	16
	.byte	'Dem_EvMemAgingCounterType',0,33,99,21
	.word	148
	.byte	17,33,133,1,3,4,18
	.byte	'Status',0
	.word	939
	.byte	2,2,35,0,18
	.byte	'EventId',0
	.word	939
	.byte	2,2,35,2,0,28,33,131,1,9,4,18
	.byte	'Data',0
	.word	16300
	.byte	4,2,35,0,0,16
	.byte	'Dem_EvMemHdrType',0,33,141,1,4
	.word	16340
	.byte	21,7
	.word	148
	.byte	22,6,0,17,33,144,1,9,20,18
	.byte	'Hdr',0
	.word	16340
	.byte	4,2,35,0,18
	.byte	'Data',0
	.word	16387
	.byte	7,2,35,4,18
	.byte	'FailureCounter',0
	.word	148
	.byte	1,2,35,11,18
	.byte	'FreezeFrameCounter',0
	.word	148
	.byte	1,2,35,12,18
	.byte	'AgingCounter',0
	.word	148
	.byte	1,2,35,13,18
	.byte	'OccurrenceCounter',0
	.word	148
	.byte	1,2,35,14,18
	.byte	'Trigger',0
	.word	148
	.byte	1,2,35,15,18
	.byte	'TimeId',0
	.word	865
	.byte	4,2,35,16,0,16
	.byte	'Dem_EvMemEventMemoryType',0,33,213,1,4
	.word	16396
	.byte	21,5
	.word	148
	.byte	22,4,0,21,10
	.word	939
	.byte	22,4,0,17,34,9,9,18,18
	.byte	'OperationCycleStates',0
	.word	148
	.byte	1,2,35,0,18
	.byte	'OperationCycleQualified',0
	.word	148
	.byte	1,2,35,1,18
	.byte	'Overflow',0
	.word	16598
	.byte	5,2,35,2,18
	.byte	'DtcIdsByOccurrenceTime',0
	.word	16607
	.byte	10,2,35,8,0,16
	.byte	'Dem_GenericNvDataType',0,34,24,4
	.word	16616
	.byte	16
	.byte	'Dem_NvmBlockIdType',0,35,14,34
	.word	148
	.byte	28,35,16,9,20,18
	.byte	'evMemData',0
	.word	16396
	.byte	20,2,35,0,18
	.byte	'genericNvData',0
	.word	16616
	.byte	18,2,35,0,0,16
	.byte	'Dem_NvMStorageBufferData',0,35,37,3
	.word	16792
	.byte	16
	.byte	'Dem_NvmBlockStatusType',0,35,59,15
	.word	148
	.byte	16
	.byte	'Dem_NvmResultType',0,35,78,31
	.word	148
	.byte	3
	.word	148
	.byte	32
	.word	148
	.byte	1,1,27
	.word	16930
	.byte	0,3
	.word	16935
	.byte	16
	.byte	'Dem_EvtClearAllowedFncType',0,12,12,26
	.word	16948
	.byte	32
	.word	148
	.byte	1,1,27
	.word	148
	.byte	0,3
	.word	16988
	.byte	16
	.byte	'Dem_InitMForEAllowedFncType',0,13,38,27
	.word	17001
	.byte	28,36,37,9,4,18
	.byte	'EnforceAlignment',0
	.word	865
	.byte	4,2,35,0,18
	.byte	'Buffer',0
	.word	11302
	.byte	4,2,35,0,0,16
	.byte	'Dem_EvBuffEnvDataAlignedType',0,36,47,3
	.word	17042
	.byte	17,36,49,9,16,18
	.byte	'envData',0
	.word	17042
	.byte	4,2,35,0,18
	.byte	'eventType',0
	.word	148
	.byte	1,2,35,4,18
	.byte	'eventId',0
	.word	939
	.byte	2,2,35,6,18
	.byte	'debug0',0
	.word	865
	.byte	4,2,35,8,18
	.byte	'debug1',0
	.word	865
	.byte	4,2,35,12,0,16
	.byte	'Dem_EvBuffEvent',0,36,75,2
	.word	17127
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,11,1,0,0,8,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,38,0,73,19,0,0,10,46,1,49,19,0,0,11,5,0,49,19,0
	.byte	0,12,29,1,49,19,0,0,13,11,0,49,19,0,0,14,11,1,49,19,0,0,15,21,0,54,15,0,0,16,22,0,3,8,58,15,59,15,57,15
	.byte	73,19,0,0,17,19,1,58,15,59,15,57,15,11,15,0,0,18,13,0,3,8,73,19,11,15,56,9,0,0,19,4,1,58,15,59,15,57,15
	.byte	11,15,0,0,20,40,0,3,8,28,13,0,0,21,1,1,11,15,73,19,0,0,22,33,0,47,15,0,0,23,21,0,54,15,39,12,0,0,24,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,25,59,0,3,8,0,0,26,21,1,54,15,39,12,0,0,27,5,0,73,19,0,0,28,23,1,58
	.byte	15,59,15,57,15,11,15,0,0,29,4,1,3,8,58,15,59,15,57,15,11,15,0,0,30,21,0,73,19,54,15,39,12,0,0,31,53,0
	.byte	73,19,0,0,32,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_BitArray.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_ISO14229Byte.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\enco\\Dem_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_ByteOrderUtils.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_EventStatus.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\evdep\\Dem_EventRecheck.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_StorageCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_NodeId.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\api\\Dem_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_GenericNvData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evbuff\\Dem_EvBuffEvent.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     1  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     2  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     3  #include "Dem_EventRecheck.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     4  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     5  #include "Dem_Events.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     6  #include "Dem_EventStatus.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     7  #include "Dem_EvBuffEvent.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     8  #include "Dem_EvBuff.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	     9  #include "Dem_Lock.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    10  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    11  #include "Dem_Dependencies.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    12  #include "Dem_Helpers.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    13  #include "Dem_Obd.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    14  #include "Dem_Cfg_Events_DataStructures.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    15  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    16  #if (DEM_CFG_DEPENDENCY == DEM_CFG_DEPENDENCY_ON)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    17  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    18  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    19  #define DEM_START_SEC_RAM_INIT
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    20  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    21  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    22  #define DEM_RECHECK_DECREASE_VALUE_FOR_RECHECKED_EVENT  5
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    23  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    24  static boolean Dem_RecheckRecheckNodeNotRecoverableRequested = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    25  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    26  #define DEM_STOP_SEC_RAM_INIT
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    27  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    28  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    29  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    30  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    31  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    32  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    33  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    34  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    35  void Dem_DependencyInit(void)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    36  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    37  	Dem_EventIdListIterator2 evtIt;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    38  	Dem_NodeIdIterator nodeIt;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    39  	Dem_ComponentIdType currentNode;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    40      Dem_boolean_least setFailed;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    41  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    42  #if DEM_CFG_DEPENDENCY_PENDING_ON
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    43      Dem_boolean_least setPending;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    44  #endif
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    45  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    46  	/* set Failed state of all nodes according to failed state of events restored from NVM */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    47  	for (Dem_NodeIdIteratorNew(&nodeIt); Dem_NodeIdIteratorIsValid(&nodeIt); Dem_NodeIdIteratorNext(&nodeIt))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    48  	{
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    49  		currentNode = Dem_NodeIdIteratorCurrent(&nodeIt);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    50  		setFailed = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    51  #if DEM_CFG_DEPENDENCY_PENDING_ON
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    52          setPending = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    53  #endif
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    54  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    55  		DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    56  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    57  		for (Dem_EventIdListIterator2NewFromNodeId (&evtIt, currentNode);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    58  				Dem_EventIdListIterator2IsValid(&evtIt);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    59  				Dem_EventIdListIterator2Next (&evtIt))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    60  		{
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    61  			if ( Dem_EvtSt_GetTestFailed(Dem_EventIdListIterator2Current(&evtIt)) && (!setFailed))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    62  			{
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    63  			    Dem_SetNodeStatus (currentNode, DEM_NODESTATUS_FAILED);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    64                  setFailed = TRUE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    65  				/* explicitly requested to have the same behavior on startup and on failed-report according callback */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    66  				Dem_NodeCallFailedCallback(currentNode, TRUE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    67  			}
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    68  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    69  #if DEM_CFG_DEPENDENCY_PENDING_ON
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    70              if (Dem_EvtSt_GetPending(Dem_EventIdListIterator2Current(&evtIt)) && (!setPending))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    71              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    72                  (void)Dem_SetNodeStatus (currentNode, DEM_NODESTATUS_PENDING);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    73                  setPending = TRUE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    74              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    75  #endif
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    76  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    77              if( setFailed
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    78  #if DEM_CFG_DEPENDENCY_PENDING_ON
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    79                      && setPending
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    80  #endif
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    81              )
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    82              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    83                  break; /* if at lest one event is failed (and pending), the node is failed (and pending) and no further event of this
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    84                              node needs to be checked */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    85              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    86          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    87  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    88  		DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    89  	}
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    90  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    91  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    92  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    93  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    94  /********************************************************************************************************
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    95   * Recheck of the node recoverable information
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    96   */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    97  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    98  void Dem_RecheckNodeNotRecoverableRequest(void)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	    99  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   100      Dem_RecheckRecheckNodeNotRecoverableRequested = TRUE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   101  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   102  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   103  static void Dem_RecheckNodeNotRecoverable(void)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   104  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   105      /** perform a recheck of nodeNotRecoverable information after a change of operationcycle,
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   106       * as events may become recoverable due to the OpCycle change
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   107       */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   108  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   109      Dem_NodeIdIterator nodeIt;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   110      Dem_ComponentIdType node;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   111  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   112      if (Dem_RecheckRecheckNodeNotRecoverableRequested)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   113      {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   114          for (Dem_NodeIdIteratorNew(&nodeIt); Dem_NodeIdIteratorIsValid(&nodeIt); Dem_NodeIdIteratorNext(&nodeIt))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   115          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   116              node = Dem_NodeIdIteratorCurrent(&nodeIt);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   117              if (Dem_NodeIsFailedNotRecoverableItself(node))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   118              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   119                  DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   120                  Dem_Dependencies_ResetNodeFailedNotRecoverable(node);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   121                  DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   122              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   123          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   124  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   125          Dem_RecheckRecheckNodeNotRecoverableRequested = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   126      }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   127  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   128  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   129  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   130  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   131  /********************************************************************************************************
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   132   * Recheck of the event is causal information
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   133   */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   134  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   135  /* The restart of cyclic check (Dem_DependencyRestartCyclicCheck) is no longer required, as the function
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   136   * Dem_Dependencies_CheckEventIsCausal always checks the status of the ancestors and all events with higher
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   137   * priority at same node. Therefore a reenabling of storage condition will properly be considered
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   138   */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   139  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   140  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   141  static void Dem_DependencyRecheckCausalityOfEvent (Dem_EventIdType EventId, Dem_ComponentIdType NodeId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   142  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   143      Dem_EvBuffEventType eventType = C_EVENTTYPE_SET_WAITINGFORMONITORING;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   144      Dem_boolean_least triggerEvBuffInsert = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   145      Dem_boolean_least triggerCalcNodeHasFilteredStorage = FALSE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   146      Dem_boolean_least newIsCausal, areAllFulfilled;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   147  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   148      DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   149  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   150      if (    Dem_EvtSt_GetTestFailed(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   151              && Dem_NodeIsAvailable (NodeId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   152              && !Dem_EvtIsSuppressed(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   153         )
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   154      {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   155          /* SEQUENTIAL and STORAGEISFILTERED */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   156          if (!Dem_EvtIsCausal(EventId))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   157          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   158              newIsCausal = Dem_Dependencies_CheckEventIsCausal(EventId, NodeId);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   159              areAllFulfilled = Dem_StoCoAreAllFulfilled(Dem_EvtParam_GetStorageConditions(EventId));
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   160  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   161  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   162              /* STORAGEISFILTERED -> ISCAUSAL   and  SEQUENTIAL -> ISCAUSAL */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   163              if (newIsCausal)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   164              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   165                  if (areAllFulfilled)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   166                  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   167                      Dem_EvtSetCausal (EventId, TRUE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   168                      Dem_EvtSetIsRecheckedAndWaitingForMonResult(EventId, TRUE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   169                      Dem_EvtSetStorageFiltered (EventId, FALSE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   170  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   171                      Dem_EvtSetInitMonitoring (EventId, DEM_INIT_MONITOR_STORAGE_REENABLED);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   172  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   173                      Dem_Dependencies_ResetNodeFailedFiltered(NodeId);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   174                      triggerEvBuffInsert = TRUE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   175                  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   176                  else
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   177                  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   178                      Dem_StoCoRecheckReplacementStorage(Dem_EvtParam_GetStorageConditions(EventId));
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   179                  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   180              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   181  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   182              /* SEQUENTIAL -> STORAGEISFILTERED */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   183              if (!Dem_EvtIsStorageFiltered(EventId) && newIsCausal && !areAllFulfilled)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   184              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   185                  Dem_StoCoSetHasFilteredEvent(Dem_EvtParam_GetStorageConditions(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   186                              DEM_DEBUGDATA_PARAM((Dem_DebugDataType)EventId,0));
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   187                  triggerCalcNodeHasFilteredStorage = TRUE;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   188              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   189          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   190  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   191          /* INVALID_STATE: Causal & StorageFiltered shall not occure, but must be rechecked! */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   192          if (   Dem_EvtIsCausal(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   193              && Dem_EvtIsStorageFiltered(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   194          )
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   195          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   196              if (Dem_StoCoAreAllFulfilled(Dem_EvtParam_GetStorageConditions(EventId)))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   197              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   198                  Dem_EvtSetStorageFiltered (EventId, FALSE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   199              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   200              else
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   201              {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   202                  Dem_EvtSetCausal (EventId, FALSE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   203                  Dem_StoCoSetHasFilteredEvent(Dem_EvtParam_GetStorageConditions(EventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   204                                              DEM_DEBUGDATA_PARAM((Dem_DebugDataType)EventId,0));
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   205              }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   206          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   207      }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   208  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   209      DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   210  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   211      if (triggerEvBuffInsert)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   212      {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   213          if (!Dem_EvBuffInsert (eventType, EventId DEM_DEBUGDATA_PARAM((Dem_DebugDataType)0xffffffffu, (Dem_DebugDataType)0xffffffffu)))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   214          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   215              DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   216              Dem_EvtSetCausal (EventId, FALSE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   217              Dem_EvtSetIsRecheckedAndWaitingForMonResult(EventId, FALSE);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   218              DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   219          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   220     }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   221  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   222  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   223  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   224  static void Dem_Dependency_RecheckCausalityMain (void)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   225  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   226      /* check all EventIds; whether they were not stored due to an evbuffer overflow */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   227  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   228      static Dem_EventIdIterator Dem_RecheckEventIterator = DEM_EVENTIDITERATORNEW;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   229      Dem_EventIdType eventId;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   230      sint16_least eventsCheckedCounter = DEM_MIN(DEM_CFG_FAILUREDEPENDENCY_RECHECK_LIMIT, DEM_EVENTID_COUNT); // search configured number, but at maximum number of events
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   231  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   232      while (eventsCheckedCounter > 0)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   233      {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   234          eventsCheckedCounter--;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   235          eventId = Dem_EventIdIteratorCurrent(&Dem_RecheckEventIterator);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   236  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   237          /* if event is failed and either filtered or not causal  then perform recheck */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   238          if (   Dem_EvtSt_GetTestFailed(eventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   239              && (   !Dem_EvtIsCausal(eventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   240                  || Dem_EvtIsStorageFiltered(eventId)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   241                 )
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   242             )
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   243          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   244              /* recheck causality, insert into SFB and set GCT */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   245              Dem_DependencyRecheckCausalityOfEvent(eventId, Dem_NodeIdFromEventId(eventId));
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   246  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   247              /* the actual check is more time consuming so additionally dec the counter (load-balancing of mainfunction) */
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   248              eventsCheckedCounter -= DEM_RECHECK_DECREASE_VALUE_FOR_RECHECKED_EVENT  ;
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   249          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   250  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   251          Dem_EventIdIteratorNext(&Dem_RecheckEventIterator);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   252          if (!Dem_EventIdIteratorIsValid(&Dem_RecheckEventIterator))
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   253          {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   254              Dem_EventIdIteratorNew(&Dem_RecheckEventIterator);
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   255          }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   256      }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   257  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   258  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   259  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   260  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   261  void Dem_DependencyMainFunction(void)
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   262  {
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   263      Dem_Dependency_RecheckCausalityMain ();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   264      Dem_RecheckNodeNotRecoverable();
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   265  }
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   266  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   267  #define DEM_STOP_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   268  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   269  
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   270  #endif
; BSW\src\BSW\Gen\Dem\src\evdep\Dem_EventRecheck.c	   271  

	; Module end
