	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16184a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dem\\src\\Dem_OperationCycle.src BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c'

	
$TC16X
	
	.sdecl	'.text.Dem_OperationCycle.Dem_IsOperationCycleIdValid',code,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.text.Dem_OperationCycle.Dem_IsOperationCycleIdValid'
	.align	2
	

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     1  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     2  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     3  #include "Dem.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     4  #include "Rte_Dem.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     5  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     6  #include "Dem_OperationCycle.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     7  #include "Dem_Events.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     8  #include "Dem_Main.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	     9  #include "Dem_Lock.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    10  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    11  #include "Dem_EventStatus.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    12  #include "Dem_ISO14229Byte.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    13  #include "Dem_EvMem.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    14  #include "Dem_EventRecheck.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    15  #include "Dem_Obd.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    16  #include "Dem_GenericNvData.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    17  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    18  #include "Dem_Bfm.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    19  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    20  #define DEM_START_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    21  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    22  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    23  Dem_OperationCycleList Dem_OperationCycleStates;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    24  static Dem_OperationCycleList Dem_OperationCycleQualified;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    25  static Dem_OperationCycleList Dem_QualifyCycleCollectedTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    26  static Dem_OperationCycleList Dem_StartOperationCycleCollectedTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    27  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    28  #define DEM_STOP_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    29  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    30  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    31  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    32  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    33  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    34  static boolean Dem_IsOperationCycleIdValid(Dem_OperationCycleIdType OperationCycleId)
; Function Dem_IsOperationCycleIdValid
.L51:
Dem_IsOperationCycleIdValid:	.type	func

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    35  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    36      return (OperationCycleId < DEM_OPERATIONCYCLE_COUNT);
	eq	d2,d4,#0
.L405:
	j	.L2

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    37  }
.L2:
	ret
.L250:
	
__Dem_IsOperationCycleIdValid_function_end:
	.size	Dem_IsOperationCycleIdValid,__Dem_IsOperationCycleIdValid_function_end-Dem_IsOperationCycleIdValid
.L109:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_GetCycleQualified',code,cluster('Dem_GetCycleQualified')
	.sect	'.text.Dem_OperationCycle.Dem_GetCycleQualified'
	.align	2
	
	.global	Dem_GetCycleQualified

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    38  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    39  Std_ReturnType Dem_GetCycleQualified(Dem_OperationCycleIdType OperationCycleId, boolean* isQualified)
; Function Dem_GetCycleQualified
.L53:
Dem_GetCycleQualified:	.type	func
	mov	d15,d4
.L253:
	mov.aa	a15,a4
.L255:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    40  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    41      Std_ReturnType retVal = E_NOT_OK;
	mov	d8,#1
.L256:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    42  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    43      if (!Dem_IsOperationCycleIdValid(OperationCycleId))
	mov	d4,d15
	call	Dem_IsOperationCycleIdValid
.L252:
	jne	d2,#0,.L3
.L311:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    44      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    45          DEM_DET(DEM_DET_APIID_GETCYCLEQUALIFIED, DEM_E_WRONG_CONFIGURATION);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#171
	mov	d7,#16
	call	Det_ReportError
.L312:
	j	.L4
.L3:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    46      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    47      else
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    48      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    49          *isQualified = DEM_OPERATIONCYCLE_ISBITSET(Dem_OperationCycleQualified, OperationCycleId);
	movh.a	a2,#@his(Dem_OperationCycleQualified)
	lea	a2,[a2]@los(Dem_OperationCycleQualified)
	ld.bu	d0,[a2]
.L141:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    40  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    41  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    42  LOCAL_INLINE void rba_DiagLib_Bit8ClearBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    43  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    44      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    45      *buffer &= ((uint8) (~((uint8) (bit2shift << bit_position))));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    46  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    47  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    48  LOCAL_INLINE void rba_DiagLib_Bit8OverwriteBit(uint8 *buffer, uint8 bit_position, boolean will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    49  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    50      if (will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    51      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    52          rba_DiagLib_Bit8SetBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    53      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    54      else
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    55      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    56          rba_DiagLib_Bit8ClearBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    57      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    58  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    59  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    60  LOCAL_INLINE uint8 rba_DiagLib_Bit8GetSingleBit(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    61  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);
	rsub	d15,#0
	sha	d0,d0,d15
.L313:
	and	d15,d0,#1
.L254:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);      (inlined)
	j	.L5

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }      (inlined)
.L5:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    64  LOCAL_INLINE boolean rba_DiagLib_Bit8IsBitSet(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    65  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);
	ne	d15,d15,#0
.L314:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);      (inlined)
	j	.L6

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    67  }      (inlined)
.L6:
	st.b	[a15],d15
.L315:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    50          retVal = E_OK;
	mov	d8,#0
.L4:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    51      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    52  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    53      return retVal;
	mov	d2,d8
.L257:
	j	.L7

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    54  }
.L7:
	ret
.L136:
	
__Dem_GetCycleQualified_function_end:
	.size	Dem_GetCycleQualified,__Dem_GetCycleQualified_function_end-Dem_GetCycleQualified
.L79:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_SetCycleQualified',code,cluster('Dem_SetCycleQualified')
	.sect	'.text.Dem_OperationCycle.Dem_SetCycleQualified'
	.align	2
	
	.global	Dem_SetCycleQualified

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    55  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    56  Std_ReturnType Dem_SetCycleQualified(Dem_OperationCycleIdType OperationCycleId)
; Function Dem_SetCycleQualified
.L55:
Dem_SetCycleQualified:	.type	func
	mov	d15,d4
.L259:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    57  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    58      Std_ReturnType retVal = E_NOT_OK;
	mov	d8,#1
.L260:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    59  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    60      if (!Dem_IsOperationCycleIdValid(OperationCycleId))
	mov	d4,d15
	call	Dem_IsOperationCycleIdValid
.L258:
	jne	d2,#0,.L8
.L361:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    61      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    62          DEM_DET(DEM_DET_APIID_SETCYCLEQUALIFIED, DEM_E_WRONG_CONFIGURATION);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#86
	mov	d7,#16
	call	Det_ReportError
.L362:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    63      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    64      else
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    65      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    66          DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    67          DEM_OPERATIONCYCLE_SETBIT(&Dem_OperationCycleQualified, OperationCycleId);
	movh.a	a15,#@his(Dem_OperationCycleQualified)
	lea	a15,[a15]@los(Dem_OperationCycleQualified)
.L218:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
	mov	d0,#1
.L261:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
	ld.bu	d1,[a15]
.L363:
	sha	d0,d0,d15
.L262:
	or	d1,d0
	st.b	[a15],d1
.L219:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    68          DEM_OPERATIONCYCLE_SETBIT(&Dem_QualifyCycleCollectedTriggers, OperationCycleId);
	movh.a	a15,#@his(Dem_QualifyCycleCollectedTriggers)
	lea	a15,[a15]@los(Dem_QualifyCycleCollectedTriggers)
.L223:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
	mov	d0,#1
.L263:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
	ld.bu	d1,[a15]
.L364:
	sha	d0,d0,d15
.L264:
	or	d1,d0
	st.b	[a15],d1
.L224:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    69  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    70  #if (DEM_CFG_OBD != DEM_CFG_OBD_OFF)
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    71          rba_DemObdBasic_SetCycleQualified(OperationCycleId);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    72  #endif
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    73          DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    74  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    75          retVal = E_OK;
	mov	d8,#0
.L9:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    76      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    77  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    78      return retVal;
	mov	d2,d8
.L265:
	j	.L10

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    79  }
.L10:
	ret
.L215:
	
__Dem_SetCycleQualified_function_end:
	.size	Dem_SetCycleQualified,__Dem_SetCycleQualified_function_end-Dem_SetCycleQualified
.L89:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_SetOperationCycleState',code,cluster('Dem_SetOperationCycleState')
	.sect	'.text.Dem_OperationCycle.Dem_SetOperationCycleState'
	.align	2
	
	.global	Dem_SetOperationCycleState

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    80  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    81  Std_ReturnType Dem_SetOperationCycleState(Dem_OperationCycleIdType OperationCycleId,
; Function Dem_SetOperationCycleState
.L57:
Dem_SetOperationCycleState:	.type	func
	sub.a	a10,#8
.L266:
	mov	d9,d4
.L268:
	mov	d15,d5
.L269:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    82          Dem_OperationCycleStateType CycleState)
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    83  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    84      Std_ReturnType retVal = E_OK;
	mov	d8,#0
.L271:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    85  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    86      if (!Dem_IsOperationCycleIdValid(OperationCycleId))
	mov	d4,d9
	call	Dem_IsOperationCycleIdValid
.L267:
	jne	d2,#0,.L11
.L320:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    87      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    88          DEM_DET(DEM_DET_APIID_DEM_SETOPERATIONCYCLESTATE, DEM_E_WRONG_CONFIGURATION);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#8
	mov	d7,#16
	call	Det_ReportError

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    89          DEM_ASSERT_ISNOTLOCKED();
.L12:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    90          return E_NOT_OK;
	mov	d2,#1
.L321:
	j	.L13
.L11:

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    39  	DEM_ASSERT_RANGECHECK(indx < 1);      (inlined)
.L14:

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     1  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     2  /********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     3  /*                                                                                                                  */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     4  /* TOOL-GENERATED SOURCECODE, DO NOT CHANGE                                                                         */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     5  /*                                                                                                                  */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     6  /********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     7  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     8  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     9  #ifndef DEM_CFG_OPERATIONCYCLE_DATASTRUCTURES_H
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    10  #define DEM_CFG_OPERATIONCYCLE_DATASTRUCTURES_H
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    11  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    12  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    13  #include "Dem_Lib.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    14  #include "Dem_Cfg_OperationCycle.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    15  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    16  typedef struct
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    17  {
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    18  	boolean IsAllowedToBeStartedDirectly;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    19  	Dem_OperationCycleList DependentCycleMask;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    20  } Dem_Cfg_OperationCycleType;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    21  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    22  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    23  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    24  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    25  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    26  extern const Dem_Cfg_OperationCycleType Dem_Cfg_OperationCycle[1];
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    27  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    28  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    29  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    30  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    31  LOCAL_INLINE Dem_OperationCycleList Dem_Cfg_OperationCycle_GetDependentCycleMask(Dem_OperationCycleIdType indx)
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    32  {
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    33  	DEM_ASSERT_RANGECHECK(indx < 1);
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    34  	return Dem_Cfg_OperationCycle[indx].DependentCycleMask;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    35  }
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    36  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    37  LOCAL_INLINE boolean Dem_Cfg_OperationCycle_GetIsAllowedToBeStartedDirectly(Dem_OperationCycleIdType indx)
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    38  {
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    39  	DEM_ASSERT_RANGECHECK(indx < 1);
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    40  	return Dem_Cfg_OperationCycle[indx].IsAllowedToBeStartedDirectly;
	movh.a	a2,#@his(Dem_Cfg_OperationCycle)
	lea	a2,[a2]@los(Dem_Cfg_OperationCycle)
.L322:
	addsc.a	a15,a2,d9,#1
.L323:
	ld.bu	d0,[a15]
.L324:

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    40  	return Dem_Cfg_OperationCycle[indx].IsAllowedToBeStartedDirectly;      (inlined)
	j	.L15

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    41  }      (inlined)
.L15:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    91      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    92  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    93      /* A dependent cycle is only allowed to be started, if it is configured as "" */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    94      if (!Dem_Cfg_OperationCycle_GetIsAllowedToBeStartedDirectly(OperationCycleId))
	jne	d0,#0,.L16

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    95      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    96          //DEM_DET(DEM_DET_APIID_DEM_SETOPERATIONCYCLESTATE, DEM_E_WRONG_CONFIGURATION);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    97          DEM_ASSERT_ISNOTLOCKED();
.L17:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    98          return E_NOT_OK;
	mov	d2,#1
.L325:
	j	.L18
.L16:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	    99      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   100  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   101      DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   102  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   103      if (CycleState == DEM_CYCLE_STATE_START)
	jne	d15,#0,.L19
.L154:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   104      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   105          Dem_OperationCycleList bitMaskOld = 0;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   106          Dem_OperationCycleList bitMask = 0;
	mov	d0,#0
.L326:
	st.b	[a10],d0
.L327:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   107          Dem_OperationCycleList bitMaskDependent = 0;
	mov	d15,#0
.L270:
	st.b	[a10]1,d15
.L328:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   108          Dem_OperationCycleIdType cycleId;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   109  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   110          DEM_OPERATIONCYCLE_SETBIT(&bitMask, OperationCycleId);
	lea	a15,[a10]0
.L161:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
	mov	d0,#1
.L272:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
	ld.bu	d1,[a15]
.L329:
	sha	d0,d0,d9
.L273:
	or	d1,d0
	st.b	[a15],d1
.L162:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   111  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   112          do
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   113          {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   114              /* Save current bitmask to see if any new dependent cycles were added */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   115              bitMaskOld = bitMask;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   116  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   117              for (cycleId = 0; cycleId < DEM_OPERATIONCYCLE_COUNT; cycleId++)
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   118              {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   119                  /* Either bitMaskOld or bitMask can be checked here.
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   120                   * But with bitMask we are maybe faster, since new cycles added could also be checked in the same iteration */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   121                  if (DEM_OPERATIONCYCLE_ISBITSET(bitMask, cycleId))
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   122                  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   123                      bitMaskDependent = Dem_Cfg_OperationCycle_GetDependentCycleMask(cycleId);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   124  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   125                      /* Filter cycles, only which are qualified must be started */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   126                      DEM_OPERATIONCYCLE_MERGEBITMASK(&bitMaskDependent, Dem_OperationCycleQualified);
	movh.a	a4,#@his(Dem_OperationCycleQualified)
	lea	a4,[a4]@los(Dem_OperationCycleQualified)

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   127  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   128                      /* Add new bitmask to existing one */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   129                      DEM_OPERATIONCYCLE_SETBITMASK(&bitMask, bitMaskDependent);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   130                  }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   131              }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   132  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   133          } while (bitMaskOld != bitMask); /* Bitmask changed? */
.L20:
	ld.bu	d0,[a10]
.L274:
	mov	d1,#0
.L276:
	j	.L21
.L22:
	ld.bu	d15,[a10]
.L330:
	mov	d2,#0
.L169:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    40  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    41  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    42  LOCAL_INLINE void rba_DiagLib_Bit8ClearBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    43  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    44      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    45      *buffer &= ((uint8) (~((uint8) (bit2shift << bit_position))));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    46  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    47  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    48  LOCAL_INLINE void rba_DiagLib_Bit8OverwriteBit(uint8 *buffer, uint8 bit_position, boolean will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    49  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    50      if (will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    51      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    52          rba_DiagLib_Bit8SetBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    53      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    54      else
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    55      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    56          rba_DiagLib_Bit8ClearBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    57      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    58  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    59  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    60  LOCAL_INLINE uint8 rba_DiagLib_Bit8GetSingleBit(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    61  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);
	rsub	d2,#0
	sha	d15,d15,d2
.L331:
	and	d15,#1
.L332:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);      (inlined)
	j	.L23

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }      (inlined)
.L23:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    64  LOCAL_INLINE boolean rba_DiagLib_Bit8IsBitSet(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    65  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);
	ne	d15,d15,#0
.L333:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);      (inlined)
	j	.L24

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    67  }      (inlined)
.L24:
	jeq	d15,#0,.L25

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    33  	DEM_ASSERT_RANGECHECK(indx < 1);      (inlined)
.L26:

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     1  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     2  /********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     3  /*                                                                                                                  */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     4  /* TOOL-GENERATED SOURCECODE, DO NOT CHANGE                                                                         */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     5  /*                                                                                                                  */
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     6  /********************************************************************************************************************/
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     7  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     8  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	     9  #ifndef DEM_CFG_OPERATIONCYCLE_DATASTRUCTURES_H
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    10  #define DEM_CFG_OPERATIONCYCLE_DATASTRUCTURES_H
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    11  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    12  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    13  #include "Dem_Lib.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    14  #include "Dem_Cfg_OperationCycle.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    15  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    16  typedef struct
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    17  {
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    18  	boolean IsAllowedToBeStartedDirectly;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    19  	Dem_OperationCycleList DependentCycleMask;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    20  } Dem_Cfg_OperationCycleType;
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    21  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    22  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    23  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    24  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    25  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    26  extern const Dem_Cfg_OperationCycleType Dem_Cfg_OperationCycle[1];
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    27  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    28  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    29  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    30  
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    31  LOCAL_INLINE Dem_OperationCycleList Dem_Cfg_OperationCycle_GetDependentCycleMask(Dem_OperationCycleIdType indx)
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    32  {
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    33  	DEM_ASSERT_RANGECHECK(indx < 1);
; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    34  	return Dem_Cfg_OperationCycle[indx].DependentCycleMask;
	addsc.a	a15,a2,d1,#1
.L334:
	ld.bu	d15,[a15]1
.L335:

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    34  	return Dem_Cfg_OperationCycle[indx].DependentCycleMask;      (inlined)
	j	.L27

; .\BSW\src\BSW\Gen\Dem\Dem_Cfg_OperationCycle_DataStructures.h	    35  }      (inlined)
.L27:
	st.b	[a10]1,d15
.L336:
	lea	a15,[a10]1
.L337:
	ld.bu	d15,[a4]
.L179:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
	ld.bu	d2,[a15]
.L338:
	and	d2,d15
	st.b	[a15],d2
.L180:
	lea	a15,[a10]0
.L339:
	ld.bu	d15,[a10]1
.L187:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
	ld.bu	d2,[a15]
.L340:
	or	d2,d15
	st.b	[a15],d2
.L25:
	add	d1,#1
.L21:
	jeq	d1,#0,.L22
.L341:
	ld.bu	d15,[a10]
.L342:
	jne	d15,d0,.L20
.L343:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   134  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   135          /* Start all dependent qualified cycles */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   136          DEM_OPERATIONCYCLE_SETBITMASK(&Dem_OperationCycleStates, bitMask);
	movh.a	a15,#@his(Dem_OperationCycleStates)
	lea	a15,[a15]@los(Dem_OperationCycleStates)
.L344:
	ld.bu	d15,[a10]
.L193:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
	ld.bu	d0,[a15]
.L275:
	or	d0,d15
	st.b	[a15],d0
.L194:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   137          DEM_OPERATIONCYCLE_SETBITMASK(&Dem_StartOperationCycleCollectedTriggers, bitMask);
	movh.a	a15,#@his(Dem_StartOperationCycleCollectedTriggers)
	lea	a15,[a15]@los(Dem_StartOperationCycleCollectedTriggers)
.L345:
	ld.bu	d15,[a10]
.L195:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
	ld.bu	d0,[a15]
.L346:
	or	d0,d15
	st.b	[a15],d0
.L196:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   138  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   139          /* Reset qualified flag of these dependent cycles */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   140          DEM_OPERATIONCYCLE_CLEARBITMASK(&Dem_OperationCycleQualified, bitMask);
	ld.bu	d0,[a10]
.L198:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
	ld.bu	d15,[a4]
.L347:
	xor	d0,d0,#255
.L348:
	and	d15,d0
	st.b	[a4],d15
.L199:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   141          DEM_OPERATIONCYCLE_CLEARBITMASK(&Dem_QualifyCycleCollectedTriggers, bitMask);
	movh.a	a15,#@his(Dem_QualifyCycleCollectedTriggers)
	lea	a15,[a15]@los(Dem_QualifyCycleCollectedTriggers)
.L349:
	ld.bu	d0,[a10]
.L205:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
	ld.bu	d15,[a15]
.L350:
	xor	d0,d0,#255
.L351:
	and	d15,d0
	st.b	[a15],d15
.L155:
	j	.L28
.L19:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   142  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   143      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   144      else if (CycleState == DEM_CYCLE_STATE_END)
	jne	d15,#1,.L29
.L352:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   145      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   146          DEM_OPERATIONCYCLE_CLEARBIT(&Dem_OperationCycleStates, OperationCycleId);
	movh.a	a15,#@his(Dem_OperationCycleStates)
	lea	a15,[a15]@los(Dem_OperationCycleStates)
.L207:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    40  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    41  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    42  LOCAL_INLINE void rba_DiagLib_Bit8ClearBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    43  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    44      uint8 bit2shift = 1;
	mov	d15,#1
.L277:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    45      *buffer &= ((uint8) (~((uint8) (bit2shift << bit_position))));
	ld.bu	d0,[a15]
.L353:
	sha	d15,d15,d9
.L278:
	extr.u	d15,d15,#0,#8
.L354:
	xor	d15,d15,#255
.L355:
	and	d0,d15
	st.b	[a15],d0
.L208:
	j	.L30
.L29:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   147      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   148      else
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   149      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   150          DEM_DET(DEM_DET_APIID_DEM_SETOPERATIONCYCLESTATE, DEM_E_WRONG_CONFIGURATION);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#8
	mov	d7,#16
	call	Det_ReportError
.L356:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   151          retVal = E_NOT_OK;
	mov	d8,#1
.L30:
.L28:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   152      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   153  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   154      DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   155      return retVal;
	mov	d2,d8
.L279:
	j	.L31

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   156  }
.L31:
.L18:
.L13:
	ret
.L146:
	
__Dem_SetOperationCycleState_function_end:
	.size	Dem_SetOperationCycleState,__Dem_SetOperationCycleState_function_end-Dem_SetOperationCycleState
.L84:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_GetOperationCycleState',code,cluster('Dem_GetOperationCycleState')
	.sect	'.text.Dem_OperationCycle.Dem_GetOperationCycleState'
	.align	2
	
	.global	Dem_GetOperationCycleState

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   157  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   158  Std_ReturnType Dem_GetOperationCycleState(Dem_OperationCycleIdType OperationCycleId,
; Function Dem_GetOperationCycleState
.L59:
Dem_GetOperationCycleState:	.type	func
	mov	d8,d4
.L282:
	mov.aa	a15,a4

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   159          Dem_OperationCycleStateType* CycleState)
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   160  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   161      /*  Entry Condition Check   */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   162      DEM_ENTRY_CONDITION_CHECK_NOT_NULL_PTR(CycleState, DEM_DET_APIID_DEM_GETOPERATIONCYCLESTATE, E_NOT_OK);
.L32:
.L33:
	jnz.a	a15,.L34
.L295:
	mov	d4,#54
.L281:
	mov	d5,#0
	mov	d6,#158
	mov	d7,#17
	call	Det_ReportError
.L280:
	mov	d2,#1
	j	.L35
.L34:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   163      if (!Dem_IsOperationCycleIdValid(OperationCycleId))
	mov	d4,d8
	call	Dem_IsOperationCycleIdValid
.L283:
	jne	d2,#0,.L36
.L296:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   164      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   165          DEM_DET(DEM_DET_APIID_DEM_GETOPERATIONCYCLESTATE, DEM_E_WRONG_CONFIGURATION);
	mov	d4,#54
	mov	d5,#0
	mov	d6,#158
	mov	d7,#16
	call	Det_ReportError
.L297:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   166          return E_NOT_OK;
	mov	d2,#1
.L298:
	j	.L37
.L36:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   167      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   168  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   169      if (DEM_OPERATIONCYCLE_ISBITSET(Dem_OperationCycleStates, OperationCycleId))
	movh.a	a2,#@his(Dem_OperationCycleStates)
	lea	a2,[a2]@los(Dem_OperationCycleStates)
	ld.bu	d15,[a2]
.L124:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    40  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    41  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    42  LOCAL_INLINE void rba_DiagLib_Bit8ClearBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    43  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    44      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    45      *buffer &= ((uint8) (~((uint8) (bit2shift << bit_position))));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    46  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    47  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    48  LOCAL_INLINE void rba_DiagLib_Bit8OverwriteBit(uint8 *buffer, uint8 bit_position, boolean will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    49  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    50      if (will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    51      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    52          rba_DiagLib_Bit8SetBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    53      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    54      else
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    55      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    56          rba_DiagLib_Bit8ClearBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    57      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    58  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    59  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    60  LOCAL_INLINE uint8 rba_DiagLib_Bit8GetSingleBit(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    61  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);
	rsub	d8,#0
	sha	d15,d15,d8
.L299:
	and	d15,#1
.L300:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);      (inlined)
	j	.L38

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }      (inlined)
.L38:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    64  LOCAL_INLINE boolean rba_DiagLib_Bit8IsBitSet(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    65  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);
	ne	d15,d15,#0
.L301:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);      (inlined)
	j	.L39

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    67  }      (inlined)
.L39:
	jeq	d15,#0,.L40
.L302:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   170      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   171          *CycleState = DEM_CYCLE_STATE_START;
	mov	d15,#0
.L303:
	st.b	[a15],d15
.L304:
	j	.L41
.L40:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   172      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   173      else
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   174      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   175          *CycleState = DEM_CYCLE_STATE_END;
	mov	d15,#1
.L305:
	st.b	[a15],d15
.L41:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   176      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   177  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   178      return E_OK;
	mov	d2,#0
.L306:
	j	.L42

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   179  }
.L42:
.L37:
.L35:
	ret
.L119:
	
__Dem_GetOperationCycleState_function_end:
	.size	Dem_GetOperationCycleState,__Dem_GetOperationCycleState_function_end-Dem_GetOperationCycleState
.L74:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_OperationCyclesMainFunction',code,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.text.Dem_OperationCycle.Dem_OperationCyclesMainFunction'
	.align	2
	
	.global	Dem_OperationCyclesMainFunction

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   180  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   181  boolean Dem_OperationCyclesMainFunction(void)
; Function Dem_OperationCyclesMainFunction
.L61:
Dem_OperationCyclesMainFunction:	.type	func

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   182  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   183      boolean retVal = FALSE;
	mov	d2,#0
.L284:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   184      /* Local copies to be taken under lock */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   185      Dem_OperationCycleList opCycleStartTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   186      Dem_OperationCycleList opCycleQualifiedTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   187  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   188      if ((Dem_StartOperationCycleCollectedTriggers != 0) || (Dem_QualifyCycleCollectedTriggers != 0))
	movh.a	a15,#@his(Dem_StartOperationCycleCollectedTriggers)
	lea	a15,[a15]@los(Dem_StartOperationCycleCollectedTriggers)
	ld.bu	d8,[a15]
.L285:
	jne	d8,#0,.L43
.L385:
	movh.a	a2,#@his(Dem_QualifyCycleCollectedTriggers)
	lea	a2,[a2]@los(Dem_QualifyCycleCollectedTriggers)
	ld.bu	d15,[a2]
.L386:
	jeq	d15,#0,.L44
.L43:
	movh.a	a2,#@his(Dem_QualifyCycleCollectedTriggers)
	lea	a2,[a2]@los(Dem_QualifyCycleCollectedTriggers)
.L387:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   189      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   190          DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   191          opCycleStartTriggers = Dem_StartOperationCycleCollectedTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   192          opCycleQualifiedTriggers = Dem_QualifyCycleCollectedTriggers;
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   193          Dem_StartOperationCycleCollectedTriggers = 0;
	mov	d15,#0
.L388:
	st.b	[a15],d15
.L389:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   194          Dem_QualifyCycleCollectedTriggers = 0;
	mov	d15,#0
.L390:
	st.b	[a2],d15
.L238:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     4  #ifndef DEM_EVMEM_H
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     5  #define DEM_EVMEM_H
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     7  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     8  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	     9  #include "Dem_Cfg_EvMem.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    10  #include "Dem_Cfg_EnvMain.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    11  #include "Dem_OperationCycle.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    12  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    13  #include "Dem_EvMemTypes.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    14  #include "Dem_EvMemBase.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    15  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    16  #include "Dem_EvMemApi.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    17  #include "Dem_EvMemAging.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    18  #if (DEM_CFG_EVMEM_AGING_METHOD == DEM_CFG_EVMEM_AGING_METHOD_USER)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    19  #include "Dem_PrjEvMemAging.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    20  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    21  #include "Dem_Cfg_Events_DataStructures.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    22  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    23  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    24      uint8 evMemId;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    25      boolean originSupported;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    26  } Dem_EvMemMapOrigin2IdType;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    27  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    28  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    29  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    30  DEM_ARRAY_DECLARE_CONST(Dem_EvMemMapOrigin2IdType, Dem_EvMemMapOrigin2Id, 5);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    31  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    32  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    33  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    34  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    35  DEM_INLINE boolean Dem_EvMemIsOriginSupported (Dem_DTCOriginType origin)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    36  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    37      return Dem_EvMemMapOrigin2Id[origin].originSupported;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    38  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    39  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    40  DEM_INLINE uint8 Dem_EvMemGetEvMemIdFromOrigin (Dem_DTCOriginType origin)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    41  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    42      return Dem_EvMemMapOrigin2Id[origin].evMemId;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    43  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    44  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    45  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    46  /* ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    47     Interface Functions
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    48     ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    49  */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    50  #define DEM_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    51  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    52  void          Dem_EvMemInit(void);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    53  void          Dem_EvMemInitCausality(void);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    54  void          Dem_EvMemMainFunction(void);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    55  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    56  void          Dem_EvMemClearEvent(Dem_EventIdType EventId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    57  void          Dem_EvMemEraseEventMemory(uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    58  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    59  void          Dem_EvMemSetEventPassed(Dem_EventIdType EventId, uint16_least MemId, const uint8 *EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    60  void          Dem_EvMemSetEventFailed(Dem_EventIdType EventId, uint16_least MemId, const uint8 *EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    61  void          Dem_EvMemSetEventUnRobust(Dem_EventIdType EventId, uint16_least MemId, const uint8 *EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    62  void          Dem_EvMemStartOperationCycle(Dem_OperationCycleList operationCycleList, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    63  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    64  uint16_least  Dem_EvMemGetEventMemoryLocIdOfDtcWithVisibility(Dem_DtcIdType DtcId, uint16_least MemId, Dem_boolean_least ShadowEntriesVisible);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    65  uint16_least  Dem_EvMemGetEventMemoryStatusOfDtc(Dem_DtcIdType DtcId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    66  uint16_least  Dem_EvMemGetEventMemoryStatusOfEvent(Dem_EventIdType EventId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    67  uint16_least  Dem_EvMemGetEventMemoryLocIdOfEvent (Dem_EventIdType EventId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    68  Std_ReturnType Dem_EvMemGetReaderCopyOfEvent(Dem_EvMemEventMemoryType* ReaderCopy, Dem_EventIdType EventId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    69  void          Dem_EvMemSetStatusWithNotifications(uint16_least LocId, uint16_least StatusNew, uint16_least WriteSts, Dem_EvMemActionType actionType);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    70  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    71  #if DEM_CFG_EVMEM_SHADOW_MEMORY_SUPPORTED
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    72  void          Dem_EvMemClearShadowMemory(Dem_EventIdType EventId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    73  uint16_least  Dem_EvMemGetShadowMemoryLocIdOfDtc(Dem_DtcIdType DtcId, uint16_least MemId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    74  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    75  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    76  uint16_least  Dem_EvMemGetMemoryLocIdOfDtcAndOriginWithVisibility(Dem_DtcIdType DtcId, Dem_DTCOriginType DTCOrigin, Dem_boolean_least ShadowEntriesVisible);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    77  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    78  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    79  Dem_NvmBlockIdType     Dem_EvMemGetNvmIdFromLocId(uint16_least LocId);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    80  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    81  #if (DEM_CFG_READDEM_MAX_FDC_DURING_CURRENT_CYCLE_SUPPORTED || DEM_CFG_READDEM_MAX_FDC_SINCE_LAST_CLEAR_SUPPORTED)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    82  void            Dem_EvMemFdcUpdate(void);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    83  #else
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    84  DEM_INLINE void Dem_EvMemFdcUpdate(void) {}
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    85  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    86  #define DEM_STOP_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    87  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    88  #define DEM_START_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    89  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    90  extern boolean Dem_EvMemIsLocked;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    91  #define DEM_STOP_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    92  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    93  /* ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    94     Inline
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    95     ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    96  */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    97  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    98  DEM_INLINE void Dem_EvMemSetEventFailedAllMem(Dem_EventIdType EventId, const uint8 *EnvData)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	    99  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   100     if (Dem_EvtParam_GetEventIsStoredInPrimary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   101     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   102        Dem_EvMemSetEventFailed(EventId,DEM_CFG_EVMEM_MEMID_PRIMARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   103     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   104  #if DEM_CFG_MAX_NUMBER_EVENT_ENTRY_SECONDARY > 0
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   105     if (Dem_EvtParam_GetEventIsStoredInSecondary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   106     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   107        Dem_EvMemSetEventFailed(EventId,DEM_CFG_EVMEM_MEMID_SECONDARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   108     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   109  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   110  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   111  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   112  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   113  DEM_INLINE void Dem_EvMemSetEventPassedAllMem(Dem_EventIdType EventId, const uint8 *EnvData)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   114  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   115     if (Dem_EvtParam_GetEventIsStoredInPrimary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   116     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   117        Dem_EvMemSetEventPassed(EventId,DEM_CFG_EVMEM_MEMID_PRIMARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   118     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   119  #if DEM_CFG_MAX_NUMBER_EVENT_ENTRY_SECONDARY > 0
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   120     if (Dem_EvtParam_GetEventIsStoredInSecondary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   121     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   122        Dem_EvMemSetEventPassed(EventId,DEM_CFG_EVMEM_MEMID_SECONDARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   123     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   124  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   125  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   126  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   127  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   128  DEM_INLINE void Dem_EvMemSetEventUnRobustAllMem(Dem_EventIdType EventId, const uint8 *EnvData)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   129  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   130     if (Dem_EvtParam_GetEventIsStoredInPrimary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   131     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   132        Dem_EvMemSetEventUnRobust(EventId,DEM_CFG_EVMEM_MEMID_PRIMARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   133     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   134  #if DEM_CFG_MAX_NUMBER_EVENT_ENTRY_SECONDARY > 0
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   135     if (Dem_EvtParam_GetEventIsStoredInSecondary(EventId))
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   136     {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   137        Dem_EvMemSetEventUnRobust(EventId,DEM_CFG_EVMEM_MEMID_SECONDARY,EnvData);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   138     }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   139  #endif
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   140  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   141  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   142  DEM_INLINE void Dem_EvMemStartOperationCycleAllMem(Dem_OperationCycleList operationCycleList)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   143  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMem.h	   144      Dem_EvMemStartOperationCycle(operationCycleList, DEM_CFG_EVMEM_MEMID_PRIMARY);
	mov	d5,#0
	mov	d4,d8
	call	Dem_EvMemStartOperationCycle
.L239:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   195          DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   196  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   197  #if (DEM_CFG_OBD != DEM_CFG_OBD_OFF)
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   198          /* check mil state before update of event status to get the state from last driving cycle! */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   199          rba_DemObdBasic_StartOperationCycle(opCycleStartTriggers, opCycleQualifiedTriggers);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   200  #endif
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   201          /* FC_VariationPoint_START */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   202  #if( DEM_BFM_ENABLED == DEM_BFM_ON )
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   203          rba_DemBfm_CounterAdvanceOperationCycle( opCycleStartTriggers );
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   204  #endif
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   205          /* FC_VariationPoint_END */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   206          Dem_EvMemStartOperationCycleAllMem(opCycleStartTriggers);
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   207          Dem_EvtAdvanceOperationCycle(opCycleStartTriggers);
	mov	d4,d8
	call	Dem_EvtAdvanceOperationCycle
.L391:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   208          Dem_RecheckNodeNotRecoverableRequest();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   209  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   210          /* trigger NvM storage */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   211          if (Dem_LibGetParamBool(DEM_CFG_OPERATIONCYCLESTATUSSTORAGE))
	mov	d15,#0
.L243:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    43      return parameter;      (inlined)
	j	.L45

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    44  }      (inlined)
.L45:
	jeq	d15,#0,.L46
.L392:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   212          {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   213              Dem_GenericNvData.OperationCycleStates = Dem_OperationCycleStates;
	movh.a	a15,#@his(Dem_GenericNvData)
	lea	a15,[a15]@los(Dem_GenericNvData)
.L393:
	movh.a	a2,#@his(Dem_OperationCycleStates)
	lea	a2,[a2]@los(Dem_OperationCycleStates)
	ld.bu	d15,[a2]
.L394:
	st.b	[a15],d15
.L395:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   214              Dem_GenericNvData.OperationCycleQualified = Dem_OperationCycleQualified;
	movh.a	a2,#@his(Dem_OperationCycleQualified)
	lea	a2,[a2]@los(Dem_OperationCycleQualified)
	ld.bu	d15,[a2]
.L396:
	st.b	[a15]1,d15
.L397:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   215  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   216              /* notify to store in NVM */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   217              Dem_NvMWriteBlockOnShutdown(DEM_NVM_ID_DEM_GENERIC_NV_DATA);
	mov	d15,#0
.L246:

; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     1   
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     4  #ifndef DEM_NVM_H
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     5  #define DEM_NVM_H
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     7  #include "NvM.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     8  #include "Dem_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     9  #include "Dem_Nvm_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    10  #include "Dem_Array.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    11  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    12  #include "Dem_Cfg_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    13  #include "rba_DiagLib_Bits8.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    14  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    15  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    16  #define DEM_START_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    17  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    18  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    19  DEM_ARRAY_DECLARE(Dem_NvMBlockStatusDoubleBufferType, Dem_NvMBlockStatusDoubleBuffer, DEM_NVM_CFG_NUM_BLOCKS_TOTAL);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    20  DEM_ARRAY_DECLARE(Dem_NvMStorageBufferType, Dem_NvMStorageBuffer, DEM_NVM_CFG_NUM_STORAGEBUFFER);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    21  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    22  extern Dem_EraseAllStatusType Dem_EraseAllNvMDataStatus;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    23  #if (DEM_CFG_ERASE_ALL_DATA_SUPPORTED == DEM_CFG_ERASE_ALL_WITH_HASHID_CHECK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    24  DEM_ARRAY_DECLARE(Dem_NvmHashIdType, Dem_HashIdInNvm, DEM_NVM_HASH_ID_SIZE);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    25  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    26  extern boolean Dem_NvMAnyClearFailed;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    27  #if(DEM_CFG_TRIGGER_TO_STORE_NVM_SUPPORTED)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    28  extern boolean Dem_NvMImmediateStorageRequested;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    29  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    30  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    31  #define DEM_STOP_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    32  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    33  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    34  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    35  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    36  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    37  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    38  DEM_ARRAY_DECLARE_CONST(NvM_BlockIdType, Dem_NvMBlockMap2NvmId, DEM_NVM_CFG_NUM_BLOCKS_TOTAL);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    39  DEM_ARRAY_DECLARE_CONST(Dem_NvmBlockIdExtendedType, Dem_NvmBlockIdExtended, DEM_NVM_CFG_NUM_BLOCKS_EXTENDED);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    40  DEM_ARRAY_DECLARE_CONST(Dem_NvmCopyFunction, DemCopyFctPtrTable, DEM_NVM_CFG_COPYFCT_NUM);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    41  #if (DEM_CFG_ERASE_ALL_DATA_SUPPORTED == DEM_CFG_ERASE_ALL_WITH_HASHID_CHECK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    42  DEM_ARRAY_DECLARE_CONST(Dem_NvmHashIdType, Dem_HashIdInRom, DEM_NVM_HASH_ID_SIZE);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    43  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    44  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    45  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    46  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    47  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    48  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    49  DEM_INLINE NvM_BlockIdType Dem_NvMGetNvMBlocKId(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    50  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    51      return Dem_NvMBlockMap2NvmId[id];
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    52  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    53  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    54  DEM_INLINE Dem_NvmResultType Dem_NvmGetStatus (Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    55  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    56      NvM_RequestResultType result;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    57      if (NvM_GetErrorStatus (Dem_NvMGetNvMBlocKId(id), &result) == E_NOT_OK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    58      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    59          return DEM_NVM_FAILED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    60      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    61  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    62      switch (result)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    63      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    64          case NVM_REQ_CANCELED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    65              return DEM_NVM_CANCELED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    66  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    67          case NVM_REQ_OK:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    68          case NVM_REQ_REDUNDANCY_FAILED:     /* Driver could trigger correction of the damaged part of the redundant block; data is read correctly nevertheless */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    69          case NVM_REQ_RESTORED_FROM_ROM:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    70              return DEM_NVM_SUCCESS;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    71  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    72          case NVM_REQ_PENDING:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    73              return DEM_NVM_PENDING;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    74  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    75          case NVM_REQ_NV_INVALIDATED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    76              return DEM_NVM_INVALID;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    77  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    78          case NVM_REQ_INTEGRITY_FAILED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    79              return DEM_NVM_INTEGRITY_FAILED;    /* NVM_REQ_INTEGRITY_FAILED: description in NVM-doc: Indicates that the latest read operation did not find any valid data for this block on the persistent media. */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    80  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    81          case NVM_REQ_BLOCK_SKIPPED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    82              return DEM_NVM_BLOCK_SKIPPED;       /* NVM_REQ_BLOCK_SKIPPED: if readall would be skipped, it is treated as failure for DEM, because all NVM data has to be available
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    83                                                 at init (ErrorQueue is flushed and event status / eventMemory content needs to be available)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    84                                                 This is ensured as the checks during init are checked to be DEM_NVM_SUCCESS. All other states are handled as error */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    85  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    86          default:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    87              /*   NVM_REQ_NOT_OK: Indicates that the latest operation failed due to an unexpected event.  */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    88              return DEM_NVM_FAILED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    89      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    90  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    91  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    92  DEM_INLINE void Dem_NvMWriteBlockOnShutdown(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    93  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    94      Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_SHUTDOWN] = DEM_NVM_STATUSBITMASK_SHUTDOWN;
	movh.a	a15,#@his(Dem_NvMBlockStatusDoubleBuffer)
	lea	a15,[a15]@los(Dem_NvMBlockStatusDoubleBuffer)
.L398:
	mul	d15,d15,#5
	addsc.a	a15,a15,d15,#0
.L399:
	mov	d15,#1
.L400:
	st.b	[a15]1,d15
.L46:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   218          }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   219  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   220          retVal = TRUE;
	mov	d2,#1
.L44:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   221      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   222  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   223      return retVal;
	j	.L47

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   224  }
.L47:
	ret
.L233:
	
__Dem_OperationCyclesMainFunction_function_end:
	.size	Dem_OperationCyclesMainFunction,__Dem_OperationCyclesMainFunction_function_end-Dem_OperationCyclesMainFunction
.L104:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_OperationCycleInit',code,cluster('Dem_OperationCycleInit')
	.sect	'.text.Dem_OperationCycle.Dem_OperationCycleInit'
	.align	2
	
	.global	Dem_OperationCycleInit

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   225  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   226  void Dem_OperationCycleInit(void)
; Function Dem_OperationCycleInit
.L63:
Dem_OperationCycleInit:	.type	func

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   227  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   228      /* Do processing of operation cycle states immediately in init, to have TestComplete set  */
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   229      (void) Dem_OperationCyclesMainFunction();
	call	Dem_OperationCyclesMainFunction
.L369:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   230  }
	ret
.L226:
	
__Dem_OperationCycleInit_function_end:
	.size	Dem_OperationCycleInit,__Dem_OperationCycleInit_function_end-Dem_OperationCycleInit
.L94:
	; End of function
	
	.sdecl	'.text.Dem_OperationCycle.Dem_OperationCycleInitCheckNvm',code,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.text.Dem_OperationCycle.Dem_OperationCycleInitCheckNvm'
	.align	2
	
	.global	Dem_OperationCycleInitCheckNvm

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   231  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   232  void Dem_OperationCycleInitCheckNvm(void)
; Function Dem_OperationCycleInitCheckNvm
.L65:
Dem_OperationCycleInitCheckNvm:	.type	func

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   233  {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   234      if (Dem_LibGetParamBool(DEM_CFG_OPERATIONCYCLESTATUSSTORAGE))
	mov	d15,#0
.L229:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    43      return parameter;      (inlined)
	j	.L48

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    44  }      (inlined)
.L48:
	jeq	d15,#0,.L49
.L374:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   235      {
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   236          DEM_ENTERLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   237          Dem_OperationCycleStates |= Dem_GenericNvData.OperationCycleStates;
	movh.a	a15,#@his(Dem_GenericNvData)
	lea	a15,[a15]@los(Dem_GenericNvData)
.L375:
	movh.a	a2,#@his(Dem_OperationCycleStates)
	lea	a2,[a2]@los(Dem_OperationCycleStates)
	ld.bu	d15,[a2]
.L376:
	ld.bu	d0,[a15]
.L377:
	or	d15,d0
	st.b	[a2],d15
.L378:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   238          Dem_OperationCycleQualified |= Dem_GenericNvData.OperationCycleQualified;
	movh.a	a2,#@his(Dem_OperationCycleQualified)
	lea	a2,[a2]@los(Dem_OperationCycleQualified)
	ld.bu	d0,[a2]
.L379:
	ld.bu	d15,[a15]1
.L380:
	or	d0,d15
	st.b	[a2],d0
.L49:

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   239          DEM_EXITLOCK_MON();
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   240      }
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   241  }
	ret
.L227:
	
__Dem_OperationCycleInitCheckNvm_function_end:
	.size	Dem_OperationCycleInitCheckNvm,__Dem_OperationCycleInitCheckNvm_function_end-Dem_OperationCycleInitCheckNvm
.L99:
	; End of function
	
	.sdecl	'.bss.Dem_OperationCycle.Dem_OperationCycleStates',data,cluster('Dem_OperationCycleStates')
	.sect	'.bss.Dem_OperationCycle.Dem_OperationCycleStates'
	.global	Dem_OperationCycleStates
Dem_OperationCycleStates:	.type	object
	.size	Dem_OperationCycleStates,1
	.space	1
	.sdecl	'.bss.Dem_OperationCycle.Dem_OperationCycleQualified',data,cluster('Dem_OperationCycleQualified')
	.sect	'.bss.Dem_OperationCycle.Dem_OperationCycleQualified'
Dem_OperationCycleQualified:	.type	object
	.size	Dem_OperationCycleQualified,1
	.space	1
	.sdecl	'.bss.Dem_OperationCycle.Dem_QualifyCycleCollectedTriggers',data,cluster('Dem_QualifyCycleCollectedTriggers')
	.sect	'.bss.Dem_OperationCycle.Dem_QualifyCycleCollectedTriggers'
Dem_QualifyCycleCollectedTriggers:	.type	object
	.size	Dem_QualifyCycleCollectedTriggers,1
	.space	1
	.sdecl	'.bss.Dem_OperationCycle.Dem_StartOperationCycleCollectedTriggers',data,cluster('Dem_StartOperationCycleCollectedTriggers')
	.sect	'.bss.Dem_OperationCycle.Dem_StartOperationCycleCollectedTriggers'
Dem_StartOperationCycleCollectedTriggers:	.type	object
	.size	Dem_StartOperationCycleCollectedTriggers,1
	.space	1
	.calls	'Dem_GetCycleQualified','Dem_IsOperationCycleIdValid'
	.calls	'Dem_GetCycleQualified','Det_ReportError'
	.calls	'Dem_SetCycleQualified','Dem_IsOperationCycleIdValid'
	.calls	'Dem_SetCycleQualified','Det_ReportError'
	.calls	'Dem_SetOperationCycleState','Dem_IsOperationCycleIdValid'
	.calls	'Dem_SetOperationCycleState','Det_ReportError'
	.calls	'Dem_GetOperationCycleState','Det_ReportError'
	.calls	'Dem_GetOperationCycleState','Dem_IsOperationCycleIdValid'
	.calls	'Dem_OperationCyclesMainFunction','Dem_EvMemStartOperationCycle'
	.calls	'Dem_OperationCyclesMainFunction','Dem_EvtAdvanceOperationCycle'
	.calls	'Dem_OperationCycleInit','Dem_OperationCyclesMainFunction'
	.calls	'Dem_IsOperationCycleIdValid','',0
	.calls	'Dem_GetCycleQualified','',0
	.calls	'Dem_SetCycleQualified','',0
	.calls	'Dem_SetOperationCycleState','',8
	.calls	'Dem_GetOperationCycleState','',0
	.calls	'Dem_OperationCyclesMainFunction','',0
	.calls	'Dem_OperationCycleInit','',0
	.extern	Det_ReportError
	.extern	Dem_Cfg_OperationCycle
	.extern	Dem_GenericNvData
	.extern	Dem_NvMBlockStatusDoubleBuffer
	.extern	Dem_EvtAdvanceOperationCycle
	.extern	Dem_EvMemStartOperationCycle
	.calls	'Dem_OperationCycleInitCheckNvm','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L67:
	.word	24945
	.half	3
	.word	.L68
	.byte	4
.L66:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L69
.L118:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	149
.L186:
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBitMask',0,3,1,21,19,1,1
.L188:
	.byte	5
	.byte	'buffer',0,1,21,53
	.word	166
.L190:
	.byte	5
	.byte	'bitMask',0,1,21,67
	.word	149
.L192:
	.byte	6,0
.L197:
	.byte	4
	.byte	'rba_DiagLib_Bit8ClearBitMask',0,3,1,26,19,1,1
.L200:
	.byte	5
	.byte	'buffer',0,1,26,55
	.word	166
.L202:
	.byte	5
	.byte	'bitMask',0,1,26,69
	.word	149
.L204:
	.byte	6,0
.L178:
	.byte	4
	.byte	'rba_DiagLib_Bit8MergeBitmask',0,3,1,31,19,1,1
.L181:
	.byte	5
	.byte	'buffer',0,1,31,55
	.word	166
.L183:
	.byte	5
	.byte	'value',0,1,31,69
	.word	149
.L185:
	.byte	6,0
.L160:
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1
.L163:
	.byte	5
	.byte	'buffer',0,1,36,49
	.word	166
.L165:
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	149
.L167:
	.byte	6,0
.L206:
	.byte	4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1
.L209:
	.byte	5
	.byte	'buffer',0,1,42,51
	.word	166
.L211:
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	149
.L213:
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8OverwriteBit',0,3,1,48,19,1,1,5
	.byte	'buffer',0,1,48,55
	.word	166
	.byte	5
	.byte	'bit_position',0,1,48,69
	.word	149
	.byte	5
	.byte	'will_bit_be_set',0,1,48,91
	.word	149
	.byte	7,6,6,0,0
.L130:
	.byte	8
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	149
	.byte	1,1
.L131:
	.byte	5
	.byte	'value',0,1,60,55
	.word	149
.L133:
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	149
.L135:
	.byte	6,0
.L123:
	.byte	8
	.byte	'rba_DiagLib_Bit8IsBitSet',0,3,1,64,22
	.word	149
	.byte	1,1
.L125:
	.byte	5
	.byte	'value',0,1,64,53
	.word	149
.L127:
	.byte	5
	.byte	'bit_position',0,1,64,66
	.word	149
.L129:
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_Bit8GetBits',0,3,1,69,20
	.word	149
	.byte	1,1,5
	.byte	'value',0,1,69,50
	.word	149
	.byte	5
	.byte	'bit_position',0,1,69,63
	.word	149
	.byte	5
	.byte	'number_of_bits',0,1,69,83
	.word	149
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	166
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	149
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	149
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8OverwriteBits',0,3,1,83,19,1,1,5
	.byte	'value',0,1,83,56
	.word	166
	.byte	5
	.byte	'bit_position',0,1,83,69
	.word	149
	.byte	5
	.byte	'number_of_bits',0,1,83,89
	.word	149
	.byte	5
	.byte	'newValue',0,1,83,111
	.word	149
	.byte	7,6,0,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	1069
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	1091
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	149
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	1091
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	149
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	1069
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	1069
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	149
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit16IsBitSet',0,3,2,65,22
	.word	149
	.byte	1,1,5
	.byte	'value',0,2,65,55
	.word	1069
	.byte	5
	.byte	'bit_position',0,2,65,68
	.word	149
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_Bit16GetBits',0,3,2,70,21
	.word	1069
	.byte	1,1,5
	.byte	'value',0,2,70,53
	.word	1069
	.byte	5
	.byte	'bit_position',0,2,70,66
	.word	149
	.byte	5
	.byte	'number_of_bits',0,2,70,86
	.word	149
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	1091
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	149
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	149
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	1580
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	1596
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	149
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	1596
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	149
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	1580
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	1580
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	149
	.byte	6,0,8
	.byte	'rba_DiagLib_Bit32IsBitSet',0,3,3,65,22
	.word	149
	.byte	1,1,5
	.byte	'value',0,3,65,55
	.word	1580
	.byte	5
	.byte	'bit_position',0,3,65,68
	.word	149
	.byte	7,6,0,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	1596
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	149
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	149
	.byte	6,0,8
	.byte	'rba_BswSrv_ByteOrderSwap32',0,3,4,125,21
	.word	1580
	.byte	1,1,5
	.byte	'Input_u32',0,4,125,55
	.word	1580
	.byte	6,0,8
	.byte	'rba_BswSrv_ByteOrderSwap16',0,3,4,150,1,21
	.word	1069
	.byte	1,1,5
	.byte	'Input_u16',0,4,150,1,55
	.word	1069
	.byte	6,0,8
	.byte	'Dem_LibGetParamUI8',0,3,5,36,18
	.word	149
	.byte	1,1,5
	.byte	'parameter',0,5,36,44
	.word	149
	.byte	6,0
.L228:
	.byte	8
	.byte	'Dem_LibGetParamBool',0,3,5,41,20
	.word	149
	.byte	1,1
.L230:
	.byte	5
	.byte	'parameter',0,5,41,49
	.word	149
.L232:
	.byte	6,0
.L174:
	.byte	8
	.byte	'Dem_Cfg_OperationCycle_GetDependentCycleMask',0,3,6,31,37
	.word	149
	.byte	1,1
.L175:
	.byte	5
	.byte	'indx',0,6,31,107
	.word	149
.L177:
	.byte	6,0
.L150:
	.byte	8
	.byte	'Dem_Cfg_OperationCycle_GetIsAllowedToBeStartedDirectly',0,3,6,37,22
	.word	149
	.byte	1,1
.L151:
	.byte	5
	.byte	'indx',0,6,37,102
	.word	149
.L153:
	.byte	6,0,4
	.byte	'Dem_BitArraySetBit',0,3,7,33,17,1,1,5
	.byte	'buffer',0,7,33,36
	.word	1596
	.byte	5
	.byte	'bit_position',0,7,33,75
	.word	1580
	.byte	6,0,4
	.byte	'Dem_BitArrayClearBit',0,3,7,46,17,1,1,5
	.byte	'buffer',0,7,46,38
	.word	1596
	.byte	5
	.byte	'bit_position',0,7,46,77
	.word	1580
	.byte	6,0,4
	.byte	'Dem_BitArrayOverwriteBit',0,3,7,61,17,1,1,5
	.byte	'buffer',0,7,61,42
	.word	1596
	.byte	5
	.byte	'bit_position',0,7,62,25
	.word	1580
	.byte	5
	.byte	'will_bit_be_set',0,7,62,57
	.word	149
	.byte	7,6,6,0,0,9
	.word	1580
	.byte	3
	.word	2587
	.byte	8
	.byte	'Dem_BitArrayIsBitSet',0,3,7,75,30
	.word	149
	.byte	1,1,5
	.byte	'buffer',0,7,75,51
	.word	2592
	.byte	5
	.byte	'bit_position',0,7,75,95
	.word	1580
	.byte	6,0,8
	.byte	'Dem_ISO14229ByteIsTestFailed',0,3,8,122,30
	.word	149
	.byte	1,1,5
	.byte	'self',0,8,122,66
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsTestFailedTOC',0,3,8,129,1,30
	.word	149
	.byte	1,1,5
	.byte	'self',0,8,129,1,69
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsTestCompleteTOC',0,3,8,157,1,30
	.word	149
	.byte	1,1,5
	.byte	'self',0,8,157,1,71
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsPendingDTC',0,3,8,164,1,30
	.word	149
	.byte	1,1,5
	.byte	'self',0,8,164,1,66
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_ISO14229ByteIsWarningIndicatorRequested',0,3,8,177,1,30
	.word	149
	.byte	1,1,5
	.byte	'self',0,8,177,1,81
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailed',0,3,8,186,1,17,1,1,5
	.byte	'self',0,8,186,1,55
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,186,1,79
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailedTOC',0,3,8,193,1,17,1,1,5
	.byte	'self',0,8,193,1,58
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,193,1,82
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestFailedSLC',0,3,8,200,1,17,1,1,5
	.byte	'self',0,8,200,1,58
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,200,1,82
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestCompleteTOC',0,3,8,214,1,17,1,1,5
	.byte	'self',0,8,214,1,60
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,214,1,84
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetTestCompleteSLC',0,3,8,221,1,17,1,1,5
	.byte	'self',0,8,221,1,60
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,221,1,84
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetPendingDTC',0,3,8,228,1,17,1,1,5
	.byte	'self',0,8,228,1,55
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,228,1,79
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetConfirmedDTC',0,3,8,235,1,17,1,1,5
	.byte	'self',0,8,235,1,57
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,235,1,81
	.word	149
	.byte	7,6,0,0,4
	.byte	'Dem_ISO14229ByteSetWarningIndicatorRequested',0,3,8,242,1,17,1,1,5
	.byte	'self',0,8,242,1,70
	.word	166
	.byte	5
	.byte	'setOrReset',0,8,242,1,94
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_isDtcIdValid',0,3,9,152,1,30
	.word	149
	.byte	1,1,5
	.byte	'id',0,9,152,1,62
	.word	1069
	.byte	6,0,8
	.byte	'Dem_DtcIdFromEventId',0,3,9,158,1,27
	.word	1069
	.byte	1,1,5
	.byte	'id',0,9,158,1,65
	.word	1069
	.byte	6,0,8
	.byte	'Dem_DtcIdGetEventId',0,3,9,166,1,28
	.word	1069
	.byte	1,1,5
	.byte	'dtcid',0,9,166,1,63
	.word	1069
	.byte	6,0,8
	.byte	'Dem_DtcGroupIdIsValid',0,3,9,252,1,30
	.word	149
	.byte	1,1,5
	.byte	'dtcGroupID',0,9,252,1,72
	.word	149
	.byte	6,0,8
	.byte	'Dem_EnCoAreAllFulfilled',0,3,10,32,30
	.word	149
	.byte	1,1,5
	.byte	'enableConditionList',0,10,32,68
	.word	149
	.byte	6,0,8
	.byte	'Dem_NvMGetNvMBlocKId',0,3,11,49,28
	.word	1069
	.byte	1,1,5
	.byte	'id',0,11,49,68
	.word	149
	.byte	6,0
.L245:
	.byte	4
	.byte	'Dem_NvMWriteBlockOnShutdown',0,3,11,92,17,1,1
.L247:
	.byte	5
	.byte	'id',0,11,92,64
	.word	149
.L249:
	.byte	6,0,4
	.byte	'Dem_NvMStartClear',0,3,11,138,1,17,1,1,6,0,8
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderS',0,3,12,36,21
	.word	1069
	.byte	1,1,5
	.byte	'val',0,12,36,70
	.word	1069
	.byte	7,6,0,0,8
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderL',0,3,12,41,21
	.word	1580
	.byte	1,1,5
	.byte	'val',0,12,41,70
	.word	1580
	.byte	7,6,0,0,8
	.byte	'Dem_EvtParam_GetStoreTestFailedToNextOC',0,3,13,55,22
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,55,78
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetEventIsStoredInPrimary',0,3,13,75,22
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,75,77
	.word	1069
	.byte	7,6,0,0,8
	.byte	'Dem_EvtParam_GetAgingAllowed',0,3,13,95,22
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,95,67
	.word	1069
	.byte	7,6,0,0,8
	.byte	'Dem_EvtParam_GetOperationCycleID',0,3,13,122,20
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,122,69
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetAgingCycleID',0,3,13,129,1,20
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,129,1,65
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetFailureCycleID',0,3,13,136,1,20
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,136,1,67
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetDebounceMethodIndex',0,3,13,149,1,20
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,149,1,72
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetDebounceParamSettingIndex',0,3,13,155,1,21
	.word	1069
	.byte	1,1,5
	.byte	'indx',0,13,155,1,79
	.word	1069
	.byte	7,6,0,0,8
	.byte	'Dem_EvtParam_GetAgingThreshold',0,3,13,168,1,20
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,168,1,67
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtParam_GetEnableConditions',0,3,13,208,1,27
	.word	149
	.byte	1,1,5
	.byte	'indx',0,13,208,1,76
	.word	1069
	.byte	6,0,2
	.byte	'short int',0,2,5,8
	.byte	'Dem_EvtGetDebounceLevel',0,3,14,193,1,19
	.word	4764
	.byte	1,1,5
	.byte	'EventId',0,14,193,1,60
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvtGetLastReportedEvent',0,3,14,219,1,32
	.word	149
	.byte	1,1,5
	.byte	'EventId',0,14,219,1,77
	.word	1069
	.byte	6,0,4
	.byte	'Dem_EvtIncreaseGlobalInitMonitoringCounter',0,3,14,227,3,17,1,1,6,0,4
	.byte	'Dem_EvtSetAnyInitMonitoring',0,3,14,233,3,17,1,1,5
	.byte	'reason',0,14,233,3,72
	.word	149
	.byte	7,6,0,0,8
	.byte	'Dem_EvtIsSuppressed',0,3,14,244,4,30
	.word	149
	.byte	1,1,5
	.byte	'EventId',0,14,244,4,67
	.word	1069
	.byte	7,6,0,0,8
	.byte	'Dem_EvtGetIsoByte',0,3,15,42,34
	.word	149
	.byte	1,1,5
	.byte	'EventId',0,15,42,69
	.word	1069
	.byte	6,0,3
	.word	149
	.byte	4
	.byte	'Dem_EnvSetTrigger',0,3,16,17,17,1,1,5
	.byte	'trigger',0,16,17,52
	.word	5100
	.byte	5
	.byte	'trigger2set',0,16,17,77
	.word	149
	.byte	6,0,8
	.byte	'Dem_EnvIsAnyTriggerSet',0,3,16,22,30
	.word	149
	.byte	1,1,5
	.byte	'trigger2test',0,16,22,69
	.word	149
	.byte	6,0,2
	.byte	'unsigned long int',0,4,7,8
	.byte	'Dem_DebHandleDebounceAction__processBits',0,3,17,101,30
	.word	149
	.byte	1,1,5
	.byte	'EventId',0,17,101,87
	.word	1069
	.byte	5
	.byte	'debAction',0,17,101,120
	.word	5225
	.byte	6,0,10
	.word	1069
	.byte	3
	.word	5334
	.byte	4
	.byte	'Dem_ClientResultType_setResult',0,3,18,27,17,1,1,5
	.byte	'result',0,18,27,79
	.word	5339
	.byte	5
	.byte	'request',0,18,27,109
	.word	1069
	.byte	5
	.byte	'newResult',0,18,27,133,1
	.word	149
	.byte	6,0,10
	.word	1069
	.byte	3
	.word	5434
	.byte	4
	.byte	'Dem_ClientRequestType_setRequest',0,3,18,65,17,1,1,5
	.byte	'request',0,18,65,82
	.word	5439
	.byte	5
	.byte	'newRequest',0,18,65,97
	.word	149
	.byte	6,0,3
	.word	1580
	.byte	4
	.byte	'Dem_ClientSelectionType_invalidateSelectionResult',0,3,18,151,1,17,1,1,5
	.byte	'selection',0,18,151,1,93
	.word	5521
	.byte	6,0,8
	.byte	'Dem_ClientSelectionType_getTypeOfSelection',0,3,18,168,1,18
	.word	149
	.byte	1,1,5
	.byte	'selection',0,18,168,1,86
	.word	1580
	.byte	6,0,4
	.byte	'Dem_ClientClearMachine_SetMachineActiveClient',0,3,19,53,17,1,1,5
	.byte	'ClientId',0,19,53,80
	.word	149
	.byte	6,0,4
	.byte	'Dem_ClientClearMachine_SetMachineState',0,3,19,68,17,1,1,5
	.byte	'state',0,19,68,62
	.word	149
	.byte	6,0,8
	.byte	'Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected',0,3,19,78,20
	.word	149
	.byte	1,1,5
	.byte	'ClientId',0,19,78,91
	.word	149
	.byte	7,6,6,6,6,0,0,8
	.byte	'Dem_EvMemIsMemIdValid',0,3,20,103,30
	.word	149
	.byte	1,1,5
	.byte	'MemId',0,20,103,65
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemIsEventMemLocIdValid',0,3,20,112,30
	.word	149
	.byte	1,1,5
	.byte	'LocId',0,20,112,73
	.word	5225
	.byte	6,0,11,21,133,1,3,4,12
	.byte	'Status',0
	.word	1069
	.byte	2,2,35,0,12
	.byte	'EventId',0
	.word	1069
	.byte	2,2,35,2,0,13,21,131,1,9,4,12
	.byte	'Data',0
	.word	6010
	.byte	4,2,35,0,0,14,7
	.word	149
	.byte	15,6,0,11,21,144,1,9,20,12
	.byte	'Hdr',0
	.word	6050
	.byte	4,2,35,0,12
	.byte	'Data',0
	.word	6071
	.byte	7,2,35,4,12
	.byte	'FailureCounter',0
	.word	149
	.byte	1,2,35,11,12
	.byte	'FreezeFrameCounter',0
	.word	149
	.byte	1,2,35,12,12
	.byte	'AgingCounter',0
	.word	149
	.byte	1,2,35,13,12
	.byte	'OccurrenceCounter',0
	.word	149
	.byte	1,2,35,14,12
	.byte	'Trigger',0
	.word	149
	.byte	1,2,35,15,12
	.byte	'TimeId',0
	.word	1580
	.byte	4,2,35,16,0,9
	.word	6080
	.byte	3
	.word	6248
	.byte	8
	.byte	'Dem_EvMemGetEventMemStatusByPtr',0,3,20,134,1,25
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,134,1,89
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemStatus',0,3,20,139,1,25
	.word	5225
	.byte	1,1,5
	.byte	'LocId',0,20,139,1,65
	.word	5225
	.byte	7,6,0,0,8
	.byte	'Dem_EvMemGetEventMemEventIdByPtr',0,3,20,152,1,28
	.word	1069
	.byte	1,1,5
	.byte	'EventMemory',0,20,152,1,93
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemTimeIdByPtr',0,3,20,170,1,19
	.word	1580
	.byte	1,1,5
	.byte	'EventMemory',0,20,170,1,83
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemDtcStatusByPtr',0,3,20,188,1,18
	.word	149
	.byte	1,1,5
	.byte	'EventMemory',0,20,188,1,85
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemFailureCounterByPtr',0,3,20,216,1,24
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,216,1,96
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemOccurrenceCounterByPtr',0,3,20,233,1,25
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,233,1,100
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemAgingCounterByPtr',0,3,20,133,2,25
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,133,2,95
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemAgingCounter',0,3,20,144,2,25
	.word	5225
	.byte	1,1,5
	.byte	'LocId',0,20,144,2,71
	.word	5225
	.byte	7,6,0,0,4
	.byte	'Dem_EvMemSetEventMemAgingCounter',0,3,20,150,2,17,1,1,5
	.byte	'LocId',0,20,150,2,63
	.word	5225
	.byte	5
	.byte	'AgingCounter',0,20,150,2,83
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemAgingCounterForTFSLCByPtr',0,3,20,161,2,25
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,161,2,103
	.word	6253
	.byte	6,0,2
	.byte	'char',0,1,6,8
	.byte	'Dem_EvMemGetMaxFdcDuringCurrentCycleByPtr',0,3,20,213,2,18
	.word	7039
	.byte	1,1,5
	.byte	'EventMemory',0,20,213,2,92
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetMaxFdcSinceLastClearByPtr',0,3,20,224,2,18
	.word	7039
	.byte	1,1,5
	.byte	'EventMemory',0,20,224,2,88
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemFreezeFrameCounterByPtr',0,3,20,238,3,25
	.word	5225
	.byte	1,1,5
	.byte	'EventMemory',0,20,238,3,101
	.word	6253
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemTriggerByPtr',0,3,20,141,4,28
	.word	149
	.byte	1,1,5
	.byte	'EventMemory',0,20,141,4,93
	.word	6253
	.byte	6,0,3
	.word	6080
	.byte	8
	.byte	'Dem_EvMemGetEventMemDataByPtr',0,3,20,170,4,19
	.word	166
	.byte	1,1,5
	.byte	'EventMemory',0,20,170,4,75
	.word	7344
	.byte	6,0,8
	.byte	'Dem_EvMemIsStored',0,3,20,206,4,30
	.word	149
	.byte	1,1,5
	.byte	'Status',0,20,206,4,61
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemIsEmpty',0,3,20,211,4,30
	.word	149
	.byte	1,1,5
	.byte	'Status',0,20,211,4,60
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemSetToEmpty',0,3,20,226,4,25
	.word	5225
	.byte	1,1,6,0,8
	.byte	'Dem_EvMemGetShadowVisibility',0,3,20,242,4,30
	.word	149
	.byte	1,1,6,0,8
	.byte	'Dem_EvMemGetEventMemStartLocId',0,3,20,131,5,25
	.word	5225
	.byte	1,1,5
	.byte	'MemId',0,20,131,5,69
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemGetEventMemEndLocId',0,3,20,143,5,25
	.word	5225
	.byte	1,1,5
	.byte	'MemId',0,20,143,5,67
	.word	5225
	.byte	6,0,3
	.word	5225
	.byte	4
	.byte	'Dem_EvMemEventMemoryIteratorNew',0,3,20,179,5,17,1,1,5
	.byte	'MemId',0,20,179,5,63
	.word	7704
	.byte	6,0,9
	.word	5225
	.byte	3
	.word	7766
	.byte	8
	.byte	'Dem_EvMemEventMemoryIteratorIsValid',0,3,20,184,5,30
	.word	149
	.byte	1,1,5
	.byte	'MemId',0,20,184,5,86
	.word	7771
	.byte	6,0,4
	.byte	'Dem_EvMemEventMemoryIteratorNext',0,3,20,189,5,17,1,1,5
	.byte	'MemId',0,20,189,5,64
	.word	7704
	.byte	6,0,8
	.byte	'Dem_EvMemIsEdgeTrigger',0,3,20,247,5,30
	.word	149
	.byte	1,1,5
	.byte	'StatusOld',0,20,247,5,66
	.word	5225
	.byte	5
	.byte	'StatusNew',0,20,247,5,90
	.word	5225
	.byte	5
	.byte	'Trigger',0,20,247,5,114
	.word	5225
	.byte	6,0,8
	.byte	'Dem_EvMemGetRamStsMask',0,3,20,154,7,25
	.word	5225
	.byte	1,1,5
	.byte	'EventId',0,20,154,7,64
	.word	1069
	.byte	7,6,0,0,8
	.byte	'Dem_EvMemGetCurrentAgingCycleCounterInt',0,3,22,20,25
	.word	5225
	.byte	1,1,5
	.byte	'EventId',0,22,20,81
	.word	1069
	.byte	6,0,8
	.byte	'Dem_EvMemIsAged',0,3,22,61,30
	.word	149
	.byte	1,1,5
	.byte	'EventId',0,22,61,62
	.word	1069
	.byte	5
	.byte	'LocId',0,22,61,84
	.word	5225
	.byte	5
	.byte	'StatusNew',0,22,61,104
	.word	5225
	.byte	6,0
.L237:
	.byte	4
	.byte	'Dem_EvMemStartOperationCycleAllMem',0,3,23,142,1,17,1,1
.L240:
	.byte	5
	.byte	'operationCycleList',0,23,142,1,75
	.word	149
.L242:
	.byte	6,0,8
	.byte	'Dem_EvMemGetMemIdForDTCOrigin',0,3,23,150,1,25
	.word	5225
	.byte	1,1,5
	.byte	'DTCOrigin',0,23,150,1,73
	.word	149
	.byte	6,0,8
	.byte	'Dem_EvMemGetMemIdForEvent',0,3,23,222,1,25
	.word	5225
	.byte	1,1,5
	.byte	'EventId',0,23,222,1,67
	.word	1069
	.byte	7,6,0,0,16
	.word	171
	.byte	17
	.word	205
	.byte	17
	.word	220
	.byte	6,0,16
	.word	238
	.byte	17
	.word	274
	.byte	17
	.word	289
	.byte	6,0,16
	.word	307
	.byte	17
	.word	343
	.byte	17
	.word	358
	.byte	6,0,16
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	6,0,16
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	6,0,16
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	7,18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,6,18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,6,0,0,16
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	6,0,16
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	7,18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,6,0,0,16
	.word	765
	.byte	17
	.word	800
	.byte	17
	.word	814
	.byte	17
	.word	835
	.byte	6,0,16
	.word	860
	.byte	17
	.word	893
	.byte	17
	.word	907
	.byte	17
	.word	928
	.byte	6,0,16
	.word	953
	.byte	17
	.word	990
	.byte	17
	.word	1004
	.byte	17
	.word	1025
	.byte	17
	.word	1048
	.byte	7,18
	.word	860
	.byte	17
	.word	893
	.byte	17
	.word	907
	.byte	17
	.word	928
	.byte	19
	.word	951
	.byte	0,6,0,0,16
	.word	1096
	.byte	17
	.word	1127
	.byte	17
	.word	1142
	.byte	6,0,16
	.word	1165
	.byte	17
	.word	1198
	.byte	17
	.word	1213
	.byte	6,0,16
	.word	1236
	.byte	17
	.word	1277
	.byte	17
	.word	1291
	.byte	6,0,16
	.word	1314
	.byte	17
	.word	1351
	.byte	17
	.word	1365
	.byte	7,18
	.word	1236
	.byte	17
	.word	1277
	.byte	17
	.word	1291
	.byte	19
	.word	1312
	.byte	0,6,0,0,16
	.word	1390
	.byte	17
	.word	1426
	.byte	17
	.word	1440
	.byte	17
	.word	1461
	.byte	6,0,16
	.word	1486
	.byte	17
	.word	1520
	.byte	17
	.word	1534
	.byte	17
	.word	1555
	.byte	6,0,16
	.word	1601
	.byte	17
	.word	1632
	.byte	17
	.word	1647
	.byte	6,0,16
	.word	1670
	.byte	17
	.word	1703
	.byte	17
	.word	1718
	.byte	6,0,16
	.word	1741
	.byte	17
	.word	1782
	.byte	17
	.word	1796
	.byte	6,0,16
	.word	1819
	.byte	17
	.word	1856
	.byte	17
	.word	1870
	.byte	7,18
	.word	1741
	.byte	17
	.word	1782
	.byte	17
	.word	1796
	.byte	19
	.word	1817
	.byte	0,6,0,0,16
	.word	1895
	.byte	17
	.word	1929
	.byte	17
	.word	1943
	.byte	17
	.word	1964
	.byte	6,0
.L121:
	.byte	3
	.word	149
.L138:
	.byte	3
	.word	149
	.byte	20
	.byte	'Det_ReportError',0,24,112,16
	.word	149
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,24,112,39
	.word	1069
	.byte	5
	.byte	'InstanceId',0,24,112,55
	.word	149
	.byte	5
	.byte	'ApiId',0,24,112,73
	.word	149
	.byte	5
	.byte	'ErrorId',0,24,112,86
	.word	149
	.byte	0,16
	.word	1989
	.byte	17
	.word	2027
	.byte	6,0,16
	.word	2047
	.byte	17
	.word	2086
	.byte	6,0,16
	.word	2107
	.byte	17
	.word	2137
	.byte	6,0,16
	.word	2157
	.byte	17
	.word	2188
	.byte	6,0,16
	.word	2208
	.byte	17
	.word	2264
	.byte	6,0,16
	.word	2279
	.byte	17
	.word	2345
	.byte	6,0,16
	.word	2360
	.byte	17
	.word	2386
	.byte	17
	.word	2401
	.byte	6,0,16
	.word	2424
	.byte	17
	.word	2452
	.byte	17
	.word	2467
	.byte	6,0,16
	.word	2490
	.byte	17
	.word	2522
	.byte	17
	.word	2537
	.byte	17
	.word	2558
	.byte	7,18
	.word	2360
	.byte	17
	.word	2386
	.byte	17
	.word	2401
	.byte	19
	.word	2422
	.byte	0,6,18
	.word	2424
	.byte	17
	.word	2452
	.byte	17
	.word	2467
	.byte	19
	.word	2488
	.byte	0,6,0,0,16
	.word	2597
	.byte	17
	.word	2629
	.byte	17
	.word	2644
	.byte	6,0,16
	.word	2667
	.byte	17
	.word	2707
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	2724
	.byte	17
	.word	2768
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	2786
	.byte	17
	.word	2832
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	2850
	.byte	17
	.word	2891
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	2909
	.byte	17
	.word	2965
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	2983
	.byte	17
	.word	3021
	.byte	17
	.word	3035
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3059
	.byte	17
	.word	3100
	.byte	17
	.word	3114
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3138
	.byte	17
	.word	3179
	.byte	17
	.word	3193
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3217
	.byte	17
	.word	3260
	.byte	17
	.word	3274
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3298
	.byte	17
	.word	3341
	.byte	17
	.word	3355
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3379
	.byte	17
	.word	3417
	.byte	17
	.word	3431
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3455
	.byte	17
	.word	3495
	.byte	17
	.word	3509
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3533
	.byte	17
	.word	3586
	.byte	17
	.word	3600
	.byte	7,18
	.word	512
	.byte	17
	.word	548
	.byte	17
	.word	563
	.byte	17
	.word	584
	.byte	21
	.word	608
	.byte	18
	.word	374
	.byte	17
	.word	404
	.byte	17
	.word	419
	.byte	19
	.word	440
	.byte	0,19
	.word	609
	.byte	18
	.word	442
	.byte	17
	.word	474
	.byte	17
	.word	489
	.byte	19
	.word	510
	.byte	0,19
	.word	610
	.byte	0,0,6,0,0,16
	.word	3624
	.byte	17
	.word	3653
	.byte	6,0,16
	.word	3667
	.byte	17
	.word	3700
	.byte	6,0,16
	.word	3714
	.byte	17
	.word	3746
	.byte	6,0,16
	.word	3763
	.byte	17
	.word	3797
	.byte	6,0,16
	.word	3819
	.byte	17
	.word	3854
	.byte	6,0,16
	.word	3884
	.byte	17
	.word	3916
	.byte	6,0,16
	.word	3929
	.byte	17
	.word	3964
	.byte	6,0,16
	.word	3977
	.byte	6,0,16
	.word	4005
	.byte	17
	.word	4058
	.byte	7,18
	.word	2047
	.byte	17
	.word	2086
	.byte	19
	.word	2105
	.byte	0,6,0,0,16
	.word	4074
	.byte	17
	.word	4127
	.byte	7,18
	.word	1989
	.byte	17
	.word	2027
	.byte	19
	.word	2045
	.byte	0,6,0,0,16
	.word	4143
	.byte	17
	.word	4194
	.byte	6,0,16
	.word	4209
	.byte	17
	.word	4259
	.byte	7,18
	.word	1314
	.byte	17
	.word	1351
	.byte	17
	.word	1365
	.byte	21
	.word	1386
	.byte	18
	.word	1236
	.byte	17
	.word	1277
	.byte	17
	.word	1291
	.byte	19
	.word	1312
	.byte	0,19
	.word	1387
	.byte	0,0,6,0,0,16
	.word	4276
	.byte	17
	.word	4316
	.byte	7,18
	.word	1314
	.byte	17
	.word	1351
	.byte	17
	.word	1365
	.byte	21
	.word	1386
	.byte	18
	.word	1236
	.byte	17
	.word	1277
	.byte	17
	.word	1291
	.byte	19
	.word	1312
	.byte	0,19
	.word	1387
	.byte	0,0,6,0,0,16
	.word	4333
	.byte	17
	.word	4377
	.byte	6,0,16
	.word	4392
	.byte	17
	.word	4433
	.byte	6,0,16
	.word	4449
	.byte	17
	.word	4492
	.byte	6,0,16
	.word	4508
	.byte	17
	.word	4556
	.byte	6,0,16
	.word	4572
	.byte	17
	.word	4626
	.byte	7,18
	.word	1390
	.byte	17
	.word	1426
	.byte	17
	.word	1440
	.byte	17
	.word	1461
	.byte	19
	.word	1484
	.byte	0,6,0,0,16
	.word	4644
	.byte	17
	.word	4687
	.byte	6,0,16
	.word	4703
	.byte	17
	.word	4748
	.byte	6,0,16
	.word	4777
	.byte	17
	.word	4813
	.byte	6,0,16
	.word	4832
	.byte	17
	.word	4872
	.byte	6,0,16
	.word	4891
	.byte	6,0,16
	.word	4944
	.byte	17
	.word	4980
	.byte	7,18
	.word	1601
	.byte	17
	.word	1632
	.byte	17
	.word	1647
	.byte	19
	.word	1668
	.byte	0,6,0,0,16
	.word	5000
	.byte	17
	.word	5032
	.byte	7,18
	.word	690
	.byte	17
	.word	726
	.byte	17
	.word	740
	.byte	21
	.word	761
	.byte	18
	.word	613
	.byte	17
	.word	653
	.byte	17
	.word	667
	.byte	19
	.word	688
	.byte	0,19
	.word	762
	.byte	0,0,6,0,0,16
	.word	5053
	.byte	17
	.word	5082
	.byte	6,0,22
	.byte	'Dem_EvtAdvanceOperationCycle',0,15,77,6,1,1,1,1,5
	.byte	'operationCycleList',0,15,77,58
	.word	149
	.byte	0,16
	.word	5105
	.byte	17
	.word	5130
	.byte	17
	.word	5146
	.byte	6,0,16
	.word	5168
	.byte	17
	.word	5202
	.byte	6,0,16
	.word	5246
	.byte	17
	.word	5298
	.byte	17
	.word	5314
	.byte	6,0,16
	.word	5344
	.byte	17
	.word	5382
	.byte	17
	.word	5397
	.byte	17
	.word	5413
	.byte	6,0,16
	.word	5444
	.byte	17
	.word	5484
	.byte	17
	.word	5500
	.byte	6,0,16
	.word	5526
	.byte	17
	.word	5584
	.byte	6,0,16
	.word	5605
	.byte	17
	.word	5660
	.byte	6,0,16
	.word	5681
	.byte	17
	.word	5734
	.byte	6,0,16
	.word	5753
	.byte	17
	.word	5799
	.byte	6,0,16
	.word	5815
	.byte	17
	.word	5880
	.byte	7,18
	.word	2107
	.byte	17
	.word	2137
	.byte	19
	.word	2155
	.byte	0,6,18
	.word	2107
	.byte	17
	.word	2137
	.byte	19
	.word	2155
	.byte	0,6,18
	.word	5605
	.byte	17
	.word	5660
	.byte	19
	.word	5679
	.byte	0,6,18
	.word	5344
	.byte	17
	.word	5382
	.byte	17
	.word	5397
	.byte	17
	.word	5413
	.byte	19
	.word	5432
	.byte	0,6,0,0,16
	.word	5904
	.byte	17
	.word	5937
	.byte	6,0,16
	.word	5953
	.byte	17
	.word	5994
	.byte	6,0,16
	.word	6258
	.byte	17
	.word	6302
	.byte	6,0,16
	.word	6325
	.byte	17
	.word	6364
	.byte	7,18
	.word	6258
	.byte	17
	.word	6302
	.byte	19
	.word	6323
	.byte	0,6,0,0,16
	.word	6383
	.byte	17
	.word	6428
	.byte	6,0,16
	.word	6451
	.byte	17
	.word	6495
	.byte	6,0,16
	.word	6518
	.byte	17
	.word	6565
	.byte	6,0,16
	.word	6588
	.byte	17
	.word	6640
	.byte	6,0,16
	.word	6663
	.byte	17
	.word	6718
	.byte	6,0,16
	.word	6741
	.byte	17
	.word	6791
	.byte	6,0,16
	.word	6814
	.byte	17
	.word	6859
	.byte	7,18
	.word	6741
	.byte	17
	.word	6791
	.byte	19
	.word	6812
	.byte	0,6,0,0,16
	.word	6878
	.byte	17
	.word	6919
	.byte	17
	.word	6934
	.byte	6,0,16
	.word	6958
	.byte	17
	.word	7016
	.byte	6,0,16
	.word	7047
	.byte	17
	.word	7101
	.byte	6,0,16
	.word	7124
	.byte	17
	.word	7174
	.byte	6,0,16
	.word	7197
	.byte	17
	.word	7253
	.byte	6,0,16
	.word	7276
	.byte	17
	.word	7321
	.byte	6,0,16
	.word	7349
	.byte	17
	.word	7391
	.byte	6,0,16
	.word	7414
	.byte	17
	.word	7444
	.byte	6,0,16
	.word	7462
	.byte	17
	.word	7491
	.byte	6,0,16
	.word	7509
	.byte	6,0,16
	.word	7543
	.byte	6,0,16
	.word	7586
	.byte	17
	.word	7629
	.byte	6,0,16
	.word	7646
	.byte	17
	.word	7687
	.byte	6,0,16
	.word	7709
	.byte	17
	.word	7749
	.byte	6,0,16
	.word	7776
	.byte	17
	.word	7824
	.byte	6,0,16
	.word	7841
	.byte	17
	.word	7882
	.byte	6,0,16
	.word	7899
	.byte	17
	.word	7934
	.byte	17
	.word	7953
	.byte	17
	.word	7972
	.byte	6,0,16
	.word	7991
	.byte	17
	.word	8026
	.byte	7,18
	.word	4143
	.byte	17
	.word	4194
	.byte	19
	.word	4207
	.byte	0,6,0,0,16
	.word	8047
	.byte	17
	.word	8098
	.byte	6,0,16
	.word	8116
	.byte	17
	.word	8143
	.byte	17
	.word	8159
	.byte	17
	.word	8173
	.byte	6,0,22
	.byte	'Dem_EvMemStartOperationCycle',0,23,62,15,1,1,1,1,5
	.byte	'operationCycleList',0,23,62,67
	.word	149
	.byte	5
	.byte	'MemId',0,23,62,100
	.word	5225
	.byte	0,16
	.word	8193
	.byte	17
	.word	8236
	.byte	6,0,16
	.word	8266
	.byte	17
	.word	8308
	.byte	6,0,16
	.word	8329
	.byte	17
	.word	8367
	.byte	7,18
	.word	4209
	.byte	17
	.word	4259
	.byte	21
	.word	4272
	.byte	18
	.word	1314
	.byte	17
	.word	1351
	.byte	17
	.word	1365
	.byte	21
	.word	1386
	.byte	18
	.word	1236
	.byte	17
	.word	1277
	.byte	17
	.word	1291
	.byte	19
	.word	1312
	.byte	0,19
	.word	1387
	.byte	0,0,19
	.word	4273
	.byte	0,0,6,0,0,23,1,3
	.word	11789
	.byte	24
	.byte	'__codeptr',0,25,1,1
	.word	11791
	.byte	24
	.byte	'sint8',0,26,76,25
	.word	7039
	.byte	24
	.byte	'uint8',0,26,81,25
	.word	149
	.byte	24
	.byte	'sint16',0,26,86,25
	.word	4764
	.byte	24
	.byte	'uint16',0,26,91,25
	.word	1069
	.byte	2
	.byte	'int',0,4,5,24
	.byte	'sint32',0,26,96,24
	.word	11872
	.byte	24
	.byte	'uint32',0,26,106,24
	.word	1580
	.byte	2
	.byte	'unsigned long long int',0,8,7,24
	.byte	'uint64',0,26,111,30
	.word	11909
	.byte	24
	.byte	'boolean',0,26,127,25
	.word	149
	.byte	24
	.byte	'uint8_least',0,26,137,1,25
	.word	5225
	.byte	24
	.byte	'uint16_least',0,26,147,1,25
	.word	5225
	.byte	24
	.byte	'StatusType',0,27,191,1,27
	.word	149
	.byte	24
	.byte	'Std_ReturnType',0,27,199,1,15
	.word	149
	.byte	11,27,206,1,9,8,12
	.byte	'vendorID',0
	.word	1069
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	1069
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	149
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	149
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	149
	.byte	1,2,35,6,0,24
	.byte	'Std_VersionInfoType',0,27,213,1,3
	.word	12053
	.byte	24
	.byte	'Dem_ClientRequestType',0,28,46,16
	.word	1069
	.byte	24
	.byte	'Dem_ClientResultType',0,28,47,16
	.word	1069
	.byte	24
	.byte	'Dem_ClientSelectionType',0,28,48,16
	.word	1580
	.byte	24
	.byte	'Dem_ClientPriorityType',0,28,50,15
	.word	149
	.byte	24
	.byte	'Dem_ComponentIdType',0,29,20,15
	.word	149
	.byte	24
	.byte	'PduIdType',0,30,22,19
	.word	1069
	.byte	24
	.byte	'PduLengthType',0,30,26,19
	.word	1069
	.byte	25,31,113,9,4,26
	.byte	'TP_DATACONF',0,0,26
	.byte	'TP_DATARETRY',0,1,26
	.byte	'TP_CONFPENDING',0,2,0,24
	.byte	'TpDataStateType',0,31,118,3
	.word	12393
	.byte	24
	.byte	'Can_IdType',0,32,32,16
	.word	1580
	.byte	24
	.byte	'Can_HwHandleType',0,32,43,16
	.word	1069
	.byte	11,33,93,9,8,12
	.byte	'Class',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'TIN',0
	.word	149
	.byte	1,2,35,1,12
	.byte	'ReturnAddress',0
	.word	1580
	.byte	4,2,35,4,0,24
	.byte	'OsTrapInfoType',0,33,97,3
	.word	12513
	.byte	14,68
	.word	1580
	.byte	15,16,0,11,33,154,1,9,68,12
	.byte	'store',0
	.word	12593
	.byte	68,2,35,0,0,14,68
	.word	12602
	.byte	15,0,0,24
	.byte	'Os_JumpBufType',0,33,156,1,3
	.word	12624
	.byte	24
	.byte	'Os_StackTraceType',0,33,174,1,18
	.word	1580
	.byte	11,33,175,1,9,8,12
	.byte	'sp',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'ctx',0
	.word	1580
	.byte	4,2,35,4,0,24
	.byte	'Os_StackValueType',0,33,175,1,63
	.word	12684
	.byte	24
	.byte	'Os_StackSizeType',0,33,176,1,27
	.word	12684
	.byte	27,1,1,3
	.word	12769
	.byte	24
	.byte	'Os_VoidVoidFunctionType',0,33,179,1,16
	.word	12772
	.byte	24
	.byte	'ApplicationType',0,33,193,1,23
	.word	149
	.byte	28
	.byte	'Os_ApplicationConfigurationType_s',0,33,198,1,16,2,12
	.byte	'app_id',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,1,0,24
	.byte	'Os_ApplicationConfigurationType',0,33,201,1,3
	.word	12835
	.byte	24
	.byte	'Os_CoreStateType',0,33,203,1,16
	.word	1580
	.byte	24
	.byte	'AreaIdType',0,33,204,1,16
	.word	1069
	.byte	24
	.byte	'Os_PeripheralAddressType',0,33,212,1,22
	.word	1580
	.byte	24
	.byte	'TickType',0,33,221,1,22
	.word	1580
	.byte	24
	.byte	'Os_StopwatchTickType',0,33,225,1,22
	.word	1580
	.byte	24
	.byte	'Os_Lockable',0,33,234,1,18
	.word	1596
	.byte	24
	.byte	'CoreIdType',0,33,236,1,16
	.word	1069
	.byte	24
	.byte	'SpinlockIdType',0,33,237,1,16
	.word	1069
	.byte	25,33,239,1,9,4,26
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,26
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,24
	.byte	'TryToGetSpinlockType',0,33,239,1,74
	.word	13142
	.byte	25,33,174,2,9,4,26
	.byte	'APPLICATION_ACCESSIBLE',0,0,26
	.byte	'APPLICATION_RESTARTING',0,1,26
	.byte	'APPLICATION_TERMINATED',0,2,0,24
	.byte	'ApplicationStateType',0,33,174,2,92
	.word	13235
	.byte	29
	.byte	'void',0,3
	.word	13347
	.byte	30,1,1,31
	.word	149
	.byte	31
	.word	13353
	.byte	0,3
	.word	13358
	.byte	24
	.byte	'Os_FunctionEntryType',0,33,183,2,16
	.word	13372
	.byte	28
	.byte	'Os_MeterInfoType_s',0,33,193,2,16,48,12
	.byte	'elapsed',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'previous',0
	.word	1580
	.byte	4,2,35,4,12
	.byte	'max',0
	.word	1580
	.byte	4,2,35,8,12
	.byte	'cumulative',0
	.word	1580
	.byte	4,2,35,12,12
	.byte	'stackbase',0
	.word	12684
	.byte	8,2,35,16,12
	.byte	'stackusage',0
	.word	12684
	.byte	8,2,35,24,12
	.byte	'stackmax',0
	.word	12684
	.byte	8,2,35,32,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,40,0,24
	.byte	'Os_MeterInfoType',0,33,202,2,3
	.word	13407
	.byte	3
	.word	13407
	.byte	24
	.byte	'Os_MeterInfoRefType',0,33,203,2,50
	.word	13605
	.byte	24
	.byte	'EventMaskType',0,33,206,2,15
	.word	149
	.byte	24
	.byte	'Os_imaskType',0,33,211,2,16
	.word	1580
	.byte	28
	.byte	'Os_ISRDynType_s',0,33,213,2,16,48,12
	.byte	'meter',0
	.word	13407
	.byte	48,2,35,0,0,24
	.byte	'Os_ISRDynType',0,33,215,2,3
	.word	13684
	.byte	3
	.word	13684
	.byte	9
	.word	13745
	.byte	28
	.byte	'Os_ISRType_s',0,33,216,2,16,24,12
	.byte	'entry_function',0
	.word	12777
	.byte	4,2,35,0,12
	.byte	'dynamic',0
	.word	13750
	.byte	4,2,35,4,12
	.byte	'imask',0
	.word	1580
	.byte	4,2,35,8,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,12,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,20,12
	.byte	'application',0
	.word	149
	.byte	1,2,35,21,0,24
	.byte	'Os_ISRType',0,33,223,2,3
	.word	13755
	.byte	3
	.word	12769
	.byte	9
	.word	13755
	.byte	3
	.word	13914
	.byte	24
	.byte	'ISRType',0,33,224,2,46
	.word	13919
	.byte	24
	.byte	'Os_bitmask',0,33,239,2,22
	.word	1580
	.byte	24
	.byte	'Os_pset0Type',0,33,240,2,20
	.word	1580
	.byte	24
	.byte	'Os_pset1Type',0,33,241,2,20
	.word	1580
	.byte	24
	.byte	'Os_pset2Type',0,33,242,2,20
	.word	1580
	.byte	13,33,243,2,9,4,12
	.byte	'p0',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'p1',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'p2',0
	.word	1580
	.byte	4,2,35,0,0,24
	.byte	'Os_psetType',0,33,247,2,3
	.word	14027
	.byte	13,33,249,2,9,4,12
	.byte	't0',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	't1',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	't2',0
	.word	1580
	.byte	4,2,35,0,0,24
	.byte	'Os_tpmaskType',0,33,253,2,3
	.word	14091
	.byte	24
	.byte	'Os_ActivationCountType',0,33,254,2,23
	.word	149
	.byte	28
	.byte	'Os_TaskDynType_s',0,33,128,3,16,120,12
	.byte	'terminate_jump_buf',0
	.word	12633
	.byte	68,2,35,0,12
	.byte	'meter',0
	.word	13407
	.byte	48,2,35,68,12
	.byte	'activation_count',0
	.word	149
	.byte	1,2,35,116,0,24
	.byte	'Os_TaskDynType',0,33,132,3,3
	.word	14189
	.byte	14,68
	.word	12602
	.byte	15,0,0,3
	.word	14189
	.byte	9
	.word	14315
	.byte	28
	.byte	'Os_TaskType_s',0,33,134,3,16,40,12
	.byte	'dynamic',0
	.word	14320
	.byte	4,2,35,0,12
	.byte	'entry_function',0
	.word	12777
	.byte	4,2,35,4,12
	.byte	'pset',0
	.word	14027
	.byte	4,2,35,8,12
	.byte	'base_tpmask',0
	.word	14091
	.byte	4,2,35,12,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,16,12
	.byte	'core_id',0
	.word	1069
	.byte	2,2,35,20,12
	.byte	'index',0
	.word	1580
	.byte	4,2,35,24,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,28,12
	.byte	'activation_count',0
	.word	149
	.byte	1,2,35,36,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,37,12
	.byte	'application',0
	.word	149
	.byte	1,2,35,38,0,24
	.byte	'Os_TaskType',0,33,146,3,3
	.word	14325
	.byte	9
	.word	14325
	.byte	3
	.word	14575
	.byte	24
	.byte	'TaskType',0,33,147,3,47
	.word	14580
	.byte	32
	.byte	'Os_TaskStateType',0,33,155,3,6,4,26
	.byte	'SUSPENDED',0,0,26
	.byte	'READY',0,1,26
	.byte	'WAITING',0,2,26
	.byte	'RUNNING',0,3,0,24
	.byte	'TaskStateType',0,33,156,3,31
	.word	14603
	.byte	13,33,167,3,3,4,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,0,0,28
	.byte	'Os_ResourceDynType_s',0,33,166,3,16,4,12
	.byte	'saved_priority',0
	.word	14690
	.byte	4,2,35,0,0,24
	.byte	'Os_ResourceDynType',0,33,170,3,3
	.word	14713
	.byte	3
	.word	14713
	.byte	9
	.word	14793
	.byte	28
	.byte	'Os_ResourceType_s',0,33,171,3,16,12,12
	.byte	'dynamic',0
	.word	14798
	.byte	4,2,35,0,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,4,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,8,0,24
	.byte	'Os_ResourceType',0,33,175,3,3
	.word	14803
	.byte	11,33,181,3,9,12,12
	.byte	'maxallowedvalue',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	1580
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	1580
	.byte	4,2,35,8,0,24
	.byte	'AlarmBaseType',0,33,185,3,3
	.word	14902
	.byte	11,33,206,3,9,8,12
	.byte	'Running',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'Pending',0
	.word	149
	.byte	1,2,35,1,12
	.byte	'Delay',0
	.word	1580
	.byte	4,2,35,4,0,24
	.byte	'Os_CounterStatusType',0,33,210,3,3
	.word	14997
	.byte	33
	.word	149
	.byte	1,1,3
	.word	15083
	.byte	24
	.byte	'Os_CounterIncrAdvType',0,33,217,3,22
	.word	15090
	.byte	28
	.byte	's_swd',0,33,222,3,12,4,12
	.byte	'count',0
	.word	1580
	.byte	4,2,35,0,0,13,33,221,3,3,4,12
	.byte	'sw',0
	.word	15126
	.byte	4,2,35,0,0,28
	.byte	'Os_CounterDynType_s',0,33,220,3,16,4,12
	.byte	'type_dependent',0
	.word	15154
	.byte	4,2,35,0,0,24
	.byte	'Os_CounterDynType',0,33,226,3,3
	.word	15173
	.byte	3
	.word	15173
	.byte	9
	.word	15251
	.byte	28
	.byte	'Os_CounterType_s',0,33,227,3,16,28,12
	.byte	'dynamic',0
	.word	15256
	.byte	4,2,35,0,12
	.byte	'advincr',0
	.word	15095
	.byte	4,2,35,4,12
	.byte	'base',0
	.word	14902
	.byte	12,2,35,8,12
	.byte	'core',0
	.word	13353
	.byte	4,2,35,20,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,24,12
	.byte	'application',0
	.word	149
	.byte	1,2,35,25,0,24
	.byte	'Os_CounterType',0,33,234,3,3
	.word	15261
	.byte	3
	.word	15083
	.byte	9
	.word	15261
	.byte	3
	.word	15413
	.byte	24
	.byte	'CounterType',0,33,235,3,52
	.word	15418
	.byte	32
	.byte	'Os_ScheduleTableStatusType',0,33,240,3,6,4,26
	.byte	'SCHEDULETABLE_STOPPED',0,0,26
	.byte	'SCHEDULETABLE_NEXT',0,1,26
	.byte	'SCHEDULETABLE_WAITING',0,2,26
	.byte	'SCHEDULETABLE_RUNNING',0,3,26
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,24
	.byte	'ScheduleTableStatusType',0,33,241,3,41
	.word	15444
	.byte	9
	.word	.L286-.L67
	.byte	3
	.word	15644
	.byte	24
	.byte	'ScheduleTableType',0,33,128,4,58
	.word	15649
	.byte	28
	.byte	'Os_ScheduleTableDynType_s',0,33,130,4,16,16,12
	.byte	'match',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'next',0
	.word	15654
	.byte	4,2,35,4,12
	.byte	'state',0
	.word	15444
	.byte	4,2,35,8,12
	.byte	'config',0
	.word	1069
	.byte	2,2,35,12,0,3
	.word	15681
	.byte	9
	.word	15774
.L286:
	.byte	28
	.byte	'Os_ScheduleTableType_s',0,33,247,3,16,16,12
	.byte	'dynamic',0
	.word	15779
	.byte	4,2,35,0,12
	.byte	'counter',0
	.word	15423
	.byte	4,2,35,4,12
	.byte	'repeat',0
	.word	149
	.byte	1,2,35,8,12
	.byte	'config',0
	.word	1069
	.byte	2,2,35,10,12
	.byte	'initial',0
	.word	149
	.byte	1,2,35,12,12
	.byte	'access',0
	.word	149
	.byte	1,2,35,13,12
	.byte	'application',0
	.word	149
	.byte	1,2,35,14,0,24
	.byte	'Os_ScheduleTableType',0,33,255,3,3
	.word	15784
	.byte	9
	.word	15784
	.byte	3
	.word	15964
	.byte	9
	.word	15261
	.byte	3
	.word	15974
	.byte	10
	.word	13077
	.byte	10
	.word	14027
	.byte	10
	.word	13924
	.byte	10
	.word	14585
	.byte	10
	.word	14091
	.byte	10
	.word	149
	.byte	10
	.word	14585
	.byte	28
	.byte	'Os_ControlledCoreType_s',0,33,251,6,16,112,12
	.byte	'TrapInfo',0
	.word	12513
	.byte	8,2,35,0,12
	.byte	'lock_taskaccess',0
	.word	15984
	.byte	4,2,35,8,12
	.byte	'ReadyTasks',0
	.word	15989
	.byte	4,2,35,12,12
	.byte	'RunningISR',0
	.word	15994
	.byte	4,2,35,16,12
	.byte	'RunningTask',0
	.word	15999
	.byte	4,2,35,20,12
	.byte	'RunningTPMask',0
	.word	16004
	.byte	4,2,35,24,12
	.byte	'CurrentMeteredObject',0
	.word	13610
	.byte	4,2,35,28,12
	.byte	'IdleMeter',0
	.word	13407
	.byte	48,2,35,32,12
	.byte	'AppAccess',0
	.word	149
	.byte	1,2,35,80,12
	.byte	'AppOverride',0
	.word	16009
	.byte	1,2,35,81,12
	.byte	'GetStackValueAdjust',0
	.word	12684
	.byte	8,2,35,84,12
	.byte	'InErrorHook',0
	.word	149
	.byte	1,2,35,92,12
	.byte	'ChainTaskRef',0
	.word	16014
	.byte	4,2,35,96,12
	.byte	'GetStackUsageAdjust',0
	.word	12684
	.byte	8,2,35,100,12
	.byte	'InProtectionHook',0
	.word	149
	.byte	1,2,35,108,12
	.byte	'CoreIsActive',0
	.word	149
	.byte	1,2,35,109,12
	.byte	'InShutdownHook',0
	.word	149
	.byte	1,2,35,110,0,24
	.byte	'Os_ControlledCoreType',0,33,141,7,3
	.word	16019
	.byte	3
	.word	1580
	.byte	9
	.word	13755
	.byte	3
	.word	16475
	.byte	9
	.word	14325
	.byte	3
	.word	16485
	.byte	3
	.word	13407
	.byte	28
	.byte	'Os_AnyCoreType_s',0,33,151,7,16,96,12
	.byte	'DisableAllImask',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'SuspendAllImask',0
	.word	1580
	.byte	4,2,35,4,12
	.byte	'SuspendOSImask',0
	.word	1580
	.byte	4,2,35,8,12
	.byte	'DisableAllCount',0
	.word	1580
	.byte	4,2,35,12,12
	.byte	'SuspendAllCount',0
	.word	1580
	.byte	4,2,35,16,12
	.byte	'SuspendOSCount',0
	.word	1580
	.byte	4,2,35,20,12
	.byte	'RestartJumpBuf',0
	.word	12633
	.byte	68,2,35,24,12
	.byte	'Restartable',0
	.word	149
	.byte	1,2,35,92,0,24
	.byte	'Os_AnyCoreType',0,33,160,7,3
	.word	16500
	.byte	24
	.byte	'Can_TxObjPriorityClassType',0,34,219,3,16
	.word	1580
	.byte	28
	.byte	'Can_TxHwObjectConfigType',0,34,231,3,16,8,12
	.byte	'MsgObjId',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	149
	.byte	1,2,35,1,12
	.byte	'TxObjPriorityClass',0
	.word	1580
	.byte	4,2,35,4,0,24
	.byte	'Can_TxHwObjectConfigType',0,34,252,3,3
	.word	16777
	.byte	28
	.byte	'Can_RxHwObjectConfigType',0,34,129,4,16,12,12
	.byte	'MaskRef',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'MsgId',0
	.word	1580
	.byte	4,2,35,4,12
	.byte	'MsgObjId',0
	.word	149
	.byte	1,2,35,8,12
	.byte	'HwControllerId',0
	.word	149
	.byte	1,2,35,9,0,24
	.byte	'Can_RxHwObjectConfigType',0,34,147,4,3
	.word	16913
	.byte	14,4
	.word	149
	.byte	15,3,0,28
	.byte	'Can_ControllerMOMapConfigType',0,34,181,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	17053
	.byte	4,2,35,0,0,24
	.byte	'Can_ControllerMOMapConfigType',0,34,184,4,3
	.word	17062
	.byte	28
	.byte	'Can_NPCRValueType',0,34,188,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	1069
	.byte	2,2,35,0,0,24
	.byte	'Can_NPCRValueType',0,34,191,4,3
	.word	17163
	.byte	28
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,34,194,4,16,8,12
	.byte	'CanControllerBaudrate',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	1069
	.byte	2,2,35,4,0,24
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,34,198,4,3
	.word	17238
	.byte	9
	.word	17238
	.byte	3
	.word	17403
	.byte	28
	.byte	'Can_BaudrateConfigPtrType',0,34,201,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	17408
	.byte	4,2,35,0,0,24
	.byte	'Can_BaudrateConfigPtrType',0,34,204,4,3
	.word	17413
	.byte	28
	.byte	'Can_EventHandlingType',0,34,226,4,16,4,12
	.byte	'CanEventType',0
	.word	17053
	.byte	4,2,35,0,0,24
	.byte	'Can_EventHandlingType',0,34,229,4,3
	.word	17513
	.byte	24
	.byte	'Rte_TransformerErrorCode',0,35,130,1,15
	.word	149
	.byte	24
	.byte	'Rte_TransformerClass',0,35,131,1,15
	.word	149
	.byte	11,35,168,1,9,12,12
	.byte	'in',0
	.word	13353
	.byte	4,2,35,0,12
	.byte	'out',0
	.word	13353
	.byte	4,2,35,4,12
	.byte	'used',0
	.word	1069
	.byte	2,2,35,8,12
	.byte	'lost_data',0
	.word	149
	.byte	1,2,35,10,0,24
	.byte	'Rte_QDynType',0,35,173,1,3
	.word	17659
	.byte	25,35,175,1,9,4,26
	.byte	'RTE_DRA',0,0,26
	.byte	'RTE_WOWP',0,1,26
	.byte	'RTE_TASK',0,2,26
	.byte	'RTE_ARE',0,3,26
	.byte	'RTE_EV',0,4,26
	.byte	'RTE_MSI',0,5,0,24
	.byte	'Rte_NotificationType',0,35,182,1,3
	.word	17746
	.byte	3
	.word	17659
	.byte	28
	.byte	'Rte_QCmnType',0,35,184,1,16,24,12
	.byte	'dynamic',0
	.word	17844
	.byte	4,2,35,0,12
	.byte	'copy',0
	.word	149
	.byte	1,2,35,4,12
	.byte	'queue_size',0
	.word	1069
	.byte	2,2,35,6,12
	.byte	'element_size',0
	.word	1069
	.byte	2,2,35,8,12
	.byte	'buffer_start',0
	.word	13353
	.byte	4,2,35,12,12
	.byte	'buffer_end',0
	.word	13353
	.byte	4,2,35,16,12
	.byte	'notification_type',0
	.word	17746
	.byte	4,2,35,20,0,24
	.byte	'Rte_QCmnType',0,35,192,1,3
	.word	17849
	.byte	24
	.byte	'Rte_AlarmRefType',0,35,224,1,32
	.word	1580
	.byte	24
	.byte	'Rte_AlarmIndexType',0,35,226,1,32
	.word	1069
	.byte	14,128,8
	.word	149
	.byte	15,255,7,0,24
	.byte	'Impl_NVM_DstPtrType_1024',0,36,50,15
	.word	18087
	.byte	24
	.byte	'CanIf_u32_impl',0,36,69,16
	.word	1580
	.byte	24
	.byte	'CanIf_u16_impl',0,36,71,16
	.word	1069
	.byte	24
	.byte	'CanIf_u8_impl',0,36,73,15
	.word	149
	.byte	24
	.byte	'CanIf_ControllerModeType_Enum_impl',0,36,88,15
	.word	149
	.byte	24
	.byte	'CanIf_PduModeType_Enum_impl',0,36,90,15
	.word	149
	.byte	11,36,92,9,2,12
	.byte	'DeviceMode',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'ChannelMode',0
	.word	149
	.byte	1,2,35,1,0,24
	.byte	'CanIf_ControllerStateType_struct_impl',0,36,95,3
	.word	18278
	.byte	24
	.byte	'CanIf_NotifStatusType_Enum_impl',0,36,100,15
	.word	149
	.byte	24
	.byte	'CanSM_boolean_Impl',0,36,120,15
	.word	149
	.byte	24
	.byte	'CanSM_u8_Impl',0,36,123,15
	.word	149
	.byte	24
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,36,128,1,15
	.word	149
	.byte	24
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,36,132,1,15
	.word	149
	.byte	24
	.byte	'CanSM_u16_Impl',0,36,136,1,16
	.word	1069
	.byte	24
	.byte	'CanSM_TimerStateType_Enum_impl',0,36,138,1,15
	.word	149
	.byte	11,36,140,1,9,4,12
	.byte	'cntTick_u16',0
	.word	1069
	.byte	2,2,35,0,12
	.byte	'stTimer',0
	.word	149
	.byte	1,2,35,2,0,24
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,36,143,1,3
	.word	18619
	.byte	24
	.byte	'Com_impl_u16',0,36,154,1,16
	.word	1069
	.byte	24
	.byte	'Com_impl_u8',0,36,157,1,15
	.word	149
	.byte	24
	.byte	'ComM_uint32_Impl',0,36,173,1,16
	.word	1580
	.byte	24
	.byte	'ComM_uint16_Impl',0,36,175,1,16
	.word	1069
	.byte	24
	.byte	'ComM_uint8_Impl',0,36,177,1,15
	.word	149
	.byte	24
	.byte	'ComM_bool_Impl',0,36,179,1,15
	.word	149
	.byte	11,36,181,1,9,24,12
	.byte	'ChannelState_e',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'LightTimeoutCtr_u32',0
	.word	1580
	.byte	4,2,35,4,12
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	1069
	.byte	2,2,35,8,12
	.byte	'ChannelMode_u8',0
	.word	149
	.byte	1,2,35,10,12
	.byte	'BusSmMode_u8',0
	.word	149
	.byte	1,2,35,11,12
	.byte	'UserRequestCtr_u8',0
	.word	149
	.byte	1,2,35,12,12
	.byte	'PassiveRequestState_u8',0
	.word	149
	.byte	1,2,35,13,12
	.byte	'PncRequestCtr_u8',0
	.word	149
	.byte	1,2,35,14,12
	.byte	'InhibitionReqStatus_u8',0
	.word	149
	.byte	1,2,35,15,12
	.byte	'NmNetworkRequestStatus_b',0
	.word	149
	.byte	1,2,35,16,12
	.byte	'DiagnosticRequestState_b',0
	.word	149
	.byte	1,2,35,17,12
	.byte	'CommunicationAllowed_b',0
	.word	149
	.byte	1,2,35,18,12
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	149
	.byte	1,2,35,19,12
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	149
	.byte	1,2,35,20,12
	.byte	'NmNetworkModeStatus_b',0
	.word	149
	.byte	1,2,35,21,0,24
	.byte	'ComM_ChannelStruct_Impl',0,36,197,1,3
	.word	18851
	.byte	11,36,206,1,9,10,12
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	1069
	.byte	2,2,35,0,12
	.byte	'LimitToNoComCtr_u16',0
	.word	1069
	.byte	2,2,35,2,12
	.byte	'RequestedUserMode_t',0
	.word	149
	.byte	1,2,35,4,12
	.byte	'IndicatedUserMode_t',0
	.word	149
	.byte	1,2,35,5,12
	.byte	'numChannelsInFullCom_u8',0
	.word	149
	.byte	1,2,35,6,12
	.byte	'numChannelsInSilentCom_u8',0
	.word	149
	.byte	1,2,35,7,12
	.byte	'numChannelsInNoCom_u8',0
	.word	149
	.byte	1,2,35,8,0,24
	.byte	'ComM_UserStruct_Impl',0,36,214,1,3
	.word	19355
	.byte	24
	.byte	'Dcm_IOOperationResponseType',0,36,252,1,15
	.word	149
	.byte	24
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	36,138,2,15
	.word	149
	.byte	24
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,36,146,2,15
	.word	149
	.byte	24
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,36,150,2,15
	.word	149
	.byte	24
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,36,154,2,15
	.word	149
	.byte	24
	.byte	'Dem_DTCFormatType',0,36,160,2,15
	.word	149
	.byte	24
	.byte	'Dem_DTCOriginType',0,36,162,2,15
	.word	149
	.byte	24
	.byte	'Dem_EventIdType',0,36,168,2,16
	.word	1069
	.byte	24
	.byte	'Dem_EventStatusType',0,36,170,2,15
	.word	149
	.byte	24
	.byte	'Dem_InitMonitorReasonType',0,36,176,2,15
	.word	149
	.byte	24
	.byte	'Dem_OperationCycleIdType',0,36,179,2,15
	.word	149
	.byte	24
	.byte	'Dem_OperationCycleStateType',0,36,181,2,15
	.word	149
	.byte	24
	.byte	'Dem_UdsStatusByteType',0,36,185,2,15
	.word	149
	.byte	24
	.byte	'NvM_BlockIdType',0,36,215,2,16
	.word	1069
	.byte	24
	.byte	'NvM_RequestResultType',0,36,225,2,15
	.word	149
	.byte	24
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,36,243,3,34
	.word	18098
	.byte	14,128,8
	.word	149
	.byte	15,255,7,0,24
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,36,246,3,34
	.word	18098
	.byte	24
	.byte	'Dem_DTCGroupIdType',0,37,49,15
	.word	149
	.byte	24
	.byte	'Dem_DtcIdType',0,37,50,16
	.word	1069
	.byte	24
	.byte	'Dem_ClientIdType',0,37,53,15
	.word	149
	.byte	24
	.byte	'Dem_DtcCodeType',0,37,55,16
	.word	1580
	.byte	24
	.byte	'Dem_boolean_least',0,37,60,17
	.word	149
	.byte	24
	.byte	'Dem_EventCategoryType',0,37,62,15
	.word	149
	.byte	24
	.byte	'Dem_DTCSeverityType',0,37,217,1,15
	.word	149
	.byte	24
	.byte	'Dem_DebugDataType',0,37,131,3,16
	.word	1580
	.byte	24
	.byte	'Dem_DTCKindType',0,37,145,3,16
	.word	149
	.byte	24
	.byte	'Dem_TriggerType',0,37,167,3,15
	.word	149
	.byte	24
	.byte	'Dem_EnCoList',0,38,31,15
	.word	149
	.byte	24
	.byte	'Dem_OperationCycleList',0,39,23,15
	.word	149
	.byte	24
	.byte	'Dem_StoCoList',0,40,32,15
	.word	149
	.byte	24
	.byte	'Rte_TaskRefType',0,41,184,1,32
	.word	14585
	.byte	24
	.byte	'Rte_EventRefType',0,41,185,1,32
	.word	149
	.byte	24
	.byte	'Rte_EventType',0,41,186,1,32
	.word	1580
	.byte	24
	.byte	'Rte_REActCounterType',0,41,252,1,15
	.word	149
	.byte	3
	.word	149
	.byte	24
	.byte	'Rte_REActCounterRefType',0,41,253,1,58
	.word	20912
	.byte	11,41,255,1,9,8,12
	.byte	'task',0
	.word	20808
	.byte	4,2,35,0,12
	.byte	'acnt',0
	.word	20917
	.byte	4,2,35,4,0,24
	.byte	'Rte_REContainerType',0,41,130,2,3
	.word	20950
	.byte	9
	.word	14325
	.byte	3
	.word	21014
	.byte	3
	.word	149
	.byte	9
	.word	20950
	.byte	3
	.word	21029
	.byte	24
	.byte	'Rte_REContainerRefType',0,41,132,2,60
	.word	21034
	.byte	24
	.byte	'Rte_MSICounterType',0,41,149,2,16
	.word	1069
	.byte	3
	.word	1069
	.byte	24
	.byte	'Rte_MSICounterRefType',0,41,150,2,56
	.word	21099
	.byte	24
	.byte	'Rte_MSIPendingFlagType',0,41,152,2,17
	.word	149
	.byte	3
	.word	149
	.byte	24
	.byte	'Rte_MSIPendingFlagRefType',0,41,153,2,60
	.word	21167
	.byte	11,41,163,2,9,24,12
	.byte	'counter',0
	.word	21104
	.byte	4,2,35,0,12
	.byte	'incCounter',0
	.word	149
	.byte	1,2,35,4,12
	.byte	'pending',0
	.word	21172
	.byte	4,2,35,8,12
	.byte	'osTask',0
	.word	20808
	.byte	4,2,35,12,12
	.byte	'acnt',0
	.word	20917
	.byte	4,2,35,16,12
	.byte	'osEvent',0
	.word	149
	.byte	1,2,35,20,12
	.byte	'MSIInit',0
	.word	1069
	.byte	2,2,35,22,0,24
	.byte	'Rte_MSITableEntry',0,41,172,2,3
	.word	21207
	.byte	3
	.word	1069
	.byte	3
	.word	149
	.byte	24
	.byte	'Rte_TaskArrayIndex',0,41,179,2,16
	.word	149
	.byte	24
	.byte	'Rte_NrWaitingTasks',0,41,180,2,16
	.word	149
	.byte	11,41,182,2,9,4,12
	.byte	'pending',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'count',0
	.word	149
	.byte	1,2,35,1,12
	.byte	'firstWaitingTask',0
	.word	149
	.byte	1,2,35,2,0,24
	.byte	'Rte_WaitableDatum',0,41,186,2,3
	.word	21425
	.byte	3
	.word	21425
	.byte	11,41,226,2,9,12,12
	.byte	'event_id',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'wd',0
	.word	21517
	.byte	4,2,35,4,12
	.byte	'timeout',0
	.word	1580
	.byte	4,2,35,8,0,24
	.byte	'Rte_WOWP_NotificationType',0,41,230,2,3
	.word	21522
	.byte	9
	.word	21522
	.byte	3
	.word	21611
	.byte	24
	.byte	'Rte_WOWP_NotificationRefType',0,41,232,2,66
	.word	21616
	.byte	24
	.byte	'Rte_ARE_NotificationType',0,41,234,2,29
	.word	20950
	.byte	28
	.byte	'Rte_QTaskType',0,41,243,2,16,28,12
	.byte	'cmn',0
	.word	17849
	.byte	24,2,35,0,12
	.byte	'task',0
	.word	20808
	.byte	4,2,35,24,0,24
	.byte	'Rte_QTaskType',0,41,246,2,3
	.word	21693
	.byte	28
	.byte	'Rte_QREType',0,41,250,2,16,28,12
	.byte	'cmn',0
	.word	17849
	.byte	24,2,35,0,12
	.byte	're',0
	.word	21039
	.byte	4,2,35,24,0,24
	.byte	'Rte_QREType',0,41,253,2,3
	.word	21764
	.byte	9
	.word	20950
	.byte	3
	.word	21829
	.byte	28
	.byte	'Rte_QWWPType',0,41,129,3,16,28,12
	.byte	'cmn',0
	.word	17849
	.byte	24,2,35,0,12
	.byte	'wwp',0
	.word	21621
	.byte	4,2,35,24,0,24
	.byte	'Rte_QWWPType',0,41,132,3,3
	.word	21839
	.byte	9
	.word	21522
	.byte	3
	.word	21907
	.byte	28
	.byte	'Rte_QEvType',0,41,136,3,16,36,12
	.byte	'cmn',0
	.word	17849
	.byte	24,2,35,0,12
	.byte	'task',0
	.word	20808
	.byte	4,2,35,24,12
	.byte	'mask',0
	.word	149
	.byte	1,2,35,28,12
	.byte	'acnt',0
	.word	20917
	.byte	4,2,35,32,0,24
	.byte	'Rte_QEvType',0,41,141,3,3
	.word	21917
	.byte	28
	.byte	'Rte_QMSIType',0,41,145,3,16,48,12
	.byte	'cmn',0
	.word	17849
	.byte	24,2,35,0,12
	.byte	'task',0
	.word	20808
	.byte	4,2,35,24,12
	.byte	'mask',0
	.word	149
	.byte	1,2,35,28,12
	.byte	'acnt',0
	.word	20917
	.byte	4,2,35,32,12
	.byte	'msiCounter',0
	.word	21104
	.byte	4,2,35,36,12
	.byte	'msiPending',0
	.word	21172
	.byte	4,2,35,40,12
	.byte	'msiLimit',0
	.word	1069
	.byte	2,2,35,44,0,24
	.byte	'Rte_QMSIType',0,41,153,3,3
	.word	22012
	.byte	24
	.byte	'rba_BswSrv_uint64',0,4,66,28
	.word	11909
	.byte	11,6,16,9,2,12
	.byte	'IsAllowedToBeStartedDirectly',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'DependentCycleMask',0
	.word	149
	.byte	1,2,35,1,0,24
	.byte	'Dem_Cfg_OperationCycleType',0,6,20,3
	.word	22193
	.byte	14,2
	.word	22193
	.byte	15,0,0,9
	.word	22300
	.byte	34
	.byte	'Dem_Cfg_OperationCycle',0,6,26,41
	.word	22309
	.byte	1,1,24
	.byte	'Dem_EvtStateType',0,42,151,1,15
	.word	149
	.byte	24
	.byte	'Dem_EventIdIterator',0,9,27,22
	.word	5225
	.byte	24
	.byte	'Dem_DtcIdIterator',0,9,197,1,22
	.word	5225
	.byte	24
	.byte	'Dem_DtcGroupIdIterator',0,9,230,1,21
	.word	5225
	.byte	9
	.word	1069
	.byte	3
	.word	22460
	.byte	11,9,171,2,9,8,12
	.byte	'it',0
	.word	22465
	.byte	4,2,35,0,12
	.byte	'end',0
	.word	22465
	.byte	4,2,35,4,0,24
	.byte	'Dem_EventIdListIterator',0,9,174,2,3
	.word	22470
	.byte	11,9,213,2,9,4,12
	.byte	'it',0
	.word	1069
	.byte	2,2,35,0,12
	.byte	'end',0
	.word	1069
	.byte	2,2,35,2,0,24
	.byte	'Dem_DtcIdListIterator',0,9,216,2,3
	.word	22535
	.byte	25,43,31,9,4,26
	.byte	'MEMIF_JOB_OK',0,0,26
	.byte	'MEMIF_JOB_FAILED',0,1,26
	.byte	'MEMIF_JOB_PENDING',0,2,26
	.byte	'MEMIF_JOB_CANCELED',0,3,26
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,26
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,24
	.byte	'MemIf_JobResultType',0,43,39,2
	.word	22598
	.byte	25,44,49,9,4,26
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,26
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,26
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,26
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,26
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,26
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,26
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,24
	.byte	'NvM_Prv_Activities_ten',0,44,58,3
	.word	22756
	.byte	25,44,104,9,4,26
	.byte	'NvM_Prv_idJob_Idle_e',0,0,26
	.byte	'NvM_Prv_idJob_Read_e',0,1,26
	.byte	'NvM_Prv_idJob_Write_e',0,2,26
	.byte	'NvM_Prv_idJob_Erase_e',0,3,26
	.byte	'NvM_Prv_idJob_Restore_e',0,4,26
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,26
	.byte	'NvM_Prv_idJob_Validate_e',0,6,26
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,26
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,26
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,26
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,26
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,26
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,26
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,24
	.byte	'NvM_Prv_idJob_ten',0,44,115,3
	.word	22997
	.byte	24
	.byte	'NvM_Prv_ServiceBit_tuo',0,44,168,1,16
	.word	1069
	.byte	24
	.byte	'NvM_Prv_idService_tuo',0,44,173,1,15
	.word	149
	.byte	24
	.byte	'NvM_Prv_idQueue_tuo',0,44,206,1,15
	.word	149
	.byte	11,44,210,1,9,12,12
	.byte	'idService_uo',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'idBlock_uo',0
	.word	1069
	.byte	2,2,35,2,12
	.byte	'ServiceBit_uo',0
	.word	1069
	.byte	2,2,35,4,12
	.byte	'BlockData_pv',0
	.word	13353
	.byte	4,2,35,8,0,24
	.byte	'NvM_Prv_QueueEntry_tst',0,44,225,1,3
	.word	23554
	.byte	11,44,227,1,9,20,12
	.byte	'idJob_en',0
	.word	22997
	.byte	4,2,35,0,12
	.byte	'idBlock_uo',0
	.word	1069
	.byte	2,2,35,4,12
	.byte	'RamBlock_pu8',0
	.word	166
	.byte	4,2,35,8,12
	.byte	'idxDataset_u8',0
	.word	149
	.byte	1,2,35,12,12
	.byte	'Result_en',0
	.word	22598
	.byte	4,2,35,16,0,24
	.byte	'NvM_Prv_JobData_tst',0,44,240,1,3
	.word	23680
	.byte	24
	.byte	'Dem_EvMemOccurrenceCounterType',0,21,90,21
	.word	149
	.byte	24
	.byte	'Dem_EvMemAgingCounterType',0,21,99,21
	.word	149
	.byte	24
	.byte	'Dem_EvMemHdrType',0,21,141,1,4
	.word	6050
	.byte	24
	.byte	'Dem_EvMemEventMemoryType',0,21,213,1,4
	.word	6080
	.byte	14,5
	.word	149
	.byte	15,4,0,14,10
	.word	1069
	.byte	15,4,0,11,45,9,9,18,12
	.byte	'OperationCycleStates',0
	.word	149
	.byte	1,2,35,0,12
	.byte	'OperationCycleQualified',0
	.word	149
	.byte	1,2,35,1,12
	.byte	'Overflow',0
	.word	23951
	.byte	5,2,35,2,12
	.byte	'DtcIdsByOccurrenceTime',0
	.word	23960
	.byte	10,2,35,8,0,24
	.byte	'Dem_GenericNvDataType',0,45,24,4
	.word	23969
	.byte	34
	.byte	'Dem_GenericNvData',0,45,28,30
	.word	23969
	.byte	1,1,24
	.byte	'Dem_NvmBlockIdType',0,46,14,34
	.word	149
	.byte	13,46,16,9,20,12
	.byte	'evMemData',0
	.word	6080
	.byte	20,2,35,0,12
	.byte	'genericNvData',0
	.word	23969
	.byte	18,2,35,0,0,24
	.byte	'Dem_NvMStorageBufferData',0,46,37,3
	.word	24173
	.byte	24
	.byte	'Dem_NvmBlockStatusType',0,46,59,15
	.word	149
	.byte	14,5
	.word	149
	.byte	15,4,0,24
	.byte	'Dem_NvMBlockStatusDoubleBufferType',0,46,70,32
	.word	24285
	.byte	24
	.byte	'Dem_NvmResultType',0,46,78,31
	.word	149
	.byte	14,35
	.word	24294
	.byte	15,6,0,34
	.byte	'Dem_NvMBlockStatusDoubleBuffer',0,11,19,1
	.word	24363
	.byte	1,1,14,5
	.word	149
	.byte	15,4,0,3
	.word	149
	.byte	35
	.word	149
	.byte	1,1,31
	.word	24422
	.byte	0,3
	.word	24427
	.byte	24
	.byte	'Dem_EvtClearAllowedFncType',0,13,12,26
	.word	24440
	.byte	35
	.word	149
	.byte	1,1,31
	.word	149
	.byte	0,3
	.word	24480
	.byte	24
	.byte	'Dem_InitMForEAllowedFncType',0,14,38,27
	.word	24493
	.byte	9
	.word	13347
	.byte	3
	.word	24534
	.byte	35
	.word	5225
	.byte	1,1,31
	.word	1069
	.byte	31
	.word	24422
	.byte	31
	.word	24539
	.byte	31
	.word	1069
	.byte	0,3
	.word	24544
	.byte	24
	.byte	'Dem_DebFilter',0,47,12,23
	.word	24572
	.byte	2
	.byte	'long int',0,4,5,3
	.word	24599
	.byte	30,1,1,31
	.word	24539
	.byte	31
	.word	1069
	.byte	31
	.word	24611
	.byte	31
	.word	24611
	.byte	0,3
	.word	24616
	.byte	24
	.byte	'Dem_DebGetLimits',0,47,13,23
	.word	24640
	.byte	30,1,1,31
	.word	1069
	.byte	31
	.word	24539
	.byte	31
	.word	1069
	.byte	0,3
	.word	24670
	.byte	24
	.byte	'Dem_DebCyclic',0,47,14,16
	.word	24689
	.byte	24
	.byte	'Dem_DebouncedActionType',0,47,35,21
	.word	5225
	.byte	13,48,37,9,4,12
	.byte	'EnforceAlignment',0
	.word	1580
	.byte	4,2,35,0,12
	.byte	'Buffer',0
	.word	17053
	.byte	4,2,35,0,0,24
	.byte	'Dem_EvBuffEnvDataAlignedType',0,48,47,3
	.word	24748
	.byte	11,48,49,9,16,12
	.byte	'envData',0
	.word	24748
	.byte	4,2,35,0,12
	.byte	'eventType',0
	.word	149
	.byte	1,2,35,4,12
	.byte	'eventId',0
	.word	1069
	.byte	2,2,35,6,12
	.byte	'debug0',0
	.word	1580
	.byte	4,2,35,8,12
	.byte	'debug1',0
	.word	1580
	.byte	4,2,35,12,0,24
	.byte	'Dem_EvBuffEvent',0,48,75,2
	.word	24833
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,11,1,0,0,8,46
	.byte	1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,38,0,73,19,0,0,10,53,0,73,19,0,0,11,19,1,58,15,59
	.byte	15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,23,1,58,15,59,15,57,15,11,15,0,0,14,1,1,11,15,73
	.byte	19,0,0,15,33,0,47,15,0,0,16,46,1,49,19,0,0,17,5,0,49,19,0,0,18,29,1,49,19,0,0,19,11,0,49,19,0,0,20,46
	.byte	1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,21,11,1,49,19,0,0,22,46,1,3,8,58,15,59,15,57
	.byte	15,54,15,39,12,63,12,60,12,0,0,23,21,0,54,15,0,0,24,22,0,3,8,58,15,59,15,57,15,73,19,0,0,25,4,1,58,15
	.byte	59,15,57,15,11,15,0,0,26,40,0,3,8,28,13,0,0,27,21,0,54,15,39,12,0,0,28,19,1,3,8,58,15,59,15,57,15,11,15
	.byte	0,0,29,59,0,3,8,0,0,30,21,1,54,15,39,12,0,0,31,5,0,73,19,0,0,32,4,1,3,8,58,15,59,15,57,15,11,15,0,0,33
	.byte	21,0,73,19,54,15,39,12,0,0,34,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,35,21,1,73,19,54,15,39
	.byte	12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L69:
	.word	.L288-.L287
.L287:
	.half	3
	.word	.L290-.L289
.L289:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_BitArray.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_ISO14229Byte.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\enco\\Dem_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_ByteOrderUtils.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_EventStatus.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvTrigger.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_Deb.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientClearMachine.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemAging.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMem.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientHandlingTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_NodeId.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\api\\Dem_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_StorageCondition.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_GenericNvData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_DebBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evbuff\\Dem_EvBuffEvent.h',0,0,0,0,0
.L290:
.L288:
	.sdecl	'.debug_info',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_info'
.L70:
	.word	362
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_GetOperationCycleState',0,1,158,1,16
	.word	.L118
	.byte	1,1,1
	.word	.L59,.L119,.L58
	.byte	4
	.byte	'OperationCycleId',0,1,158,1,68
	.word	.L118,.L120
	.byte	4
	.byte	'CycleState',0,1,159,1,38
	.word	.L121,.L122
	.byte	5
	.word	.L59,.L119
	.byte	6
	.word	.L123,.L124,.L39
	.byte	7
	.word	.L125,.L126
	.byte	7
	.word	.L127,.L128
	.byte	8
	.word	.L129,.L124,.L39
	.byte	6
	.word	.L130,.L124,.L38
	.byte	7
	.word	.L131,.L132
	.byte	7
	.word	.L133,.L134
	.byte	9
	.word	.L135,.L124,.L38
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_line'
.L72:
	.word	.L292-.L291
.L291:
	.half	3
	.word	.L294-.L293
.L293:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0,0
.L294:
	.byte	5,16,7,0,5,2
	.word	.L59
	.byte	3,157,1,1,5,5,9
	.half	.L33-.L59
	.byte	3,4,1,7,9
	.half	.L295-.L33
	.byte	1,5,38,9
	.half	.L34-.L295
	.byte	3,1,1,5,10,9
	.half	.L283-.L34
	.byte	1,5,9,7,9
	.half	.L296-.L283
	.byte	3,2,1,5,16,9
	.half	.L297-.L296
	.byte	3,1,1,5,9,9
	.half	.L298-.L297
	.byte	1,5,37,9
	.half	.L36-.L298
	.byte	3,3,1,4,2,5,28,9
	.half	.L124-.L36
	.byte	3,149,127,1,5,47,9
	.half	.L299-.L124
	.byte	1,5,5,9
	.half	.L300-.L299
	.byte	1,5,73,9
	.half	.L38-.L300
	.byte	3,4,1,5,5,9
	.half	.L301-.L38
	.byte	1,4,1,9
	.half	.L39-.L301
	.byte	3,231,0,1,5,23,7,9
	.half	.L302-.L39
	.byte	3,2,1,5,21,9
	.half	.L303-.L302
	.byte	1,5,44,9
	.half	.L304-.L303
	.byte	1,5,23,9
	.half	.L40-.L304
	.byte	3,4,1,5,21,9
	.half	.L305-.L40
	.byte	1,5,12,9
	.half	.L41-.L305
	.byte	3,3,1,5,5,9
	.half	.L306-.L41
	.byte	1,5,1,9
	.half	.L35-.L306
	.byte	3,1,1,7,9
	.half	.L74-.L35
	.byte	0,1,1
.L292:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L59,0,.L74-.L59,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_info'
.L75:
	.word	374
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_GetCycleQualified',0,1,39,16
	.word	.L118
	.byte	1,1,1
	.word	.L53,.L136,.L52
	.byte	4
	.byte	'OperationCycleId',0,1,39,63
	.word	.L118,.L137
	.byte	4
	.byte	'isQualified',0,1,39,90
	.word	.L138,.L139
	.byte	5
	.word	.L53,.L136
	.byte	6
	.byte	'retVal',0,1,41,20
	.word	.L118,.L140
	.byte	7
	.word	.L123,.L141,.L6
	.byte	8
	.word	.L125,.L142
	.byte	8
	.word	.L127,.L143
	.byte	9
	.word	.L129,.L141,.L6
	.byte	7
	.word	.L130,.L141,.L5
	.byte	8
	.word	.L131,.L144
	.byte	8
	.word	.L133,.L145
	.byte	10
	.word	.L135,.L141,.L5
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_line'
.L77:
	.word	.L308-.L307
.L307:
	.half	3
	.word	.L310-.L309
.L309:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0,0
.L310:
	.byte	5,16,7,0,5,2
	.word	.L53
	.byte	3,38,1,5,27,9
	.half	.L255-.L53
	.byte	3,2,1,5,38,9
	.half	.L256-.L255
	.byte	3,2,1,5,10,9
	.half	.L252-.L256
	.byte	1,5,9,7,9
	.half	.L311-.L252
	.byte	3,2,1,5,76,9
	.half	.L312-.L311
	.byte	1,5,52,9
	.half	.L3-.L312
	.byte	3,4,1,4,2,5,28,9
	.half	.L141-.L3
	.byte	3,13,1,5,47,9
	.half	.L313-.L141
	.byte	1,5,5,9
	.half	.L254-.L313
	.byte	1,5,73,9
	.half	.L5-.L254
	.byte	3,4,1,5,5,9
	.half	.L314-.L5
	.byte	1,4,1,5,22,9
	.half	.L6-.L314
	.byte	3,111,1,5,16,9
	.half	.L315-.L6
	.byte	3,1,1,5,5,9
	.half	.L4-.L315
	.byte	3,3,1,5,1,9
	.half	.L7-.L4
	.byte	3,1,1,7,9
	.half	.L79-.L7
	.byte	0,1,1
.L308:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L53,0,.L79-.L53,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_info'
.L80:
	.word	958
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_SetOperationCycleState',0,1,81,16
	.word	.L118
	.byte	1,1,1
	.word	.L57,.L146,.L56
	.byte	4
	.byte	'OperationCycleId',0,1,81,68
	.word	.L118,.L147
	.byte	4
	.byte	'CycleState',0,1,82,37
	.word	.L118,.L148
	.byte	5
	.word	.L57,.L146
	.byte	6
	.byte	'retVal',0,1,84,20
	.word	.L118,.L149
	.byte	7
	.word	.L150,.L14,.L15
	.byte	8
	.word	.L151,.L152
	.byte	9
	.word	.L153,.L14,.L15
	.byte	0,5
	.word	.L154,.L155
	.byte	6
	.byte	'bitMaskOld',0,1,105,32
	.word	.L118,.L156
	.byte	6
	.byte	'bitMask',0,1,106,32
	.word	.L118,.L157
	.byte	6
	.byte	'bitMaskDependent',0,1,107,32
	.word	.L118,.L158
	.byte	6
	.byte	'cycleId',0,1,108,34
	.word	.L118,.L159
	.byte	7
	.word	.L160,.L161,.L162
	.byte	8
	.word	.L163,.L164
	.byte	8
	.word	.L165,.L166
	.byte	10
	.word	.L167,.L161,.L162
	.byte	6
	.byte	'bit2shift',0,2,38,11
	.word	.L118,.L168
	.byte	0,0,7
	.word	.L123,.L169,.L24
	.byte	8
	.word	.L125,.L170
	.byte	8
	.word	.L127,.L171
	.byte	10
	.word	.L129,.L169,.L24
	.byte	7
	.word	.L130,.L169,.L23
	.byte	8
	.word	.L131,.L172
	.byte	8
	.word	.L133,.L173
	.byte	9
	.word	.L135,.L169,.L23
	.byte	0,0,0,7
	.word	.L174,.L26,.L27
	.byte	8
	.word	.L175,.L176
	.byte	9
	.word	.L177,.L26,.L27
	.byte	0,7
	.word	.L178,.L179,.L180
	.byte	8
	.word	.L181,.L182
	.byte	8
	.word	.L183,.L184
	.byte	9
	.word	.L185,.L179,.L180
	.byte	0,7
	.word	.L186,.L187,.L25
	.byte	8
	.word	.L188,.L189
	.byte	8
	.word	.L190,.L191
	.byte	9
	.word	.L192,.L187,.L25
	.byte	0,7
	.word	.L186,.L193,.L194
	.byte	8
	.word	.L188,.L189
	.byte	8
	.word	.L190,.L191
	.byte	9
	.word	.L192,.L193,.L194
	.byte	0,7
	.word	.L186,.L195,.L196
	.byte	8
	.word	.L188,.L189
	.byte	8
	.word	.L190,.L191
	.byte	9
	.word	.L192,.L195,.L196
	.byte	0,7
	.word	.L197,.L198,.L199
	.byte	8
	.word	.L200,.L201
	.byte	8
	.word	.L202,.L203
	.byte	9
	.word	.L204,.L198,.L199
	.byte	0,7
	.word	.L197,.L205,.L155
	.byte	8
	.word	.L200,.L201
	.byte	8
	.word	.L202,.L203
	.byte	9
	.word	.L204,.L205,.L155
	.byte	0,0,7
	.word	.L206,.L207,.L208
	.byte	8
	.word	.L209,.L210
	.byte	8
	.word	.L211,.L212
	.byte	10
	.word	.L213,.L207,.L208
	.byte	6
	.byte	'bit2shift',0,2,44,11
	.word	.L118,.L214
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_line'
.L82:
	.word	.L317-.L316
.L316:
	.half	3
	.word	.L319-.L318
.L318:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle_DataStructures.h',0,0,0,0,0
.L319:
	.byte	5,16,7,0,5,2
	.word	.L57
	.byte	3,208,0,1,5,27,9
	.half	.L269-.L57
	.byte	3,3,1,5,38,9
	.half	.L271-.L269
	.byte	3,2,1,5,10,9
	.half	.L267-.L271
	.byte	1,5,9,7,9
	.half	.L320-.L267
	.byte	3,2,1,5,16,9
	.half	.L12-.L320
	.byte	3,2,1,5,9,9
	.half	.L321-.L12
	.byte	1,4,3,9
	.half	.L14-.L321
	.byte	3,78,1,5,31,9
	.half	.L322-.L14
	.byte	1,5,37,9
	.half	.L323-.L322
	.byte	1,5,2,9
	.half	.L324-.L323
	.byte	1,4,1,5,10,9
	.half	.L15-.L324
	.byte	3,54,1,5,16,7,9
	.half	.L17-.L15
	.byte	3,4,1,5,9,9
	.half	.L325-.L17
	.byte	1,5,5,9
	.half	.L16-.L325
	.byte	3,5,1,5,42,7,9
	.half	.L154-.L16
	.byte	3,3,1,5,40,9
	.half	.L326-.L154
	.byte	1,5,51,9
	.half	.L327-.L326
	.byte	3,1,1,5,49,9
	.half	.L270-.L327
	.byte	1,5,36,9
	.half	.L328-.L270
	.byte	3,3,1,4,2,5,21,9
	.half	.L161-.L328
	.byte	3,184,127,1,5,6,9
	.half	.L272-.L161
	.byte	3,1,1,5,36,9
	.half	.L329-.L272
	.byte	1,5,13,9
	.half	.L273-.L329
	.byte	1,4,1,5,72,9
	.half	.L162-.L273
	.byte	3,215,0,1,5,26,9
	.half	.L20-.L162
	.byte	3,117,1,9
	.half	.L274-.L20
	.byte	3,2,1,5,65,9
	.half	.L276-.L274
	.byte	1,5,49,9
	.half	.L22-.L276
	.byte	3,4,1,5,58,9
	.half	.L330-.L22
	.byte	1,4,2,5,28,9
	.half	.L169-.L330
	.byte	3,69,1,5,47,9
	.half	.L331-.L169
	.byte	1,5,5,9
	.half	.L332-.L331
	.byte	1,5,73,9
	.half	.L23-.L332
	.byte	3,4,1,5,5,9
	.half	.L333-.L23
	.byte	1,4,1,5,17,9
	.half	.L24-.L333
	.byte	3,55,1,4,3,5,31,7,9
	.half	.L26-.L24
	.byte	3,169,127,1,5,37,9
	.half	.L334-.L26
	.byte	1,5,2,9
	.half	.L335-.L334
	.byte	1,4,1,5,38,9
	.half	.L27-.L335
	.byte	3,217,0,1,5,54,9
	.half	.L336-.L27
	.byte	3,3,1,5,72,9
	.half	.L337-.L336
	.byte	1,4,2,5,6,9
	.half	.L179-.L337
	.byte	3,163,127,1,5,13,9
	.half	.L338-.L179
	.byte	1,4,1,5,52,9
	.half	.L180-.L338
	.byte	3,224,0,1,5,61,9
	.half	.L339-.L180
	.byte	1,4,2,5,6,9
	.half	.L187-.L339
	.byte	3,150,127,1,5,13,9
	.half	.L340-.L187
	.byte	1,4,1,5,74,9
	.half	.L25-.L340
	.byte	3,222,0,1,5,65,9
	.half	.L21-.L25
	.byte	1,5,32,7,9
	.half	.L341-.L21
	.byte	3,16,1,5,40,9
	.half	.L342-.L341
	.byte	1,7,9
	.half	.L343-.L342
	.byte	3,3,1,5,66,9
	.half	.L344-.L343
	.byte	1,4,2,5,6,9
	.half	.L193-.L344
	.byte	3,143,127,1,5,13,9
	.half	.L275-.L193
	.byte	1,4,1,5,40,9
	.half	.L194-.L275
	.byte	3,242,0,1,5,82,9
	.half	.L345-.L194
	.byte	1,4,2,5,6,9
	.half	.L195-.L345
	.byte	3,142,127,1,5,13,9
	.half	.L346-.L195
	.byte	1,4,1,5,71,9
	.half	.L196-.L346
	.byte	3,245,0,1,4,2,5,6,9
	.half	.L198-.L196
	.byte	3,144,127,1,5,26,9
	.half	.L347-.L198
	.byte	1,5,13,9
	.half	.L348-.L347
	.byte	1,4,1,5,42,9
	.half	.L199-.L348
	.byte	3,241,0,1,5,77,9
	.half	.L349-.L199
	.byte	1,4,2,5,6,9
	.half	.L205-.L349
	.byte	3,143,127,1,5,26,9
	.half	.L350-.L205
	.byte	1,5,13,9
	.half	.L351-.L350
	.byte	1,4,1,5,74,9
	.half	.L155-.L351
	.byte	3,236,0,1,5,10,9
	.half	.L19-.L155
	.byte	3,8,1,5,38,7,9
	.half	.L352-.L19
	.byte	3,2,1,4,2,5,21,9
	.half	.L207-.L352
	.byte	3,154,127,1,5,6,9
	.half	.L277-.L207
	.byte	3,1,1,5,47,9
	.half	.L353-.L277
	.byte	1,5,28,9
	.half	.L278-.L353
	.byte	1,5,26,9
	.half	.L354-.L278
	.byte	1,5,13,9
	.half	.L355-.L354
	.byte	1,4,1,5,81,9
	.half	.L208-.L355
	.byte	3,229,0,1,5,9,9
	.half	.L29-.L208
	.byte	3,4,1,5,16,9
	.half	.L356-.L29
	.byte	3,1,1,5,5,9
	.half	.L28-.L356
	.byte	3,4,1,5,1,9
	.half	.L13-.L28
	.byte	3,1,1,7,9
	.half	.L84-.L13
	.byte	0,1,1
.L317:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L57,0,.L84-.L57,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_info'
.L85:
	.word	395
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_SetCycleQualified',0,1,56,16
	.word	.L118
	.byte	1,1,1
	.word	.L55,.L215,.L54
	.byte	4
	.byte	'OperationCycleId',0,1,56,63
	.word	.L118,.L216
	.byte	5
	.word	.L55,.L215
	.byte	6
	.byte	'retVal',0,1,58,20
	.word	.L118,.L217
	.byte	7
	.word	.L160,.L218,.L219
	.byte	8
	.word	.L163,.L220
	.byte	8
	.word	.L165,.L221
	.byte	9
	.word	.L167,.L218,.L219
	.byte	6
	.byte	'bit2shift',0,2,38,11
	.word	.L118,.L222
	.byte	0,0,7
	.word	.L160,.L223,.L224
	.byte	8
	.word	.L163,.L220
	.byte	8
	.word	.L165,.L221
	.byte	9
	.word	.L167,.L223,.L224
	.byte	6
	.byte	'bit2shift',0,2,38,11
	.word	.L118,.L225
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_line'
.L87:
	.word	.L358-.L357
.L357:
	.half	3
	.word	.L360-.L359
.L359:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0,0
.L360:
	.byte	5,16,7,0,5,2
	.word	.L55
	.byte	3,55,1,5,27,9
	.half	.L259-.L55
	.byte	3,2,1,5,38,9
	.half	.L260-.L259
	.byte	3,2,1,5,10,9
	.half	.L258-.L260
	.byte	1,5,9,7,9
	.half	.L361-.L258
	.byte	3,2,1,5,76,9
	.half	.L362-.L361
	.byte	1,5,36,9
	.half	.L8-.L362
	.byte	3,5,1,4,2,5,21,9
	.half	.L218-.L8
	.byte	3,99,1,5,6,9
	.half	.L261-.L218
	.byte	3,1,1,5,36,9
	.half	.L363-.L261
	.byte	1,5,13,9
	.half	.L262-.L363
	.byte	1,4,1,5,36,9
	.half	.L219-.L262
	.byte	3,29,1,4,2,5,21,9
	.half	.L223-.L219
	.byte	3,98,1,5,6,9
	.half	.L263-.L223
	.byte	3,1,1,5,36,9
	.half	.L364-.L263
	.byte	1,5,13,9
	.half	.L264-.L364
	.byte	1,4,1,5,16,9
	.half	.L224-.L264
	.byte	3,36,1,5,5,9
	.half	.L9-.L224
	.byte	3,3,1,5,1,9
	.half	.L10-.L9
	.byte	3,1,1,7,9
	.half	.L89-.L10
	.byte	0,1,1
.L358:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L55,0,.L89-.L55,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_info'
.L90:
	.word	208
	.half	3
	.word	.L91
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L93,.L92
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_OperationCycleInit',0,1,226,1,6,1,1,1
	.word	.L63,.L226,.L62
	.byte	4
	.word	.L63,.L226
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_line'
.L92:
	.word	.L366-.L365
.L365:
	.half	3
	.word	.L368-.L367
.L367:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0,0
.L368:
	.byte	5,43,7,0,5,2
	.word	.L63
	.byte	3,228,1,1,5,1,9
	.half	.L369-.L63
	.byte	3,1,1,7,9
	.half	.L94-.L369
	.byte	0,1,1
.L366:
	.sdecl	'.debug_ranges',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_ranges'
.L93:
	.word	-1,.L63,0,.L94-.L63,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_info'
.L95:
	.word	253
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L98,.L97
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_OperationCycleInitCheckNvm',0,1,232,1,6,1,1,1
	.word	.L65,.L227,.L64
	.byte	4
	.word	.L65,.L227
	.byte	5
	.word	.L228,.L229,.L48
	.byte	6
	.word	.L230,.L231
	.byte	7
	.word	.L232,.L229,.L48
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_line'
.L97:
	.word	.L371-.L370
.L370:
	.half	3
	.word	.L373-.L372
.L372:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0,0
.L373:
	.byte	5,29,7,0,5,2
	.word	.L65
	.byte	3,233,1,1,4,2,5,5,9
	.half	.L229-.L65
	.byte	3,193,126,1,4,1,9
	.half	.L48-.L229
	.byte	3,191,1,1,5,37,7,9
	.half	.L374-.L48
	.byte	3,3,1,5,9,9
	.half	.L375-.L374
	.byte	1,5,54,9
	.half	.L376-.L375
	.byte	1,5,34,9
	.half	.L377-.L376
	.byte	1,5,9,9
	.half	.L378-.L377
	.byte	3,1,1,5,57,9
	.half	.L379-.L378
	.byte	1,5,37,9
	.half	.L380-.L379
	.byte	1,5,1,9
	.half	.L49-.L380
	.byte	3,3,1,7,9
	.half	.L99-.L49
	.byte	0,1,1
.L371:
	.sdecl	'.debug_ranges',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_ranges'
.L98:
	.word	-1,.L65,0,.L99-.L65,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_info'
.L100:
	.word	422
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L103,.L102
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_OperationCyclesMainFunction',0,1,181,1,9
	.word	.L118
	.byte	1,1,1
	.word	.L61,.L233,.L60
	.byte	4
	.word	.L61,.L233
	.byte	5
	.byte	'retVal',0,1,183,1,13
	.word	.L118,.L234
	.byte	5
	.byte	'opCycleStartTriggers',0,1,185,1,28
	.word	.L118,.L235
	.byte	5
	.byte	'opCycleQualifiedTriggers',0,1,186,1,28
	.word	.L118,.L236
	.byte	6
	.word	.L237,.L238,.L239
	.byte	7
	.word	.L240,.L241
	.byte	8
	.word	.L242,.L238,.L239
	.byte	0,6
	.word	.L228,.L243,.L45
	.byte	7
	.word	.L230,.L244
	.byte	8
	.word	.L232,.L243,.L45
	.byte	0,6
	.word	.L245,.L246,.L46
	.byte	7
	.word	.L247,.L248
	.byte	8
	.word	.L249,.L246,.L46
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_line'
.L102:
	.word	.L382-.L381
.L381:
	.half	3
	.word	.L384-.L383
.L383:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMem.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0,0
.L384:
	.byte	5,20,7,0,5,2
	.word	.L61
	.byte	3,182,1,1,5,10,9
	.half	.L284-.L61
	.byte	3,5,1,5,9,9
	.half	.L285-.L284
	.byte	1,5,61,7,9
	.half	.L385-.L285
	.byte	1,5,95,9
	.half	.L386-.L385
	.byte	1,5,61,7,9
	.half	.L43-.L386
	.byte	1,5,52,9
	.half	.L387-.L43
	.byte	3,5,1,5,50,9
	.half	.L388-.L387
	.byte	1,5,45,9
	.half	.L389-.L388
	.byte	3,1,1,5,43,9
	.half	.L390-.L389
	.byte	1,4,2,5,54,9
	.half	.L238-.L390
	.byte	3,78,1,4,1,5,38,9
	.half	.L239-.L238
	.byte	3,63,1,5,33,9
	.half	.L391-.L239
	.byte	3,4,1,4,3,5,5,9
	.half	.L243-.L391
	.byte	3,216,126,1,4,1,5,9,9
	.half	.L45-.L243
	.byte	3,168,1,1,5,13,7,9
	.half	.L392-.L45
	.byte	3,2,1,5,54,9
	.half	.L393-.L392
	.byte	1,5,52,9
	.half	.L394-.L393
	.byte	1,5,57,9
	.half	.L395-.L394
	.byte	3,1,1,5,55,9
	.half	.L396-.L395
	.byte	1,5,41,9
	.half	.L397-.L396
	.byte	3,3,1,4,4,5,5,9
	.half	.L246-.L397
	.byte	3,133,127,1,5,35,9
	.half	.L398-.L246
	.byte	1,5,72,9
	.half	.L399-.L398
	.byte	1,5,70,9
	.half	.L400-.L399
	.byte	1,4,1,5,16,9
	.half	.L46-.L400
	.byte	3,254,0,1,5,5,9
	.half	.L44-.L46
	.byte	3,3,1,5,1,9
	.half	.L47-.L44
	.byte	3,1,1,7,9
	.half	.L104-.L47
	.byte	0,1,1
.L382:
	.sdecl	'.debug_ranges',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_ranges'
.L103:
	.word	-1,.L61,0,.L104-.L61,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_info'
.L105:
	.word	244
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L108,.L107
	.byte	2
	.word	.L66
	.byte	3
	.byte	'Dem_IsOperationCycleIdValid',0,1,34,16
	.word	.L118
	.byte	1,1
	.word	.L51,.L250,.L50
	.byte	4
	.byte	'OperationCycleId',0,1,34,69
	.word	.L118,.L251
	.byte	5
	.word	.L51,.L250
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_line'
.L107:
	.word	.L402-.L401
.L401:
	.half	3
	.word	.L404-.L403
.L403:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0,0,0,0,0
.L404:
	.byte	5,30,7,0,5,2
	.word	.L51
	.byte	3,35,1,5,5,9
	.half	.L405-.L51
	.byte	1,5,1,9
	.half	.L2-.L405
	.byte	3,1,1,7,9
	.half	.L109-.L2
	.byte	0,1,1
.L402:
	.sdecl	'.debug_ranges',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_ranges'
.L108:
	.word	-1,.L51,0,.L109-.L51,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OperationCycleStates')
	.sect	'.debug_info'
.L110:
	.word	187
	.half	3
	.word	.L111
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L66
	.byte	3
	.byte	'Dem_OperationCycleStates',0,25,23,24
	.word	.L118
	.byte	1,5,3
	.word	Dem_OperationCycleStates
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OperationCycleStates')
	.sect	'.debug_abbrev'
.L111:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OperationCycleQualified')
	.sect	'.debug_info'
.L112:
	.word	189
	.half	3
	.word	.L113
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L66
	.byte	3
	.byte	'Dem_OperationCycleQualified',0,25,24,31
	.word	.L118
	.byte	5,3
	.word	Dem_OperationCycleQualified
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OperationCycleQualified')
	.sect	'.debug_abbrev'
.L113:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_QualifyCycleCollectedTriggers')
	.sect	'.debug_info'
.L114:
	.word	195
	.half	3
	.word	.L115
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L66
	.byte	3
	.byte	'Dem_QualifyCycleCollectedTriggers',0,25,25,31
	.word	.L118
	.byte	5,3
	.word	Dem_QualifyCycleCollectedTriggers
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_QualifyCycleCollectedTriggers')
	.sect	'.debug_abbrev'
.L115:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_StartOperationCycleCollectedTriggers')
	.sect	'.debug_info'
.L116:
	.word	202
	.half	3
	.word	.L117
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_OperationCycle.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L66
	.byte	3
	.byte	'Dem_StartOperationCycleCollectedTriggers',0,25,26,31
	.word	.L118
	.byte	5,3
	.word	Dem_StartOperationCycleCollectedTriggers
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_StartOperationCycleCollectedTriggers')
	.sect	'.debug_abbrev'
.L117:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L136-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L137:
	.word	-1,.L53,0,.L252-.L53
	.half	1
	.byte	84
	.word	.L253-.L53,.L254-.L53
	.half	1
	.byte	95
	.word	0,0
.L145:
	.word	0,0
.L143:
	.word	0,0
.L139:
	.word	-1,.L53,0,.L252-.L53
	.half	1
	.byte	100
	.word	.L255-.L53,.L136-.L53
	.half	1
	.byte	111
	.word	0,0
.L140:
	.word	-1,.L53,.L256-.L53,.L136-.L53
	.half	1
	.byte	88
	.word	.L257-.L53,.L136-.L53
	.half	1
	.byte	82
	.word	0,0
.L144:
	.word	0,0
.L142:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_loc'
.L122:
	.word	-1,.L59,0,.L280-.L59
	.half	1
	.byte	100
	.word	.L33-.L59,.L119-.L59
	.half	1
	.byte	111
	.word	.L34-.L59,.L283-.L59
	.half	1
	.byte	100
	.word	0,0
.L58:
	.word	-1,.L59,0,.L119-.L59
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	-1,.L59,0,.L281-.L59
	.half	1
	.byte	84
	.word	.L282-.L59,.L119-.L59
	.half	1
	.byte	88
	.word	.L34-.L59,.L283-.L59
	.half	1
	.byte	84
	.word	0,0
.L134:
	.word	0,0
.L128:
	.word	0,0
.L132:
	.word	0,0
.L126:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_loc'
.L50:
	.word	-1,.L51,0,.L250-.L51
	.half	2
	.byte	138,0
	.word	0,0
.L251:
	.word	-1,.L51,0,.L250-.L51
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_loc'
.L62:
	.word	-1,.L63,0,.L226-.L63
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_loc'
.L64:
	.word	-1,.L65,0,.L227-.L65
	.half	2
	.byte	138,0
	.word	0,0
.L231:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_loc'
.L60:
	.word	-1,.L61,0,.L233-.L61
	.half	2
	.byte	138,0
	.word	0,0
.L248:
	.word	0,0
.L236:
	.word	0,0
.L235:
	.word	-1,.L61,.L285-.L61,.L233-.L61
	.half	1
	.byte	88
	.word	0,0
.L241:
	.word	0,0
.L244:
	.word	0,0
.L234:
	.word	-1,.L61,.L284-.L61,.L239-.L61
	.half	1
	.byte	82
	.word	.L44-.L61,.L233-.L61
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_loc'
.L54:
	.word	-1,.L55,0,.L215-.L55
	.half	2
	.byte	138,0
	.word	0,0
.L216:
	.word	-1,.L55,0,.L258-.L55
	.half	1
	.byte	84
	.word	.L259-.L55,.L215-.L55
	.half	1
	.byte	95
	.word	0,0
.L225:
	.word	-1,.L55,.L263-.L55,.L264-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L222:
	.word	-1,.L55,.L261-.L55,.L262-.L55
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L221:
	.word	0,0
.L220:
	.word	0,0
.L217:
	.word	-1,.L55,.L260-.L55,.L215-.L55
	.half	1
	.byte	88
	.word	.L265-.L55,.L215-.L55
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L57,0,.L267-.L57
	.half	1
	.byte	85
	.word	.L269-.L57,.L270-.L57
	.half	1
	.byte	95
	.word	.L19-.L57,.L277-.L57
	.half	1
	.byte	95
	.word	.L29-.L57,.L28-.L57
	.half	1
	.byte	95
	.word	0,0
.L56:
	.word	-1,.L57,0,.L266-.L57
	.half	2
	.byte	138,0
	.word	.L266-.L57,.L146-.L57
	.half	2
	.byte	138,8
	.word	.L146-.L57,.L146-.L57
	.half	2
	.byte	138,0
	.word	0,0
.L147:
	.word	-1,.L57,0,.L267-.L57
	.half	1
	.byte	84
	.word	.L268-.L57,.L146-.L57
	.half	1
	.byte	89
	.word	0,0
.L168:
	.word	-1,.L57,.L272-.L57,.L273-.L57
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L214:
	.word	-1,.L57,.L277-.L57,.L278-.L57
	.half	1
	.byte	95
	.word	0,0
.L191:
	.word	0,0
.L203:
	.word	0,0
.L157:
	.word	-1,.L57,0,.L146-.L57
	.half	2
	.byte	145,120
	.word	0,0
.L158:
	.word	-1,.L57,0,.L146-.L57
	.half	2
	.byte	145,121
	.word	0,0
.L156:
	.word	-1,.L57,.L274-.L57,.L275-.L57
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L166:
	.word	0,0
.L212:
	.word	0,0
.L173:
	.word	0,0
.L171:
	.word	0,0
.L189:
	.word	0,0
.L201:
	.word	0,0
.L182:
	.word	0,0
.L164:
	.word	0,0
.L210:
	.word	0,0
.L159:
	.word	-1,.L57,.L276-.L57,.L19-.L57
	.half	1
	.byte	81
	.word	0,0
.L176:
	.word	0,0
.L152:
	.word	0,0
.L149:
	.word	-1,.L57,.L271-.L57,.L146-.L57
	.half	1
	.byte	88
	.word	.L279-.L57,.L13-.L57
	.half	1
	.byte	82
	.word	0,0
.L184:
	.word	0,0
.L172:
	.word	0,0
.L170:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L406:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dem_IsOperationCycleIdValid')
	.sect	'.debug_frame'
	.word	24
	.word	.L406,.L51,.L250-.L51
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetCycleQualified')
	.sect	'.debug_frame'
	.word	12
	.word	.L406,.L53,.L136-.L53
	.sdecl	'.debug_frame',debug,cluster('Dem_SetCycleQualified')
	.sect	'.debug_frame'
	.word	12
	.word	.L406,.L55,.L215-.L55
	.sdecl	'.debug_frame',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_frame'
	.word	36
	.word	.L406,.L57,.L146-.L57
	.byte	4
	.word	(.L266-.L57)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L146-.L266)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_frame'
	.word	12
	.word	.L406,.L59,.L119-.L59
	.sdecl	'.debug_frame',debug,cluster('Dem_OperationCyclesMainFunction')
	.sect	'.debug_frame'
	.word	12
	.word	.L406,.L61,.L233-.L61
	.sdecl	'.debug_frame',debug,cluster('Dem_OperationCycleInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L406,.L63,.L226-.L63
	.sdecl	'.debug_frame',debug,cluster('Dem_OperationCycleInitCheckNvm')
	.sect	'.debug_frame'
	.word	24
	.word	.L406,.L65,.L227-.L65
	.byte	8,19,8,20,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   242  
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   243  #define DEM_STOP_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\main\Dem_OperationCycle.c	   244  #include "Dem_Cfg_MemMap.h"

	; Module end
