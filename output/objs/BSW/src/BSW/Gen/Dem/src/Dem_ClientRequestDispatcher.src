	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc7580a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Dem\\src\\Dem_ClientRequestDispatcher.src BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c'

	
$TC16X
	
	.sdecl	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_transferSelectionErrorToResult',code,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_transferSelectionErrorToResult'
	.align	2
	

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     3  #include "Dem_ClientBaseHandling.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     4  #include "Dem_ClientRequestDispatcher.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     5  #include "Dem_ClientClearMachine.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     6  #include "Dem_EvMemApi.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     7  #include "Dem_DTCGroup.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     8  #include "Dem_DTCs.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	     9  #include "Dem_ClientSelectionResult.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    14  static void Dem_ClientRequestDispatcher_transferSelectionErrorToResult(Dem_ClientIdType ClientId, Dem_ClientRequestType request)
; Function Dem_ClientRequestDispatcher_transferSelectionErrorToResult
.L73:
Dem_ClientRequestDispatcher_transferSelectionErrorToResult:	.type	func

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    15  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    16      Dem_ClientResultType_setResult(&Dem_Clients[ClientId].result, request,
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    17              Dem_ClientSelectionType_getSelectionResult(Dem_Clients[ClientId].selection));
	sha	d4,#4
.L305:
	movh.a	a15,#@his(Dem_Clients)
	lea	a15,[a15]@los(Dem_Clients)
.L438:
	addsc.a	a15,a15,d4,#0
.L439:
	ld.w	d15,[a15]12
.L239:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   150  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   151  DEM_INLINE void Dem_ClientSelectionType_invalidateSelectionResult (Dem_ClientSelectionType *selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   152  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   153      Std_ReturnType tempresult = DEM_PENDING;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   154      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   155  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   156      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   157  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   158      tempSelection = (*selection & DEM_CLIENT_INVALIDATE_SELECTION_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   159      tempSelection |= (((uint32)tempresult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   160      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   161  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   162  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   163  DEM_INLINE Std_ReturnType Dem_ClientSelectionType_getSelectionResult (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   164  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));
	sh	d15,d15,#-24
.L440:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));      (inlined)
	j	.L2

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   166  }      (inlined)
.L2:
	lea	a15,[a15]10
.L241:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	mov.u	d0,#65280
.L307:
	and	d5,d0
.L306:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d5,d15
.L441:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a15],d5
.L242:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    18  }
	ret
.L236:
	
__Dem_ClientRequestDispatcher_transferSelectionErrorToResult_function_end:
	.size	Dem_ClientRequestDispatcher_transferSelectionErrorToResult,__Dem_ClientRequestDispatcher_transferSelectionErrorToResult_function_end-Dem_ClientRequestDispatcher_transferSelectionErrorToResult
.L91:
	; End of function
	
	.sdecl	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_calculateSelection',code,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_calculateSelection'
	.align	2
	

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    19  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    20  static void Dem_ClientRequestDispatcher_calculateSelection (Dem_ClientIdType ClientId)
; Function Dem_ClientRequestDispatcher_calculateSelection
.L75:
Dem_ClientRequestDispatcher_calculateSelection:	.type	func
	mov	d8,d4
.L309:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    21  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    22      if (Dem_ClientSelectionType_isSelectionPending(Dem_Client_getClient(ClientId)->selection))
	mov	d4,d8
	call	Dem_Client_getClient
.L308:
	ld.w	d15,[a2]12
.L250:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
	sh	d15,d15,#-24
.L310:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
	eq	d15,d15,#4
.L311:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);      (inlined)
	j	.L3

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }      (inlined)
.L3:
	jeq	d15,#0,.L4
.L255:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    23      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    24          Dem_DtcIdType dtcId = DEM_DTCID_INVALID;
	mov	d10,#0
.L312:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    25          uint8 typeOfSelection = DEM_CLIENT_SELECTION_TYPE_INVALID;
	mov	d11,#0
.L314:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    26          Std_ReturnType selectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    27  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    28          if (!Dem_EvMemIsDtcOriginValid(&Dem_Client_getClient(ClientId)->DTCOrigin))
	mov	d4,d8
.L315:
	call	Dem_Client_getClient
.L316:
	add.a	a2,#5
.L260:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     4  #ifndef DEM_EVMEMAPI_H
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     5  #define DEM_EVMEMAPI_H
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     7  #include "Dem_EvMemTypes.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     8  #include "Dem_Cfg_EvMem.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	     9  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    10  /* ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    11     Interface Functions
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    12     ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    13  */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    14  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    15  typedef struct
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    16  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    17    /* DEM API write */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    18    Dem_DtcIdType            DtcId;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    19    Dem_DTCOriginType        DTCOrigin;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    20    uint8                    ReqCounter;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    21    /* DEM Main write */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    22    uint8                    DemCounter;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    23    boolean                  IsValid;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    24    Dem_EvMemEventMemoryType EventMemory;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    25  } Dem_EvMemDTCRecordType;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    26  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    27  #define DEM_START_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    28  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    29  extern Dem_EvMemDTCRecordType Dem_EvMemDTCRecord;
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    30  #define DEM_STOP_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    31  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    32  #define DEM_START_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    33  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    34  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    35  /* Read Events From EvMem */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    36  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    37  void Dem_EvMemApiMainFunction(void);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    38  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    39  #define DEM_STOP_SEC_ROM_CODE
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    40  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    41  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    42  /* ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    43     Inline Functions
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    44     ----------------------------------------------------------------------------
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    45  */
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    46  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    47  DEM_INLINE Dem_boolean_least Dem_EvMemIsDtcKindValid (Dem_DTCKindType DTCKind)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    48  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    49      return (DTCKind == DEM_DTC_KIND_ALL_DTCS);
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    50  }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    51  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    52  
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    53  DEM_INLINE Dem_boolean_least Dem_EvMemIsDtcOriginValid (Dem_DTCOriginType  *DTCOrigin)
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    54  {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    55      if(*DTCOrigin == DEM_DTC_ORIGIN_USERDEFINED_MEMORY)
	ld.bu	d15,[a2]
.L446:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    55      if(*DTCOrigin == DEM_DTC_ORIGIN_USERDEFINED_MEMORY)      (inlined)
	jne	d15,#0,.L5
.L447:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    56      {
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    57          *DTCOrigin = DEM_DTC_ORIGIN_SECONDARY_MEMORY;
	mov	d0,#4
.L448:
	st.b	[a2],d0

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    55      if(*DTCOrigin == DEM_DTC_ORIGIN_USERDEFINED_MEMORY)      (inlined)
.L5:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    58      }
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    59      return (
; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    60                 (*DTCOrigin == DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	ld.bu	d0,[a2]
.L449:
	eq	d15,d0,#1
.L450:

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    59      return (      (inlined)
	j	.L6

; .\BSW\src\BSW\Gen\Dem\src\evmem\Dem_EvMemApi.h	    68  }      (inlined)
.L6:
	jne	d15,#0,.L7
.L451:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    29          {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    30              selectionResult = DEM_WRONG_DTCORIGIN;
	mov	d9,#2
.L317:
	j	.L8
.L7:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    31          }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    32          else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    33          {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    34              if (Dem_Client_getClient(ClientId)->DTC == DEM_DTC_GROUP_ALL_DTCS)
	mov	d4,d8
.L318:
	call	Dem_Client_getClient
.L319:
	ld.w	d0,[a2]
.L452:
	mov.u	d15,#65535
	addih	d15,d15,#255
.L453:
	jne	d15,d0,.L9
.L454:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    35              {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    36                  typeOfSelection = DEM_CLIENT_SELECTION_TYPE_ALL_DTCS;
	mov	d11,#1
.L455:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    37                  selectionResult = E_OK;
	mov	d9,#0
.L320:
	j	.L10
.L9:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    38              }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    39              else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    40              {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    41                  dtcId = Dem_DtcGroupIdFromDtcGroupCode(Dem_Client_getClient(ClientId)->DTC);
	mov	d4,d8
.L321:
	call	Dem_Client_getClient
.L322:
	ld.w	d4,[a2]
	call	Dem_DtcGroupIdFromDtcGroupCode
.L313:
	mov	d10,d2
.L324:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    42                  if (dtcId != DEM_DTCGROUPID_INVALID)
	jeq	d10,#0,.L11
.L456:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    43                  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    44                      typeOfSelection = DEM_CLIENT_SELECTION_TYPE_GROUP_DTC;
	mov	d11,#2
.L457:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    45                      selectionResult = E_OK;
	mov	d9,#0
.L326:
	j	.L12
.L11:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    46                  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    47                  else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    48                  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    49                      dtcId = Dem_DtcIdFromDtcCode(Dem_Client_getClient(ClientId)->DTC);
	mov	d4,d8
.L327:
	call	Dem_Client_getClient
.L323:
	ld.w	d4,[a2]
	call	Dem_DtcIdFromDtcCode
.L325:
	mov	d10,d2
.L265:

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     4  #ifndef DEM_DTCS_H
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     5  #define DEM_DTCS_H
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     7  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     8  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	     9  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    10  #include "Dem_Array.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    11  #include "Dem_BitArray.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    12  #include "rba_DiagLib_Bits8.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    13  #include "Dem_Cfg_DtcId.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    14  #include "Dem_Cfg_DTC_DataStructures.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    15  #include "Dem_Cfg_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    16  #include "Dem_Mapping.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    17  #include "Dem_ISO14229Byte.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    18  #include "Dem_Events.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    19  #include "Dem_DTCStatusByte.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    20  #include "Dem_Cfg_Events_DataStructures.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    21  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    22  #include "Dem_Helpers.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    23  #include "Dem_EvMem.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    24  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    25  #define DEM_DTC_SETTING_ENABLED     FALSE
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    26  #define DEM_DTC_SETTING_DISABLED    TRUE
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    27  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    28  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    29  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    30  	Dem_DtcStateType state;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    31  } Dem_DtcState;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    32  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    33  /******************************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    34  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    35  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    36  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    37  #define DEM_DTCS_NVSTORAGE_BP    2u
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    38  #define DEM_DTCS_ALTERNATIVEDTC_FLAG_BP    3u
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    39  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    40  #define DEM_DTCS_SEVERITYMASK    0xE0u
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    41  #define DEM_DTCS_KINDMASK        0x03u
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    42  #define DEM_DTCS_NVSTORAGEMASK   ((uint8)(1u<<DEM_DTCS_NVSTORAGE_BP))
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    43  #define DEM_DTCS_ALTERNATIVEDTC_FLAG   ((uint8)(1u<<DEM_DTCS_ALTERNATIVEDTC_FLAG_BP))
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    44  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    45  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    46  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    47  #define DEM_DTCS_INIT8(KIND, SEVERITY, NVSTORAGE, FUNC_UNIT, INDEXOF_ALTERNATIVE_DTCID) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    48  {   ((KIND) & (DEM_DTCS_KINDMASK))|((SEVERITY) & (DEM_DTCS_SEVERITYMASK)) | ((uint8)(((NVSTORAGE) & (0x01u)) << DEM_DTCS_NVSTORAGE_BP)) | ((uint8)((DEM_BOOL2BIT(INDEXOF_ALTERNATIVE_DTCID) & (0x01u)) << DEM_DTCS_ALTERNATIVEDTC_FLAG_BP)) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    49      ,(FUNC_UNIT) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    50  }
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    51  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    52  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    53  #if (DEM_CFG_OBD == DEM_CFG_OBD_ON) && (DEM_CFG_OBD_DTC_CONFIG != DEM_CFG_OBD_DTC_CONFIG_OFF)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    54  #define DEM_DTCS_INIT16(OBDCODE) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    55  {   (OBDCODE) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    56  }
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    57  #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    58  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    59  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    60  #define DEM_DTCS_INIT32(CODE) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    61  {   (CODE) \ 
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    62  }
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    63  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    64  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    65  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    66  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    67     uint8 kind_severity_storage;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    68     uint8 Functional_Unit;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    69  } Dem_DtcParam8;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    70  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    71  /* FC_VariationPoint_START */
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    72  #if (DEM_CFG_OBD == DEM_CFG_OBD_ON) && (DEM_CFG_OBD_DTC_CONFIG != DEM_CFG_OBD_DTC_CONFIG_OFF)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    73  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    74     uint16 ObdCode;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    75  } Dem_DtcParam16;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    76  #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    77  /* FC_VariationPoint_END */
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    78  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    79  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    80     Dem_DtcCodeType code;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    81  } Dem_DtcParam32;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    82  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    83  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    84      Dem_DtcCodeType AltDtccode;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    85      Dem_DtcCodeType Dtccode;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    86  }Dem_DtcAltParam;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    87  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    88  /******************************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    89  #define DEM_START_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    90  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    91  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    92      DEM_ARRAY_DECLARE(Dem_DtcState, Dem_AllDTCsState, DEM_DTCID_ARRAYLENGTH);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    93  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    94  #define DEM_STOP_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    95  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    96  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    97  #define DEM_START_SEC_RAM_INIT
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    98  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	    99  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   100      #if(DEM_CFG_ALTERNATIVEDTC == DEM_CFG_ALTERNATIVEDTC_ON)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   101      extern boolean Dem_AlternativeDTCEnabled;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   102      #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   103  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   104  #define DEM_STOP_SEC_RAM_INIT
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   105  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   106  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   107  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   108  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   109  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   110      #if (DEM_CFG_ALTERNATIVEDTC == DEM_CFG_ALTERNATIVEDTC_ON)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   111      DEM_ARRAY_DECLARE_CONST(Dem_DtcAltParam, Dem_AllAlternativeDTCsParam, DEM_ALTERNATIVE_DTCCODE_ARRAYLENGTH);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   112      #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   113  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   114  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   115  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   116  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   117  /********DTC SUPPRESSION************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   118  DEM_INLINE Dem_boolean_least Dem_DtcIsSuppressed (Dem_DtcIdType dtcId)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   119  {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   120  #if (DEM_CFG_SUPPRESSION != DEM_NO_SUPPRESSION)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   121      return DEM_DTCSTATE_ISBITSET (Dem_AllDTCsState[dtcId].state, DEM_DTC_BP_STATE_SUPPRESSED);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   122  #else
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   123      DEM_UNUSED_PARAM(dtcId);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   124      return FALSE;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   125  #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   126  }
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   127  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   128  DEM_INLINE Dem_boolean_least Dem_DtcIsSuppressedDirectly (Dem_DtcIdType dtcId)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   129  {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   130  #if ((DEM_CFG_SUPPRESSION == DEM_DTC_SUPPRESSION) || (DEM_CFG_SUPPRESSION == DEM_EVENT_AND_DTC_SUPPRESSION))
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   131      return DEM_DTCSTATE_ISBITSET (Dem_AllDTCsState[dtcId].state, DEM_DTC_BP_STATE_SUPPRESSED_DIRECTLY);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   132  #else
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   133      DEM_UNUSED_PARAM(dtcId);
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   134      return FALSE;
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   135  #endif
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   136  }
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   137  
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   138  DEM_INLINE Dem_boolean_least Dem_DtcIsSupported (Dem_DtcIdType dtcID)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   139  {
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   140      return (Dem_isDtcIdValid(dtcID)
; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   141              && (!Dem_DtcIsSuppressed(dtcID))
	mov	d0,#0
.L271:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     4  #ifndef DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     5  #define DEM_MAPPING_H
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     7  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     8  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	     9  #include "Dem_Lib.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    10  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    11  #include "Dem_Cfg_EventId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    12  #include "Dem_Cfg_DtcId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    13  #include "Dem_Cfg_NodeId.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    14  #include "Dem_Cfg_Nodes.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    15  #include "Dem_Cfg_EventIndicators.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    16  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    17  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    18  /*** EVENTID *****************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    19  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    20  DEM_INLINE Dem_boolean_least Dem_isEventIdValid(Dem_EventIdType checkID)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    21  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    22     return ((0 < checkID) && (checkID <= DEM_EVENTID_COUNT));
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    23  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    24  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    25  /*Iterator for EventId*/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    26  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    27  typedef uint16_least Dem_EventIdIterator; /* do not change to uint8_least */
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    28  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    29  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    30  #define DEM_EVENTIDITERATORNEW  1
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    31  DEM_INLINE void Dem_EventIdIteratorNew(Dem_EventIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    32  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    33     (*it) = DEM_EVENTIDITERATORNEW;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    34  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    35  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    36  DEM_INLINE Dem_boolean_least Dem_EventIdIteratorIsValid(const Dem_EventIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    37  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    38     return (*it <= DEM_EVENTID_COUNT);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    39  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    40  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    41  DEM_INLINE void Dem_EventIdIteratorNext(Dem_EventIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    42  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    43     (*it)++;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    44  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    45  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    46  DEM_INLINE Dem_EventIdType Dem_EventIdIteratorCurrent(const Dem_EventIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    47  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    48     return (Dem_EventIdType)(*it);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    49  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    50  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    51  /*** NODEID *****************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    52  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    53  #if (DEM_CFG_DEPENDENCY == DEM_CFG_DEPENDENCY_ON)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    54  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    55  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    56  extern const Dem_ComponentIdType  Dem_MapEventIdToNodeId[DEM_EVENTID_ARRAYLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    57  extern const Dem_EventIdType Dem_MapNodeIdToEventId[DEM_NODEID_ARRAYLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    58  extern const Dem_ComponentIdType  Dem_MapNodeIdToChildNodeId[DEM_CFG_CHILDNODE_LISTLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    59  extern const uint16 Dem_NodeToChildNodeIndex [DEM_NODEID_ARRAYLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    60  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    61  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    62  #define DEM_NODEIDITERATOR_NEW()       1
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    63  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    64  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    65  DEM_INLINE Dem_boolean_least Dem_NodeIdIsValid (uint16 checkID)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    66  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    67     return ((0 < checkID) && (checkID <= DEM_NODEID_COUNT));
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    68  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    69  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    70  /*Iterator for NodeID*/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    71  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    72  typedef uint16_least Dem_NodeIdIterator; /* do not change to uint8_least */
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    73  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    74  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    75  DEM_INLINE void Dem_NodeIdIteratorNew(Dem_NodeIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    76  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    77     (*it) = DEM_NODEIDITERATOR_NEW();
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    78  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    79  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    80  DEM_INLINE Dem_boolean_least Dem_NodeIdIteratorIsValid(const Dem_NodeIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    81  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    82     return (*it <= DEM_NODEID_COUNT);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    83  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    84  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    85  DEM_INLINE void Dem_NodeIdIteratorNext(Dem_NodeIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    86  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    87     (*it)++;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    88  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    89  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    90  DEM_INLINE Dem_ComponentIdType Dem_NodeIdIteratorCurrent(const Dem_NodeIdIterator *it)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    91  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    92     return (Dem_ComponentIdType)(*it);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    93  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    94  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    95  DEM_INLINE Dem_ComponentIdType  Dem_NodeIdFromEventId (Dem_EventIdType id)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    96  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    97     return Dem_MapEventIdToNodeId[id];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    98  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	    99  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   100  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   101  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   102  #else
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   103  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   104  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   105  DEM_INLINE Dem_ComponentIdType  Dem_NodeIdFromEventId (Dem_EventIdType id)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   106  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   107  	DEM_UNUSED_PARAM(id);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   108  	return DEM_NODEID_INVALID;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   109  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   110  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   111  DEM_INLINE Dem_boolean_least Dem_NodeIdIsValid (uint16 checkID)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   112  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   113  	DEM_UNUSED_PARAM(checkID);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   114  	return FALSE;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   115  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   116  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   117  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   118  #endif
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   119  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   120  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   121  /*** DTCID *****************************************************************/
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   122  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   123  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   124  #if (DEM_CFG_EVCOMB == DEM_CFG_EVCOMB_DISABLED)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   125  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   126  typedef Dem_EventIdType Dem_MapDtcIdToEventIdType;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   127  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   128  #else
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   129  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   130  typedef struct {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   131     const Dem_EventIdType *mappingTable;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   132     uint16 length;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   133  } Dem_MapDtcIdToEventIdType;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   134  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   135  #endif
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   136  typedef Dem_DTCGroupIdType Dem_MapDtcIdToGroupIdType;
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   137  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   138  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   139  extern const Dem_MapDtcIdToEventIdType  Dem_MapDtcIdToEventId[DEM_DTCID_ARRAYLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   140  extern const Dem_DtcIdType              Dem_MapEventIdToDtcId[DEM_EVENTID_ARRAYLENGTH];
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   141  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   142  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   143  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   144  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   145  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   146  DEM_INLINE Dem_boolean_least Dem_EventIdIsDtcAssigned (Dem_EventIdType id)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   147  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   148     return (Dem_MapEventIdToDtcId[id] != DEM_DTCID_INVALID);
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   149  }
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   150  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   151  
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   152  DEM_INLINE Dem_boolean_least Dem_isDtcIdValid (Dem_DtcIdType id)
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   153  {
; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   154     return ((0 < id) && (id <= DEM_DTCID_COUNT));
	mov	d1,#0
.L458:

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   154     return ((0 < id) && (id <= DEM_DTCID_COUNT));      (inlined)
	jeq	d10,#0,.L13
.L459:
	ge.u	d15,d10,#5
.L460:
	cmovn	d1,d15,#1

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   154     return ((0 < id) && (id <= DEM_DTCID_COUNT));      (inlined)
.L14:
.L13:
	j	.L15

; .\BSW\src\BSW\Gen\Dem\src\map\Dem_Mapping.h	   155  }      (inlined)
.L15:

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   140      return (Dem_isDtcIdValid(dtcID)      (inlined)
	jeq	d1,#0,.L16
.L272:
	movh.a	a15,#@his(Dem_AllDTCsState)
	lea	a15,[a15]@los(Dem_AllDTCsState)
.L461:
	addsc.a	a15,a15,d10,#0
.L462:
	ld.bu	d15,[a15]
.L463:
	mov	d1,#0
.L281:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     1  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     2  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     3  #ifndef RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     4  #define RBA_DIAGLIB_BITS8_H
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     5  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     6  #include "Std_Types.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     7  #include "Compiler.h"
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     8  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	     9  #define RBA_DIAGLIB_ISBITSET8       rba_DiagLib_Bit8IsBitSet
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    10  #define RBA_DIAGLIB_GETSINGLEBIT8   rba_DiagLib_Bit8GetSingleBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    11  #define RBA_DIAGLIB_GETBITS8        rba_DiagLib_Bit8GetBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    12  #define RBA_DIAGLIB_OVERWRITEBIT8   rba_DiagLib_Bit8OverwriteBit
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    13  #define RBA_DIAGLIB_OVERWRITEBITS8  rba_DiagLib_Bit8OverwriteBits
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    14  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    15  LOCAL_INLINE uint8 rba_DiagLib_Bit8Mask(uint8 pos, uint8 len)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    16  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    17      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    18      return (((bit2shift << len) - 1u) << pos);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    19  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    20  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    21  LOCAL_INLINE void rba_DiagLib_Bit8SetBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    22  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    23      *buffer |= bitMask;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    24  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    25  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    26  LOCAL_INLINE void rba_DiagLib_Bit8ClearBitMask(uint8 *buffer, uint8 bitMask)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    27  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    28      *buffer &= ((uint8) (~bitMask));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    29  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    30  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    31  LOCAL_INLINE void rba_DiagLib_Bit8MergeBitmask(uint8 *buffer, uint8 value)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    32  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    33      *buffer &= value;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    34  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    35  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    36  LOCAL_INLINE void rba_DiagLib_Bit8SetBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    37  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    38      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    39      *buffer |= ((uint8) (bit2shift << bit_position));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    40  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    41  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    42  LOCAL_INLINE void rba_DiagLib_Bit8ClearBit(uint8 *buffer, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    43  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    44      uint8 bit2shift = 1;
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    45      *buffer &= ((uint8) (~((uint8) (bit2shift << bit_position))));
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    46  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    47  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    48  LOCAL_INLINE void rba_DiagLib_Bit8OverwriteBit(uint8 *buffer, uint8 bit_position, boolean will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    49  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    50      if (will_bit_be_set)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    51      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    52          rba_DiagLib_Bit8SetBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    53      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    54      else
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    55      {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    56          rba_DiagLib_Bit8ClearBit(buffer, bit_position);
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    57      }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    58  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    59  
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    60  LOCAL_INLINE uint8 rba_DiagLib_Bit8GetSingleBit(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    61  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);
	rsub	d1,#0
	sha	d15,d15,d1
.L464:
	and	d15,#1
.L465:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    62      return (uint8) ((value >> (bit_position)) & 1u);      (inlined)
	j	.L17

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }      (inlined)
.L17:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    63  }
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    64  LOCAL_INLINE boolean rba_DiagLib_Bit8IsBitSet(uint8 value, uint8 bit_position)
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    65  {
; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);
	ne	d15,d15,#0
.L466:

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    66      return (boolean) (rba_DiagLib_Bit8GetSingleBit(value, bit_position) != 0u);      (inlined)
	j	.L18

; .\BSW\src\BSW\Gen\Rba_DiagLib\src\rba_DiagLib_Bits8.h	    67  }      (inlined)
.L18:

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   121      return DEM_DTCSTATE_ISBITSET (Dem_AllDTCsState[dtcId].state, DEM_DTC_BP_STATE_SUPPRESSED);      (inlined)
	j	.L19

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   126  }      (inlined)
.L19:
	cmovn	d0,d15,#1

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   141              && (!Dem_DtcIsSuppressed(dtcID))      (inlined)
.L20:

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   142      );      (inlined)
.L16:

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   140      return (Dem_isDtcIdValid(dtcID)      (inlined)
	j	.L21

; .\BSW\src\BSW\Gen\Dem\src\dtc\Dem_DTCs.h	   143  }      (inlined)
.L21:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    50                      if ((!Dem_DtcIsSupported(dtcId)) || (Dem_Client_getClient(ClientId)->DTCFormat == DEM_DTC_FORMAT_OBD))
	jeq	d0,#0,.L22
.L266:
	mov	d4,d8
.L330:
	call	Dem_Client_getClient
.L328:
	ld.bu	d15,[a2]4
.L467:
	jne	d15,#0,.L23
.L22:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    51                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    52                          selectionResult = DEM_WRONG_DTC;
	mov	d9,#1
.L331:
	j	.L24
.L23:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    53                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    54                      else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    55                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    56                          typeOfSelection = DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC;
	mov	d11,#3
.L468:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    57                          selectionResult = E_OK;
	mov	d9,#0
.L24:
.L12:
.L10:
.L8:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    58                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    59                  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    60              }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    61          }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    62          Dem_ClientSelectionType_setSelection(&Dem_Client_getClient(ClientId)->selection, dtcId, typeOfSelection, selectionResult);
	mov	d4,d8
.L332:
	call	Dem_Client_getClient
.L333:
	lea	a15,[a2]12
.L294:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
	sh	d15,d11,#16
.L469:
	or	d10,d15
.L329:
	sh	d15,d9,#24
.L334:
	or	d10,d15
.L470:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
	st.w	[a15],d10
.L4:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    63      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    64  }
	ret
.L247:
	
__Dem_ClientRequestDispatcher_calculateSelection_function_end:
	.size	Dem_ClientRequestDispatcher_calculateSelection,__Dem_ClientRequestDispatcher_calculateSelection_function_end-Dem_ClientRequestDispatcher_calculateSelection
.L96:
	; End of function
	
	.sdecl	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_main',code,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.text.Dem_ClientRequestDispatcher.Dem_ClientRequestDispatcher_main'
	.align	2
	
	.global	Dem_ClientRequestDispatcher_main

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    65  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    66  void Dem_ClientRequestDispatcher_main(void)
; Function Dem_ClientRequestDispatcher_main
.L77:
Dem_ClientRequestDispatcher_main:	.type	func

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    67  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    68      uint8 clientId;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    69      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    70      boolean execute;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    71  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    72      for (clientId = 1; clientId < DEM_CLIENTID_ARRAYLENGTH; clientId++)
	mov	d9,#1
.L335:
	j	.L25
.L26:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    73      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    74          tempRequest = Dem_Clients[clientId].request;
	movh.a	a12,#@his(Dem_Clients)
	lea	a12,[a12]@los(Dem_Clients)
.L371:
	sha	d15,d9,#4
.L372:
	addsc.a	a15,a12,d15,#0
.L373:
	ld.hu	d8,[a15]8
.L104:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
	mov.u	d10,#65280
.L374:
	sha	d15,d9,#4
.L375:
	addsc.a	a2,a12,d15,#0
.L376:
	ld.hu	d0,[a2]8
.L377:
	and	d0,d10
.L378:
	ld.hu	d1,[a2]10
.L379:
	and	d1,d10
.L380:
	ne	d15,d0,d1
.L381:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)      (inlined)
	j	.L27

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }      (inlined)
.L27:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    75  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    76          if (Dem_ClientRequestType_isRequestInProgress(clientId))
	jeq	d15,#0,.L28
.L109:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
	and	d15,d8,#1
	ne	d15,d15,#0
.L382:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);      (inlined)
	j	.L29

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }      (inlined)
.L29:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    77          {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    78              if ((Dem_ClientRequestType_isCancelRequested(tempRequest))
	jeq	d15,#0,.L30
.L114:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     3  #ifndef DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     4  #define DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     7  #include "Dem_ClientBaseHandling.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     8  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     9  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    10  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    11  #include "Dem_Nvm.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    12  #include "Dem_Cfg_Clear.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    14  /******************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    15  /****************  Machine States  ********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    16  #define DEM_CLEAR_DTC_MACHINE_STATE_IDLE            0x00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    17  #define DEM_CLEAR_DTC_MACHINE_STATE_EXEC            0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    18  #define DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM   0x02u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    19  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    20  typedef struct
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    21  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    22    uint8                           activeClient;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    23    uint8                           machine_state;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    24    /* Boolean variable to indicate the clear is requested newly and the iterators has to be initialized */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    25    boolean                         IsNewClearRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    26    /* Boolean variable to indicate the limit to procees the events per cycle has reached */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    27    boolean                         IsClearInterrupted;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    28    /* Variable to indicate the no of events cleared in a cycle */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    29    uint16                          NumberOfEventsProcessed;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    30    /* Iterators */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    31    Dem_DtcIdListIterator           DtcIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    32    Dem_EventIdIterator             EvtIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    33    Dem_EventIdListIterator         EvtListIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    34  #if(DEM_CFG_J1939DCM_CLEAR_SUPPORT != DEM_CFG_J1939DCM_OFF)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    35    Dem_DtcIdListIterator2          DtcIt2;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    37  } Dem_ClientClearMachineType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    38  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    39  #define DEM_START_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    40  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    41  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    42  extern Dem_ClientClearMachineType Dem_ClientClearMachine;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    43  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    44  #define DEM_STOP_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    45  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    47  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    48  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    49  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    50  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    51  /****************  Dem_ClientClearMachine  *************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    52  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    53  DEM_INLINE void Dem_ClientClearMachine_SetMachineActiveClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    54  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    55      Dem_ClientClearMachine.activeClient = ClientId;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    56  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    57  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    58  DEM_INLINE boolean Dem_ClientClearMachine_isProcessingClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    59  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    60      return (Dem_ClientClearMachine.activeClient == ClientId);
	movh.a	a2,#@his(Dem_ClientClearMachine)
	lea	a2,[a2]@los(Dem_ClientClearMachine)
.L383:
	ld.bu	d15,[a2]
.L384:
	eq	d15,d15,d9
.L385:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    60      return (Dem_ClientClearMachine.activeClient == ClientId);      (inlined)
	j	.L31

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    61  }      (inlined)
.L31:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    79                      && (!(Dem_ClientClearMachine_isProcessingClient(clientId))))
	jne	d15,#0,.L32
.L386:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    80              {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    81                  Dem_ClientResultType_confirmCancel(&Dem_Clients[clientId].result, tempRequest);
	lea	a15,[a15]10
.L119:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d8,d10
.L336:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
	or	d15,d8,#3
.L337:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
	st.h	[a15],d15
.L120:
	j	.L33
.L32:
.L30:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    82              }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    83              else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    84              {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    85                  execute = TRUE;
	mov	d11,#1
.L338:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    86  #if(DEM_CFG_J1939DCM != DEM_CFG_J1939DCM_OFF)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    87                  if (clientId != DEM_CLIENTID_J1939)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    88  #endif
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    89                  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    90                      Dem_ClientRequestDispatcher_calculateSelection(clientId);
	mov	d4,d9
.L339:
	call	Dem_ClientRequestDispatcher_calculateSelection
.L340:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    91  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    92                      if (Dem_ClientSelectionType_getSelectionResult(Dem_Clients[clientId].selection) != E_OK)
	ld.w	d15,[a15]12
.L128:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   150  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   151  DEM_INLINE void Dem_ClientSelectionType_invalidateSelectionResult (Dem_ClientSelectionType *selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   152  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   153      Std_ReturnType tempresult = DEM_PENDING;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   154      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   155  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   156      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   157  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   158      tempSelection = (*selection & DEM_CLIENT_INVALIDATE_SELECTION_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   159      tempSelection |= (((uint32)tempresult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   160      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   161  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   162  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   163  DEM_INLINE Std_ReturnType Dem_ClientSelectionType_getSelectionResult (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   164  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));
	sh	d15,d15,#-24
.L387:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));      (inlined)
	j	.L34

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   166  }      (inlined)
.L34:
	jeq	d15,#0,.L35
.L388:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    93                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    94                          Dem_ClientRequestDispatcher_transferSelectionErrorToResult(clientId, tempRequest);
	mov	e4,d8,d9
	call	Dem_ClientRequestDispatcher_transferSelectionErrorToResult
.L389:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    95                          execute = FALSE;
	mov	d11,#0
.L35:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    96                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    97                  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    98                  if (execute)
	jeq	d11,#0,.L36
.L133:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	extr.u	d15,d8,#0,#8
.L341:
	sha	d15,#-1
.L390:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L37

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L37:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	    99                  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   100                      if (Dem_ClientRequestType_getMachineIndex(tempRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   101                              == (Dem_ClientRequestType_getMachineIndex(DEM_CLIENT_REQUEST_CLEAR)))
	mov	d0,#2
.L140:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	sha	d0,#-1
.L391:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L38

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L38:
	jne	d15,d0,.L39
.L138:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     3  #ifndef DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     4  #define DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     7  #include "Dem_ClientBaseHandling.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     8  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     9  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    10  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    11  #include "Dem_Nvm.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    12  #include "Dem_Cfg_Clear.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    14  /******************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    15  /****************  Machine States  ********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    16  #define DEM_CLEAR_DTC_MACHINE_STATE_IDLE            0x00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    17  #define DEM_CLEAR_DTC_MACHINE_STATE_EXEC            0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    18  #define DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM   0x02u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    19  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    20  typedef struct
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    21  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    22    uint8                           activeClient;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    23    uint8                           machine_state;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    24    /* Boolean variable to indicate the clear is requested newly and the iterators has to be initialized */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    25    boolean                         IsNewClearRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    26    /* Boolean variable to indicate the limit to procees the events per cycle has reached */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    27    boolean                         IsClearInterrupted;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    28    /* Variable to indicate the no of events cleared in a cycle */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    29    uint16                          NumberOfEventsProcessed;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    30    /* Iterators */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    31    Dem_DtcIdListIterator           DtcIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    32    Dem_EventIdIterator             EvtIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    33    Dem_EventIdListIterator         EvtListIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    34  #if(DEM_CFG_J1939DCM_CLEAR_SUPPORT != DEM_CFG_J1939DCM_OFF)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    35    Dem_DtcIdListIterator2          DtcIt2;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    37  } Dem_ClientClearMachineType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    38  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    39  #define DEM_START_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    40  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    41  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    42  extern Dem_ClientClearMachineType Dem_ClientClearMachine;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    43  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    44  #define DEM_STOP_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    45  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    47  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    48  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    49  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    50  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    51  /****************  Dem_ClientClearMachine  *************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    52  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    53  DEM_INLINE void Dem_ClientClearMachine_SetMachineActiveClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    54  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    55      Dem_ClientClearMachine.activeClient = ClientId;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    56  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    57  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    58  DEM_INLINE boolean Dem_ClientClearMachine_isProcessingClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    59  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    60      return (Dem_ClientClearMachine.activeClient == ClientId);
	movh.a	a15,#@his(Dem_ClientClearMachine)
	lea	a15,[a15]@los(Dem_ClientClearMachine)
.L392:
	ld.bu	d0,[a15]
.L343:
	eq	d15,d0,d9
.L342:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    60      return (Dem_ClientClearMachine.activeClient == ClientId);      (inlined)
	j	.L40

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    61  }      (inlined)
.L40:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   102                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   103                          if ((!(Dem_ClientClearMachine_isProcessingClient(clientId)))
	jne	d15,#0,.L41
.L143:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    65      return Dem_ClientClearMachine.activeClient;      (inlined)
	j	.L42

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    66  }      (inlined)
.L42:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   104                                  && (Dem_ClientClearMachine_GetMachineActiveClient() == DEM_CLIENTID_INVALID))
	jne	d0,#0,.L43
.L393:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   105                          {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   106                              Dem_ClientClearMachine_SetClientRequest(clientId, DEM_CLEAR_DTC_MACHINE_STATE_EXEC);
	mov	d11,#1
.L146:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     3  #ifndef DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     4  #define DEM_CLIENTCLEARMACHINE_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     7  #include "Dem_ClientBaseHandling.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     8  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	     9  #include "Dem_Types.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    10  #include "Dem_Mapping.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    11  #include "Dem_Nvm.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    12  #include "Dem_Cfg_Clear.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    14  /******************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    15  /****************  Machine States  ********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    16  #define DEM_CLEAR_DTC_MACHINE_STATE_IDLE            0x00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    17  #define DEM_CLEAR_DTC_MACHINE_STATE_EXEC            0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    18  #define DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM   0x02u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    19  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    20  typedef struct
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    21  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    22    uint8                           activeClient;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    23    uint8                           machine_state;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    24    /* Boolean variable to indicate the clear is requested newly and the iterators has to be initialized */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    25    boolean                         IsNewClearRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    26    /* Boolean variable to indicate the limit to procees the events per cycle has reached */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    27    boolean                         IsClearInterrupted;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    28    /* Variable to indicate the no of events cleared in a cycle */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    29    uint16                          NumberOfEventsProcessed;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    30    /* Iterators */
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    31    Dem_DtcIdListIterator           DtcIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    32    Dem_EventIdIterator             EvtIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    33    Dem_EventIdListIterator         EvtListIt;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    34  #if(DEM_CFG_J1939DCM_CLEAR_SUPPORT != DEM_CFG_J1939DCM_OFF)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    35    Dem_DtcIdListIterator2          DtcIt2;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    36  #endif
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    37  } Dem_ClientClearMachineType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    38  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    39  #define DEM_START_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    40  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    41  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    42  extern Dem_ClientClearMachineType Dem_ClientClearMachine;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    43  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    44  #define DEM_STOP_SEC_RAM_CLEARED
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    45  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    47  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    48  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    49  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    50  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    51  /****************  Dem_ClientClearMachine  *************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    52  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    53  DEM_INLINE void Dem_ClientClearMachine_SetMachineActiveClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    54  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    55      Dem_ClientClearMachine.activeClient = ClientId;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    56  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    57  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    58  DEM_INLINE boolean Dem_ClientClearMachine_isProcessingClient(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    59  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    60      return (Dem_ClientClearMachine.activeClient == ClientId);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    61  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    62  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    63  DEM_INLINE uint8 Dem_ClientClearMachine_GetMachineActiveClient(void)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    64  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    65      return Dem_ClientClearMachine.activeClient;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    66  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    67  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    68  DEM_INLINE void Dem_ClientClearMachine_SetMachineState(uint8 state)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    69  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    70      Dem_ClientClearMachine.machine_state = state;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    71  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    72  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    73  DEM_INLINE uint8 Dem_ClientClearMachine_GetMachineState(void)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    74  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    75      return Dem_ClientClearMachine.machine_state;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    76  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    78  DEM_INLINE boolean Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected(Dem_ClientIdType ClientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    80  boolean status = TRUE;
	mov	d0,#1
.L159:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     3  #ifndef DEM_LIB_H
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     4  #define DEM_LIB_H
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     5  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     6  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     7  #include "Dem_Prv_Det.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     8  #include "rba_DiagLib_MemUtils.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     9  #include "Dem_Cfg_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    10  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    11  /* Macro for static assertion Check */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    12  /* either array length is (2*1)-1->valid or (2*0)-1->invalid*/
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    13  #define DEM_STATIC_ASSERT(COND,MSG) typedef uint8 Dem_static_assertion_##MSG[(2*(((COND)!=(FALSE))?1:0))-1]
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    14  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    15  /* mapping of memset and memcpy */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    16  #define DEM_MEMCPY  RBA_DIAGLIB_MEMCPY
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    17  #define DEM_MEMSET  RBA_DIAGLIB_MEMSET
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    18  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    19  /* Defines */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    20  #define DEM_MAXSINT16   0x7FFF
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    21  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    22  #if (DEM_CFG_BUILDTARGET != DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    23      #define DEM_ASSERT_RANGECHECK(CONDITION) do {} while (0)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    24  #else
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    25      #include "DemTest_Stub4RangeCheck.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    26  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    27      #define DEM_ASSERT_RANGECHECK(CONDITION) DEM_assertValueInRange(CONDITION)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    28  #endif
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    29  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    30  // these functions are necessary to avoid compiler warnings of the kind "statement is always FALSE"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    31  DEM_INLINE uint16 Dem_LibGetParamUI16( uint16 parameter )
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    32  {
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    33      return parameter;
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    34  }
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    35  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    36  DEM_INLINE uint8 Dem_LibGetParamUI8( uint8 parameter )
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    37  {
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;
	mov	d15,#2

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;      (inlined)
	j	.L44

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    39  }      (inlined)
.L44:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    81  #if(DEM_CFG_J1939DCM != DEM_CFG_J1939DCM_OFF)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    82  if (ClientId != DEM_CLIENTID_J1939)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    83  #endif
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    84  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    85      if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    86              == Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION_ONLY_CLEAR_ALL_DTCS))
	mov	d1,#2
.L163:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;      (inlined)
	j	.L45

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    39  }      (inlined)
.L45:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    85      if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION)      (inlined)
	jne	d15,d1,.L46
.L394:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    87              && (Dem_ClientSelectionType_getTypeOfSelection(Dem_Clients[ClientId].selection)
	sha	d15,d9,#4
.L395:
	addsc.a	a2,a12,d15,#0
.L396:
	ld.w	d15,[a2]12
.L165:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   150  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   151  DEM_INLINE void Dem_ClientSelectionType_invalidateSelectionResult (Dem_ClientSelectionType *selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   152  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   153      Std_ReturnType tempresult = DEM_PENDING;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   154      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   155  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   156      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   157  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   158      tempSelection = (*selection & DEM_CLIENT_INVALIDATE_SELECTION_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   159      tempSelection |= (((uint32)tempresult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   160      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   161  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   162  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   163  DEM_INLINE Std_ReturnType Dem_ClientSelectionType_getSelectionResult (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   164  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   166  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   167  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   168  DEM_INLINE uint8 Dem_ClientSelectionType_getTypeOfSelection (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   169  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   170      return ((uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK));
	sh	d15,d15,#-16
.L397:
	extr.u	d15,d15,#0,#8
.L398:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   170      return ((uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK));      (inlined)
	j	.L47

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   171  }      (inlined)
.L47:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    88                      != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))      (inlined)
	jeq	d15,#1,.L48
.L399:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    88                      != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    89      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    90          Dem_ClientResultType_setResult(&Dem_Clients[ClientId].result, Dem_Clients[ClientId].request, DEM_WRONG_DTC);
	ld.hu	d15,[a2]8
.L400:
	lea	a2,[a2]10
.L401:
	mov	d0,#1
.L170:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d15,d10
.L345:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d0,d15
.L344:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a2],d0
.L171:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    91          status = FALSE;
	mov	d0,#0

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    85      if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION)      (inlined)
.L48:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    88                      != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))      (inlined)
.L46:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    94  return status;      (inlined)
	j	.L49

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    95  }      (inlined)
.L49:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    99  if (Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected(ClientId))      (inlined)
	jeq	d0,#0,.L50
.L153:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   101      if (state == DEM_CLEAR_DTC_MACHINE_STATE_IDLE)      (inlined)
	jne	d11,#0,.L51
.L402:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    92      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    93  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    94  return status;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    95  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    96  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    97  DEM_INLINE void Dem_ClientClearMachine_SetClientRequest(Dem_ClientIdType ClientId, uint8 state)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    98  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    99  if (Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected(ClientId))
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   100  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   101      if (state == DEM_CLEAR_DTC_MACHINE_STATE_IDLE)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   102      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   103          Dem_ClientSelectionType_invalidateSelectionResult(&Dem_Client_getClient(ClientId)->selection);
	mov	d4,d9
.L347:
	call	Dem_Client_getClient
.L346:
	lea	a2,[a2]12
.L181:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   150  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   151  DEM_INLINE void Dem_ClientSelectionType_invalidateSelectionResult (Dem_ClientSelectionType *selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   152  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   153      Std_ReturnType tempresult = DEM_PENDING;
	mov	d15,#4
.L348:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   154      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   155  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   156      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   157  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   158      tempSelection = (*selection & DEM_CLIENT_INVALIDATE_SELECTION_IDMASK);
	ld.w	d0,[a2]
.L403:
	insert	d0,d0,#0,#24,#8
.L350:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   159      tempSelection |= (((uint32)tempresult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT);
	sh	d15,d15,#24
.L349:
	or	d0,d15
.L404:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   160      *selection = tempSelection;
	st.w	[a2],d0
.L182:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   104          Dem_ClientClearMachine_SetMachineActiveClient(DEM_CLIENTID_INVALID);
	mov	d15,#0
.L190:
	st.b	[a15],d15
.L191:
	st.b	[a15]1,d11
.L196:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   103          Dem_ClientSelectionType_invalidateSelectionResult(&Dem_Client_getClient(ClientId)->selection);      (inlined)
	j	.L52

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   101      if (state == DEM_CLEAR_DTC_MACHINE_STATE_IDLE)      (inlined)
.L51:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   107      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_EXEC)      (inlined)
	jne	d11,#1,.L53
.L405:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   105          Dem_ClientClearMachine_SetMachineState(state);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   106      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   107      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_EXEC)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   108      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   109          Dem_ClientClearMachine.IsNewClearRequest = TRUE;
	mov	d15,#1
.L406:
	st.b	[a15]2,d15
.L200:
	st.b	[a15],d9
.L201:

; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     1   
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     3  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     4  #ifndef DEM_NVM_H
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     5  #define DEM_NVM_H
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     6  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     7  #include "NvM.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     8  #include "Dem_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	     9  #include "Dem_Nvm_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    10  #include "Dem_Array.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    11  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    12  #include "Dem_Cfg_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    13  #include "rba_DiagLib_Bits8.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    14  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    15  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    16  #define DEM_START_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    17  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    18  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    19  DEM_ARRAY_DECLARE(Dem_NvMBlockStatusDoubleBufferType, Dem_NvMBlockStatusDoubleBuffer, DEM_NVM_CFG_NUM_BLOCKS_TOTAL);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    20  DEM_ARRAY_DECLARE(Dem_NvMStorageBufferType, Dem_NvMStorageBuffer, DEM_NVM_CFG_NUM_STORAGEBUFFER);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    21  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    22  extern Dem_EraseAllStatusType Dem_EraseAllNvMDataStatus;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    23  #if (DEM_CFG_ERASE_ALL_DATA_SUPPORTED == DEM_CFG_ERASE_ALL_WITH_HASHID_CHECK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    24  DEM_ARRAY_DECLARE(Dem_NvmHashIdType, Dem_HashIdInNvm, DEM_NVM_HASH_ID_SIZE);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    25  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    26  extern boolean Dem_NvMAnyClearFailed;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    27  #if(DEM_CFG_TRIGGER_TO_STORE_NVM_SUPPORTED)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    28  extern boolean Dem_NvMImmediateStorageRequested;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    29  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    30  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    31  #define DEM_STOP_SEC_RAM_CLEARED
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    32  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    33  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    34  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    35  #define DEM_START_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    36  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    37  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    38  DEM_ARRAY_DECLARE_CONST(NvM_BlockIdType, Dem_NvMBlockMap2NvmId, DEM_NVM_CFG_NUM_BLOCKS_TOTAL);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    39  DEM_ARRAY_DECLARE_CONST(Dem_NvmBlockIdExtendedType, Dem_NvmBlockIdExtended, DEM_NVM_CFG_NUM_BLOCKS_EXTENDED);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    40  DEM_ARRAY_DECLARE_CONST(Dem_NvmCopyFunction, DemCopyFctPtrTable, DEM_NVM_CFG_COPYFCT_NUM);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    41  #if (DEM_CFG_ERASE_ALL_DATA_SUPPORTED == DEM_CFG_ERASE_ALL_WITH_HASHID_CHECK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    42  DEM_ARRAY_DECLARE_CONST(Dem_NvmHashIdType, Dem_HashIdInRom, DEM_NVM_HASH_ID_SIZE);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    43  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    44  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    45  #define DEM_STOP_SEC_ROM_CONST
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    46  #include "Dem_Cfg_MemMap.h"
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    47  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    48  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    49  DEM_INLINE NvM_BlockIdType Dem_NvMGetNvMBlocKId(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    50  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    51      return Dem_NvMBlockMap2NvmId[id];
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    52  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    53  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    54  DEM_INLINE Dem_NvmResultType Dem_NvmGetStatus (Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    55  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    56      NvM_RequestResultType result;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    57      if (NvM_GetErrorStatus (Dem_NvMGetNvMBlocKId(id), &result) == E_NOT_OK)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    58      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    59          return DEM_NVM_FAILED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    60      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    61  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    62      switch (result)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    63      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    64          case NVM_REQ_CANCELED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    65              return DEM_NVM_CANCELED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    66  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    67          case NVM_REQ_OK:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    68          case NVM_REQ_REDUNDANCY_FAILED:     /* Driver could trigger correction of the damaged part of the redundant block; data is read correctly nevertheless */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    69          case NVM_REQ_RESTORED_FROM_ROM:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    70              return DEM_NVM_SUCCESS;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    71  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    72          case NVM_REQ_PENDING:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    73              return DEM_NVM_PENDING;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    74  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    75          case NVM_REQ_NV_INVALIDATED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    76              return DEM_NVM_INVALID;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    77  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    78          case NVM_REQ_INTEGRITY_FAILED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    79              return DEM_NVM_INTEGRITY_FAILED;    /* NVM_REQ_INTEGRITY_FAILED: description in NVM-doc: Indicates that the latest read operation did not find any valid data for this block on the persistent media. */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    80  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    81          case NVM_REQ_BLOCK_SKIPPED:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    82              return DEM_NVM_BLOCK_SKIPPED;       /* NVM_REQ_BLOCK_SKIPPED: if readall would be skipped, it is treated as failure for DEM, because all NVM data has to be available
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    83                                                 at init (ErrorQueue is flushed and event status / eventMemory content needs to be available)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    84                                                 This is ensured as the checks during init are checked to be DEM_NVM_SUCCESS. All other states are handled as error */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    85  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    86          default:
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    87              /*   NVM_REQ_NOT_OK: Indicates that the latest operation failed due to an unexpected event.  */
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    88              return DEM_NVM_FAILED;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    89      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    90  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    91  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    92  DEM_INLINE void Dem_NvMWriteBlockOnShutdown(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    93  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    94      Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_SHUTDOWN] = DEM_NVM_STATUSBITMASK_SHUTDOWN;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    95  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    96  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    97  DEM_INLINE void Dem_NvMWriteBlockImmediate(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    98  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	    99      Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_IMMEDIATE] = DEM_NVM_STATUSBITMASK_IMMEDIATE;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   100  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   101  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   102  DEM_INLINE void Dem_NvMClearBlockByWrite(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   103  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   104      Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_CLEAR] = DEM_NVM_STATUSBITMASK_CLEAR;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   105  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   106  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   107  DEM_INLINE void Dem_NvMClearBlockByInvalidate(Dem_NvmBlockIdType id)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   108  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   109      Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_CLEAR] = DEM_NVM_STATUSBITMASK_INVALIDATE;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   110  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   111  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   112  DEM_INLINE void Dem_NvMExcludeBlockFromStatemachine(Dem_NvmBlockIdType id, boolean exclude)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   113  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   114      if(exclude)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   115      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   116          Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_EXCLUDE] = DEM_NVM_STATUSBITMASK_EXCLUDE;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   117      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   118      else
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   119      {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   120          Dem_NvMBlockStatusDoubleBuffer[id][DEM_NVM_STATUSINDEX_EXCLUDE] = DEM_NVM_STATUSBITMASK_NONE;
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   121      }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   122  }
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   123  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   124  void Dem_NvMInit(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   125  void Dem_NvMMainFunction(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   126  void Dem_NvMShutdown(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   127  boolean Dem_NvMIsClearPending(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   128  boolean Dem_NvMIsImmediatePending(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   129  boolean Dem_NvMIsBlockClearPending( Dem_NvmBlockIdType demNvMId);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   130  boolean Dem_NvMIsBlockAllowedToBeExcluded(Dem_NvmBlockIdType id);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   131  boolean Dem_NvMIsBlockExcluded( Dem_NvmBlockIdType demNvMId);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   132  void Dem_NvMNormalMemCopy(void* Dest_pv, const void* Src_pcv, uint32 numBytes_s32);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   133  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   134  #if (DEM_CFG_ERASE_ALL_DATA_SUPPORTED != DEM_CFG_ERASE_ALL_OFF)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   135  Dem_HashIdCheckResultType Dem_NvmIsHashIDChanged(void);
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   136  #endif
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   137  
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   138  DEM_INLINE void Dem_NvMStartClear(void)
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   139  {
; .\BSW\src\BSW\Gen\Dem\src\nvm\Dem_Nvm.h	   140      Dem_NvMAnyClearFailed = FALSE;
	movh.a	a2,#@his(Dem_NvMAnyClearFailed)
	lea	a2,[a2]@los(Dem_NvMAnyClearFailed)
.L407:
	mov	d15,#0
.L408:
	st.b	[a2],d15
.L203:
	st.b	[a15]1,d11
.L205:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   109          Dem_ClientClearMachine.IsNewClearRequest = TRUE;      (inlined)
	j	.L54

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   107      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_EXEC)      (inlined)
.L53:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   114      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM)      (inlined)
	jne	d11,#2,.L55
.L206:
	st.b	[a15]1,d11
.L207:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   116          Dem_ClientClearMachine_SetMachineState(state);      (inlined)
	j	.L56

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   114      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM)      (inlined)
.L55:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   118      else      (inlined)
.L56:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   114      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_WAITINGFORNVM)      (inlined)
.L54:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	   107      else if (state == DEM_CLEAR_DTC_MACHINE_STATE_EXEC)      (inlined)
.L52:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    99  if (Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected(ClientId))      (inlined)
.L50:
	j	.L57
.L43:
.L41:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    65      return Dem_ClientClearMachine.activeClient;      (inlined)
	j	.L58

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientClearMachine.h	    66  }      (inlined)
.L58:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   107                          }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   108                          else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   109                          {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   110                              if (Dem_ClientClearMachine_GetMachineActiveClient() != clientId)
	jeq	d0,d9,.L59
.L409:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   111                              {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   112                                  Dem_ClientResultType_setResult(&Dem_Client_getClient(clientId)->result, tempRequest,
	mov	d4,d9
.L351:
	call	Dem_Client_getClient
.L352:
	lea	a15,[a2]10
.L410:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   113                                  DEM_CLEAR_BUSY);
	mov	d15,#5
.L208:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d0,d8,d10
.L353:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d0,d15
.L411:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a15],d0
.L59:
.L57:
.L39:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	extr.u	d15,d8,#0,#8
.L354:
	sha	d15,#-1
.L412:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L60

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L60:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   114                              }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   115                          }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   116                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   117                      if ((Dem_ClientRequestType_getMachineIndex(tempRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   118                              == (Dem_ClientRequestType_getMachineIndex(DEM_CLIENT_REQUEST_TRIGGERSELECTIONRESULT))))
	mov	d0,#6
.L213:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	sha	d0,#-1
.L413:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L61

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L61:
	jne	d15,d0,.L62
.L211:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     3  #ifndef DEM_CLIENTSELECTIONRESULT_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     4  #define DEM_CLIENTSELECTIONRESULT_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     6  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     7  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     8  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     9  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    11  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    12  DEM_INLINE void Dem_ClientSelectionResult_SetClientRequest(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    13  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    14      Dem_ClientResultType_setResult(&Dem_Clients[clientId].result, Dem_Clients[clientId].request, E_OK);
	sha	d15,d9,#4
.L355:
	addsc.a	a15,a12,d15,#0
.L414:
	ld.hu	d15,[a15]8
.L415:
	lea	a15,[a15]10
.L416:
	mov	d0,#0
.L219:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d15,d10
.L357:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d0,d15
.L356:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a15],d0
.L62:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	extr.u	d0,d8,#0,#8
.L358:
	sha	d0,#-1
.L417:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L63

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L63:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   119                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   120                          Dem_ClientSelectionResult_SetClientRequest(clientId);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   121                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   122                      if ((Dem_ClientRequestType_getMachineIndex(tempRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   123                              == (Dem_ClientRequestType_getMachineIndex(DEM_CLIENT_REQUEST_GETSELECTIONRESULT4CLEAR))))
	mov	d15,#12
.L222:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
	sha	d15,#-1
.L418:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;      (inlined)
	j	.L64

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }      (inlined)
.L64:
	jne	d15,d0,.L65
.L223:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     1  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     2  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     3  #ifndef DEM_LIB_H
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     4  #define DEM_LIB_H
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     5  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     6  #include "Dem_Types.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     7  #include "Dem_Prv_Det.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     8  #include "rba_DiagLib_MemUtils.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	     9  #include "Dem_Cfg_Main.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    10  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    11  /* Macro for static assertion Check */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    12  /* either array length is (2*1)-1->valid or (2*0)-1->invalid*/
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    13  #define DEM_STATIC_ASSERT(COND,MSG) typedef uint8 Dem_static_assertion_##MSG[(2*(((COND)!=(FALSE))?1:0))-1]
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    14  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    15  /* mapping of memset and memcpy */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    16  #define DEM_MEMCPY  RBA_DIAGLIB_MEMCPY
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    17  #define DEM_MEMSET  RBA_DIAGLIB_MEMSET
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    18  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    19  /* Defines */
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    20  #define DEM_MAXSINT16   0x7FFF
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    21  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    22  #if (DEM_CFG_BUILDTARGET != DEM_CFG_BUILDTARGET_DEMTESTSUITE)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    23      #define DEM_ASSERT_RANGECHECK(CONDITION) do {} while (0)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    24  #else
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    25      #include "DemTest_Stub4RangeCheck.h"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    26  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    27      #define DEM_ASSERT_RANGECHECK(CONDITION) DEM_assertValueInRange(CONDITION)
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    28  #endif
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    29  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    30  // these functions are necessary to avoid compiler warnings of the kind "statement is always FALSE"
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    31  DEM_INLINE uint16 Dem_LibGetParamUI16( uint16 parameter )
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    32  {
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    33      return parameter;
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    34  }
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    35  
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    36  DEM_INLINE uint8 Dem_LibGetParamUI8( uint8 parameter )
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    37  {
; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;
	mov	d15,#2
.L359:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;      (inlined)
	j	.L66

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    39  }      (inlined)
.L66:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     3  #ifndef DEM_CLIENTSELECTIONRESULT_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     4  #define DEM_CLIENTSELECTIONRESULT_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     6  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     7  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     8  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	     9  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    11  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    12  DEM_INLINE void Dem_ClientSelectionResult_SetClientRequest(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    13  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    14      Dem_ClientResultType_setResult(&Dem_Clients[clientId].result, Dem_Clients[clientId].request, E_OK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    15  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    17  DEM_INLINE void Dem_ClientSelectionResult_SetClientRequest4Clear(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    18  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    19        if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION) == Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION_ONLY_CLEAR_ALL_DTCS))
	mov	d0,#2
.L229:

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    38      return parameter;      (inlined)
	j	.L67

; .\BSW\src\BSW\Gen\Dem\src\lib\Dem_Lib.h	    39  }      (inlined)
.L67:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    19        if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION) == Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION_ONLY_CLEAR_ALL_DTCS))      (inlined)
	jne	d15,d0,.L68
.L419:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    20            && (Dem_ClientSelectionType_getTypeOfSelection(Dem_Clients[clientId].selection) != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))
	sha	d15,d9,#4
.L420:
	addsc.a	a15,a12,d15,#0
.L421:
	ld.w	d15,[a15]12
.L230:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    36  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    37  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    38  DEM_INLINE Std_ReturnType Dem_ClientResultType_getResult(Dem_ClientResultType result)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    39  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    40      return ((Std_ReturnType)(result & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    41  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    42  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    43  DEM_INLINE void Dem_ClientResultType_confirmCancel(volatile Dem_ClientResultType *result, Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    44  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    45      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    46  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    47      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    48  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    49      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    50      tempResult |= DEM_FAILED;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    51      *result = tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    52  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    53  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    54  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    55  /****************  Dem_ClientRequestType  *********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    56  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    57  #define DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK     0x01u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    58  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    59  DEM_INLINE boolean Dem_ClientRequestType_isRequestInProgress(Dem_ClientIdType clientId)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    60  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    61      return ((Dem_Clients[clientId].request & DEM_CLIENT_REQUEST_RESULT_IDMASK)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    62              != (Dem_Clients[clientId].result & DEM_CLIENT_REQUEST_RESULT_IDMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    63  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    64  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    65  DEM_INLINE void Dem_ClientRequestType_setRequest(volatile Dem_ClientRequestType *request, uint8 newRequest)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    66  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    67      Dem_ClientRequestType tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    68  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    69      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientRequestType) >= 2u)), DEM_CLIENTREQUESTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    70  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    71      tempRequest = *request;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    72      tempRequest += 0x0100u;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    73      tempRequest = (tempRequest & DEM_CLIENT_REQUEST_RESULT_IDMASK) | newRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    74      *request = tempRequest;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    75  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    76  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    77  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    78  DEM_INLINE void Dem_ClientRequestType_cancelRequest(volatile Dem_ClientRequestType *request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    79  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    80      Dem_ClientRequestType_setRequest(request,1);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    81  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    82  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    83  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    84  DEM_INLINE uint8 Dem_ClientRequestType_getMachineIndex(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    85  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    86      uint8 machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    87      machineIndex = (((uint8)(request & DEM_CLIENT_TYPE_MASK)) >> 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    88      return machineIndex;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    89  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    90  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    91  DEM_INLINE boolean Dem_ClientRequestType_isCancelRequested(Dem_ClientRequestType request)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    92  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    93      return ((request & DEM_CLIENT_REQUEST_TYPE_CANCEL_MASK) == 1u);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    94  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    95  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    96  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    97  /****************  Dem_ClientSelectionType  *******************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    98  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    99  #define DEM_CLIENT_SELECTION_DTCINDEXMASK                0xFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   100  #define DEM_CLIENT_INVALIDATE_SELECTION_IDMASK           0x00FFFFFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   101  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE  16u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   102  #define DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT          24u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   103  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   104  DEM_INLINE uint16 Dem_ClientSelectionType_getSelectionDtcIndex (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   105  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   106      return ((uint16)(selection & DEM_CLIENT_SELECTION_DTCINDEXMASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   107  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   108  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   109  DEM_INLINE void Dem_ClientSelectionType_setSelection (Dem_ClientSelectionType *selection, uint16 dtcId, uint8 typeOfSelection, Std_ReturnType selectionResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   110  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   111      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   112  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   113      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   114  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   115      tempSelection = (((uint32)dtcId) | (((uint32)typeOfSelection) << DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) | (((uint32)selectionResult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   116      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   117  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   118  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   119  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionSingleDTC (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   120  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   121      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   122      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   123  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   124      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_SINGLE_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   125  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   126  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   127  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroupAll (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   128  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   129      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   130      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   131  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   132      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_ALL_DTCS);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   133  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   134  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   135  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionDTCGroup (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   136  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   137      uint8 tempSelectionType;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   138      tempSelectionType = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   139  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   140      return (tempSelectionType == DEM_CLIENT_SELECTION_TYPE_GROUP_DTC);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   141  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   142  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   143  DEM_INLINE boolean Dem_ClientSelectionType_isSelectionPending (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   144  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   145      uint8 tempSelectionResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   146      tempSelectionResult = (uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   147  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   148      return (tempSelectionResult == DEM_PENDING);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   149  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   150  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   151  DEM_INLINE void Dem_ClientSelectionType_invalidateSelectionResult (Dem_ClientSelectionType *selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   152  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   153      Std_ReturnType tempresult = DEM_PENDING;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   154      Dem_ClientSelectionType tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   155  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   156      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientSelectionType) >= 4u)), DEM_CLIENTSELECTIONTYPE_SHALL_BE_UINT32);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   157  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   158      tempSelection = (*selection & DEM_CLIENT_INVALIDATE_SELECTION_IDMASK);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   159      tempSelection |= (((uint32)tempresult) << DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   160      *selection = tempSelection;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   161  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   162  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   163  DEM_INLINE Std_ReturnType Dem_ClientSelectionType_getSelectionResult (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   164  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   165      return ((Std_ReturnType)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_RESULT) & DEM_CLIENT_TYPE_MASK));
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   166  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   167  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   168  DEM_INLINE uint8 Dem_ClientSelectionType_getTypeOfSelection (Dem_ClientSelectionType selection)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   169  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   170      return ((uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK));
	sh	d15,d15,#-16
.L422:
	extr.u	d15,d15,#0,#8
.L423:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   170      return ((uint8)((selection >> DEM_CLIENT_SELECTION_TYPE_BITPOS_SELECTION_TYPE) & DEM_CLIENT_TYPE_MASK));      (inlined)
	j	.L69

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	   171  }      (inlined)
.L69:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    20            && (Dem_ClientSelectionType_getTypeOfSelection(Dem_Clients[clientId].selection) != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))      (inlined)
	jeq	d15,#1,.L70
.L424:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    21        {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    22            Dem_ClientResultType_setResult(&Dem_Clients[clientId].result, Dem_Clients[clientId].request, DEM_WRONG_DTC);
	ld.hu	d15,[a15]8
.L425:
	lea	a15,[a15]10
.L426:
	mov	d0,#1
.L231:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d10,d15
.L427:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d10,d0
.L428:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a15],d10
.L232:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    22            Dem_ClientResultType_setResult(&Dem_Clients[clientId].result, Dem_Clients[clientId].request, DEM_WRONG_DTC);      (inlined)
	j	.L71

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    19        if ((Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION) == Dem_LibGetParamUI8(DEM_CFG_CLEAR_DTC_LIMITATION_ONLY_CLEAR_ALL_DTCS))      (inlined)
.L70:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    20            && (Dem_ClientSelectionType_getTypeOfSelection(Dem_Clients[clientId].selection) != DEM_CLIENT_SELECTION_TYPE_ALL_DTCS))      (inlined)
.L68:
	sha	d15,d9,#4
.L429:
	addsc.a	a15,a12,d15,#0
.L430:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    23        } else
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    24        {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    25            Dem_ClientResultType_setResult(&Dem_Clients[clientId].result, Dem_Clients[clientId].request, E_OK);
	ld.hu	d15,[a15]8
.L431:
	lea	a15,[a15]10
.L432:
	mov	d0,#0
.L234:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     1  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     2  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     3  #ifndef DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     4  #define DEM_CLIENTBASEHANDLING_H
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     5  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     6  #include "Dem_ClientHandlingTypes.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     7  #include "Dem_Client.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     8  #include "Dem_Lib.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	     9  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    10  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    11  #define DEM_START_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    12  #include "Dem_Cfg_MemMap.h"
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    13  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    14  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    15  /*********  MASKS : Dem_ClientRequestType, Dem_ClientResultType & Dem_ClientSelectionType *********/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    16  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    17  #define DEM_CLIENT_TYPE_MASK     0xFFu
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    18  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    19  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    20  /****************  MASKS : Dem_ClientRequestType & Dem_ClientResultType ***************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    21  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    22  #define DEM_CLIENT_REQUEST_RESULT_IDMASK       0xFF00u
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    23  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    24  /**************************************************************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    25  /****************  Dem_ClientResultType  **********************************************************/
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    26  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    27  DEM_INLINE void Dem_ClientResultType_setResult(volatile Dem_ClientResultType *result, Dem_ClientRequestType request, Std_ReturnType newResult)
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    28  {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    29      Dem_ClientResultType tempResult;
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    30  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    31      DEM_STATIC_ASSERT(((DEM_SIZEOF_TYPE(Dem_ClientResultType)) >= 2u), DEM_CLIENTRSULTTYPE_SHALL_BE_UINT16);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    32  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    33      tempResult = (request & DEM_CLIENT_REQUEST_RESULT_IDMASK);
	and	d15,d10
.L361:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    34      tempResult |= newResult;
	or	d0,d15
.L360:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientBaseHandling.h	    35      *result = tempResult;
	st.h	[a15],d0

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientSelectionResult.h	    23        } else      (inlined)
.L71:
.L65:
.L36:
.L33:
.L28:
	add	d9,#1
.L25:
	jlt.u	d9,#3,.L26
.L433:

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   124                      {
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   125                          Dem_ClientSelectionResult_SetClientRequest4Clear(clientId);
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   126                      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   127                  }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   128              }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   129          }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   130      }
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   131  }
	ret
.L97:
	
__Dem_ClientRequestDispatcher_main_function_end:
	.size	Dem_ClientRequestDispatcher_main,__Dem_ClientRequestDispatcher_main_function_end-Dem_ClientRequestDispatcher_main
.L86:
	; End of function
	
	.calls	'Dem_ClientRequestDispatcher_calculateSelection','Dem_Client_getClient'
	.calls	'Dem_ClientRequestDispatcher_calculateSelection','Dem_DtcGroupIdFromDtcGroupCode'
	.calls	'Dem_ClientRequestDispatcher_calculateSelection','Dem_DtcIdFromDtcCode'
	.calls	'Dem_ClientRequestDispatcher_main','Dem_ClientRequestDispatcher_calculateSelection'
	.calls	'Dem_ClientRequestDispatcher_main','Dem_ClientRequestDispatcher_transferSelectionErrorToResult'
	.calls	'Dem_ClientRequestDispatcher_main','Dem_Client_getClient'
	.calls	'Dem_ClientRequestDispatcher_transferSelectionErrorToResult','',0
	.calls	'Dem_ClientRequestDispatcher_calculateSelection','',0
	.extern	Dem_Clients
	.extern	Dem_Client_getClient
	.extern	Dem_NvMAnyClearFailed
	.extern	Dem_ClientClearMachine
	.extern	Dem_DtcGroupIdFromDtcGroupCode
	.extern	Dem_AllDTCsState
	.extern	Dem_DtcIdFromDtcCode
	.calls	'Dem_ClientRequestDispatcher_main','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L79:
	.word	23533
	.half	3
	.word	.L80
	.byte	4
.L78:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L81
.L187:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'rba_BswSrv_ByteOrderSwap32',0,3,1,125,21
	.word	160
	.byte	1,1,4
	.byte	'Input_u32',0,1,125,55
	.word	160
	.byte	5,0
.L100:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.byte	'rba_BswSrv_ByteOrderSwap16',0,3,1,150,1,21
	.word	234
	.byte	1,1,4
	.byte	'Input_u16',0,1,150,1,55
	.word	234
	.byte	5,0
.L98:
	.byte	2
	.byte	'unsigned char',0,1,8
.L158:
	.byte	3
	.byte	'Dem_LibGetParamUI8',0,3,2,36,18
	.word	316
	.byte	1,1
.L160:
	.byte	4
	.byte	'parameter',0,2,36,44
	.word	316
.L162:
	.byte	5,0,3
	.byte	'Dem_LibGetParamBool',0,3,2,41,20
	.word	316
	.byte	1,1,4
	.byte	'parameter',0,2,41,49
	.word	316
	.byte	5,0,6
	.word	234
	.byte	7
	.word	434
.L169:
	.byte	8
	.byte	'Dem_ClientResultType_setResult',0,3,3,27,17,1,1
.L172:
	.byte	4
	.byte	'result',0,3,27,79
	.word	439
.L174:
	.byte	4
	.byte	'request',0,3,27,109
	.word	234
.L176:
	.byte	4
	.byte	'newResult',0,3,27,133,1
	.word	316
.L178:
	.byte	5,0
.L118:
	.byte	8
	.byte	'Dem_ClientResultType_confirmCancel',0,3,3,43,17,1,1
.L121:
	.byte	4
	.byte	'result',0,3,43,83
	.word	439
.L123:
	.byte	4
	.byte	'request',0,3,43,113
	.word	234
.L125:
	.byte	5,0
.L103:
	.byte	3
	.byte	'Dem_ClientRequestType_isRequestInProgress',0,3,3,59,20
	.word	316
	.byte	1,1
.L105:
	.byte	4
	.byte	'clientId',0,3,59,79
	.word	316
.L107:
	.byte	5,0,6
	.word	234
	.byte	7
	.word	681
	.byte	8
	.byte	'Dem_ClientRequestType_setRequest',0,3,3,65,17,1,1,4
	.byte	'request',0,3,65,82
	.word	686
	.byte	4
	.byte	'newRequest',0,3,65,97
	.word	316
	.byte	5,0
.L132:
	.byte	3
	.byte	'Dem_ClientRequestType_getMachineIndex',0,3,3,84,18
	.word	316
	.byte	1,1
.L134:
	.byte	4
	.byte	'request',0,3,84,78
	.word	234
.L136:
	.byte	5,0
.L108:
	.byte	3
	.byte	'Dem_ClientRequestType_isCancelRequested',0,3,3,91,20
	.word	316
	.byte	1,1
.L110:
	.byte	4
	.byte	'request',0,3,91,82
	.word	234
.L112:
	.byte	5,0,7
	.word	160
.L293:
	.byte	8
	.byte	'Dem_ClientSelectionType_setSelection',0,3,3,109,17,1,1
.L295:
	.byte	4
	.byte	'selection',0,3,109,80
	.word	904
.L297:
	.byte	4
	.byte	'dtcId',0,3,109,98
	.word	234
.L299:
	.byte	4
	.byte	'typeOfSelection',0,3,109,111
	.word	316
.L301:
	.byte	4
	.byte	'selectionResult',0,3,109,143,1
	.word	316
.L303:
	.byte	5,0
.L249:
	.byte	3
	.byte	'Dem_ClientSelectionType_isSelectionPending',0,3,3,143,1,20
	.word	316
	.byte	1,1
.L251:
	.byte	4
	.byte	'selection',0,3,143,1,88
	.word	160
.L253:
	.byte	5,0
.L180:
	.byte	8
	.byte	'Dem_ClientSelectionType_invalidateSelectionResult',0,3,3,151,1,17,1,1
.L183:
	.byte	4
	.byte	'selection',0,3,151,1,93
	.word	904
.L185:
	.byte	5,0
.L127:
	.byte	3
	.byte	'Dem_ClientSelectionType_getSelectionResult',0,3,3,163,1,27
	.word	316
	.byte	1,1
.L129:
	.byte	4
	.byte	'selection',0,3,163,1,95
	.word	160
.L131:
	.byte	5,0
.L164:
	.byte	3
	.byte	'Dem_ClientSelectionType_getTypeOfSelection',0,3,3,168,1,18
	.word	316
	.byte	1,1
.L166:
	.byte	4
	.byte	'selection',0,3,168,1,86
	.word	160
.L168:
	.byte	5,0
.L270:
	.byte	3
	.byte	'Dem_isDtcIdValid',0,3,4,152,1,30
	.word	316
	.byte	1,1
.L273:
	.byte	4
	.byte	'id',0,4,152,1,62
	.word	234
.L275:
	.byte	5,0,3
	.byte	'Dem_DtcIdFromEventId',0,3,4,158,1,27
	.word	234
	.byte	1,1,4
	.byte	'id',0,4,158,1,65
	.word	234
	.byte	5,0,3
	.byte	'Dem_DtcIdGetEventId',0,3,4,166,1,28
	.word	234
	.byte	1,1,4
	.byte	'dtcid',0,4,166,1,63
	.word	234
	.byte	5,0,3
	.byte	'Dem_DtcIdGetFirstEventId',0,3,4,174,1,28
	.word	234
	.byte	1,1,4
	.byte	'dtcid',0,4,174,1,68
	.word	234
	.byte	9,5,0,0,3
	.byte	'Dem_DtcGroupIdIsValid',0,3,4,252,1,30
	.word	316
	.byte	1,1,4
	.byte	'dtcGroupID',0,4,252,1,72
	.word	316
	.byte	5,0,10
	.word	234
	.byte	7
	.word	1594
	.byte	11,4,171,2,9,8,12
	.byte	'it',0
	.word	1599
	.byte	4,2,35,0,12
	.byte	'end',0
	.word	1599
	.byte	4,2,35,4,0,7
	.word	1604
	.byte	8
	.byte	'Dem_EventIdListIteratorNewFromDtcId',0,3,4,177,2,17,1,1,4
	.byte	'it',0,4,177,2,78
	.word	1636
	.byte	4
	.byte	'dtcid',0,4,177,2,96
	.word	234
	.byte	9,5,0,0,10
	.word	1604
	.byte	7
	.word	1716
	.byte	3
	.byte	'Dem_EventIdListIteratorIsValid',0,3,4,193,2,30
	.word	316
	.byte	1,1,4
	.byte	'it',0,4,193,2,92
	.word	1721
	.byte	5,0,8
	.byte	'Dem_EventIdListIteratorNext',0,3,4,198,2,17,1,1,4
	.byte	'it',0,4,198,2,70
	.word	1636
	.byte	5,0,3
	.byte	'Dem_EventIdListIteratorCurrent',0,3,4,203,2,28
	.word	234
	.byte	1,1,4
	.byte	'it',0,4,203,2,90
	.word	1721
	.byte	5,0,3
	.byte	'Dem_Cfg_Dtc_GetDtcCode',0,3,5,99,30
	.word	160
	.byte	1,1,4
	.byte	'indx',0,5,99,67
	.word	234
	.byte	5,0,7
	.word	316
	.byte	8
	.byte	'rba_DiagLib_Bit8SetBit',0,3,6,36,19,1,1,4
	.byte	'buffer',0,6,36,49
	.word	1939
	.byte	4
	.byte	'bit_position',0,6,36,63
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,6,42,19,1,1,4
	.byte	'buffer',0,6,42,51
	.word	1939
	.byte	4
	.byte	'bit_position',0,6,42,65
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8OverwriteBit',0,3,6,48,19,1,1,4
	.byte	'buffer',0,6,48,55
	.word	1939
	.byte	4
	.byte	'bit_position',0,6,48,69
	.word	316
	.byte	4
	.byte	'will_bit_be_set',0,6,48,91
	.word	316
	.byte	9,5,5,0,0
.L287:
	.byte	3
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,6,60,20
	.word	316
	.byte	1,1
.L288:
	.byte	4
	.byte	'value',0,6,60,55
	.word	316
.L290:
	.byte	4
	.byte	'bit_position',0,6,60,68
	.word	316
.L292:
	.byte	5,0
.L280:
	.byte	3
	.byte	'rba_DiagLib_Bit8IsBitSet',0,3,6,64,22
	.word	316
	.byte	1,1
.L282:
	.byte	4
	.byte	'value',0,6,64,53
	.word	316
.L284:
	.byte	4
	.byte	'bit_position',0,6,64,66
	.word	316
.L286:
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_Bit8GetBits',0,3,6,69,20
	.word	316
	.byte	1,1,4
	.byte	'value',0,6,69,50
	.word	316
	.byte	4
	.byte	'bit_position',0,6,69,63
	.word	316
	.byte	4
	.byte	'number_of_bits',0,6,69,83
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,6,77,19,1,1,4
	.byte	'value',0,6,77,52
	.word	1939
	.byte	4
	.byte	'bit_position',0,6,77,65
	.word	316
	.byte	4
	.byte	'number_of_bits',0,6,77,85
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit8OverwriteBits',0,3,6,83,19,1,1,4
	.byte	'value',0,6,83,56
	.word	1939
	.byte	4
	.byte	'bit_position',0,6,83,69
	.word	316
	.byte	4
	.byte	'number_of_bits',0,6,83,89
	.word	316
	.byte	4
	.byte	'newValue',0,6,83,111
	.word	316
	.byte	9,5,0,0,7
	.word	234
	.byte	8
	.byte	'rba_DiagLib_Bit16SetBit',0,3,7,36,19,1,1,4
	.byte	'buffer',0,7,36,51
	.word	2639
	.byte	4
	.byte	'bit_position',0,7,36,65
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,7,42,19,1,1,4
	.byte	'buffer',0,7,42,53
	.word	2639
	.byte	4
	.byte	'bit_position',0,7,42,67
	.word	316
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,7,60,21
	.word	234
	.byte	1,1,4
	.byte	'value',0,7,60,58
	.word	234
	.byte	4
	.byte	'bit_position',0,7,60,71
	.word	316
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit16IsBitSet',0,3,7,65,22
	.word	316
	.byte	1,1,4
	.byte	'value',0,7,65,55
	.word	234
	.byte	4
	.byte	'bit_position',0,7,65,68
	.word	316
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_Bit16GetBits',0,3,7,70,21
	.word	234
	.byte	1,1,4
	.byte	'value',0,7,70,53
	.word	234
	.byte	4
	.byte	'bit_position',0,7,70,66
	.word	316
	.byte	4
	.byte	'number_of_bits',0,7,70,86
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,7,78,19,1,1,4
	.byte	'value',0,7,78,54
	.word	2639
	.byte	4
	.byte	'bit_position',0,7,78,67
	.word	316
	.byte	4
	.byte	'number_of_bits',0,7,78,87
	.word	316
	.byte	5,0,7
	.word	160
	.byte	8
	.byte	'rba_DiagLib_Bit32SetBit',0,3,8,36,19,1,1,4
	.byte	'buffer',0,8,36,51
	.word	3128
	.byte	4
	.byte	'bit_position',0,8,36,65
	.word	316
	.byte	5,0,8
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,8,42,19,1,1,4
	.byte	'buffer',0,8,42,53
	.word	3128
	.byte	4
	.byte	'bit_position',0,8,42,67
	.word	316
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,8,60,21
	.word	160
	.byte	1,1,4
	.byte	'value',0,8,60,58
	.word	160
	.byte	4
	.byte	'bit_position',0,8,60,71
	.word	316
	.byte	5,0,3
	.byte	'rba_DiagLib_Bit32IsBitSet',0,3,8,65,22
	.word	316
	.byte	1,1,4
	.byte	'value',0,8,65,55
	.word	160
	.byte	4
	.byte	'bit_position',0,8,65,68
	.word	316
	.byte	9,5,0,0,8
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,8,78,19,1,1,4
	.byte	'value',0,8,78,54
	.word	3128
	.byte	4
	.byte	'bit_position',0,8,78,67
	.word	316
	.byte	4
	.byte	'number_of_bits',0,8,78,87
	.word	316
	.byte	5,0,3
	.byte	'Dem_NvMGetNvMBlocKId',0,3,9,49,28
	.word	234
	.byte	1,1,4
	.byte	'id',0,9,49,68
	.word	316
	.byte	5,0
.L202:
	.byte	8
	.byte	'Dem_NvMStartClear',0,3,9,138,1,17,1,1
.L204:
	.byte	5,0
.L189:
	.byte	8
	.byte	'Dem_ClientClearMachine_SetMachineActiveClient',0,3,10,53,17,1,1
.L192:
	.byte	4
	.byte	'ClientId',0,10,53,80
	.word	316
.L194:
	.byte	5,0
.L113:
	.byte	3
	.byte	'Dem_ClientClearMachine_isProcessingClient',0,3,10,58,20
	.word	316
	.byte	1,1
.L115:
	.byte	4
	.byte	'ClientId',0,10,58,79
	.word	316
.L117:
	.byte	5,0
.L142:
	.byte	3
	.byte	'Dem_ClientClearMachine_GetMachineActiveClient',0,3,10,63,18
	.word	316
	.byte	1,1
.L144:
	.byte	5,0
.L195:
	.byte	8
	.byte	'Dem_ClientClearMachine_SetMachineState',0,3,10,68,17,1,1
.L197:
	.byte	4
	.byte	'state',0,10,68,62
	.word	316
.L199:
	.byte	5,0
.L152:
	.byte	3
	.byte	'Dem_ClientClearMachine_isClearDtcGroupAllDtcsSelected',0,3,10,78,20
	.word	316
	.byte	1,1
.L154:
	.byte	4
	.byte	'ClientId',0,10,78,91
	.word	316
.L156:
	.byte	9,5,5,5,5,0,0
.L145:
	.byte	8
	.byte	'Dem_ClientClearMachine_SetClientRequest',0,3,10,97,17,1,1
.L147:
	.byte	4
	.byte	'ClientId',0,10,97,74
	.word	316
.L149:
	.byte	4
	.byte	'state',0,10,97,90
	.word	316
.L151:
	.byte	9,5,5,5,5,5,5,5,5,0,0,7
	.word	316
.L259:
	.byte	3
	.byte	'Dem_EvMemIsDtcOriginValid',0,3,11,53,30
	.word	316
	.byte	1,1
.L261:
	.byte	4
	.byte	'DTCOrigin',0,11,53,77
	.word	4037
.L263:
	.byte	5,0,8
	.byte	'Dem_BitArraySetBit',0,3,12,33,17,1,1,4
	.byte	'buffer',0,12,33,36
	.word	3128
	.byte	4
	.byte	'bit_position',0,12,33,75
	.word	160
	.byte	5,0,8
	.byte	'Dem_BitArrayClearBit',0,3,12,46,17,1,1,4
	.byte	'buffer',0,12,46,38
	.word	3128
	.byte	4
	.byte	'bit_position',0,12,46,77
	.word	160
	.byte	5,0,8
	.byte	'Dem_BitArrayOverwriteBit',0,3,12,61,17,1,1,4
	.byte	'buffer',0,12,61,42
	.word	3128
	.byte	4
	.byte	'bit_position',0,12,62,25
	.word	160
	.byte	4
	.byte	'will_bit_be_set',0,12,62,57
	.word	316
	.byte	9,5,5,0,0,10
	.word	160
	.byte	7
	.word	4326
	.byte	3
	.byte	'Dem_BitArrayIsBitSet',0,3,12,75,30
	.word	316
	.byte	1,1,4
	.byte	'buffer',0,12,75,51
	.word	4331
	.byte	4
	.byte	'bit_position',0,12,75,95
	.word	160
	.byte	5,0,3
	.byte	'Dem_EnCoAreAllFulfilled',0,3,13,32,30
	.word	316
	.byte	1,1,4
	.byte	'enableConditionList',0,13,32,68
	.word	316
	.byte	5,0,3
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderS',0,3,14,36,21
	.word	234
	.byte	1,1,4
	.byte	'val',0,14,36,70
	.word	234
	.byte	9,5,0,0,3
	.byte	'rba_DiagLib_ByteOrderUtils_SwapByteOrderL',0,3,14,41,21
	.word	160
	.byte	1,1,4
	.byte	'val',0,14,41,70
	.word	160
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetStoreTestFailedToNextOC',0,3,15,55,22
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,55,78
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetEventIsStoredInPrimary',0,3,15,75,22
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,75,77
	.word	234
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetEventIsStoredInSecondary',0,3,15,82,22
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,82,79
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetEventIsStoredInMirror',0,3,15,89,22
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,89,76
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetAgingAllowed',0,3,15,95,22
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,95,67
	.word	234
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetOperationCycleID',0,3,15,122,20
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,122,69
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetAgingCycleID',0,3,15,129,1,20
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,129,1,65
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetFailureCycleID',0,3,15,136,1,20
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,136,1,67
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetDebounceMethodIndex',0,3,15,149,1,20
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,149,1,72
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetDebounceParamSettingIndex',0,3,15,155,1,21
	.word	234
	.byte	1,1,4
	.byte	'indx',0,15,155,1,79
	.word	234
	.byte	9,5,0,0,3
	.byte	'Dem_EvtParam_GetAgingThreshold',0,3,15,168,1,20
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,168,1,67
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtParam_GetEnableConditions',0,3,15,208,1,27
	.word	316
	.byte	1,1,4
	.byte	'indx',0,15,208,1,76
	.word	234
	.byte	5,0,2
	.byte	'short int',0,2,5,3
	.byte	'Dem_EvtGetDebounceLevel',0,3,16,193,1,19
	.word	5361
	.byte	1,1,4
	.byte	'EventId',0,16,193,1,60
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvtGetLastReportedEvent',0,3,16,219,1,32
	.word	316
	.byte	1,1,4
	.byte	'EventId',0,16,219,1,77
	.word	234
	.byte	5,0,8
	.byte	'Dem_EvtIncreaseGlobalInitMonitoringCounter',0,3,16,227,3,17,1,1,5,0,8
	.byte	'Dem_EvtSetAnyInitMonitoring',0,3,16,233,3,17,1,1,4
	.byte	'reason',0,16,233,3,72
	.word	316
	.byte	9,5,0,0,3
	.byte	'Dem_EvtIsSuppressed',0,3,16,244,4,30
	.word	316
	.byte	1,1,4
	.byte	'EventId',0,16,244,4,67
	.word	234
	.byte	9,5,0,0,7
	.word	316
	.byte	8
	.byte	'Dem_EnvSetTrigger',0,3,17,17,17,1,1,4
	.byte	'trigger',0,17,17,52
	.word	5650
	.byte	4
	.byte	'trigger2set',0,17,17,77
	.word	316
	.byte	5,0,3
	.byte	'Dem_EnvIsAnyTriggerSet',0,3,17,22,30
	.word	316
	.byte	1,1,4
	.byte	'trigger2test',0,17,22,69
	.word	316
	.byte	5,0,2
	.byte	'unsigned long int',0,4,7,3
	.byte	'Dem_DebHandleDebounceAction__processBits',0,3,18,101,30
	.word	316
	.byte	1,1,4
	.byte	'EventId',0,18,101,87
	.word	234
	.byte	4
	.byte	'debAction',0,18,101,120
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemIsMemIdValid',0,3,19,103,30
	.word	316
	.byte	1,1,4
	.byte	'MemId',0,19,103,65
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemIsEventMemLocIdValid',0,3,19,112,30
	.word	316
	.byte	1,1,4
	.byte	'LocId',0,19,112,73
	.word	5775
	.byte	5,0,11,20,133,1,3,4,12
	.byte	'Status',0
	.word	234
	.byte	2,2,35,0,12
	.byte	'EventId',0
	.word	234
	.byte	2,2,35,2,0,13,20,131,1,9,4,12
	.byte	'Data',0
	.word	5990
	.byte	4,2,35,0,0,14,7
	.word	316
	.byte	15,6,0,11,20,144,1,9,20,12
	.byte	'Hdr',0
	.word	6030
	.byte	4,2,35,0,12
	.byte	'Data',0
	.word	6051
	.byte	7,2,35,4,12
	.byte	'FailureCounter',0
	.word	316
	.byte	1,2,35,11,12
	.byte	'FreezeFrameCounter',0
	.word	316
	.byte	1,2,35,12,12
	.byte	'AgingCounter',0
	.word	316
	.byte	1,2,35,13,12
	.byte	'OccurrenceCounter',0
	.word	316
	.byte	1,2,35,14,12
	.byte	'Trigger',0
	.word	316
	.byte	1,2,35,15,12
	.byte	'TimeId',0
	.word	160
	.byte	4,2,35,16,0,10
	.word	6060
	.byte	7
	.word	6228
	.byte	3
	.byte	'Dem_EvMemGetEventMemStatusByPtr',0,3,19,134,1,25
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,134,1,89
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemStatus',0,3,19,139,1,25
	.word	5775
	.byte	1,1,4
	.byte	'LocId',0,19,139,1,65
	.word	5775
	.byte	9,5,0,0,3
	.byte	'Dem_EvMemGetEventMemEventIdByPtr',0,3,19,152,1,28
	.word	234
	.byte	1,1,4
	.byte	'EventMemory',0,19,152,1,93
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemTimeIdByPtr',0,3,19,170,1,19
	.word	160
	.byte	1,1,4
	.byte	'EventMemory',0,19,170,1,83
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemDtcStatusByPtr',0,3,19,188,1,18
	.word	316
	.byte	1,1,4
	.byte	'EventMemory',0,19,188,1,85
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemFailureCounterByPtr',0,3,19,216,1,24
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,216,1,96
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemOccurrenceCounterByPtr',0,3,19,233,1,25
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,233,1,100
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounterByPtr',0,3,19,133,2,25
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,133,2,95
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounter',0,3,19,144,2,25
	.word	5775
	.byte	1,1,4
	.byte	'LocId',0,19,144,2,71
	.word	5775
	.byte	9,5,0,0,8
	.byte	'Dem_EvMemSetEventMemAgingCounter',0,3,19,150,2,17,1,1,4
	.byte	'LocId',0,19,150,2,63
	.word	5775
	.byte	4
	.byte	'AgingCounter',0,19,150,2,83
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemAgingCounterForTFSLCByPtr',0,3,19,161,2,25
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,161,2,103
	.word	6233
	.byte	5,0,2
	.byte	'char',0,1,6,3
	.byte	'Dem_EvMemGetMaxFdcDuringCurrentCycleByPtr',0,3,19,213,2,18
	.word	7019
	.byte	1,1,4
	.byte	'EventMemory',0,19,213,2,92
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetMaxFdcSinceLastClearByPtr',0,3,19,224,2,18
	.word	7019
	.byte	1,1,4
	.byte	'EventMemory',0,19,224,2,88
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemFreezeFrameCounterByPtr',0,3,19,238,3,25
	.word	5775
	.byte	1,1,4
	.byte	'EventMemory',0,19,238,3,101
	.word	6233
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemTriggerByPtr',0,3,19,141,4,28
	.word	316
	.byte	1,1,4
	.byte	'EventMemory',0,19,141,4,93
	.word	6233
	.byte	5,0,7
	.word	6060
	.byte	3
	.byte	'Dem_EvMemGetEventMemDataByPtr',0,3,19,170,4,19
	.word	1939
	.byte	1,1,4
	.byte	'EventMemory',0,19,170,4,75
	.word	7324
	.byte	5,0,3
	.byte	'Dem_EvMemIsStored',0,3,19,206,4,30
	.word	316
	.byte	1,1,4
	.byte	'Status',0,19,206,4,61
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemIsEmpty',0,3,19,211,4,30
	.word	316
	.byte	1,1,4
	.byte	'Status',0,19,211,4,60
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemSetToEmpty',0,3,19,226,4,25
	.word	5775
	.byte	1,1,5,0,3
	.byte	'Dem_EvMemGetShadowVisibility',0,3,19,242,4,30
	.word	316
	.byte	1,1,5,0,3
	.byte	'Dem_EvMemGetEventMemStartLocId',0,3,19,131,5,25
	.word	5775
	.byte	1,1,4
	.byte	'MemId',0,19,131,5,69
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemGetEventMemEndLocId',0,3,19,143,5,25
	.word	5775
	.byte	1,1,4
	.byte	'MemId',0,19,143,5,67
	.word	5775
	.byte	5,0,7
	.word	5775
	.byte	8
	.byte	'Dem_EvMemEventMemoryIteratorNew',0,3,19,179,5,17,1,1,4
	.byte	'MemId',0,19,179,5,63
	.word	7684
	.byte	5,0,10
	.word	5775
	.byte	7
	.word	7746
	.byte	3
	.byte	'Dem_EvMemEventMemoryIteratorIsValid',0,3,19,184,5,30
	.word	316
	.byte	1,1,4
	.byte	'MemId',0,19,184,5,86
	.word	7751
	.byte	5,0,8
	.byte	'Dem_EvMemEventMemoryIteratorNext',0,3,19,189,5,17,1,1,4
	.byte	'MemId',0,19,189,5,64
	.word	7684
	.byte	5,0,3
	.byte	'Dem_EvMemIsEdgeTrigger',0,3,19,247,5,30
	.word	316
	.byte	1,1,4
	.byte	'StatusOld',0,19,247,5,66
	.word	5775
	.byte	4
	.byte	'StatusNew',0,19,247,5,90
	.word	5775
	.byte	4
	.byte	'Trigger',0,19,247,5,114
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemGetRamStsMask',0,3,19,154,7,25
	.word	5775
	.byte	1,1,4
	.byte	'EventId',0,19,154,7,64
	.word	234
	.byte	9,5,0,0,3
	.byte	'Dem_EvMemGetCurrentAgingCycleCounterInt',0,3,21,20,25
	.word	5775
	.byte	1,1,4
	.byte	'EventId',0,21,20,81
	.word	234
	.byte	5,0,3
	.byte	'Dem_EvMemIsAged',0,3,21,61,30
	.word	316
	.byte	1,1,4
	.byte	'EventId',0,21,61,62
	.word	234
	.byte	4
	.byte	'LocId',0,21,61,84
	.word	5775
	.byte	4
	.byte	'StatusNew',0,21,61,104
	.word	5775
	.byte	5,0,3
	.byte	'Dem_EvMemGetMemIdForDTCOrigin',0,3,22,150,1,25
	.word	5775
	.byte	1,1,4
	.byte	'DTCOrigin',0,22,150,1,73
	.word	316
	.byte	5,0,3
	.byte	'Dem_EvMemGetMemIdForEvent',0,3,22,222,1,25
	.word	5775
	.byte	1,1,4
	.byte	'EventId',0,22,222,1,67
	.word	234
	.byte	9,5,0,0
.L276:
	.byte	3
	.byte	'Dem_DtcIsSuppressed',0,3,23,118,30
	.word	316
	.byte	1,1
.L277:
	.byte	4
	.byte	'dtcId',0,23,118,65
	.word	234
.L279:
	.byte	9,5,0,0,3
	.byte	'Dem_DtcIsSuppressedDirectly',0,3,23,128,1,30
	.word	316
	.byte	1,1,4
	.byte	'dtcId',0,23,128,1,73
	.word	234
	.byte	5,0
.L264:
	.byte	3
	.byte	'Dem_DtcIsSupported',0,3,23,138,1,30
	.word	316
	.byte	1,1
.L267:
	.byte	4
	.byte	'dtcID',0,23,138,1,64
	.word	234
.L269:
	.byte	9,5,5,0,0,3
	.byte	'Dem_EventUsesOrigin',0,3,23,137,2,30
	.word	316
	.byte	1,1,4
	.byte	'eventId',0,23,137,2,67
	.word	234
	.byte	4
	.byte	'origin',0,23,137,2,94
	.word	316
	.byte	9,5,5,5,0,0
.L215:
	.byte	8
	.byte	'Dem_ClientSelectionResult_SetClientRequest',0,3,24,12,17,1,1
.L216:
	.byte	4
	.byte	'clientId',0,24,12,77
	.word	316
.L218:
	.byte	9,5,0,0
.L225:
	.byte	8
	.byte	'Dem_ClientSelectionResult_SetClientRequest4Clear',0,3,24,17,17,1,1
.L226:
	.byte	4
	.byte	'clientId',0,24,17,83
	.word	316
.L228:
	.byte	9,5,5,5,5,5,0,0,6
	.word	316
	.byte	6
	.word	234
	.byte	6
	.word	234
	.byte	11,25,16,9,16,12
	.byte	'DTC',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'DTCFormat',0
	.word	316
	.byte	1,2,35,4,12
	.byte	'DTCOrigin',0
	.word	316
	.byte	1,2,35,5,12
	.byte	'client_state',0
	.word	8675
	.byte	1,2,35,6,12
	.byte	'request',0
	.word	8680
	.byte	2,2,35,8,12
	.byte	'result',0
	.word	8685
	.byte	2,2,35,10,12
	.byte	'selection',0
	.word	160
	.byte	4,2,35,12,0,7
	.word	8690
	.byte	16
	.byte	'Dem_Client_getClient',0,25,61,17
	.word	8821
	.byte	1,1,1,1,4
	.byte	'ClientId',0,25,61,56
	.word	316
	.byte	0,17
	.word	176
	.byte	18
	.word	214
	.byte	5,0,17
	.word	256
	.byte	18
	.word	295
	.byte	5,0,17
	.word	333
	.byte	18
	.word	363
	.byte	5,0,17
	.word	383
	.byte	18
	.word	414
	.byte	5,0,17
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	5,0,17
	.word	534
	.byte	18
	.word	576
	.byte	18
	.word	591
	.byte	5,0,17
	.word	609
	.byte	18
	.word	662
	.byte	5,0,17
	.word	691
	.byte	18
	.word	731
	.byte	18
	.word	747
	.byte	5,0,17
	.word	768
	.byte	18
	.word	817
	.byte	5,0,17
	.word	835
	.byte	18
	.word	886
	.byte	5,0,17
	.word	909
	.byte	18
	.word	953
	.byte	18
	.word	971
	.byte	18
	.word	985
	.byte	18
	.word	1009
	.byte	5,0,17
	.word	1036
	.byte	18
	.word	1091
	.byte	5,0,17
	.word	1112
	.byte	18
	.word	1170
	.byte	5,0,17
	.word	1191
	.byte	18
	.word	1246
	.byte	5,0,17
	.word	1267
	.byte	18
	.word	1322
	.byte	5,0,17
	.word	1343
	.byte	18
	.word	1372
	.byte	5,0,17
	.word	1386
	.byte	18
	.word	1419
	.byte	5,0,17
	.word	1433
	.byte	18
	.word	1465
	.byte	5,0,17
	.word	1482
	.byte	18
	.word	1519
	.byte	9,19
	.word	1433
	.byte	18
	.word	1465
	.byte	20
	.word	1480
	.byte	0,5,0,0,17
	.word	1538
	.byte	18
	.word	1572
	.byte	5,0,17
	.word	1641
	.byte	18
	.word	1685
	.byte	18
	.word	1697
	.byte	9,19
	.word	1343
	.byte	18
	.word	1372
	.byte	20
	.word	1384
	.byte	0,5,0,0,17
	.word	1726
	.byte	18
	.word	1769
	.byte	5,0,17
	.word	1783
	.byte	18
	.word	1819
	.byte	5,0,17
	.word	1833
	.byte	18
	.word	1876
	.byte	5,0,17
	.word	1890
	.byte	18
	.word	1924
	.byte	5,0,17
	.word	1944
	.byte	18
	.word	1974
	.byte	18
	.word	1989
	.byte	5,0,17
	.word	2012
	.byte	18
	.word	2044
	.byte	18
	.word	2059
	.byte	5,0,17
	.word	2082
	.byte	18
	.word	2118
	.byte	18
	.word	2133
	.byte	18
	.word	2154
	.byte	9,19
	.word	1944
	.byte	18
	.word	1974
	.byte	18
	.word	1989
	.byte	20
	.word	2010
	.byte	0,5,19
	.word	2012
	.byte	18
	.word	2044
	.byte	18
	.word	2059
	.byte	20
	.word	2080
	.byte	0,5,0,0,17
	.word	2183
	.byte	18
	.word	2223
	.byte	18
	.word	2237
	.byte	5,0,17
	.word	2260
	.byte	18
	.word	2296
	.byte	18
	.word	2310
	.byte	9,19
	.word	2183
	.byte	18
	.word	2223
	.byte	18
	.word	2237
	.byte	20
	.word	2258
	.byte	0,5,0,0,17
	.word	2335
	.byte	18
	.word	2370
	.byte	18
	.word	2384
	.byte	18
	.word	2405
	.byte	5,0,17
	.word	2430
	.byte	18
	.word	2463
	.byte	18
	.word	2477
	.byte	18
	.word	2498
	.byte	5,0,17
	.word	2523
	.byte	18
	.word	2560
	.byte	18
	.word	2574
	.byte	18
	.word	2595
	.byte	18
	.word	2618
	.byte	9,19
	.word	2430
	.byte	18
	.word	2463
	.byte	18
	.word	2477
	.byte	18
	.word	2498
	.byte	20
	.word	2521
	.byte	0,5,0,0,17
	.word	2644
	.byte	18
	.word	2675
	.byte	18
	.word	2690
	.byte	5,0,17
	.word	2713
	.byte	18
	.word	2746
	.byte	18
	.word	2761
	.byte	5,0,17
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	5,0,17
	.word	2862
	.byte	18
	.word	2899
	.byte	18
	.word	2913
	.byte	9,19
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	20
	.word	2860
	.byte	0,5,0,0,17
	.word	2938
	.byte	18
	.word	2974
	.byte	18
	.word	2988
	.byte	18
	.word	3009
	.byte	5,0,17
	.word	3034
	.byte	18
	.word	3068
	.byte	18
	.word	3082
	.byte	18
	.word	3103
	.byte	5,0,17
	.word	3133
	.byte	18
	.word	3164
	.byte	18
	.word	3179
	.byte	5,0,17
	.word	3202
	.byte	18
	.word	3235
	.byte	18
	.word	3250
	.byte	5,0,17
	.word	3273
	.byte	18
	.word	3314
	.byte	18
	.word	3328
	.byte	5,0,17
	.word	3351
	.byte	18
	.word	3388
	.byte	18
	.word	3402
	.byte	9,19
	.word	3273
	.byte	18
	.word	3314
	.byte	18
	.word	3328
	.byte	20
	.word	3349
	.byte	0,5,0,0,17
	.word	3427
	.byte	18
	.word	3461
	.byte	18
	.word	3475
	.byte	18
	.word	3496
	.byte	5,0,17
	.word	3521
	.byte	18
	.word	3553
	.byte	5,0,17
	.word	3566
	.byte	5,0,17
	.word	3594
	.byte	18
	.word	3647
	.byte	5,0,17
	.word	3666
	.byte	18
	.word	3719
	.byte	5,0,17
	.word	3738
	.byte	5,0,17
	.word	3797
	.byte	18
	.word	3843
	.byte	5,0,17
	.word	3859
	.byte	18
	.word	3924
	.byte	9,19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,5,19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,5,19
	.word	1267
	.byte	18
	.word	1322
	.byte	20
	.word	1341
	.byte	0,5,19
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	20
	.word	532
	.byte	0,5,0,0,17
	.word	3948
	.byte	18
	.word	3995
	.byte	18
	.word	4012
	.byte	9,19
	.word	3566
	.byte	20
	.word	3592
	.byte	0,5,19
	.word	3594
	.byte	18
	.word	3647
	.byte	20
	.word	3664
	.byte	0,5,19
	.word	3594
	.byte	18
	.word	3647
	.byte	20
	.word	3664
	.byte	0,5,19
	.word	3797
	.byte	18
	.word	3843
	.byte	20
	.word	3857
	.byte	0,5,19
	.word	3797
	.byte	18
	.word	3843
	.byte	20
	.word	3857
	.byte	0,5,19
	.word	3797
	.byte	18
	.word	3843
	.byte	20
	.word	3857
	.byte	0,5,19
	.word	1112
	.byte	18
	.word	1170
	.byte	20
	.word	1189
	.byte	0,5,19
	.word	3859
	.byte	18
	.word	3924
	.byte	21
	.word	3941
	.byte	19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,20
	.word	3942
	.byte	19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,20
	.word	3943
	.byte	19
	.word	1267
	.byte	18
	.word	1322
	.byte	20
	.word	1341
	.byte	0,20
	.word	3944
	.byte	19
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	20
	.word	532
	.byte	0,20
	.word	3945
	.byte	0,0,5,0,0,17
	.word	4042
	.byte	18
	.word	4079
	.byte	5,0,16
	.byte	'Dem_DtcGroupIdFromDtcGroupCode',0,26,45,20
	.word	316
	.byte	1,1,1,1,4
	.byte	'dtcGrpCode',0,26,45,69
	.word	160
	.byte	0,17
	.word	4099
	.byte	18
	.word	4125
	.byte	18
	.word	4140
	.byte	5,0,17
	.word	4163
	.byte	18
	.word	4191
	.byte	18
	.word	4206
	.byte	5,0,17
	.word	4229
	.byte	18
	.word	4261
	.byte	18
	.word	4276
	.byte	18
	.word	4297
	.byte	9,19
	.word	4099
	.byte	18
	.word	4125
	.byte	18
	.word	4140
	.byte	20
	.word	4161
	.byte	0,5,19
	.word	4163
	.byte	18
	.word	4191
	.byte	18
	.word	4206
	.byte	20
	.word	4227
	.byte	0,5,0,0,17
	.word	4336
	.byte	18
	.word	4368
	.byte	18
	.word	4383
	.byte	5,0,17
	.word	4406
	.byte	18
	.word	4441
	.byte	5,0,17
	.word	4471
	.byte	18
	.word	4524
	.byte	9,19
	.word	256
	.byte	18
	.word	295
	.byte	20
	.word	314
	.byte	0,5,0,0,17
	.word	4540
	.byte	18
	.word	4593
	.byte	9,19
	.word	176
	.byte	18
	.word	214
	.byte	20
	.word	232
	.byte	0,5,0,0,17
	.word	4609
	.byte	18
	.word	4660
	.byte	5,0,17
	.word	4675
	.byte	18
	.word	4725
	.byte	9,19
	.word	2862
	.byte	18
	.word	2899
	.byte	18
	.word	2913
	.byte	21
	.word	2934
	.byte	19
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	20
	.word	2860
	.byte	0,20
	.word	2935
	.byte	0,0,5,0,0,17
	.word	4742
	.byte	18
	.word	4794
	.byte	5,0,17
	.word	4809
	.byte	18
	.word	4858
	.byte	5,0,17
	.word	4873
	.byte	18
	.word	4913
	.byte	9,19
	.word	2862
	.byte	18
	.word	2899
	.byte	18
	.word	2913
	.byte	21
	.word	2934
	.byte	19
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	20
	.word	2860
	.byte	0,20
	.word	2935
	.byte	0,0,5,0,0,17
	.word	4930
	.byte	18
	.word	4974
	.byte	5,0,17
	.word	4989
	.byte	18
	.word	5030
	.byte	5,0,17
	.word	5046
	.byte	18
	.word	5089
	.byte	5,0,17
	.word	5105
	.byte	18
	.word	5153
	.byte	5,0,17
	.word	5169
	.byte	18
	.word	5223
	.byte	9,19
	.word	2938
	.byte	18
	.word	2974
	.byte	18
	.word	2988
	.byte	18
	.word	3009
	.byte	20
	.word	3032
	.byte	0,5,0,0,17
	.word	5241
	.byte	18
	.word	5284
	.byte	5,0,17
	.word	5300
	.byte	18
	.word	5345
	.byte	5,0,17
	.word	5374
	.byte	18
	.word	5410
	.byte	5,0,17
	.word	5429
	.byte	18
	.word	5469
	.byte	5,0,17
	.word	5488
	.byte	5,0,17
	.word	5541
	.byte	18
	.word	5577
	.byte	9,19
	.word	3133
	.byte	18
	.word	3164
	.byte	18
	.word	3179
	.byte	20
	.word	3200
	.byte	0,5,0,0,17
	.word	5597
	.byte	18
	.word	5629
	.byte	9,19
	.word	2260
	.byte	18
	.word	2296
	.byte	18
	.word	2310
	.byte	21
	.word	2331
	.byte	19
	.word	2183
	.byte	18
	.word	2223
	.byte	18
	.word	2237
	.byte	20
	.word	2258
	.byte	0,20
	.word	2332
	.byte	0,0,5,0,0,17
	.word	5655
	.byte	18
	.word	5680
	.byte	18
	.word	5696
	.byte	5,0,17
	.word	5718
	.byte	18
	.word	5752
	.byte	5,0,17
	.word	5796
	.byte	18
	.word	5848
	.byte	18
	.word	5864
	.byte	5,0,17
	.word	5884
	.byte	18
	.word	5917
	.byte	5,0,17
	.word	5933
	.byte	18
	.word	5974
	.byte	5,0,17
	.word	6238
	.byte	18
	.word	6282
	.byte	5,0,17
	.word	6305
	.byte	18
	.word	6344
	.byte	9,19
	.word	6238
	.byte	18
	.word	6282
	.byte	20
	.word	6303
	.byte	0,5,0,0,17
	.word	6363
	.byte	18
	.word	6408
	.byte	5,0,17
	.word	6431
	.byte	18
	.word	6475
	.byte	5,0,17
	.word	6498
	.byte	18
	.word	6545
	.byte	5,0,17
	.word	6568
	.byte	18
	.word	6620
	.byte	5,0,17
	.word	6643
	.byte	18
	.word	6698
	.byte	5,0,17
	.word	6721
	.byte	18
	.word	6771
	.byte	5,0,17
	.word	6794
	.byte	18
	.word	6839
	.byte	9,19
	.word	6721
	.byte	18
	.word	6771
	.byte	20
	.word	6792
	.byte	0,5,0,0,17
	.word	6858
	.byte	18
	.word	6899
	.byte	18
	.word	6914
	.byte	5,0,17
	.word	6938
	.byte	18
	.word	6996
	.byte	5,0,17
	.word	7027
	.byte	18
	.word	7081
	.byte	5,0,17
	.word	7104
	.byte	18
	.word	7154
	.byte	5,0,17
	.word	7177
	.byte	18
	.word	7233
	.byte	5,0,17
	.word	7256
	.byte	18
	.word	7301
	.byte	5,0,17
	.word	7329
	.byte	18
	.word	7371
	.byte	5,0,17
	.word	7394
	.byte	18
	.word	7424
	.byte	5,0,17
	.word	7442
	.byte	18
	.word	7471
	.byte	5,0,17
	.word	7489
	.byte	5,0,17
	.word	7523
	.byte	5,0,17
	.word	7566
	.byte	18
	.word	7609
	.byte	5,0,17
	.word	7626
	.byte	18
	.word	7667
	.byte	5,0,17
	.word	7689
	.byte	18
	.word	7729
	.byte	5,0,17
	.word	7756
	.byte	18
	.word	7804
	.byte	5,0,17
	.word	7821
	.byte	18
	.word	7862
	.byte	5,0,17
	.word	7879
	.byte	18
	.word	7914
	.byte	18
	.word	7933
	.byte	18
	.word	7952
	.byte	5,0,17
	.word	7971
	.byte	18
	.word	8006
	.byte	9,19
	.word	4609
	.byte	18
	.word	4660
	.byte	20
	.word	4673
	.byte	0,5,0,0,17
	.word	8027
	.byte	18
	.word	8078
	.byte	5,0,17
	.word	8096
	.byte	18
	.word	8123
	.byte	18
	.word	8139
	.byte	18
	.word	8153
	.byte	5,0,17
	.word	8173
	.byte	18
	.word	8215
	.byte	5,0,17
	.word	8236
	.byte	18
	.word	8274
	.byte	9,19
	.word	4675
	.byte	18
	.word	4725
	.byte	21
	.word	4738
	.byte	19
	.word	2862
	.byte	18
	.word	2899
	.byte	18
	.word	2913
	.byte	21
	.word	2934
	.byte	19
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	20
	.word	2860
	.byte	0,20
	.word	2935
	.byte	0,0,20
	.word	4739
	.byte	0,0,5,0,0,17
	.word	8295
	.byte	18
	.word	8326
	.byte	9,19
	.word	2260
	.byte	18
	.word	2296
	.byte	18
	.word	2310
	.byte	21
	.word	2331
	.byte	19
	.word	2183
	.byte	18
	.word	2223
	.byte	18
	.word	2237
	.byte	20
	.word	2258
	.byte	0,20
	.word	2332
	.byte	0,0,5,0,0,17
	.word	8344
	.byte	18
	.word	8384
	.byte	5,0,17
	.word	8401
	.byte	18
	.word	8432
	.byte	9,19
	.word	8295
	.byte	18
	.word	8326
	.byte	21
	.word	8340
	.byte	19
	.word	2260
	.byte	18
	.word	2296
	.byte	18
	.word	2310
	.byte	21
	.word	2331
	.byte	19
	.word	2183
	.byte	18
	.word	2223
	.byte	18
	.word	2237
	.byte	20
	.word	2258
	.byte	0,20
	.word	2332
	.byte	0,0,20
	.word	8341
	.byte	0,0,5,19
	.word	1343
	.byte	18
	.word	1372
	.byte	20
	.word	1384
	.byte	0,5,0,0,16
	.byte	'Dem_DtcIdFromDtcCode',0,23,128,2,15
	.word	234
	.byte	1,1,1,1,4
	.byte	'dtcCode',0,23,128,2,53
	.word	160
	.byte	0,17
	.word	8452
	.byte	18
	.word	8484
	.byte	18
	.word	8501
	.byte	9,19
	.word	4742
	.byte	18
	.word	4794
	.byte	20
	.word	4807
	.byte	0,5,19
	.word	4809
	.byte	18
	.word	4858
	.byte	20
	.word	4871
	.byte	0,5,19
	.word	4675
	.byte	18
	.word	4725
	.byte	21
	.word	4738
	.byte	19
	.word	2862
	.byte	18
	.word	2899
	.byte	18
	.word	2913
	.byte	21
	.word	2934
	.byte	19
	.word	2784
	.byte	18
	.word	2825
	.byte	18
	.word	2839
	.byte	20
	.word	2860
	.byte	0,20
	.word	2935
	.byte	0,0,20
	.word	4739
	.byte	0,0,5,0,0,17
	.word	8523
	.byte	18
	.word	8573
	.byte	9,19
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	20
	.word	532
	.byte	0,5,0,0,17
	.word	8594
	.byte	18
	.word	8650
	.byte	9,19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,5,19
	.word	333
	.byte	18
	.word	363
	.byte	20
	.word	381
	.byte	0,5,19
	.word	1267
	.byte	18
	.word	1322
	.byte	20
	.word	1341
	.byte	0,5,19
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	20
	.word	532
	.byte	0,5,19
	.word	444
	.byte	18
	.word	482
	.byte	18
	.word	497
	.byte	18
	.word	513
	.byte	20
	.word	532
	.byte	0,5,0,0,22,1,7
	.word	11911
	.byte	23
	.byte	'__codeptr',0,27,1,1
	.word	11913
	.byte	23
	.byte	'sint8',0,28,76,25
	.word	7019
	.byte	23
	.byte	'uint8',0,28,81,25
	.word	316
	.byte	23
	.byte	'sint16',0,28,86,25
	.word	5361
	.byte	23
	.byte	'uint16',0,28,91,25
	.word	234
	.byte	2
	.byte	'int',0,4,5,23
	.byte	'sint32',0,28,96,24
	.word	11994
	.byte	23
	.byte	'uint32',0,28,106,24
	.word	160
	.byte	2
	.byte	'unsigned long long int',0,8,7,23
	.byte	'uint64',0,28,111,30
	.word	12031
	.byte	23
	.byte	'boolean',0,28,127,25
	.word	316
	.byte	23
	.byte	'uint8_least',0,28,137,1,25
	.word	5775
	.byte	23
	.byte	'uint16_least',0,28,147,1,25
	.word	5775
	.byte	23
	.byte	'StatusType',0,29,191,1,27
	.word	316
	.byte	23
	.byte	'Std_ReturnType',0,29,199,1,15
	.word	316
	.byte	11,29,206,1,9,8,12
	.byte	'vendorID',0
	.word	234
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	234
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	316
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	316
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	316
	.byte	1,2,35,6,0,23
	.byte	'Std_VersionInfoType',0,29,213,1,3
	.word	12175
	.byte	23
	.byte	'Dem_ComponentIdType',0,30,20,15
	.word	316
	.byte	23
	.byte	'PduIdType',0,31,22,19
	.word	234
	.byte	23
	.byte	'PduLengthType',0,31,26,19
	.word	234
	.byte	24,32,113,9,4,25
	.byte	'TP_DATACONF',0,0,25
	.byte	'TP_DATARETRY',0,1,25
	.byte	'TP_CONFPENDING',0,2,0,23
	.byte	'TpDataStateType',0,32,118,3
	.word	12393
	.byte	23
	.byte	'Can_IdType',0,33,32,16
	.word	160
	.byte	23
	.byte	'Can_HwHandleType',0,33,43,16
	.word	234
	.byte	11,34,93,9,8,12
	.byte	'Class',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'TIN',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'ReturnAddress',0
	.word	160
	.byte	4,2,35,4,0,23
	.byte	'OsTrapInfoType',0,34,97,3
	.word	12513
	.byte	14,68
	.word	160
	.byte	15,16,0,11,34,154,1,9,68,12
	.byte	'store',0
	.word	12593
	.byte	68,2,35,0,0,14,68
	.word	12602
	.byte	15,0,0,23
	.byte	'Os_JumpBufType',0,34,156,1,3
	.word	12624
	.byte	23
	.byte	'Os_StackTraceType',0,34,174,1,18
	.word	160
	.byte	11,34,175,1,9,8,12
	.byte	'sp',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'ctx',0
	.word	160
	.byte	4,2,35,4,0,23
	.byte	'Os_StackValueType',0,34,175,1,63
	.word	12684
	.byte	23
	.byte	'Os_StackSizeType',0,34,176,1,27
	.word	12684
	.byte	26,1,1,7
	.word	12769
	.byte	23
	.byte	'Os_VoidVoidFunctionType',0,34,179,1,16
	.word	12772
	.byte	23
	.byte	'ApplicationType',0,34,193,1,23
	.word	316
	.byte	27
	.byte	'Os_ApplicationConfigurationType_s',0,34,198,1,16,2,12
	.byte	'app_id',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,1,0,23
	.byte	'Os_ApplicationConfigurationType',0,34,201,1,3
	.word	12835
	.byte	23
	.byte	'Os_CoreStateType',0,34,203,1,16
	.word	160
	.byte	23
	.byte	'AreaIdType',0,34,204,1,16
	.word	234
	.byte	23
	.byte	'Os_PeripheralAddressType',0,34,212,1,22
	.word	160
	.byte	23
	.byte	'TickType',0,34,221,1,22
	.word	160
	.byte	23
	.byte	'Os_StopwatchTickType',0,34,225,1,22
	.word	160
	.byte	23
	.byte	'Os_Lockable',0,34,234,1,18
	.word	3128
	.byte	23
	.byte	'CoreIdType',0,34,236,1,16
	.word	234
	.byte	23
	.byte	'SpinlockIdType',0,34,237,1,16
	.word	234
	.byte	24,34,239,1,9,4,25
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,25
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,23
	.byte	'TryToGetSpinlockType',0,34,239,1,74
	.word	13142
	.byte	24,34,174,2,9,4,25
	.byte	'APPLICATION_ACCESSIBLE',0,0,25
	.byte	'APPLICATION_RESTARTING',0,1,25
	.byte	'APPLICATION_TERMINATED',0,2,0,23
	.byte	'ApplicationStateType',0,34,174,2,92
	.word	13235
	.byte	28
	.byte	'void',0,7
	.word	13347
	.byte	29,1,1,30
	.word	316
	.byte	30
	.word	13353
	.byte	0,7
	.word	13358
	.byte	23
	.byte	'Os_FunctionEntryType',0,34,183,2,16
	.word	13372
	.byte	27
	.byte	'Os_MeterInfoType_s',0,34,193,2,16,48,12
	.byte	'elapsed',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'previous',0
	.word	160
	.byte	4,2,35,4,12
	.byte	'max',0
	.word	160
	.byte	4,2,35,8,12
	.byte	'cumulative',0
	.word	160
	.byte	4,2,35,12,12
	.byte	'stackbase',0
	.word	12684
	.byte	8,2,35,16,12
	.byte	'stackusage',0
	.word	12684
	.byte	8,2,35,24,12
	.byte	'stackmax',0
	.word	12684
	.byte	8,2,35,32,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,40,0,23
	.byte	'Os_MeterInfoType',0,34,202,2,3
	.word	13407
	.byte	7
	.word	13407
	.byte	23
	.byte	'Os_MeterInfoRefType',0,34,203,2,50
	.word	13605
	.byte	23
	.byte	'EventMaskType',0,34,206,2,15
	.word	316
	.byte	23
	.byte	'Os_imaskType',0,34,211,2,16
	.word	160
	.byte	27
	.byte	'Os_ISRDynType_s',0,34,213,2,16,48,12
	.byte	'meter',0
	.word	13407
	.byte	48,2,35,0,0,23
	.byte	'Os_ISRDynType',0,34,215,2,3
	.word	13684
	.byte	7
	.word	13684
	.byte	10
	.word	13745
	.byte	27
	.byte	'Os_ISRType_s',0,34,216,2,16,24,12
	.byte	'entry_function',0
	.word	12777
	.byte	4,2,35,0,12
	.byte	'dynamic',0
	.word	13750
	.byte	4,2,35,4,12
	.byte	'imask',0
	.word	160
	.byte	4,2,35,8,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,12,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,20,12
	.byte	'application',0
	.word	316
	.byte	1,2,35,21,0,23
	.byte	'Os_ISRType',0,34,223,2,3
	.word	13755
	.byte	7
	.word	12769
	.byte	10
	.word	13755
	.byte	7
	.word	13914
	.byte	23
	.byte	'ISRType',0,34,224,2,46
	.word	13919
	.byte	23
	.byte	'Os_bitmask',0,34,239,2,22
	.word	160
	.byte	23
	.byte	'Os_pset0Type',0,34,240,2,20
	.word	160
	.byte	23
	.byte	'Os_pset1Type',0,34,241,2,20
	.word	160
	.byte	23
	.byte	'Os_pset2Type',0,34,242,2,20
	.word	160
	.byte	13,34,243,2,9,4,12
	.byte	'p0',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'p1',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'p2',0
	.word	160
	.byte	4,2,35,0,0,23
	.byte	'Os_psetType',0,34,247,2,3
	.word	14027
	.byte	13,34,249,2,9,4,12
	.byte	't0',0
	.word	160
	.byte	4,2,35,0,12
	.byte	't1',0
	.word	160
	.byte	4,2,35,0,12
	.byte	't2',0
	.word	160
	.byte	4,2,35,0,0,23
	.byte	'Os_tpmaskType',0,34,253,2,3
	.word	14091
	.byte	23
	.byte	'Os_ActivationCountType',0,34,254,2,23
	.word	316
	.byte	27
	.byte	'Os_TaskDynType_s',0,34,128,3,16,120,12
	.byte	'terminate_jump_buf',0
	.word	12633
	.byte	68,2,35,0,12
	.byte	'meter',0
	.word	13407
	.byte	48,2,35,68,12
	.byte	'activation_count',0
	.word	316
	.byte	1,2,35,116,0,23
	.byte	'Os_TaskDynType',0,34,132,3,3
	.word	14189
	.byte	14,68
	.word	12602
	.byte	15,0,0,7
	.word	14189
	.byte	10
	.word	14315
	.byte	27
	.byte	'Os_TaskType_s',0,34,134,3,16,40,12
	.byte	'dynamic',0
	.word	14320
	.byte	4,2,35,0,12
	.byte	'entry_function',0
	.word	12777
	.byte	4,2,35,4,12
	.byte	'pset',0
	.word	14027
	.byte	4,2,35,8,12
	.byte	'base_tpmask',0
	.word	14091
	.byte	4,2,35,12,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,16,12
	.byte	'core_id',0
	.word	234
	.byte	2,2,35,20,12
	.byte	'index',0
	.word	160
	.byte	4,2,35,24,12
	.byte	'stackbudget',0
	.word	12684
	.byte	8,2,35,28,12
	.byte	'activation_count',0
	.word	316
	.byte	1,2,35,36,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,37,12
	.byte	'application',0
	.word	316
	.byte	1,2,35,38,0,23
	.byte	'Os_TaskType',0,34,146,3,3
	.word	14325
	.byte	10
	.word	14325
	.byte	7
	.word	14575
	.byte	23
	.byte	'TaskType',0,34,147,3,47
	.word	14580
	.byte	31
	.byte	'Os_TaskStateType',0,34,155,3,6,4,25
	.byte	'SUSPENDED',0,0,25
	.byte	'READY',0,1,25
	.byte	'WAITING',0,2,25
	.byte	'RUNNING',0,3,0,23
	.byte	'TaskStateType',0,34,156,3,31
	.word	14603
	.byte	13,34,167,3,3,4,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,0,0,27
	.byte	'Os_ResourceDynType_s',0,34,166,3,16,4,12
	.byte	'saved_priority',0
	.word	14690
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType',0,34,170,3,3
	.word	14713
	.byte	7
	.word	14713
	.byte	10
	.word	14793
	.byte	27
	.byte	'Os_ResourceType_s',0,34,171,3,16,12,12
	.byte	'dynamic',0
	.word	14798
	.byte	4,2,35,0,12
	.byte	'tpmask',0
	.word	14091
	.byte	4,2,35,4,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,8,0,23
	.byte	'Os_ResourceType',0,34,175,3,3
	.word	14803
	.byte	11,34,181,3,9,12,12
	.byte	'maxallowedvalue',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	160
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	160
	.byte	4,2,35,8,0,23
	.byte	'AlarmBaseType',0,34,185,3,3
	.word	14902
	.byte	11,34,206,3,9,8,12
	.byte	'Running',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'Pending',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'Delay',0
	.word	160
	.byte	4,2,35,4,0,23
	.byte	'Os_CounterStatusType',0,34,210,3,3
	.word	14997
	.byte	32
	.word	316
	.byte	1,1,7
	.word	15083
	.byte	23
	.byte	'Os_CounterIncrAdvType',0,34,217,3,22
	.word	15090
	.byte	27
	.byte	's_swd',0,34,222,3,12,4,12
	.byte	'count',0
	.word	160
	.byte	4,2,35,0,0,13,34,221,3,3,4,12
	.byte	'sw',0
	.word	15126
	.byte	4,2,35,0,0,27
	.byte	'Os_CounterDynType_s',0,34,220,3,16,4,12
	.byte	'type_dependent',0
	.word	15154
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType',0,34,226,3,3
	.word	15173
	.byte	7
	.word	15173
	.byte	10
	.word	15251
	.byte	27
	.byte	'Os_CounterType_s',0,34,227,3,16,28,12
	.byte	'dynamic',0
	.word	15256
	.byte	4,2,35,0,12
	.byte	'advincr',0
	.word	15095
	.byte	4,2,35,4,12
	.byte	'base',0
	.word	14902
	.byte	12,2,35,8,12
	.byte	'core',0
	.word	13353
	.byte	4,2,35,20,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,24,12
	.byte	'application',0
	.word	316
	.byte	1,2,35,25,0,23
	.byte	'Os_CounterType',0,34,234,3,3
	.word	15261
	.byte	7
	.word	15083
	.byte	10
	.word	15261
	.byte	7
	.word	15413
	.byte	23
	.byte	'CounterType',0,34,235,3,52
	.word	15418
	.byte	31
	.byte	'Os_ScheduleTableStatusType',0,34,240,3,6,4,25
	.byte	'SCHEDULETABLE_STOPPED',0,0,25
	.byte	'SCHEDULETABLE_NEXT',0,1,25
	.byte	'SCHEDULETABLE_WAITING',0,2,25
	.byte	'SCHEDULETABLE_RUNNING',0,3,25
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,23
	.byte	'ScheduleTableStatusType',0,34,241,3,41
	.word	15444
	.byte	10
	.word	.L362-.L79
	.byte	7
	.word	15644
	.byte	23
	.byte	'ScheduleTableType',0,34,128,4,58
	.word	15649
	.byte	27
	.byte	'Os_ScheduleTableDynType_s',0,34,130,4,16,16,12
	.byte	'match',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'next',0
	.word	15654
	.byte	4,2,35,4,12
	.byte	'state',0
	.word	15444
	.byte	4,2,35,8,12
	.byte	'config',0
	.word	234
	.byte	2,2,35,12,0,7
	.word	15681
	.byte	10
	.word	15774
.L362:
	.byte	27
	.byte	'Os_ScheduleTableType_s',0,34,247,3,16,16,12
	.byte	'dynamic',0
	.word	15779
	.byte	4,2,35,0,12
	.byte	'counter',0
	.word	15423
	.byte	4,2,35,4,12
	.byte	'repeat',0
	.word	316
	.byte	1,2,35,8,12
	.byte	'config',0
	.word	234
	.byte	2,2,35,10,12
	.byte	'initial',0
	.word	316
	.byte	1,2,35,12,12
	.byte	'access',0
	.word	316
	.byte	1,2,35,13,12
	.byte	'application',0
	.word	316
	.byte	1,2,35,14,0,23
	.byte	'Os_ScheduleTableType',0,34,255,3,3
	.word	15784
	.byte	10
	.word	15784
	.byte	7
	.word	15964
	.byte	10
	.word	15261
	.byte	7
	.word	15974
	.byte	6
	.word	13077
	.byte	6
	.word	14027
	.byte	6
	.word	13924
	.byte	6
	.word	14585
	.byte	6
	.word	14091
	.byte	6
	.word	316
	.byte	6
	.word	14585
	.byte	27
	.byte	'Os_ControlledCoreType_s',0,34,251,6,16,112,12
	.byte	'TrapInfo',0
	.word	12513
	.byte	8,2,35,0,12
	.byte	'lock_taskaccess',0
	.word	15984
	.byte	4,2,35,8,12
	.byte	'ReadyTasks',0
	.word	15989
	.byte	4,2,35,12,12
	.byte	'RunningISR',0
	.word	15994
	.byte	4,2,35,16,12
	.byte	'RunningTask',0
	.word	15999
	.byte	4,2,35,20,12
	.byte	'RunningTPMask',0
	.word	16004
	.byte	4,2,35,24,12
	.byte	'CurrentMeteredObject',0
	.word	13610
	.byte	4,2,35,28,12
	.byte	'IdleMeter',0
	.word	13407
	.byte	48,2,35,32,12
	.byte	'AppAccess',0
	.word	316
	.byte	1,2,35,80,12
	.byte	'AppOverride',0
	.word	16009
	.byte	1,2,35,81,12
	.byte	'GetStackValueAdjust',0
	.word	12684
	.byte	8,2,35,84,12
	.byte	'InErrorHook',0
	.word	316
	.byte	1,2,35,92,12
	.byte	'ChainTaskRef',0
	.word	16014
	.byte	4,2,35,96,12
	.byte	'GetStackUsageAdjust',0
	.word	12684
	.byte	8,2,35,100,12
	.byte	'InProtectionHook',0
	.word	316
	.byte	1,2,35,108,12
	.byte	'CoreIsActive',0
	.word	316
	.byte	1,2,35,109,12
	.byte	'InShutdownHook',0
	.word	316
	.byte	1,2,35,110,0,23
	.byte	'Os_ControlledCoreType',0,34,141,7,3
	.word	16019
	.byte	7
	.word	160
	.byte	10
	.word	13755
	.byte	7
	.word	16475
	.byte	10
	.word	14325
	.byte	7
	.word	16485
	.byte	7
	.word	13407
	.byte	27
	.byte	'Os_AnyCoreType_s',0,34,151,7,16,96,12
	.byte	'DisableAllImask',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'SuspendAllImask',0
	.word	160
	.byte	4,2,35,4,12
	.byte	'SuspendOSImask',0
	.word	160
	.byte	4,2,35,8,12
	.byte	'DisableAllCount',0
	.word	160
	.byte	4,2,35,12,12
	.byte	'SuspendAllCount',0
	.word	160
	.byte	4,2,35,16,12
	.byte	'SuspendOSCount',0
	.word	160
	.byte	4,2,35,20,12
	.byte	'RestartJumpBuf',0
	.word	12633
	.byte	68,2,35,24,12
	.byte	'Restartable',0
	.word	316
	.byte	1,2,35,92,0,23
	.byte	'Os_AnyCoreType',0,34,160,7,3
	.word	16500
	.byte	23
	.byte	'Can_TxObjPriorityClassType',0,35,219,3,16
	.word	160
	.byte	27
	.byte	'Can_TxHwObjectConfigType',0,35,231,3,16,8,12
	.byte	'MsgObjId',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'TxObjPriorityClass',0
	.word	160
	.byte	4,2,35,4,0,23
	.byte	'Can_TxHwObjectConfigType',0,35,252,3,3
	.word	16777
	.byte	27
	.byte	'Can_RxHwObjectConfigType',0,35,129,4,16,12,12
	.byte	'MaskRef',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'MsgId',0
	.word	160
	.byte	4,2,35,4,12
	.byte	'MsgObjId',0
	.word	316
	.byte	1,2,35,8,12
	.byte	'HwControllerId',0
	.word	316
	.byte	1,2,35,9,0,23
	.byte	'Can_RxHwObjectConfigType',0,35,147,4,3
	.word	16913
	.byte	14,4
	.word	316
	.byte	15,3,0,27
	.byte	'Can_ControllerMOMapConfigType',0,35,181,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	17053
	.byte	4,2,35,0,0,23
	.byte	'Can_ControllerMOMapConfigType',0,35,184,4,3
	.word	17062
	.byte	27
	.byte	'Can_NPCRValueType',0,35,188,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	234
	.byte	2,2,35,0,0,23
	.byte	'Can_NPCRValueType',0,35,191,4,3
	.word	17163
	.byte	27
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,35,194,4,16,8,12
	.byte	'CanControllerBaudrate',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	234
	.byte	2,2,35,4,0,23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,35,198,4,3
	.word	17238
	.byte	10
	.word	17238
	.byte	7
	.word	17403
	.byte	27
	.byte	'Can_BaudrateConfigPtrType',0,35,201,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	17408
	.byte	4,2,35,0,0,23
	.byte	'Can_BaudrateConfigPtrType',0,35,204,4,3
	.word	17413
	.byte	27
	.byte	'Can_EventHandlingType',0,35,226,4,16,4,12
	.byte	'CanEventType',0
	.word	17053
	.byte	4,2,35,0,0,23
	.byte	'Can_EventHandlingType',0,35,229,4,3
	.word	17513
	.byte	23
	.byte	'Rte_TransformerErrorCode',0,36,130,1,15
	.word	316
	.byte	23
	.byte	'Rte_TransformerClass',0,36,131,1,15
	.word	316
	.byte	11,36,168,1,9,12,12
	.byte	'in',0
	.word	13353
	.byte	4,2,35,0,12
	.byte	'out',0
	.word	13353
	.byte	4,2,35,4,12
	.byte	'used',0
	.word	234
	.byte	2,2,35,8,12
	.byte	'lost_data',0
	.word	316
	.byte	1,2,35,10,0,23
	.byte	'Rte_QDynType',0,36,173,1,3
	.word	17659
	.byte	24,36,175,1,9,4,25
	.byte	'RTE_DRA',0,0,25
	.byte	'RTE_WOWP',0,1,25
	.byte	'RTE_TASK',0,2,25
	.byte	'RTE_ARE',0,3,25
	.byte	'RTE_EV',0,4,25
	.byte	'RTE_MSI',0,5,0,23
	.byte	'Rte_NotificationType',0,36,182,1,3
	.word	17746
	.byte	14,128,8
	.word	316
	.byte	15,255,7,0,23
	.byte	'Impl_NVM_DstPtrType_1024',0,37,50,15
	.word	17844
	.byte	23
	.byte	'CanIf_u32_impl',0,37,69,16
	.word	160
	.byte	23
	.byte	'CanIf_u16_impl',0,37,71,16
	.word	234
	.byte	23
	.byte	'CanIf_u8_impl',0,37,73,15
	.word	316
	.byte	23
	.byte	'CanIf_ControllerModeType_Enum_impl',0,37,88,15
	.word	316
	.byte	23
	.byte	'CanIf_PduModeType_Enum_impl',0,37,90,15
	.word	316
	.byte	11,37,92,9,2,12
	.byte	'DeviceMode',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'ChannelMode',0
	.word	316
	.byte	1,2,35,1,0,23
	.byte	'CanIf_ControllerStateType_struct_impl',0,37,95,3
	.word	18035
	.byte	23
	.byte	'CanIf_NotifStatusType_Enum_impl',0,37,100,15
	.word	316
	.byte	23
	.byte	'CanSM_boolean_Impl',0,37,120,15
	.word	316
	.byte	23
	.byte	'CanSM_u8_Impl',0,37,123,15
	.word	316
	.byte	23
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,37,128,1,15
	.word	316
	.byte	23
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,37,132,1,15
	.word	316
	.byte	23
	.byte	'CanSM_u16_Impl',0,37,136,1,16
	.word	234
	.byte	23
	.byte	'CanSM_TimerStateType_Enum_impl',0,37,138,1,15
	.word	316
	.byte	11,37,140,1,9,4,12
	.byte	'cntTick_u16',0
	.word	234
	.byte	2,2,35,0,12
	.byte	'stTimer',0
	.word	316
	.byte	1,2,35,2,0,23
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,37,143,1,3
	.word	18376
	.byte	23
	.byte	'Com_impl_u16',0,37,154,1,16
	.word	234
	.byte	23
	.byte	'Com_impl_u8',0,37,157,1,15
	.word	316
	.byte	23
	.byte	'ComM_uint32_Impl',0,37,173,1,16
	.word	160
	.byte	23
	.byte	'ComM_uint16_Impl',0,37,175,1,16
	.word	234
	.byte	23
	.byte	'ComM_uint8_Impl',0,37,177,1,15
	.word	316
	.byte	23
	.byte	'ComM_bool_Impl',0,37,179,1,15
	.word	316
	.byte	11,37,181,1,9,24,12
	.byte	'ChannelState_e',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'LightTimeoutCtr_u32',0
	.word	160
	.byte	4,2,35,4,12
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	234
	.byte	2,2,35,8,12
	.byte	'ChannelMode_u8',0
	.word	316
	.byte	1,2,35,10,12
	.byte	'BusSmMode_u8',0
	.word	316
	.byte	1,2,35,11,12
	.byte	'UserRequestCtr_u8',0
	.word	316
	.byte	1,2,35,12,12
	.byte	'PassiveRequestState_u8',0
	.word	316
	.byte	1,2,35,13,12
	.byte	'PncRequestCtr_u8',0
	.word	316
	.byte	1,2,35,14,12
	.byte	'InhibitionReqStatus_u8',0
	.word	316
	.byte	1,2,35,15,12
	.byte	'NmNetworkRequestStatus_b',0
	.word	316
	.byte	1,2,35,16,12
	.byte	'DiagnosticRequestState_b',0
	.word	316
	.byte	1,2,35,17,12
	.byte	'CommunicationAllowed_b',0
	.word	316
	.byte	1,2,35,18,12
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	316
	.byte	1,2,35,19,12
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	316
	.byte	1,2,35,20,12
	.byte	'NmNetworkModeStatus_b',0
	.word	316
	.byte	1,2,35,21,0,23
	.byte	'ComM_ChannelStruct_Impl',0,37,197,1,3
	.word	18608
	.byte	11,37,206,1,9,10,12
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	234
	.byte	2,2,35,0,12
	.byte	'LimitToNoComCtr_u16',0
	.word	234
	.byte	2,2,35,2,12
	.byte	'RequestedUserMode_t',0
	.word	316
	.byte	1,2,35,4,12
	.byte	'IndicatedUserMode_t',0
	.word	316
	.byte	1,2,35,5,12
	.byte	'numChannelsInFullCom_u8',0
	.word	316
	.byte	1,2,35,6,12
	.byte	'numChannelsInSilentCom_u8',0
	.word	316
	.byte	1,2,35,7,12
	.byte	'numChannelsInNoCom_u8',0
	.word	316
	.byte	1,2,35,8,0,23
	.byte	'ComM_UserStruct_Impl',0,37,214,1,3
	.word	19112
	.byte	23
	.byte	'Dcm_IOOperationResponseType',0,37,252,1,15
	.word	316
	.byte	23
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	37,138,2,15
	.word	316
	.byte	23
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,37,146,2,15
	.word	316
	.byte	23
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,37,150,2,15
	.word	316
	.byte	23
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,37,154,2,15
	.word	316
	.byte	23
	.byte	'Dem_DTCFormatType',0,37,160,2,15
	.word	316
	.byte	23
	.byte	'Dem_DTCOriginType',0,37,162,2,15
	.word	316
	.byte	23
	.byte	'Dem_EventIdType',0,37,168,2,16
	.word	234
	.byte	23
	.byte	'Dem_EventStatusType',0,37,170,2,15
	.word	316
	.byte	23
	.byte	'Dem_InitMonitorReasonType',0,37,176,2,15
	.word	316
	.byte	23
	.byte	'Dem_OperationCycleIdType',0,37,179,2,15
	.word	316
	.byte	23
	.byte	'NvM_BlockIdType',0,37,215,2,16
	.word	234
	.byte	23
	.byte	'NvM_RequestResultType',0,37,225,2,15
	.word	316
	.byte	23
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,37,243,3,34
	.word	17855
	.byte	14,128,8
	.word	316
	.byte	15,255,7,0,23
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,37,246,3,34
	.word	17855
	.byte	23
	.byte	'Dem_DTCGroupIdType',0,38,49,15
	.word	316
	.byte	23
	.byte	'Dem_DtcIdType',0,38,50,16
	.word	234
	.byte	23
	.byte	'Dem_ClientIdType',0,38,53,15
	.word	316
	.byte	23
	.byte	'Dem_DtcCodeType',0,38,55,16
	.word	160
	.byte	23
	.byte	'Dem_boolean_least',0,38,60,17
	.word	316
	.byte	23
	.byte	'Dem_EventCategoryType',0,38,62,15
	.word	316
	.byte	23
	.byte	'Dem_DTCSeverityType',0,38,217,1,15
	.word	316
	.byte	23
	.byte	'Dem_DTCGroupType',0,38,133,2,16
	.word	160
	.byte	23
	.byte	'Dem_DebugDataType',0,38,131,3,16
	.word	160
	.byte	23
	.byte	'Dem_DTCKindType',0,38,145,3,16
	.word	316
	.byte	23
	.byte	'Dem_TriggerType',0,38,167,3,15
	.word	316
	.byte	23
	.byte	'Dem_ClientRequestType',0,39,46,16
	.word	234
	.byte	23
	.byte	'Dem_ClientResultType',0,39,47,16
	.word	234
	.byte	23
	.byte	'Dem_ClientSelectionType',0,39,48,16
	.word	160
	.byte	23
	.byte	'Dem_ClientPriorityType',0,39,50,15
	.word	316
	.byte	23
	.byte	'Dem_ClientType',0,25,29,3
	.word	8690
	.byte	14,48
	.word	8690
	.byte	15,2,0,33
	.byte	'Dem_Clients',0,25,40,1
	.word	20594
	.byte	1,1,23
	.byte	'rba_BswSrv_uint64',0,1,66,28
	.word	12031
	.byte	23
	.byte	'Dem_EventIdIterator',0,4,27,22
	.word	5775
	.byte	23
	.byte	'Dem_DtcIdIterator',0,4,197,1,22
	.word	5775
	.byte	23
	.byte	'Dem_DtcGroupIdIterator',0,4,230,1,21
	.word	5775
	.byte	23
	.byte	'Dem_EventIdListIterator',0,4,174,2,3
	.word	1604
	.byte	11,4,213,2,9,4,12
	.byte	'it',0
	.word	234
	.byte	2,2,35,0,12
	.byte	'end',0
	.word	234
	.byte	2,2,35,2,0,23
	.byte	'Dem_DtcIdListIterator',0,4,216,2,3
	.word	20771
	.byte	24,40,31,9,4,25
	.byte	'MEMIF_JOB_OK',0,0,25
	.byte	'MEMIF_JOB_FAILED',0,1,25
	.byte	'MEMIF_JOB_PENDING',0,2,25
	.byte	'MEMIF_JOB_CANCELED',0,3,25
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,25
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,23
	.byte	'MemIf_JobResultType',0,40,39,2
	.word	20834
	.byte	24,41,49,9,4,25
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,25
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,25
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,25
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,25
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,25
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,25
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,23
	.byte	'NvM_Prv_Activities_ten',0,41,58,3
	.word	20992
	.byte	24,41,104,9,4,25
	.byte	'NvM_Prv_idJob_Idle_e',0,0,25
	.byte	'NvM_Prv_idJob_Read_e',0,1,25
	.byte	'NvM_Prv_idJob_Write_e',0,2,25
	.byte	'NvM_Prv_idJob_Erase_e',0,3,25
	.byte	'NvM_Prv_idJob_Restore_e',0,4,25
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,25
	.byte	'NvM_Prv_idJob_Validate_e',0,6,25
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,25
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,25
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,25
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,25
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,25
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,25
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,23
	.byte	'NvM_Prv_idJob_ten',0,41,115,3
	.word	21233
	.byte	23
	.byte	'NvM_Prv_ServiceBit_tuo',0,41,168,1,16
	.word	234
	.byte	23
	.byte	'NvM_Prv_idService_tuo',0,41,173,1,15
	.word	316
	.byte	23
	.byte	'NvM_Prv_idQueue_tuo',0,41,206,1,15
	.word	316
	.byte	11,41,210,1,9,12,12
	.byte	'idService_uo',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'idBlock_uo',0
	.word	234
	.byte	2,2,35,2,12
	.byte	'ServiceBit_uo',0
	.word	234
	.byte	2,2,35,4,12
	.byte	'BlockData_pv',0
	.word	13353
	.byte	4,2,35,8,0,23
	.byte	'NvM_Prv_QueueEntry_tst',0,41,225,1,3
	.word	21790
	.byte	11,41,227,1,9,20,12
	.byte	'idJob_en',0
	.word	21233
	.byte	4,2,35,0,12
	.byte	'idBlock_uo',0
	.word	234
	.byte	2,2,35,4,12
	.byte	'RamBlock_pu8',0
	.word	1939
	.byte	4,2,35,8,12
	.byte	'idxDataset_u8',0
	.word	316
	.byte	1,2,35,12,12
	.byte	'Result_en',0
	.word	20834
	.byte	4,2,35,16,0,23
	.byte	'NvM_Prv_JobData_tst',0,41,240,1,3
	.word	21916
	.byte	23
	.byte	'Dem_EvtStateType',0,42,151,1,15
	.word	316
	.byte	23
	.byte	'Dem_DtcStateType',0,43,47,15
	.word	316
	.byte	23
	.byte	'Dem_EvMemOccurrenceCounterType',0,20,90,21
	.word	316
	.byte	23
	.byte	'Dem_EvMemAgingCounterType',0,20,99,21
	.word	316
	.byte	23
	.byte	'Dem_EvMemHdrType',0,20,141,1,4
	.word	6030
	.byte	23
	.byte	'Dem_EvMemEventMemoryType',0,20,213,1,4
	.word	6060
	.byte	23
	.byte	'Dem_OperationCycleList',0,44,23,15
	.word	316
	.byte	14,5
	.word	316
	.byte	15,4,0,14,10
	.word	234
	.byte	15,4,0,11,45,9,9,18,12
	.byte	'OperationCycleStates',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'OperationCycleQualified',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'Overflow',0
	.word	22269
	.byte	5,2,35,2,12
	.byte	'DtcIdsByOccurrenceTime',0
	.word	22278
	.byte	10,2,35,8,0,23
	.byte	'Dem_GenericNvDataType',0,45,24,4
	.word	22287
	.byte	23
	.byte	'Dem_NvmBlockIdType',0,46,14,34
	.word	316
	.byte	13,46,16,9,20,12
	.byte	'evMemData',0
	.word	6060
	.byte	20,2,35,0,12
	.byte	'genericNvData',0
	.word	22287
	.byte	18,2,35,0,0,23
	.byte	'Dem_NvMStorageBufferData',0,46,37,3
	.word	22463
	.byte	23
	.byte	'Dem_NvmBlockStatusType',0,46,59,15
	.word	316
	.byte	23
	.byte	'Dem_NvmResultType',0,46,78,31
	.word	316
	.byte	33
	.byte	'Dem_NvMAnyClearFailed',0,9,26,16
	.word	316
	.byte	1,1,11,10,20,9,24,12
	.byte	'activeClient',0
	.word	316
	.byte	1,2,35,0,12
	.byte	'machine_state',0
	.word	316
	.byte	1,2,35,1,12
	.byte	'IsNewClearRequest',0
	.word	316
	.byte	1,2,35,2,12
	.byte	'IsClearInterrupted',0
	.word	316
	.byte	1,2,35,3,12
	.byte	'NumberOfEventsProcessed',0
	.word	234
	.byte	2,2,35,4,12
	.byte	'DtcIt',0
	.word	20771
	.byte	4,2,35,6,12
	.byte	'EvtIt',0
	.word	5775
	.byte	4,2,35,12,12
	.byte	'EvtListIt',0
	.word	1604
	.byte	8,2,35,16,0,23
	.byte	'Dem_ClientClearMachineType',0,10,37,3
	.word	22633
	.byte	33
	.byte	'Dem_ClientClearMachine',0,10,42,35
	.word	22633
	.byte	1,1,23
	.byte	'Dem_EnCoList',0,47,31,15
	.word	316
	.byte	23
	.byte	'Dem_StoCoList',0,48,32,15
	.word	316
	.byte	7
	.word	316
	.byte	34
	.word	316
	.byte	1,1,30
	.word	22932
	.byte	0,7
	.word	22937
	.byte	23
	.byte	'Dem_EvtClearAllowedFncType',0,15,12,26
	.word	22950
	.byte	34
	.word	316
	.byte	1,1,30
	.word	316
	.byte	0,7
	.word	22990
	.byte	23
	.byte	'Dem_InitMForEAllowedFncType',0,16,38,27
	.word	23003
	.byte	10
	.word	13347
	.byte	7
	.word	23044
	.byte	34
	.word	5775
	.byte	1,1,30
	.word	234
	.byte	30
	.word	22932
	.byte	30
	.word	23049
	.byte	30
	.word	234
	.byte	0,7
	.word	23054
	.byte	23
	.byte	'Dem_DebFilter',0,49,12,23
	.word	23082
	.byte	2
	.byte	'long int',0,4,5,7
	.word	23109
	.byte	29,1,1,30
	.word	23049
	.byte	30
	.word	234
	.byte	30
	.word	23121
	.byte	30
	.word	23121
	.byte	0,7
	.word	23126
	.byte	23
	.byte	'Dem_DebGetLimits',0,49,13,23
	.word	23150
	.byte	29,1,1,30
	.word	234
	.byte	30
	.word	23049
	.byte	30
	.word	234
	.byte	0,7
	.word	23180
	.byte	23
	.byte	'Dem_DebCyclic',0,49,14,16
	.word	23199
	.byte	23
	.byte	'Dem_DebouncedActionType',0,49,35,21
	.word	5775
	.byte	13,50,37,9,4,12
	.byte	'EnforceAlignment',0
	.word	160
	.byte	4,2,35,0,12
	.byte	'Buffer',0
	.word	17053
	.byte	4,2,35,0,0,23
	.byte	'Dem_EvBuffEnvDataAlignedType',0,50,47,3
	.word	23258
	.byte	11,50,49,9,16,12
	.byte	'envData',0
	.word	23258
	.byte	4,2,35,0,12
	.byte	'eventType',0
	.word	316
	.byte	1,2,35,4,12
	.byte	'eventId',0
	.word	234
	.byte	2,2,35,6,12
	.byte	'debug0',0
	.word	160
	.byte	4,2,35,8,12
	.byte	'debug1',0
	.word	160
	.byte	4,2,35,12,0,23
	.byte	'Dem_EvBuffEvent',0,50,75,2
	.word	23343
	.byte	11,23,29,9,1,12
	.byte	'state',0
	.word	316
	.byte	1,2,35,0,0,23
	.byte	'Dem_DtcState',0,23,31,3
	.word	23458
	.byte	14,5
	.word	23458
	.byte	15,4,0,33
	.byte	'Dem_AllDTCsState',0,23,92,5
	.word	23500
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,53,0,73,19,0,0,7,15,0,73
	.byte	19,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,9,11,1,0,0,10,38,0,73,19,0,0,11,19,1,58,15,59
	.byte	15,57,15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,23,1,58,15,59,15,57,15,11,15,0,0,14,1,1,11,15,73
	.byte	19,0,0,15,33,0,47,15,0,0,16,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,17,46,1,49,19
	.byte	0,0,18,5,0,49,19,0,0,19,29,1,49,19,0,0,20,11,0,49,19,0,0,21,11,1,49,19,0,0,22,21,0,54,15,0,0,23,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,24,4,1,58,15,59,15,57,15,11,15,0,0,25,40,0,3,8,28,13,0,0,26,21,0,54,15,39
	.byte	12,0,0,27,19,1,3,8,58,15,59,15,57,15,11,15,0,0,28,59,0,3,8,0,0,29,21,1,54,15,39,12,0,0,30,5,0,73,19,0
	.byte	0,31,4,1,3,8,58,15,59,15,57,15,11,15,0,0,32,21,0,73,19,54,15,39,12,0,0,33,52,0,3,8,58,15,59,15,57,15,73
	.byte	19,63,12,60,12,0,0,34,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L81:
	.word	.L364-.L363
.L363:
	.half	3
	.word	.L366-.L365
.L365:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_DTC_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientClearMachine.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemApi.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_BitArray.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\enco\\Dem_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_ByteOrderUtils.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events_DataStructures.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\event\\Dem_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\env\\Dem_EnvTrigger.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_Deb.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemAging.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMem.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\dtc\\Dem_DTCs.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientSelectionResult.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_Client.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\dtc\\Dem_DTCGroup.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_NodeId.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\api\\Dem_Types.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientHandlingTypes.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_Events.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_DTCs.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_OperationCycle.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\main\\Dem_GenericNvData.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_EnableCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\Dem_Cfg_StorageCondition.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\deb\\Dem_DebBase.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evbuff\\Dem_EvBuffEvent.h',0,0,0,0,0
.L366:
.L364:
	.sdecl	'.debug_info',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_info'
.L82:
	.word	2084
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L78
	.byte	3
	.byte	'Dem_ClientRequestDispatcher_main',0,1,66,6,1,1,1
	.word	.L77,.L97,.L76
	.byte	4
	.word	.L77,.L97
	.byte	5
	.byte	'clientId',0,1,68,11
	.word	.L98,.L99
	.byte	5
	.byte	'tempRequest',0,1,69,27
	.word	.L100,.L101
	.byte	5
	.byte	'execute',0,1,70,13
	.word	.L98,.L102
	.byte	6
	.word	.L103,.L104,.L27
	.byte	7
	.word	.L105,.L106
	.byte	8
	.word	.L107,.L104,.L27
	.byte	0,6
	.word	.L108,.L109,.L29
	.byte	7
	.word	.L110,.L111
	.byte	8
	.word	.L112,.L109,.L29
	.byte	0,6
	.word	.L113,.L114,.L31
	.byte	7
	.word	.L115,.L116
	.byte	8
	.word	.L117,.L114,.L31
	.byte	0,6
	.word	.L118,.L119,.L120
	.byte	7
	.word	.L121,.L122
	.byte	7
	.word	.L123,.L124
	.byte	9
	.word	.L125,.L119,.L120
	.byte	5
	.byte	'tempResult',0,2,45,26
	.word	.L100,.L126
	.byte	0,0,6
	.word	.L127,.L128,.L34
	.byte	7
	.word	.L129,.L130
	.byte	8
	.word	.L131,.L128,.L34
	.byte	0,6
	.word	.L132,.L133,.L37
	.byte	7
	.word	.L134,.L135
	.byte	10
	.word	.L136,.L137
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L139
	.byte	0,0,6
	.word	.L132,.L140,.L38
	.byte	7
	.word	.L134,.L135
	.byte	9
	.word	.L136,.L140,.L38
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L141
	.byte	0,0,6
	.word	.L132,.L38,.L138
	.byte	7
	.word	.L134,.L135
	.byte	0,6
	.word	.L113,.L138,.L40
	.byte	7
	.word	.L115,.L116
	.byte	8
	.word	.L117,.L138,.L40
	.byte	0,6
	.word	.L142,.L143,.L42
	.byte	8
	.word	.L144,.L143,.L42
	.byte	0,6
	.word	.L145,.L146,.L50
	.byte	7
	.word	.L147,.L148
	.byte	7
	.word	.L149,.L150
	.byte	9
	.word	.L151,.L146,.L50
	.byte	6
	.word	.L152,.L146,.L153
	.byte	7
	.word	.L154,.L155
	.byte	9
	.word	.L156,.L146,.L153
	.byte	5
	.byte	'status',0,3,80,9
	.word	.L98,.L157
	.byte	6
	.word	.L158,.L159,.L44
	.byte	7
	.word	.L160,.L161
	.byte	8
	.word	.L162,.L159,.L44
	.byte	0,6
	.word	.L158,.L163,.L45
	.byte	7
	.word	.L160,.L161
	.byte	8
	.word	.L162,.L163,.L45
	.byte	0,6
	.word	.L164,.L165,.L47
	.byte	7
	.word	.L166,.L167
	.byte	8
	.word	.L168,.L165,.L47
	.byte	0,6
	.word	.L169,.L170,.L171
	.byte	7
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175
	.byte	7
	.word	.L176,.L177
	.byte	9
	.word	.L178,.L170,.L171
	.byte	5
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L179
	.byte	0,0,0,0,6
	.word	.L180,.L181,.L182
	.byte	7
	.word	.L183,.L184
	.byte	9
	.word	.L185,.L181,.L182
	.byte	5
	.byte	'tempresult',0,2,153,1,20
	.word	.L98,.L186
	.byte	5
	.byte	'tempSelection',0,2,154,1,29
	.word	.L187,.L188
	.byte	0,0,6
	.word	.L189,.L190,.L191
	.byte	7
	.word	.L192,.L193
	.byte	8
	.word	.L194,.L190,.L191
	.byte	0,6
	.word	.L195,.L191,.L196
	.byte	7
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L191,.L196
	.byte	0,6
	.word	.L189,.L200,.L201
	.byte	7
	.word	.L192,.L193
	.byte	8
	.word	.L194,.L200,.L201
	.byte	0,6
	.word	.L202,.L201,.L203
	.byte	8
	.word	.L204,.L201,.L203
	.byte	0,6
	.word	.L195,.L203,.L205
	.byte	7
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L203,.L205
	.byte	0,6
	.word	.L195,.L206,.L207
	.byte	7
	.word	.L197,.L198
	.byte	8
	.word	.L199,.L206,.L207
	.byte	0,0,0,6
	.word	.L142,.L41,.L58
	.byte	8
	.word	.L144,.L41,.L58
	.byte	0,6
	.word	.L169,.L208,.L39
	.byte	7
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175
	.byte	7
	.word	.L176,.L177
	.byte	9
	.word	.L178,.L208,.L39
	.byte	5
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L209
	.byte	0,0,6
	.word	.L132,.L39,.L60
	.byte	7
	.word	.L134,.L135
	.byte	10
	.word	.L136,.L210
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L212
	.byte	0,0,6
	.word	.L132,.L213,.L61
	.byte	7
	.word	.L134,.L135
	.byte	9
	.word	.L136,.L213,.L61
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L214
	.byte	0,0,6
	.word	.L132,.L61,.L211
	.byte	7
	.word	.L134,.L135
	.byte	0,6
	.word	.L215,.L211,.L62
	.byte	7
	.word	.L216,.L217
	.byte	9
	.word	.L218,.L211,.L62
	.byte	6
	.word	.L169,.L219,.L62
	.byte	7
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175
	.byte	7
	.word	.L176,.L177
	.byte	9
	.word	.L178,.L219,.L62
	.byte	5
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L220
	.byte	0,0,0,0,6
	.word	.L132,.L62,.L63
	.byte	7
	.word	.L134,.L135
	.byte	9
	.word	.L136,.L62,.L63
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L221
	.byte	0,0,6
	.word	.L132,.L222,.L223
	.byte	7
	.word	.L134,.L135
	.byte	9
	.word	.L136,.L222,.L223
	.byte	5
	.byte	'machineIndex',0,2,86,11
	.word	.L98,.L224
	.byte	0,0,6
	.word	.L225,.L223,.L28
	.byte	7
	.word	.L226,.L227
	.byte	9
	.word	.L228,.L223,.L28
	.byte	6
	.word	.L158,.L223,.L66
	.byte	7
	.word	.L160,.L161
	.byte	8
	.word	.L162,.L223,.L66
	.byte	0,6
	.word	.L158,.L229,.L67
	.byte	7
	.word	.L160,.L161
	.byte	8
	.word	.L162,.L229,.L67
	.byte	0,6
	.word	.L164,.L230,.L69
	.byte	7
	.word	.L166,.L167
	.byte	8
	.word	.L168,.L230,.L69
	.byte	0,6
	.word	.L169,.L231,.L232
	.byte	7
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175
	.byte	7
	.word	.L176,.L177
	.byte	9
	.word	.L178,.L231,.L232
	.byte	5
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L233
	.byte	0,0,6
	.word	.L169,.L234,.L28
	.byte	7
	.word	.L172,.L173
	.byte	7
	.word	.L174,.L175
	.byte	7
	.word	.L176,.L177
	.byte	9
	.word	.L178,.L234,.L28
	.byte	5
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L235
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,11,1
	.byte	49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_line'
.L84:
	.word	.L368-.L367
.L367:
	.half	3
	.word	.L370-.L369
.L369:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientClearMachine.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\lib\\Dem_Lib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\nvm\\Dem_Nvm.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientSelectionResult.h',0,0,0,0,0
.L370:
	.byte	5,19,7,0,5,2
	.word	.L77
	.byte	3,199,0,1,5,59,9
	.half	.L335-.L77
	.byte	1,5,23,9
	.half	.L26-.L335
	.byte	3,2,1,5,35,9
	.half	.L371-.L26
	.byte	1,5,34,9
	.half	.L372-.L371
	.byte	1,5,44,9
	.half	.L373-.L372
	.byte	1,4,2,5,48,9
	.half	.L104-.L373
	.byte	3,116,1,5,29,9
	.half	.L374-.L104
	.byte	1,5,28,9
	.half	.L375-.L374
	.byte	1,5,35,9
	.half	.L376-.L375
	.byte	3,127,1,5,44,9
	.half	.L377-.L376
	.byte	1,5,38,9
	.half	.L378-.L377
	.byte	3,1,1,5,46,9
	.half	.L379-.L378
	.byte	1,5,13,9
	.half	.L380-.L379
	.byte	1,5,5,9
	.half	.L381-.L380
	.byte	3,127,1,4,1,5,9,9
	.half	.L27-.L381
	.byte	3,15,1,4,2,5,22,7,9
	.half	.L109-.L27
	.byte	3,17,1,5,5,9
	.half	.L382-.L109
	.byte	1,4,1,5,17,9
	.half	.L29-.L382
	.byte	3,113,1,4,3,5,13,7,9
	.half	.L114-.L29
	.byte	3,110,1,5,35,9
	.half	.L383-.L114
	.byte	1,5,49,9
	.half	.L384-.L383
	.byte	1,5,5,9
	.half	.L385-.L384
	.byte	1,4,1,5,26,9
	.half	.L31-.L385
	.byte	3,19,1,5,74,7,9
	.half	.L386-.L31
	.byte	3,2,1,4,2,5,27,9
	.half	.L119-.L386
	.byte	3,96,1,5,16,9
	.half	.L336-.L119
	.byte	3,1,1,5,13,9
	.half	.L337-.L336
	.byte	3,1,1,4,1,5,95,9
	.half	.L120-.L337
	.byte	3,30,1,5,25,9
	.half	.L30-.L120
	.byte	3,4,1,5,68,9
	.half	.L338-.L30
	.byte	3,5,1,5,89,9
	.half	.L340-.L338
	.byte	3,2,1,4,2,5,41,9
	.half	.L128-.L340
	.byte	3,201,0,1,5,5,9
	.half	.L387-.L128
	.byte	1,4,1,5,21,9
	.half	.L34-.L387
	.byte	3,183,127,1,5,94,7,9
	.half	.L388-.L34
	.byte	3,2,1,5,33,9
	.half	.L389-.L388
	.byte	3,1,1,5,17,9
	.half	.L35-.L389
	.byte	3,3,1,4,2,5,22,7,9
	.half	.L133-.L35
	.byte	3,117,1,5,63,9
	.half	.L341-.L133
	.byte	1,5,5,9
	.half	.L390-.L341
	.byte	3,1,1,4,1,5,71,9
	.half	.L37-.L390
	.byte	3,13,1,4,2,5,63,9
	.half	.L140-.L37
	.byte	3,114,1,5,5,9
	.half	.L391-.L140
	.byte	3,1,1,4,1,5,21,9
	.half	.L38-.L391
	.byte	3,12,1,4,3,5,13,7,9
	.half	.L138-.L38
	.byte	3,88,1,5,35,9
	.half	.L392-.L138
	.byte	1,5,49,9
	.half	.L343-.L392
	.byte	1,5,5,9
	.half	.L342-.L343
	.byte	1,4,1,5,31,9
	.half	.L40-.L342
	.byte	3,43,1,4,3,5,5,7,9
	.half	.L143-.L40
	.byte	3,90,1,4,1,5,85,9
	.half	.L42-.L143
	.byte	3,39,1,5,79,7,9
	.half	.L393-.L42
	.byte	3,2,1,4,3,5,16,9
	.half	.L146-.L393
	.byte	3,102,1,4,4,5,5,9
	.half	.L159-.L146
	.byte	3,86,1,4,3,5,35,9
	.half	.L44-.L159
	.byte	3,48,1,4,4,5,5,9
	.half	.L163-.L44
	.byte	3,80,1,4,3,5,9,9
	.half	.L45-.L163
	.byte	3,47,1,5,72,7,9
	.half	.L394-.L45
	.byte	3,2,1,5,71,9
	.half	.L395-.L394
	.byte	1,5,81,9
	.half	.L396-.L395
	.byte	1,4,2,5,32,9
	.half	.L165-.L396
	.byte	3,211,0,1,5,13,9
	.half	.L397-.L165
	.byte	1,5,5,9
	.half	.L398-.L397
	.byte	1,4,3,5,21,9
	.half	.L47-.L398
	.byte	3,174,127,1,5,92,7,9
	.half	.L399-.L47
	.byte	3,2,1,5,62,9
	.half	.L400-.L399
	.byte	1,5,102,9
	.half	.L401-.L400
	.byte	1,4,2,5,27,9
	.half	.L170-.L401
	.byte	3,71,1,5,16,9
	.half	.L345-.L170
	.byte	3,1,1,5,13,9
	.half	.L344-.L345
	.byte	3,1,1,4,3,5,16,9
	.half	.L171-.L344
	.byte	3,56,1,5,1,9
	.half	.L46-.L171
	.byte	3,3,1,9
	.half	.L49-.L46
	.byte	3,5,1,5,5,7,9
	.half	.L153-.L49
	.byte	3,2,1,5,81,7,9
	.half	.L402-.L153
	.byte	3,2,1,5,90,9
	.half	.L346-.L402
	.byte	1,4,2,5,31,9
	.half	.L181-.L346
	.byte	3,50,1,5,22,9
	.half	.L348-.L181
	.byte	3,5,1,5,33,9
	.half	.L403-.L348
	.byte	1,5,44,9
	.half	.L350-.L403
	.byte	3,1,1,5,19,9
	.half	.L349-.L350
	.byte	1,5,16,9
	.half	.L404-.L349
	.byte	3,1,1,4,3,5,55,9
	.half	.L182-.L404
	.byte	3,72,1,5,41,9
	.half	.L190-.L182
	.byte	3,79,1,5,42,9
	.half	.L191-.L190
	.byte	3,15,1,5,90,9
	.half	.L196-.L191
	.byte	3,33,1,5,10,9
	.half	.L51-.L196
	.byte	3,4,1,5,52,7,9
	.half	.L405-.L51
	.byte	3,2,1,5,50,9
	.half	.L406-.L405
	.byte	1,5,41,9
	.half	.L200-.L406
	.byte	3,74,1,4,5,5,5,9
	.half	.L201-.L200
	.byte	3,213,0,1,5,29,9
	.half	.L407-.L201
	.byte	1,5,27,9
	.half	.L408-.L407
	.byte	1,4,3,5,42,9
	.half	.L203-.L408
	.byte	3,186,127,1,5,56,9
	.half	.L205-.L203
	.byte	3,39,1,5,10,9
	.half	.L53-.L205
	.byte	3,5,1,5,42,7,9
	.half	.L206-.L53
	.byte	3,84,1,5,54,9
	.half	.L207-.L206
	.byte	3,46,1,4,1,5,112,9
	.half	.L50-.L207
	.byte	3,118,1,4,3,5,5,9
	.half	.L41-.L50
	.byte	3,87,1,4,1,5,29,9
	.half	.L58-.L41
	.byte	3,45,1,5,86,7,9
	.half	.L409-.L58
	.byte	3,2,1,5,95,9
	.half	.L352-.L409
	.byte	1,5,33,9
	.half	.L410-.L352
	.byte	3,1,1,4,2,5,27,9
	.half	.L208-.L410
	.byte	3,176,127,1,5,16,9
	.half	.L353-.L208
	.byte	3,1,1,5,13,9
	.half	.L411-.L353
	.byte	3,1,1,5,22,9
	.half	.L39-.L411
	.byte	3,52,1,5,63,9
	.half	.L354-.L39
	.byte	1,5,5,9
	.half	.L412-.L354
	.byte	3,1,1,4,1,5,71,9
	.half	.L60-.L412
	.byte	3,30,1,4,2,5,63,9
	.half	.L213-.L60
	.byte	3,97,1,5,5,9
	.half	.L413-.L213
	.byte	3,1,1,4,1,5,21,9
	.half	.L61-.L413
	.byte	3,29,1,4,6,5,79,7,9
	.half	.L211-.L61
	.byte	3,153,127,1,5,78,9
	.half	.L355-.L211
	.byte	1,5,88,9
	.half	.L414-.L355
	.byte	1,5,58,9
	.half	.L415-.L414
	.byte	1,5,98,9
	.half	.L416-.L415
	.byte	1,4,2,5,27,9
	.half	.L219-.L416
	.byte	3,19,1,5,16,9
	.half	.L357-.L219
	.byte	3,1,1,5,13,9
	.half	.L356-.L357
	.byte	3,1,1,5,22,9
	.half	.L62-.L356
	.byte	3,52,1,5,63,9
	.half	.L358-.L62
	.byte	1,5,5,9
	.half	.L417-.L358
	.byte	3,1,1,4,1,5,71,9
	.half	.L63-.L417
	.byte	3,35,1,4,2,5,63,9
	.half	.L222-.L63
	.byte	3,92,1,5,5,9
	.half	.L418-.L222
	.byte	3,1,1,4,1,5,21,9
	.half	.L64-.L418
	.byte	3,34,1,4,4,5,5,7,9
	.half	.L223-.L64
	.byte	3,172,127,1,4,6,5,83,9
	.half	.L66-.L223
	.byte	3,109,1,4,4,5,5,9
	.half	.L229-.L66
	.byte	3,19,1,4,6,5,11,9
	.half	.L67-.L229
	.byte	3,109,1,5,70,7,9
	.half	.L419-.L67
	.byte	3,1,1,5,69,9
	.half	.L420-.L419
	.byte	1,5,79,9
	.half	.L421-.L420
	.byte	1,4,2,5,32,9
	.half	.L230-.L421
	.byte	3,150,1,1,5,13,9
	.half	.L422-.L230
	.byte	1,5,5,9
	.half	.L423-.L422
	.byte	1,4,6,5,91,9
	.half	.L69-.L423
	.byte	3,234,126,1,5,94,7,9
	.half	.L424-.L69
	.byte	3,2,1,5,64,9
	.half	.L425-.L424
	.byte	1,5,104,9
	.half	.L426-.L425
	.byte	1,4,2,5,27,9
	.half	.L231-.L426
	.byte	3,11,1,5,16,9
	.half	.L427-.L231
	.byte	3,1,1,5,13,9
	.half	.L428-.L427
	.byte	3,1,1,4,6,5,94,9
	.half	.L232-.L428
	.byte	3,115,1,5,70,9
	.half	.L68-.L232
	.byte	3,126,1,5,69,9
	.half	.L429-.L68
	.byte	1,5,94,9
	.half	.L430-.L429
	.byte	3,5,1,5,64,9
	.half	.L431-.L430
	.byte	1,5,104,9
	.half	.L432-.L431
	.byte	1,4,2,5,27,9
	.half	.L234-.L432
	.byte	3,8,1,5,16,9
	.half	.L361-.L234
	.byte	3,1,1,5,13,9
	.half	.L360-.L361
	.byte	3,1,1,4,1,5,69,9
	.half	.L28-.L360
	.byte	3,37,1,5,59,9
	.half	.L25-.L28
	.byte	1,5,1,7,9
	.half	.L433-.L25
	.byte	3,59,1,7,9
	.half	.L86-.L433
	.byte	0,1,1
.L368:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L77,0,.L86-.L77,0,0
.L137:
	.word	-1,.L77,.L133-.L77,.L37-.L77,.L38-.L77,.L138-.L77,0,0
.L210:
	.word	-1,.L77,.L39-.L77,.L60-.L77,.L61-.L77,.L211-.L77,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_info'
.L87:
	.word	409
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L78
	.byte	3
	.byte	'Dem_ClientRequestDispatcher_transferSelectionErrorToResult',0,1,14,13,1,1
	.word	.L73,.L236,.L72
	.byte	4
	.byte	'ClientId',0,1,14,89
	.word	.L98,.L237
	.byte	4
	.byte	'request',0,1,14,121
	.word	.L100,.L238
	.byte	5
	.word	.L73,.L236
	.byte	6
	.word	.L127,.L239,.L2
	.byte	7
	.word	.L129,.L240
	.byte	8
	.word	.L131,.L239,.L2
	.byte	0,6
	.word	.L169,.L241,.L242
	.byte	7
	.word	.L172,.L243
	.byte	7
	.word	.L174,.L244
	.byte	7
	.word	.L176,.L245
	.byte	9
	.word	.L178,.L241,.L242
	.byte	10
	.byte	'tempResult',0,2,29,26
	.word	.L100,.L246
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49,16,17
	.byte	1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,52,0,3,8,58,15
	.byte	59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_line'
.L89:
	.word	.L435-.L434
.L434:
	.half	3
	.word	.L437-.L436
.L436:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0,0
.L437:
	.byte	5,68,7,0,5,2
	.word	.L73
	.byte	3,16,1,5,56,9
	.half	.L305-.L73
	.byte	1,5,67,9
	.half	.L438-.L305
	.byte	1,5,77,9
	.half	.L439-.L438
	.byte	1,4,2,5,41,9
	.half	.L239-.L439
	.byte	3,148,1,1,5,5,9
	.half	.L440-.L239
	.byte	1,4,1,5,58,9
	.half	.L2-.L440
	.byte	3,235,126,1,4,2,5,29,9
	.half	.L241-.L2
	.byte	3,17,1,5,27,9
	.half	.L307-.L241
	.byte	1,5,16,9
	.half	.L306-.L307
	.byte	3,1,1,5,13,9
	.half	.L441-.L306
	.byte	3,1,1,4,1,5,1,9
	.half	.L242-.L441
	.byte	3,111,1,7,9
	.half	.L91-.L242
	.byte	0,1,1
.L435:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L73,0,.L91-.L73,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_info'
.L92:
	.word	744
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L78
	.byte	3
	.byte	'Dem_ClientRequestDispatcher_calculateSelection',0,1,20,13,1,1
	.word	.L75,.L247,.L74
	.byte	4
	.byte	'ClientId',0,1,20,78
	.word	.L98,.L248
	.byte	5
	.word	.L75,.L247
	.byte	6
	.word	.L249,.L250,.L3
	.byte	7
	.word	.L251,.L252
	.byte	8
	.word	.L253,.L250,.L3
	.byte	9
	.byte	'tempSelectionResult',0,2,145,1,11
	.word	.L98,.L254
	.byte	0,0,5
	.word	.L255,.L4
	.byte	9
	.byte	'dtcId',0,1,24,23
	.word	.L100,.L256
	.byte	9
	.byte	'typeOfSelection',0,1,25,15
	.word	.L98,.L257
	.byte	9
	.byte	'selectionResult',0,1,26,24
	.word	.L98,.L258
	.byte	6
	.word	.L259,.L260,.L6
	.byte	7
	.word	.L261,.L262
	.byte	10
	.word	.L263,.L260,.L6
	.byte	0,6
	.word	.L264,.L265,.L266
	.byte	7
	.word	.L267,.L268
	.byte	8
	.word	.L269,.L265,.L266
	.byte	6
	.word	.L270,.L271,.L272
	.byte	7
	.word	.L273,.L274
	.byte	10
	.word	.L275,.L271,.L272
	.byte	0,6
	.word	.L276,.L272,.L16
	.byte	7
	.word	.L277,.L278
	.byte	8
	.word	.L279,.L272,.L16
	.byte	6
	.word	.L280,.L281,.L18
	.byte	7
	.word	.L282,.L283
	.byte	7
	.word	.L284,.L285
	.byte	8
	.word	.L286,.L281,.L18
	.byte	6
	.word	.L287,.L281,.L17
	.byte	7
	.word	.L288,.L289
	.byte	7
	.word	.L290,.L291
	.byte	10
	.word	.L292,.L281,.L17
	.byte	0,0,0,0,0,0,0,6
	.word	.L293,.L294,.L4
	.byte	7
	.word	.L295,.L296
	.byte	7
	.word	.L297,.L298
	.byte	7
	.word	.L299,.L300
	.byte	7
	.word	.L301,.L302
	.byte	8
	.word	.L303,.L294,.L4
	.byte	9
	.byte	'tempSelection',0,2,111,29
	.word	.L187,.L304
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49,16,17
	.byte	1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,10
	.byte	11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_line'
.L94:
	.word	.L443-.L442
.L442:
	.half	3
	.word	.L445-.L444
.L444:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientRequestDispatcher.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Dem\\src\\client\\Dem_ClientBaseHandling.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\evmem\\Dem_EvMemApi.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\dtc\\Dem_DTCs.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Dem\\src\\map\\Dem_Mapping.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0,0
.L445:
	.byte	5,13,7,0,5,2
	.word	.L75
	.byte	3,19,1,5,73,9
	.half	.L309-.L75
	.byte	3,2,1,5,82,9
	.half	.L308-.L309
	.byte	1,4,2,5,46,9
	.half	.L250-.L308
	.byte	3,252,0,1,5,33,9
	.half	.L310-.L250
	.byte	3,2,1,5,5,9
	.half	.L311-.L310
	.byte	1,4,1,9
	.half	.L3-.L311
	.byte	3,130,127,1,5,29,7,9
	.half	.L255-.L3
	.byte	3,2,1,5,31,9
	.half	.L312-.L255
	.byte	3,1,1,5,62,9
	.half	.L314-.L312
	.byte	3,3,1,5,71,9
	.half	.L316-.L314
	.byte	1,4,3,5,8,9
	.half	.L260-.L316
	.byte	3,27,1,5,5,9
	.half	.L446-.L260
	.byte	1,5,22,7,9
	.half	.L447-.L446
	.byte	3,2,1,5,20,9
	.half	.L448-.L447
	.byte	1,5,17,9
	.half	.L5-.L448
	.byte	3,3,1,5,28,9
	.half	.L449-.L5
	.byte	1,5,5,9
	.half	.L450-.L449
	.byte	3,127,1,4,1,5,14,9
	.half	.L6-.L450
	.byte	3,97,1,5,29,7,9
	.half	.L451-.L6
	.byte	3,2,1,5,50,9
	.half	.L317-.L451
	.byte	1,5,38,9
	.half	.L7-.L317
	.byte	3,4,1,5,47,9
	.half	.L319-.L7
	.byte	1,5,56,9
	.half	.L452-.L319
	.byte	1,5,13,9
	.half	.L453-.L452
	.byte	1,5,33,7,9
	.half	.L454-.L453
	.byte	3,2,1,9
	.half	.L455-.L454
	.byte	3,1,1,5,69,9
	.half	.L320-.L455
	.byte	3,127,1,5,77,9
	.half	.L9-.L320
	.byte	3,5,1,5,86,9
	.half	.L322-.L9
	.byte	1,5,23,9
	.half	.L313-.L322
	.byte	1,5,17,9
	.half	.L324-.L313
	.byte	3,1,1,5,37,7,9
	.half	.L456-.L324
	.byte	3,2,1,9
	.half	.L457-.L456
	.byte	3,1,1,5,74,9
	.half	.L326-.L457
	.byte	3,127,1,5,71,9
	.half	.L11-.L326
	.byte	3,5,1,5,80,9
	.half	.L323-.L11
	.byte	1,5,27,9
	.half	.L325-.L323
	.byte	1,4,4,5,13,9
	.half	.L265-.L325
	.byte	3,220,0,1,4,5,5,21,9
	.half	.L271-.L265
	.byte	3,13,1,5,12,9
	.half	.L458-.L271
	.byte	1,5,28,7,9
	.half	.L459-.L458
	.byte	1,5,21,9
	.half	.L460-.L459
	.byte	1,5,4,9
	.half	.L13-.L460
	.byte	1,4,4,5,13,9
	.half	.L15-.L13
	.byte	3,114,1,5,35,7,9
	.half	.L272-.L15
	.byte	3,109,1,5,51,9
	.half	.L461-.L272
	.byte	1,5,58,9
	.half	.L462-.L461
	.byte	1,5,66,9
	.half	.L463-.L462
	.byte	1,4,6,5,28,9
	.half	.L281-.L463
	.byte	3,69,1,5,47,9
	.half	.L464-.L281
	.byte	1,5,5,9
	.half	.L465-.L464
	.byte	1,5,73,9
	.half	.L17-.L465
	.byte	3,4,1,5,5,9
	.half	.L466-.L17
	.byte	1,4,4,9
	.half	.L18-.L466
	.byte	3,55,1,5,13,9
	.half	.L19-.L18
	.byte	3,20,1,5,5,9
	.half	.L16-.L19
	.byte	3,127,1,4,1,5,27,9
	.half	.L21-.L16
	.byte	3,166,127,1,5,79,7,9
	.half	.L266-.L21
	.byte	1,5,88,9
	.half	.L328-.L266
	.byte	1,5,100,9
	.half	.L467-.L328
	.byte	1,5,41,7,9
	.half	.L22-.L467
	.byte	3,2,1,5,56,9
	.half	.L331-.L22
	.byte	1,5,41,9
	.half	.L23-.L331
	.byte	3,4,1,9
	.half	.L468-.L23
	.byte	3,1,1,5,68,9
	.half	.L8-.L468
	.byte	3,5,1,5,77,9
	.half	.L333-.L8
	.byte	1,4,2,5,67,9
	.half	.L294-.L333
	.byte	3,53,1,5,38,9
	.half	.L469-.L294
	.byte	1,5,148,1,9
	.half	.L329-.L469
	.byte	1,5,119,9
	.half	.L334-.L329
	.byte	1,5,16,9
	.half	.L470-.L334
	.byte	3,1,1,4,1,5,1,9
	.half	.L4-.L470
	.byte	3,76,1,7,9
	.half	.L96-.L4
	.byte	0,1,1
.L443:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L75,0,.L96-.L75,0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_loc'
.L248:
	.word	-1,.L75,0,.L308-.L75
	.half	1
	.byte	84
	.word	.L309-.L75,.L247-.L75
	.half	1
	.byte	88
	.word	.L315-.L75,.L316-.L75
	.half	1
	.byte	84
	.word	.L318-.L75,.L319-.L75
	.half	1
	.byte	84
	.word	.L321-.L75,.L322-.L75
	.half	1
	.byte	84
	.word	.L327-.L75,.L323-.L75
	.half	1
	.byte	84
	.word	.L330-.L75,.L328-.L75
	.half	1
	.byte	84
	.word	.L332-.L75,.L333-.L75
	.half	1
	.byte	84
	.word	0,0
.L262:
	.word	0,0
.L74:
	.word	-1,.L75,0,.L247-.L75
	.half	2
	.byte	138,0
	.word	0,0
.L291:
	.word	0,0
.L285:
	.word	0,0
.L268:
	.word	0,0
.L256:
	.word	-1,.L75,.L312-.L75,.L313-.L75
	.half	1
	.byte	90
	.word	.L313-.L75,.L323-.L75
	.half	1
	.byte	82
	.word	.L324-.L75,.L325-.L75
	.half	1
	.byte	90
	.word	.L325-.L75,.L328-.L75
	.half	1
	.byte	82
	.word	.L265-.L75,.L329-.L75
	.half	1
	.byte	90
	.word	0,0
.L298:
	.word	0,0
.L278:
	.word	0,0
.L274:
	.word	0,0
.L296:
	.word	0,0
.L252:
	.word	0,0
.L258:
	.word	-1,.L75,.L317-.L75,.L7-.L75
	.half	1
	.byte	89
	.word	.L320-.L75,.L9-.L75
	.half	1
	.byte	89
	.word	.L326-.L75,.L11-.L75
	.half	1
	.byte	89
	.word	.L331-.L75,.L23-.L75
	.half	1
	.byte	89
	.word	.L8-.L75,.L4-.L75
	.half	1
	.byte	89
	.word	0,0
.L302:
	.word	0,0
.L304:
	.word	-1,.L75,.L334-.L75,.L4-.L75
	.half	1
	.byte	90
	.word	0,0
.L254:
	.word	-1,.L75,.L310-.L75,.L311-.L75
	.half	1
	.byte	95
	.word	0,0
.L257:
	.word	-1,.L75,.L314-.L75,.L4-.L75
	.half	1
	.byte	91
	.word	0,0
.L300:
	.word	0,0
.L289:
	.word	0,0
.L283:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_loc'
.L193:
	.word	0,0
.L116:
	.word	0,0
.L155:
	.word	0,0
.L148:
	.word	0,0
.L76:
	.word	-1,.L77,0,.L97-.L77
	.half	2
	.byte	138,0
	.word	0,0
.L217:
	.word	0,0
.L227:
	.word	0,0
.L106:
	.word	0,0
.L99:
	.word	-1,.L77,.L335-.L77,.L97-.L77
	.half	1
	.byte	89
	.word	.L339-.L77,.L340-.L77
	.half	1
	.byte	84
	.word	.L347-.L77,.L346-.L77
	.half	1
	.byte	84
	.word	.L351-.L77,.L352-.L77
	.half	1
	.byte	84
	.word	0,0
.L102:
	.word	-1,.L77,.L338-.L77,.L146-.L77
	.half	1
	.byte	91
	.word	.L41-.L77,.L39-.L77
	.half	1
	.byte	91
	.word	0,0
.L141:
	.word	-1,.L77,.L140-.L77,.L343-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L212:
	.word	-1,.L77,.L354-.L77,.L355-.L77
	.half	1
	.byte	95
	.word	0,0
.L139:
	.word	-1,.L77,.L341-.L77,.L342-.L77
	.half	1
	.byte	95
	.word	0,0
.L214:
	.word	-1,.L77,.L213-.L77,.L219-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L224:
	.word	-1,.L77,.L222-.L77,.L359-.L77
	.half	1
	.byte	95
	.word	0,0
.L221:
	.word	-1,.L77,.L358-.L77,.L229-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L177:
	.word	0,0
.L161:
	.word	0,0
.L175:
	.word	0,0
.L124:
	.word	0,0
.L135:
	.word	0,0
.L111:
	.word	0,0
.L173:
	.word	0,0
.L122:
	.word	0,0
.L184:
	.word	0,0
.L130:
	.word	0,0
.L167:
	.word	0,0
.L198:
	.word	0,0
.L150:
	.word	0,0
.L157:
	.word	-1,.L77,.L159-.L77,.L170-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	.L46-.L77,.L346-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	.L51-.L77,.L50-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L101:
	.word	-1,.L77,.L104-.L77,.L336-.L77
	.half	1
	.byte	88
	.word	.L30-.L77,.L28-.L77
	.half	1
	.byte	88
	.word	0,0
.L179:
	.word	-1,.L77,.L170-.L77,.L344-.L77
	.half	1
	.byte	95
	.word	.L345-.L77,.L46-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L233:
	.word	-1,.L77,.L231-.L77,.L68-.L77
	.half	1
	.byte	90
	.word	0,0
.L209:
	.word	-1,.L77,.L353-.L77,.L39-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L235:
	.word	-1,.L77,.L234-.L77,.L360-.L77
	.half	1
	.byte	95
	.word	.L361-.L77,.L28-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L220:
	.word	-1,.L77,.L219-.L77,.L356-.L77
	.half	1
	.byte	95
	.word	.L357-.L77,.L62-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L126:
	.word	-1,.L77,.L119-.L77,.L337-.L77
	.half	1
	.byte	88
	.word	.L337-.L77,.L30-.L77
	.half	1
	.byte	95
	.word	0,0
.L188:
	.word	-1,.L77,.L350-.L77,.L51-.L77
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L186:
	.word	-1,.L77,.L348-.L77,.L349-.L77
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_loc'
.L237:
	.word	-1,.L73,0,.L305-.L73
	.half	1
	.byte	84
	.word	0,0
.L72:
	.word	-1,.L73,0,.L236-.L73
	.half	2
	.byte	138,0
	.word	0,0
.L245:
	.word	0,0
.L238:
	.word	-1,.L73,0,.L306-.L73
	.half	1
	.byte	85
	.word	0,0
.L244:
	.word	0,0
.L243:
	.word	0,0
.L240:
	.word	0,0
.L246:
	.word	-1,.L73,.L307-.L73,.L236-.L73
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L471:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Dem_ClientRequestDispatcher_transferSelectionErrorToResult')
	.sect	'.debug_frame'
	.word	24
	.word	.L471,.L73,.L236-.L73
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_ClientRequestDispatcher_calculateSelection')
	.sect	'.debug_frame'
	.word	12
	.word	.L471,.L75,.L247-.L75
	.sdecl	'.debug_frame',debug,cluster('Dem_ClientRequestDispatcher_main')
	.sect	'.debug_frame'
	.word	12
	.word	.L471,.L77,.L97-.L77

; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   132  
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   133  #define DEM_STOP_SEC_ROM_CODE
; BSW\src\BSW\Gen\Dem\src\client\Dem_ClientRequestDispatcher.c	   134  #include "Dem_Cfg_MemMap.h"

	; Module end
