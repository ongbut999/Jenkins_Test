	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14216a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Bfx\\Bfx_Bit.src BSW\\src\\BSW\\Gen\\Bfx\\src\\Bfx_Bit.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Bfx\\src\\Bfx_Bit.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	929
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Bfx\\src\\Bfx_Bit.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned short int',0,2,7,3
	.byte	'Bfx_Prv_GetBit_u16u8_u8_Inl',0,3,1,207,2,22
	.word	133
	.byte	1,1,4
	.byte	'Data',0,1,207,2,57
	.word	150
	.byte	4
	.byte	'BitPn',0,1,207,2,69
	.word	133
	.byte	5,0,2
	.byte	'unsigned int',0,4,7,3
	.byte	'Bfx_Prv_GetBit_u32u8_u8_Inl',0,3,1,227,2,22
	.word	133
	.byte	1,1,4
	.byte	'Data',0,1,227,2,57
	.word	243
	.byte	4
	.byte	'BitPn',0,1,227,2,69
	.word	133
	.byte	5,0,3
	.byte	'Bfx_Prv_GetBit_u8u8_u8_Inl',0,3,1,247,2,22
	.word	133
	.byte	1,1,4
	.byte	'Data',0,1,247,2,55
	.word	133
	.byte	4
	.byte	'BitPn',0,1,247,2,67
	.word	133
	.byte	5,0,6
	.word	150
	.byte	7
	.byte	'Bfx_Prv_PutBit_u16u8u8_Inl',0,3,1,200,3,19,1,1,4
	.byte	'Data',0,1,200,3,54
	.word	400
	.byte	4
	.byte	'BitPn',0,1,200,3,66
	.word	133
	.byte	4
	.byte	'Value',0,1,200,3,81
	.word	133
	.byte	5,0,6
	.word	243
	.byte	7
	.byte	'Bfx_Prv_PutBit_u32u8u8_Inl',0,3,1,224,3,19,1,1,4
	.byte	'Data',0,1,224,3,54
	.word	486
	.byte	4
	.byte	'BitPn',0,1,224,3,66
	.word	133
	.byte	4
	.byte	'Value',0,1,224,3,81
	.word	133
	.byte	5,0,6
	.word	133
	.byte	7
	.byte	'Bfx_Prv_PutBit_u8u8u8_Inl',0,3,1,248,3,19,1,1,4
	.byte	'Data',0,1,248,3,52
	.word	572
	.byte	4
	.byte	'BitPn',0,1,248,3,64
	.word	133
	.byte	4
	.byte	'Value',0,1,248,3,79
	.word	133
	.byte	5,0,3
	.byte	'Bfx_Prv_TstParityEven_u32_u8_Inl',0,3,1,143,10,22
	.word	133
	.byte	1,1,4
	.byte	'Data',0,1,143,10,62
	.word	243
	.byte	5,0,8
	.word	172
	.byte	9
	.word	212
	.byte	9
	.word	226
	.byte	5,0,8
	.word	259
	.byte	9
	.word	299
	.byte	9
	.word	313
	.byte	5,0,8
	.word	330
	.byte	9
	.word	369
	.byte	9
	.word	383
	.byte	5,0,8
	.word	405
	.byte	9
	.word	440
	.byte	9
	.word	454
	.byte	9
	.word	469
	.byte	5,0,8
	.word	491
	.byte	9
	.word	526
	.byte	9
	.word	540
	.byte	9
	.word	555
	.byte	5,0,8
	.word	577
	.byte	9
	.word	611
	.byte	9
	.word	625
	.byte	9
	.word	640
	.byte	5,0,8
	.word	657
	.byte	9
	.word	702
	.byte	5,0,10,1,6
	.word	847
	.byte	11
	.byte	'__codeptr',0,2,1,1
	.word	849
	.byte	11
	.byte	'uint8',0,3,81,25
	.word	133
	.byte	11
	.byte	'uint16',0,3,91,25
	.word	150
	.byte	11
	.byte	'uint32',0,3,106,24
	.word	243
	.byte	11
	.byte	'boolean',0,3,127,25
	.word	133
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,46,1,3
	.byte	8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,8,46,1,49,19,0,0,9,5,0,49,19,0,0,10,21,0,54,15,0,0,11,22,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Bfx\\api\\Bfx_Bit_Inl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Bfx\\src\\Bfx_Bit.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0,0
.L9:
.L7:

; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     1  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     2  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     3  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     4  /*
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     6   * Includes
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     7   **********************************************************************************************************************
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     8   */
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	     9  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    10  #define SRVLIBS
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    11  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    12  #include "Bfx.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    13  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    14  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    15  /*
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    16   **********************************************************************************************************************
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    17   * Implementation
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    18   **********************************************************************************************************************
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    19   */
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    20  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    21  /*** BFX_CFG_CLRBIT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    22  #if (BFX_CFG_CLRBIT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    23      #if (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    24          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    25      #elif (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    26          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    27      #elif (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    28          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    29      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    30          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    31      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    32      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    33  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    34      void Bfx_ClrBit_u16u8(uint16* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    35      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    36          Bfx_Prv_ClrBit_u16u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    37      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    38  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    39      #if (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    40          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    41      #elif (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    42          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    43      #elif (BFX_CFG_CLRBIT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    44          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    45      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    46          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    47      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    48      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    49  /*** BFX_CFG_CLRBIT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    50  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    51  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    52  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    53  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    54  /*** BFX_CFG_CLRBIT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    55  #if (BFX_CFG_CLRBIT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    56      #if (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    57          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    58      #elif (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    59          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    60      #elif (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    61          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    62      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    63          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    64      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    65      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    66  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    67      void Bfx_ClrBit_u32u8(uint32* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    68      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    69          Bfx_Prv_ClrBit_u32u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    70      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    71  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    72      #if (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    73          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    74      #elif (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    75          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    76      #elif (BFX_CFG_CLRBIT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    77          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    78      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    79          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    80      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    81      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    82  /*** BFX_CFG_CLRBIT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    83  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    84  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    85  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    86  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    87  /*** BFX_CFG_CLRBIT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    88  #if (BFX_CFG_CLRBIT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    89      #if (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    90          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    91      #elif (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    92          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    93      #elif (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    94          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    95      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    96          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    97      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    98      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	    99  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   100      void Bfx_ClrBit_u8u8(uint8* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   101      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   102          Bfx_Prv_ClrBit_u8u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   103      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   104  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   105      #if (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   106          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   107      #elif (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   108          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   109      #elif (BFX_CFG_CLRBIT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   110          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   111      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   112          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   113      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   114      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   115  /*** BFX_CFG_CLRBIT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   116  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   117  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   118  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   119  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   120  /*** BFX_CFG_CLRBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   121  #if (BFX_CFG_CLRBITMASK_U16U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   122      #if (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   123          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   124      #elif (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   125          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   126      #elif (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   127          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   128      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   129          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   130      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   131      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   132  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   133      void Bfx_ClrBitMask_u16u16(uint16* Data, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   134      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   135          Bfx_Prv_ClrBitMask_u16u16_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   136      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   137  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   138      #if (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   139          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   140      #elif (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   141          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   142      #elif (BFX_CFG_CLRBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   143          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   144      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   145          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   146      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   147      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   148  /*** BFX_CFG_CLRBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   149  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   150  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   151  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   152  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   153  /*** BFX_CFG_CLRBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   154  #if (BFX_CFG_CLRBITMASK_U32U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   155      #if (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   156          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   157      #elif (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   158          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   159      #elif (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   160          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   161      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   162          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   163      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   164      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   165  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   166      void Bfx_ClrBitMask_u32u32(uint32* Data, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   167      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   168          Bfx_Prv_ClrBitMask_u32u32_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   169      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   170  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   171      #if (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   172          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   173      #elif (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   174          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   175      #elif (BFX_CFG_CLRBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   176          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   177      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   178          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   179      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   180      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   181  /*** BFX_CFG_CLRBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   182  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   183  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   184  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   185  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   186  /*** BFX_CFG_CLRBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   187  #if (BFX_CFG_CLRBITMASK_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   188      #if (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   189          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   190      #elif (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   191          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   192      #elif (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   193          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   194      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   195          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   196      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   197      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   198  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   199      void Bfx_ClrBitMask_u8u8(uint8* Data, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   200      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   201          Bfx_Prv_ClrBitMask_u8u8_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   202      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   203  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   204      #if (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   205          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   206      #elif (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   207          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   208      #elif (BFX_CFG_CLRBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   209          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   210      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   211          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   212      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   213      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   214  /*** BFX_CFG_CLRBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   215  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   216  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   217  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   218  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   219  /*** BFX_CFG_COPYBIT_U16U8U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   220  #if (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   221      #if (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   222          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   223      #elif (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   224          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   225      #elif (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   226          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   227      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   228          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   229      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   230      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   231  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   232      void Bfx_CopyBit_u16u8u16u8(uint16* DestData, uint8 DestPn, uint16 SrcData, uint8 SrcPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   233      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   234          Bfx_Prv_CopyBit_u16u8u16u8_Inl(DestData, DestPn, SrcData, SrcPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   235      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   236  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   237      #if (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   238          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   239      #elif (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   240          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   241      #elif (BFX_CFG_COPYBIT_U16U8U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   242          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   243      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   244          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   245      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   246      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   247  /*** BFX_CFG_COPYBIT_U16U8U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   248  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   249  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   250  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   251  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   252  /*** BFX_CFG_COPYBIT_U32U8U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   253  #if (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   254      #if (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   255          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   256      #elif (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   257          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   258      #elif (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   259          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   260      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   261          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   262      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   263      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   264  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   265      void Bfx_CopyBit_u32u8u32u8(uint32* DestData, uint8 DestPn, uint32 SrcData, uint8 SrcPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   266      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   267          Bfx_Prv_CopyBit_u32u8u32u8_Inl(DestData, DestPn, SrcData, SrcPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   268      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   269  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   270      #if (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   271          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   272      #elif (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   273          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   274      #elif (BFX_CFG_COPYBIT_U32U8U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   275          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   276      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   277          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   278      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   279      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   280  /*** BFX_CFG_COPYBIT_U32U8U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   281  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   282  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   283  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   284  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   285  /*** BFX_CFG_COPYBIT_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   286  #if (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   287      #if (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   288          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   289      #elif (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   290          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   291      #elif (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   292          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   293      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   294          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   295      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   296      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   297  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   298      void Bfx_CopyBit_u8u8u8u8(uint8* DestData, uint8 DestPn, uint8 SrcData, uint8 SrcPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   299      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   300          Bfx_Prv_CopyBit_u8u8u8u8_Inl(DestData, DestPn, SrcData, SrcPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   301      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   302  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   303      #if (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   304          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   305      #elif (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   306          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   307      #elif (BFX_CFG_COPYBIT_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   308          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   309      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   310          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   311      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   312      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   313  /*** BFX_CFG_COPYBIT_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   314  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   315  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   316  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   317  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   318  /*** BFX_CFG_GETBIT_U16U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   319  #if (BFX_CFG_GETBIT_U16U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   320      #if (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   321          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   322      #elif (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   323          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   324      #elif (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   325          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   326      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   327          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   328      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   329      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   330  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   331      boolean Bfx_GetBit_u16u8_u8(uint16 Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   332      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   333          return (Bfx_Prv_GetBit_u16u8_u8_Inl(Data, BitPn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   334      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   335  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   336      #if (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   337          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   338      #elif (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   339          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   340      #elif (BFX_CFG_GETBIT_U16U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   341          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   342      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   343          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   344      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   345      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   346  /*** BFX_CFG_GETBIT_U16U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   347  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   348  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   349  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   350  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   351  /*** BFX_CFG_GETBIT_U32U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   352  #if (BFX_CFG_GETBIT_U32U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   353      #if (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   354          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   355      #elif (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   356          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   357      #elif (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   358          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   359      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   360          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   361      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   362      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   363  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   364      boolean Bfx_GetBit_u32u8_u8(uint32 Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   365      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   366          return (Bfx_Prv_GetBit_u32u8_u8_Inl(Data, BitPn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   367      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   368  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   369      #if (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   370          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   371      #elif (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   372          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   373      #elif (BFX_CFG_GETBIT_U32U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   374          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   375      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   376          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   377      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   378      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   379  /*** BFX_CFG_GETBIT_U32U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   380  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   381  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   382  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   383  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   384  /*** BFX_CFG_GETBIT_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   385  #if (BFX_CFG_GETBIT_U8U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   386      #if (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   387          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   388      #elif (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   389          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   390      #elif (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   391          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   392      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   393          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   394      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   395      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   396  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   397      boolean Bfx_GetBit_u8u8_u8(uint8 Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   398      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   399          return (Bfx_Prv_GetBit_u8u8_u8_Inl(Data, BitPn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   400      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   401  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   402      #if (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   403          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   404      #elif (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   405          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   406      #elif (BFX_CFG_GETBIT_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   407          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   408      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   409          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   410      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   411      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   412  /*** BFX_CFG_GETBIT_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   413  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   414  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   415  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   416  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   417  /*** BFX_CFG_GETBITS_U16U8U8_U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   418  #if (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   419      #if (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   420          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   421      #elif (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   422          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   423      #elif (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   424          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   425      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   426          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   427      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   428      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   429  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   430      uint16 Bfx_GetBits_u16u8u8_u16(uint16 Data, uint8 BitStartPn, uint8 BitLn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   431      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   432          return (Bfx_Prv_GetBits_u16u8u8_u16_Inl(Data, BitStartPn, BitLn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   433      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   434  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   435      #if (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   436          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   437      #elif (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   438          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   439      #elif (BFX_CFG_GETBITS_U16U8U8_U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   440          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   441      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   442          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   443      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   444      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   445  /*** BFX_CFG_GETBITS_U16U8U8_U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   446  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   447  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   448  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   449  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   450  /*** BFX_CFG_GETBITS_U32U8U8_U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   451  #if (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   452      #if (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   453          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   454      #elif (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   455          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   456      #elif (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   457          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   458      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   459          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   460      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   461      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   462  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   463      uint32 Bfx_GetBits_u32u8u8_u32(uint32 Data, uint8 BitStartPn, uint8 BitLn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   464      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   465          return (Bfx_Prv_GetBits_u32u8u8_u32_Inl(Data, BitStartPn, BitLn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   466      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   467  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   468      #if (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   469          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   470      #elif (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   471          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   472      #elif (BFX_CFG_GETBITS_U32U8U8_U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   473          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   474      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   475          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   476      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   477      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   478  /*** BFX_CFG_GETBITS_U32U8U8_U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   479  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   480  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   481  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   482  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   483  /*** BFX_CFG_GETBITS_U8U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   484  #if (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   485      #if (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   486          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   487      #elif (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   488          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   489      #elif (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   490          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   491      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   492          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   493      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   494      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   495  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   496      uint8 Bfx_GetBits_u8u8u8_u8(uint8 Data, uint8 BitStartPn, uint8 BitLn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   497      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   498          return (Bfx_Prv_GetBits_u8u8u8_u8_Inl(Data, BitStartPn, BitLn));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   499      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   500  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   501      #if (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   502          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   503      #elif (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   504          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   505      #elif (BFX_CFG_GETBITS_U8U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   506          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   507      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   508          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   509      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   510      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   511  /*** BFX_CFG_GETBITS_U8U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   512  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   513  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   514  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   515  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   516  /*** BFX_CFG_PUTBIT_U16U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   517  #if (BFX_CFG_PUTBIT_U16U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   518      #if (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   519          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   520      #elif (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   521          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   522      #elif (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   523          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   524      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   525          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   526      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   527      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   528  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   529      void Bfx_PutBit_u16u8u8(uint16* Data, uint8 BitPn, boolean Value)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   530      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   531          Bfx_Prv_PutBit_u16u8u8_Inl(Data, BitPn, Value);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   532      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   533  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   534      #if (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   535          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   536      #elif (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   537          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   538      #elif (BFX_CFG_PUTBIT_U16U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   539          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   540      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   541          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   542      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   543      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   544  /*** BFX_CFG_PUTBIT_U16U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   545  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   546  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   547  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   548  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   549  /*** BFX_CFG_PUTBIT_U32U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   550  #if (BFX_CFG_PUTBIT_U32U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   551      #if (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   552          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   553      #elif (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   554          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   555      #elif (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   556          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   557      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   558          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   559      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   560      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   561  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   562      void Bfx_PutBit_u32u8u8(uint32* Data, uint8 BitPn, boolean Value)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   563      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   564          Bfx_Prv_PutBit_u32u8u8_Inl(Data, BitPn, Value);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   565      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   566  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   567      #if (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   568          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   569      #elif (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   570          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   571      #elif (BFX_CFG_PUTBIT_U32U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   572          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   573      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   574          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   575      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   576      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   577  /*** BFX_CFG_PUTBIT_U32U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   578  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   579  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   580  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   581  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   582  /*** BFX_CFG_PUTBIT_U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   583  #if (BFX_CFG_PUTBIT_U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   584      #if (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   585          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   586      #elif (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   587          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   588      #elif (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   589          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   590      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   591          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   592      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   593      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   594  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   595      void Bfx_PutBit_u8u8u8(uint8* Data, uint8 BitPn, boolean Value)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   596      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   597          Bfx_Prv_PutBit_u8u8u8_Inl(Data, BitPn, Value);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   598      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   599  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   600      #if (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   601          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   602      #elif (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   603          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   604      #elif (BFX_CFG_PUTBIT_U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   605          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   606      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   607          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   608      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   609      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   610  /*** BFX_CFG_PUTBIT_U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   611  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   612  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   613  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   614  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   615  /*** BFX_CFG_PUTBITS_U16U8U8U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   616  #if (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   617      #if (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   618          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   619      #elif (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   620          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   621      #elif (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   622          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   623      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   624          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   625      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   626      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   627  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   628      void Bfx_PutBits_u16u8u8u16(uint16* Data, uint8 BitStartPn, uint8 BitLn, uint16 Pattern)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   629      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   630          Bfx_Prv_PutBits_u16u8u8u16_Inl(Data, BitStartPn, BitLn, Pattern);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   631      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   632  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   633      #if (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   634          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   635      #elif (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   636          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   637      #elif (BFX_CFG_PUTBITS_U16U8U8U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   638          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   639      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   640          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   641      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   642      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   643  /*** BFX_CFG_PUTBITS_U16U8U8U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   644  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   645  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   646  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   647  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   648  /*** BFX_CFG_PUTBITS_U32U8U8U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   649  #if (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   650      #if (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   651          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   652      #elif (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   653          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   654      #elif (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   655          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   656      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   657          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   658      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   659      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   660  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   661      void Bfx_PutBits_u32u8u8u32(uint32* Data, uint8 BitStartPn, uint8 BitLn, uint32 Pattern)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   662      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   663          Bfx_Prv_PutBits_u32u8u8u32_Inl(Data, BitStartPn, BitLn, Pattern);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   664      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   665  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   666      #if (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   667          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   668      #elif (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   669          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   670      #elif (BFX_CFG_PUTBITS_U32U8U8U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   671          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   672      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   673          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   674      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   675      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   676  /*** BFX_CFG_PUTBITS_U32U8U8U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   677  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   678  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   679  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   680  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   681  /*** BFX_CFG_PUTBITS_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   682  #if (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   683      #if (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   684          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   685      #elif (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   686          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   687      #elif (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   688          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   689      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   690          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   691      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   692      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   693  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   694      void Bfx_PutBits_u8u8u8u8(uint8* Data, uint8 BitStartPn, uint8 BitLn, uint8 Pattern)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   695      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   696          Bfx_Prv_PutBits_u8u8u8u8_Inl(Data, BitStartPn, BitLn, Pattern);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   697      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   698  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   699      #if (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   700          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   701      #elif (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   702          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   703      #elif (BFX_CFG_PUTBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   704          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   705      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   706          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   707      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   708      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   709  /*** BFX_CFG_PUTBITS_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   710  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   711  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   712  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   713  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   714  /*** BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   715  #if (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   716      #if (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   717          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   718      #elif (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   719          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   720      #elif (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   721          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   722      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   723          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   724      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   725      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   726  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   727      void Bfx_PutBitsMask_u16u16u16(uint16* Data, uint16 Pattern, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   728      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   729          Bfx_Prv_PutBitsMask_u16u16u16_Inl(Data, Pattern, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   730      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   731  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   732      #if (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   733          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   734      #elif (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   735          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   736      #elif (BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   737          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   738      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   739          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   740      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   741      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   742  /*** BFX_CFG_PUTBITSMASK_U16U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   743  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   744  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   745  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   746  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   747  /*** BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   748  #if (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   749      #if (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   750          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   751      #elif (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   752          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   753      #elif (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   754          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   755      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   756          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   757      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   758      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   759  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   760      void Bfx_PutBitsMask_u32u32u32(uint32* Data, uint32 Pattern, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   761      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   762          Bfx_Prv_PutBitsMask_u32u32u32_Inl(Data, Pattern, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   763      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   764  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   765      #if (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   766          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   767      #elif (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   768          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   769      #elif (BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   770          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   771      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   772          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   773      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   774      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   775  /*** BFX_CFG_PUTBITSMASK_U32U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   776  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   777  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   778  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   779  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   780  /*** BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   781  #if (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   782      #if (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   783          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   784      #elif (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   785          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   786      #elif (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   787          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   788      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   789          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   790      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   791      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   792  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   793      void Bfx_PutBitsMask_u8u8u8(uint8* Data, uint8 Pattern, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   794      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   795          Bfx_Prv_PutBitsMask_u8u8u8_Inl(Data, Pattern, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   796      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   797  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   798      #if (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   799          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   800      #elif (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   801          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   802      #elif (BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   803          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   804      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   805          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   806      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   807      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   808  /*** BFX_CFG_PUTBITSMASK_U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   809  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   810  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   811  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   812  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   813  /*** BFX_CFG_ROTBITLT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   814  #if (BFX_CFG_ROTBITLT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   815      #if (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   816          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   817      #elif (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   818          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   819      #elif (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   820          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   821      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   822          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   823      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   824      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   825  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   826      void Bfx_RotBitLt_u16u8(uint16* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   827      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   828          Bfx_Prv_RotBitLt_u16u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   829      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   830  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   831      #if (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   832          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   833      #elif (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   834          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   835      #elif (BFX_CFG_ROTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   836          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   837      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   838          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   839      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   840      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   841  /*** BFX_CFG_ROTBITLT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   842  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   843  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   844  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   845  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   846  /*** BFX_CFG_ROTBITLT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   847  #if (BFX_CFG_ROTBITLT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   848      #if (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   849          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   850      #elif (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   851          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   852      #elif (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   853          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   854      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   855          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   856      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   857      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   858  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   859      void Bfx_RotBitLt_u32u8(uint32* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   860      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   861          Bfx_Prv_RotBitLt_u32u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   862      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   863  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   864      #if (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   865          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   866      #elif (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   867          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   868      #elif (BFX_CFG_ROTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   869          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   870      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   871          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   872      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   873      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   874  /*** BFX_CFG_ROTBITLT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   875  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   876  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   877  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   878  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   879  /*** BFX_CFG_ROTBITLT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   880  #if (BFX_CFG_ROTBITLT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   881      #if (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   882          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   883      #elif (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   884          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   885      #elif (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   886          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   887      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   888          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   889      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   890      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   891  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   892      void Bfx_RotBitLt_u8u8(uint8* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   893      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   894          Bfx_Prv_RotBitLt_u8u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   895      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   896  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   897      #if (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   898          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   899      #elif (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   900          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   901      #elif (BFX_CFG_ROTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   902          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   903      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   904          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   905      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   906      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   907  /*** BFX_CFG_ROTBITLT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   908  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   909  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   910  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   911  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   912  /*** BFX_CFG_ROTBITRT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   913  #if (BFX_CFG_ROTBITRT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   914      #if (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   915          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   916      #elif (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   917          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   918      #elif (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   919          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   920      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   921          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   922      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   923      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   924  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   925      void Bfx_RotBitRt_u16u8(uint16* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   926      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   927          Bfx_Prv_RotBitRt_u16u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   928      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   929  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   930      #if (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   931          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   932      #elif (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   933          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   934      #elif (BFX_CFG_ROTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   935          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   936      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   937          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   938      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   939      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   940  /*** BFX_CFG_ROTBITRT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   941  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   942  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   943  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   944  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   945  /*** BFX_CFG_ROTBITRT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   946  #if (BFX_CFG_ROTBITRT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   947      #if (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   948          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   949      #elif (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   950          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   951      #elif (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   952          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   953      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   954          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   955      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   956      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   957  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   958      void Bfx_RotBitRt_u32u8(uint32* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   959      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   960          Bfx_Prv_RotBitRt_u32u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   961      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   962  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   963      #if (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   964          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   965      #elif (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   966          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   967      #elif (BFX_CFG_ROTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   968          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   969      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   970          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   971      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   972      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   973  /*** BFX_CFG_ROTBITRT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   974  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   975  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   976  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   977  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   978  /*** BFX_CFG_ROTBITRT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   979  #if (BFX_CFG_ROTBITRT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   980      #if (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   981          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   982      #elif (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   983          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   984      #elif (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   985          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   986      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   987          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   988      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   989      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   990  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   991      void Bfx_RotBitRt_u8u8(uint8* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   992      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   993          Bfx_Prv_RotBitRt_u8u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   994      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   995  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   996      #if (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   997          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   998      #elif (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	   999          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1000      #elif (BFX_CFG_ROTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1001          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1002      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1003          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1004      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1005      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1006  /*** BFX_CFG_ROTBITRT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1007  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1008  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1009  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1010  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1011  /*** BFX_CFG_SETBIT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1012  #if (BFX_CFG_SETBIT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1013      #if (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1014          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1015      #elif (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1016          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1017      #elif (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1018          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1019      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1020          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1021      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1022      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1023  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1024      void Bfx_SetBit_u16u8(uint16* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1025      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1026          Bfx_Prv_SetBit_u16u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1027      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1028  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1029      #if (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1030          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1031      #elif (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1032          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1033      #elif (BFX_CFG_SETBIT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1034          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1035      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1036          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1037      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1038      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1039  /*** BFX_CFG_SETBIT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1040  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1041  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1042  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1043  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1044  /*** BFX_CFG_SETBIT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1045  #if (BFX_CFG_SETBIT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1046      #if (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1047          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1048      #elif (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1049          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1050      #elif (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1051          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1052      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1053          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1054      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1055      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1056  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1057      void Bfx_SetBit_u32u8(uint32* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1058      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1059          Bfx_Prv_SetBit_u32u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1060      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1061  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1062      #if (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1063          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1064      #elif (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1065          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1066      #elif (BFX_CFG_SETBIT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1067          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1068      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1069          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1070      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1071      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1072  /*** BFX_CFG_SETBIT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1073  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1074  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1075  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1076  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1077  /*** BFX_CFG_SETBIT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1078  #if (BFX_CFG_SETBIT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1079      #if (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1080          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1081      #elif (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1082          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1083      #elif (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1084          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1085      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1086          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1087      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1088      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1089  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1090      void Bfx_SetBit_u8u8(uint8* Data, uint8 BitPn)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1091      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1092          Bfx_Prv_SetBit_u8u8_Inl(Data, BitPn);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1093      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1094  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1095      #if (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1096          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1097      #elif (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1098          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1099      #elif (BFX_CFG_SETBIT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1100          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1101      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1102          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1103      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1104      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1105  /*** BFX_CFG_SETBIT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1106  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1107  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1108  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1109  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1110  /*** BFX_CFG_SETBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1111  #if (BFX_CFG_SETBITMASK_U16U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1112      #if (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1113          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1114      #elif (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1115          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1116      #elif (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1117          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1118      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1119          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1120      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1121      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1122  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1123      void Bfx_SetBitMask_u16u16(uint16* Data, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1124      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1125          Bfx_Prv_SetBitMask_u16u16_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1126      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1127  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1128      #if (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1129          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1130      #elif (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1131          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1132      #elif (BFX_CFG_SETBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1133          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1134      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1135          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1136      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1137      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1138  /*** BFX_CFG_SETBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1139  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1140  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1141  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1142  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1143  /*** BFX_CFG_SETBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1144  #if (BFX_CFG_SETBITMASK_U32U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1145      #if (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1146          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1147      #elif (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1148          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1149      #elif (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1150          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1151      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1152          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1153      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1154      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1155  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1156      void Bfx_SetBitMask_u32u32(uint32* Data, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1157      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1158          Bfx_Prv_SetBitMask_u32u32_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1159      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1160  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1161      #if (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1162          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1163      #elif (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1164          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1165      #elif (BFX_CFG_SETBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1166          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1167      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1168          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1169      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1170      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1171  /*** BFX_CFG_SETBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1172  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1173  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1174  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1175  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1176  /*** BFX_CFG_SETBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1177  #if (BFX_CFG_SETBITMASK_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1178      #if (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1179          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1180      #elif (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1181          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1182      #elif (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1183          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1184      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1185          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1186      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1187      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1188  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1189      void Bfx_SetBitMask_u8u8(uint8* Data, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1190      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1191          Bfx_Prv_SetBitMask_u8u8_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1192      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1193  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1194      #if (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1195          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1196      #elif (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1197          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1198      #elif (BFX_CFG_SETBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1199          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1200      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1201          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1202      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1203      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1204  /*** BFX_CFG_SETBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1205  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1206  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1207  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1208  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1209  /*** BFX_CFG_SETBITS_U16U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1210  #if (BFX_CFG_SETBITS_U16U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1211      #if (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1212          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1213      #elif (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1214          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1215      #elif (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1216          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1217      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1218          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1219      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1220      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1221  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1222      void Bfx_SetBits_u16u8u8u8(uint16* Data, uint8 BitStartPn, uint8 BitLn, uint8 Status)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1223      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1224          Bfx_Prv_SetBits_u16u8u8u8_Inl(Data, BitStartPn, BitLn, Status);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1225      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1226  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1227      #if (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1228          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1229      #elif (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1230          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1231      #elif (BFX_CFG_SETBITS_U16U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1232          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1233      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1234          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1235      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1236      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1237  /*** BFX_CFG_SETBITS_U16U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1238  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1239  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1240  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1241  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1242  /*** BFX_CFG_SETBITS_U32U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1243  #if (BFX_CFG_SETBITS_U32U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1244      #if (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1245          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1246      #elif (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1247          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1248      #elif (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1249          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1250      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1251          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1252      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1253      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1254  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1255      void Bfx_SetBits_u32u8u8u8(uint32* Data, uint8 BitStartPn, uint8 BitLn, uint8 Status)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1256      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1257          Bfx_Prv_SetBits_u32u8u8u8_Inl(Data, BitStartPn, BitLn, Status);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1258      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1259  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1260      #if (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1261          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1262      #elif (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1263          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1264      #elif (BFX_CFG_SETBITS_U32U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1265          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1266      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1267          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1268      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1269      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1270  /*** BFX_CFG_SETBITS_U32U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1271  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1272  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1273  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1274  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1275  /*** BFX_CFG_SETBITS_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1276  #if (BFX_CFG_SETBITS_U8U8U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1277      #if (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1278          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1279      #elif (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1280          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1281      #elif (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1282          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1283      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1284          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1285      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1286      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1287  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1288      void Bfx_SetBits_u8u8u8u8(uint8* Data, uint8 BitStartPn, uint8 BitLn, uint8 Status)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1289      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1290          Bfx_Prv_SetBits_u8u8u8u8_Inl(Data, BitStartPn, BitLn, Status);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1291      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1292  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1293      #if (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1294          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1295      #elif (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1296          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1297      #elif (BFX_CFG_SETBITS_U8U8U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1298          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1299      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1300          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1301      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1302      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1303  /*** BFX_CFG_SETBITS_U8U8U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1304  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1305  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1306  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1307  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1308  /*** BFX_CFG_SHIFTBITLT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1309  #if (BFX_CFG_SHIFTBITLT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1310      #if (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1311          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1312      #elif (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1313          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1314      #elif (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1315          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1316      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1317          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1318      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1319      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1320  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1321      void Bfx_ShiftBitLt_u16u8(uint16* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1322      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1323          Bfx_Prv_ShiftBitLt_u16u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1324      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1325  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1326      #if (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1327          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1328      #elif (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1329          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1330      #elif (BFX_CFG_SHIFTBITLT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1331          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1332      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1333          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1334      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1335      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1336  /*** BFX_CFG_SHIFTBITLT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1337  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1338  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1339  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1340  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1341  /*** BFX_CFG_SHIFTBITLT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1342  #if (BFX_CFG_SHIFTBITLT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1343      #if (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1344          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1345      #elif (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1346          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1347      #elif (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1348          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1349      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1350          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1351      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1352      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1353  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1354      void Bfx_ShiftBitLt_u32u8(uint32* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1355      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1356          Bfx_Prv_ShiftBitLt_u32u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1357      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1358  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1359      #if (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1360          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1361      #elif (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1362          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1363      #elif (BFX_CFG_SHIFTBITLT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1364          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1365      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1366          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1367      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1368      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1369  /*** BFX_CFG_SHIFTBITLT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1370  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1371  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1372  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1373  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1374  /*** BFX_CFG_SHIFTBITLT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1375  #if (BFX_CFG_SHIFTBITLT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1376      #if (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1377          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1378      #elif (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1379          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1380      #elif (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1381          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1382      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1383          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1384      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1385      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1386  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1387      void Bfx_ShiftBitLt_u8u8(uint8* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1388      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1389          Bfx_Prv_ShiftBitLt_u8u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1390      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1391  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1392      #if (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1393          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1394      #elif (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1395          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1396      #elif (BFX_CFG_SHIFTBITLT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1397          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1398      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1399          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1400      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1401      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1402  /*** BFX_CFG_SHIFTBITLT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1403  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1404  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1405  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1406  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1407  /*** BFX_CFG_SHIFTBITRT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1408  #if (BFX_CFG_SHIFTBITRT_U16U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1409      #if (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1410          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1411      #elif (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1412          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1413      #elif (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1414          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1415      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1416          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1417      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1418      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1419  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1420      void Bfx_ShiftBitRt_u16u8(uint16* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1421      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1422          Bfx_Prv_ShiftBitRt_u16u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1423      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1424  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1425      #if (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1426          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1427      #elif (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1428          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1429      #elif (BFX_CFG_SHIFTBITRT_U16U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1430          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1431      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1432          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1433      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1434      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1435  /*** BFX_CFG_SHIFTBITRT_U16U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1436  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1437  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1438  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1439  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1440  /*** BFX_CFG_SHIFTBITRT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1441  #if (BFX_CFG_SHIFTBITRT_U32U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1442      #if (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1443          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1444      #elif (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1445          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1446      #elif (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1447          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1448      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1449          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1450      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1451      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1452  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1453      void Bfx_ShiftBitRt_u32u8(uint32* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1454      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1455          Bfx_Prv_ShiftBitRt_u32u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1456      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1457  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1458      #if (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1459          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1460      #elif (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1461          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1462      #elif (BFX_CFG_SHIFTBITRT_U32U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1463          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1464      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1465          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1466      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1467      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1468  /*** BFX_CFG_SHIFTBITRT_U32U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1469  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1470  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1471  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1472  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1473  /*** BFX_CFG_SHIFTBITRT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1474  #if (BFX_CFG_SHIFTBITRT_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1475      #if (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1476          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1477      #elif (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1478          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1479      #elif (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1480          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1481      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1482          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1483      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1484      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1485  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1486      void Bfx_ShiftBitRt_u8u8(uint8* Data, uint8 ShiftCnt)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1487      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1488          Bfx_Prv_ShiftBitRt_u8u8_Inl(Data, ShiftCnt);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1489      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1490  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1491      #if (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1492          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1493      #elif (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1494          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1495      #elif (BFX_CFG_SHIFTBITRT_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1496          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1497      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1498          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1499      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1500      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1501  /*** BFX_CFG_SHIFTBITRT_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1502  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1503  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1504  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1505  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1506  /*** BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1507  #if (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1508      #if (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1509          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1510      #elif (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1511          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1512      #elif (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1513          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1514      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1515          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1516      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1517      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1518  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1519      void Bfx_ToggleBitMask_u16u16(uint16* Data, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1520      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1521          Bfx_Prv_ToggleBitMask_u16u16_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1522      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1523  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1524      #if (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1525          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1526      #elif (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1527          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1528      #elif (BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1529          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1530      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1531          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1532      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1533      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1534  /*** BFX_CFG_TOGGLEBITMASK_U16U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1535  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1536  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1537  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1538  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1539  /*** BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1540  #if (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1541      #if (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1542          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1543      #elif (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1544          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1545      #elif (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1546          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1547      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1548          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1549      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1550      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1551  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1552      void Bfx_ToggleBitMask_u32u32(uint32* Data, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1553      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1554          Bfx_Prv_ToggleBitMask_u32u32_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1555      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1556  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1557      #if (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1558          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1559      #elif (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1560          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1561      #elif (BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1562          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1563      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1564          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1565      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1566      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1567  /*** BFX_CFG_TOGGLEBITMASK_U32U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1568  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1569  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1570  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1571  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1572  /*** BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1573  #if (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1574      #if (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1575          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1576      #elif (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1577          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1578      #elif (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1579          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1580      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1581          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1582      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1583      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1584  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1585      void Bfx_ToggleBitMask_u8u8(uint8* Data, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1586      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1587          Bfx_Prv_ToggleBitMask_u8u8_Inl(Data, Mask);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1588      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1589  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1590      #if (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1591          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1592      #elif (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1593          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1594      #elif (BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1595          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1596      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1597          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1598      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1599      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1600  /*** BFX_CFG_TOGGLEBITMASK_U8U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1601  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1602  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1603  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1604  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1605  /*** BFX_CFG_TOGGLEBITS_U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1606  #if (BFX_CFG_TOGGLEBITS_U16_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1607      #if (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1608          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1609      #elif (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1610          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1611      #elif (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1612          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1613      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1614          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1615      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1616      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1617  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1618      void Bfx_ToggleBits_u16(uint16* Data)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1619      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1620          Bfx_Prv_ToggleBits_u16_Inl(Data);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1621      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1622  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1623      #if (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1624          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1625      #elif (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1626          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1627      #elif (BFX_CFG_TOGGLEBITS_U16_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1628          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1629      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1630          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1631      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1632      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1633  /*** BFX_CFG_TOGGLEBITS_U16_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1634  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1635  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1636  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1637  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1638  /*** BFX_CFG_TOGGLEBITS_U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1639  #if (BFX_CFG_TOGGLEBITS_U32_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1640      #if (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1641          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1642      #elif (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1643          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1644      #elif (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1645          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1646      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1647          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1648      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1649      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1650  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1651      void Bfx_ToggleBits_u32(uint32* Data)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1652      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1653          Bfx_Prv_ToggleBits_u32_Inl(Data);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1654      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1655  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1656      #if (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1657          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1658      #elif (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1659          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1660      #elif (BFX_CFG_TOGGLEBITS_U32_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1661          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1662      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1663          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1664      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1665      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1666  /*** BFX_CFG_TOGGLEBITS_U32_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1667  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1668  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1669  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1670  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1671  /*** BFX_CFG_TOGGLEBITS_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1672  #if (BFX_CFG_TOGGLEBITS_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1673      #if (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1674          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1675      #elif (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1676          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1677      #elif (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1678          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1679      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1680          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1681      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1682      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1683  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1684      void Bfx_ToggleBits_u8(uint8* Data)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1685      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1686          Bfx_Prv_ToggleBits_u8_Inl(Data);
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1687      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1688  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1689      #if (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1690          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1691      #elif (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1692          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1693      #elif (BFX_CFG_TOGGLEBITS_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1694          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1695      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1696          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1697      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1698      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1699  /*** BFX_CFG_TOGGLEBITS_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1700  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1701  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1702  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1703  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1704  /*** BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1705  #if (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1706      #if (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1707          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1708      #elif (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1709          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1710      #elif (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1711          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1712      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1713          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1714      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1715      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1716  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1717      boolean Bfx_TstBitLnMask_u16u16_u8(uint16 Data, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1718      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1719          return (Bfx_Prv_TstBitLnMask_u16u16_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1720      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1721  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1722      #if (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1723          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1724      #elif (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1725          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1726      #elif (BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1727          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1728      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1729          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1730      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1731      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1732  /*** BFX_CFG_TSTBITLNMASK_U16U16_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1733  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1734  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1735  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1736  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1737  /*** BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1738  #if (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1739      #if (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1740          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1741      #elif (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1742          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1743      #elif (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1744          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1745      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1746          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1747      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1748      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1749  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1750      boolean Bfx_TstBitLnMask_u32u32_u8(uint32 Data, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1751      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1752          return (Bfx_Prv_TstBitLnMask_u32u32_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1753      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1754  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1755      #if (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1756          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1757      #elif (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1758          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1759      #elif (BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1760          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1761      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1762          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1763      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1764      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1765  /*** BFX_CFG_TSTBITLNMASK_U32U32_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1766  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1767  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1768  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1769  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1770  /*** BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1771  #if (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1772      #if (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1773          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1774      #elif (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1775          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1776      #elif (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1777          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1778      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1779          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1780      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1781      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1782  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1783      boolean Bfx_TstBitLnMask_u8u8_u8(uint8 Data, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1784      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1785          return (Bfx_Prv_TstBitLnMask_u8u8_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1786      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1787  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1788      #if (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1789          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1790      #elif (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1791          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1792      #elif (BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1793          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1794      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1795          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1796      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1797      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1798  /*** BFX_CFG_TSTBITLNMASK_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1799  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1800  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1801  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1802  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1803  /*** BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1804  #if (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1805      #if (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1806          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1807      #elif (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1808          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1809      #elif (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1810          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1811      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1812          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1813      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1814      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1815  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1816      boolean Bfx_TstBitMask_u16u16_u8(uint16 Data, uint16 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1817      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1818          return (Bfx_Prv_TstBitMask_u16u16_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1819      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1820  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1821      #if (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1822          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1823      #elif (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1824          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1825      #elif (BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1826          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1827      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1828          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1829      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1830      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1831  /*** BFX_CFG_TSTBITMASK_U16U16_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1832  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1833  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1834  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1835  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1836  /*** BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1837  #if (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1838      #if (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1839          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1840      #elif (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1841          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1842      #elif (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1843          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1844      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1845          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1846      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1847      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1848  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1849      boolean Bfx_TstBitMask_u32u32_u8(uint32 Data, uint32 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1850      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1851          return (Bfx_Prv_TstBitMask_u32u32_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1852      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1853  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1854      #if (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1855          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1856      #elif (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1857          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1858      #elif (BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1859          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1860      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1861          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1862      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1863      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1864  /*** BFX_CFG_TSTBITMASK_U32U32_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1865  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1866  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1867  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1868  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1869  /*** BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1870  #if (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION != BFX_CFG_LOCATION_INLINE)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1871      #if (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1872          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1873      #elif (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1874          #define BFX_START_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1875      #elif (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1876          #define BFX_START_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1877      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1878          #define BFX_START_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1879      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1880      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1881  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1882      boolean Bfx_TstBitMask_u8u8_u8(uint8 Data, uint8 Mask)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1883      {
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1884          return (Bfx_Prv_TstBitMask_u8u8_u8_Inl(Data, Mask));
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1885      }
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1886  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1887      #if (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_NORMAL)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1888          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1889      #elif (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_SLOW)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1890          #define BFX_STOP_SEC_CODE_SLOW
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1891      #elif (BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION == BFX_CFG_LOCATION_FAST)
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1892          #define BFX_STOP_SEC_CODE_FAST
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1893      #else
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1894          #define BFX_STOP_SEC_CODE
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1895      #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1896      #include "Bfx_MemMap.h"
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1897  /*** BFX_CFG_TSTBITMASK_U8U8_U8_LOCATION ***/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1898  #endif
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1899  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1900  /*********************************************************************************************************************/
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1901  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1902  
; BSW\src\BSW\Gen\Bfx\src\Bfx_Bit.c	  1903  

	; Module end
