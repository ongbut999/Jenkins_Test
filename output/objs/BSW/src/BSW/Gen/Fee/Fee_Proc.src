	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc13496a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Fee\\Fee_Proc.src BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Proc.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Proc.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	9181
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Proc.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	134
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	136
	.byte	5
	.byte	'char',0,1,6,4
	.byte	'sint8',0,2,76,25
	.word	159
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	181
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	212
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	249
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'uint64',0,2,111,30
	.word	280
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	181
	.byte	4
	.byte	'StatusType',0,3,191,1,27
	.word	181
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	181
	.byte	6,3,206,1,9,8,7
	.byte	'vendorID',0
	.word	212
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	212
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	181
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	181
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	181
	.byte	1,2,35,6,0,4
	.byte	'Std_VersionInfoType',0,3,213,1,3
	.word	381
	.byte	6,4,93,9,8,7
	.byte	'Class',0
	.word	181
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	181
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	249
	.byte	4,2,35,4,0,4
	.byte	'OsTrapInfoType',0,4,97,3
	.word	531
	.byte	8,68
	.word	249
	.byte	9,16,0,6,4,154,1,9,68,7
	.byte	'store',0
	.word	611
	.byte	68,2,35,0,0,8,68
	.word	620
	.byte	9,0,0,4
	.byte	'Os_JumpBufType',0,4,156,1,3
	.word	642
	.byte	4
	.byte	'Os_StackTraceType',0,4,174,1,18
	.word	249
	.byte	6,4,175,1,9,8,7
	.byte	'sp',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	249
	.byte	4,2,35,4,0,4
	.byte	'Os_StackValueType',0,4,175,1,63
	.word	702
	.byte	4
	.byte	'Os_StackSizeType',0,4,176,1,27
	.word	702
	.byte	10,1,1,3
	.word	787
	.byte	4
	.byte	'Os_VoidVoidFunctionType',0,4,179,1,16
	.word	790
	.byte	4
	.byte	'ApplicationType',0,4,193,1,23
	.word	181
	.byte	11
	.byte	'Os_ApplicationConfigurationType_s',0,4,198,1,16,2,7
	.byte	'app_id',0
	.word	181
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,1,0,4
	.byte	'Os_ApplicationConfigurationType',0,4,201,1,3
	.word	853
	.byte	4
	.byte	'Os_CoreStateType',0,4,203,1,16
	.word	249
	.byte	4
	.byte	'AreaIdType',0,4,204,1,16
	.word	212
	.byte	4
	.byte	'Os_PeripheralAddressType',0,4,212,1,22
	.word	249
	.byte	4
	.byte	'TickType',0,4,221,1,22
	.word	249
	.byte	4
	.byte	'Os_StopwatchTickType',0,4,225,1,22
	.word	249
	.byte	3
	.word	249
	.byte	4
	.byte	'Os_Lockable',0,4,234,1,18
	.word	1095
	.byte	4
	.byte	'CoreIdType',0,4,236,1,16
	.word	212
	.byte	4
	.byte	'SpinlockIdType',0,4,237,1,16
	.word	212
	.byte	12,4,239,1,9,4,13
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,13
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,4
	.byte	'TryToGetSpinlockType',0,4,239,1,74
	.word	1165
	.byte	12,4,174,2,9,4,13
	.byte	'APPLICATION_ACCESSIBLE',0,0,13
	.byte	'APPLICATION_RESTARTING',0,1,13
	.byte	'APPLICATION_TERMINATED',0,2,0,4
	.byte	'ApplicationStateType',0,4,174,2,92
	.word	1258
	.byte	14
	.byte	'void',0,3
	.word	1370
	.byte	15,1,1,16
	.word	181
	.byte	16
	.word	1376
	.byte	0,3
	.word	1381
	.byte	4
	.byte	'Os_FunctionEntryType',0,4,183,2,16
	.word	1395
	.byte	11
	.byte	'Os_MeterInfoType_s',0,4,193,2,16,48,7
	.byte	'elapsed',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	249
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	249
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	702
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	702
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	702
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	702
	.byte	8,2,35,40,0,4
	.byte	'Os_MeterInfoType',0,4,202,2,3
	.word	1430
	.byte	3
	.word	1430
	.byte	4
	.byte	'Os_MeterInfoRefType',0,4,203,2,50
	.word	1628
	.byte	4
	.byte	'EventMaskType',0,4,206,2,15
	.word	181
	.byte	4
	.byte	'Os_imaskType',0,4,211,2,16
	.word	249
	.byte	11
	.byte	'Os_ISRDynType_s',0,4,213,2,16,48,7
	.byte	'meter',0
	.word	1430
	.byte	48,2,35,0,0,4
	.byte	'Os_ISRDynType',0,4,215,2,3
	.word	1707
	.byte	3
	.word	1707
	.byte	17
	.word	1768
	.byte	11
	.byte	'Os_ISRType_s',0,4,216,2,16,24,7
	.byte	'entry_function',0
	.word	795
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	1773
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	249
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	702
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	181
	.byte	1,2,35,21,0,4
	.byte	'Os_ISRType',0,4,223,2,3
	.word	1778
	.byte	3
	.word	787
	.byte	17
	.word	1778
	.byte	3
	.word	1937
	.byte	4
	.byte	'ISRType',0,4,224,2,46
	.word	1942
	.byte	4
	.byte	'Os_bitmask',0,4,239,2,22
	.word	249
	.byte	4
	.byte	'Os_pset0Type',0,4,240,2,20
	.word	249
	.byte	4
	.byte	'Os_pset1Type',0,4,241,2,20
	.word	249
	.byte	4
	.byte	'Os_pset2Type',0,4,242,2,20
	.word	249
	.byte	18,4,243,2,9,4,7
	.byte	'p0',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	249
	.byte	4,2,35,0,0,4
	.byte	'Os_psetType',0,4,247,2,3
	.word	2050
	.byte	18,4,249,2,9,4,7
	.byte	't0',0
	.word	249
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	249
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	249
	.byte	4,2,35,0,0,4
	.byte	'Os_tpmaskType',0,4,253,2,3
	.word	2114
	.byte	4
	.byte	'Os_ActivationCountType',0,4,254,2,23
	.word	181
	.byte	11
	.byte	'Os_TaskDynType_s',0,4,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	651
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	1430
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	181
	.byte	1,2,35,116,0,4
	.byte	'Os_TaskDynType',0,4,132,3,3
	.word	2212
	.byte	8,68
	.word	620
	.byte	9,0,0,3
	.word	2212
	.byte	17
	.word	2338
	.byte	11
	.byte	'Os_TaskType_s',0,4,134,3,16,40,7
	.byte	'dynamic',0
	.word	2343
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	795
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2050
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2114
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2114
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	212
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	249
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	702
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	181
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	181
	.byte	1,2,35,38,0,4
	.byte	'Os_TaskType',0,4,146,3,3
	.word	2348
	.byte	17
	.word	2348
	.byte	3
	.word	2598
	.byte	4
	.byte	'TaskType',0,4,147,3,47
	.word	2603
	.byte	19
	.byte	'Os_TaskStateType',0,4,155,3,6,4,13
	.byte	'SUSPENDED',0,0,13
	.byte	'READY',0,1,13
	.byte	'WAITING',0,2,13
	.byte	'RUNNING',0,3,0,4
	.byte	'TaskStateType',0,4,156,3,31
	.word	2626
	.byte	18,4,167,3,3,4,7
	.byte	'tpmask',0
	.word	2114
	.byte	4,2,35,0,0,11
	.byte	'Os_ResourceDynType_s',0,4,166,3,16,4,7
	.byte	'saved_priority',0
	.word	2713
	.byte	4,2,35,0,0,4
	.byte	'Os_ResourceDynType',0,4,170,3,3
	.word	2736
	.byte	3
	.word	2736
	.byte	17
	.word	2816
	.byte	11
	.byte	'Os_ResourceType_s',0,4,171,3,16,12,7
	.byte	'dynamic',0
	.word	2821
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2114
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,8,0,4
	.byte	'Os_ResourceType',0,4,175,3,3
	.word	2826
	.byte	6,4,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	249
	.byte	4,2,35,8,0,4
	.byte	'AlarmBaseType',0,4,185,3,3
	.word	2925
	.byte	6,4,206,3,9,8,7
	.byte	'Running',0
	.word	181
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	181
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	249
	.byte	4,2,35,4,0,4
	.byte	'Os_CounterStatusType',0,4,210,3,3
	.word	3020
	.byte	20
	.word	181
	.byte	1,1,3
	.word	3106
	.byte	4
	.byte	'Os_CounterIncrAdvType',0,4,217,3,22
	.word	3113
	.byte	11
	.byte	's_swd',0,4,222,3,12,4,7
	.byte	'count',0
	.word	249
	.byte	4,2,35,0,0,18,4,221,3,3,4,7
	.byte	'sw',0
	.word	3149
	.byte	4,2,35,0,0,11
	.byte	'Os_CounterDynType_s',0,4,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3177
	.byte	4,2,35,0,0,4
	.byte	'Os_CounterDynType',0,4,226,3,3
	.word	3196
	.byte	3
	.word	3196
	.byte	17
	.word	3274
	.byte	11
	.byte	'Os_CounterType_s',0,4,227,3,16,28,7
	.byte	'dynamic',0
	.word	3279
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3118
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	2925
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	1376
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	181
	.byte	1,2,35,25,0,4
	.byte	'Os_CounterType',0,4,234,3,3
	.word	3284
	.byte	3
	.word	3106
	.byte	17
	.word	3284
	.byte	3
	.word	3436
	.byte	4
	.byte	'CounterType',0,4,235,3,52
	.word	3441
	.byte	19
	.byte	'Os_ScheduleTableStatusType',0,4,240,3,6,4,13
	.byte	'SCHEDULETABLE_STOPPED',0,0,13
	.byte	'SCHEDULETABLE_NEXT',0,1,13
	.byte	'SCHEDULETABLE_WAITING',0,2,13
	.byte	'SCHEDULETABLE_RUNNING',0,3,13
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,4
	.byte	'ScheduleTableStatusType',0,4,241,3,41
	.word	3467
	.byte	17
	.word	.L6-.L3
	.byte	3
	.word	3667
	.byte	4
	.byte	'ScheduleTableType',0,4,128,4,58
	.word	3672
	.byte	11
	.byte	'Os_ScheduleTableDynType_s',0,4,130,4,16,16,7
	.byte	'match',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	3677
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	3467
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	212
	.byte	2,2,35,12,0,3
	.word	3704
	.byte	17
	.word	3797
.L6:
	.byte	11
	.byte	'Os_ScheduleTableType_s',0,4,247,3,16,16,7
	.byte	'dynamic',0
	.word	3802
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	3446
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	181
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	212
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	181
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	181
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	181
	.byte	1,2,35,14,0,4
	.byte	'Os_ScheduleTableType',0,4,255,3,3
	.word	3807
	.byte	17
	.word	3807
	.byte	3
	.word	3987
	.byte	17
	.word	3284
	.byte	3
	.word	3997
	.byte	21
	.word	1100
	.byte	21
	.word	2050
	.byte	21
	.word	1947
	.byte	21
	.word	2608
	.byte	21
	.word	2114
	.byte	21
	.word	181
	.byte	21
	.word	2608
	.byte	11
	.byte	'Os_ControlledCoreType_s',0,4,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	531
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4007
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4012
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4017
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4022
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4027
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	1633
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	1430
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	181
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4032
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	702
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	181
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4037
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	702
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	181
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	181
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	181
	.byte	1,2,35,110,0,4
	.byte	'Os_ControlledCoreType',0,4,141,7,3
	.word	4042
	.byte	3
	.word	249
	.byte	17
	.word	1778
	.byte	3
	.word	4498
	.byte	17
	.word	2348
	.byte	3
	.word	4508
	.byte	3
	.word	1430
	.byte	11
	.byte	'Os_AnyCoreType_s',0,4,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	249
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	249
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	249
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	249
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	651
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	181
	.byte	1,2,35,92,0,4
	.byte	'Os_AnyCoreType',0,4,160,7,3
	.word	4523
	.byte	4
	.byte	'unsigned_int',0,5,116,22
	.word	249
	.byte	12,6,31,9,4,13
	.byte	'MEMIF_JOB_OK',0,0,13
	.byte	'MEMIF_JOB_FAILED',0,1,13
	.byte	'MEMIF_JOB_PENDING',0,2,13
	.byte	'MEMIF_JOB_CANCELED',0,3,13
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,13
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,4
	.byte	'MemIf_JobResultType',0,6,39,2
	.word	4785
	.byte	12,6,41,9,4,13
	.byte	'MEMIF_MODE_SLOW',0,0,13
	.byte	'MEMIF_MODE_FAST',0,1,0,4
	.byte	'MemIf_ModeType',0,6,45,2
	.word	4943
	.byte	4
	.byte	'PduIdType',0,7,22,19
	.word	212
	.byte	4
	.byte	'PduLengthType',0,7,26,19
	.word	212
	.byte	12,8,113,9,4,13
	.byte	'TP_DATACONF',0,0,13
	.byte	'TP_DATARETRY',0,1,13
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,8,118,3
	.word	5048
	.byte	4
	.byte	'Can_IdType',0,9,32,16
	.word	249
	.byte	4
	.byte	'Can_HwHandleType',0,9,43,16
	.word	212
	.byte	4
	.byte	'Can_TxObjPriorityClassType',0,10,219,3,16
	.word	249
	.byte	11
	.byte	'Can_TxHwObjectConfigType',0,10,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	181
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	181
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	249
	.byte	4,2,35,4,0,4
	.byte	'Can_TxHwObjectConfigType',0,10,252,3,3
	.word	5204
	.byte	11
	.byte	'Can_RxHwObjectConfigType',0,10,129,4,16,12,7
	.byte	'MaskRef',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	181
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	181
	.byte	1,2,35,9,0,4
	.byte	'Can_RxHwObjectConfigType',0,10,147,4,3
	.word	5340
	.byte	8,4
	.word	181
	.byte	9,3,0,11
	.byte	'Can_ControllerMOMapConfigType',0,10,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	5480
	.byte	4,2,35,0,0,4
	.byte	'Can_ControllerMOMapConfigType',0,10,184,4,3
	.word	5489
	.byte	11
	.byte	'Can_NPCRValueType',0,10,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	212
	.byte	2,2,35,0,0,4
	.byte	'Can_NPCRValueType',0,10,191,4,3
	.word	5590
	.byte	11
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,10,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	212
	.byte	2,2,35,4,0,4
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,10,198,4,3
	.word	5665
	.byte	17
	.word	5665
	.byte	3
	.word	5830
	.byte	11
	.byte	'Can_BaudrateConfigPtrType',0,10,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5835
	.byte	4,2,35,0,0,4
	.byte	'Can_BaudrateConfigPtrType',0,10,204,4,3
	.word	5840
	.byte	11
	.byte	'Can_EventHandlingType',0,10,226,4,16,4,7
	.byte	'CanEventType',0
	.word	5480
	.byte	4,2,35,0,0,4
	.byte	'Can_EventHandlingType',0,10,229,4,3
	.word	5940
	.byte	4
	.byte	'Rte_TransformerErrorCode',0,11,130,1,15
	.word	181
	.byte	4
	.byte	'Rte_TransformerClass',0,11,131,1,15
	.word	181
	.byte	6,11,168,1,9,12,7
	.byte	'in',0
	.word	1376
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	1376
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	212
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	181
	.byte	1,2,35,10,0,4
	.byte	'Rte_QDynType',0,11,173,1,3
	.word	6086
	.byte	12,11,175,1,9,4,13
	.byte	'RTE_DRA',0,0,13
	.byte	'RTE_WOWP',0,1,13
	.byte	'RTE_TASK',0,2,13
	.byte	'RTE_ARE',0,3,13
	.byte	'RTE_EV',0,4,13
	.byte	'RTE_MSI',0,5,0,4
	.byte	'Rte_NotificationType',0,11,182,1,3
	.word	6173
	.byte	8,128,8
	.word	181
	.byte	9,255,7,0,4
	.byte	'Impl_NVM_DstPtrType_1024',0,12,50,15
	.word	6271
	.byte	4
	.byte	'CanIf_u32_impl',0,12,69,16
	.word	249
	.byte	4
	.byte	'CanIf_u16_impl',0,12,71,16
	.word	212
	.byte	4
	.byte	'CanIf_u8_impl',0,12,73,15
	.word	181
	.byte	4
	.byte	'CanIf_ControllerModeType_Enum_impl',0,12,88,15
	.word	181
	.byte	4
	.byte	'CanIf_PduModeType_Enum_impl',0,12,90,15
	.word	181
	.byte	6,12,92,9,2,7
	.byte	'DeviceMode',0
	.word	181
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	181
	.byte	1,2,35,1,0,4
	.byte	'CanIf_ControllerStateType_struct_impl',0,12,95,3
	.word	6462
	.byte	4
	.byte	'CanIf_NotifStatusType_Enum_impl',0,12,100,15
	.word	181
	.byte	4
	.byte	'CanSM_boolean_Impl',0,12,120,15
	.word	181
	.byte	4
	.byte	'CanSM_u8_Impl',0,12,123,15
	.word	181
	.byte	4
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,12,128,1,15
	.word	181
	.byte	4
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,12,132,1,15
	.word	181
	.byte	4
	.byte	'CanSM_u16_Impl',0,12,136,1,16
	.word	212
	.byte	4
	.byte	'CanSM_TimerStateType_Enum_impl',0,12,138,1,15
	.word	181
	.byte	6,12,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	212
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	181
	.byte	1,2,35,2,0,4
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,12,143,1,3
	.word	6803
	.byte	4
	.byte	'Com_impl_u16',0,12,154,1,16
	.word	212
	.byte	4
	.byte	'Com_impl_u8',0,12,157,1,15
	.word	181
	.byte	4
	.byte	'ComM_uint32_Impl',0,12,173,1,16
	.word	249
	.byte	4
	.byte	'ComM_uint16_Impl',0,12,175,1,16
	.word	212
	.byte	4
	.byte	'ComM_uint8_Impl',0,12,177,1,15
	.word	181
	.byte	4
	.byte	'ComM_bool_Impl',0,12,179,1,15
	.word	181
	.byte	6,12,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	212
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	181
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	181
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	181
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	181
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	181
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	181
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	181
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	181
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	181
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	181
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	181
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	181
	.byte	1,2,35,21,0,4
	.byte	'ComM_ChannelStruct_Impl',0,12,197,1,3
	.word	7035
	.byte	6,12,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	212
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	212
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	181
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	181
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	181
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	181
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	181
	.byte	1,2,35,8,0,4
	.byte	'ComM_UserStruct_Impl',0,12,214,1,3
	.word	7539
	.byte	4
	.byte	'Dcm_IOOperationResponseType',0,12,252,1,15
	.word	181
	.byte	4
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	12,138,2,15
	.word	181
	.byte	4
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,12,146,2,15
	.word	181
	.byte	4
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,12,150,2,15
	.word	181
	.byte	4
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,12,154,2,15
	.word	181
	.byte	4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,12,243,3,34
	.word	6282
	.byte	8,128,8
	.word	181
	.byte	9,255,7,0,4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,12,246,3,34
	.word	6282
	.byte	4
	.byte	'Fls_LengthType',0,13,173,3,16
	.word	249
	.byte	11
	.byte	'Fls_JobStartType',0,13,175,3,16,1,22
	.byte	'Reserved1',0,1
	.word	181
	.byte	1,7,2,35,0,22
	.byte	'Write',0,1
	.word	181
	.byte	1,6,2,35,0,22
	.byte	'Erase',0,1
	.word	181
	.byte	1,5,2,35,0,22
	.byte	'Read',0,1
	.word	181
	.byte	1,4,2,35,0,22
	.byte	'Compare',0,1
	.word	181
	.byte	1,3,2,35,0,22
	.byte	'Reserved2',0,1
	.word	181
	.byte	3,0,2,35,0,0,4
	.byte	'Fls_JobStartType',0,13,183,3,3
	.word	8381
	.byte	4
	.byte	'Fls_17_Pmu_Job_Type',0,13,187,3,15
	.word	181
	.byte	3
	.word	181
	.byte	17
	.word	181
	.byte	3
	.word	8576
	.byte	8,2
	.word	181
	.byte	9,1,0,11
	.byte	'Fls_17_Pmu_StateType',0,13,198,3,16,48,7
	.byte	'FlsReadAddress',0
	.word	249
	.byte	4,2,35,0,7
	.byte	'FlsWriteAddress',0
	.word	249
	.byte	4,2,35,4,7
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	249
	.byte	4,2,35,8,7
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	249
	.byte	4,2,35,12,7
	.byte	'FlsReadLength',0
	.word	249
	.byte	4,2,35,16,7
	.byte	'FlsWriteLength',0
	.word	249
	.byte	4,2,35,20,7
	.byte	'FlsReadBufferPtr',0
	.word	8571
	.byte	4,2,35,24,7
	.byte	'FlsWriteBufferPtr',0
	.word	8581
	.byte	4,2,35,28,7
	.byte	'FlsJobResult',0
	.word	4785
	.byte	4,2,35,32,7
	.byte	'FlsMode',0
	.word	4943
	.byte	4,2,35,36,7
	.byte	'NotifCaller',0
	.word	181
	.byte	1,2,35,40,7
	.byte	'JobStarted',0
	.word	8381
	.byte	1,2,35,41,7
	.byte	'FlsJobType',0
	.word	8586
	.byte	2,2,35,42,7
	.byte	'FlsOper',0
	.word	181
	.byte	1,2,35,44,7
	.byte	'FlsTimeoutErr',0
	.word	181
	.byte	1,2,35,45,7
	.byte	'FlsTimeoutControl',0
	.word	181
	.byte	1,2,35,46,0,4
	.byte	'Fls_17_Pmu_StateType',0,13,130,4,3
	.word	8595
	.byte	4
	.byte	'Fls_NotifFunctionPtrType',0,13,137,4,16
	.word	790
	.byte	17
	.word	249
	.byte	3
	.word	9073
	.byte	15,1,1,16
	.word	249
	.byte	16
	.word	249
	.byte	16
	.word	9078
	.byte	16
	.word	181
	.byte	0,3
	.word	9083
	.byte	4
	.byte	'Fls_WriteCmdPtrType',0,13,139,4,16
	.word	9107
	.byte	15,1,1,16
	.word	249
	.byte	0,3
	.word	9141
	.byte	4
	.byte	'Fls_EraseCmdPtrType',0,13,144,4,16
	.word	9150
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,8,1,1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,21,0,54,15,39,12,0,0,11,19,1,3,8,58,15,59,15,57,15,11
	.byte	15,0,0,12,4,1,58,15,59,15,57,15,11,15,0,0,13,40,0,3,8,28,13,0,0,14,59,0,3,8,0,0,15,21,1,54,15,39,12,0
	.byte	0,16,5,0,73,19,0,0,17,38,0,73,19,0,0,18,23,1,58,15,59,15,57,15,11,15,0,0,19,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,20,21,0,73,19,54,15,39,12,0,0,21,53,0,73,19,0,0,22,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0
	.byte	0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Proc.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     1  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     2  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     3  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     5   * Includes
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     7  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     8  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	     9  #include "Fee.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    10  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    11  /* Disable the Fee common part when the Fs1 is selected - currently the Fs1 is a complete Fee */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    12  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 != FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    13  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    14  #include "Fee_Prv.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    15  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    16  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    17   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    18   * Variables
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    19   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    20  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    21  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    22  #define FEE_START_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    23  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    24  Fee_Prv_DriverState_ten Fee_Prv_DriverState_en      = FEE_PRV_DRIVERSTATE_UNINIT_E; /* Driver state                     */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    25  MemIf_ModeType          Fee_Prv_DriverMode_en       = MEMIF_MODE_SLOW;              /* Driver mode                      */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    26  #define FEE_STOP_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    27  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    28  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    29  #define FEE_START_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    30  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    31  static boolean Fee_Prv_BackgroundEnabled_b = FALSE; /* Erasing in background allowed    */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    32  #define FEE_STOP_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    33  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    34  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    35  /* Pointer to the order which is currently being processed */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    36  #define FEE_START_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    37  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    38  static Fee_Prv_OrderJob_tst * Fee_Prv_ProcCurrentOrder_pcst = NULL_PTR;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    39  #define FEE_STOP_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    40  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    41  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    42  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    43   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    44   * Implementation
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    45   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    46  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    47  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    48  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    49   * \brief   The main function does the actual work of the Fee.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    50   *          The more often it is scheduled the faster the Fee is.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    51  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    52  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    53  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    54  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    55  void Fee_MainFunction(void)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    56  {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    57      MemIf_JobResultType result_en = MEMIF_JOB_PENDING;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    58  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    59      /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    60       * Measure main function execution time.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    61       * Attention: The result is not the actual time the main function really needed since it can be interrupted.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    62       *            Nevertheless it is a good indicator for debugging purposes.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    63       */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    64      Fee_Prv_DbgWatchStart(&Fee_Prv_DbgInfo_st.time_st.procMain_st);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    65  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    66      /* Reset the effort limitation */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    67      Fee_Prv_LibEffortReset();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    68  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    69      /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    70       * Get the next order from the order unit.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    71       * Prioritization is done by the order unit, NvM has higher priority before any adapter.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    72       */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    73      if(NULL_PTR == Fee_Prv_ProcCurrentOrder_pcst)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    74      {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    75          Fee_Prv_ProcCurrentOrder_pcst = Fee_Prv_OrderBegin();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    76          if(
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    77              (NULL_PTR                           != Fee_Prv_ProcCurrentOrder_pcst) &&
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    78              (FEE_PRV_DRIVERSTATE_BACKGROUND_E   == Fee_Prv_DriverState_en       )
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    79          )
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    80          {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    81              Fee_Prv_FsIfCancel();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    82          }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    83      }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    84  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    85      /* Check whether a new order can be started */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    86      if(FEE_PRV_DRIVERSTATE_IDLE_E == Fee_Prv_DriverState_en)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    87      {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    88          /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    89           * If a new order is available start the order in the Fs.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    90           * Then set the appropriate driver state.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    91           */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    92          if(NULL_PTR != Fee_Prv_ProcCurrentOrder_pcst)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    93          {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    94              switch(Fee_Prv_ProcCurrentOrder_pcst->type_en)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    95              {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    96                  case FEE_PRV_ORDERTYPE_READ_E:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    97                      Fee_Prv_FsIfRead(Fee_Prv_ProcCurrentOrder_pcst);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    98                      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_READ_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	    99                  break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   100  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   101                  case FEE_PRV_ORDERTYPE_WRITE_E:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   102                      Fee_Prv_FsIfWrite(Fee_Prv_ProcCurrentOrder_pcst);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   103                      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_WRITE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   104                  break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   105  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   106                  case FEE_PRV_ORDERTYPE_INVALIDATE_E:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   107                      Fee_Prv_FsIfInvalidateBlock(Fee_Prv_ProcCurrentOrder_pcst);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   108                      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_INVALIDATEBLOCK_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   109                  break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   110  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   111                  case FEE_PRV_ORDERTYPE_BLOCKMAINTENANCE_E:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   112                      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_BLOCKMAINTENANCE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   113                  break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   114  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   115                  default:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   116                      Fee_Prv_OrderEnd(Fee_Prv_ProcCurrentOrder_pcst, MEMIF_JOB_FAILED);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   117                  break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   118              }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   119          }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   120      }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   121  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   122      /* Based on the driver state left the Fs do the work */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   123      switch(Fee_Prv_DriverState_en)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   124      {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   125          case FEE_PRV_DRIVERSTATE_IDLE_E:
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   126              /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   127               * In case the Fee is currently IDLE,
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   128               * check whether any maintenance functions can be executed in the background
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   129               */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   130              if(Fee_Prv_BackgroundEnabled_b)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   131              {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   132                  result_en = Fee_Prv_FsIfBackground();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   133                  if(MEMIF_JOB_PENDING == result_en)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   134                  {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   135                      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_BACKGROUND_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   136                  }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   137              }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   138          break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   139          case FEE_PRV_DRIVERSTATE_BACKGROUND_E:          result_en = Fee_Prv_FsIfBackground();           break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   140          case FEE_PRV_DRIVERSTATE_READ_E:                result_en = Fee_Prv_FsIfReadDo();               break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   141          case FEE_PRV_DRIVERSTATE_WRITE_E:               result_en = Fee_Prv_FsIfWriteDo();              break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   142          case FEE_PRV_DRIVERSTATE_INVALIDATEBLOCK_E:     result_en = Fee_Prv_FsIfInvalidateBlockDo();    break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   143          case FEE_PRV_DRIVERSTATE_BLOCKMAINTENANCE_E:    result_en = MEMIF_JOB_OK;                       break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   144          default:                                        result_en = MEMIF_JOB_FAILED;                   break;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   145      }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   146  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   147      /* In case the result is not MEMIF_JOB_PENDING any more reset the driver state to IDLE */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   148      if(MEMIF_JOB_PENDING != result_en)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   149      {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   150          /* If an order was finished inform the order unit */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   151          if(
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   152              (NULL_PTR                           != Fee_Prv_ProcCurrentOrder_pcst) &&
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   153              (FEE_PRV_DRIVERSTATE_BACKGROUND_E   != Fee_Prv_DriverState_en       )
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   154          )
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   155          {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   156              Fee_Prv_OrderEnd(Fee_Prv_ProcCurrentOrder_pcst, result_en);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   157          }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   158          Fee_Prv_ProcCurrentOrder_pcst   = NULL_PTR;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   159          Fee_Prv_DriverState_en          = FEE_PRV_DRIVERSTATE_IDLE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   160          Fee_Rb_WorkingState_en          = FEE_RB_IDLE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   161      }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   162  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   163      if(Fee_Prv_BackgroundEnabled_b)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   164      {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   165          Fee_Prv_DbgMainFunction();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   166      }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   167  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   168      Fee_Prv_DbgWatchStop(&Fee_Prv_DbgInfo_st.time_st.procMain_st, FALSE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   169  }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   170  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   171  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   172   * \brief   Initialize the Fee.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   173  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   174  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   175  #if (FEE_AR42_API_COMPLIANCE == STD_ON)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   176  /*MR12 RULE 8.13 VIOLATION: AR4.2 defines this function prototype with a non-constant pointer*/
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   177  void Fee_Init(Fee_ConfigType const * ConfigPtr)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   178  #else
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   179  void Fee_Init(void)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   180  #endif
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   181  {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   182      // ignore AR4.2 Config Pointer because Postcompile configuration is not possible
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   183      #if (FEE_AR42_API_COMPLIANCE == STD_ON)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   184      if(ConfigPtr != NULL_PTR){}
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   185      #endif
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   186  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   187      /* Measure init time */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   188      Fee_Prv_DbgWatchStart(&Fee_Prv_DbgInfo_st.time_st.procInit_st);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   189  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   190      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_INIT_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   191  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   192      /* Do not limit the effort to spend in the init - full speed is required */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   193      Fee_Prv_LibUseEffortLimit(FALSE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   194  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   195      /*
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   196       * Set the medium synchronous.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   197       * That means the flash is polled and Fls_MainFunction calls are triggered until flash jobs are finished.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   198       */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   199      Fee_Prv_MediumSetSync(TRUE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   200  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   201      /* Initialize the file system - this will take the most time */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   202      Fee_Prv_FsIfInit();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   203  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   204      /* Compatibility: The polling state shall be visible since it is present in the public header file */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   205      Fee_stMain = FEE_NORMAL_MODE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   206  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   207      /* Finally set the driver state to IDLE */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   208      Fee_Prv_DriverState_en = FEE_PRV_DRIVERSTATE_IDLE_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   209  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   210      Fee_Prv_DbgWatchStop(&Fee_Prv_DbgInfo_st.time_st.procInit_st, FALSE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   211  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   212      /* If enabled read the debug block */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   213      Fee_Prv_DbgBlockRead();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   214  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   215      /* Stop the system if a block was lost */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   216      Fee_Prv_DbgCheckLayout();
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   217  }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   218  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   219  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   220   * \brief   Mark end of the init.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   221   *          After calling this function erasing in the background is allowed.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   222   *          Also the Fee is set in a more cooperative mode to make sure task duration constraints are not violated.
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   223  */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   224  void Fee_Rb_EndInit(void)
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   225  {
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   226      Fee_Prv_LibUseEffortLimit(TRUE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   227      Fee_Prv_MediumSetSync(FALSE);
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   228      Fee_Prv_BackgroundEnabled_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   229  }
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   230  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   231  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   232  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   233  
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   234  /* 1 != FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Fee\src\Fee_Proc.c	   235  #endif

	; Module end
