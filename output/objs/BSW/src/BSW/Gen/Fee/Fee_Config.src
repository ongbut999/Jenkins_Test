	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16192a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Fee\\Fee_Config.src BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Config.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Config.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	14122
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Config.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Fee_SrvRoundUp',0,3,1,140,11,21
	.word	136
	.byte	1,1,4
	.byte	'value_u32',0,1,140,11,43
	.word	136
	.byte	4
	.byte	'stepsize_u32',0,1,140,11,62
	.word	136
	.byte	5,0,6
	.word	152
	.byte	7
	.word	179
	.byte	7
	.word	198
	.byte	5,0,8,1,9
	.word	239
	.byte	10
	.byte	'__codeptr',0,2,1,1
	.word	241
	.byte	2
	.byte	'char',0,1,6,10
	.byte	'sint8',0,3,76,25
	.word	264
	.byte	2
	.byte	'unsigned char',0,1,8,10
	.byte	'uint8',0,3,81,25
	.word	286
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.byte	'uint16',0,3,91,25
	.word	317
	.byte	10
	.byte	'uint32',0,3,106,24
	.word	136
	.byte	2
	.byte	'unsigned long long int',0,8,7,10
	.byte	'uint64',0,3,111,30
	.word	369
	.byte	10
	.byte	'boolean',0,3,127,25
	.word	286
	.byte	10
	.byte	'StatusType',0,4,191,1,27
	.word	286
	.byte	10
	.byte	'Std_ReturnType',0,4,199,1,15
	.word	286
	.byte	11,4,206,1,9,8,12
	.byte	'vendorID',0
	.word	317
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	317
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	286
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	286
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	286
	.byte	1,2,35,6,0,10
	.byte	'Std_VersionInfoType',0,4,213,1,3
	.word	470
	.byte	11,5,93,9,8,12
	.byte	'Class',0
	.word	286
	.byte	1,2,35,0,12
	.byte	'TIN',0
	.word	286
	.byte	1,2,35,1,12
	.byte	'ReturnAddress',0
	.word	136
	.byte	4,2,35,4,0,10
	.byte	'OsTrapInfoType',0,5,97,3
	.word	620
	.byte	13,68
	.word	136
	.byte	14,16,0,11,5,154,1,9,68,12
	.byte	'store',0
	.word	700
	.byte	68,2,35,0,0,13,68
	.word	709
	.byte	14,0,0,10
	.byte	'Os_JumpBufType',0,5,156,1,3
	.word	731
	.byte	10
	.byte	'Os_StackTraceType',0,5,174,1,18
	.word	136
	.byte	11,5,175,1,9,8,12
	.byte	'sp',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'ctx',0
	.word	136
	.byte	4,2,35,4,0,10
	.byte	'Os_StackValueType',0,5,175,1,63
	.word	791
	.byte	10
	.byte	'Os_StackSizeType',0,5,176,1,27
	.word	791
	.byte	15,1,1,9
	.word	876
	.byte	10
	.byte	'Os_VoidVoidFunctionType',0,5,179,1,16
	.word	879
	.byte	10
	.byte	'ApplicationType',0,5,193,1,23
	.word	286
	.byte	16
	.byte	'Os_ApplicationConfigurationType_s',0,5,198,1,16,2,12
	.byte	'app_id',0
	.word	286
	.byte	1,2,35,0,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,1,0,10
	.byte	'Os_ApplicationConfigurationType',0,5,201,1,3
	.word	942
	.byte	10
	.byte	'Os_CoreStateType',0,5,203,1,16
	.word	136
	.byte	10
	.byte	'AreaIdType',0,5,204,1,16
	.word	317
	.byte	10
	.byte	'Os_PeripheralAddressType',0,5,212,1,22
	.word	136
	.byte	10
	.byte	'TickType',0,5,221,1,22
	.word	136
	.byte	10
	.byte	'Os_StopwatchTickType',0,5,225,1,22
	.word	136
	.byte	9
	.word	136
	.byte	10
	.byte	'Os_Lockable',0,5,234,1,18
	.word	1184
	.byte	10
	.byte	'CoreIdType',0,5,236,1,16
	.word	317
	.byte	10
	.byte	'SpinlockIdType',0,5,237,1,16
	.word	317
	.byte	17,5,239,1,9,4,18
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,18
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,10
	.byte	'TryToGetSpinlockType',0,5,239,1,74
	.word	1254
	.byte	17,5,174,2,9,4,18
	.byte	'APPLICATION_ACCESSIBLE',0,0,18
	.byte	'APPLICATION_RESTARTING',0,1,18
	.byte	'APPLICATION_TERMINATED',0,2,0,10
	.byte	'ApplicationStateType',0,5,174,2,92
	.word	1347
	.byte	19
	.byte	'void',0,9
	.word	1459
	.byte	20,1,1,21
	.word	286
	.byte	21
	.word	1465
	.byte	0,9
	.word	1470
	.byte	10
	.byte	'Os_FunctionEntryType',0,5,183,2,16
	.word	1484
	.byte	16
	.byte	'Os_MeterInfoType_s',0,5,193,2,16,48,12
	.byte	'elapsed',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'previous',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'max',0
	.word	136
	.byte	4,2,35,8,12
	.byte	'cumulative',0
	.word	136
	.byte	4,2,35,12,12
	.byte	'stackbase',0
	.word	791
	.byte	8,2,35,16,12
	.byte	'stackusage',0
	.word	791
	.byte	8,2,35,24,12
	.byte	'stackmax',0
	.word	791
	.byte	8,2,35,32,12
	.byte	'stackbudget',0
	.word	791
	.byte	8,2,35,40,0,10
	.byte	'Os_MeterInfoType',0,5,202,2,3
	.word	1519
	.byte	9
	.word	1519
	.byte	10
	.byte	'Os_MeterInfoRefType',0,5,203,2,50
	.word	1717
	.byte	10
	.byte	'EventMaskType',0,5,206,2,15
	.word	286
	.byte	10
	.byte	'Os_imaskType',0,5,211,2,16
	.word	136
	.byte	16
	.byte	'Os_ISRDynType_s',0,5,213,2,16,48,12
	.byte	'meter',0
	.word	1519
	.byte	48,2,35,0,0,10
	.byte	'Os_ISRDynType',0,5,215,2,3
	.word	1796
	.byte	9
	.word	1796
	.byte	22
	.word	1857
	.byte	16
	.byte	'Os_ISRType_s',0,5,216,2,16,24,12
	.byte	'entry_function',0
	.word	884
	.byte	4,2,35,0,12
	.byte	'dynamic',0
	.word	1862
	.byte	4,2,35,4,12
	.byte	'imask',0
	.word	136
	.byte	4,2,35,8,12
	.byte	'stackbudget',0
	.word	791
	.byte	8,2,35,12,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,20,12
	.byte	'application',0
	.word	286
	.byte	1,2,35,21,0,10
	.byte	'Os_ISRType',0,5,223,2,3
	.word	1867
	.byte	9
	.word	876
	.byte	22
	.word	1867
	.byte	9
	.word	2026
	.byte	10
	.byte	'ISRType',0,5,224,2,46
	.word	2031
	.byte	10
	.byte	'Os_bitmask',0,5,239,2,22
	.word	136
	.byte	10
	.byte	'Os_pset0Type',0,5,240,2,20
	.word	136
	.byte	10
	.byte	'Os_pset1Type',0,5,241,2,20
	.word	136
	.byte	10
	.byte	'Os_pset2Type',0,5,242,2,20
	.word	136
	.byte	23,5,243,2,9,4,12
	.byte	'p0',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'p1',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'p2',0
	.word	136
	.byte	4,2,35,0,0,10
	.byte	'Os_psetType',0,5,247,2,3
	.word	2139
	.byte	23,5,249,2,9,4,12
	.byte	't0',0
	.word	136
	.byte	4,2,35,0,12
	.byte	't1',0
	.word	136
	.byte	4,2,35,0,12
	.byte	't2',0
	.word	136
	.byte	4,2,35,0,0,10
	.byte	'Os_tpmaskType',0,5,253,2,3
	.word	2203
	.byte	10
	.byte	'Os_ActivationCountType',0,5,254,2,23
	.word	286
	.byte	16
	.byte	'Os_TaskDynType_s',0,5,128,3,16,120,12
	.byte	'terminate_jump_buf',0
	.word	740
	.byte	68,2,35,0,12
	.byte	'meter',0
	.word	1519
	.byte	48,2,35,68,12
	.byte	'activation_count',0
	.word	286
	.byte	1,2,35,116,0,10
	.byte	'Os_TaskDynType',0,5,132,3,3
	.word	2301
	.byte	13,68
	.word	709
	.byte	14,0,0,9
	.word	2301
	.byte	22
	.word	2427
	.byte	16
	.byte	'Os_TaskType_s',0,5,134,3,16,40,12
	.byte	'dynamic',0
	.word	2432
	.byte	4,2,35,0,12
	.byte	'entry_function',0
	.word	884
	.byte	4,2,35,4,12
	.byte	'pset',0
	.word	2139
	.byte	4,2,35,8,12
	.byte	'base_tpmask',0
	.word	2203
	.byte	4,2,35,12,12
	.byte	'tpmask',0
	.word	2203
	.byte	4,2,35,16,12
	.byte	'core_id',0
	.word	317
	.byte	2,2,35,20,12
	.byte	'index',0
	.word	136
	.byte	4,2,35,24,12
	.byte	'stackbudget',0
	.word	791
	.byte	8,2,35,28,12
	.byte	'activation_count',0
	.word	286
	.byte	1,2,35,36,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,37,12
	.byte	'application',0
	.word	286
	.byte	1,2,35,38,0,10
	.byte	'Os_TaskType',0,5,146,3,3
	.word	2437
	.byte	22
	.word	2437
	.byte	9
	.word	2687
	.byte	10
	.byte	'TaskType',0,5,147,3,47
	.word	2692
	.byte	24
	.byte	'Os_TaskStateType',0,5,155,3,6,4,18
	.byte	'SUSPENDED',0,0,18
	.byte	'READY',0,1,18
	.byte	'WAITING',0,2,18
	.byte	'RUNNING',0,3,0,10
	.byte	'TaskStateType',0,5,156,3,31
	.word	2715
	.byte	23,5,167,3,3,4,12
	.byte	'tpmask',0
	.word	2203
	.byte	4,2,35,0,0,16
	.byte	'Os_ResourceDynType_s',0,5,166,3,16,4,12
	.byte	'saved_priority',0
	.word	2802
	.byte	4,2,35,0,0,10
	.byte	'Os_ResourceDynType',0,5,170,3,3
	.word	2825
	.byte	9
	.word	2825
	.byte	22
	.word	2905
	.byte	16
	.byte	'Os_ResourceType_s',0,5,171,3,16,12,12
	.byte	'dynamic',0
	.word	2910
	.byte	4,2,35,0,12
	.byte	'tpmask',0
	.word	2203
	.byte	4,2,35,4,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,8,0,10
	.byte	'Os_ResourceType',0,5,175,3,3
	.word	2915
	.byte	11,5,181,3,9,12,12
	.byte	'maxallowedvalue',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	136
	.byte	4,2,35,8,0,10
	.byte	'AlarmBaseType',0,5,185,3,3
	.word	3014
	.byte	11,5,206,3,9,8,12
	.byte	'Running',0
	.word	286
	.byte	1,2,35,0,12
	.byte	'Pending',0
	.word	286
	.byte	1,2,35,1,12
	.byte	'Delay',0
	.word	136
	.byte	4,2,35,4,0,10
	.byte	'Os_CounterStatusType',0,5,210,3,3
	.word	3109
	.byte	25
	.word	286
	.byte	1,1,9
	.word	3195
	.byte	10
	.byte	'Os_CounterIncrAdvType',0,5,217,3,22
	.word	3202
	.byte	16
	.byte	's_swd',0,5,222,3,12,4,12
	.byte	'count',0
	.word	136
	.byte	4,2,35,0,0,23,5,221,3,3,4,12
	.byte	'sw',0
	.word	3238
	.byte	4,2,35,0,0,16
	.byte	'Os_CounterDynType_s',0,5,220,3,16,4,12
	.byte	'type_dependent',0
	.word	3266
	.byte	4,2,35,0,0,10
	.byte	'Os_CounterDynType',0,5,226,3,3
	.word	3285
	.byte	9
	.word	3285
	.byte	22
	.word	3363
	.byte	16
	.byte	'Os_CounterType_s',0,5,227,3,16,28,12
	.byte	'dynamic',0
	.word	3368
	.byte	4,2,35,0,12
	.byte	'advincr',0
	.word	3207
	.byte	4,2,35,4,12
	.byte	'base',0
	.word	3014
	.byte	12,2,35,8,12
	.byte	'core',0
	.word	1465
	.byte	4,2,35,20,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,24,12
	.byte	'application',0
	.word	286
	.byte	1,2,35,25,0,10
	.byte	'Os_CounterType',0,5,234,3,3
	.word	3373
	.byte	9
	.word	3195
	.byte	22
	.word	3373
	.byte	9
	.word	3525
	.byte	10
	.byte	'CounterType',0,5,235,3,52
	.word	3530
	.byte	24
	.byte	'Os_ScheduleTableStatusType',0,5,240,3,6,4,18
	.byte	'SCHEDULETABLE_STOPPED',0,0,18
	.byte	'SCHEDULETABLE_NEXT',0,1,18
	.byte	'SCHEDULETABLE_WAITING',0,2,18
	.byte	'SCHEDULETABLE_RUNNING',0,3,18
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,10
	.byte	'ScheduleTableStatusType',0,5,241,3,41
	.word	3556
	.byte	22
	.word	.L6-.L3
	.byte	9
	.word	3756
	.byte	10
	.byte	'ScheduleTableType',0,5,128,4,58
	.word	3761
	.byte	16
	.byte	'Os_ScheduleTableDynType_s',0,5,130,4,16,16,12
	.byte	'match',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'next',0
	.word	3766
	.byte	4,2,35,4,12
	.byte	'state',0
	.word	3556
	.byte	4,2,35,8,12
	.byte	'config',0
	.word	317
	.byte	2,2,35,12,0,9
	.word	3793
	.byte	22
	.word	3886
.L6:
	.byte	16
	.byte	'Os_ScheduleTableType_s',0,5,247,3,16,16,12
	.byte	'dynamic',0
	.word	3891
	.byte	4,2,35,0,12
	.byte	'counter',0
	.word	3535
	.byte	4,2,35,4,12
	.byte	'repeat',0
	.word	286
	.byte	1,2,35,8,12
	.byte	'config',0
	.word	317
	.byte	2,2,35,10,12
	.byte	'initial',0
	.word	286
	.byte	1,2,35,12,12
	.byte	'access',0
	.word	286
	.byte	1,2,35,13,12
	.byte	'application',0
	.word	286
	.byte	1,2,35,14,0,10
	.byte	'Os_ScheduleTableType',0,5,255,3,3
	.word	3896
	.byte	22
	.word	3896
	.byte	9
	.word	4076
	.byte	22
	.word	3373
	.byte	9
	.word	4086
	.byte	26
	.word	1189
	.byte	26
	.word	2139
	.byte	26
	.word	2036
	.byte	26
	.word	2697
	.byte	26
	.word	2203
	.byte	26
	.word	286
	.byte	26
	.word	2697
	.byte	16
	.byte	'Os_ControlledCoreType_s',0,5,251,6,16,112,12
	.byte	'TrapInfo',0
	.word	620
	.byte	8,2,35,0,12
	.byte	'lock_taskaccess',0
	.word	4096
	.byte	4,2,35,8,12
	.byte	'ReadyTasks',0
	.word	4101
	.byte	4,2,35,12,12
	.byte	'RunningISR',0
	.word	4106
	.byte	4,2,35,16,12
	.byte	'RunningTask',0
	.word	4111
	.byte	4,2,35,20,12
	.byte	'RunningTPMask',0
	.word	4116
	.byte	4,2,35,24,12
	.byte	'CurrentMeteredObject',0
	.word	1722
	.byte	4,2,35,28,12
	.byte	'IdleMeter',0
	.word	1519
	.byte	48,2,35,32,12
	.byte	'AppAccess',0
	.word	286
	.byte	1,2,35,80,12
	.byte	'AppOverride',0
	.word	4121
	.byte	1,2,35,81,12
	.byte	'GetStackValueAdjust',0
	.word	791
	.byte	8,2,35,84,12
	.byte	'InErrorHook',0
	.word	286
	.byte	1,2,35,92,12
	.byte	'ChainTaskRef',0
	.word	4126
	.byte	4,2,35,96,12
	.byte	'GetStackUsageAdjust',0
	.word	791
	.byte	8,2,35,100,12
	.byte	'InProtectionHook',0
	.word	286
	.byte	1,2,35,108,12
	.byte	'CoreIsActive',0
	.word	286
	.byte	1,2,35,109,12
	.byte	'InShutdownHook',0
	.word	286
	.byte	1,2,35,110,0,10
	.byte	'Os_ControlledCoreType',0,5,141,7,3
	.word	4131
	.byte	9
	.word	136
	.byte	22
	.word	1867
	.byte	9
	.word	4587
	.byte	22
	.word	2437
	.byte	9
	.word	4597
	.byte	9
	.word	1519
	.byte	16
	.byte	'Os_AnyCoreType_s',0,5,151,7,16,96,12
	.byte	'DisableAllImask',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'SuspendAllImask',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'SuspendOSImask',0
	.word	136
	.byte	4,2,35,8,12
	.byte	'DisableAllCount',0
	.word	136
	.byte	4,2,35,12,12
	.byte	'SuspendAllCount',0
	.word	136
	.byte	4,2,35,16,12
	.byte	'SuspendOSCount',0
	.word	136
	.byte	4,2,35,20,12
	.byte	'RestartJumpBuf',0
	.word	740
	.byte	68,2,35,24,12
	.byte	'Restartable',0
	.word	286
	.byte	1,2,35,92,0,10
	.byte	'Os_AnyCoreType',0,5,160,7,3
	.word	4612
	.byte	10
	.byte	'unsigned_int',0,6,116,22
	.word	136
	.byte	17,7,31,9,4,18
	.byte	'MEMIF_JOB_OK',0,0,18
	.byte	'MEMIF_JOB_FAILED',0,1,18
	.byte	'MEMIF_JOB_PENDING',0,2,18
	.byte	'MEMIF_JOB_CANCELED',0,3,18
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,18
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,10
	.byte	'MemIf_JobResultType',0,7,39,2
	.word	4874
	.byte	17,7,41,9,4,18
	.byte	'MEMIF_MODE_SLOW',0,0,18
	.byte	'MEMIF_MODE_FAST',0,1,0,10
	.byte	'MemIf_ModeType',0,7,45,2
	.word	5032
	.byte	10
	.byte	'PduIdType',0,8,22,19
	.word	317
	.byte	10
	.byte	'PduLengthType',0,8,26,19
	.word	317
	.byte	17,9,113,9,4,18
	.byte	'TP_DATACONF',0,0,18
	.byte	'TP_DATARETRY',0,1,18
	.byte	'TP_CONFPENDING',0,2,0,10
	.byte	'TpDataStateType',0,9,118,3
	.word	5137
	.byte	10
	.byte	'Can_IdType',0,10,32,16
	.word	136
	.byte	10
	.byte	'Can_HwHandleType',0,10,43,16
	.word	317
	.byte	10
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	136
	.byte	16
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,12
	.byte	'MsgObjId',0
	.word	286
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	286
	.byte	1,2,35,1,12
	.byte	'TxObjPriorityClass',0
	.word	136
	.byte	4,2,35,4,0,10
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5293
	.byte	16
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,12
	.byte	'MaskRef',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'MsgId',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'MsgObjId',0
	.word	286
	.byte	1,2,35,8,12
	.byte	'HwControllerId',0
	.word	286
	.byte	1,2,35,9,0,10
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	5429
	.byte	13,4
	.word	286
	.byte	14,3,0,16
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	5569
	.byte	4,2,35,0,0,10
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	5578
	.byte	16
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	317
	.byte	2,2,35,0,0,10
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	5679
	.byte	16
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,12
	.byte	'CanControllerBaudrate',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	317
	.byte	2,2,35,4,0,10
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	5754
	.byte	22
	.word	5754
	.byte	9
	.word	5919
	.byte	16
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5924
	.byte	4,2,35,0,0,10
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	5929
	.byte	16
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,12
	.byte	'CanEventType',0
	.word	5569
	.byte	4,2,35,0,0,10
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6029
	.byte	10
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	286
	.byte	10
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	286
	.byte	11,12,168,1,9,12,12
	.byte	'in',0
	.word	1465
	.byte	4,2,35,0,12
	.byte	'out',0
	.word	1465
	.byte	4,2,35,4,12
	.byte	'used',0
	.word	317
	.byte	2,2,35,8,12
	.byte	'lost_data',0
	.word	286
	.byte	1,2,35,10,0,10
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6175
	.byte	17,12,175,1,9,4,18
	.byte	'RTE_DRA',0,0,18
	.byte	'RTE_WOWP',0,1,18
	.byte	'RTE_TASK',0,2,18
	.byte	'RTE_ARE',0,3,18
	.byte	'RTE_EV',0,4,18
	.byte	'RTE_MSI',0,5,0,10
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6262
	.byte	13,128,8
	.word	286
	.byte	14,255,7,0,10
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	6360
	.byte	10
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	136
	.byte	10
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	317
	.byte	10
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	286
	.byte	10
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	286
	.byte	10
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	286
	.byte	11,13,92,9,2,12
	.byte	'DeviceMode',0
	.word	286
	.byte	1,2,35,0,12
	.byte	'ChannelMode',0
	.word	286
	.byte	1,2,35,1,0,10
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	6551
	.byte	10
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	286
	.byte	10
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	286
	.byte	10
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	286
	.byte	10
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	286
	.byte	10
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	286
	.byte	10
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	317
	.byte	10
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	286
	.byte	11,13,140,1,9,4,12
	.byte	'cntTick_u16',0
	.word	317
	.byte	2,2,35,0,12
	.byte	'stTimer',0
	.word	286
	.byte	1,2,35,2,0,10
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	6892
	.byte	10
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	317
	.byte	10
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	286
	.byte	10
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	136
	.byte	10
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	317
	.byte	10
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	286
	.byte	10
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	286
	.byte	11,13,181,1,9,24,12
	.byte	'ChannelState_e',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'LightTimeoutCtr_u32',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	317
	.byte	2,2,35,8,12
	.byte	'ChannelMode_u8',0
	.word	286
	.byte	1,2,35,10,12
	.byte	'BusSmMode_u8',0
	.word	286
	.byte	1,2,35,11,12
	.byte	'UserRequestCtr_u8',0
	.word	286
	.byte	1,2,35,12,12
	.byte	'PassiveRequestState_u8',0
	.word	286
	.byte	1,2,35,13,12
	.byte	'PncRequestCtr_u8',0
	.word	286
	.byte	1,2,35,14,12
	.byte	'InhibitionReqStatus_u8',0
	.word	286
	.byte	1,2,35,15,12
	.byte	'NmNetworkRequestStatus_b',0
	.word	286
	.byte	1,2,35,16,12
	.byte	'DiagnosticRequestState_b',0
	.word	286
	.byte	1,2,35,17,12
	.byte	'CommunicationAllowed_b',0
	.word	286
	.byte	1,2,35,18,12
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	286
	.byte	1,2,35,19,12
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	286
	.byte	1,2,35,20,12
	.byte	'NmNetworkModeStatus_b',0
	.word	286
	.byte	1,2,35,21,0,10
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	7124
	.byte	11,13,206,1,9,10,12
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	317
	.byte	2,2,35,0,12
	.byte	'LimitToNoComCtr_u16',0
	.word	317
	.byte	2,2,35,2,12
	.byte	'RequestedUserMode_t',0
	.word	286
	.byte	1,2,35,4,12
	.byte	'IndicatedUserMode_t',0
	.word	286
	.byte	1,2,35,5,12
	.byte	'numChannelsInFullCom_u8',0
	.word	286
	.byte	1,2,35,6,12
	.byte	'numChannelsInSilentCom_u8',0
	.word	286
	.byte	1,2,35,7,12
	.byte	'numChannelsInNoCom_u8',0
	.word	286
	.byte	1,2,35,8,0,10
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	7628
	.byte	10
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	286
	.byte	10
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	286
	.byte	10
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	286
	.byte	10
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	286
	.byte	10
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	286
	.byte	10
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	6371
	.byte	13,128,8
	.word	286
	.byte	14,255,7,0,10
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	6371
	.byte	10
	.byte	'Fls_LengthType',0,14,173,3,16
	.word	136
	.byte	16
	.byte	'Fls_JobStartType',0,14,175,3,16,1,27
	.byte	'Reserved1',0,1
	.word	286
	.byte	1,7,2,35,0,27
	.byte	'Write',0,1
	.word	286
	.byte	1,6,2,35,0,27
	.byte	'Erase',0,1
	.word	286
	.byte	1,5,2,35,0,27
	.byte	'Read',0,1
	.word	286
	.byte	1,4,2,35,0,27
	.byte	'Compare',0,1
	.word	286
	.byte	1,3,2,35,0,27
	.byte	'Reserved2',0,1
	.word	286
	.byte	3,0,2,35,0,0,10
	.byte	'Fls_JobStartType',0,14,183,3,3
	.word	8470
	.byte	10
	.byte	'Fls_17_Pmu_Job_Type',0,14,187,3,15
	.word	286
	.byte	9
	.word	286
	.byte	22
	.word	286
	.byte	9
	.word	8665
	.byte	13,2
	.word	286
	.byte	14,1,0,16
	.byte	'Fls_17_Pmu_StateType',0,14,198,3,16,48,12
	.byte	'FlsReadAddress',0
	.word	136
	.byte	4,2,35,0,12
	.byte	'FlsWriteAddress',0
	.word	136
	.byte	4,2,35,4,12
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	136
	.byte	4,2,35,8,12
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	136
	.byte	4,2,35,12,12
	.byte	'FlsReadLength',0
	.word	136
	.byte	4,2,35,16,12
	.byte	'FlsWriteLength',0
	.word	136
	.byte	4,2,35,20,12
	.byte	'FlsReadBufferPtr',0
	.word	8660
	.byte	4,2,35,24,12
	.byte	'FlsWriteBufferPtr',0
	.word	8670
	.byte	4,2,35,28,12
	.byte	'FlsJobResult',0
	.word	4874
	.byte	4,2,35,32,12
	.byte	'FlsMode',0
	.word	5032
	.byte	4,2,35,36,12
	.byte	'NotifCaller',0
	.word	286
	.byte	1,2,35,40,12
	.byte	'JobStarted',0
	.word	8470
	.byte	1,2,35,41,12
	.byte	'FlsJobType',0
	.word	8675
	.byte	2,2,35,42,12
	.byte	'FlsOper',0
	.word	286
	.byte	1,2,35,44,12
	.byte	'FlsTimeoutErr',0
	.word	286
	.byte	1,2,35,45,12
	.byte	'FlsTimeoutControl',0
	.word	286
	.byte	1,2,35,46,0,10
	.byte	'Fls_17_Pmu_StateType',0,14,130,4,3
	.word	8684
	.byte	10
	.byte	'Fls_NotifFunctionPtrType',0,14,137,4,16
	.word	879
	.byte	22
	.word	136
	.byte	9
	.word	9162
	.byte	20,1,1,21
	.word	136
	.byte	21
	.word	136
	.byte	21
	.word	9167
	.byte	21
	.word	286
	.byte	0,9
	.word	9172
	.byte	10
	.byte	'Fls_WriteCmdPtrType',0,14,139,4,16
	.word	9196
	.byte	20,1,1,21
	.word	136
	.byte	0,9
	.word	9230
	.byte	10
	.byte	'Fls_EraseCmdPtrType',0,14,144,4,16
	.word	9239
	.byte	17,15,122,9,4,18
	.byte	'FEE_NO_ORDER',0,0,18
	.byte	'FEE_READ_ORDER',0,1,18
	.byte	'FEE_WRITE_ORDER',0,2,18
	.byte	'FEE_INVALIDATE_ORDER',0,3,18
	.byte	'FEE_MAINTAIN_ORDER',0,4,18
	.byte	'FEE_FORCED_READ_ORDER',0,5,0,10
	.byte	'Fee_HlMode_ten',0,15,132,1,2
	.word	9273
	.byte	17,1,147,1,9,4,18
	.byte	'FEE_NORMAL_PRIO_E',0,0,18
	.byte	'FEE_HIGH_PRIO_E',0,1,0,10
	.byte	'Fee_HlPriority_ten',0,1,151,1,2
	.word	9421
	.byte	17,1,246,1,9,4,18
	.byte	'FEE_SECTOR_STATE_UNDEF_E',0,0,18
	.byte	'FEE_SECTOR_ERASED_E',0,1,18
	.byte	'FEE_SECTOR_USED_E',0,2,18
	.byte	'FEE_SECTOR_FULL_E',0,3,18
	.byte	'FEE_SECTOR_REQUEST2ERASE_E',0,4,18
	.byte	'FEE_SECTOR_CONSIDERED_E',0,13,0,10
	.byte	'Fee_SectorState_ten',0,1,254,1,2
	.word	9494
	.byte	17,1,210,2,9,4,18
	.byte	'FEE_LL_MARKER_INIT_E',0,0,18
	.byte	'FEE_LL_MARKER_BLK_CHK_E',0,1,18
	.byte	'FEE_LL_MARKER_BLK_CHK_WAIT_E',0,2,18
	.byte	'FEE_LL_MARKER_BLK_CHK_ERROR_E',0,3,18
	.byte	'FEE_LL_MARKER_BLK_CHK_FINISHED_E',0,4,18
	.byte	'FEE_LL_MARKER_WRITE_WAIT_E',0,5,18
	.byte	'FEE_LL_MARKER_WRITE_ERROR_E',0,6,18
	.byte	'FEE_LL_MARKER_VERIFY_E',0,7,18
	.byte	'FEE_LL_MARKER_VERIFY_WAIT_E',0,8,18
	.byte	'FEE_LL_MARKER_VERIFY_FINISHED_E',0,9,0,10
	.byte	'Fee_LLWrMarkerType_ten',0,1,222,2,2
	.word	9674
	.byte	17,1,225,2,9,4,18
	.byte	'FEE_HL_RDWR_BLK_INIT_E',0,0,18
	.byte	'FEE_HL_SEARCH_BLK_HDR_E',0,1,18
	.byte	'FEE_HL_READ_BLK_HDR_WAIT_E',0,2,18
	.byte	'FEE_HL_CHECK_BLK_HDR_E',0,3,18
	.byte	'FEE_HL_CALC_BLK_CS_E',0,4,18
	.byte	'FEE_HL_CHECK_BLK_CS_E',0,5,18
	.byte	'FEE_HL_RD_DATA_FROM_BLK_E',0,6,18
	.byte	'FEE_HL_COMP_BLK_E',0,7,18
	.byte	'FEE_HL_WR_BLK_E',0,8,0,10
	.byte	'Fee_HLRdWrBlockType_ten',0,1,243,2,2
	.word	10008
	.byte	17,1,246,2,9,4,18
	.byte	'FEE_LL_WR_BLK_INIT_E',0,0,18
	.byte	'FEE_LL_WR_WRITEHEADER_E',0,1,18
	.byte	'FEE_LL_WR_SIZECHECK_HSR_E',0,2,18
	.byte	'FEE_LL_WR_WRITEHEADER_WAIT_E',0,3,18
	.byte	'FEE_LL_WR_VERIFYHEADER_E',0,4,18
	.byte	'FEE_LL_WR_VERIFYHEADER_WAIT_E',0,5,18
	.byte	'FEE_LL_WR_VERIFYHEADER_ERROR_E',0,6,18
	.byte	'FEE_LL_WR_WRITEDATA_SEC_A_E',0,7,18
	.byte	'FEE_LL_WR_WAIT_WRITEDATA_SEC_A_E',0,8,18
	.byte	'FEE_LL_WR_WRITE_ERROR_E',0,9,18
	.byte	'FEE_LL_WR_WRITE_FULL_MARKER_E',0,10,18
	.byte	'FEE_LL_WR_ERASE_SECTOR_E',0,11,18
	.byte	'FEE_LL_WR_WRITE_USED_MARKER_E',0,12,18
	.byte	'FEE_LL_WR_WRITE_START_MARKER_E',0,13,18
	.byte	'FEE_LL_WR_VERIFY_BLK_E',0,14,18
	.byte	'FEE_LL_WR_WRITEHDRPG2_E',0,15,18
	.byte	'FEE_LL_WR_WAIT_WRITEHDRPG2_E',0,16,0,10
	.byte	'Fee_LLWrBlockType_ten',0,1,162,3,2
	.word	10266
	.byte	17,1,165,3,9,4,18
	.byte	'FEE_LL_CMP_BLK_INIT_E',0,0,18
	.byte	'FEE_LL_CMP_HEADER_E',0,1,18
	.byte	'FEE_LL_CMP_WAIT_HEADER_E',0,2,18
	.byte	'FEE_LL_CMP_CHECK_OVERLAP_E',0,3,18
	.byte	'FEE_LL_CMP_DATA_SEC_A_E',0,4,18
	.byte	'FEE_LL_CMP_WAIT_DATA_SEC_A_E',0,5,18
	.byte	'FEE_LL_CMP_FINISHED_E',0,6,0,10
	.byte	'Fee_LLCmpBlkType_ten',0,1,174,3,2
	.word	10801
	.byte	17,1,177,3,9,4,18
	.byte	'FEE_LL_CPY_BLK_INIT_E',0,0,18
	.byte	'FEE_LL_CPY_BLOCK_START_E',0,1,18
	.byte	'FEE_LL_CPY_BLOCK_WAIT_E',0,2,18
	.byte	'FEE_LL_CPY_BLOCK_ERROR_E',0,3,18
	.byte	'FEE_LL_CPY_BLOCK_FINISHED_E',0,4,0,10
	.byte	'Fee_LLCpyBlkType_ten',0,1,184,3,2
	.word	11021
	.byte	17,1,187,3,9,4,18
	.byte	'FEE_LL_CRC_BLK_INIT_E',0,0,18
	.byte	'FEE_LL_CRC_RD_HD_PAGE_E',0,1,18
	.byte	'FEE_LL_CRC_RD_PAGE_E',0,2,18
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_E',0,3,18
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_E',0,4,18
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_ROB_E',0,5,18
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_WAIT_E',0,6,18
	.byte	'FEE_LL_CRC_RD_PAGE_WAIT_E',0,7,18
	.byte	'FEE_LL_CRC_RD_ERROR_E',0,8,0,10
	.byte	'Fee_LLCalcCrcBlkType_ten',0,1,200,3,2
	.word	11192
	.byte	17,1,203,3,9,4,18
	.byte	'FEE_LL_INIT_READ_E',0,0,18
	.byte	'FEE_LL_BLANK_CHECK_E',0,1,18
	.byte	'FEE_LL_BLANK_CHECK_WAIT_E',0,2,18
	.byte	'FEE_LL_READ_PAGE_E',0,3,18
	.byte	'FEE_LL_WAIT_READ_PAGE_E',0,4,18
	.byte	'FEE_LL_READ_ERROR_E',0,5,18
	.byte	'FEE_LL_READ_FINISHED_E',0,6,0,10
	.byte	'Fee_LLRdStateType_ten',0,1,223,3,3
	.word	11479
	.byte	17,1,226,3,9,4,18
	.byte	'FEE_LL_INIT_BLANK_CHECK_E',0,0,18
	.byte	'FEE_LL_PERFORM_BLANK_CHECK_E',0,1,18
	.byte	'FEE_LL_WAIT_PERFORM_BLANK_CHECK_E',0,2,18
	.byte	'FEE_LL_BLANK_CHECK_ERROR_E',0,3,18
	.byte	'FEE_LL_BLANK_CHECK_FINISHED_E',0,4,0,10
	.byte	'Fee_LLBlankCheckType_ten',0,1,233,3,3
	.word	11683
	.byte	17,1,236,3,9,4,18
	.byte	'FEE_LL_FIND_CURRENT_SECTOR_E',0,0,18
	.byte	'FEE_LL_FIND_LAST_HEADER_E',0,1,18
	.byte	'FEE_LL_FINISHED_E',0,2,0,10
	.byte	'Fee_LLFndEmptyPgeType_ten',0,1,249,3,2
	.word	11880
	.byte	17,1,252,3,9,4,18
	.byte	'FEE_LL_SEARCHBLK_INIT_E',0,0,18
	.byte	'FEE_LL_SEARCHBLK_BLK_HEADER_E',0,1,0,10
	.byte	'Fee_LLSearchBlkHdrType_ten',0,1,128,4,2
	.word	12001
	.byte	17,1,132,4,9,4,18
	.byte	'FEE_LL_BLD_UP_CACHE_INIT_E',0,0,18
	.byte	'FEE_LL_BLD_UP_CACHE_READ_E',0,1,0,10
	.byte	'Fee_LLBuildUpCache_ten',0,1,136,4,2
	.word	12102
	.byte	17,1,139,4,9,4,18
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E',0,0,18
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_DO_E',0,1,0,10
	.byte	'Fee_LLBuildUpCacheAllSect_ten',0,1,143,4,2
	.word	12199
	.byte	17,1,168,4,9,4,18
	.byte	'FEE_LL_REORG_INIT_E',0,0,18
	.byte	'FEE_LL_REORG_PREP_SEARCH_BLK_E',0,1,18
	.byte	'FEE_LL_REORG_SEARCH_BLK_E',0,2,18
	.byte	'FEE_LL_REORG_CHECK_BLOCK_CS_E',0,3,18
	.byte	'FEE_LL_REORG_REDUNDANT_BLK_CHK_E',0,4,18
	.byte	'FEE_LL_REORG_WRITE_BLOCK_E',0,5,18
	.byte	'FEE_LL_REORG_FINISHED_E',0,6,0,10
	.byte	'Fee_LLSecReorgType_ten',0,1,193,4,2
	.word	12319
	.byte	17,1,196,4,9,4,18
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_INIT_E',0,0,18
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_SEARCH_HDR_E',0,1,18
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_BLK_CS_E',0,2,0,10
	.byte	'Fee_LLRedundantCpyChk_ten',0,1,201,4,2
	.word	12563
	.byte	17,1,204,4,9,4,18
	.byte	'FEE_LL_CPY_FLS2FLS_INIT_E',0,0,18
	.byte	'FEE_LL_CPY_FLS2FLS_READ_E',0,1,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_READ_E',0,2,18
	.byte	'FEE_LL_CPY_FLS2FLS_READ_ERROR_E',0,3,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_E',0,4,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_WRITE_E',0,5,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_ERROR_E',0,6,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_E',0,7,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_VERIFY_E',0,8,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_ERROR_E',0,9,18
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_E',0,10,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_WRITE_E',0,11,18
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_ERROR_E',0,12,18
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_E',0,13,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_VERIFY_E',0,14,18
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_ERROR_E',0,15,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_E',0,16,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_WRITE_E',0,17,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_ERROR_E',0,18,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_E',0,19,18
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_VERIFY_E',0,20,18
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_ERROR_E',0,21,18
	.byte	'FEE_LL_CPY_FLS2FLS_CHECK_ADR_OVERFLOW_E',0,22,18
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_FULL_MARKER_E',0,23,18
	.byte	'FEE_LL_CPY_FLS2FLS_ERASE_SECTOR_E',0,24,18
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_USED_MARKER_E',0,25,18
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_START_MARKER_E',0,26,0,10
	.byte	'Fee_LLCpyBlkFls2Fls_ten',0,1,133,5,2
	.word	12715
	.byte	17,1,133,6,9,4,18
	.byte	'FEE_ERASESEC_IDLE_E',0,0,18
	.byte	'FEE_ERASESEC_CHECK_CACHE_E',0,1,18
	.byte	'FEE_ERASESEC_START_E',0,2,18
	.byte	'FEE_ERASESEC_DO_E',0,3,18
	.byte	'FEE_ERASESEC_WRITE_MARKER_E',0,4,18
	.byte	'FEE_ERASESEC_ERROR_E',0,5,0,10
	.byte	'Fee_LLEraseStateType_ten',0,1,141,6,2
	.word	13761
	.byte	13,3
	.word	286
	.byte	14,2,0,11,1,151,6,9,16,12
	.byte	'Preamble_au8',0
	.word	13949
	.byte	3,2,35,0,12
	.byte	'BlkStatus_u8',0
	.word	286
	.byte	1,2,35,3,12
	.byte	'FeeIndex_u16',0
	.word	317
	.byte	2,2,35,4,12
	.byte	'BlkLength_u16',0
	.word	317
	.byte	2,2,35,6,12
	.byte	'HdrCrc16_u16',0
	.word	317
	.byte	2,2,35,8,12
	.byte	'BlkCrc32_u32',0
	.word	136
	.byte	4,2,35,12,0,10
	.byte	'Fee_BlkHeader_tst',0,1,159,6,2
	.word	13958
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,46,1,49,19,0,0,7,5,0,49
	.byte	19,0,0,8,21,0,54,15,0,0,9,15,0,73,19,0,0,10,22,0,3,8,58,15,59,15,57,15,73,19,0,0,11,19,1,58,15,59,15,57
	.byte	15,11,15,0,0,12,13,0,3,8,73,19,11,15,56,9,0,0,13,1,1,11,15,73,19,0,0,14,33,0,47,15,0,0,15,21,0,54,15,39
	.byte	12,0,0,16,19,1,3,8,58,15,59,15,57,15,11,15,0,0,17,4,1,58,15,59,15,57,15,11,15,0,0,18,40,0,3,8,28,13,0
	.byte	0,19,59,0,3,8,0,0,20,21,1,54,15,39,12,0,0,21,5,0,73,19,0,0,22,38,0,73,19,0,0,23,23,1,58,15,59,15,57,15
	.byte	11,15,0,0,24,4,1,3,8,58,15,59,15,57,15,11,15,0,0,25,21,0,73,19,54,15,39,12,0,0,26,53,0,73,19,0,0,27,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Prv.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Fee\\src\\Fee_Config.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Fee\\api\\Fee.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     1  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     2  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     3  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     5   * Includes
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     7  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     8  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	     9  #include "Fee.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    10  #include "Fee_Cfg.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    11  #include "Fee_Prv.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    12  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    13  /* Disable the Fee common part when the Fs1 is selected - currently the Fs1 is a complete Fee */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    14  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 != FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    15  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    16  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    17   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    18   * Defines/Macros
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    19   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    20  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    21  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    22  #define FEE_PRV_CONFIG_DOUBLESTORAGE_BITS           (0x0001u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    23  #define FEE_PRV_CONFIG_FIRST_INIT_MIGRATION_BITS    (0x0002u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    24  #define FEE_PRV_CONFIG_VAR_BLOCK_LENGTH_BITS        (0x0004u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    25  #define FEE_PRV_CONFIG_SURVIVAL_BITS                (0x0010u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    26  #define FEE_PRV_CONFIG_ROBUSTNESS_BITS              (0x0020u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    27  #define FEE_PRV_CONFIG_REQUESTER_BITS               (0x0300u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    28  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    29  #define FEE_PRV_CONFIG_REQUESTER_POS    (8u)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    30  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    31  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    32   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    33   * Static declarations
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    34   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    35  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    36  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    37  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    38   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    39   * Implementation
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    40   **********************************************************************************************************************
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    41  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    42  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    43  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    44   * In the end this shall be a constant "variable" or a define.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    45   * To better find out the maximal limit that is possible it is currently located in RAM.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    46   * Here we can change it with the debugger which is important for testing.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    47   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    48   */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    49  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    50  #define FEE_START_SEC_CONST_32
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    51  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    52  uint32 const Fee_Prv_ConfigMaxEffort_cu32 = 1024u;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    53  #define FEE_STOP_SEC_CONST_32
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    54  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    55  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    56  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    57   * \brief   Find the block number (i.e. index) in the block properties table by persistent ID.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    58   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    59   * \param   persistentId_u16    The persistent ID that shall be checked
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    60   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    61   * \return  The block number (i.e. index) of the corresponding block in the block properties table - 0xFFFF if unknown.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    62  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    63  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    64  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    65  uint16 Fee_Prv_ConfigGetBlockNrByPersistentId(uint16 persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    66  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    67      register uint16_least   a_u16       = 0u;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    68      register uint16_least   b_u16       = FEE_NUM_BLOCKS;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    69      register uint16_least   check_u16   = 0u;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    70      uint16                  result_u16  = 0xFFFFu;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    71  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    72      /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    73       * The Fee_BlockProperties_st struct is stored ascending by persistent ID.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    74       * This function uses that fact and does a binary search.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    75       */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    76      while(a_u16 != b_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    77      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    78          check_u16 = a_u16 + ((b_u16 - a_u16) / 2u);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    79          if(Fee_BlockProperties_st[check_u16].BlockPersistentId_u16 < persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    80          {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    81              if(check_u16 == a_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    82              {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    83                  /*
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    84                   * This can only happen if a_u16 + 1 = b_u16.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    85                   * Either b_u16 was once checked and was not index of the searched persistent ID
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    86                   * or b_u16 is still = FEE_NUM_BLOCKS (which is 1 bigger than the last valid index of Fee_BlockProperties_st)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    87                   * and the searched persistent ID is bigger than the biggest configured persistent ID.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    88                   * So if this branch is reached the persistent ID is not known.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    89                   */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    90                  b_u16 = a_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    91              }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    92              else
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    93              {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    94                  a_u16 = check_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    95              }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    96          }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    97          else if(Fee_BlockProperties_st[check_u16].BlockPersistentId_u16 > persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    98          {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	    99              b_u16 = check_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   100          }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   101          else
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   102          {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   103              b_u16       = a_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   104              result_u16  = (uint16)check_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   105          }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   106      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   107  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   108      return(result_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   109  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   110  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   111  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   112   * \brief   Get the length of a block specified by its block number.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   113   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   114   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   115   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   116   * \return  The length of the specified block
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   117  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   118  uint16 Fee_Prv_ConfigGetBlockLengthByBlockNr(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   119  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   120      return(Fee_BlockProperties_st[blocknumber_u16].Length_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   121  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   122  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   123  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   124   * \brief   Get the length of a block specified by its persistent ID.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   125   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   126   * \param   persistentId_u16    Persistent ID of this block
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   127   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   128   * \return  The length of the specified block
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   129  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   130  uint16 Fee_Prv_ConfigGetBlockLengthByPersistentId(uint16 persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   131  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   132      uint16 result_u16   = 0u;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   133      uint16 index_u16    = Fee_Prv_ConfigGetBlockNrByPersistentId(persistentId_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   134  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   135      if(0xFFFFu != index_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   136      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   137          result_u16 = Fee_BlockProperties_st[index_u16].Length_u16;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   138      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   139  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   140      return(result_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   141  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   142  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   143  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   144   * \brief   Get the persistent ID of a specified block.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   145   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   146   * \param   blocknumber_u16 Block number as defined in Fee_Cfg.h
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   147   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   148   * \return  Persistent ID of the specified block
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   149  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   150  uint16 Fee_Prv_ConfigGetPersistentId(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   151  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   152      return(Fee_BlockProperties_st[blocknumber_u16].BlockPersistentId_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   153  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   154  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   155  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   156   * \brief   Check whether migration feature is active for a block.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   157   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   158   * \param   persistentId_u16 Persistent ID of the specified block
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   159   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   160   * \return  TRUE: migration is active, FALSE: migration is not active
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   161  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   162  boolean Fee_Prv_ConfigIsMigrationActive(uint16 persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   163  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   164     boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   165  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   166     uint16 blocknumber_u16 = Fee_Prv_ConfigGetBlockNrByPersistentId(persistentId_u16);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   167  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   168     if ( (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 &
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   169             FEE_PRV_CONFIG_FIRST_INIT_MIGRATION_BITS) == FEE_PRV_CONFIG_FIRST_INIT_MIGRATION_BITS
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   170        )
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   171  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   172     {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   173         result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   174     }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   175  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   176     return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   177  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   178  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   179  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   180   * \brief   Check whether the block length is variable and calculated on runtime.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   181   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   182   * \param  blocknumber_u16 Block number as defined in Fee_Cfg.h
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   183   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   184   * \return  TRUE: block length is variable, FALSE: block length is not variable
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   185  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   186  boolean Fee_Prv_ConfigIsBlockLengthVariable(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   187  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   188     boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   189  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   190     if ( (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 &
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   191             FEE_PRV_CONFIG_VAR_BLOCK_LENGTH_BITS) == FEE_PRV_CONFIG_VAR_BLOCK_LENGTH_BITS
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   192        )
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   193     {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   194         result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   195     }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   196  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   197     return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   198  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   199  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   200  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   201   * \brief   Check whether a block with the specified persistent ID is known by configuration.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   202   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   203   * \param persistentId_u16  Peristent ID which shall be checked
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   204   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   205   * \retval  TRUE    There exists a block in the configuration with the specified persistent ID
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   206   * \retval  FALSE   There does not exist a block in the configuration with the specified persistent ID
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   207  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   208  boolean Fee_Prv_ConfigIsKnown(uint16 persistentId_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   209  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   210      boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   211  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   212      if(0xFFFFu != Fee_Prv_ConfigGetBlockNrByPersistentId(persistentId_u16))
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   213      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   214          result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   215      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   216  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   217      return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   218  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   219  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   220  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   221   * \brief   Does a specified block support writing from an unstable buffer? (For example EnvRam)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   222   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   223   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   224   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   225   * \retval  TRUE    The block does support writing from an unstable buffer
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   226   *                  This means if the flash content is not equal to the RAM content after writing this is not an error
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   227   * \retval  FALSE   The block does not support writing from an unstable buffer
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   228  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   229  boolean Fee_Prv_ConfigIsRobust(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   230  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   231      boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   232  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   233      if(0u != (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 & FEE_PRV_CONFIG_ROBUSTNESS_BITS))
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   234      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   235          result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   236      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   237  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   238      return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   239  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   240  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   241  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   242   * \brief   Is a specified block stored twice in write or invalidate order?
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   243   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   244   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   245   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   246   * \retval  TRUE    The block is stored twice when writing or invalidating
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   247   * \retval  FALSE   The block is single stored when writing or invalidating
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   248  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   249  boolean Fee_Prv_ConfigIsDoubleStorage(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   250  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   251      boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   252  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   253      if(0u != (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 & FEE_PRV_CONFIG_DOUBLESTORAGE_BITS))
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   254      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   255          result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   256      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   257  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   258      return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   259  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   260  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   261  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   262   * \brief   Shall the block be ignored during flash reorganization even when the software does not know it by configuration?
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   263   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   264   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   265   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   266   * \retval  TRUE    The block shall not be ignored during flash reorganization even when the software does not know it by configuration
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   267   * \retval  FALSE   The block shall be ignored during flash reorganization if it is not known by configuration
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   268  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   269  boolean Fee_Prv_ConfigIsSurvival(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   270  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   271      boolean result_b = FALSE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   272  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   273      if(0u != (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 & FEE_PRV_CONFIG_SURVIVAL_BITS))
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   274      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   275          result_b = TRUE;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   276      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   277  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   278      return(result_b);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   279  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   280  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   281  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   282   * \brief   Get the requester of that block. Can be either NvM or adapter.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   283   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   284   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   285   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   286   * \retval  FEE_PRV_REQUESTER_NVM_E     Block is handled by the NvM
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   287   * \retval  FEE_PRV_REQUESTER_ADAPTER_E Block is handled by the adapter
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   288  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   289  Fee_Prv_ConfigRequester_ten Fee_Prv_ConfigGetRequester(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   290  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   291      Fee_Prv_ConfigRequester_ten result_en;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   292      uint32 requesterId_u32 = (Fee_BlockProperties_st[blocknumber_u16].Flags_u16 & FEE_PRV_CONFIG_REQUESTER_BITS) >> FEE_PRV_CONFIG_REQUESTER_POS;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   293      if(1u == requesterId_u32)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   294      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   295          result_en = FEE_PRV_REQUESTER_NVM_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   296      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   297      else if(2u == requesterId_u32)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   298      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   299          result_en = FEE_PRV_REQUESTER_ADAPTER_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   300      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   301      else
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   302      {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   303          result_en = FEE_PRV_REQUESTER_DEBUG_E;
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   304      }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   305      return(result_en);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   306  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   307  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   308  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   309   * \brief   Get the job configured job end notification for a specified block.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   310   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   311   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   312   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   313   * \return Function pointer that is called after finishing a job successfully.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   314  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   315  Fee_Prv_ConfigNotification_tpfn Fee_Prv_ConfigGetJobEndNotification(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   316  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   317     return(Fee_BlockProperties_st[blocknumber_u16].JobEndNotification_pfn);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   318  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   319  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   320  /**
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   321   * \brief   Get the job configured job error notification for a specified block.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   322   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   323   * \param   blocknumber_u16     Block number as defined in Fee_Cfg.h - This is not the persistent ID!
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   324   *
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   325   * \return Function pointer that is called after finishing a job with errors.
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   326  */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   327  Fee_Prv_ConfigNotification_tpfn Fee_Prv_ConfigGetJobErrorNotification(uint16 blocknumber_u16)
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   328  {
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   329      return(Fee_BlockProperties_st[blocknumber_u16].JobErrorNotification_pfn);
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   330  }
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   331  
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   332  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   333  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   334  /* 1 != FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Fee\src\Fee_Config.c	   335  #endif

	; Module end
