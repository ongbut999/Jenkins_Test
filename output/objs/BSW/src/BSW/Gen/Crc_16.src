	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc17704a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Crc_16.src BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c'

	
$TC16X
	
	.sdecl	'.text.Crc_16.Crc_CalculateCRC16',code,cluster('Crc_CalculateCRC16')
	.sect	'.text.Crc_16.Crc_CalculateCRC16'
	.align	2
	
	.global	Crc_CalculateCRC16

; BSW\src\BSW\Gen\Crc\Crc_16.c	     1  
; BSW\src\BSW\Gen\Crc\Crc_16.c	     2  
; BSW\src\BSW\Gen\Crc\Crc_16.c	     3  /*
; BSW\src\BSW\Gen\Crc\Crc_16.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	     5   * Includes
; BSW\src\BSW\Gen\Crc\Crc_16.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	     7   */
; BSW\src\BSW\Gen\Crc\Crc_16.c	     8  #include "Crc.h"
; BSW\src\BSW\Gen\Crc\Crc_16.c	     9  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    10  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    11  /**
; BSW\src\BSW\Gen\Crc\Crc_16.c	    12   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	    13   * Crc_calculateCRC16
; BSW\src\BSW\Gen\Crc\Crc_16.c	    14   *
; BSW\src\BSW\Gen\Crc\Crc_16.c	    15   * \brief Calculates the rest of a of a polynomial division: input is divided by the CRCH16H1021 polynomial
; BSW\src\BSW\Gen\Crc\Crc_16.c	    16   *
; BSW\src\BSW\Gen\Crc\Crc_16.c	    17   * Crc_calculateCRC16 calculates the remainder of a of a polynomial divided by the crc polynomial with Hex-value 0x11021.
; BSW\src\BSW\Gen\Crc\Crc_16.c	    18   * The crc calculation starts with an initial value, Crc_StartValue16.
; BSW\src\BSW\Gen\Crc\Crc_16.c	    19   * The crc remainder is calculated over a data stream *Crc_DataPtr of length Crc_Length.
; BSW\src\BSW\Gen\Crc\Crc_16.c	    20   * Note: No rest manipulation!
; BSW\src\BSW\Gen\Crc\Crc_16.c	    21   *
; BSW\src\BSW\Gen\Crc\Crc_16.c	    22   * \param    Crc_DataPtr       Pointer to the start address of the data block
; BSW\src\BSW\Gen\Crc\Crc_16.c	    23   * \param    Crc_Length        Length of data block to be calculated in bytes
; BSW\src\BSW\Gen\Crc\Crc_16.c	    24   * \param    Crc_StartValue16  Start value when the algorithm starts
; BSW\src\BSW\Gen\Crc\Crc_16.c	    25   * \return                     Remainder after polynominal division *const Crc_DataPtr / CRCH16H1021
; BSW\src\BSW\Gen\Crc\Crc_16.c	    26   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	    27   */
; BSW\src\BSW\Gen\Crc\Crc_16.c	    28  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    29  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    30  /*
; BSW\src\BSW\Gen\Crc\Crc_16.c	    31   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	    32   * TABLE Version, Revision_2
; BSW\src\BSW\Gen\Crc\Crc_16.c	    33   **********************************************************************************************************************
; BSW\src\BSW\Gen\Crc\Crc_16.c	    34  */
; BSW\src\BSW\Gen\Crc\Crc_16.c	    35  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    36  #define CRC_START_SEC_CONST_16
; BSW\src\BSW\Gen\Crc\Crc_16.c	    37  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_16.c	    38  const uint16  CRC_16_H1021_Tbl[((uint16)CRC_16_TABLESIZE)] =
; BSW\src\BSW\Gen\Crc\Crc_16.c	    39  {
; BSW\src\BSW\Gen\Crc\Crc_16.c	    40      /*  0:*/ 0x0000u, 0x1021u, 0x2042u, 0x3063u, 0x4084u, 0x50a5u, 0x60c6u, 0x70e7u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    41      /*  8:*/ 0x8108u, 0x9129u, 0xa14au, 0xb16bu, 0xc18cu, 0xd1adu, 0xe1ceu, 0xf1efu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    42      /* 16:*/ 0x1231u, 0x0210u, 0x3273u, 0x2252u, 0x52b5u, 0x4294u, 0x72f7u, 0x62d6u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    43      /* 24:*/ 0x9339u, 0x8318u, 0xb37bu, 0xa35au, 0xd3bdu, 0xc39cu, 0xf3ffu, 0xe3deu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    44      /* 32:*/ 0x2462u, 0x3443u, 0x0420u, 0x1401u, 0x64e6u, 0x74c7u, 0x44a4u, 0x5485u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    45      /* 40:*/ 0xa56au, 0xb54bu, 0x8528u, 0x9509u, 0xe5eeu, 0xf5cfu, 0xc5acu, 0xd58du,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    46      /* 48:*/ 0x3653u, 0x2672u, 0x1611u, 0x0630u, 0x76d7u, 0x66f6u, 0x5695u, 0x46b4u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    47      /* 56:*/ 0xb75bu, 0xa77au, 0x9719u, 0x8738u, 0xf7dfu, 0xe7feu, 0xd79du, 0xc7bcu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    48      /* 64:*/ 0x48c4u, 0x58e5u, 0x6886u, 0x78a7u, 0x0840u, 0x1861u, 0x2802u, 0x3823u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    49      /* 72:*/ 0xc9ccu, 0xd9edu, 0xe98eu, 0xf9afu, 0x8948u, 0x9969u, 0xa90au, 0xb92bu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    50      /* 80:*/ 0x5af5u, 0x4ad4u, 0x7ab7u, 0x6a96u, 0x1a71u, 0x0a50u, 0x3a33u, 0x2a12u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    51      /* 88:*/ 0xdbfdu, 0xcbdcu, 0xfbbfu, 0xeb9eu, 0x9b79u, 0x8b58u, 0xbb3bu, 0xab1au,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    52      /* 96:*/ 0x6ca6u, 0x7c87u, 0x4ce4u, 0x5cc5u, 0x2c22u, 0x3c03u, 0x0c60u, 0x1c41u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    53      /*104:*/ 0xedaeu, 0xfd8fu, 0xcdecu, 0xddcdu, 0xad2au, 0xbd0bu, 0x8d68u, 0x9d49u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    54      /*112:*/ 0x7e97u, 0x6eb6u, 0x5ed5u, 0x4ef4u, 0x3e13u, 0x2e32u, 0x1e51u, 0x0e70u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    55      /*120:*/ 0xff9fu, 0xefbeu, 0xdfddu, 0xcffcu, 0xbf1bu, 0xaf3au, 0x9f59u, 0x8f78u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    56      /*128:*/ 0x9188u, 0x81a9u, 0xb1cau, 0xa1ebu, 0xd10cu, 0xc12du, 0xf14eu, 0xe16fu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    57      /*136:*/ 0x1080u, 0x00a1u, 0x30c2u, 0x20e3u, 0x5004u, 0x4025u, 0x7046u, 0x6067u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    58      /*144:*/ 0x83b9u, 0x9398u, 0xa3fbu, 0xb3dau, 0xc33du, 0xd31cu, 0xe37fu, 0xf35eu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    59      /*152:*/ 0x02b1u, 0x1290u, 0x22f3u, 0x32d2u, 0x4235u, 0x5214u, 0x6277u, 0x7256u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    60      /*160:*/ 0xb5eau, 0xa5cbu, 0x95a8u, 0x8589u, 0xf56eu, 0xe54fu, 0xd52cu, 0xc50du,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    61      /*168:*/ 0x34e2u, 0x24c3u, 0x14a0u, 0x0481u, 0x7466u, 0x6447u, 0x5424u, 0x4405u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    62      /*176:*/ 0xa7dbu, 0xb7fau, 0x8799u, 0x97b8u, 0xe75fu, 0xf77eu, 0xc71du, 0xd73cu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    63      /*184:*/ 0x26d3u, 0x36f2u, 0x0691u, 0x16b0u, 0x6657u, 0x7676u, 0x4615u, 0x5634u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    64      /*192:*/ 0xd94cu, 0xc96du, 0xf90eu, 0xe92fu, 0x99c8u, 0x89e9u, 0xb98au, 0xa9abu,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    65      /*200:*/ 0x5844u, 0x4865u, 0x7806u, 0x6827u, 0x18c0u, 0x08e1u, 0x3882u, 0x28a3u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    66      /*208:*/ 0xcb7du, 0xdb5cu, 0xeb3fu, 0xfb1eu, 0x8bf9u, 0x9bd8u, 0xabbbu, 0xbb9au,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    67      /*216:*/ 0x4a75u, 0x5a54u, 0x6a37u, 0x7a16u, 0x0af1u, 0x1ad0u, 0x2ab3u, 0x3a92u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    68      /*224:*/ 0xfd2eu, 0xed0fu, 0xdd6cu, 0xcd4du, 0xbdaau, 0xad8bu, 0x9de8u, 0x8dc9u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    69      /*232:*/ 0x7c26u, 0x6c07u, 0x5c64u, 0x4c45u, 0x3ca2u, 0x2c83u, 0x1ce0u, 0x0cc1u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    70      /*240:*/ 0xef1fu, 0xff3eu, 0xcf5du, 0xdf7cu, 0xaf9bu, 0xbfbau, 0x8fd9u, 0x9ff8u,
; BSW\src\BSW\Gen\Crc\Crc_16.c	    71      /*248:*/ 0x6e17u, 0x7e36u, 0x4e55u, 0x5e74u, 0x2e93u, 0x3eb2u, 0x0ed1u, 0x1ef0u
; BSW\src\BSW\Gen\Crc\Crc_16.c	    72  };
; BSW\src\BSW\Gen\Crc\Crc_16.c	    73  #define CRC_STOP_SEC_CONST_16
; BSW\src\BSW\Gen\Crc\Crc_16.c	    74  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_16.c	    75  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    76  #define CRC_START_SEC_CODE
; BSW\src\BSW\Gen\Crc\Crc_16.c	    77  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_16.c	    78  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    79  //[SWS_Crc_00002]
; BSW\src\BSW\Gen\Crc\Crc_16.c	    80  uint16 Crc_CalculateCRC16(const uint8* Crc_DataPtr, uint32 Crc_Length, uint16 Crc_StartValue16,
; Function Crc_CalculateCRC16
.L8:
Crc_CalculateCRC16:	.type	func

; BSW\src\BSW\Gen\Crc\Crc_16.c	    81                            boolean Crc_IsFirstCall)
; BSW\src\BSW\Gen\Crc\Crc_16.c	    82  {
; BSW\src\BSW\Gen\Crc\Crc_16.c	    83      uint32_least    index;
; BSW\src\BSW\Gen\Crc\Crc_16.c	    84      uint16          crcTemp;
; BSW\src\BSW\Gen\Crc\Crc_16.c	    85  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    86  
; BSW\src\BSW\Gen\Crc\Crc_16.c	    87      if (Crc_IsFirstCall != FALSE)
	jeq	d6,#0,.L2
.L48:

; BSW\src\BSW\Gen\Crc\Crc_16.c	    88      {
; BSW\src\BSW\Gen\Crc\Crc_16.c	    89          crcTemp = ((uint16)CRC_INITIAL_VALUE16);
	mov.u	d5,#65535
.L49:
	j	.L3
.L2:

; BSW\src\BSW\Gen\Crc\Crc_16.c	    90      }
; BSW\src\BSW\Gen\Crc\Crc_16.c	    91      else
.L3:

; BSW\src\BSW\Gen\Crc\Crc_16.c	    92      {
; BSW\src\BSW\Gen\Crc\Crc_16.c	    93          crcTemp = Crc_StartValue16;
; BSW\src\BSW\Gen\Crc\Crc_16.c	    94      }
; BSW\src\BSW\Gen\Crc\Crc_16.c	    95      
; BSW\src\BSW\Gen\Crc\Crc_16.c	    96      for (index = 0U; index < Crc_Length; ++index)
	mov	d15,#0
.L35:
	j	.L4
.L5:

; BSW\src\BSW\Gen\Crc\Crc_16.c	    97      {
; BSW\src\BSW\Gen\Crc\Crc_16.c	    98          /* Impact of temporary rest on next crc rest */
; BSW\src\BSW\Gen\Crc\Crc_16.c	    99          crcTemp ^= ((uint16)Crc_DataPtr[index]) << CRC_16_H1021_JUNKREST;
	addsc.a	a15,a4,d15,#0
	ld.bu	d0,[a15]
.L50:
	sha	d0,d0,#8
.L36:
	xor	d0,d5
.L34:

; BSW\src\BSW\Gen\Crc\Crc_16.c	   100          /* Next temporary crc rest */        
; BSW\src\BSW\Gen\Crc\Crc_16.c	   101          crcTemp = (crcTemp << ((uint8)CRC_16_H1021_JUNK)) ^ CRC_16_H1021_Tbl[(crcTemp >> ((uint8)CRC_16_H1021_JUNKREST)) & ((uint8)CRC_16_TABLEMASK)];
	sha	d1,d0,#8
	extr.u	d5,d1,#0,#16
.L33:
	sha	d0,#-8
.L37:
	movh.a	a15,#@his(CRC_16_H1021_Tbl)
	lea	a15,[a15]@los(CRC_16_H1021_Tbl)
.L51:
	addsc.a	a15,a15,d0,#1
	ld.hu	d0,[a15]0
.L38:
	xor	d5,d0
.L52:
	add	d15,#1
.L4:
	jlt.u	d15,d4,.L5
.L53:

; BSW\src\BSW\Gen\Crc\Crc_16.c	   102      }
; BSW\src\BSW\Gen\Crc\Crc_16.c	   103  
; BSW\src\BSW\Gen\Crc\Crc_16.c	   104      return (crcTemp);
	mov	d2,d5
.L39:
	j	.L6

; BSW\src\BSW\Gen\Crc\Crc_16.c	   105  }
.L6:
	ret
.L21:
	
__Crc_CalculateCRC16_function_end:
	.size	Crc_CalculateCRC16,__Crc_CalculateCRC16_function_end-Crc_CalculateCRC16
.L17:
	; End of function
	
	.sdecl	'.rodata.Crc_16.CRC_16_H1021_Tbl',data,rom,cluster('CRC_16_H1021_Tbl')
	.sect	'.rodata.Crc_16.CRC_16_H1021_Tbl'
	.global	CRC_16_H1021_Tbl
	.align	2
CRC_16_H1021_Tbl:	.type	object
	.size	CRC_16_H1021_Tbl,512
	.space	2
	.half	4129,8258,12387,16516
	.half	20645,24774,28903,33032
	.half	37161,41290,45419,49548
	.half	53677,57806,61935,4657
	.half	528,12915,8786,21173
	.half	17044,29431,25302,37689
	.half	33560,45947,41818,54205
	.half	50076,62463,58334,9314
	.half	13379,1056,5121,25830
	.half	29895,17572,21637,42346
	.half	46411,34088,38153,58862
	.half	62927,50604,54669,13907
	.half	9842,5649,1584,30423
	.half	26358,22165,18100,46939
	.half	42874,38681,34616,63455
	.half	59390,55197,51132,18628
	.half	22757,26758,30887,2112
	.half	6241,10242,14371,51660
	.half	55789,59790,63919,35144
	.half	39273,43274,47403,23285
	.half	19156,31415,27286,6769
	.half	2640,14899,10770,56317
	.half	52188,64447,60318,39801
	.half	35672,47931,43802,27814
	.half	31879,19684,23749,11298
	.half	15363,3168,7233,60846
	.half	64911,52716,56781,44330
	.half	48395,36200,40265,32407
	.half	28342,24277,20212,15891
	.half	11826,7761,3696,65439
	.half	61374,57309,53244,48923
	.half	44858,40793,36728,37256
	.half	33193,45514,41451,53516
	.half	49453,61774,57711,4224
	.half	161,12482,8419,20484
	.half	16421,28742,24679,33721
	.half	37784,41979,46042,49981
	.half	54044,58239,62302,689
	.half	4752,8947,13010,16949
	.half	21012,25207,29270,46570
	.half	42443,38312,34185,62830
	.half	58703,54572,50445,13538
	.half	9411,5280,1153,29798
	.half	25671,21540,17413,42971
	.half	47098,34713,38840,59231
	.half	63358,50973,55100,9939
	.half	14066,1681,5808,26199
	.half	30326,17941,22068,55628
	.half	51565,63758,59695,39368
	.half	35305,47498,43435,22596
	.half	18533,30726,26663,6336
	.half	2273,14466,10403,52093
	.half	56156,60223,64286,35833
	.half	39896,43963,48026,19061
	.half	23124,27191,31254,2801
	.half	6864,10931,14994,64814
	.half	60687,56684,52557,48554
	.half	44427,40424,36297,31782
	.half	27655,23652,19525,15522
	.half	11395,7392,3265,61215
	.half	65342,53085,57212,44955
	.half	49082,36825,40952,28183
	.half	32310,20053,24180,11923
	.half	16050,3793,7920
	.calls	'Crc_CalculateCRC16','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L10:
	.word	312
	.half	3
	.word	.L11
	.byte	4
.L9:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L12
.L20:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L27:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	150
.L22:
	.byte	4
	.word	167
.L24:
	.byte	2
	.byte	'unsigned int',0,4,7
.L29:
	.byte	2
	.byte	'unsigned long int',0,4,7,5,1,4
	.word	214
	.byte	6
	.byte	'__codeptr',0,1,1,1
	.word	216
	.byte	6
	.byte	'uint8',0,2,81,25
	.word	150
	.byte	6
	.byte	'uint16',0,2,91,25
	.word	128
	.byte	6
	.byte	'uint32',0,2,106,24
	.word	177
	.byte	6
	.byte	'boolean',0,2,127,25
	.word	150
	.byte	7,128,4
	.word	128
	.byte	8,255,1,0
.L32:
	.byte	3
	.word	299
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L11:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,38,0,73,19,0,0,4,15,0,73,19
	.byte	0,0,5,21,0,54,15,0,0,6,22,0,3,8,58,15,59,15,57,15,73,19,0,0,7,1,1,11,15,73,19,0,0,8,33,0,47,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L12:
	.word	.L41-.L40
.L40:
	.half	3
	.word	.L43-.L42
.L42:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0,0
.L43:
.L41:
	.sdecl	'.debug_info',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_info'
.L13:
	.word	329
	.half	3
	.word	.L14
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L16,.L15
	.byte	2
	.word	.L9
	.byte	3
	.byte	'Crc_CalculateCRC16',0,1,80,8
	.word	.L20
	.byte	1,1,1
	.word	.L8,.L21,.L7
	.byte	4
	.byte	'Crc_DataPtr',0,1,80,40
	.word	.L22,.L23
	.byte	4
	.byte	'Crc_Length',0,1,80,60
	.word	.L24,.L25
	.byte	4
	.byte	'Crc_StartValue16',0,1,80,79
	.word	.L20,.L26
	.byte	4
	.byte	'Crc_IsFirstCall',0,1,81,35
	.word	.L27,.L28
	.byte	5
	.word	.L8,.L21
	.byte	6
	.byte	'index',0,1,83,21
	.word	.L29,.L30
	.byte	6
	.byte	'crcTemp',0,1,84,21
	.word	.L20,.L31
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_abbrev'
.L14:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_line'
.L15:
	.word	.L45-.L44
.L44:
	.half	3
	.word	.L47-.L46
.L46:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c',0,0,0,0,0
.L47:
	.byte	5,5,7,0,5,2
	.word	.L8
	.byte	3,214,0,1,5,17,7,9
	.half	.L48-.L8
	.byte	3,2,1,5,48,9
	.half	.L49-.L48
	.byte	1,5,16,9
	.half	.L3-.L49
	.byte	3,7,1,5,40,9
	.half	.L35-.L3
	.byte	1,9
	.half	.L5-.L35
	.byte	3,3,1,5,49,9
	.half	.L50-.L5
	.byte	1,5,17,9
	.half	.L36-.L50
	.byte	1,5,28,9
	.half	.L34-.L36
	.byte	3,2,1,5,87,9
	.half	.L33-.L34
	.byte	1,5,61,9
	.half	.L37-.L33
	.byte	1,5,77,9
	.half	.L51-.L37
	.byte	1,5,59,9
	.half	.L38-.L51
	.byte	1,5,42,9
	.half	.L52-.L38
	.byte	3,123,1,5,40,9
	.half	.L4-.L52
	.byte	1,5,5,7,9
	.half	.L53-.L4
	.byte	3,8,1,5,1,9
	.half	.L6-.L53
	.byte	3,1,1,7,9
	.half	.L17-.L6
	.byte	0,1,1
.L45:
	.sdecl	'.debug_ranges',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_ranges'
.L16:
	.word	-1,.L8,0,.L17-.L8,0,0
	.sdecl	'.debug_info',debug,cluster('CRC_16_H1021_Tbl')
	.sect	'.debug_info'
.L18:
	.word	158
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Crc\\Crc_16.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L9
	.byte	3
	.byte	'CRC_16_H1021_Tbl',0,1,38,15
	.word	.L32
	.byte	1,5,3
	.word	CRC_16_H1021_Tbl
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('CRC_16_H1021_Tbl')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_loc'
.L7:
	.word	-1,.L8,0,.L21-.L8
	.half	2
	.byte	138,0
	.word	0,0
.L23:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	100
	.word	0,0
.L28:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	86
	.word	0,0
.L25:
	.word	-1,.L8,0,.L21-.L8
	.half	1
	.byte	84
	.word	0,0
.L26:
	.word	-1,.L8,0,.L33-.L8
	.half	1
	.byte	85
	.word	.L38-.L8,.L21-.L8
	.half	1
	.byte	85
	.word	0,0
.L31:
	.word	-1,.L8,0,.L34-.L8
	.half	1
	.byte	85
	.word	.L36-.L8,.L37-.L8
	.half	5
	.byte	144,32,157,32,0
	.word	.L38-.L8,.L21-.L8
	.half	1
	.byte	85
	.word	.L39-.L8,.L21-.L8
	.half	1
	.byte	82
	.word	0,0
.L30:
	.word	-1,.L8,.L35-.L8,.L21-.L8
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L54:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Crc_CalculateCRC16')
	.sect	'.debug_frame'
	.word	24
	.word	.L54,.L8,.L21-.L8
	.byte	8,18,8,19,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Crc\Crc_16.c	   106  
; BSW\src\BSW\Gen\Crc\Crc_16.c	   107  #define CRC_STOP_SEC_CODE
; BSW\src\BSW\Gen\Crc\Crc_16.c	   108  #include "Crc_MemMap.h"
; BSW\src\BSW\Gen\Crc\Crc_16.c	   109  

	; Module end
