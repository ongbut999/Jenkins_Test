	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15672a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\NvM\\NvM_Rb_AuxGetMigrationResult.src BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxGetMigrationResult.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxGetMigrationResult.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	13079
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxGetMigrationResult.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,2,40,9,4,3
	.byte	'NVM_BLOCK_NATIVE',0,0,3
	.byte	'NVM_BLOCK_REDUNDANT',0,1,3
	.byte	'NVM_BLOCK_DATASET',0,2,0,4
	.byte	'unsigned short int',0,2,7,5
	.byte	'NvM_Prv_GetBlockType',0,3,1,212,3,38
	.word	154
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,212,3,75
	.word	221
	.byte	7,0,4
	.byte	'unsigned char',0,1,8,5
	.byte	'NvM_Prv_GetNrNonVolatileBlocks',0,3,1,232,3,20
	.word	298
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,232,3,67
	.word	221
	.byte	7,0,8
	.byte	'void',0,9
	.word	380
	.byte	10
	.word	386
	.byte	5
	.byte	'NvM_Prv_GetRomBlockAddress',0,3,1,173,4,26
	.word	391
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,173,4,69
	.word	221
	.byte	7,0,5
	.byte	'NvM_Prv_Block_IsInRom',0,3,3,142,1,22
	.word	298
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,142,1,60
	.word	221
	.byte	6
	.byte	'idxDataset_u8',0,3,142,1,78
	.word	298
	.byte	11,7,7,0,0,5
	.byte	'NvM_Prv_Block_IsWriteProtected',0,3,3,148,1,22
	.word	298
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,148,1,69
	.word	221
	.byte	7,0,12
	.word	243
	.byte	13
	.word	276
	.byte	7,0,12
	.word	315
	.byte	13
	.word	358
	.byte	7,0,12
	.word	396
	.byte	13
	.word	435
	.byte	7,0,12
	.word	457
	.byte	13
	.word	491
	.byte	13
	.word	511
	.byte	11,14
	.word	243
	.byte	13
	.word	276
	.byte	15
	.word	296
	.byte	0,7,14
	.word	315
	.byte	13
	.word	358
	.byte	15
	.word	378
	.byte	0,7,0,0,12
	.word	539
	.byte	13
	.word	582
	.byte	7,0,16,1,10
	.word	704
	.byte	17
	.byte	'__codeptr',0,4,1,1
	.word	706
	.byte	4
	.byte	'char',0,1,6,17
	.byte	'sint8',0,5,76,25
	.word	729
	.byte	17
	.byte	'uint8',0,5,81,25
	.word	298
	.byte	17
	.byte	'uint16',0,5,91,25
	.word	221
	.byte	4
	.byte	'unsigned int',0,4,7,17
	.byte	'uint32',0,5,106,24
	.word	780
	.byte	4
	.byte	'unsigned long long int',0,8,7,17
	.byte	'uint64',0,5,111,30
	.word	811
	.byte	17
	.byte	'boolean',0,5,127,25
	.word	298
	.byte	17
	.byte	'StatusType',0,6,191,1,27
	.word	298
	.byte	17
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	298
	.byte	18,6,206,1,9,8,19
	.byte	'vendorID',0
	.word	221
	.byte	2,2,35,0,19
	.byte	'moduleID',0
	.word	221
	.byte	2,2,35,2,19
	.byte	'sw_major_version',0
	.word	298
	.byte	1,2,35,4,19
	.byte	'sw_minor_version',0
	.word	298
	.byte	1,2,35,5,19
	.byte	'sw_patch_version',0
	.word	298
	.byte	1,2,35,6,0,17
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	912
	.byte	17
	.byte	'PduIdType',0,7,22,19
	.word	221
	.byte	17
	.byte	'PduLengthType',0,7,26,19
	.word	221
	.byte	2,8,113,9,4,3
	.byte	'TP_DATACONF',0,0,3
	.byte	'TP_DATARETRY',0,1,3
	.byte	'TP_CONFPENDING',0,2,0,17
	.byte	'TpDataStateType',0,8,118,3
	.word	1102
	.byte	17
	.byte	'Can_IdType',0,9,32,16
	.word	780
	.byte	17
	.byte	'Can_HwHandleType',0,9,43,16
	.word	221
	.byte	18,10,93,9,8,19
	.byte	'Class',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'TIN',0
	.word	298
	.byte	1,2,35,1,19
	.byte	'ReturnAddress',0
	.word	780
	.byte	4,2,35,4,0,17
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1222
	.byte	20,68
	.word	780
	.byte	21,16,0,18,10,154,1,9,68,19
	.byte	'store',0
	.word	1302
	.byte	68,2,35,0,0,20,68
	.word	1311
	.byte	21,0,0,17
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1333
	.byte	17
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	780
	.byte	18,10,175,1,9,8,19
	.byte	'sp',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'ctx',0
	.word	780
	.byte	4,2,35,4,0,17
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	1393
	.byte	17
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	1393
	.byte	22,1,1,10
	.word	1478
	.byte	17
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	1481
	.byte	17
	.byte	'ApplicationType',0,10,193,1,23
	.word	298
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,19
	.byte	'app_id',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,1,0,17
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	1544
	.byte	17
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	780
	.byte	17
	.byte	'AreaIdType',0,10,204,1,16
	.word	221
	.byte	17
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	780
	.byte	17
	.byte	'TickType',0,10,221,1,22
	.word	780
	.byte	17
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	780
	.byte	10
	.word	780
	.byte	17
	.byte	'Os_Lockable',0,10,234,1,18
	.word	1786
	.byte	17
	.byte	'CoreIdType',0,10,236,1,16
	.word	221
	.byte	17
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	221
	.byte	2,10,239,1,9,4,3
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,3
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,17
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	1856
	.byte	2,10,174,2,9,4,3
	.byte	'APPLICATION_ACCESSIBLE',0,0,3
	.byte	'APPLICATION_RESTARTING',0,1,3
	.byte	'APPLICATION_TERMINATED',0,2,0,17
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	1949
	.byte	10
	.word	380
	.byte	24,1,1,25
	.word	298
	.byte	25
	.word	2061
	.byte	0,10
	.word	2066
	.byte	17
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2080
	.byte	23
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,19
	.byte	'elapsed',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'previous',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'max',0
	.word	780
	.byte	4,2,35,8,19
	.byte	'cumulative',0
	.word	780
	.byte	4,2,35,12,19
	.byte	'stackbase',0
	.word	1393
	.byte	8,2,35,16,19
	.byte	'stackusage',0
	.word	1393
	.byte	8,2,35,24,19
	.byte	'stackmax',0
	.word	1393
	.byte	8,2,35,32,19
	.byte	'stackbudget',0
	.word	1393
	.byte	8,2,35,40,0,17
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2115
	.byte	10
	.word	2115
	.byte	17
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2313
	.byte	17
	.byte	'EventMaskType',0,10,206,2,15
	.word	298
	.byte	17
	.byte	'Os_imaskType',0,10,211,2,16
	.word	780
	.byte	23
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,19
	.byte	'meter',0
	.word	2115
	.byte	48,2,35,0,0,17
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	2392
	.byte	10
	.word	2392
	.byte	9
	.word	2453
	.byte	23
	.byte	'Os_ISRType_s',0,10,216,2,16,24,19
	.byte	'entry_function',0
	.word	1486
	.byte	4,2,35,0,19
	.byte	'dynamic',0
	.word	2458
	.byte	4,2,35,4,19
	.byte	'imask',0
	.word	780
	.byte	4,2,35,8,19
	.byte	'stackbudget',0
	.word	1393
	.byte	8,2,35,12,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,20,19
	.byte	'application',0
	.word	298
	.byte	1,2,35,21,0,17
	.byte	'Os_ISRType',0,10,223,2,3
	.word	2463
	.byte	10
	.word	1478
	.byte	9
	.word	2463
	.byte	10
	.word	2622
	.byte	17
	.byte	'ISRType',0,10,224,2,46
	.word	2627
	.byte	17
	.byte	'Os_bitmask',0,10,239,2,22
	.word	780
	.byte	17
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	780
	.byte	17
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	780
	.byte	17
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	780
	.byte	26,10,243,2,9,4,19
	.byte	'p0',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'p1',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'p2',0
	.word	780
	.byte	4,2,35,0,0,17
	.byte	'Os_psetType',0,10,247,2,3
	.word	2735
	.byte	26,10,249,2,9,4,19
	.byte	't0',0
	.word	780
	.byte	4,2,35,0,19
	.byte	't1',0
	.word	780
	.byte	4,2,35,0,19
	.byte	't2',0
	.word	780
	.byte	4,2,35,0,0,17
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	2799
	.byte	17
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	298
	.byte	23
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,19
	.byte	'terminate_jump_buf',0
	.word	1342
	.byte	68,2,35,0,19
	.byte	'meter',0
	.word	2115
	.byte	48,2,35,68,19
	.byte	'activation_count',0
	.word	298
	.byte	1,2,35,116,0,17
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	2897
	.byte	20,68
	.word	1311
	.byte	21,0,0,10
	.word	2897
	.byte	9
	.word	3023
	.byte	23
	.byte	'Os_TaskType_s',0,10,134,3,16,40,19
	.byte	'dynamic',0
	.word	3028
	.byte	4,2,35,0,19
	.byte	'entry_function',0
	.word	1486
	.byte	4,2,35,4,19
	.byte	'pset',0
	.word	2735
	.byte	4,2,35,8,19
	.byte	'base_tpmask',0
	.word	2799
	.byte	4,2,35,12,19
	.byte	'tpmask',0
	.word	2799
	.byte	4,2,35,16,19
	.byte	'core_id',0
	.word	221
	.byte	2,2,35,20,19
	.byte	'index',0
	.word	780
	.byte	4,2,35,24,19
	.byte	'stackbudget',0
	.word	1393
	.byte	8,2,35,28,19
	.byte	'activation_count',0
	.word	298
	.byte	1,2,35,36,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,37,19
	.byte	'application',0
	.word	298
	.byte	1,2,35,38,0,17
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3033
	.byte	9
	.word	3033
	.byte	10
	.word	3283
	.byte	17
	.byte	'TaskType',0,10,147,3,47
	.word	3288
	.byte	27
	.byte	'Os_TaskStateType',0,10,155,3,6,4,3
	.byte	'SUSPENDED',0,0,3
	.byte	'READY',0,1,3
	.byte	'WAITING',0,2,3
	.byte	'RUNNING',0,3,0,17
	.byte	'TaskStateType',0,10,156,3,31
	.word	3311
	.byte	26,10,167,3,3,4,19
	.byte	'tpmask',0
	.word	2799
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,19
	.byte	'saved_priority',0
	.word	3398
	.byte	4,2,35,0,0,17
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	3421
	.byte	10
	.word	3421
	.byte	9
	.word	3501
	.byte	23
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,19
	.byte	'dynamic',0
	.word	3506
	.byte	4,2,35,0,19
	.byte	'tpmask',0
	.word	2799
	.byte	4,2,35,4,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,8,0,17
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	3511
	.byte	18,10,181,3,9,12,19
	.byte	'maxallowedvalue',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'ticksperbase',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'mincycle',0
	.word	780
	.byte	4,2,35,8,0,17
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	3610
	.byte	18,10,206,3,9,8,19
	.byte	'Running',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'Pending',0
	.word	298
	.byte	1,2,35,1,19
	.byte	'Delay',0
	.word	780
	.byte	4,2,35,4,0,17
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	3705
	.byte	28
	.word	298
	.byte	1,1,10
	.word	3791
	.byte	17
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	3798
	.byte	23
	.byte	's_swd',0,10,222,3,12,4,19
	.byte	'count',0
	.word	780
	.byte	4,2,35,0,0,26,10,221,3,3,4,19
	.byte	'sw',0
	.word	3834
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,19
	.byte	'type_dependent',0
	.word	3862
	.byte	4,2,35,0,0,17
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	3881
	.byte	10
	.word	3881
	.byte	9
	.word	3959
	.byte	23
	.byte	'Os_CounterType_s',0,10,227,3,16,28,19
	.byte	'dynamic',0
	.word	3964
	.byte	4,2,35,0,19
	.byte	'advincr',0
	.word	3803
	.byte	4,2,35,4,19
	.byte	'base',0
	.word	3610
	.byte	12,2,35,8,19
	.byte	'core',0
	.word	2061
	.byte	4,2,35,20,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,24,19
	.byte	'application',0
	.word	298
	.byte	1,2,35,25,0,17
	.byte	'Os_CounterType',0,10,234,3,3
	.word	3969
	.byte	10
	.word	3791
	.byte	9
	.word	3969
	.byte	10
	.word	4121
	.byte	17
	.byte	'CounterType',0,10,235,3,52
	.word	4126
	.byte	27
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,3
	.byte	'SCHEDULETABLE_STOPPED',0,0,3
	.byte	'SCHEDULETABLE_NEXT',0,1,3
	.byte	'SCHEDULETABLE_WAITING',0,2,3
	.byte	'SCHEDULETABLE_RUNNING',0,3,3
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,17
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4152
	.byte	9
	.word	.L6-.L3
	.byte	10
	.word	4352
	.byte	17
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	4357
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,19
	.byte	'match',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'next',0
	.word	4362
	.byte	4,2,35,4,19
	.byte	'state',0
	.word	4152
	.byte	4,2,35,8,19
	.byte	'config',0
	.word	221
	.byte	2,2,35,12,0,10
	.word	4389
	.byte	9
	.word	4482
.L6:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,19
	.byte	'dynamic',0
	.word	4487
	.byte	4,2,35,0,19
	.byte	'counter',0
	.word	4131
	.byte	4,2,35,4,19
	.byte	'repeat',0
	.word	298
	.byte	1,2,35,8,19
	.byte	'config',0
	.word	221
	.byte	2,2,35,10,19
	.byte	'initial',0
	.word	298
	.byte	1,2,35,12,19
	.byte	'access',0
	.word	298
	.byte	1,2,35,13,19
	.byte	'application',0
	.word	298
	.byte	1,2,35,14,0,17
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	4492
	.byte	9
	.word	4492
	.byte	10
	.word	4672
	.byte	9
	.word	3969
	.byte	10
	.word	4682
	.byte	29
	.word	1791
	.byte	29
	.word	2735
	.byte	29
	.word	2632
	.byte	29
	.word	3293
	.byte	29
	.word	2799
	.byte	29
	.word	298
	.byte	29
	.word	3293
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,19
	.byte	'TrapInfo',0
	.word	1222
	.byte	8,2,35,0,19
	.byte	'lock_taskaccess',0
	.word	4692
	.byte	4,2,35,8,19
	.byte	'ReadyTasks',0
	.word	4697
	.byte	4,2,35,12,19
	.byte	'RunningISR',0
	.word	4702
	.byte	4,2,35,16,19
	.byte	'RunningTask',0
	.word	4707
	.byte	4,2,35,20,19
	.byte	'RunningTPMask',0
	.word	4712
	.byte	4,2,35,24,19
	.byte	'CurrentMeteredObject',0
	.word	2318
	.byte	4,2,35,28,19
	.byte	'IdleMeter',0
	.word	2115
	.byte	48,2,35,32,19
	.byte	'AppAccess',0
	.word	298
	.byte	1,2,35,80,19
	.byte	'AppOverride',0
	.word	4717
	.byte	1,2,35,81,19
	.byte	'GetStackValueAdjust',0
	.word	1393
	.byte	8,2,35,84,19
	.byte	'InErrorHook',0
	.word	298
	.byte	1,2,35,92,19
	.byte	'ChainTaskRef',0
	.word	4722
	.byte	4,2,35,96,19
	.byte	'GetStackUsageAdjust',0
	.word	1393
	.byte	8,2,35,100,19
	.byte	'InProtectionHook',0
	.word	298
	.byte	1,2,35,108,19
	.byte	'CoreIsActive',0
	.word	298
	.byte	1,2,35,109,19
	.byte	'InShutdownHook',0
	.word	298
	.byte	1,2,35,110,0,17
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	4727
	.byte	10
	.word	780
	.byte	9
	.word	2463
	.byte	10
	.word	5183
	.byte	9
	.word	3033
	.byte	10
	.word	5193
	.byte	10
	.word	2115
	.byte	23
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,19
	.byte	'DisableAllImask',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'SuspendAllImask',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'SuspendOSImask',0
	.word	780
	.byte	4,2,35,8,19
	.byte	'DisableAllCount',0
	.word	780
	.byte	4,2,35,12,19
	.byte	'SuspendAllCount',0
	.word	780
	.byte	4,2,35,16,19
	.byte	'SuspendOSCount',0
	.word	780
	.byte	4,2,35,20,19
	.byte	'RestartJumpBuf',0
	.word	1342
	.byte	68,2,35,24,19
	.byte	'Restartable',0
	.word	298
	.byte	1,2,35,92,0,17
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5208
	.byte	17
	.byte	'unsigned_int',0,11,116,22
	.word	780
	.byte	17
	.byte	'Can_TxObjPriorityClassType',0,12,219,3,16
	.word	780
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,12,231,3,16,8,19
	.byte	'MsgObjId',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'HwControllerId',0
	.word	298
	.byte	1,2,35,1,19
	.byte	'TxObjPriorityClass',0
	.word	780
	.byte	4,2,35,4,0,17
	.byte	'Can_TxHwObjectConfigType',0,12,252,3,3
	.word	5506
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,12,129,4,16,12,19
	.byte	'MaskRef',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'MsgId',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'MsgObjId',0
	.word	298
	.byte	1,2,35,8,19
	.byte	'HwControllerId',0
	.word	298
	.byte	1,2,35,9,0,17
	.byte	'Can_RxHwObjectConfigType',0,12,147,4,3
	.word	5642
	.byte	20,4
	.word	298
	.byte	21,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,12,181,4,16,4,19
	.byte	'ControllerMOMap',0
	.word	5782
	.byte	4,2,35,0,0,17
	.byte	'Can_ControllerMOMapConfigType',0,12,184,4,3
	.word	5791
	.byte	23
	.byte	'Can_NPCRValueType',0,12,188,4,16,2,19
	.byte	'Can_NPCRValue',0
	.word	221
	.byte	2,2,35,0,0,17
	.byte	'Can_NPCRValueType',0,12,191,4,3
	.word	5892
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,194,4,16,8,19
	.byte	'CanControllerBaudrate',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'CanControllerBaudrateCfg',0
	.word	221
	.byte	2,2,35,4,0,17
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,198,4,3
	.word	5967
	.byte	9
	.word	5967
	.byte	10
	.word	6132
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,12,201,4,16,4,19
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6137
	.byte	4,2,35,0,0,17
	.byte	'Can_BaudrateConfigPtrType',0,12,204,4,3
	.word	6142
	.byte	23
	.byte	'Can_EventHandlingType',0,12,226,4,16,4,19
	.byte	'CanEventType',0
	.word	5782
	.byte	4,2,35,0,0,17
	.byte	'Can_EventHandlingType',0,12,229,4,3
	.word	6242
	.byte	17
	.byte	'Rte_TransformerErrorCode',0,13,130,1,15
	.word	298
	.byte	17
	.byte	'Rte_TransformerClass',0,13,131,1,15
	.word	298
	.byte	18,13,168,1,9,12,19
	.byte	'in',0
	.word	2061
	.byte	4,2,35,0,19
	.byte	'out',0
	.word	2061
	.byte	4,2,35,4,19
	.byte	'used',0
	.word	221
	.byte	2,2,35,8,19
	.byte	'lost_data',0
	.word	298
	.byte	1,2,35,10,0,17
	.byte	'Rte_QDynType',0,13,173,1,3
	.word	6388
	.byte	2,13,175,1,9,4,3
	.byte	'RTE_DRA',0,0,3
	.byte	'RTE_WOWP',0,1,3
	.byte	'RTE_TASK',0,2,3
	.byte	'RTE_ARE',0,3,3
	.byte	'RTE_EV',0,4,3
	.byte	'RTE_MSI',0,5,0,17
	.byte	'Rte_NotificationType',0,13,182,1,3
	.word	6475
	.byte	10
	.word	6388
	.byte	23
	.byte	'Rte_QCmnType',0,13,184,1,16,24,19
	.byte	'dynamic',0
	.word	6573
	.byte	4,2,35,0,19
	.byte	'copy',0
	.word	298
	.byte	1,2,35,4,19
	.byte	'queue_size',0
	.word	221
	.byte	2,2,35,6,19
	.byte	'element_size',0
	.word	221
	.byte	2,2,35,8,19
	.byte	'buffer_start',0
	.word	2061
	.byte	4,2,35,12,19
	.byte	'buffer_end',0
	.word	2061
	.byte	4,2,35,16,19
	.byte	'notification_type',0
	.word	6475
	.byte	4,2,35,20,0,17
	.byte	'Rte_QCmnType',0,13,192,1,3
	.word	6578
	.byte	17
	.byte	'Rte_AlarmRefType',0,13,224,1,32
	.word	780
	.byte	17
	.byte	'Rte_AlarmIndexType',0,13,226,1,32
	.word	221
	.byte	20,128,8
	.word	298
	.byte	21,255,7,0,17
	.byte	'Impl_NVM_DstPtrType_1024',0,14,50,15
	.word	6816
	.byte	17
	.byte	'CanIf_u32_impl',0,14,69,16
	.word	780
	.byte	17
	.byte	'CanIf_u16_impl',0,14,71,16
	.word	221
	.byte	17
	.byte	'CanIf_u8_impl',0,14,73,15
	.word	298
	.byte	17
	.byte	'CanIf_ControllerModeType_Enum_impl',0,14,88,15
	.word	298
	.byte	17
	.byte	'CanIf_PduModeType_Enum_impl',0,14,90,15
	.word	298
	.byte	18,14,92,9,2,19
	.byte	'DeviceMode',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'ChannelMode',0
	.word	298
	.byte	1,2,35,1,0,17
	.byte	'CanIf_ControllerStateType_struct_impl',0,14,95,3
	.word	7007
	.byte	17
	.byte	'CanIf_NotifStatusType_Enum_impl',0,14,100,15
	.word	298
	.byte	17
	.byte	'CanSM_boolean_Impl',0,14,120,15
	.word	298
	.byte	17
	.byte	'CanSM_u8_Impl',0,14,123,15
	.word	298
	.byte	17
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,14,128,1,15
	.word	298
	.byte	17
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,14,132,1,15
	.word	298
	.byte	17
	.byte	'CanSM_u16_Impl',0,14,136,1,16
	.word	221
	.byte	17
	.byte	'CanSM_TimerStateType_Enum_impl',0,14,138,1,15
	.word	298
	.byte	18,14,140,1,9,4,19
	.byte	'cntTick_u16',0
	.word	221
	.byte	2,2,35,0,19
	.byte	'stTimer',0
	.word	298
	.byte	1,2,35,2,0,17
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,14,143,1,3
	.word	7348
	.byte	17
	.byte	'Com_impl_u16',0,14,154,1,16
	.word	221
	.byte	17
	.byte	'Com_impl_u8',0,14,157,1,15
	.word	298
	.byte	17
	.byte	'ComM_uint32_Impl',0,14,173,1,16
	.word	780
	.byte	17
	.byte	'ComM_uint16_Impl',0,14,175,1,16
	.word	221
	.byte	17
	.byte	'ComM_uint8_Impl',0,14,177,1,15
	.word	298
	.byte	17
	.byte	'ComM_bool_Impl',0,14,179,1,15
	.word	298
	.byte	18,14,181,1,9,24,19
	.byte	'ChannelState_e',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'LightTimeoutCtr_u32',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	221
	.byte	2,2,35,8,19
	.byte	'ChannelMode_u8',0
	.word	298
	.byte	1,2,35,10,19
	.byte	'BusSmMode_u8',0
	.word	298
	.byte	1,2,35,11,19
	.byte	'UserRequestCtr_u8',0
	.word	298
	.byte	1,2,35,12,19
	.byte	'PassiveRequestState_u8',0
	.word	298
	.byte	1,2,35,13,19
	.byte	'PncRequestCtr_u8',0
	.word	298
	.byte	1,2,35,14,19
	.byte	'InhibitionReqStatus_u8',0
	.word	298
	.byte	1,2,35,15,19
	.byte	'NmNetworkRequestStatus_b',0
	.word	298
	.byte	1,2,35,16,19
	.byte	'DiagnosticRequestState_b',0
	.word	298
	.byte	1,2,35,17,19
	.byte	'CommunicationAllowed_b',0
	.word	298
	.byte	1,2,35,18,19
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	298
	.byte	1,2,35,19,19
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	298
	.byte	1,2,35,20,19
	.byte	'NmNetworkModeStatus_b',0
	.word	298
	.byte	1,2,35,21,0,17
	.byte	'ComM_ChannelStruct_Impl',0,14,197,1,3
	.word	7580
	.byte	18,14,206,1,9,10,19
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	221
	.byte	2,2,35,0,19
	.byte	'LimitToNoComCtr_u16',0
	.word	221
	.byte	2,2,35,2,19
	.byte	'RequestedUserMode_t',0
	.word	298
	.byte	1,2,35,4,19
	.byte	'IndicatedUserMode_t',0
	.word	298
	.byte	1,2,35,5,19
	.byte	'numChannelsInFullCom_u8',0
	.word	298
	.byte	1,2,35,6,19
	.byte	'numChannelsInSilentCom_u8',0
	.word	298
	.byte	1,2,35,7,19
	.byte	'numChannelsInNoCom_u8',0
	.word	298
	.byte	1,2,35,8,0,17
	.byte	'ComM_UserStruct_Impl',0,14,214,1,3
	.word	8084
	.byte	17
	.byte	'Dcm_IOOperationResponseType',0,14,252,1,15
	.word	298
	.byte	17
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	14,138,2,15
	.word	298
	.byte	17
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,14,146,2,15
	.word	298
	.byte	17
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,14,150,2,15
	.word	298
	.byte	17
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,14,154,2,15
	.word	298
	.byte	17
	.byte	'NvM_BlockIdType',0,14,215,2,16
	.word	221
	.byte	17
	.byte	'NvM_RequestResultType',0,14,225,2,15
	.word	298
	.byte	17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,14,243,3,34
	.word	6827
	.byte	20,128,8
	.word	298
	.byte	21,255,7,0,17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,14,246,3,34
	.word	6827
	.byte	2,15,31,9,4,3
	.byte	'MEMIF_JOB_OK',0,0,3
	.byte	'MEMIF_JOB_FAILED',0,1,3
	.byte	'MEMIF_JOB_PENDING',0,2,3
	.byte	'MEMIF_JOB_CANCELED',0,3,3
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,3
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,17
	.byte	'MemIf_JobResultType',0,15,39,2
	.word	8958
	.byte	2,15,41,9,4,3
	.byte	'MEMIF_MODE_SLOW',0,0,3
	.byte	'MEMIF_MODE_FAST',0,1,0,17
	.byte	'MemIf_ModeType',0,15,45,2
	.word	9116
	.byte	17
	.byte	'NvM_BlockManagementType',0,2,45,3
	.word	154
	.byte	2,2,49,9,4,3
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,3
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,3
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,3
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,3
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,3
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,3
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,17
	.byte	'NvM_Prv_Activities_ten',0,2,58,3
	.word	9213
	.byte	2,2,104,9,4,3
	.byte	'NvM_Prv_idJob_Idle_e',0,0,3
	.byte	'NvM_Prv_idJob_Read_e',0,1,3
	.byte	'NvM_Prv_idJob_Write_e',0,2,3
	.byte	'NvM_Prv_idJob_Erase_e',0,3,3
	.byte	'NvM_Prv_idJob_Restore_e',0,4,3
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,3
	.byte	'NvM_Prv_idJob_Validate_e',0,6,3
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,3
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,3
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,3
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,3
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,3
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,3
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,17
	.byte	'NvM_Prv_idJob_ten',0,2,115,3
	.word	9454
	.byte	17
	.byte	'NvM_Prv_ServiceBit_tuo',0,2,168,1,16
	.word	221
	.byte	17
	.byte	'NvM_Prv_idService_tuo',0,2,173,1,15
	.word	298
	.byte	17
	.byte	'NvM_Prv_idQueue_tuo',0,2,206,1,15
	.word	298
	.byte	18,2,210,1,9,12,19
	.byte	'idService_uo',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'idBlock_uo',0
	.word	221
	.byte	2,2,35,2,19
	.byte	'ServiceBit_uo',0
	.word	221
	.byte	2,2,35,4,19
	.byte	'BlockData_pv',0
	.word	2061
	.byte	4,2,35,8,0,17
	.byte	'NvM_Prv_QueueEntry_tst',0,2,225,1,3
	.word	10011
	.byte	10
	.word	298
	.byte	18,2,227,1,9,20,19
	.byte	'idJob_en',0
	.word	9454
	.byte	4,2,35,0,19
	.byte	'idBlock_uo',0
	.word	221
	.byte	2,2,35,4,19
	.byte	'RamBlock_pu8',0
	.word	10137
	.byte	4,2,35,8,19
	.byte	'idxDataset_u8',0
	.word	298
	.byte	1,2,35,12,19
	.byte	'Result_en',0
	.word	8958
	.byte	4,2,35,16,0,17
	.byte	'NvM_Prv_JobData_tst',0,2,240,1,3
	.word	10142
	.byte	17
	.byte	'Rte_TaskRefType',0,16,184,1,32
	.word	3293
	.byte	17
	.byte	'Rte_EventRefType',0,16,185,1,32
	.word	298
	.byte	17
	.byte	'Rte_EventType',0,16,186,1,32
	.word	780
	.byte	17
	.byte	'Rte_REActCounterType',0,16,252,1,15
	.word	298
	.byte	10
	.word	298
	.byte	17
	.byte	'Rte_REActCounterRefType',0,16,253,1,58
	.word	10384
	.byte	18,16,255,1,9,8,19
	.byte	'task',0
	.word	10280
	.byte	4,2,35,0,19
	.byte	'acnt',0
	.word	10389
	.byte	4,2,35,4,0,17
	.byte	'Rte_REContainerType',0,16,130,2,3
	.word	10422
	.byte	9
	.word	3033
	.byte	10
	.word	10486
	.byte	10
	.word	298
	.byte	9
	.word	10422
	.byte	10
	.word	10501
	.byte	17
	.byte	'Rte_REContainerRefType',0,16,132,2,60
	.word	10506
	.byte	17
	.byte	'Rte_MSICounterType',0,16,149,2,16
	.word	221
	.byte	10
	.word	221
	.byte	17
	.byte	'Rte_MSICounterRefType',0,16,150,2,56
	.word	10571
	.byte	17
	.byte	'Rte_MSIPendingFlagType',0,16,152,2,17
	.word	298
	.byte	10
	.word	298
	.byte	17
	.byte	'Rte_MSIPendingFlagRefType',0,16,153,2,60
	.word	10639
	.byte	18,16,163,2,9,24,19
	.byte	'counter',0
	.word	10576
	.byte	4,2,35,0,19
	.byte	'incCounter',0
	.word	298
	.byte	1,2,35,4,19
	.byte	'pending',0
	.word	10644
	.byte	4,2,35,8,19
	.byte	'osTask',0
	.word	10280
	.byte	4,2,35,12,19
	.byte	'acnt',0
	.word	10389
	.byte	4,2,35,16,19
	.byte	'osEvent',0
	.word	298
	.byte	1,2,35,20,19
	.byte	'MSIInit',0
	.word	221
	.byte	2,2,35,22,0,17
	.byte	'Rte_MSITableEntry',0,16,172,2,3
	.word	10679
	.byte	10
	.word	221
	.byte	10
	.word	298
	.byte	17
	.byte	'Rte_TaskArrayIndex',0,16,179,2,16
	.word	298
	.byte	17
	.byte	'Rte_NrWaitingTasks',0,16,180,2,16
	.word	298
	.byte	18,16,182,2,9,4,19
	.byte	'pending',0
	.word	298
	.byte	1,2,35,0,19
	.byte	'count',0
	.word	298
	.byte	1,2,35,1,19
	.byte	'firstWaitingTask',0
	.word	298
	.byte	1,2,35,2,0,17
	.byte	'Rte_WaitableDatum',0,16,186,2,3
	.word	10897
	.byte	10
	.word	10897
	.byte	18,16,226,2,9,12,19
	.byte	'event_id',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'wd',0
	.word	10989
	.byte	4,2,35,4,19
	.byte	'timeout',0
	.word	780
	.byte	4,2,35,8,0,17
	.byte	'Rte_WOWP_NotificationType',0,16,230,2,3
	.word	10994
	.byte	9
	.word	10994
	.byte	10
	.word	11083
	.byte	17
	.byte	'Rte_WOWP_NotificationRefType',0,16,232,2,66
	.word	11088
	.byte	17
	.byte	'Rte_ARE_NotificationType',0,16,234,2,29
	.word	10422
	.byte	23
	.byte	'Rte_QTaskType',0,16,243,2,16,28,19
	.byte	'cmn',0
	.word	6578
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10280
	.byte	4,2,35,24,0,17
	.byte	'Rte_QTaskType',0,16,246,2,3
	.word	11165
	.byte	23
	.byte	'Rte_QREType',0,16,250,2,16,28,19
	.byte	'cmn',0
	.word	6578
	.byte	24,2,35,0,19
	.byte	're',0
	.word	10511
	.byte	4,2,35,24,0,17
	.byte	'Rte_QREType',0,16,253,2,3
	.word	11236
	.byte	9
	.word	10422
	.byte	10
	.word	11301
	.byte	23
	.byte	'Rte_QWWPType',0,16,129,3,16,28,19
	.byte	'cmn',0
	.word	6578
	.byte	24,2,35,0,19
	.byte	'wwp',0
	.word	11093
	.byte	4,2,35,24,0,17
	.byte	'Rte_QWWPType',0,16,132,3,3
	.word	11311
	.byte	9
	.word	10994
	.byte	10
	.word	11379
	.byte	23
	.byte	'Rte_QEvType',0,16,136,3,16,36,19
	.byte	'cmn',0
	.word	6578
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10280
	.byte	4,2,35,24,19
	.byte	'mask',0
	.word	298
	.byte	1,2,35,28,19
	.byte	'acnt',0
	.word	10389
	.byte	4,2,35,32,0,17
	.byte	'Rte_QEvType',0,16,141,3,3
	.word	11389
	.byte	23
	.byte	'Rte_QMSIType',0,16,145,3,16,48,19
	.byte	'cmn',0
	.word	6578
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10280
	.byte	4,2,35,24,19
	.byte	'mask',0
	.word	298
	.byte	1,2,35,28,19
	.byte	'acnt',0
	.word	10389
	.byte	4,2,35,32,19
	.byte	'msiCounter',0
	.word	10576
	.byte	4,2,35,36,19
	.byte	'msiPending',0
	.word	10644
	.byte	4,2,35,40,19
	.byte	'msiLimit',0
	.word	221
	.byte	2,2,35,44,0,17
	.byte	'Rte_QMSIType',0,16,153,3,3
	.word	11484
	.byte	17
	.byte	'Fls_LengthType',0,17,173,3,16
	.word	780
	.byte	23
	.byte	'Fls_JobStartType',0,17,175,3,16,1,30
	.byte	'Reserved1',0,1
	.word	298
	.byte	1,7,2,35,0,30
	.byte	'Write',0,1
	.word	298
	.byte	1,6,2,35,0,30
	.byte	'Erase',0,1
	.word	298
	.byte	1,5,2,35,0,30
	.byte	'Read',0,1
	.word	298
	.byte	1,4,2,35,0,30
	.byte	'Compare',0,1
	.word	298
	.byte	1,3,2,35,0,30
	.byte	'Reserved2',0,1
	.word	298
	.byte	3,0,2,35,0,0,17
	.byte	'Fls_JobStartType',0,17,183,3,3
	.word	11663
	.byte	17
	.byte	'Fls_17_Pmu_Job_Type',0,17,187,3,15
	.word	298
	.byte	9
	.word	298
	.byte	10
	.word	11853
	.byte	20,2
	.word	298
	.byte	21,1,0,23
	.byte	'Fls_17_Pmu_StateType',0,17,198,3,16,48,19
	.byte	'FlsReadAddress',0
	.word	780
	.byte	4,2,35,0,19
	.byte	'FlsWriteAddress',0
	.word	780
	.byte	4,2,35,4,19
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	780
	.byte	4,2,35,8,19
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	780
	.byte	4,2,35,12,19
	.byte	'FlsReadLength',0
	.word	780
	.byte	4,2,35,16,19
	.byte	'FlsWriteLength',0
	.word	780
	.byte	4,2,35,20,19
	.byte	'FlsReadBufferPtr',0
	.word	10137
	.byte	4,2,35,24,19
	.byte	'FlsWriteBufferPtr',0
	.word	11858
	.byte	4,2,35,28,19
	.byte	'FlsJobResult',0
	.word	8958
	.byte	4,2,35,32,19
	.byte	'FlsMode',0
	.word	9116
	.byte	4,2,35,36,19
	.byte	'NotifCaller',0
	.word	298
	.byte	1,2,35,40,19
	.byte	'JobStarted',0
	.word	11663
	.byte	1,2,35,41,19
	.byte	'FlsJobType',0
	.word	11863
	.byte	2,2,35,42,19
	.byte	'FlsOper',0
	.word	298
	.byte	1,2,35,44,19
	.byte	'FlsTimeoutErr',0
	.word	298
	.byte	1,2,35,45,19
	.byte	'FlsTimeoutControl',0
	.word	298
	.byte	1,2,35,46,0,17
	.byte	'Fls_17_Pmu_StateType',0,17,130,4,3
	.word	11872
	.byte	17
	.byte	'Fls_NotifFunctionPtrType',0,17,137,4,16
	.word	1481
	.byte	9
	.word	780
	.byte	10
	.word	12350
	.byte	24,1,1,25
	.word	780
	.byte	25
	.word	780
	.byte	25
	.word	12355
	.byte	25
	.word	298
	.byte	0,10
	.word	12360
	.byte	17
	.byte	'Fls_WriteCmdPtrType',0,17,139,4,16
	.word	12384
	.byte	24,1,1,25
	.word	780
	.byte	0,10
	.word	12418
	.byte	17
	.byte	'Fls_EraseCmdPtrType',0,17,144,4,16
	.word	12427
	.byte	31
	.word	298
	.byte	1,1,25
	.word	2061
	.byte	0,10
	.word	12461
	.byte	17
	.byte	'NvM_Prv_ExplicitSync_Copy_tpfct',0,1,29,26
	.word	12474
	.byte	2,1,34,9,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_READ_ALL',0,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_WRITE_ALL',0,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_FIRST_INIT_ALL',0,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_INIT_AT_LAYOUT_CHANGE',0,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_PROTECTED',0,16,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_ONCE',0,32,3
	.byte	'NVM_PRV_BLOCK_FLAG_RESISTANT_TO_CHANGED_SW',0,192,0,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_SYNC_MECHANISM',0,128,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_AUTO_VALIDATION',0,128,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_VARIABLE_BLOCK_LENGTH',0,128,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_MIGRATION',0,128,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_RAM_INIT_UNCONDITIONAL',0,128,16,0,17
	.byte	'NvM_Prv_BlockConfiguration_ten',0,1,85,3
	.word	12519
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,4,1,58,15,59,15,57,15,11,15,0,0,3,40,0,3,8,28,13,0,0,4
	.byte	36,0,3,8,11,15,62,15,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,7,11,0,0,0,8,59,0,3,8,0,0,9,38,0,73,19,0,0,10,15,0,73,19,0,0,11,11,1,0,0,12,46,1,49,19
	.byte	0,0,13,5,0,49,19,0,0,14,29,1,49,19,0,0,15,11,0,49,19,0,0,16,21,0,54,15,0,0,17,22,0,3,8,58,15,59,15,57
	.byte	15,73,19,0,0,18,19,1,58,15,59,15,57,15,11,15,0,0,19,13,0,3,8,73,19,11,15,56,9,0,0,20,1,1,11,15,73,19,0
	.byte	0,21,33,0,47,15,0,0,22,21,0,54,15,39,12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,21,1,54,15,39,12
	.byte	0,0,25,5,0,73,19,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,4,1,3,8,58,15,59,15,57,15,11,15,0,0,28,21
	.byte	0,73,19,54,15,39,12,0,0,29,53,0,73,19,0,0,30,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,31,21,1,73,19,54
	.byte	15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockDescriptor.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxGetMigrationResult.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     1  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     2  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     3   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     4   * Includes
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     6  */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     7  #include "NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     8  #include "Rte_NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	     9  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    10  #include "MemIf.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    11  // TRACE[NVM089] Check version compatibility of included header files
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    12  #if (!defined(MEMIF_AR_RELEASE_MAJOR_VERSION) || (MEMIF_AR_RELEASE_MAJOR_VERSION != NVM_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    13  # error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    14  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    15  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    16  #if (!defined(MEMIF_AR_RELEASE_MINOR_VERSION) || ((MEMIF_AR_RELEASE_MINOR_VERSION != 0) && \ 
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    17                                                    (MEMIF_AR_RELEASE_MINOR_VERSION != 2)))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    18  # error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    19  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    20  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    21  #include "NvM_Prv.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    22  #include "NvM_Prv_BlockData.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    23  #include "NvM_Prv_ErrorDetection.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    24  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    25  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    26   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    27   * Variables
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    28   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    29   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    30  #define NVM_START_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    31  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    32  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    33   * TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3027]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    34   * Special handling for aux migration result
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    35   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    36   * Following request results are defined:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    37   * NVM_RB_MIGRATION_RESULT_INIT_E              (0) =   Initialization value, result not yet available
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    38   * NVM_RB_MIGRATION_RESULT_NOT_NECESSARY_E     (1) =   RAM size == size on medium
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    39   * NVM_RB_MIGRATION_RESULT_TO_SMALLER_SIZE_E   (2) =   RAM size < size on medium (remaining data discarded)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    40   * NVM_RB_MIGRATION_RESULT_TO_BIGGER_SIZE_E    (3) =   RAM size > size on medium (remaining data filled with zero)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    41   * NVM_RB_MIGRATION_RESULT_NOT_DONE_E          (4) =   Migration not done, because data were not read
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    42   * NVM_RB_MIGRATION_RESULT_DEACTIVATED_E       (5) =   Migrations is deactivated by configuration
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    43   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    44  static NvM_Rb_MigrationResult_ten NvM_Prv_AuxMigrationResult_en;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    45  #define NVM_STOP_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    46  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    47  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    48  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    49   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    50   * Code
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    51   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    52  */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    53  #if (NVM_RB_AUX_INTERFACE == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    54  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    55  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    56  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    57  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    58  Std_ReturnType NvM_Rb_AuxGetMigrationResult(NvM_Rb_MigrationResult_ten *MigrationResultPtr)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    59  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    60      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3053] Service to read the auxiliary migration result.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    61      Std_ReturnType stReturn_uo = E_NOT_OK;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    62  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    63      // TRACE[NVM610] Report the DET error NVM_E_NOT_INITIALIZED when the NVM is not yet initialized
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    64      if (NvM_Prv_ErrorDetection_IsNvmInitialized(NVM_SERVICE_ID_RB_AUX_GET_MIGRATION_RESULT, 0))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    65      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    66          // TRACE[NVM612] Report the DET error NVM_E_PARAM_DATA when a NULL pointer is passed
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    67          //               via the parameter RequestResultPtr
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    68          if (NvM_Prv_ErrorDetection_IsPtrValidForMigrationResult(NVM_SERVICE_ID_RB_AUX_GET_MIGRATION_RESULT,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    69                                                                  0,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    70                                                                  MigrationResultPtr))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    71          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    72              // Parameters are valid
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    73              // Read out the selected block specific migration state from the administrative block
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    74              // No SchM lock can and should be done here to allow calling this function from NvM callbacks without deadlocks
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    75  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    76              *MigrationResultPtr = NvM_Prv_AuxMigrationResult_en;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    77  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    78              stReturn_uo = E_OK;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    79          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    80      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    81      // Return whether this operation was successful
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    82      return stReturn_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    83  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    84  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    85  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    86   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    87   * This function initializes the migration result for auxiliary requests.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    88   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    89  void NvM_Prv_InitializeAuxMigrationResult(void)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    90  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    91      NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_INIT_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    92  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    93  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    94  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    95   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    96   * This function sets the migration result for a given block used in an auxiliary request.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    97   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    98   * This functions reads the migration result only after an auxiliary read because the block migration will be done
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	    99   * by lower layers only during a read request.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   100   * After reading the migration result from lower layers this function maps MemIf result to NvM result which can be
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   101   * returned to the user.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   102   * The main function calls this function after finishing an auxiliary request.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   103   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   104   * \param idService_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   105   * Id of the finished auxiliary service
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   106   * \param idBlock_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   107   * ID of the block used in auxiliary request
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   108   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   109  void NvM_Prv_SetAuxMigrationResult(NvM_Prv_idService_tuo idService_uo, NvM_BlockIdType idBlock_uo)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   110  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   111      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3027] Calculate aux migration result
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   112      MemIf_Rb_MigrationResult_ten migrationResult_en;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   113  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   114      // Check if a aux read job is active
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   115      if (NVM_SERVICE_ID_RB_AUX_READ_BLOCK == idService_uo)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   116      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   117          migrationResult_en = MemIf_Rb_GetMigrationResult(NvM_Prv_GetIdxDevice(idBlock_uo),
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   118                                                           NvM_Prv_GetIdBlockMemIf(idBlock_uo));
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   119  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   120          switch(migrationResult_en)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   121          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   122              case MEMIF_RB_MIGRATION_RESULT_INIT_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   123                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_INIT_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   124              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   125  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   126              case MEMIF_RB_MIGRATION_RESULT_NOT_NECESSARY_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   127                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_NOT_NECESSARY_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   128              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   129  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   130              case MEMIF_RB_MIGRATION_RESULT_TO_SMALLER_SIZE_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   131                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_TO_SMALLER_SIZE_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   132              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   133  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   134              case MEMIF_RB_MIGRATION_RESULT_TO_BIGGER_SIZE_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   135                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_TO_BIGGER_SIZE_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   136              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   137  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   138              case MEMIF_RB_MIGRATION_RESULT_NOT_DONE_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   139                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_NOT_DONE_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   140              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   141  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   142              case MEMIF_RB_MIGRATION_RESULT_DEACTIVATED_E:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   143                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_DEACTIVATED_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   144              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   145  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   146              default:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   147                  // Actually default can not be reached so we set here the initial value for migration result
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   148                  NvM_Prv_AuxMigrationResult_en = NVM_RB_MIGRATION_RESULT_INIT_E;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   149              break;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   150          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   151      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   152  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   153  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   154  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   155  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   156  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxGetMigrationResult.c	   157  #endif

	; Module end
