	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc15960a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\NvM\\NvM_Rb_AuxWriteBlock.src BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxWriteBlock.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxWriteBlock.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	12497
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxWriteBlock.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,2,40,9,4,3
	.byte	'NVM_BLOCK_NATIVE',0,0,3
	.byte	'NVM_BLOCK_REDUNDANT',0,1,3
	.byte	'NVM_BLOCK_DATASET',0,2,0,4
	.byte	'unsigned short int',0,2,7,5
	.byte	'NvM_Prv_GetBlockType',0,3,1,212,3,38
	.word	146
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,212,3,75
	.word	213
	.byte	7,0,4
	.byte	'unsigned char',0,1,8,5
	.byte	'NvM_Prv_GetNrNonVolatileBlocks',0,3,1,232,3,20
	.word	290
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,232,3,67
	.word	213
	.byte	7,0,8
	.byte	'void',0,9
	.word	372
	.byte	10
	.word	378
	.byte	5
	.byte	'NvM_Prv_GetRomBlockAddress',0,3,1,173,4,26
	.word	383
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,173,4,69
	.word	213
	.byte	7,0,5
	.byte	'NvM_Prv_Block_IsInRom',0,3,3,142,1,22
	.word	290
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,142,1,60
	.word	213
	.byte	6
	.byte	'idxDataset_u8',0,3,142,1,78
	.word	290
	.byte	11,7,7,0,0,5
	.byte	'NvM_Prv_Block_IsWriteProtected',0,3,3,148,1,22
	.word	290
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,148,1,69
	.word	213
	.byte	7,0,12
	.word	235
	.byte	13
	.word	268
	.byte	7,0,12
	.word	307
	.byte	13
	.word	350
	.byte	7,0,12
	.word	388
	.byte	13
	.word	427
	.byte	7,0,12
	.word	449
	.byte	13
	.word	483
	.byte	13
	.word	503
	.byte	11,14
	.word	235
	.byte	13
	.word	268
	.byte	15
	.word	288
	.byte	0,7,14
	.word	307
	.byte	13
	.word	350
	.byte	15
	.word	370
	.byte	0,7,0,0,12
	.word	531
	.byte	13
	.word	574
	.byte	7,0,16,1,10
	.word	696
	.byte	17
	.byte	'__codeptr',0,4,1,1
	.word	698
	.byte	4
	.byte	'char',0,1,6,17
	.byte	'sint8',0,5,76,25
	.word	721
	.byte	17
	.byte	'uint8',0,5,81,25
	.word	290
	.byte	17
	.byte	'uint16',0,5,91,25
	.word	213
	.byte	4
	.byte	'unsigned int',0,4,7,17
	.byte	'uint32',0,5,106,24
	.word	772
	.byte	4
	.byte	'unsigned long long int',0,8,7,17
	.byte	'uint64',0,5,111,30
	.word	803
	.byte	17
	.byte	'boolean',0,5,127,25
	.word	290
	.byte	17
	.byte	'StatusType',0,6,191,1,27
	.word	290
	.byte	17
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	290
	.byte	18,6,206,1,9,8,19
	.byte	'vendorID',0
	.word	213
	.byte	2,2,35,0,19
	.byte	'moduleID',0
	.word	213
	.byte	2,2,35,2,19
	.byte	'sw_major_version',0
	.word	290
	.byte	1,2,35,4,19
	.byte	'sw_minor_version',0
	.word	290
	.byte	1,2,35,5,19
	.byte	'sw_patch_version',0
	.word	290
	.byte	1,2,35,6,0,17
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	904
	.byte	17
	.byte	'PduIdType',0,7,22,19
	.word	213
	.byte	17
	.byte	'PduLengthType',0,7,26,19
	.word	213
	.byte	2,8,113,9,4,3
	.byte	'TP_DATACONF',0,0,3
	.byte	'TP_DATARETRY',0,1,3
	.byte	'TP_CONFPENDING',0,2,0,17
	.byte	'TpDataStateType',0,8,118,3
	.word	1094
	.byte	17
	.byte	'Can_IdType',0,9,32,16
	.word	772
	.byte	17
	.byte	'Can_HwHandleType',0,9,43,16
	.word	213
	.byte	18,10,93,9,8,19
	.byte	'Class',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'TIN',0
	.word	290
	.byte	1,2,35,1,19
	.byte	'ReturnAddress',0
	.word	772
	.byte	4,2,35,4,0,17
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1214
	.byte	20,68
	.word	772
	.byte	21,16,0,18,10,154,1,9,68,19
	.byte	'store',0
	.word	1294
	.byte	68,2,35,0,0,20,68
	.word	1303
	.byte	21,0,0,17
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1325
	.byte	17
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	772
	.byte	18,10,175,1,9,8,19
	.byte	'sp',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'ctx',0
	.word	772
	.byte	4,2,35,4,0,17
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	1385
	.byte	17
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	1385
	.byte	22,1,1,10
	.word	1470
	.byte	17
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	1473
	.byte	17
	.byte	'ApplicationType',0,10,193,1,23
	.word	290
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,19
	.byte	'app_id',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,1,0,17
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	1536
	.byte	17
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	772
	.byte	17
	.byte	'AreaIdType',0,10,204,1,16
	.word	213
	.byte	17
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	772
	.byte	17
	.byte	'TickType',0,10,221,1,22
	.word	772
	.byte	17
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	772
	.byte	10
	.word	772
	.byte	17
	.byte	'Os_Lockable',0,10,234,1,18
	.word	1778
	.byte	17
	.byte	'CoreIdType',0,10,236,1,16
	.word	213
	.byte	17
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	213
	.byte	2,10,239,1,9,4,3
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,3
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,17
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	1848
	.byte	2,10,174,2,9,4,3
	.byte	'APPLICATION_ACCESSIBLE',0,0,3
	.byte	'APPLICATION_RESTARTING',0,1,3
	.byte	'APPLICATION_TERMINATED',0,2,0,17
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	1941
	.byte	10
	.word	372
	.byte	24,1,1,25
	.word	290
	.byte	25
	.word	2053
	.byte	0,10
	.word	2058
	.byte	17
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	2072
	.byte	23
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,19
	.byte	'elapsed',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'previous',0
	.word	772
	.byte	4,2,35,4,19
	.byte	'max',0
	.word	772
	.byte	4,2,35,8,19
	.byte	'cumulative',0
	.word	772
	.byte	4,2,35,12,19
	.byte	'stackbase',0
	.word	1385
	.byte	8,2,35,16,19
	.byte	'stackusage',0
	.word	1385
	.byte	8,2,35,24,19
	.byte	'stackmax',0
	.word	1385
	.byte	8,2,35,32,19
	.byte	'stackbudget',0
	.word	1385
	.byte	8,2,35,40,0,17
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	2107
	.byte	10
	.word	2107
	.byte	17
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2305
	.byte	17
	.byte	'EventMaskType',0,10,206,2,15
	.word	290
	.byte	17
	.byte	'Os_imaskType',0,10,211,2,16
	.word	772
	.byte	23
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,19
	.byte	'meter',0
	.word	2107
	.byte	48,2,35,0,0,17
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	2384
	.byte	10
	.word	2384
	.byte	9
	.word	2445
	.byte	23
	.byte	'Os_ISRType_s',0,10,216,2,16,24,19
	.byte	'entry_function',0
	.word	1478
	.byte	4,2,35,0,19
	.byte	'dynamic',0
	.word	2450
	.byte	4,2,35,4,19
	.byte	'imask',0
	.word	772
	.byte	4,2,35,8,19
	.byte	'stackbudget',0
	.word	1385
	.byte	8,2,35,12,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,20,19
	.byte	'application',0
	.word	290
	.byte	1,2,35,21,0,17
	.byte	'Os_ISRType',0,10,223,2,3
	.word	2455
	.byte	10
	.word	1470
	.byte	9
	.word	2455
	.byte	10
	.word	2614
	.byte	17
	.byte	'ISRType',0,10,224,2,46
	.word	2619
	.byte	17
	.byte	'Os_bitmask',0,10,239,2,22
	.word	772
	.byte	17
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	772
	.byte	17
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	772
	.byte	17
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	772
	.byte	26,10,243,2,9,4,19
	.byte	'p0',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'p1',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'p2',0
	.word	772
	.byte	4,2,35,0,0,17
	.byte	'Os_psetType',0,10,247,2,3
	.word	2727
	.byte	26,10,249,2,9,4,19
	.byte	't0',0
	.word	772
	.byte	4,2,35,0,19
	.byte	't1',0
	.word	772
	.byte	4,2,35,0,19
	.byte	't2',0
	.word	772
	.byte	4,2,35,0,0,17
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	2791
	.byte	17
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	290
	.byte	23
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,19
	.byte	'terminate_jump_buf',0
	.word	1334
	.byte	68,2,35,0,19
	.byte	'meter',0
	.word	2107
	.byte	48,2,35,68,19
	.byte	'activation_count',0
	.word	290
	.byte	1,2,35,116,0,17
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	2889
	.byte	20,68
	.word	1303
	.byte	21,0,0,10
	.word	2889
	.byte	9
	.word	3015
	.byte	23
	.byte	'Os_TaskType_s',0,10,134,3,16,40,19
	.byte	'dynamic',0
	.word	3020
	.byte	4,2,35,0,19
	.byte	'entry_function',0
	.word	1478
	.byte	4,2,35,4,19
	.byte	'pset',0
	.word	2727
	.byte	4,2,35,8,19
	.byte	'base_tpmask',0
	.word	2791
	.byte	4,2,35,12,19
	.byte	'tpmask',0
	.word	2791
	.byte	4,2,35,16,19
	.byte	'core_id',0
	.word	213
	.byte	2,2,35,20,19
	.byte	'index',0
	.word	772
	.byte	4,2,35,24,19
	.byte	'stackbudget',0
	.word	1385
	.byte	8,2,35,28,19
	.byte	'activation_count',0
	.word	290
	.byte	1,2,35,36,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,37,19
	.byte	'application',0
	.word	290
	.byte	1,2,35,38,0,17
	.byte	'Os_TaskType',0,10,146,3,3
	.word	3025
	.byte	9
	.word	3025
	.byte	10
	.word	3275
	.byte	17
	.byte	'TaskType',0,10,147,3,47
	.word	3280
	.byte	27
	.byte	'Os_TaskStateType',0,10,155,3,6,4,3
	.byte	'SUSPENDED',0,0,3
	.byte	'READY',0,1,3
	.byte	'WAITING',0,2,3
	.byte	'RUNNING',0,3,0,17
	.byte	'TaskStateType',0,10,156,3,31
	.word	3303
	.byte	26,10,167,3,3,4,19
	.byte	'tpmask',0
	.word	2791
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,19
	.byte	'saved_priority',0
	.word	3390
	.byte	4,2,35,0,0,17
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	3413
	.byte	10
	.word	3413
	.byte	9
	.word	3493
	.byte	23
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,19
	.byte	'dynamic',0
	.word	3498
	.byte	4,2,35,0,19
	.byte	'tpmask',0
	.word	2791
	.byte	4,2,35,4,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,8,0,17
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	3503
	.byte	18,10,181,3,9,12,19
	.byte	'maxallowedvalue',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'ticksperbase',0
	.word	772
	.byte	4,2,35,4,19
	.byte	'mincycle',0
	.word	772
	.byte	4,2,35,8,0,17
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	3602
	.byte	18,10,206,3,9,8,19
	.byte	'Running',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'Pending',0
	.word	290
	.byte	1,2,35,1,19
	.byte	'Delay',0
	.word	772
	.byte	4,2,35,4,0,17
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	3697
	.byte	28
	.word	290
	.byte	1,1,10
	.word	3783
	.byte	17
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	3790
	.byte	23
	.byte	's_swd',0,10,222,3,12,4,19
	.byte	'count',0
	.word	772
	.byte	4,2,35,0,0,26,10,221,3,3,4,19
	.byte	'sw',0
	.word	3826
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,19
	.byte	'type_dependent',0
	.word	3854
	.byte	4,2,35,0,0,17
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	3873
	.byte	10
	.word	3873
	.byte	9
	.word	3951
	.byte	23
	.byte	'Os_CounterType_s',0,10,227,3,16,28,19
	.byte	'dynamic',0
	.word	3956
	.byte	4,2,35,0,19
	.byte	'advincr',0
	.word	3795
	.byte	4,2,35,4,19
	.byte	'base',0
	.word	3602
	.byte	12,2,35,8,19
	.byte	'core',0
	.word	2053
	.byte	4,2,35,20,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,24,19
	.byte	'application',0
	.word	290
	.byte	1,2,35,25,0,17
	.byte	'Os_CounterType',0,10,234,3,3
	.word	3961
	.byte	10
	.word	3783
	.byte	9
	.word	3961
	.byte	10
	.word	4113
	.byte	17
	.byte	'CounterType',0,10,235,3,52
	.word	4118
	.byte	27
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,3
	.byte	'SCHEDULETABLE_STOPPED',0,0,3
	.byte	'SCHEDULETABLE_NEXT',0,1,3
	.byte	'SCHEDULETABLE_WAITING',0,2,3
	.byte	'SCHEDULETABLE_RUNNING',0,3,3
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,17
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4144
	.byte	9
	.word	.L6-.L3
	.byte	10
	.word	4344
	.byte	17
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	4349
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,19
	.byte	'match',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'next',0
	.word	4354
	.byte	4,2,35,4,19
	.byte	'state',0
	.word	4144
	.byte	4,2,35,8,19
	.byte	'config',0
	.word	213
	.byte	2,2,35,12,0,10
	.word	4381
	.byte	9
	.word	4474
.L6:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,19
	.byte	'dynamic',0
	.word	4479
	.byte	4,2,35,0,19
	.byte	'counter',0
	.word	4123
	.byte	4,2,35,4,19
	.byte	'repeat',0
	.word	290
	.byte	1,2,35,8,19
	.byte	'config',0
	.word	213
	.byte	2,2,35,10,19
	.byte	'initial',0
	.word	290
	.byte	1,2,35,12,19
	.byte	'access',0
	.word	290
	.byte	1,2,35,13,19
	.byte	'application',0
	.word	290
	.byte	1,2,35,14,0,17
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	4484
	.byte	9
	.word	4484
	.byte	10
	.word	4664
	.byte	9
	.word	3961
	.byte	10
	.word	4674
	.byte	29
	.word	1783
	.byte	29
	.word	2727
	.byte	29
	.word	2624
	.byte	29
	.word	3285
	.byte	29
	.word	2791
	.byte	29
	.word	290
	.byte	29
	.word	3285
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,19
	.byte	'TrapInfo',0
	.word	1214
	.byte	8,2,35,0,19
	.byte	'lock_taskaccess',0
	.word	4684
	.byte	4,2,35,8,19
	.byte	'ReadyTasks',0
	.word	4689
	.byte	4,2,35,12,19
	.byte	'RunningISR',0
	.word	4694
	.byte	4,2,35,16,19
	.byte	'RunningTask',0
	.word	4699
	.byte	4,2,35,20,19
	.byte	'RunningTPMask',0
	.word	4704
	.byte	4,2,35,24,19
	.byte	'CurrentMeteredObject',0
	.word	2310
	.byte	4,2,35,28,19
	.byte	'IdleMeter',0
	.word	2107
	.byte	48,2,35,32,19
	.byte	'AppAccess',0
	.word	290
	.byte	1,2,35,80,19
	.byte	'AppOverride',0
	.word	4709
	.byte	1,2,35,81,19
	.byte	'GetStackValueAdjust',0
	.word	1385
	.byte	8,2,35,84,19
	.byte	'InErrorHook',0
	.word	290
	.byte	1,2,35,92,19
	.byte	'ChainTaskRef',0
	.word	4714
	.byte	4,2,35,96,19
	.byte	'GetStackUsageAdjust',0
	.word	1385
	.byte	8,2,35,100,19
	.byte	'InProtectionHook',0
	.word	290
	.byte	1,2,35,108,19
	.byte	'CoreIsActive',0
	.word	290
	.byte	1,2,35,109,19
	.byte	'InShutdownHook',0
	.word	290
	.byte	1,2,35,110,0,17
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	4719
	.byte	10
	.word	772
	.byte	9
	.word	2455
	.byte	10
	.word	5175
	.byte	9
	.word	3025
	.byte	10
	.word	5185
	.byte	10
	.word	2107
	.byte	23
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,19
	.byte	'DisableAllImask',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'SuspendAllImask',0
	.word	772
	.byte	4,2,35,4,19
	.byte	'SuspendOSImask',0
	.word	772
	.byte	4,2,35,8,19
	.byte	'DisableAllCount',0
	.word	772
	.byte	4,2,35,12,19
	.byte	'SuspendAllCount',0
	.word	772
	.byte	4,2,35,16,19
	.byte	'SuspendOSCount',0
	.word	772
	.byte	4,2,35,20,19
	.byte	'RestartJumpBuf',0
	.word	1334
	.byte	68,2,35,24,19
	.byte	'Restartable',0
	.word	290
	.byte	1,2,35,92,0,17
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5200
	.byte	17
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	772
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,19
	.byte	'MsgObjId',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'HwControllerId',0
	.word	290
	.byte	1,2,35,1,19
	.byte	'TxObjPriorityClass',0
	.word	772
	.byte	4,2,35,4,0,17
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5477
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,19
	.byte	'MaskRef',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'MsgId',0
	.word	772
	.byte	4,2,35,4,19
	.byte	'MsgObjId',0
	.word	290
	.byte	1,2,35,8,19
	.byte	'HwControllerId',0
	.word	290
	.byte	1,2,35,9,0,17
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	5613
	.byte	20,4
	.word	290
	.byte	21,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,19
	.byte	'ControllerMOMap',0
	.word	5753
	.byte	4,2,35,0,0,17
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	5762
	.byte	23
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,19
	.byte	'Can_NPCRValue',0
	.word	213
	.byte	2,2,35,0,0,17
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	5863
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,19
	.byte	'CanControllerBaudrate',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'CanControllerBaudrateCfg',0
	.word	213
	.byte	2,2,35,4,0,17
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	5938
	.byte	9
	.word	5938
	.byte	10
	.word	6103
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,19
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6108
	.byte	4,2,35,0,0,17
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6113
	.byte	23
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,19
	.byte	'CanEventType',0
	.word	5753
	.byte	4,2,35,0,0,17
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6213
	.byte	17
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	290
	.byte	17
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	290
	.byte	18,12,168,1,9,12,19
	.byte	'in',0
	.word	2053
	.byte	4,2,35,0,19
	.byte	'out',0
	.word	2053
	.byte	4,2,35,4,19
	.byte	'used',0
	.word	213
	.byte	2,2,35,8,19
	.byte	'lost_data',0
	.word	290
	.byte	1,2,35,10,0,17
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6359
	.byte	2,12,175,1,9,4,3
	.byte	'RTE_DRA',0,0,3
	.byte	'RTE_WOWP',0,1,3
	.byte	'RTE_TASK',0,2,3
	.byte	'RTE_ARE',0,3,3
	.byte	'RTE_EV',0,4,3
	.byte	'RTE_MSI',0,5,0,17
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6446
	.byte	10
	.word	6359
	.byte	23
	.byte	'Rte_QCmnType',0,12,184,1,16,24,19
	.byte	'dynamic',0
	.word	6544
	.byte	4,2,35,0,19
	.byte	'copy',0
	.word	290
	.byte	1,2,35,4,19
	.byte	'queue_size',0
	.word	213
	.byte	2,2,35,6,19
	.byte	'element_size',0
	.word	213
	.byte	2,2,35,8,19
	.byte	'buffer_start',0
	.word	2053
	.byte	4,2,35,12,19
	.byte	'buffer_end',0
	.word	2053
	.byte	4,2,35,16,19
	.byte	'notification_type',0
	.word	6446
	.byte	4,2,35,20,0,17
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	6549
	.byte	17
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	772
	.byte	17
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	213
	.byte	20,128,8
	.word	290
	.byte	21,255,7,0,17
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	6787
	.byte	17
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	772
	.byte	17
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	213
	.byte	17
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	290
	.byte	17
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	290
	.byte	17
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	290
	.byte	18,13,92,9,2,19
	.byte	'DeviceMode',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'ChannelMode',0
	.word	290
	.byte	1,2,35,1,0,17
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	6978
	.byte	17
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	290
	.byte	17
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	290
	.byte	17
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	290
	.byte	17
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	290
	.byte	17
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	290
	.byte	17
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	213
	.byte	17
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	290
	.byte	18,13,140,1,9,4,19
	.byte	'cntTick_u16',0
	.word	213
	.byte	2,2,35,0,19
	.byte	'stTimer',0
	.word	290
	.byte	1,2,35,2,0,17
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7319
	.byte	17
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	213
	.byte	17
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	290
	.byte	17
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	772
	.byte	17
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	213
	.byte	17
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	290
	.byte	17
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	290
	.byte	18,13,181,1,9,24,19
	.byte	'ChannelState_e',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'LightTimeoutCtr_u32',0
	.word	772
	.byte	4,2,35,4,19
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	213
	.byte	2,2,35,8,19
	.byte	'ChannelMode_u8',0
	.word	290
	.byte	1,2,35,10,19
	.byte	'BusSmMode_u8',0
	.word	290
	.byte	1,2,35,11,19
	.byte	'UserRequestCtr_u8',0
	.word	290
	.byte	1,2,35,12,19
	.byte	'PassiveRequestState_u8',0
	.word	290
	.byte	1,2,35,13,19
	.byte	'PncRequestCtr_u8',0
	.word	290
	.byte	1,2,35,14,19
	.byte	'InhibitionReqStatus_u8',0
	.word	290
	.byte	1,2,35,15,19
	.byte	'NmNetworkRequestStatus_b',0
	.word	290
	.byte	1,2,35,16,19
	.byte	'DiagnosticRequestState_b',0
	.word	290
	.byte	1,2,35,17,19
	.byte	'CommunicationAllowed_b',0
	.word	290
	.byte	1,2,35,18,19
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	290
	.byte	1,2,35,19,19
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	290
	.byte	1,2,35,20,19
	.byte	'NmNetworkModeStatus_b',0
	.word	290
	.byte	1,2,35,21,0,17
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	7551
	.byte	18,13,206,1,9,10,19
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	213
	.byte	2,2,35,0,19
	.byte	'LimitToNoComCtr_u16',0
	.word	213
	.byte	2,2,35,2,19
	.byte	'RequestedUserMode_t',0
	.word	290
	.byte	1,2,35,4,19
	.byte	'IndicatedUserMode_t',0
	.word	290
	.byte	1,2,35,5,19
	.byte	'numChannelsInFullCom_u8',0
	.word	290
	.byte	1,2,35,6,19
	.byte	'numChannelsInSilentCom_u8',0
	.word	290
	.byte	1,2,35,7,19
	.byte	'numChannelsInNoCom_u8',0
	.word	290
	.byte	1,2,35,8,0,17
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	8055
	.byte	17
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	290
	.byte	17
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	290
	.byte	17
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	290
	.byte	17
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	290
	.byte	17
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	290
	.byte	17
	.byte	'NvM_BlockIdType',0,13,215,2,16
	.word	213
	.byte	17
	.byte	'NvM_RequestResultType',0,13,225,2,15
	.word	290
	.byte	17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	6798
	.byte	20,128,8
	.word	290
	.byte	21,255,7,0,17
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	6798
	.byte	2,14,31,9,4,3
	.byte	'MEMIF_JOB_OK',0,0,3
	.byte	'MEMIF_JOB_FAILED',0,1,3
	.byte	'MEMIF_JOB_PENDING',0,2,3
	.byte	'MEMIF_JOB_CANCELED',0,3,3
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,3
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,17
	.byte	'MemIf_JobResultType',0,14,39,2
	.word	8929
	.byte	17
	.byte	'NvM_BlockManagementType',0,2,45,3
	.word	146
	.byte	2,2,49,9,4,3
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,3
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,3
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,3
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,3
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,3
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,3
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,17
	.byte	'NvM_Prv_Activities_ten',0,2,58,3
	.word	9119
	.byte	2,2,104,9,4,3
	.byte	'NvM_Prv_idJob_Idle_e',0,0,3
	.byte	'NvM_Prv_idJob_Read_e',0,1,3
	.byte	'NvM_Prv_idJob_Write_e',0,2,3
	.byte	'NvM_Prv_idJob_Erase_e',0,3,3
	.byte	'NvM_Prv_idJob_Restore_e',0,4,3
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,3
	.byte	'NvM_Prv_idJob_Validate_e',0,6,3
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,3
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,3
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,3
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,3
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,3
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,3
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,17
	.byte	'NvM_Prv_idJob_ten',0,2,115,3
	.word	9360
	.byte	17
	.byte	'NvM_Prv_ServiceBit_tuo',0,2,168,1,16
	.word	213
	.byte	17
	.byte	'NvM_Prv_idService_tuo',0,2,173,1,15
	.word	290
	.byte	17
	.byte	'NvM_Prv_idQueue_tuo',0,2,206,1,15
	.word	290
	.byte	18,2,210,1,9,12,19
	.byte	'idService_uo',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'idBlock_uo',0
	.word	213
	.byte	2,2,35,2,19
	.byte	'ServiceBit_uo',0
	.word	213
	.byte	2,2,35,4,19
	.byte	'BlockData_pv',0
	.word	2053
	.byte	4,2,35,8,0,17
	.byte	'NvM_Prv_QueueEntry_tst',0,2,225,1,3
	.word	9917
	.byte	10
	.word	290
	.byte	18,2,227,1,9,20,19
	.byte	'idJob_en',0
	.word	9360
	.byte	4,2,35,0,19
	.byte	'idBlock_uo',0
	.word	213
	.byte	2,2,35,4,19
	.byte	'RamBlock_pu8',0
	.word	10043
	.byte	4,2,35,8,19
	.byte	'idxDataset_u8',0
	.word	290
	.byte	1,2,35,12,19
	.byte	'Result_en',0
	.word	8929
	.byte	4,2,35,16,0,17
	.byte	'NvM_Prv_JobData_tst',0,2,240,1,3
	.word	10048
	.byte	17
	.byte	'Rte_TaskRefType',0,15,184,1,32
	.word	3285
	.byte	17
	.byte	'Rte_EventRefType',0,15,185,1,32
	.word	290
	.byte	17
	.byte	'Rte_EventType',0,15,186,1,32
	.word	772
	.byte	17
	.byte	'Rte_REActCounterType',0,15,252,1,15
	.word	290
	.byte	10
	.word	290
	.byte	17
	.byte	'Rte_REActCounterRefType',0,15,253,1,58
	.word	10290
	.byte	18,15,255,1,9,8,19
	.byte	'task',0
	.word	10186
	.byte	4,2,35,0,19
	.byte	'acnt',0
	.word	10295
	.byte	4,2,35,4,0,17
	.byte	'Rte_REContainerType',0,15,130,2,3
	.word	10328
	.byte	9
	.word	3025
	.byte	10
	.word	10392
	.byte	10
	.word	290
	.byte	9
	.word	10328
	.byte	10
	.word	10407
	.byte	17
	.byte	'Rte_REContainerRefType',0,15,132,2,60
	.word	10412
	.byte	17
	.byte	'Rte_MSICounterType',0,15,149,2,16
	.word	213
	.byte	10
	.word	213
	.byte	17
	.byte	'Rte_MSICounterRefType',0,15,150,2,56
	.word	10477
	.byte	17
	.byte	'Rte_MSIPendingFlagType',0,15,152,2,17
	.word	290
	.byte	10
	.word	290
	.byte	17
	.byte	'Rte_MSIPendingFlagRefType',0,15,153,2,60
	.word	10545
	.byte	18,15,163,2,9,24,19
	.byte	'counter',0
	.word	10482
	.byte	4,2,35,0,19
	.byte	'incCounter',0
	.word	290
	.byte	1,2,35,4,19
	.byte	'pending',0
	.word	10550
	.byte	4,2,35,8,19
	.byte	'osTask',0
	.word	10186
	.byte	4,2,35,12,19
	.byte	'acnt',0
	.word	10295
	.byte	4,2,35,16,19
	.byte	'osEvent',0
	.word	290
	.byte	1,2,35,20,19
	.byte	'MSIInit',0
	.word	213
	.byte	2,2,35,22,0,17
	.byte	'Rte_MSITableEntry',0,15,172,2,3
	.word	10585
	.byte	10
	.word	213
	.byte	10
	.word	290
	.byte	17
	.byte	'Rte_TaskArrayIndex',0,15,179,2,16
	.word	290
	.byte	17
	.byte	'Rte_NrWaitingTasks',0,15,180,2,16
	.word	290
	.byte	18,15,182,2,9,4,19
	.byte	'pending',0
	.word	290
	.byte	1,2,35,0,19
	.byte	'count',0
	.word	290
	.byte	1,2,35,1,19
	.byte	'firstWaitingTask',0
	.word	290
	.byte	1,2,35,2,0,17
	.byte	'Rte_WaitableDatum',0,15,186,2,3
	.word	10803
	.byte	10
	.word	10803
	.byte	18,15,226,2,9,12,19
	.byte	'event_id',0
	.word	772
	.byte	4,2,35,0,19
	.byte	'wd',0
	.word	10895
	.byte	4,2,35,4,19
	.byte	'timeout',0
	.word	772
	.byte	4,2,35,8,0,17
	.byte	'Rte_WOWP_NotificationType',0,15,230,2,3
	.word	10900
	.byte	9
	.word	10900
	.byte	10
	.word	10989
	.byte	17
	.byte	'Rte_WOWP_NotificationRefType',0,15,232,2,66
	.word	10994
	.byte	17
	.byte	'Rte_ARE_NotificationType',0,15,234,2,29
	.word	10328
	.byte	23
	.byte	'Rte_QTaskType',0,15,243,2,16,28,19
	.byte	'cmn',0
	.word	6549
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10186
	.byte	4,2,35,24,0,17
	.byte	'Rte_QTaskType',0,15,246,2,3
	.word	11071
	.byte	23
	.byte	'Rte_QREType',0,15,250,2,16,28,19
	.byte	'cmn',0
	.word	6549
	.byte	24,2,35,0,19
	.byte	're',0
	.word	10417
	.byte	4,2,35,24,0,17
	.byte	'Rte_QREType',0,15,253,2,3
	.word	11142
	.byte	9
	.word	10328
	.byte	10
	.word	11207
	.byte	23
	.byte	'Rte_QWWPType',0,15,129,3,16,28,19
	.byte	'cmn',0
	.word	6549
	.byte	24,2,35,0,19
	.byte	'wwp',0
	.word	10999
	.byte	4,2,35,24,0,17
	.byte	'Rte_QWWPType',0,15,132,3,3
	.word	11217
	.byte	9
	.word	10900
	.byte	10
	.word	11285
	.byte	23
	.byte	'Rte_QEvType',0,15,136,3,16,36,19
	.byte	'cmn',0
	.word	6549
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10186
	.byte	4,2,35,24,19
	.byte	'mask',0
	.word	290
	.byte	1,2,35,28,19
	.byte	'acnt',0
	.word	10295
	.byte	4,2,35,32,0,17
	.byte	'Rte_QEvType',0,15,141,3,3
	.word	11295
	.byte	23
	.byte	'Rte_QMSIType',0,15,145,3,16,48,19
	.byte	'cmn',0
	.word	6549
	.byte	24,2,35,0,19
	.byte	'task',0
	.word	10186
	.byte	4,2,35,24,19
	.byte	'mask',0
	.word	290
	.byte	1,2,35,28,19
	.byte	'acnt',0
	.word	10295
	.byte	4,2,35,32,19
	.byte	'msiCounter',0
	.word	10482
	.byte	4,2,35,36,19
	.byte	'msiPending',0
	.word	10550
	.byte	4,2,35,40,19
	.byte	'msiLimit',0
	.word	213
	.byte	2,2,35,44,0,17
	.byte	'Rte_QMSIType',0,15,153,3,3
	.word	11390
	.byte	18,16,23,9,16,19
	.byte	'QueueEntry_st',0
	.word	9917
	.byte	12,2,35,0,19
	.byte	'Result_uo',0
	.word	290
	.byte	1,2,35,12,19
	.byte	'idxDataset_u8',0
	.word	290
	.byte	1,2,35,13,19
	.byte	'maskBitsToChange_u8',0
	.word	290
	.byte	1,2,35,14,19
	.byte	'maskBitsNewValue_u8',0
	.word	290
	.byte	1,2,35,15,0,17
	.byte	'NvM_Prv_BlockData_tst',0,16,36,3
	.word	11545
	.byte	9
	.word	11545
	.byte	10
	.word	11704
	.byte	30
	.word	290
	.byte	1,1,25
	.word	11709
	.byte	0,10
	.word	11714
	.byte	17
	.byte	'NvM_Prv_Service_CheckParameter_tpfct',0,16,38,19
	.word	11727
	.byte	17
	.byte	'NvM_Prv_Service_CheckBlockData_tpfct',0,16,39,19
	.word	11727
	.byte	24,1,1,25
	.word	11709
	.byte	0,10
	.word	11822
	.byte	17
	.byte	'NvM_Prv_Service_SetBlockData_tpfct',0,16,40,16
	.word	11831
	.byte	30
	.word	290
	.byte	1,1,25
	.word	2053
	.byte	0,10
	.word	11879
	.byte	17
	.byte	'NvM_Prv_ExplicitSync_Copy_tpfct',0,1,29,26
	.word	11892
	.byte	2,1,34,9,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_READ_ALL',0,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_WRITE_ALL',0,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_FIRST_INIT_ALL',0,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_INIT_AT_LAYOUT_CHANGE',0,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_PROTECTED',0,16,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_ONCE',0,32,3
	.byte	'NVM_PRV_BLOCK_FLAG_RESISTANT_TO_CHANGED_SW',0,192,0,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_SYNC_MECHANISM',0,128,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_AUTO_VALIDATION',0,128,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_VARIABLE_BLOCK_LENGTH',0,128,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_MIGRATION',0,128,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_RAM_INIT_UNCONDITIONAL',0,128,16,0,17
	.byte	'NvM_Prv_BlockConfiguration_ten',0,1,85,3
	.word	11937
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,4,1,58,15,59,15,57,15,11,15,0,0,3,40,0,3,8,28,13,0,0,4
	.byte	36,0,3,8,11,15,62,15,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,7,11,0,0,0,8,59,0,3,8,0,0,9,38,0,73,19,0,0,10,15,0,73,19,0,0,11,11,1,0,0,12,46,1,49,19
	.byte	0,0,13,5,0,49,19,0,0,14,29,1,49,19,0,0,15,11,0,49,19,0,0,16,21,0,54,15,0,0,17,22,0,3,8,58,15,59,15,57
	.byte	15,73,19,0,0,18,19,1,58,15,59,15,57,15,11,15,0,0,19,13,0,3,8,73,19,11,15,56,9,0,0,20,1,1,11,15,73,19,0
	.byte	0,21,33,0,47,15,0,0,22,21,0,54,15,39,12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,21,1,54,15,39,12
	.byte	0,0,25,5,0,73,19,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,4,1,3,8,58,15,59,15,57,15,11,15,0,0,28,21
	.byte	0,73,19,54,15,39,12,0,0,29,53,0,73,19,0,0,30,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockDescriptor.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_AuxWriteBlock.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_Service.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     1  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     2  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     3   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     4   * Includes
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     6  */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     7  #include "NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     8  #include "Rte_NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	     9  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    10  #include "NvM_Prv_Service.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    11  #include "NvM_Prv_BlockData.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    12  #include "NvM_Prv_ErrorDetection.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    13  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    14  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    15   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    16   * Declarations
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    17   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    18   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    19  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    20  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    21  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    22  static boolean NvM_Prv_AuxWrite_CheckParameter(NvM_Prv_BlockData_tst const* BlockData_pcst);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    23  static boolean NvM_Prv_AuxWrite_CheckBlockData(NvM_Prv_BlockData_tst const* BlockData_pcst);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    24  static void NvM_Prv_AuxWrite_SetBlockData(NvM_Prv_BlockData_tst const* BlockData_pcst);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    25  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    26  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    27  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    28  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    29  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    30   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    31   * Code
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    32   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    33  */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    34  #if (NVM_RB_AUX_INTERFACE == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    35  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    36  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    37  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    38  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    39  Std_ReturnType NvM_Rb_AuxWriteBlock(NvM_BlockIdType BlockId, const void *NvM_SrcPtr)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    40  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    41      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2944] Service used from an auxiliary user to copy the data
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    42      //                                               of the RAM block to its corresponding NV block
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    43  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    44      Std_ReturnType stReturn_uo = E_NOT_OK;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    45      NvM_Prv_Service_Configuration_tst ServiceConfiguration_st;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    46      NvM_Prv_BlockData_tst BlockData_st;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    47  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    48      // The following union is necessary to remove an otherwise unavoidable compiler warning
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    49      // due to a discarded const qualifier
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    50      union
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    51      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    52          const void *pcv;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    53          void *pv;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    54      } adrRamBlock_un;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    55      adrRamBlock_un.pcv = NvM_SrcPtr;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    56  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    57      // put all service parameters in a structure for new block data
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    58      BlockData_st.QueueEntry_st.idBlock_uo = BlockId;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    59      BlockData_st.QueueEntry_st.BlockData_pv = adrRamBlock_un.pv;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    60      BlockData_st.QueueEntry_st.idService_uo = NVM_SERVICE_ID_RB_AUX_WRITE_BLOCK;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    61      BlockData_st.QueueEntry_st.ServiceBit_uo = NvM_Prv_ServiceBit_Write_e;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    62      BlockData_st.Result_uo = NVM_REQ_PENDING;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    63      BlockData_st.idxDataset_u8 = 0;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    64      BlockData_st.maskBitsToChange_u8 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    65      BlockData_st.maskBitsNewValue_u8 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    66  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    67      ServiceConfiguration_st.CheckPendingBlock_b = TRUE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    68      ServiceConfiguration_st.CheckParameter_pfct = NvM_Prv_AuxWrite_CheckParameter;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    69      ServiceConfiguration_st.CheckBlockData_pfct = NvM_Prv_AuxWrite_CheckBlockData;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    70      ServiceConfiguration_st.SetBlockData_pfct = NvM_Prv_AuxWrite_SetBlockData;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    71  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    72      // TRACE[NVM619] Report the DET error NVM_E_NOT_INITIALIZED when the NVM is not yet initialized
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    73      // TRACE[NVM624] Report the DET error NVM_E_PARAM_BLOCK_ID when the passed BlockID is out of range
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    74      stReturn_uo = NvM_Prv_Service_Initiate(NvM_Prv_idQueue_Aux_e,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    75                                             &BlockData_st,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    76                                             &ServiceConfiguration_st);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    77  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    78      // Return whether this operation was successful
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    79      return stReturn_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    80  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    81  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    82  static boolean NvM_Prv_AuxWrite_CheckParameter(NvM_Prv_BlockData_tst const* BlockData_pcst)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    83  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    84      boolean isParameterValid_b = FALSE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    85  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    86      // TRACE[NVM622] Report the DET error NVM_E_PARAM_ADDRESS when a NULL pointer is passed
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    87      if (NvM_Prv_ErrorDetection_IsRamBlockAddressValid(BlockData_pcst->QueueEntry_st.idService_uo,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    88                                                        BlockData_pcst->QueueEntry_st.idBlock_uo,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    89                                                        BlockData_pcst->QueueEntry_st.BlockData_pv))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    90      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    91          // If currently set dataset index is out of range for this block
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    92          // -> reject this request with E_NOT_OK and report this situation to Det if Det reporting is enabled
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    93          // Note: Since the set index will be used only for dataset blocks
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    94          //       it is not necessary to check whether the set index is greater than 0 for non-dataset blocks
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    95          // Note: in the standard API, dataset index limits are already checked in the SetDataIndex service,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    96          //       but this is not possible in the auxiliary interface because its SetDataIndex service has
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    97          //       no BlockId parameter)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    98          if (NVM_BLOCK_DATASET == NvM_Prv_GetBlockType(BlockData_pcst->QueueEntry_st.idBlock_uo))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	    99          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   100              if (NvM_Prv_ErrorDetection_IsBlockIdxValid(BlockData_pcst->QueueEntry_st.idService_uo,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   101                                                         BlockData_pcst->QueueEntry_st.idBlock_uo,
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   102                                                         NvM_Prv_Block_GetIdxDataset(NVM_PRV_AUX_ADMIN_BLOCK)))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   103              {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   104                  isParameterValid_b = TRUE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   105              }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   106          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   107          else
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   108          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   109              isParameterValid_b = TRUE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   110          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   111      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   112      return isParameterValid_b;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   113  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   114  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   115  static boolean NvM_Prv_AuxWrite_CheckBlockData(NvM_Prv_BlockData_tst const* BlockData_pcst)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   116  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   117      boolean stBlockData_b = TRUE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   118      NvM_BlockIdType idBlock_uo = BlockData_pcst->QueueEntry_st.idBlock_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   119  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   120      if (!NvM_Prv_Block_IsWriteable(idBlock_uo, NvM_Prv_Block_GetIdxDataset(NVM_PRV_AUX_ADMIN_BLOCK)))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   121      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   122          // TRACE[NVM209] Check write protection status of this block before enqueuing this request
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   123          // TRACE[NVM377] Check that the dataset index does not point to a ROM block if the NvM block is of type DATASET
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   124          // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2937] Write protection shall be respected by an auxiliary user
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   125          // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2818] Report an error by setting a block error flag if a write
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   126          //                                               to a write protected block is attempted
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   127          // TRACE[NVM377] Do the same if a writing to a ROM block of an NvM block of type DATASET is attempted
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   128          NvM_Prv_ErrorDetection_SetProductionError(idBlock_uo, NVM_E_WRITE_PROTECTED);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   129  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   130          // TRACE[NVM217] If a write protected block is attempted to be written, E_NOT_OK is returned
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   131          // TRACE[NVM377] If the dataset index points to a ROM block (in case the NvM block is of type DATASET) and
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   132          //               a write is attempted, E_NOT_OK is returned
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   133          // TRACE[NVM375] Writing to an NV block of a block of type DATASET is not possible
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   134          //               if the block is write protected
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   135          stBlockData_b = FALSE;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   136      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   137      return stBlockData_b;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   138  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   139  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   140  static void NvM_Prv_AuxWrite_SetBlockData(NvM_Prv_BlockData_tst const* BlockData_pcst)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   141  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   142      // TRACE[NVM185] Set single block request result to NVM_REQ_PENDING on successful enqueuing
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   143      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2929] Use special auxiliary admin block for the request result update
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   144      NvM_Prv_Block_SetRequestResult(NVM_PRV_AUX_ADMIN_BLOCK, BlockData_pcst->Result_uo);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   145      NvM_Prv_Block_SetRequest(NVM_PRV_AUX_ADMIN_BLOCK, BlockData_pcst->QueueEntry_st.ServiceBit_uo);
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   146  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   147  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   148  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   149  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   150  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_AuxWriteBlock.c	   151  #endif  // NVM_RB_AUX_INTERFACE == STD_ON

	; Module end
