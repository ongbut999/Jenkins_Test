	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc14456a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\NvM\\NvM_Queue.src BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c'

	
$TC16X
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_Initialize',code,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_Initialize'
	.align	2
	
	.global	NvM_Prv_Queue_Initialize

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     1  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     2  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     3  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     4   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     5   * Includes
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     6   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     7  */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     8  #include "NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	     9  #include "Rte_NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    10  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    11  #include "NvM_Prv_Queue.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    12  #include "NvM_Prv_ErrorDetection.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    13  #include "NvM_Prv_ProcessMultiBlock.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    14  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    15  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    16   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    17   * Type definitions
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    18   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    19   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    20  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    21   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    22   * Definition of the structure which defines a queue as circular buffer.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    23   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    24  typedef struct
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    25  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    26      /// Index of the first element (head) in the queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    27      /// The head of the queue is the oldest element so it will be dequeued as first.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    28      uint16                              idxHead_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    29      /// Counter of free entries currently available.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    30      uint16                              cntrFreeEntries_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    31      /// Maximum number of entries the queue can maintain.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    32      uint16 const                        size_cu16;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    33      /// Constant pointer to the component global variable which holds the minimum number of free entries in the queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    34      uint8* const                        minNrFreeEntries_cpu8;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    35      /// Pointer to the array to store the entries.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    36      NvM_Prv_QueueEntry_tst* const  data_cpo;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    37  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    38  } NvM_Prv_Queue_tst;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    39  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    40  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    41   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    42   * Constants
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    43   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    44  */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    45  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    46   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    47   * Size definition of the queue for multi-block requests.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    48   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    49   * Queue for multi-block requests has always only one entry.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    50   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    51  #define NVM_PRV_SIZE_MULTI_QUEUE    (1u)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    52  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    53  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    54   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    55   * Size definition of the queue for auxiliary requests.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    56   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    57   * If enabled by the parameter NvMRbAuxInterface the queue for auxiliary requests has only one entry,
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    58   * otherwise the queue for auxiliary requests is not available -> size = 0.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    59   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    60  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2933] Queue for auxiliary requests has only one single entry
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    61  #if (NVM_RB_AUX_INTERFACE == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    62  # define NVM_PRV_SIZE_AUX_QUEUE     (1u)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    63  #else
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    64  # define NVM_PRV_SIZE_AUX_QUEUE     (0u)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    65  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    66  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    67  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    68   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    69   * Size definition of the queue for single-block requests with immediate priority.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    70   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    71   * If enabled by the parameter NvMJobPrioritization the queue size is defined by the parameter NvMSizeImmediateJobQueue,
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    72   * otherwise the queue is not available -> size = 0.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    73   * \note
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    74   * If the immediate queue is disabled then NVM_SIZE_IMMEDIATE_JOB_QUEUE = 1 due to the implementation
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    75   * in corrresponding BCT-action. For this reason queue management is using own constant to get queue size 0.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    76   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    77  #if (NVM_JOB_PRIORITIZATION == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    78  # define NVM_PRV_SIZE_IMMEDIATE_QUEUE   (NVM_SIZE_IMMEDIATE_JOB_QUEUE)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    79  #else
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    80  # define NVM_PRV_SIZE_IMMEDIATE_QUEUE   (0u)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    81  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    82  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    83  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    84   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    85   * Size definition of the queue for all requests provided by the NvM.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    86   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    87  #define NVM_PRV_SIZE_OVERALL_QUEUE (NVM_PRV_SIZE_MULTI_QUEUE    +   \ 
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    88                                      NVM_PRV_SIZE_AUX_QUEUE      +   \ 
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    89                                      NVM_SIZE_STANDARD_JOB_QUEUE +   \ 
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    90                                      NVM_PRV_SIZE_IMMEDIATE_QUEUE)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    91  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    92  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    93   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    94   * Variables
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    95   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    96  */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    97  // Queue monitoring
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    98  #define NVM_START_SEC_VAR_SAVED_ZONE_8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	    99  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   100  /// Minimum number of free entries in the standard queue reached so far during the runtime of the ECU.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   101  uint8 NvM_Rb_minNrFreeStdQueueEntries_u8;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   102  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   103  #if (NVM_JOB_PRIORITIZATION == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   104  /// Minimum number of free entries in the immediate queue reached so far during the runtime of the ECU.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   105  uint8 NvM_Rb_minNrFreeImmQueueEntries_u8;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   106  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   107  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   108  #define NVM_STOP_SEC_VAR_SAVED_ZONE_8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   109  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   110  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   111  #define NVM_START_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   112  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   113  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   114  /// Definition of the array for all requests provided by the NvM.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   115  static NvM_Prv_QueueEntry_tst NvM_Prv_Queue_ast[NVM_PRV_SIZE_OVERALL_QUEUE];
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   116  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   117  #define NVM_STOP_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   118  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   119  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   120  #define NVM_START_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   121  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   122  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   123  /// Definition of the array for all queues provided by the NvM.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   124  static NvM_Prv_Queue_tst NvM_Prv_Queues_ast[NvM_Prv_idQueue_nrQueues_e] =
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   125  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   126      // queue for multi-block requests
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   127      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   128          0,                                              // idxHead_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   129          NVM_PRV_SIZE_MULTI_QUEUE,                       // cntrFreeEntries_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   130          NVM_PRV_SIZE_MULTI_QUEUE,                       // size_cu16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   131          NULL_PTR,                                       // minNrFreeEntries_cpu8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   132          &NvM_Prv_Queue_ast[0]                           // data_cpo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   133      },
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   134  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   135  #if (NVM_RB_AUX_INTERFACE == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   136      // queue for auxiliary requests
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   137      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2932] Own queue for auxiliary jobs
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   138      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   139          0,                                              // idxHead_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   140          NVM_PRV_SIZE_AUX_QUEUE,                         // cntrFreeEntries_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   141          NVM_PRV_SIZE_AUX_QUEUE,                         // size_cu16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   142          NULL_PTR,                                       // minNrFreeEntries_cpu8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   143          &NvM_Prv_Queue_ast[NVM_PRV_SIZE_MULTI_QUEUE]    // data_cpo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   144      },
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   145  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   146  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   147      // queue for single-block requests with standard priority
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   148      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   149          0,                                              // idxHead_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   150          NVM_SIZE_STANDARD_JOB_QUEUE,                    // cntrFreeEntries_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   151          NVM_SIZE_STANDARD_JOB_QUEUE,                    // size_cu16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   152          &NvM_Rb_minNrFreeStdQueueEntries_u8,            // minNrFreeEntries_cpu8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   153          &NvM_Prv_Queue_ast[NVM_PRV_SIZE_MULTI_QUEUE +
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   154                             NVM_PRV_SIZE_AUX_QUEUE]      // data_cpo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   155      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   156  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   157  // TRACE[NVM564] NvMJobPrioritization enables/disables immediate job processing
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   158  #if (NVM_JOB_PRIORITIZATION == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   159      ,
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   160      // queue for single-block requests with immediate priority
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   161      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   162          0,                                              // idxHead_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   163          NVM_PRV_SIZE_IMMEDIATE_QUEUE,                   // cntrFreeEntries_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   164          NVM_PRV_SIZE_IMMEDIATE_QUEUE,                   // size_cu16
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   165          &NvM_Rb_minNrFreeImmQueueEntries_u8,            // minNrFreeEntries_cpu8
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   166          &NvM_Prv_Queue_ast[NVM_PRV_SIZE_MULTI_QUEUE +
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   167                             NVM_PRV_SIZE_AUX_QUEUE   +
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   168                             NVM_SIZE_STANDARD_JOB_QUEUE] // data_cpo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   169      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   170  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   171  };
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   172  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   173  #define NVM_STOP_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   174  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   175  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   176  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   177   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   178   * Code
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   179   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   180  */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   181  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   182  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   183  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   184  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   185   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   186   * This function initializes all queues used by the NvM.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   187   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   188   * Queue data stored in the saved zone will be initialized only if is lost.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   189   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   190   * \param[in] isSavedZoneDataLost_b
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   191   * Status information of the data in the saved zone RAM:
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   192   * - true = data in the saved zone RAM is lost after the reset
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   193   * - false = data in the saved zone RAM is unchanged after the reset
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   194   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   195  void NvM_Prv_Queue_Initialize(boolean isSavedZoneDataLost_b)
; Function NvM_Prv_Queue_Initialize
.L31:
NvM_Prv_Queue_Initialize:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   196  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   197      NvM_Prv_idQueue_tuo idQueue_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   198  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   199      for (idQueue_uo = 0; idQueue_uo < NvM_Prv_idQueue_nrQueues_e; ++idQueue_uo)
	mov	d0,#0
.L125:
	j	.L2
.L3:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   200      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   201          NvM_Prv_Queues_ast[idQueue_uo].idxHead_u16 = 0;
	sha	d15,d0,#4
.L159:
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L160:
	addsc.a	a15,a15,d15,#0
.L161:
	mov	d15,#0
.L162:
	st.h	[a15],d15
.L163:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   202          NvM_Prv_Queues_ast[idQueue_uo].cntrFreeEntries_u16 = NvM_Prv_Queues_ast[idQueue_uo].size_cu16;
	ld.hu	d15,[a15]4
.L164:
	st.h	[a15]2,d15
.L165:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   203  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   204          if (isSavedZoneDataLost_b && (NvM_Prv_Queues_ast[idQueue_uo].minNrFreeEntries_cpu8 != NULL_PTR))
	jeq	d4,#0,.L4
.L166:
	ld.a	a2,[a15]8
.L167:
	jz.a	a2,.L5
.L168:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   205          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   206              *(NvM_Prv_Queues_ast[idQueue_uo].minNrFreeEntries_cpu8) = (uint8)NvM_Prv_Queues_ast[idQueue_uo].size_cu16;
	ld.hu	d15,[a15]4
.L169:
	st.b	[a2],d15
.L5:
.L4:
	add	d0,#1
.L2:
	jlt.u	d0,#2,.L3
.L170:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   207          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   208      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   209  }
	ret
.L89:
	
__NvM_Prv_Queue_Initialize_function_end:
	.size	NvM_Prv_Queue_Initialize,__NvM_Prv_Queue_Initialize_function_end-NvM_Prv_Queue_Initialize
.L52:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_IsEmpty',code,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_IsEmpty'
	.align	2
	
	.global	NvM_Prv_Queue_IsEmpty

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   210  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   211  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   212   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   213   * This function returns the status of the given queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   214   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   215   * \param[in] idQueue_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   216   * Id of the queue for which the status is requested.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   217   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   218   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   219   * - true = given queue is empty
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   220   * - false = given queue has at least one entry
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   221   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   222  boolean NvM_Prv_Queue_IsEmpty(NvM_Prv_idQueue_tuo idQueue_uo)
; Function NvM_Prv_Queue_IsEmpty
.L33:
NvM_Prv_Queue_IsEmpty:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   223  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   224      return (NvM_Prv_Queues_ast[idQueue_uo].size_cu16 == NvM_Prv_Queues_ast[idQueue_uo].cntrFreeEntries_u16);
	sha	d4,#4
.L126:
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L175:
	addsc.a	a15,a15,d4,#0
.L176:
	ld.hu	d15,[a15]4
.L177:
	ld.hu	d0,[a15]2
.L178:
	eq	d2,d15,d0
.L179:
	j	.L6

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   225  }
.L6:
	ret
.L93:
	
__NvM_Prv_Queue_IsEmpty_function_end:
	.size	NvM_Prv_Queue_IsEmpty,__NvM_Prv_Queue_IsEmpty_function_end-NvM_Prv_Queue_IsEmpty
.L57:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_GetFreeEntries',code,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_GetFreeEntries'
	.align	2
	
	.global	NvM_Prv_Queue_GetFreeEntries

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   226  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   227  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   228   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   229   * This function returns number of free entries in the given queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   230   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   231   * \param[in] idQueue_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   232   * Id of the queue for which the number of free entries is requested.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   233   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   234   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   235   * Number of free entries
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   236   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   237  uint16 NvM_Prv_Queue_GetFreeEntries(NvM_Prv_idQueue_tuo idQueue_uo)
; Function NvM_Prv_Queue_GetFreeEntries
.L35:
NvM_Prv_Queue_GetFreeEntries:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   238  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   239      uint16 cntrFreeEntries_u16 = 0u;
	mov	d2,#0
.L128:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   240      if (idQueue_uo < NvM_Prv_idQueue_nrQueues_e)
	jge.u	d4,#2,.L7
.L184:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   241      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   242          cntrFreeEntries_u16 = NvM_Prv_Queues_ast[idQueue_uo].cntrFreeEntries_u16;
	sha	d4,#4
.L127:
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L185:
	addsc.a	a15,a15,d4,#0
.L186:
	ld.hu	d2,[a15]2
.L7:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   243      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   244      return cntrFreeEntries_u16;
	j	.L8

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   245  }
.L8:
	ret
.L96:
	
__NvM_Prv_Queue_GetFreeEntries_function_end:
	.size	NvM_Prv_Queue_GetFreeEntries,__NvM_Prv_Queue_GetFreeEntries_function_end-NvM_Prv_Queue_GetFreeEntries
.L62:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_EnqueueRequest',code,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_EnqueueRequest'
	.align	2
	
	.global	NvM_Prv_Queue_EnqueueRequest

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   246  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   247  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   248   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   249   * This function enqueues a block request into the given queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   250   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   251   * \param[in] idQueue_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   252   * Id of the queue to enqueue the passed block request.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   253   * \param[in] QueueEntry_pcst
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   254   * Pointer to the constant block request to be enqueued into the passed queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   255   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   256   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   257   * - true = passed block request enqueued successfully
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   258   * - false = enqueuing of the passed block request has failed
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   259   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   260  boolean NvM_Prv_Queue_EnqueueRequest(NvM_Prv_idQueue_tuo idQueue_uo,
; Function NvM_Prv_Queue_EnqueueRequest
.L37:
NvM_Prv_Queue_EnqueueRequest:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   261                                       NvM_Prv_QueueEntry_tst const* QueueEntry_pcst)
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   262  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   263      boolean isRequestEnqueued_b = FALSE;
	mov	d8,#0
.L131:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   264  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   265      if ((idQueue_uo < NvM_Prv_idQueue_nrQueues_e) && (QueueEntry_pcst != NULL_PTR))
	jge.u	d4,#2,.L9
.L191:
	jz.a	a4,.L10
.L192:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   266      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   267          if (0 == NvM_Prv_Queues_ast[idQueue_uo].cntrFreeEntries_u16)
	sha	d4,#4
.L130:
	movh.a	a2,#@his(NvM_Prv_Queues_ast)
	lea	a2,[a2]@los(NvM_Prv_Queues_ast)
.L193:
	addsc.a	a15,a2,d4,#0
.L194:
	ld.hu	d15,[a15]2
.L195:
	jne	d15,#0,.L11
.L196:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   268          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   269              // Queue is full -> enqueueing another entry is not possible
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   270              // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2815] Report a production error in case of queue overflow
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   271              NvM_Prv_ErrorDetection_SetProductionError(QueueEntry_pcst->idBlock_uo, NVM_E_QUEUE_OVERFLOW);
	ld.hu	d4,[a4]2
.L197:
	mov	d5,#128
	call	NvM_Prv_ErrorDetection_SetProductionError
.L129:
	j	.L12
.L11:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   272          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   273          else
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   274          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   275              NvM_Prv_Queue_tst *const Queue_cpst = &(NvM_Prv_Queues_ast[idQueue_uo]);
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   276              uint16 idxEnd_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   277              uint16 cntrEntries = Queue_cpst->size_cu16 - Queue_cpst->cntrFreeEntries_u16;
	ld.hu	d15,[a15]4
.L198:
	ld.hu	d0,[a15]2
.L199:
	sub	d0,d15,d0
	extr.u	d1,d0,#0,#16
.L133:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   278              idxEnd_u16 = (Queue_cpst->idxHead_u16 + cntrEntries) % Queue_cpst->size_cu16;
	ld.hu	d0,[a15]0
.L200:
	add	d0,d1
.L201:
	div	e0,d0,d15
.L134:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   279  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   280              Queue_cpst->data_cpo[idxEnd_u16].idService_uo = QueueEntry_pcst->idService_uo;
	mul	d15,d1,#12
.L202:
	ld.a	a2,[a15]12
.L203:
	addsc.a	a2,a2,d15,#0
.L204:
	ld.bu	d0,[a4]
.L205:
	st.b	[a2],d0
.L206:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   281              Queue_cpst->data_cpo[idxEnd_u16].idBlock_uo = QueueEntry_pcst->idBlock_uo;
	ld.a	a2,[a15]12
.L207:
	addsc.a	a2,a2,d15,#0
.L208:
	ld.hu	d0,[a4]2
.L209:
	st.h	[a2]2,d0
.L210:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   282              Queue_cpst->data_cpo[idxEnd_u16].ServiceBit_uo = QueueEntry_pcst->ServiceBit_uo;
	ld.a	a2,[a15]12
.L211:
	addsc.a	a2,a2,d15,#0
.L212:
	ld.hu	d0,[a4]4
.L213:
	st.h	[a2]4,d0
.L214:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   283              Queue_cpst->data_cpo[idxEnd_u16].BlockData_pv = QueueEntry_pcst->BlockData_pv;
	ld.a	a2,[a15]12
.L215:
	addsc.a	a2,a2,d15,#0
.L216:
	ld.a	a4,[a4]8
.L132:
	st.a	[a2]8,a4
.L217:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   284  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   285              --Queue_cpst->cntrFreeEntries_u16;
	ld.hu	d15,[a15]2
.L218:
	add	d15,#-1
	st.h	[a15]2,d15
.L219:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   286  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   287              // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2808]
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   288              // Update the minimum number of standard queue free entries
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   289              // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2809]
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   290              // Update the minimum number of immediate queue free entries
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   291              if ((Queue_cpst->minNrFreeEntries_cpu8 != NULL_PTR) &&
	ld.a	a2,[a15]8
.L220:
	jz.a	a2,.L13
.L221:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   292                  (Queue_cpst->cntrFreeEntries_u16 < *Queue_cpst->minNrFreeEntries_cpu8))
	ld.hu	d15,[a15]2
.L222:
	ld.bu	d0,[a2]
.L223:
	jge.u	d15,d0,.L14
.L224:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   293              {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   294                  *(Queue_cpst->minNrFreeEntries_cpu8) = (uint8)Queue_cpst->cntrFreeEntries_u16;
	st.b	[a2],d15
.L14:
.L13:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   295              }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   296  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   297              isRequestEnqueued_b = TRUE;
	mov	d8,#1
.L12:
.L10:
.L9:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   298          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   299      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   300      return isRequestEnqueued_b;
	mov	d2,d8
.L135:
	j	.L15

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   301  }
.L15:
	ret
.L99:
	
__NvM_Prv_Queue_EnqueueRequest_function_end:
	.size	NvM_Prv_Queue_EnqueueRequest,__NvM_Prv_Queue_EnqueueRequest_function_end-NvM_Prv_Queue_EnqueueRequest
.L67:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_DequeueRequest',code,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_DequeueRequest'
	.align	2
	
	.global	NvM_Prv_Queue_DequeueRequest

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   302  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   303  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   304   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   305   * This function dequeues a block request from the given queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   306   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   307   * \param[in] idQueue_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   308   * Id of the queue to dequeue the passed block request.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   309   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   310  void NvM_Prv_Queue_DequeueRequest(NvM_Prv_idQueue_tuo idQueue_uo)
; Function NvM_Prv_Queue_DequeueRequest
.L39:
NvM_Prv_Queue_DequeueRequest:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   311  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   312      // check whether the queue has entries
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   313      if ((idQueue_uo < (NvM_Prv_idQueue_tuo)NvM_Prv_idQueue_nrQueues_e) &&
	jge.u	d4,#2,.L16
.L229:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   314          (NvM_Prv_Queues_ast[idQueue_uo].cntrFreeEntries_u16 < NvM_Prv_Queues_ast[idQueue_uo].size_cu16))
	sha	d4,#4
.L136:
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L230:
	addsc.a	a15,a15,d4,#0
.L231:
	ld.hu	d15,[a15]2
.L232:
	ld.hu	d0,[a15]4
.L233:
	jge.u	d15,d0,.L17
.L110:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   315      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   316          NvM_Prv_Queue_tst *const Queue_cpst = &(NvM_Prv_Queues_ast[idQueue_uo]);
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   317          Queue_cpst->idxHead_u16 = (Queue_cpst->idxHead_u16 + 1) % Queue_cpst->size_cu16;
	ld.hu	d15,[a15]0
.L234:
	add	d15,#1
.L235:
	ld.hu	d0,[a15]4
.L236:
	div	e0,d15,d0
.L237:
	st.h	[a15],d1
.L238:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   318          ++Queue_cpst->cntrFreeEntries_u16;
	ld.hu	d15,[a15]2
.L239:
	add	d15,#1
	st.h	[a15]2,d15
.L17:
.L16:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   319      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   320  }
	ret
.L108:
	
__NvM_Prv_Queue_DequeueRequest_function_end:
	.size	NvM_Prv_Queue_DequeueRequest,__NvM_Prv_Queue_DequeueRequest_function_end-NvM_Prv_Queue_DequeueRequest
.L72:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_GetEntryToProcess',code,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_GetEntryToProcess'
	.align	2
	
	.global	NvM_Prv_Queue_GetEntryToProcess

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   321  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   322  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   323   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   324   * This function determines which request will be executed as next by the NvM.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   325   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   326   * Normally this function goes through all available queues due to the their priority in descending order.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   327   * And if one queue has an entry to be executed then the pointer to this entry will be returned.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   328   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   329   * If multi-block request is active then this function checks only if immediate queue has an entry.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   330   * And if immediate queue has no entries or is not available then this function returns the pointer
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   331   * to the multi-block queue.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   332   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   333   * \param[out] QueueEntry_ppst
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   334   * Pointer to the pointer to the queue entry to return the parameter of the next executed request.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   335   *
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   336   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   337   * ID of the queue from which the next request to be processed has been taken.
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   338   */
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   339  NvM_Prv_idQueue_tuo NvM_Prv_Queue_GetEntryToProcess(NvM_Prv_QueueEntry_tst** QueueEntry_ppst)
; Function NvM_Prv_Queue_GetEntryToProcess
.L41:
NvM_Prv_Queue_GetEntryToProcess:	.type	func
	mov.aa	a12,a4
.L137:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   340  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   341      NvM_Prv_idQueue_tuo idQueue_uo = NvM_Prv_idQueue_nrQueues_e;
	mov	d8,#2
.L138:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   342  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   343      if (NULL_PTR != QueueEntry_ppst)
	mov.a	a15,#0
.L244:
	jeq.a	a15,a12,.L18
.L245:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   344      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   345          *QueueEntry_ppst = NULL_PTR;
	mov.a	a15,#0
.L246:
	st.a	[a12],a15
.L247:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   346          while ((NULL_PTR == *QueueEntry_ppst) && (idQueue_uo > 0u))
	j	.L19
.L20:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   347          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   348              --idQueue_uo;
	add	d8,#-1
.L248:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   349  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   350              if (NvM_Prv_Multi_IsInProgress() && (NvM_Prv_idQueue_Standard_e == idQueue_uo))
	call	NvM_Prv_Multi_IsInProgress
.L249:
	jeq	d2,#0,.L21
.L250:
	eq	d15,d8,#1
.L251:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   351              {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   352                  idQueue_uo = NvM_Prv_idQueue_Multi_e;
	cmov	d8,d15,#0
.L22:
.L21:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   353              }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   354  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   355              if (!NvM_Prv_Queue_IsEmpty(idQueue_uo))
	mov	d4,d8
.L139:
	call	NvM_Prv_Queue_IsEmpty
.L140:
	jne	d2,#0,.L23
.L252:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   356              {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   357                  *QueueEntry_ppst = &NvM_Prv_Queues_ast[idQueue_uo].data_cpo[NvM_Prv_Queues_ast[idQueue_uo].idxHead_u16];
	sha	d15,d8,#4
.L253:
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L254:
	addsc.a	a15,a15,d15,#0
.L255:
	ld.hu	d15,[a15]0
.L256:
	mul	d15,d15,#12
.L257:
	ld.a	a15,[a15]12
.L258:
	addsc.a	a15,a15,d15,#0
.L259:
	st.a	[a12],a15
.L23:
.L19:
	ld.a	a15,[a12]
.L260:
	mov.a	a2,#0
.L261:
	jne.a	a2,a15,.L24
.L262:
	jne	d8,#0,.L20
.L24:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   358              }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   359          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   360          if (NULL_PTR == *QueueEntry_ppst)
	mov.a	a2,#0
.L263:
	jne.a	a2,a15,.L25
.L264:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   361          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   362              idQueue_uo = NvM_Prv_idQueue_nrQueues_e;
	mov	d8,#2
.L25:
.L18:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   363          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   364      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   365  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   366      return idQueue_uo;
	mov	d2,d8
.L141:
	j	.L26

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   367  }
.L26:
	ret
.L113:
	
__NvM_Prv_Queue_GetEntryToProcess_function_end:
	.size	NvM_Prv_Queue_GetEntryToProcess,__NvM_Prv_Queue_GetEntryToProcess_function_end-NvM_Prv_Queue_GetEntryToProcess
.L77:
	; End of function
	
	.sdecl	'.text.NvM_Queue.NvM_Prv_Queue_IsMultiEnqueued',code,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.text.NvM_Queue.NvM_Prv_Queue_IsMultiEnqueued'
	.align	2
	
	.global	NvM_Prv_Queue_IsMultiEnqueued

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   368  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   369  boolean NvM_Prv_Queue_IsMultiEnqueued(NvM_Prv_idService_tuo idService_uo)
; Function NvM_Prv_Queue_IsMultiEnqueued
.L43:
NvM_Prv_Queue_IsMultiEnqueued:	.type	func
	mov	d8,d4
.L143:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   370  {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   371      boolean IsEnqueuedMulti_b = FALSE;
	mov	d9,#0
.L144:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   372      if (!NvM_Prv_Queue_IsEmpty(NvM_Prv_idQueue_Multi_e))
	mov	d4,#0
.L142:
	call	NvM_Prv_Queue_IsEmpty
.L269:
	jne	d2,#0,.L27
.L120:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   373      {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   374          uint16 idxHead_u16 = NvM_Prv_Queues_ast[NvM_Prv_idQueue_Multi_e].idxHead_u16;
	movh.a	a15,#@his(NvM_Prv_Queues_ast)
	lea	a15,[a15]@los(NvM_Prv_Queues_ast)
.L270:
	ld.hu	d15,[a15]0
.L145:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   375          NvM_Prv_idService_tuo idServiceEnqueued_uo =
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   376                  NvM_Prv_Queues_ast[NvM_Prv_idQueue_Multi_e].data_cpo[idxHead_u16].idService_uo;
	mul	d15,d15,#12
.L146:
	ld.a	a15,[a15]12
.L271:
	addsc.a	a15,a15,d15,#0
.L272:
	ld.bu	d15,[a15]
.L147:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   377          if (idService_uo == idServiceEnqueued_uo)
	eq	d15,d8,d15
.L148:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   378          {
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   379              IsEnqueuedMulti_b = TRUE;
	cmov	d9,d15,#1
.L28:
.L27:

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   380          }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   381      }
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   382      return IsEnqueuedMulti_b;
	mov	d2,d9
.L149:
	j	.L29

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   383  }
.L29:
	ret
.L117:
	
__NvM_Prv_Queue_IsMultiEnqueued_function_end:
	.size	NvM_Prv_Queue_IsMultiEnqueued,__NvM_Prv_Queue_IsMultiEnqueued_function_end-NvM_Prv_Queue_IsMultiEnqueued
.L82:
	; End of function
	
	.sdecl	'.bss.NvM_Queue.NvM_Rb_minNrFreeStdQueueEntries_u8',data,cluster('NvM_Rb_minNrFreeStdQueueEntries_u8')
	.sect	'.bss.NvM_Queue.NvM_Rb_minNrFreeStdQueueEntries_u8'
	.global	NvM_Rb_minNrFreeStdQueueEntries_u8
NvM_Rb_minNrFreeStdQueueEntries_u8:	.type	object
	.size	NvM_Rb_minNrFreeStdQueueEntries_u8,1
	.space	1
	.sdecl	'.bss.NvM_Queue.NvM_Prv_Queue_ast',data,cluster('NvM_Prv_Queue_ast')
	.sect	'.bss.NvM_Queue.NvM_Prv_Queue_ast'
	.align	4
NvM_Prv_Queue_ast:	.type	object
	.size	NvM_Prv_Queue_ast,72
	.space	72
	.sdecl	'.data.NvM_Queue.NvM_Prv_Queues_ast',data,cluster('NvM_Prv_Queues_ast')
	.sect	'.data.NvM_Queue.NvM_Prv_Queues_ast'
	.align	4
NvM_Prv_Queues_ast:	.type	object
	.size	NvM_Prv_Queues_ast,32
	.space	2
	.half	1,1
	.space	6
	.word	NvM_Prv_Queue_ast
	.space	2
	.half	5,5
	.space	2
	.word	NvM_Rb_minNrFreeStdQueueEntries_u8,NvM_Prv_Queue_ast+12
	.calls	'NvM_Prv_Queue_EnqueueRequest','NvM_Prv_ErrorDetection_SetProductionError'
	.calls	'NvM_Prv_Queue_GetEntryToProcess','NvM_Prv_Multi_IsInProgress'
	.calls	'NvM_Prv_Queue_GetEntryToProcess','NvM_Prv_Queue_IsEmpty'
	.calls	'NvM_Prv_Queue_IsMultiEnqueued','NvM_Prv_Queue_IsEmpty'
	.calls	'NvM_Prv_Queue_Initialize','',0
	.calls	'NvM_Prv_Queue_IsEmpty','',0
	.calls	'NvM_Prv_Queue_GetFreeEntries','',0
	.calls	'NvM_Prv_Queue_EnqueueRequest','',0
	.calls	'NvM_Prv_Queue_DequeueRequest','',0
	.calls	'NvM_Prv_Queue_GetEntryToProcess','',0
	.extern	NvM_Prv_ErrorDetection_SetProductionError
	.extern	NvM_Prv_Multi_IsInProgress
	.calls	'NvM_Prv_Queue_IsMultiEnqueued','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L45:
	.word	11314
	.half	3
	.word	.L46
	.byte	4
.L44:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L47
.L90:
	.byte	2
	.byte	'unsigned char',0,1,8
.L95:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.byte	'void',0,4
	.word	174
	.byte	5,1,210,1,9,12,6
	.byte	'idService_uo',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'idBlock_uo',0
	.word	152
	.byte	2,2,35,2,6
	.byte	'ServiceBit_uo',0
	.word	152
	.byte	2,2,35,4,6
	.byte	'BlockData_pv',0
	.word	180
	.byte	4,2,35,8,0,7
	.word	185
.L101:
	.byte	4
	.word	279
	.byte	7
	.word	152
	.byte	4
	.word	135
	.byte	7
	.word	294
	.byte	4
	.word	185
	.byte	7
	.word	304
	.byte	5,2,24,9,16,6
	.byte	'idxHead_u16',0
	.word	152
	.byte	2,2,35,0,6
	.byte	'cntrFreeEntries_u16',0
	.word	152
	.byte	2,2,35,2,6
	.byte	'size_cu16',0
	.word	289
	.byte	2,2,35,4,6
	.byte	'minNrFreeEntries_cpu8',0
	.word	299
	.byte	4,2,35,8,6
	.byte	'data_cpo',0
	.word	309
	.byte	4,2,35,12,0,4
	.word	314
.L104:
	.byte	7
	.word	438
.L111:
	.byte	7
	.word	438
.L114:
	.byte	4
	.word	304
	.byte	8
	.byte	'NvM_Prv_ErrorDetection_SetProductionError',0,3,53,13,1,1,1,1,9
	.byte	'idBlock_uo',0,3,53,71
	.word	152
	.byte	9
	.byte	'MaskErrorBit_u8',0,3,53,89
	.word	135
	.byte	0,10
	.byte	'NvM_Prv_Multi_IsInProgress',0,4,21,16
	.word	135
	.byte	1,1,1,1,11,1,4
	.word	591
	.byte	12
	.byte	'__codeptr',0,2,1,1
	.word	593
	.byte	2
	.byte	'char',0,1,6,12
	.byte	'sint8',0,5,76,25
	.word	616
	.byte	12
	.byte	'uint8',0,5,81,25
	.word	135
	.byte	12
	.byte	'uint16',0,5,91,25
	.word	152
	.byte	2
	.byte	'unsigned int',0,4,7,12
	.byte	'uint32',0,5,106,24
	.word	667
	.byte	2
	.byte	'unsigned long long int',0,8,7,12
	.byte	'uint64',0,5,111,30
	.word	698
	.byte	12
	.byte	'boolean',0,5,127,25
	.word	135
	.byte	12
	.byte	'StatusType',0,6,191,1,27
	.word	135
	.byte	12
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	135
	.byte	5,6,206,1,9,8,6
	.byte	'vendorID',0
	.word	152
	.byte	2,2,35,0,6
	.byte	'moduleID',0
	.word	152
	.byte	2,2,35,2,6
	.byte	'sw_major_version',0
	.word	135
	.byte	1,2,35,4,6
	.byte	'sw_minor_version',0
	.word	135
	.byte	1,2,35,5,6
	.byte	'sw_patch_version',0
	.word	135
	.byte	1,2,35,6,0,12
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	799
	.byte	12
	.byte	'PduIdType',0,7,22,19
	.word	152
	.byte	12
	.byte	'PduLengthType',0,7,26,19
	.word	152
	.byte	13,8,113,9,4,14
	.byte	'TP_DATACONF',0,0,14
	.byte	'TP_DATARETRY',0,1,14
	.byte	'TP_CONFPENDING',0,2,0,12
	.byte	'TpDataStateType',0,8,118,3
	.word	989
	.byte	12
	.byte	'Can_IdType',0,9,32,16
	.word	667
	.byte	12
	.byte	'Can_HwHandleType',0,9,43,16
	.word	152
	.byte	5,10,93,9,8,6
	.byte	'Class',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'TIN',0
	.word	135
	.byte	1,2,35,1,6
	.byte	'ReturnAddress',0
	.word	667
	.byte	4,2,35,4,0,12
	.byte	'OsTrapInfoType',0,10,97,3
	.word	1109
	.byte	15,68
	.word	667
	.byte	16,16,0,5,10,154,1,9,68,6
	.byte	'store',0
	.word	1189
	.byte	68,2,35,0,0,15,68
	.word	1198
	.byte	16,0,0,12
	.byte	'Os_JumpBufType',0,10,156,1,3
	.word	1220
	.byte	12
	.byte	'Os_StackTraceType',0,10,174,1,18
	.word	667
	.byte	5,10,175,1,9,8,6
	.byte	'sp',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'ctx',0
	.word	667
	.byte	4,2,35,4,0,12
	.byte	'Os_StackValueType',0,10,175,1,63
	.word	1280
	.byte	12
	.byte	'Os_StackSizeType',0,10,176,1,27
	.word	1280
	.byte	17,1,1,4
	.word	1365
	.byte	12
	.byte	'Os_VoidVoidFunctionType',0,10,179,1,16
	.word	1368
	.byte	12
	.byte	'ApplicationType',0,10,193,1,23
	.word	135
	.byte	18
	.byte	'Os_ApplicationConfigurationType_s',0,10,198,1,16,2,6
	.byte	'app_id',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,1,0,12
	.byte	'Os_ApplicationConfigurationType',0,10,201,1,3
	.word	1431
	.byte	12
	.byte	'Os_CoreStateType',0,10,203,1,16
	.word	667
	.byte	12
	.byte	'AreaIdType',0,10,204,1,16
	.word	152
	.byte	12
	.byte	'Os_PeripheralAddressType',0,10,212,1,22
	.word	667
	.byte	12
	.byte	'TickType',0,10,221,1,22
	.word	667
	.byte	12
	.byte	'Os_StopwatchTickType',0,10,225,1,22
	.word	667
	.byte	4
	.word	667
	.byte	12
	.byte	'Os_Lockable',0,10,234,1,18
	.word	1673
	.byte	12
	.byte	'CoreIdType',0,10,236,1,16
	.word	152
	.byte	12
	.byte	'SpinlockIdType',0,10,237,1,16
	.word	152
	.byte	13,10,239,1,9,4,14
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,14
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,12
	.byte	'TryToGetSpinlockType',0,10,239,1,74
	.word	1743
	.byte	13,10,174,2,9,4,14
	.byte	'APPLICATION_ACCESSIBLE',0,0,14
	.byte	'APPLICATION_RESTARTING',0,1,14
	.byte	'APPLICATION_TERMINATED',0,2,0,12
	.byte	'ApplicationStateType',0,10,174,2,92
	.word	1836
	.byte	19,1,1,20
	.word	135
	.byte	20
	.word	180
	.byte	0,4
	.word	1948
	.byte	12
	.byte	'Os_FunctionEntryType',0,10,183,2,16
	.word	1962
	.byte	18
	.byte	'Os_MeterInfoType_s',0,10,193,2,16,48,6
	.byte	'elapsed',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'previous',0
	.word	667
	.byte	4,2,35,4,6
	.byte	'max',0
	.word	667
	.byte	4,2,35,8,6
	.byte	'cumulative',0
	.word	667
	.byte	4,2,35,12,6
	.byte	'stackbase',0
	.word	1280
	.byte	8,2,35,16,6
	.byte	'stackusage',0
	.word	1280
	.byte	8,2,35,24,6
	.byte	'stackmax',0
	.word	1280
	.byte	8,2,35,32,6
	.byte	'stackbudget',0
	.word	1280
	.byte	8,2,35,40,0,12
	.byte	'Os_MeterInfoType',0,10,202,2,3
	.word	1997
	.byte	4
	.word	1997
	.byte	12
	.byte	'Os_MeterInfoRefType',0,10,203,2,50
	.word	2195
	.byte	12
	.byte	'EventMaskType',0,10,206,2,15
	.word	135
	.byte	12
	.byte	'Os_imaskType',0,10,211,2,16
	.word	667
	.byte	18
	.byte	'Os_ISRDynType_s',0,10,213,2,16,48,6
	.byte	'meter',0
	.word	1997
	.byte	48,2,35,0,0,12
	.byte	'Os_ISRDynType',0,10,215,2,3
	.word	2274
	.byte	4
	.word	2274
	.byte	7
	.word	2335
	.byte	18
	.byte	'Os_ISRType_s',0,10,216,2,16,24,6
	.byte	'entry_function',0
	.word	1373
	.byte	4,2,35,0,6
	.byte	'dynamic',0
	.word	2340
	.byte	4,2,35,4,6
	.byte	'imask',0
	.word	667
	.byte	4,2,35,8,6
	.byte	'stackbudget',0
	.word	1280
	.byte	8,2,35,12,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,20,6
	.byte	'application',0
	.word	135
	.byte	1,2,35,21,0,12
	.byte	'Os_ISRType',0,10,223,2,3
	.word	2345
	.byte	4
	.word	1365
	.byte	7
	.word	2345
	.byte	4
	.word	2504
	.byte	12
	.byte	'ISRType',0,10,224,2,46
	.word	2509
	.byte	12
	.byte	'Os_bitmask',0,10,239,2,22
	.word	667
	.byte	12
	.byte	'Os_pset0Type',0,10,240,2,20
	.word	667
	.byte	12
	.byte	'Os_pset1Type',0,10,241,2,20
	.word	667
	.byte	12
	.byte	'Os_pset2Type',0,10,242,2,20
	.word	667
	.byte	21,10,243,2,9,4,6
	.byte	'p0',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'p1',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'p2',0
	.word	667
	.byte	4,2,35,0,0,12
	.byte	'Os_psetType',0,10,247,2,3
	.word	2617
	.byte	21,10,249,2,9,4,6
	.byte	't0',0
	.word	667
	.byte	4,2,35,0,6
	.byte	't1',0
	.word	667
	.byte	4,2,35,0,6
	.byte	't2',0
	.word	667
	.byte	4,2,35,0,0,12
	.byte	'Os_tpmaskType',0,10,253,2,3
	.word	2681
	.byte	12
	.byte	'Os_ActivationCountType',0,10,254,2,23
	.word	135
	.byte	18
	.byte	'Os_TaskDynType_s',0,10,128,3,16,120,6
	.byte	'terminate_jump_buf',0
	.word	1229
	.byte	68,2,35,0,6
	.byte	'meter',0
	.word	1997
	.byte	48,2,35,68,6
	.byte	'activation_count',0
	.word	135
	.byte	1,2,35,116,0,12
	.byte	'Os_TaskDynType',0,10,132,3,3
	.word	2779
	.byte	15,68
	.word	1198
	.byte	16,0,0,4
	.word	2779
	.byte	7
	.word	2905
	.byte	18
	.byte	'Os_TaskType_s',0,10,134,3,16,40,6
	.byte	'dynamic',0
	.word	2910
	.byte	4,2,35,0,6
	.byte	'entry_function',0
	.word	1373
	.byte	4,2,35,4,6
	.byte	'pset',0
	.word	2617
	.byte	4,2,35,8,6
	.byte	'base_tpmask',0
	.word	2681
	.byte	4,2,35,12,6
	.byte	'tpmask',0
	.word	2681
	.byte	4,2,35,16,6
	.byte	'core_id',0
	.word	152
	.byte	2,2,35,20,6
	.byte	'index',0
	.word	667
	.byte	4,2,35,24,6
	.byte	'stackbudget',0
	.word	1280
	.byte	8,2,35,28,6
	.byte	'activation_count',0
	.word	135
	.byte	1,2,35,36,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,37,6
	.byte	'application',0
	.word	135
	.byte	1,2,35,38,0,12
	.byte	'Os_TaskType',0,10,146,3,3
	.word	2915
	.byte	7
	.word	2915
	.byte	4
	.word	3165
	.byte	12
	.byte	'TaskType',0,10,147,3,47
	.word	3170
	.byte	22
	.byte	'Os_TaskStateType',0,10,155,3,6,4,14
	.byte	'SUSPENDED',0,0,14
	.byte	'READY',0,1,14
	.byte	'WAITING',0,2,14
	.byte	'RUNNING',0,3,0,12
	.byte	'TaskStateType',0,10,156,3,31
	.word	3193
	.byte	21,10,167,3,3,4,6
	.byte	'tpmask',0
	.word	2681
	.byte	4,2,35,0,0,18
	.byte	'Os_ResourceDynType_s',0,10,166,3,16,4,6
	.byte	'saved_priority',0
	.word	3280
	.byte	4,2,35,0,0,12
	.byte	'Os_ResourceDynType',0,10,170,3,3
	.word	3303
	.byte	4
	.word	3303
	.byte	7
	.word	3383
	.byte	18
	.byte	'Os_ResourceType_s',0,10,171,3,16,12,6
	.byte	'dynamic',0
	.word	3388
	.byte	4,2,35,0,6
	.byte	'tpmask',0
	.word	2681
	.byte	4,2,35,4,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,8,0,12
	.byte	'Os_ResourceType',0,10,175,3,3
	.word	3393
	.byte	5,10,181,3,9,12,6
	.byte	'maxallowedvalue',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'ticksperbase',0
	.word	667
	.byte	4,2,35,4,6
	.byte	'mincycle',0
	.word	667
	.byte	4,2,35,8,0,12
	.byte	'AlarmBaseType',0,10,185,3,3
	.word	3492
	.byte	5,10,206,3,9,8,6
	.byte	'Running',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'Pending',0
	.word	135
	.byte	1,2,35,1,6
	.byte	'Delay',0
	.word	667
	.byte	4,2,35,4,0,12
	.byte	'Os_CounterStatusType',0,10,210,3,3
	.word	3587
	.byte	23
	.word	135
	.byte	1,1,4
	.word	3673
	.byte	12
	.byte	'Os_CounterIncrAdvType',0,10,217,3,22
	.word	3680
	.byte	18
	.byte	's_swd',0,10,222,3,12,4,6
	.byte	'count',0
	.word	667
	.byte	4,2,35,0,0,21,10,221,3,3,4,6
	.byte	'sw',0
	.word	3716
	.byte	4,2,35,0,0,18
	.byte	'Os_CounterDynType_s',0,10,220,3,16,4,6
	.byte	'type_dependent',0
	.word	3744
	.byte	4,2,35,0,0,12
	.byte	'Os_CounterDynType',0,10,226,3,3
	.word	3763
	.byte	4
	.word	3763
	.byte	7
	.word	3841
	.byte	18
	.byte	'Os_CounterType_s',0,10,227,3,16,28,6
	.byte	'dynamic',0
	.word	3846
	.byte	4,2,35,0,6
	.byte	'advincr',0
	.word	3685
	.byte	4,2,35,4,6
	.byte	'base',0
	.word	3492
	.byte	12,2,35,8,6
	.byte	'core',0
	.word	180
	.byte	4,2,35,20,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,24,6
	.byte	'application',0
	.word	135
	.byte	1,2,35,25,0,12
	.byte	'Os_CounterType',0,10,234,3,3
	.word	3851
	.byte	4
	.word	3673
	.byte	7
	.word	3851
	.byte	4
	.word	4003
	.byte	12
	.byte	'CounterType',0,10,235,3,52
	.word	4008
	.byte	22
	.byte	'Os_ScheduleTableStatusType',0,10,240,3,6,4,14
	.byte	'SCHEDULETABLE_STOPPED',0,0,14
	.byte	'SCHEDULETABLE_NEXT',0,1,14
	.byte	'SCHEDULETABLE_WAITING',0,2,14
	.byte	'SCHEDULETABLE_RUNNING',0,3,14
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,12
	.byte	'ScheduleTableStatusType',0,10,241,3,41
	.word	4034
	.byte	7
	.word	.L150-.L45
	.byte	4
	.word	4234
	.byte	12
	.byte	'ScheduleTableType',0,10,128,4,58
	.word	4239
	.byte	18
	.byte	'Os_ScheduleTableDynType_s',0,10,130,4,16,16,6
	.byte	'match',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'next',0
	.word	4244
	.byte	4,2,35,4,6
	.byte	'state',0
	.word	4034
	.byte	4,2,35,8,6
	.byte	'config',0
	.word	152
	.byte	2,2,35,12,0,4
	.word	4271
	.byte	7
	.word	4364
.L150:
	.byte	18
	.byte	'Os_ScheduleTableType_s',0,10,247,3,16,16,6
	.byte	'dynamic',0
	.word	4369
	.byte	4,2,35,0,6
	.byte	'counter',0
	.word	4013
	.byte	4,2,35,4,6
	.byte	'repeat',0
	.word	135
	.byte	1,2,35,8,6
	.byte	'config',0
	.word	152
	.byte	2,2,35,10,6
	.byte	'initial',0
	.word	135
	.byte	1,2,35,12,6
	.byte	'access',0
	.word	135
	.byte	1,2,35,13,6
	.byte	'application',0
	.word	135
	.byte	1,2,35,14,0,12
	.byte	'Os_ScheduleTableType',0,10,255,3,3
	.word	4374
	.byte	7
	.word	4374
	.byte	4
	.word	4554
	.byte	7
	.word	3851
	.byte	4
	.word	4564
	.byte	24
	.word	1678
	.byte	24
	.word	2617
	.byte	24
	.word	2514
	.byte	24
	.word	3175
	.byte	24
	.word	2681
	.byte	24
	.word	135
	.byte	24
	.word	3175
	.byte	18
	.byte	'Os_ControlledCoreType_s',0,10,251,6,16,112,6
	.byte	'TrapInfo',0
	.word	1109
	.byte	8,2,35,0,6
	.byte	'lock_taskaccess',0
	.word	4574
	.byte	4,2,35,8,6
	.byte	'ReadyTasks',0
	.word	4579
	.byte	4,2,35,12,6
	.byte	'RunningISR',0
	.word	4584
	.byte	4,2,35,16,6
	.byte	'RunningTask',0
	.word	4589
	.byte	4,2,35,20,6
	.byte	'RunningTPMask',0
	.word	4594
	.byte	4,2,35,24,6
	.byte	'CurrentMeteredObject',0
	.word	2200
	.byte	4,2,35,28,6
	.byte	'IdleMeter',0
	.word	1997
	.byte	48,2,35,32,6
	.byte	'AppAccess',0
	.word	135
	.byte	1,2,35,80,6
	.byte	'AppOverride',0
	.word	4599
	.byte	1,2,35,81,6
	.byte	'GetStackValueAdjust',0
	.word	1280
	.byte	8,2,35,84,6
	.byte	'InErrorHook',0
	.word	135
	.byte	1,2,35,92,6
	.byte	'ChainTaskRef',0
	.word	4604
	.byte	4,2,35,96,6
	.byte	'GetStackUsageAdjust',0
	.word	1280
	.byte	8,2,35,100,6
	.byte	'InProtectionHook',0
	.word	135
	.byte	1,2,35,108,6
	.byte	'CoreIsActive',0
	.word	135
	.byte	1,2,35,109,6
	.byte	'InShutdownHook',0
	.word	135
	.byte	1,2,35,110,0,12
	.byte	'Os_ControlledCoreType',0,10,141,7,3
	.word	4609
	.byte	4
	.word	667
	.byte	7
	.word	2345
	.byte	4
	.word	5065
	.byte	7
	.word	2915
	.byte	4
	.word	5075
	.byte	4
	.word	1997
	.byte	18
	.byte	'Os_AnyCoreType_s',0,10,151,7,16,96,6
	.byte	'DisableAllImask',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'SuspendAllImask',0
	.word	667
	.byte	4,2,35,4,6
	.byte	'SuspendOSImask',0
	.word	667
	.byte	4,2,35,8,6
	.byte	'DisableAllCount',0
	.word	667
	.byte	4,2,35,12,6
	.byte	'SuspendAllCount',0
	.word	667
	.byte	4,2,35,16,6
	.byte	'SuspendOSCount',0
	.word	667
	.byte	4,2,35,20,6
	.byte	'RestartJumpBuf',0
	.word	1229
	.byte	68,2,35,24,6
	.byte	'Restartable',0
	.word	135
	.byte	1,2,35,92,0,12
	.byte	'Os_AnyCoreType',0,10,160,7,3
	.word	5090
	.byte	12
	.byte	'Can_TxObjPriorityClassType',0,11,219,3,16
	.word	667
	.byte	18
	.byte	'Can_TxHwObjectConfigType',0,11,231,3,16,8,6
	.byte	'MsgObjId',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'HwControllerId',0
	.word	135
	.byte	1,2,35,1,6
	.byte	'TxObjPriorityClass',0
	.word	667
	.byte	4,2,35,4,0,12
	.byte	'Can_TxHwObjectConfigType',0,11,252,3,3
	.word	5367
	.byte	18
	.byte	'Can_RxHwObjectConfigType',0,11,129,4,16,12,6
	.byte	'MaskRef',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'MsgId',0
	.word	667
	.byte	4,2,35,4,6
	.byte	'MsgObjId',0
	.word	135
	.byte	1,2,35,8,6
	.byte	'HwControllerId',0
	.word	135
	.byte	1,2,35,9,0,12
	.byte	'Can_RxHwObjectConfigType',0,11,147,4,3
	.word	5503
	.byte	15,4
	.word	135
	.byte	16,3,0,18
	.byte	'Can_ControllerMOMapConfigType',0,11,181,4,16,4,6
	.byte	'ControllerMOMap',0
	.word	5643
	.byte	4,2,35,0,0,12
	.byte	'Can_ControllerMOMapConfigType',0,11,184,4,3
	.word	5652
	.byte	18
	.byte	'Can_NPCRValueType',0,11,188,4,16,2,6
	.byte	'Can_NPCRValue',0
	.word	152
	.byte	2,2,35,0,0,12
	.byte	'Can_NPCRValueType',0,11,191,4,3
	.word	5753
	.byte	18
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,194,4,16,8,6
	.byte	'CanControllerBaudrate',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'CanControllerBaudrateCfg',0
	.word	152
	.byte	2,2,35,4,0,12
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,11,198,4,3
	.word	5828
	.byte	7
	.word	5828
	.byte	4
	.word	5993
	.byte	18
	.byte	'Can_BaudrateConfigPtrType',0,11,201,4,16,4,6
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5998
	.byte	4,2,35,0,0,12
	.byte	'Can_BaudrateConfigPtrType',0,11,204,4,3
	.word	6003
	.byte	18
	.byte	'Can_EventHandlingType',0,11,226,4,16,4,6
	.byte	'CanEventType',0
	.word	5643
	.byte	4,2,35,0,0,12
	.byte	'Can_EventHandlingType',0,11,229,4,3
	.word	6103
	.byte	12
	.byte	'Rte_TransformerErrorCode',0,12,130,1,15
	.word	135
	.byte	12
	.byte	'Rte_TransformerClass',0,12,131,1,15
	.word	135
	.byte	5,12,168,1,9,12,6
	.byte	'in',0
	.word	180
	.byte	4,2,35,0,6
	.byte	'out',0
	.word	180
	.byte	4,2,35,4,6
	.byte	'used',0
	.word	152
	.byte	2,2,35,8,6
	.byte	'lost_data',0
	.word	135
	.byte	1,2,35,10,0,12
	.byte	'Rte_QDynType',0,12,173,1,3
	.word	6249
	.byte	13,12,175,1,9,4,14
	.byte	'RTE_DRA',0,0,14
	.byte	'RTE_WOWP',0,1,14
	.byte	'RTE_TASK',0,2,14
	.byte	'RTE_ARE',0,3,14
	.byte	'RTE_EV',0,4,14
	.byte	'RTE_MSI',0,5,0,12
	.byte	'Rte_NotificationType',0,12,182,1,3
	.word	6336
	.byte	4
	.word	6249
	.byte	18
	.byte	'Rte_QCmnType',0,12,184,1,16,24,6
	.byte	'dynamic',0
	.word	6434
	.byte	4,2,35,0,6
	.byte	'copy',0
	.word	135
	.byte	1,2,35,4,6
	.byte	'queue_size',0
	.word	152
	.byte	2,2,35,6,6
	.byte	'element_size',0
	.word	152
	.byte	2,2,35,8,6
	.byte	'buffer_start',0
	.word	180
	.byte	4,2,35,12,6
	.byte	'buffer_end',0
	.word	180
	.byte	4,2,35,16,6
	.byte	'notification_type',0
	.word	6336
	.byte	4,2,35,20,0,12
	.byte	'Rte_QCmnType',0,12,192,1,3
	.word	6439
	.byte	12
	.byte	'Rte_AlarmRefType',0,12,224,1,32
	.word	667
	.byte	12
	.byte	'Rte_AlarmIndexType',0,12,226,1,32
	.word	152
	.byte	15,128,8
	.word	135
	.byte	16,255,7,0,12
	.byte	'Impl_NVM_DstPtrType_1024',0,13,50,15
	.word	6677
	.byte	12
	.byte	'CanIf_u32_impl',0,13,69,16
	.word	667
	.byte	12
	.byte	'CanIf_u16_impl',0,13,71,16
	.word	152
	.byte	12
	.byte	'CanIf_u8_impl',0,13,73,15
	.word	135
	.byte	12
	.byte	'CanIf_ControllerModeType_Enum_impl',0,13,88,15
	.word	135
	.byte	12
	.byte	'CanIf_PduModeType_Enum_impl',0,13,90,15
	.word	135
	.byte	5,13,92,9,2,6
	.byte	'DeviceMode',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'ChannelMode',0
	.word	135
	.byte	1,2,35,1,0,12
	.byte	'CanIf_ControllerStateType_struct_impl',0,13,95,3
	.word	6868
	.byte	12
	.byte	'CanIf_NotifStatusType_Enum_impl',0,13,100,15
	.word	135
	.byte	12
	.byte	'CanSM_boolean_Impl',0,13,120,15
	.word	135
	.byte	12
	.byte	'CanSM_u8_Impl',0,13,123,15
	.word	135
	.byte	12
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,13,128,1,15
	.word	135
	.byte	12
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,13,132,1,15
	.word	135
	.byte	12
	.byte	'CanSM_u16_Impl',0,13,136,1,16
	.word	152
	.byte	12
	.byte	'CanSM_TimerStateType_Enum_impl',0,13,138,1,15
	.word	135
	.byte	5,13,140,1,9,4,6
	.byte	'cntTick_u16',0
	.word	152
	.byte	2,2,35,0,6
	.byte	'stTimer',0
	.word	135
	.byte	1,2,35,2,0,12
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,13,143,1,3
	.word	7209
	.byte	12
	.byte	'Com_impl_u16',0,13,154,1,16
	.word	152
	.byte	12
	.byte	'Com_impl_u8',0,13,157,1,15
	.word	135
	.byte	12
	.byte	'ComM_uint32_Impl',0,13,173,1,16
	.word	667
	.byte	12
	.byte	'ComM_uint16_Impl',0,13,175,1,16
	.word	152
	.byte	12
	.byte	'ComM_uint8_Impl',0,13,177,1,15
	.word	135
	.byte	12
	.byte	'ComM_bool_Impl',0,13,179,1,15
	.word	135
	.byte	5,13,181,1,9,24,6
	.byte	'ChannelState_e',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'LightTimeoutCtr_u32',0
	.word	667
	.byte	4,2,35,4,6
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	152
	.byte	2,2,35,8,6
	.byte	'ChannelMode_u8',0
	.word	135
	.byte	1,2,35,10,6
	.byte	'BusSmMode_u8',0
	.word	135
	.byte	1,2,35,11,6
	.byte	'UserRequestCtr_u8',0
	.word	135
	.byte	1,2,35,12,6
	.byte	'PassiveRequestState_u8',0
	.word	135
	.byte	1,2,35,13,6
	.byte	'PncRequestCtr_u8',0
	.word	135
	.byte	1,2,35,14,6
	.byte	'InhibitionReqStatus_u8',0
	.word	135
	.byte	1,2,35,15,6
	.byte	'NmNetworkRequestStatus_b',0
	.word	135
	.byte	1,2,35,16,6
	.byte	'DiagnosticRequestState_b',0
	.word	135
	.byte	1,2,35,17,6
	.byte	'CommunicationAllowed_b',0
	.word	135
	.byte	1,2,35,18,6
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	135
	.byte	1,2,35,19,6
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	135
	.byte	1,2,35,20,6
	.byte	'NmNetworkModeStatus_b',0
	.word	135
	.byte	1,2,35,21,0,12
	.byte	'ComM_ChannelStruct_Impl',0,13,197,1,3
	.word	7441
	.byte	5,13,206,1,9,10,6
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	152
	.byte	2,2,35,0,6
	.byte	'LimitToNoComCtr_u16',0
	.word	152
	.byte	2,2,35,2,6
	.byte	'RequestedUserMode_t',0
	.word	135
	.byte	1,2,35,4,6
	.byte	'IndicatedUserMode_t',0
	.word	135
	.byte	1,2,35,5,6
	.byte	'numChannelsInFullCom_u8',0
	.word	135
	.byte	1,2,35,6,6
	.byte	'numChannelsInSilentCom_u8',0
	.word	135
	.byte	1,2,35,7,6
	.byte	'numChannelsInNoCom_u8',0
	.word	135
	.byte	1,2,35,8,0,12
	.byte	'ComM_UserStruct_Impl',0,13,214,1,3
	.word	7945
	.byte	12
	.byte	'Dcm_IOOperationResponseType',0,13,252,1,15
	.word	135
	.byte	12
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	13,138,2,15
	.word	135
	.byte	12
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,13,146,2,15
	.word	135
	.byte	12
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,13,150,2,15
	.word	135
	.byte	12
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,13,154,2,15
	.word	135
	.byte	12
	.byte	'NvM_BlockIdType',0,13,215,2,16
	.word	152
	.byte	12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,13,243,3,34
	.word	6688
	.byte	15,128,8
	.word	135
	.byte	16,255,7,0,12
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,13,246,3,34
	.word	6688
	.byte	13,14,31,9,4,14
	.byte	'MEMIF_JOB_OK',0,0,14
	.byte	'MEMIF_JOB_FAILED',0,1,14
	.byte	'MEMIF_JOB_PENDING',0,2,14
	.byte	'MEMIF_JOB_CANCELED',0,3,14
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,14
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,12
	.byte	'MemIf_JobResultType',0,14,39,2
	.word	8788
	.byte	13,1,49,9,4,14
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,14
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,14
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,14
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,14
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,14
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,14
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,12
	.byte	'NvM_Prv_Activities_ten',0,1,58,3
	.word	8946
	.byte	13,1,104,9,4,14
	.byte	'NvM_Prv_idJob_Idle_e',0,0,14
	.byte	'NvM_Prv_idJob_Read_e',0,1,14
	.byte	'NvM_Prv_idJob_Write_e',0,2,14
	.byte	'NvM_Prv_idJob_Erase_e',0,3,14
	.byte	'NvM_Prv_idJob_Restore_e',0,4,14
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,14
	.byte	'NvM_Prv_idJob_Validate_e',0,6,14
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,14
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,14
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,14
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,14
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,14
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,14
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,12
	.byte	'NvM_Prv_idJob_ten',0,1,115,3
	.word	9187
	.byte	12
	.byte	'NvM_Prv_ServiceBit_tuo',0,1,168,1,16
	.word	152
	.byte	12
	.byte	'NvM_Prv_idService_tuo',0,1,173,1,15
	.word	135
	.byte	12
	.byte	'NvM_Prv_idQueue_tuo',0,1,206,1,15
	.word	135
	.byte	12
	.byte	'NvM_Prv_QueueEntry_tst',0,1,225,1,3
	.word	185
	.byte	5,1,227,1,9,20,6
	.byte	'idJob_en',0
	.word	9187
	.byte	4,2,35,0,6
	.byte	'idBlock_uo',0
	.word	152
	.byte	2,2,35,4,6
	.byte	'RamBlock_pu8',0
	.word	294
	.byte	4,2,35,8,6
	.byte	'idxDataset_u8',0
	.word	135
	.byte	1,2,35,12,6
	.byte	'Result_en',0
	.word	8788
	.byte	4,2,35,16,0,12
	.byte	'NvM_Prv_JobData_tst',0,1,240,1,3
	.word	9776
	.byte	12
	.byte	'Rte_TaskRefType',0,15,184,1,32
	.word	3175
	.byte	12
	.byte	'Rte_EventRefType',0,15,185,1,32
	.word	135
	.byte	12
	.byte	'Rte_EventType',0,15,186,1,32
	.word	667
	.byte	12
	.byte	'Rte_REActCounterType',0,15,252,1,15
	.word	135
	.byte	4
	.word	135
	.byte	12
	.byte	'Rte_REActCounterRefType',0,15,253,1,58
	.word	10018
	.byte	5,15,255,1,9,8,6
	.byte	'task',0
	.word	9914
	.byte	4,2,35,0,6
	.byte	'acnt',0
	.word	10023
	.byte	4,2,35,4,0,12
	.byte	'Rte_REContainerType',0,15,130,2,3
	.word	10056
	.byte	7
	.word	2915
	.byte	4
	.word	10120
	.byte	4
	.word	135
	.byte	7
	.word	10056
	.byte	4
	.word	10135
	.byte	12
	.byte	'Rte_REContainerRefType',0,15,132,2,60
	.word	10140
	.byte	12
	.byte	'Rte_MSICounterType',0,15,149,2,16
	.word	152
	.byte	4
	.word	152
	.byte	12
	.byte	'Rte_MSICounterRefType',0,15,150,2,56
	.word	10205
	.byte	12
	.byte	'Rte_MSIPendingFlagType',0,15,152,2,17
	.word	135
	.byte	4
	.word	135
	.byte	12
	.byte	'Rte_MSIPendingFlagRefType',0,15,153,2,60
	.word	10273
	.byte	5,15,163,2,9,24,6
	.byte	'counter',0
	.word	10210
	.byte	4,2,35,0,6
	.byte	'incCounter',0
	.word	135
	.byte	1,2,35,4,6
	.byte	'pending',0
	.word	10278
	.byte	4,2,35,8,6
	.byte	'osTask',0
	.word	9914
	.byte	4,2,35,12,6
	.byte	'acnt',0
	.word	10023
	.byte	4,2,35,16,6
	.byte	'osEvent',0
	.word	135
	.byte	1,2,35,20,6
	.byte	'MSIInit',0
	.word	152
	.byte	2,2,35,22,0,12
	.byte	'Rte_MSITableEntry',0,15,172,2,3
	.word	10313
	.byte	4
	.word	152
	.byte	4
	.word	135
	.byte	12
	.byte	'Rte_TaskArrayIndex',0,15,179,2,16
	.word	135
	.byte	12
	.byte	'Rte_NrWaitingTasks',0,15,180,2,16
	.word	135
	.byte	5,15,182,2,9,4,6
	.byte	'pending',0
	.word	135
	.byte	1,2,35,0,6
	.byte	'count',0
	.word	135
	.byte	1,2,35,1,6
	.byte	'firstWaitingTask',0
	.word	135
	.byte	1,2,35,2,0,12
	.byte	'Rte_WaitableDatum',0,15,186,2,3
	.word	10531
	.byte	4
	.word	10531
	.byte	5,15,226,2,9,12,6
	.byte	'event_id',0
	.word	667
	.byte	4,2,35,0,6
	.byte	'wd',0
	.word	10623
	.byte	4,2,35,4,6
	.byte	'timeout',0
	.word	667
	.byte	4,2,35,8,0,12
	.byte	'Rte_WOWP_NotificationType',0,15,230,2,3
	.word	10628
	.byte	7
	.word	10628
	.byte	4
	.word	10717
	.byte	12
	.byte	'Rte_WOWP_NotificationRefType',0,15,232,2,66
	.word	10722
	.byte	12
	.byte	'Rte_ARE_NotificationType',0,15,234,2,29
	.word	10056
	.byte	18
	.byte	'Rte_QTaskType',0,15,243,2,16,28,6
	.byte	'cmn',0
	.word	6439
	.byte	24,2,35,0,6
	.byte	'task',0
	.word	9914
	.byte	4,2,35,24,0,12
	.byte	'Rte_QTaskType',0,15,246,2,3
	.word	10799
	.byte	18
	.byte	'Rte_QREType',0,15,250,2,16,28,6
	.byte	'cmn',0
	.word	6439
	.byte	24,2,35,0,6
	.byte	're',0
	.word	10145
	.byte	4,2,35,24,0,12
	.byte	'Rte_QREType',0,15,253,2,3
	.word	10870
	.byte	7
	.word	10056
	.byte	4
	.word	10935
	.byte	18
	.byte	'Rte_QWWPType',0,15,129,3,16,28,6
	.byte	'cmn',0
	.word	6439
	.byte	24,2,35,0,6
	.byte	'wwp',0
	.word	10727
	.byte	4,2,35,24,0,12
	.byte	'Rte_QWWPType',0,15,132,3,3
	.word	10945
	.byte	7
	.word	10628
	.byte	4
	.word	11013
	.byte	18
	.byte	'Rte_QEvType',0,15,136,3,16,36,6
	.byte	'cmn',0
	.word	6439
	.byte	24,2,35,0,6
	.byte	'task',0
	.word	9914
	.byte	4,2,35,24,6
	.byte	'mask',0
	.word	135
	.byte	1,2,35,28,6
	.byte	'acnt',0
	.word	10023
	.byte	4,2,35,32,0,12
	.byte	'Rte_QEvType',0,15,141,3,3
	.word	11023
	.byte	18
	.byte	'Rte_QMSIType',0,15,145,3,16,48,6
	.byte	'cmn',0
	.word	6439
	.byte	24,2,35,0,6
	.byte	'task',0
	.word	9914
	.byte	4,2,35,24,6
	.byte	'mask',0
	.word	135
	.byte	1,2,35,28,6
	.byte	'acnt',0
	.word	10023
	.byte	4,2,35,32,6
	.byte	'msiCounter',0
	.word	10210
	.byte	4,2,35,36,6
	.byte	'msiPending',0
	.word	10278
	.byte	4,2,35,40,6
	.byte	'msiLimit',0
	.word	152
	.byte	2,2,35,44,0,12
	.byte	'Rte_QMSIType',0,15,153,3,3
	.word	11118
	.byte	12
	.byte	'NvM_Prv_Queue_tst',0,2,38,3
	.word	314
.L123:
	.byte	15,72
	.word	185
	.byte	16,5,0
.L124:
	.byte	15,32
	.word	314
	.byte	16,1,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,59,0,3,8,0,0,4,15,0,73,19,0
	.byte	0,5,19,1,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73,19,11,15,56,9,0,0,7,38,0,73,19,0,0,8,46,1,3,8,58,15
	.byte	59,15,57,15,54,15,39,12,63,12,60,12,0,0,9,5,0,3,8,58,15,59,15,57,15,73,19,0,0,10,46,0,3,8,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,63,12,60,12,0,0,11,21,0,54,15,0,0,12,22,0,3,8,58,15,59,15,57,15,73,19,0,0,13,4
	.byte	1,58,15,59,15,57,15,11,15,0,0,14,40,0,3,8,28,13,0,0,15,1,1,11,15,73,19,0,0,16,33,0,47,15,0,0,17,21,0,54
	.byte	15,39,12,0,0,18,19,1,3,8,58,15,59,15,57,15,11,15,0,0,19,21,1,54,15,39,12,0,0,20,5,0,73,19,0,0,21,23,1
	.byte	58,15,59,15,57,15,11,15,0,0,22,4,1,3,8,58,15,59,15,57,15,11,15,0,0,23,21,0,73,19,54,15,39,12,0,0,24,53
	.byte	0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L47:
	.word	.L152-.L151
.L151:
	.half	3
	.word	.L154-.L153
.L153:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_ErrorDetection.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_ProcessMultiBlock.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L154:
.L152:
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_info'
.L48:
	.word	256
	.half	3
	.word	.L49
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L51,.L50
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_Initialize',0,1,195,1,6,1,1,1
	.word	.L31,.L89,.L30
	.byte	4
	.byte	'isSavedZoneDataLost_b',0,1,195,1,39
	.word	.L90,.L91
	.byte	5
	.word	.L31,.L89
	.byte	6
	.byte	'idQueue_uo',0,1,197,1,25
	.word	.L90,.L92
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_abbrev'
.L49:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_line'
.L50:
	.word	.L156-.L155
.L155:
	.half	3
	.word	.L158-.L157
.L157:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L158:
	.byte	5,21,7,0,5,2
	.word	.L31
	.byte	3,198,1,1,5,65,9
	.half	.L125-.L31
	.byte	1,5,28,9
	.half	.L3-.L125
	.byte	3,2,1,5,9,9
	.half	.L159-.L3
	.byte	1,5,27,9
	.half	.L160-.L159
	.byte	1,5,54,9
	.half	.L161-.L160
	.byte	1,5,52,9
	.half	.L162-.L161
	.byte	1,5,92,9
	.half	.L163-.L162
	.byte	3,1,1,5,60,9
	.half	.L164-.L163
	.byte	1,5,13,9
	.half	.L165-.L164
	.byte	3,2,1,5,69,7,9
	.half	.L166-.L165
	.byte	1,5,92,9
	.half	.L167-.L166
	.byte	1,5,108,7,9
	.half	.L168-.L167
	.byte	3,2,1,5,69,9
	.half	.L169-.L168
	.byte	1,5,67,9
	.half	.L4-.L169
	.byte	3,121,1,5,65,9
	.half	.L2-.L4
	.byte	1,5,1,7,9
	.half	.L170-.L2
	.byte	3,10,1,7,9
	.half	.L52-.L170
	.byte	0,1,1
.L156:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_ranges'
.L51:
	.word	-1,.L31,0,.L52-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_info'
.L53:
	.word	221
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L56,.L55
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_IsEmpty',0,1,222,1,9
	.word	.L90
	.byte	1,1,1
	.word	.L33,.L93,.L32
	.byte	4
	.byte	'idQueue_uo',0,1,222,1,51
	.word	.L90,.L94
	.byte	5
	.word	.L33,.L93
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_line'
.L55:
	.word	.L172-.L171
.L171:
	.half	3
	.word	.L174-.L173
.L173:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L174:
	.byte	5,76,7,0,5,2
	.word	.L33
	.byte	3,223,1,1,5,57,9
	.half	.L126-.L33
	.byte	1,5,75,9
	.half	.L175-.L126
	.byte	1,5,43,9
	.half	.L176-.L175
	.byte	1,5,87,9
	.half	.L177-.L176
	.byte	1,5,54,9
	.half	.L178-.L177
	.byte	1,5,5,9
	.half	.L179-.L178
	.byte	1,5,1,9
	.half	.L6-.L179
	.byte	3,1,1,7,9
	.half	.L57-.L6
	.byte	0,1,1
.L172:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_ranges'
.L56:
	.word	-1,.L33,0,.L57-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_info'
.L58:
	.word	262
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_GetFreeEntries',0,1,237,1,8
	.word	.L95
	.byte	1,1,1
	.word	.L35,.L96,.L34
	.byte	4
	.byte	'idQueue_uo',0,1,237,1,57
	.word	.L90,.L97
	.byte	5
	.word	.L35,.L96
	.byte	6
	.byte	'cntrFreeEntries_u16',0,1,239,1,12
	.word	.L95,.L98
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_line'
.L60:
	.word	.L181-.L180
.L180:
	.half	3
	.word	.L183-.L182
.L182:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L183:
	.byte	5,32,7,0,5,2
	.word	.L35
	.byte	3,238,1,1,5,5,9
	.half	.L128-.L35
	.byte	3,1,1,5,50,7,9
	.half	.L184-.L128
	.byte	3,2,1,5,31,9
	.half	.L127-.L184
	.byte	1,5,49,9
	.half	.L185-.L127
	.byte	1,5,61,9
	.half	.L186-.L185
	.byte	1,5,5,9
	.half	.L7-.L186
	.byte	3,2,1,5,1,9
	.half	.L8-.L7
	.byte	3,1,1,7,9
	.half	.L62-.L8
	.byte	0,1,1
.L181:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L35,0,.L62-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_info'
.L63:
	.word	374
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L66,.L65
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_EnqueueRequest',0,1,132,2,9
	.word	.L90
	.byte	1,1,1
	.word	.L37,.L99,.L36
	.byte	4
	.byte	'idQueue_uo',0,1,132,2,58
	.word	.L90,.L100
	.byte	4
	.byte	'QueueEntry_pcst',0,1,133,2,68
	.word	.L101,.L102
	.byte	5
	.word	.L37,.L99
	.byte	6
	.byte	'isRequestEnqueued_b',0,1,135,2,13
	.word	.L90,.L103
	.byte	5
	.word	.L11,.L9
	.byte	6
	.byte	'Queue_cpst',0,1,147,2,38
	.word	.L104,.L105
	.byte	6
	.byte	'idxEnd_u16',0,1,148,2,20
	.word	.L95,.L106
	.byte	6
	.byte	'cntrEntries',0,1,149,2,20
	.word	.L95,.L107
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_line'
.L65:
	.word	.L188-.L187
.L187:
	.half	3
	.word	.L190-.L189
.L189:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L190:
	.byte	5,33,7,0,5,2
	.word	.L37
	.byte	3,134,2,1,5,9,9
	.half	.L131-.L37
	.byte	3,2,1,5,71,7,9
	.half	.L191-.L131
	.byte	1,5,37,7,9
	.half	.L192-.L191
	.byte	3,2,1,5,18,9
	.half	.L130-.L192
	.byte	1,5,36,9
	.half	.L193-.L130
	.byte	1,5,48,9
	.half	.L194-.L193
	.byte	1,5,9,9
	.half	.L195-.L194
	.byte	1,5,70,7,9
	.half	.L196-.L195
	.byte	3,4,1,5,84,9
	.half	.L197-.L196
	.byte	1,5,105,9
	.half	.L129-.L197
	.byte	1,5,44,9
	.half	.L11-.L129
	.byte	3,6,1,5,68,9
	.half	.L198-.L11
	.byte	1,5,56,9
	.half	.L199-.L198
	.byte	1,5,37,9
	.half	.L133-.L199
	.byte	3,1,1,5,51,9
	.half	.L200-.L133
	.byte	1,5,66,9
	.half	.L201-.L200
	.byte	1,5,33,9
	.half	.L134-.L201
	.byte	3,2,1,5,23,9
	.half	.L202-.L134
	.byte	1,5,33,9
	.half	.L203-.L202
	.byte	1,5,76,9
	.half	.L204-.L203
	.byte	1,5,59,9
	.half	.L205-.L204
	.byte	1,5,23,9
	.half	.L206-.L205
	.byte	3,1,1,5,33,9
	.half	.L207-.L206
	.byte	1,5,74,9
	.half	.L208-.L207
	.byte	1,5,57,9
	.half	.L209-.L208
	.byte	1,5,23,9
	.half	.L210-.L209
	.byte	3,1,1,5,33,9
	.half	.L211-.L210
	.byte	1,5,77,9
	.half	.L212-.L211
	.byte	1,5,60,9
	.half	.L213-.L212
	.byte	1,5,23,9
	.half	.L214-.L213
	.byte	3,1,1,5,33,9
	.half	.L215-.L214
	.byte	1,5,76,9
	.half	.L216-.L215
	.byte	1,5,59,9
	.half	.L132-.L216
	.byte	1,5,25,9
	.half	.L217-.L132
	.byte	3,2,1,5,13,9
	.half	.L218-.L217
	.byte	1,5,28,9
	.half	.L219-.L218
	.byte	3,6,1,5,17,9
	.half	.L220-.L219
	.byte	1,5,28,7,9
	.half	.L221-.L220
	.byte	3,1,1,5,52,9
	.half	.L222-.L221
	.byte	1,5,50,9
	.half	.L223-.L222
	.byte	1,5,54,7,9
	.half	.L224-.L223
	.byte	3,2,1,5,33,9
	.half	.L13-.L224
	.byte	3,3,1,5,5,9
	.half	.L9-.L13
	.byte	3,3,1,5,1,9
	.half	.L15-.L9
	.byte	3,1,1,7,9
	.half	.L67-.L15
	.byte	0,1,1
.L188:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_ranges'
.L66:
	.word	-1,.L37,0,.L67-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_info'
.L68:
	.word	259
	.half	3
	.word	.L69
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L71,.L70
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_DequeueRequest',0,1,182,2,6,1,1,1
	.word	.L39,.L108,.L38
	.byte	4
	.byte	'idQueue_uo',0,1,182,2,55
	.word	.L90,.L109
	.byte	5
	.word	.L39,.L108
	.byte	5
	.word	.L110,.L16
	.byte	6
	.byte	'Queue_cpst',0,1,188,2,34
	.word	.L111,.L112
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_abbrev'
.L69:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_line'
.L70:
	.word	.L226-.L225
.L225:
	.half	3
	.word	.L228-.L227
.L227:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L228:
	.byte	5,9,7,0,5,2
	.word	.L39
	.byte	3,184,2,1,5,82,7,9
	.half	.L229-.L39
	.byte	3,1,1,5,63,9
	.half	.L136-.L229
	.byte	1,5,81,9
	.half	.L230-.L136
	.byte	1,5,40,9
	.half	.L231-.L230
	.byte	1,5,93,9
	.half	.L232-.L231
	.byte	1,5,61,9
	.half	.L233-.L232
	.byte	1,5,46,7,9
	.half	.L110-.L233
	.byte	3,3,1,5,60,9
	.half	.L234-.L110
	.byte	1,5,77,9
	.half	.L235-.L234
	.byte	1,5,65,9
	.half	.L236-.L235
	.byte	1,5,33,9
	.half	.L237-.L236
	.byte	1,5,21,9
	.half	.L238-.L237
	.byte	3,1,1,5,9,9
	.half	.L239-.L238
	.byte	1,5,1,9
	.half	.L16-.L239
	.byte	3,2,1,7,9
	.half	.L72-.L16
	.byte	0,1,1
.L226:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_ranges'
.L71:
	.word	-1,.L39,0,.L72-.L39,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_info'
.L73:
	.word	261
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L76,.L75
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_GetEntryToProcess',0,1,211,2,21
	.word	.L90
	.byte	1,1,1
	.word	.L41,.L113,.L40
	.byte	4
	.byte	'QueueEntry_ppst',0,1,211,2,78
	.word	.L114,.L115
	.byte	5
	.word	.L41,.L113
	.byte	6
	.byte	'idQueue_uo',0,1,213,2,25
	.word	.L90,.L116
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_line'
.L75:
	.word	.L241-.L240
.L240:
	.half	3
	.word	.L243-.L242
.L242:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L243:
	.byte	5,21,7,0,5,2
	.word	.L41
	.byte	3,210,2,1,5,36,9
	.half	.L137-.L41
	.byte	3,2,1,5,9,9
	.half	.L138-.L137
	.byte	3,2,1,5,5,9
	.half	.L244-.L138
	.byte	1,5,28,7,9
	.half	.L245-.L244
	.byte	3,2,1,5,26,9
	.half	.L246-.L245
	.byte	1,5,67,9
	.half	.L247-.L246
	.byte	3,1,1,5,13,9
	.half	.L20-.L247
	.byte	3,2,1,5,43,9
	.half	.L248-.L20
	.byte	3,2,1,5,17,9
	.half	.L249-.L248
	.byte	1,5,77,7,9
	.half	.L250-.L249
	.byte	1,5,28,9
	.half	.L251-.L250
	.byte	3,2,1,5,40,9
	.half	.L21-.L251
	.byte	3,3,1,5,18,9
	.half	.L140-.L21
	.byte	1,5,96,7,9
	.half	.L252-.L140
	.byte	3,2,1,5,77,9
	.half	.L253-.L252
	.byte	1,5,95,9
	.half	.L254-.L253
	.byte	1,5,107,9
	.half	.L255-.L254
	.byte	1,5,76,9
	.half	.L256-.L255
	.byte	1,5,67,9
	.half	.L257-.L256
	.byte	1,5,76,9
	.half	.L258-.L257
	.byte	1,5,34,9
	.half	.L259-.L258
	.byte	1,5,29,9
	.half	.L19-.L259
	.byte	3,117,1,5,17,9
	.half	.L260-.L19
	.byte	1,5,16,9
	.half	.L261-.L260
	.byte	1,5,62,7,9
	.half	.L262-.L261
	.byte	1,5,13,7,9
	.half	.L24-.L262
	.byte	3,14,1,5,9,9
	.half	.L263-.L24
	.byte	1,5,24,7,9
	.half	.L264-.L263
	.byte	3,2,1,5,5,9
	.half	.L18-.L264
	.byte	3,4,1,5,1,9
	.half	.L26-.L18
	.byte	3,1,1,7,9
	.half	.L77-.L26
	.byte	0,1,1
.L241:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_ranges'
.L76:
	.word	-1,.L41,0,.L77-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_info'
.L78:
	.word	332
	.half	3
	.word	.L79
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L81,.L80
	.byte	2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_IsMultiEnqueued',0,1,241,2,9
	.word	.L90
	.byte	1,1,1
	.word	.L43,.L117,.L42
	.byte	4
	.byte	'idService_uo',0,1,241,2,61
	.word	.L90,.L118
	.byte	5
	.word	.L43,.L117
	.byte	6
	.byte	'IsEnqueuedMulti_b',0,1,243,2,13
	.word	.L90,.L119
	.byte	5
	.word	.L120,.L27
	.byte	6
	.byte	'idxHead_u16',0,1,246,2,16
	.word	.L95,.L121
	.byte	6
	.byte	'idServiceEnqueued_uo',0,1,247,2,31
	.word	.L90,.L122
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_abbrev'
.L79:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_line'
.L80:
	.word	.L266-.L265
.L265:
	.half	3
	.word	.L268-.L267
.L267:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0,0,0,0,0
.L268:
	.byte	5,9,7,0,5,2
	.word	.L43
	.byte	3,240,2,1,5,31,9
	.half	.L143-.L43
	.byte	3,2,1,5,32,9
	.half	.L144-.L143
	.byte	3,1,1,5,10,9
	.half	.L269-.L144
	.byte	1,5,30,7,9
	.half	.L120-.L269
	.byte	3,2,1,5,73,9
	.half	.L270-.L120
	.byte	1,5,69,9
	.half	.L145-.L270
	.byte	3,2,1,5,60,9
	.half	.L146-.L145
	.byte	1,5,69,9
	.half	.L271-.L146
	.byte	1,5,82,9
	.half	.L272-.L271
	.byte	1,5,9,9
	.half	.L147-.L272
	.byte	3,1,1,5,31,9
	.half	.L148-.L147
	.byte	3,2,1,5,5,9
	.half	.L27-.L148
	.byte	3,3,1,5,1,9
	.half	.L29-.L27
	.byte	3,1,1,7,9
	.half	.L82-.L29
	.byte	0,1,1
.L266:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_ranges'
.L81:
	.word	-1,.L43,0,.L82-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Rb_minNrFreeStdQueueEntries_u8')
	.sect	'.debug_info'
.L83:
	.word	183
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'NvM_Rb_minNrFreeStdQueueEntries_u8',0,2,101,7
	.word	.L90
	.byte	1,5,3
	.word	NvM_Rb_minNrFreeStdQueueEntries_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Rb_minNrFreeStdQueueEntries_u8')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queue_ast')
	.sect	'.debug_info'
.L85:
	.word	165
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queue_ast',0,2,115,31
	.word	.L123
	.byte	5,3
	.word	NvM_Prv_Queue_ast
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queue_ast')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('NvM_Prv_Queues_ast')
	.sect	'.debug_info'
.L87:
	.word	166
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Queue.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L44
	.byte	3
	.byte	'NvM_Prv_Queues_ast',0,2,124,26
	.word	.L124
	.byte	5,3
	.word	NvM_Prv_Queues_ast
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Prv_Queues_ast')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_loc'
.L38:
	.word	-1,.L39,0,.L108-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L112:
	.word	0,0
.L109:
	.word	-1,.L39,0,.L136-.L39
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L99-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L102:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	100
	.word	.L11-.L37,.L132-.L37
	.half	1
	.byte	100
	.word	0,0
.L105:
	.word	0,0
.L107:
	.word	-1,.L37,.L133-.L37,.L134-.L37
	.half	1
	.byte	81
	.word	0,0
.L100:
	.word	-1,.L37,0,.L130-.L37
	.half	1
	.byte	84
	.word	0,0
.L106:
	.word	-1,.L37,.L134-.L37,.L9-.L37
	.half	1
	.byte	81
	.word	0,0
.L103:
	.word	-1,.L37,.L131-.L37,.L99-.L37
	.half	1
	.byte	88
	.word	.L135-.L37,.L99-.L37
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L41,0,.L113-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L115:
	.word	-1,.L41,0,.L20-.L41
	.half	1
	.byte	100
	.word	.L137-.L41,.L113-.L41
	.half	1
	.byte	108
	.word	0,0
.L116:
	.word	-1,.L41,.L138-.L41,.L113-.L41
	.half	1
	.byte	88
	.word	.L139-.L41,.L140-.L41
	.half	1
	.byte	84
	.word	.L141-.L41,.L113-.L41
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L96-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L98:
	.word	-1,.L35,.L128-.L35,.L96-.L35
	.half	1
	.byte	82
	.word	0,0
.L97:
	.word	-1,.L35,0,.L127-.L35
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L89-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L92:
	.word	-1,.L31,.L125-.L31,.L89-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L91:
	.word	-1,.L31,0,.L89-.L31
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L93-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L94:
	.word	-1,.L33,0,.L126-.L33
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_loc'
.L119:
	.word	-1,.L43,.L144-.L43,.L117-.L43
	.half	1
	.byte	89
	.word	.L149-.L43,.L117-.L43
	.half	1
	.byte	82
	.word	0,0
.L42:
	.word	-1,.L43,0,.L117-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L122:
	.word	-1,.L43,.L147-.L43,.L148-.L43
	.half	1
	.byte	95
	.word	0,0
.L118:
	.word	-1,.L43,0,.L142-.L43
	.half	1
	.byte	84
	.word	.L143-.L43,.L117-.L43
	.half	1
	.byte	88
	.word	0,0
.L121:
	.word	-1,.L43,.L145-.L43,.L146-.L43
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L273:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_Initialize')
	.sect	'.debug_frame'
	.word	24
	.word	.L273,.L31,.L89-.L31
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_IsEmpty')
	.sect	'.debug_frame'
	.word	24
	.word	.L273,.L33,.L93-.L33
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_GetFreeEntries')
	.sect	'.debug_frame'
	.word	24
	.word	.L273,.L35,.L96-.L35
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_EnqueueRequest')
	.sect	'.debug_frame'
	.word	12
	.word	.L273,.L37,.L99-.L37
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_DequeueRequest')
	.sect	'.debug_frame'
	.word	24
	.word	.L273,.L39,.L108-.L39
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_GetEntryToProcess')
	.sect	'.debug_frame'
	.word	12
	.word	.L273,.L41,.L113-.L41
	.sdecl	'.debug_frame',debug,cluster('NvM_Prv_Queue_IsMultiEnqueued')
	.sect	'.debug_frame'
	.word	12
	.word	.L273,.L43,.L117-.L43

; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   384  
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   385  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Queue.c	   386  #include "NvM_MemMap.h"

	; Module end
