	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16156a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\NvM\\NvM_Init.src BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c'

	
$TC16X
	
	.sdecl	'.text.NvM_Init.NvM_Init',code,cluster('NvM_Init')
	.sect	'.text.NvM_Init.NvM_Init'
	.align	2
	
	.global	NvM_Init

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     1  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     2  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     3   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     4   * Includes
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     6  */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     7  #include "NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     8  #include "Rte_NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	     9  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    10  #include "NvM_Prv.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    11  #include "NvM_Prv_Queue.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    12  #include "NvM_Prv_BlockData.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    13  #include "NvM_Prv_ErrorDetection.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    14  #include "NvM_Prv_ProcessMultiBlock.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    15  #include "NvM_Prv_ExplicitSynchronization.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    16  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    17  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    18   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    19   * Variables
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    20   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    21   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    22  #if (NVM_RB_RAM_INIT_CHECK == NVM_RB_RAM_INIT_CHECK_QUICK)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    23  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    24  # define NVM_START_SEC_VAR_SAVED_ZONE_32
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    25  # include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    26  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    27  /// The marker which signals whether the NvM data in the saved zone RAM has been lost after a reset.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    28  static uint32 NvM_Prv_SavedZoneMarker_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    29  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    30  # define NVM_STOP_SEC_VAR_SAVED_ZONE_32
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    31  # include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    32  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    33  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    34  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    35  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    36   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    37   * Inline declarations
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    38   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    39   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    40  LOCAL_INLINE void NvM_Prv_InitializeDataInClearedRam(void);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    41  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    42  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    43   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    44   * Code
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    45   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    46  */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    47  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    48  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    49  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    50  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    51   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    52   * Public NvM interface for initializing all NvM internal data.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    53   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    54  void NvM_Init(void)
; Function NvM_Init
.L5:
NvM_Init:	.type	func

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    55  {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    56      // TRACE[NVM447] Service for resetting all internal variables
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    57      // TRACE[NVM399] Reset all internal variables to their initial values
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    58  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    59      // Per default all data in the saved zone is lost
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    60      boolean isSavedZoneDataLost_b = TRUE;
	mov	d15,#1
.L19:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    61  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    62      NvM_Prv_InitializeDataInClearedRam();
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    63  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    64      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2785] Initialize saved-zone only if it is lost after a reset
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    65  #if (NVM_RB_RAM_INIT_CHECK == NVM_RB_RAM_INIT_CHECK_QUICK)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    66      isSavedZoneDataLost_b = (NvM_Prv_SavedZoneMarker_u32 != NVM_PRV_SAVED_ZONE_MAGIC_VALUE);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    67      // Save a pattern to the saved zone marker (which will be checked after a reset)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    68      NvM_Prv_SavedZoneMarker_u32 = NVM_PRV_SAVED_ZONE_MAGIC_VALUE;
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    69  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    70  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    71      NvM_Prv_Block_InitializeData(isSavedZoneDataLost_b);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    72  #if (NVM_RB_AUX_INTERFACE == STD_ON)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    73      NvM_Prv_Block_InitializeDataAux();
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    74      NvM_Prv_InitializeAuxMigrationResult();
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    75  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    76  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    77      NvM_Prv_Queue_Initialize(isSavedZoneDataLost_b);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    78      NvM_Prv_ErrorDetection_InitializeDetError(isSavedZoneDataLost_b);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    79  #if (NVM_RB_REQ_MONITOR == NVM_RB_REQ_MON_WRITE)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    80      // Write request monitoring
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    81      NvM_Prv_InitializeWriteMonCntrs(isSavedZoneDataLost_b);
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    82  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    83  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    84      // TRACE[NVM157] Initialization of the underlying memory drivers is not done here
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    85      // TRACE[NVM193] Also don't initialize any other modules here
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    86      // TRACE[NVM091] We also don't do an automatic loading of permanent RAM blocks here
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    87      // TRACE[NVM158] The loading of permanent RAM blocks has to be triggered by the user via NvM_ReadAll
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    88      // TRACE[NVM400] The permanent RAM block contents are not modified here
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    89  }
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    90  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    91  #if (NVM_RB_RAM_INIT_CHECK == NVM_RB_RAM_INIT_CHECK_QUICK)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    92  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    93  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    94   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    95   * This function sets the current value of the saved zone marker.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    96   *
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    97   * \param MarkerSavedZone_u32
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    98   * New value for the saved zone marker
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	    99   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   100  void NvM_Prv_SetMarkerSavedZone(uint32 MarkerSavedZone_u32)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   101  {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   102      NvM_Prv_SavedZoneMarker_u32 = MarkerSavedZone_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   103  }
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   104  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   105  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   106   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   107   * This function returns the current value of the saved zone marker.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   108   *
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   109   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   110   * Current value of the saved zone marker
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   111   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   112  uint32 NvM_Prv_GetMarkerSavedZone(void)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   113  {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   114      return NvM_Prv_SavedZoneMarker_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   115  }
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   116  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   117  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   118  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   119  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   120  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   121  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   122  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   123   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   124   * Inline code
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   125   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   126   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   127  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   128   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   129   * Local inline function to initialize internal NvM data which is located in the cleared RAM.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   130   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   131   * This function initializes production errors for all blocks and all RAM block properties(block length,
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   132   * permanent RAM block addresses and RAM mirror properties for explicit synchronization).
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   133   * Afterwards this function checks if all blocks selected for the explicit synchronization can be copied
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   134   * into the RAM mirror, i.e. RAM mirror size >= block size.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   135   * If this check succeeds this function initializes NvM main states.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   136   * And if this check fails this function uninitializes NvM main states to make sure that NvM will not accept
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   137   * any requests due to incorrect configuration.
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   138   */
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   139  LOCAL_INLINE void NvM_Prv_InitializeDataInClearedRam(void)
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   140  {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   141      NvM_Prv_ErrorDetection_InitializeProductionErrors();
	call	NvM_Prv_ErrorDetection_InitializeProductionErrors
.L36:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   142  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   143      //TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-2999] Initialize the variable to show the potentially incompatible
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   144      //     blocks after layout changes are not sanitized by ReadAll function
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   145  #if ((NVM_DYNAMIC_CONFIGURATION == STD_ON) && (NVM_RB_REMOVE_NON_RESISTANT_BLOCKS == STD_ON))
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   146      NvM_Prv_InitializeStateReadAll();
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   147  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   148  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   149      // TRACE [BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3031] Runtime calculation of NV block lengths
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   150      // TRACE [BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3038] Runtime calculation of RAM block addresses
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   151      // TRACE [BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3047] Runtime calculation of explicit synchronization buffer
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   152      NvM_Prv_InitRamBlockProperties();
	call	NvM_Prv_InitRamBlockProperties
.L37:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   153  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   154      NvM_Prv_Multi_Initialize();
	call	NvM_Prv_Multi_Initialize
.L38:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   155  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   156      NvM_Prv_ExplicitSync_Initialize();
	call	NvM_Prv_ExplicitSync_Initialize
.L39:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   157  
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   158      if (NvM_Prv_ExplicitSync_CheckBlockSizes())
	call	NvM_Prv_ExplicitSync_CheckBlockSizes
.L40:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   158      if (NvM_Prv_ExplicitSync_CheckBlockSizes())      (inlined)
	jeq	d2,#0,.L2
.L41:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   159      {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   160          // TRACE[NVM399] Indicate finished initialization by setting NvM state
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   161          NvM_Prv_InitializeMainStates();
	call	NvM_Prv_InitializeMainStates
.L42:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   161          NvM_Prv_InitializeMainStates();      (inlined)
	j	.L3

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   158      if (NvM_Prv_ExplicitSync_CheckBlockSizes())      (inlined)
.L2:

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   162      }
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   163      else
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   164      {
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   165          // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3100] Indicate bad initialization if at least one block configured
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   166          //                                               for explicit synchronization is too big for the RAM mirror
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   167          NvM_Prv_UninitializeMainStates();
	call	NvM_Prv_UninitializeMainStates

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   163      else      (inlined)
.L3:
	mov	d4,d15
.L21:
	call	NvM_Prv_Block_InitializeData
.L22:
	mov	d4,d15
.L23:
	call	NvM_Prv_Queue_Initialize
.L24:
	mov	d4,d15
.L25:
	call	NvM_Prv_ErrorDetection_InitializeDetError
.L26:
	ret
.L15:
	
__NvM_Init_function_end:
	.size	NvM_Init,__NvM_Init_function_end-NvM_Init
.L14:
	; End of function
	
	.calls	'NvM_Init','NvM_Prv_ErrorDetection_InitializeProductionErrors'
	.calls	'NvM_Init','NvM_Prv_InitRamBlockProperties'
	.calls	'NvM_Init','NvM_Prv_Multi_Initialize'
	.calls	'NvM_Init','NvM_Prv_ExplicitSync_Initialize'
	.calls	'NvM_Init','NvM_Prv_ExplicitSync_CheckBlockSizes'
	.calls	'NvM_Init','NvM_Prv_InitializeMainStates'
	.calls	'NvM_Init','NvM_Prv_UninitializeMainStates'
	.calls	'NvM_Init','NvM_Prv_Block_InitializeData'
	.calls	'NvM_Init','NvM_Prv_Queue_Initialize'
	.calls	'NvM_Init','NvM_Prv_ErrorDetection_InitializeDetError'
	.extern	NvM_Prv_InitializeMainStates
	.extern	NvM_Prv_UninitializeMainStates
	.extern	NvM_Prv_Queue_Initialize
	.extern	NvM_Prv_InitRamBlockProperties
	.extern	NvM_Prv_Block_InitializeData
	.extern	NvM_Prv_ErrorDetection_InitializeDetError
	.extern	NvM_Prv_ErrorDetection_InitializeProductionErrors
	.extern	NvM_Prv_Multi_Initialize
	.extern	NvM_Prv_ExplicitSync_Initialize
	.extern	NvM_Prv_ExplicitSync_CheckBlockSizes
	.calls	'NvM_Init','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L7:
	.word	12712
	.half	3
	.word	.L8
	.byte	4
.L6:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L9
	.byte	2,2,40,9,4,3
	.byte	'NVM_BLOCK_NATIVE',0,0,3
	.byte	'NVM_BLOCK_REDUNDANT',0,1,3
	.byte	'NVM_BLOCK_DATASET',0,2,0,4
	.byte	'unsigned short int',0,2,7,5
	.byte	'NvM_Prv_GetBlockType',0,3,1,212,3,38
	.word	134
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,212,3,75
	.word	201
	.byte	7,0
.L16:
	.byte	4
	.byte	'unsigned char',0,1,8,5
	.byte	'NvM_Prv_GetNrNonVolatileBlocks',0,3,1,232,3,20
	.word	278
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,232,3,67
	.word	201
	.byte	7,0,8
	.byte	'void',0,9
	.word	360
	.byte	10
	.word	366
	.byte	5
	.byte	'NvM_Prv_GetRomBlockAddress',0,3,1,173,4,26
	.word	371
	.byte	1,1,6
	.byte	'idBlock_uo',0,1,173,4,69
	.word	201
	.byte	7,0,5
	.byte	'NvM_Prv_Block_IsInRom',0,3,3,142,1,22
	.word	278
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,142,1,60
	.word	201
	.byte	6
	.byte	'idxDataset_u8',0,3,142,1,78
	.word	278
	.byte	11,7,7,0,0,5
	.byte	'NvM_Prv_Block_IsWriteProtected',0,3,3,148,1,22
	.word	278
	.byte	1,1,6
	.byte	'idBlock_uo',0,3,148,1,69
	.word	201
	.byte	7,0
.L18:
	.byte	12
	.byte	'NvM_Prv_InitializeDataInClearedRam',0,3,4,139,1,19,1,1
.L20:
	.byte	7,0,13
	.byte	'NvM_Prv_InitializeMainStates',0,5,97,13,1,1,1,1,13
	.byte	'NvM_Prv_UninitializeMainStates',0,5,98,13,1,1,1,1,14
	.byte	'NvM_Prv_Queue_Initialize',0,6,37,13,1,1,1,1,6
	.byte	'isSavedZoneDataLost_b',0,6,37,46
	.word	278
	.byte	0,13
	.byte	'NvM_Prv_InitRamBlockProperties',0,1,216,2,13,1,1,1,1,15
	.word	223
	.byte	16
	.word	256
	.byte	7,0,15
	.word	295
	.byte	16
	.word	338
	.byte	7,0,15
	.word	376
	.byte	16
	.word	415
	.byte	7,0,14
	.byte	'NvM_Prv_Block_InitializeData',0,3,99,13,1,1,1,1,6
	.byte	'isSavedZoneDataLost_b',0,3,99,50
	.word	278
	.byte	0,15
	.word	437
	.byte	16
	.word	471
	.byte	16
	.word	491
	.byte	11,17
	.word	223
	.byte	16
	.word	256
	.byte	18
	.word	276
	.byte	0,7,17
	.word	295
	.byte	16
	.word	338
	.byte	18
	.word	358
	.byte	0,7,0,0,15
	.word	519
	.byte	16
	.word	562
	.byte	7,0,14
	.byte	'NvM_Prv_ErrorDetection_InitializeDetError',0,7,51,13,1,1,1,1,6
	.byte	'isSavedZoneDataLost_b',0,7,51,63
	.word	278
	.byte	0,13
	.byte	'NvM_Prv_ErrorDetection_InitializeProductionErrors',0,7,52,13,1,1,1,1,13
	.byte	'NvM_Prv_Multi_Initialize',0,8,20,13,1,1,1,1,13
	.byte	'NvM_Prv_ExplicitSync_Initialize',0,9,56,13,1,1,1,1,19
	.byte	'NvM_Prv_ExplicitSync_CheckBlockSizes',0,9,57,16
	.word	278
	.byte	1,1,1,1,15
	.word	584
	.byte	7,0,20,1,10
	.word	1245
	.byte	21
	.byte	'__codeptr',0,4,1,1
	.word	1247
	.byte	4
	.byte	'char',0,1,6,21
	.byte	'sint8',0,10,76,25
	.word	1270
	.byte	21
	.byte	'uint8',0,10,81,25
	.word	278
	.byte	21
	.byte	'uint16',0,10,91,25
	.word	201
	.byte	4
	.byte	'unsigned int',0,4,7,21
	.byte	'uint32',0,10,106,24
	.word	1321
	.byte	4
	.byte	'unsigned long long int',0,8,7,21
	.byte	'uint64',0,10,111,30
	.word	1352
	.byte	21
	.byte	'boolean',0,10,127,25
	.word	278
	.byte	21
	.byte	'StatusType',0,11,191,1,27
	.word	278
	.byte	21
	.byte	'Std_ReturnType',0,11,199,1,15
	.word	278
	.byte	22,11,206,1,9,8,23
	.byte	'vendorID',0
	.word	201
	.byte	2,2,35,0,23
	.byte	'moduleID',0
	.word	201
	.byte	2,2,35,2,23
	.byte	'sw_major_version',0
	.word	278
	.byte	1,2,35,4,23
	.byte	'sw_minor_version',0
	.word	278
	.byte	1,2,35,5,23
	.byte	'sw_patch_version',0
	.word	278
	.byte	1,2,35,6,0,21
	.byte	'Std_VersionInfoType',0,11,213,1,3
	.word	1453
	.byte	21
	.byte	'PduIdType',0,12,22,19
	.word	201
	.byte	21
	.byte	'PduLengthType',0,12,26,19
	.word	201
	.byte	2,13,113,9,4,3
	.byte	'TP_DATACONF',0,0,3
	.byte	'TP_DATARETRY',0,1,3
	.byte	'TP_CONFPENDING',0,2,0,21
	.byte	'TpDataStateType',0,13,118,3
	.word	1643
	.byte	21
	.byte	'Can_IdType',0,14,32,16
	.word	1321
	.byte	21
	.byte	'Can_HwHandleType',0,14,43,16
	.word	201
	.byte	22,15,93,9,8,23
	.byte	'Class',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'TIN',0
	.word	278
	.byte	1,2,35,1,23
	.byte	'ReturnAddress',0
	.word	1321
	.byte	4,2,35,4,0,21
	.byte	'OsTrapInfoType',0,15,97,3
	.word	1763
	.byte	24,68
	.word	1321
	.byte	25,16,0,22,15,154,1,9,68,23
	.byte	'store',0
	.word	1843
	.byte	68,2,35,0,0,24,68
	.word	1852
	.byte	25,0,0,21
	.byte	'Os_JumpBufType',0,15,156,1,3
	.word	1874
	.byte	21
	.byte	'Os_StackTraceType',0,15,174,1,18
	.word	1321
	.byte	22,15,175,1,9,8,23
	.byte	'sp',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'ctx',0
	.word	1321
	.byte	4,2,35,4,0,21
	.byte	'Os_StackValueType',0,15,175,1,63
	.word	1934
	.byte	21
	.byte	'Os_StackSizeType',0,15,176,1,27
	.word	1934
	.byte	26,1,1,10
	.word	2019
	.byte	21
	.byte	'Os_VoidVoidFunctionType',0,15,179,1,16
	.word	2022
	.byte	21
	.byte	'ApplicationType',0,15,193,1,23
	.word	278
	.byte	27
	.byte	'Os_ApplicationConfigurationType_s',0,15,198,1,16,2,23
	.byte	'app_id',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,1,0,21
	.byte	'Os_ApplicationConfigurationType',0,15,201,1,3
	.word	2085
	.byte	21
	.byte	'Os_CoreStateType',0,15,203,1,16
	.word	1321
	.byte	21
	.byte	'AreaIdType',0,15,204,1,16
	.word	201
	.byte	21
	.byte	'Os_PeripheralAddressType',0,15,212,1,22
	.word	1321
	.byte	21
	.byte	'TickType',0,15,221,1,22
	.word	1321
	.byte	21
	.byte	'Os_StopwatchTickType',0,15,225,1,22
	.word	1321
	.byte	10
	.word	1321
	.byte	21
	.byte	'Os_Lockable',0,15,234,1,18
	.word	2327
	.byte	21
	.byte	'CoreIdType',0,15,236,1,16
	.word	201
	.byte	21
	.byte	'SpinlockIdType',0,15,237,1,16
	.word	201
	.byte	2,15,239,1,9,4,3
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,3
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,21
	.byte	'TryToGetSpinlockType',0,15,239,1,74
	.word	2397
	.byte	2,15,174,2,9,4,3
	.byte	'APPLICATION_ACCESSIBLE',0,0,3
	.byte	'APPLICATION_RESTARTING',0,1,3
	.byte	'APPLICATION_TERMINATED',0,2,0,21
	.byte	'ApplicationStateType',0,15,174,2,92
	.word	2490
	.byte	10
	.word	360
	.byte	28,1,1,29
	.word	278
	.byte	29
	.word	2602
	.byte	0,10
	.word	2607
	.byte	21
	.byte	'Os_FunctionEntryType',0,15,183,2,16
	.word	2621
	.byte	27
	.byte	'Os_MeterInfoType_s',0,15,193,2,16,48,23
	.byte	'elapsed',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'previous',0
	.word	1321
	.byte	4,2,35,4,23
	.byte	'max',0
	.word	1321
	.byte	4,2,35,8,23
	.byte	'cumulative',0
	.word	1321
	.byte	4,2,35,12,23
	.byte	'stackbase',0
	.word	1934
	.byte	8,2,35,16,23
	.byte	'stackusage',0
	.word	1934
	.byte	8,2,35,24,23
	.byte	'stackmax',0
	.word	1934
	.byte	8,2,35,32,23
	.byte	'stackbudget',0
	.word	1934
	.byte	8,2,35,40,0,21
	.byte	'Os_MeterInfoType',0,15,202,2,3
	.word	2656
	.byte	10
	.word	2656
	.byte	21
	.byte	'Os_MeterInfoRefType',0,15,203,2,50
	.word	2854
	.byte	21
	.byte	'EventMaskType',0,15,206,2,15
	.word	278
	.byte	21
	.byte	'Os_imaskType',0,15,211,2,16
	.word	1321
	.byte	27
	.byte	'Os_ISRDynType_s',0,15,213,2,16,48,23
	.byte	'meter',0
	.word	2656
	.byte	48,2,35,0,0,21
	.byte	'Os_ISRDynType',0,15,215,2,3
	.word	2933
	.byte	10
	.word	2933
	.byte	9
	.word	2994
	.byte	27
	.byte	'Os_ISRType_s',0,15,216,2,16,24,23
	.byte	'entry_function',0
	.word	2027
	.byte	4,2,35,0,23
	.byte	'dynamic',0
	.word	2999
	.byte	4,2,35,4,23
	.byte	'imask',0
	.word	1321
	.byte	4,2,35,8,23
	.byte	'stackbudget',0
	.word	1934
	.byte	8,2,35,12,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,20,23
	.byte	'application',0
	.word	278
	.byte	1,2,35,21,0,21
	.byte	'Os_ISRType',0,15,223,2,3
	.word	3004
	.byte	10
	.word	2019
	.byte	9
	.word	3004
	.byte	10
	.word	3163
	.byte	21
	.byte	'ISRType',0,15,224,2,46
	.word	3168
	.byte	21
	.byte	'Os_bitmask',0,15,239,2,22
	.word	1321
	.byte	21
	.byte	'Os_pset0Type',0,15,240,2,20
	.word	1321
	.byte	21
	.byte	'Os_pset1Type',0,15,241,2,20
	.word	1321
	.byte	21
	.byte	'Os_pset2Type',0,15,242,2,20
	.word	1321
	.byte	30,15,243,2,9,4,23
	.byte	'p0',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'p1',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'p2',0
	.word	1321
	.byte	4,2,35,0,0,21
	.byte	'Os_psetType',0,15,247,2,3
	.word	3276
	.byte	30,15,249,2,9,4,23
	.byte	't0',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	't1',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	't2',0
	.word	1321
	.byte	4,2,35,0,0,21
	.byte	'Os_tpmaskType',0,15,253,2,3
	.word	3340
	.byte	21
	.byte	'Os_ActivationCountType',0,15,254,2,23
	.word	278
	.byte	27
	.byte	'Os_TaskDynType_s',0,15,128,3,16,120,23
	.byte	'terminate_jump_buf',0
	.word	1883
	.byte	68,2,35,0,23
	.byte	'meter',0
	.word	2656
	.byte	48,2,35,68,23
	.byte	'activation_count',0
	.word	278
	.byte	1,2,35,116,0,21
	.byte	'Os_TaskDynType',0,15,132,3,3
	.word	3438
	.byte	24,68
	.word	1852
	.byte	25,0,0,10
	.word	3438
	.byte	9
	.word	3564
	.byte	27
	.byte	'Os_TaskType_s',0,15,134,3,16,40,23
	.byte	'dynamic',0
	.word	3569
	.byte	4,2,35,0,23
	.byte	'entry_function',0
	.word	2027
	.byte	4,2,35,4,23
	.byte	'pset',0
	.word	3276
	.byte	4,2,35,8,23
	.byte	'base_tpmask',0
	.word	3340
	.byte	4,2,35,12,23
	.byte	'tpmask',0
	.word	3340
	.byte	4,2,35,16,23
	.byte	'core_id',0
	.word	201
	.byte	2,2,35,20,23
	.byte	'index',0
	.word	1321
	.byte	4,2,35,24,23
	.byte	'stackbudget',0
	.word	1934
	.byte	8,2,35,28,23
	.byte	'activation_count',0
	.word	278
	.byte	1,2,35,36,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,37,23
	.byte	'application',0
	.word	278
	.byte	1,2,35,38,0,21
	.byte	'Os_TaskType',0,15,146,3,3
	.word	3574
	.byte	9
	.word	3574
	.byte	10
	.word	3824
	.byte	21
	.byte	'TaskType',0,15,147,3,47
	.word	3829
	.byte	31
	.byte	'Os_TaskStateType',0,15,155,3,6,4,3
	.byte	'SUSPENDED',0,0,3
	.byte	'READY',0,1,3
	.byte	'WAITING',0,2,3
	.byte	'RUNNING',0,3,0,21
	.byte	'TaskStateType',0,15,156,3,31
	.word	3852
	.byte	30,15,167,3,3,4,23
	.byte	'tpmask',0
	.word	3340
	.byte	4,2,35,0,0,27
	.byte	'Os_ResourceDynType_s',0,15,166,3,16,4,23
	.byte	'saved_priority',0
	.word	3939
	.byte	4,2,35,0,0,21
	.byte	'Os_ResourceDynType',0,15,170,3,3
	.word	3962
	.byte	10
	.word	3962
	.byte	9
	.word	4042
	.byte	27
	.byte	'Os_ResourceType_s',0,15,171,3,16,12,23
	.byte	'dynamic',0
	.word	4047
	.byte	4,2,35,0,23
	.byte	'tpmask',0
	.word	3340
	.byte	4,2,35,4,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,8,0,21
	.byte	'Os_ResourceType',0,15,175,3,3
	.word	4052
	.byte	22,15,181,3,9,12,23
	.byte	'maxallowedvalue',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'ticksperbase',0
	.word	1321
	.byte	4,2,35,4,23
	.byte	'mincycle',0
	.word	1321
	.byte	4,2,35,8,0,21
	.byte	'AlarmBaseType',0,15,185,3,3
	.word	4151
	.byte	22,15,206,3,9,8,23
	.byte	'Running',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'Pending',0
	.word	278
	.byte	1,2,35,1,23
	.byte	'Delay',0
	.word	1321
	.byte	4,2,35,4,0,21
	.byte	'Os_CounterStatusType',0,15,210,3,3
	.word	4246
	.byte	32
	.word	278
	.byte	1,1,10
	.word	4332
	.byte	21
	.byte	'Os_CounterIncrAdvType',0,15,217,3,22
	.word	4339
	.byte	27
	.byte	's_swd',0,15,222,3,12,4,23
	.byte	'count',0
	.word	1321
	.byte	4,2,35,0,0,30,15,221,3,3,4,23
	.byte	'sw',0
	.word	4375
	.byte	4,2,35,0,0,27
	.byte	'Os_CounterDynType_s',0,15,220,3,16,4,23
	.byte	'type_dependent',0
	.word	4403
	.byte	4,2,35,0,0,21
	.byte	'Os_CounterDynType',0,15,226,3,3
	.word	4422
	.byte	10
	.word	4422
	.byte	9
	.word	4500
	.byte	27
	.byte	'Os_CounterType_s',0,15,227,3,16,28,23
	.byte	'dynamic',0
	.word	4505
	.byte	4,2,35,0,23
	.byte	'advincr',0
	.word	4344
	.byte	4,2,35,4,23
	.byte	'base',0
	.word	4151
	.byte	12,2,35,8,23
	.byte	'core',0
	.word	2602
	.byte	4,2,35,20,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,24,23
	.byte	'application',0
	.word	278
	.byte	1,2,35,25,0,21
	.byte	'Os_CounterType',0,15,234,3,3
	.word	4510
	.byte	10
	.word	4332
	.byte	9
	.word	4510
	.byte	10
	.word	4662
	.byte	21
	.byte	'CounterType',0,15,235,3,52
	.word	4667
	.byte	31
	.byte	'Os_ScheduleTableStatusType',0,15,240,3,6,4,3
	.byte	'SCHEDULETABLE_STOPPED',0,0,3
	.byte	'SCHEDULETABLE_NEXT',0,1,3
	.byte	'SCHEDULETABLE_WAITING',0,2,3
	.byte	'SCHEDULETABLE_RUNNING',0,3,3
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,21
	.byte	'ScheduleTableStatusType',0,15,241,3,41
	.word	4693
	.byte	9
	.word	.L27-.L7
	.byte	10
	.word	4893
	.byte	21
	.byte	'ScheduleTableType',0,15,128,4,58
	.word	4898
	.byte	27
	.byte	'Os_ScheduleTableDynType_s',0,15,130,4,16,16,23
	.byte	'match',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'next',0
	.word	4903
	.byte	4,2,35,4,23
	.byte	'state',0
	.word	4693
	.byte	4,2,35,8,23
	.byte	'config',0
	.word	201
	.byte	2,2,35,12,0,10
	.word	4930
	.byte	9
	.word	5023
.L27:
	.byte	27
	.byte	'Os_ScheduleTableType_s',0,15,247,3,16,16,23
	.byte	'dynamic',0
	.word	5028
	.byte	4,2,35,0,23
	.byte	'counter',0
	.word	4672
	.byte	4,2,35,4,23
	.byte	'repeat',0
	.word	278
	.byte	1,2,35,8,23
	.byte	'config',0
	.word	201
	.byte	2,2,35,10,23
	.byte	'initial',0
	.word	278
	.byte	1,2,35,12,23
	.byte	'access',0
	.word	278
	.byte	1,2,35,13,23
	.byte	'application',0
	.word	278
	.byte	1,2,35,14,0,21
	.byte	'Os_ScheduleTableType',0,15,255,3,3
	.word	5033
	.byte	9
	.word	5033
	.byte	10
	.word	5213
	.byte	9
	.word	4510
	.byte	10
	.word	5223
	.byte	33
	.word	2332
	.byte	33
	.word	3276
	.byte	33
	.word	3173
	.byte	33
	.word	3834
	.byte	33
	.word	3340
	.byte	33
	.word	278
	.byte	33
	.word	3834
	.byte	27
	.byte	'Os_ControlledCoreType_s',0,15,251,6,16,112,23
	.byte	'TrapInfo',0
	.word	1763
	.byte	8,2,35,0,23
	.byte	'lock_taskaccess',0
	.word	5233
	.byte	4,2,35,8,23
	.byte	'ReadyTasks',0
	.word	5238
	.byte	4,2,35,12,23
	.byte	'RunningISR',0
	.word	5243
	.byte	4,2,35,16,23
	.byte	'RunningTask',0
	.word	5248
	.byte	4,2,35,20,23
	.byte	'RunningTPMask',0
	.word	5253
	.byte	4,2,35,24,23
	.byte	'CurrentMeteredObject',0
	.word	2859
	.byte	4,2,35,28,23
	.byte	'IdleMeter',0
	.word	2656
	.byte	48,2,35,32,23
	.byte	'AppAccess',0
	.word	278
	.byte	1,2,35,80,23
	.byte	'AppOverride',0
	.word	5258
	.byte	1,2,35,81,23
	.byte	'GetStackValueAdjust',0
	.word	1934
	.byte	8,2,35,84,23
	.byte	'InErrorHook',0
	.word	278
	.byte	1,2,35,92,23
	.byte	'ChainTaskRef',0
	.word	5263
	.byte	4,2,35,96,23
	.byte	'GetStackUsageAdjust',0
	.word	1934
	.byte	8,2,35,100,23
	.byte	'InProtectionHook',0
	.word	278
	.byte	1,2,35,108,23
	.byte	'CoreIsActive',0
	.word	278
	.byte	1,2,35,109,23
	.byte	'InShutdownHook',0
	.word	278
	.byte	1,2,35,110,0,21
	.byte	'Os_ControlledCoreType',0,15,141,7,3
	.word	5268
	.byte	10
	.word	1321
	.byte	9
	.word	3004
	.byte	10
	.word	5724
	.byte	9
	.word	3574
	.byte	10
	.word	5734
	.byte	10
	.word	2656
	.byte	27
	.byte	'Os_AnyCoreType_s',0,15,151,7,16,96,23
	.byte	'DisableAllImask',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'SuspendAllImask',0
	.word	1321
	.byte	4,2,35,4,23
	.byte	'SuspendOSImask',0
	.word	1321
	.byte	4,2,35,8,23
	.byte	'DisableAllCount',0
	.word	1321
	.byte	4,2,35,12,23
	.byte	'SuspendAllCount',0
	.word	1321
	.byte	4,2,35,16,23
	.byte	'SuspendOSCount',0
	.word	1321
	.byte	4,2,35,20,23
	.byte	'RestartJumpBuf',0
	.word	1883
	.byte	68,2,35,24,23
	.byte	'Restartable',0
	.word	278
	.byte	1,2,35,92,0,21
	.byte	'Os_AnyCoreType',0,15,160,7,3
	.word	5749
	.byte	21
	.byte	'Can_TxObjPriorityClassType',0,16,219,3,16
	.word	1321
	.byte	27
	.byte	'Can_TxHwObjectConfigType',0,16,231,3,16,8,23
	.byte	'MsgObjId',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'HwControllerId',0
	.word	278
	.byte	1,2,35,1,23
	.byte	'TxObjPriorityClass',0
	.word	1321
	.byte	4,2,35,4,0,21
	.byte	'Can_TxHwObjectConfigType',0,16,252,3,3
	.word	6026
	.byte	27
	.byte	'Can_RxHwObjectConfigType',0,16,129,4,16,12,23
	.byte	'MaskRef',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'MsgId',0
	.word	1321
	.byte	4,2,35,4,23
	.byte	'MsgObjId',0
	.word	278
	.byte	1,2,35,8,23
	.byte	'HwControllerId',0
	.word	278
	.byte	1,2,35,9,0,21
	.byte	'Can_RxHwObjectConfigType',0,16,147,4,3
	.word	6162
	.byte	24,4
	.word	278
	.byte	25,3,0,27
	.byte	'Can_ControllerMOMapConfigType',0,16,181,4,16,4,23
	.byte	'ControllerMOMap',0
	.word	6302
	.byte	4,2,35,0,0,21
	.byte	'Can_ControllerMOMapConfigType',0,16,184,4,3
	.word	6311
	.byte	27
	.byte	'Can_NPCRValueType',0,16,188,4,16,2,23
	.byte	'Can_NPCRValue',0
	.word	201
	.byte	2,2,35,0,0,21
	.byte	'Can_NPCRValueType',0,16,191,4,3
	.word	6412
	.byte	27
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,194,4,16,8,23
	.byte	'CanControllerBaudrate',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'CanControllerBaudrateCfg',0
	.word	201
	.byte	2,2,35,4,0,21
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,198,4,3
	.word	6487
	.byte	9
	.word	6487
	.byte	10
	.word	6652
	.byte	27
	.byte	'Can_BaudrateConfigPtrType',0,16,201,4,16,4,23
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6657
	.byte	4,2,35,0,0,21
	.byte	'Can_BaudrateConfigPtrType',0,16,204,4,3
	.word	6662
	.byte	27
	.byte	'Can_EventHandlingType',0,16,226,4,16,4,23
	.byte	'CanEventType',0
	.word	6302
	.byte	4,2,35,0,0,21
	.byte	'Can_EventHandlingType',0,16,229,4,3
	.word	6762
	.byte	21
	.byte	'Rte_TransformerErrorCode',0,17,130,1,15
	.word	278
	.byte	21
	.byte	'Rte_TransformerClass',0,17,131,1,15
	.word	278
	.byte	22,17,168,1,9,12,23
	.byte	'in',0
	.word	2602
	.byte	4,2,35,0,23
	.byte	'out',0
	.word	2602
	.byte	4,2,35,4,23
	.byte	'used',0
	.word	201
	.byte	2,2,35,8,23
	.byte	'lost_data',0
	.word	278
	.byte	1,2,35,10,0,21
	.byte	'Rte_QDynType',0,17,173,1,3
	.word	6908
	.byte	2,17,175,1,9,4,3
	.byte	'RTE_DRA',0,0,3
	.byte	'RTE_WOWP',0,1,3
	.byte	'RTE_TASK',0,2,3
	.byte	'RTE_ARE',0,3,3
	.byte	'RTE_EV',0,4,3
	.byte	'RTE_MSI',0,5,0,21
	.byte	'Rte_NotificationType',0,17,182,1,3
	.word	6995
	.byte	10
	.word	6908
	.byte	27
	.byte	'Rte_QCmnType',0,17,184,1,16,24,23
	.byte	'dynamic',0
	.word	7093
	.byte	4,2,35,0,23
	.byte	'copy',0
	.word	278
	.byte	1,2,35,4,23
	.byte	'queue_size',0
	.word	201
	.byte	2,2,35,6,23
	.byte	'element_size',0
	.word	201
	.byte	2,2,35,8,23
	.byte	'buffer_start',0
	.word	2602
	.byte	4,2,35,12,23
	.byte	'buffer_end',0
	.word	2602
	.byte	4,2,35,16,23
	.byte	'notification_type',0
	.word	6995
	.byte	4,2,35,20,0,21
	.byte	'Rte_QCmnType',0,17,192,1,3
	.word	7098
	.byte	21
	.byte	'Rte_AlarmRefType',0,17,224,1,32
	.word	1321
	.byte	21
	.byte	'Rte_AlarmIndexType',0,17,226,1,32
	.word	201
	.byte	24,128,8
	.word	278
	.byte	25,255,7,0,21
	.byte	'Impl_NVM_DstPtrType_1024',0,18,50,15
	.word	7336
	.byte	21
	.byte	'CanIf_u32_impl',0,18,69,16
	.word	1321
	.byte	21
	.byte	'CanIf_u16_impl',0,18,71,16
	.word	201
	.byte	21
	.byte	'CanIf_u8_impl',0,18,73,15
	.word	278
	.byte	21
	.byte	'CanIf_ControllerModeType_Enum_impl',0,18,88,15
	.word	278
	.byte	21
	.byte	'CanIf_PduModeType_Enum_impl',0,18,90,15
	.word	278
	.byte	22,18,92,9,2,23
	.byte	'DeviceMode',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'ChannelMode',0
	.word	278
	.byte	1,2,35,1,0,21
	.byte	'CanIf_ControllerStateType_struct_impl',0,18,95,3
	.word	7527
	.byte	21
	.byte	'CanIf_NotifStatusType_Enum_impl',0,18,100,15
	.word	278
	.byte	21
	.byte	'CanSM_boolean_Impl',0,18,120,15
	.word	278
	.byte	21
	.byte	'CanSM_u8_Impl',0,18,123,15
	.word	278
	.byte	21
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,18,128,1,15
	.word	278
	.byte	21
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,18,132,1,15
	.word	278
	.byte	21
	.byte	'CanSM_u16_Impl',0,18,136,1,16
	.word	201
	.byte	21
	.byte	'CanSM_TimerStateType_Enum_impl',0,18,138,1,15
	.word	278
	.byte	22,18,140,1,9,4,23
	.byte	'cntTick_u16',0
	.word	201
	.byte	2,2,35,0,23
	.byte	'stTimer',0
	.word	278
	.byte	1,2,35,2,0,21
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,18,143,1,3
	.word	7868
	.byte	21
	.byte	'Com_impl_u16',0,18,154,1,16
	.word	201
	.byte	21
	.byte	'Com_impl_u8',0,18,157,1,15
	.word	278
	.byte	21
	.byte	'ComM_uint32_Impl',0,18,173,1,16
	.word	1321
	.byte	21
	.byte	'ComM_uint16_Impl',0,18,175,1,16
	.word	201
	.byte	21
	.byte	'ComM_uint8_Impl',0,18,177,1,15
	.word	278
	.byte	21
	.byte	'ComM_bool_Impl',0,18,179,1,15
	.word	278
	.byte	22,18,181,1,9,24,23
	.byte	'ChannelState_e',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'LightTimeoutCtr_u32',0
	.word	1321
	.byte	4,2,35,4,23
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	201
	.byte	2,2,35,8,23
	.byte	'ChannelMode_u8',0
	.word	278
	.byte	1,2,35,10,23
	.byte	'BusSmMode_u8',0
	.word	278
	.byte	1,2,35,11,23
	.byte	'UserRequestCtr_u8',0
	.word	278
	.byte	1,2,35,12,23
	.byte	'PassiveRequestState_u8',0
	.word	278
	.byte	1,2,35,13,23
	.byte	'PncRequestCtr_u8',0
	.word	278
	.byte	1,2,35,14,23
	.byte	'InhibitionReqStatus_u8',0
	.word	278
	.byte	1,2,35,15,23
	.byte	'NmNetworkRequestStatus_b',0
	.word	278
	.byte	1,2,35,16,23
	.byte	'DiagnosticRequestState_b',0
	.word	278
	.byte	1,2,35,17,23
	.byte	'CommunicationAllowed_b',0
	.word	278
	.byte	1,2,35,18,23
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	278
	.byte	1,2,35,19,23
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	278
	.byte	1,2,35,20,23
	.byte	'NmNetworkModeStatus_b',0
	.word	278
	.byte	1,2,35,21,0,21
	.byte	'ComM_ChannelStruct_Impl',0,18,197,1,3
	.word	8100
	.byte	22,18,206,1,9,10,23
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	201
	.byte	2,2,35,0,23
	.byte	'LimitToNoComCtr_u16',0
	.word	201
	.byte	2,2,35,2,23
	.byte	'RequestedUserMode_t',0
	.word	278
	.byte	1,2,35,4,23
	.byte	'IndicatedUserMode_t',0
	.word	278
	.byte	1,2,35,5,23
	.byte	'numChannelsInFullCom_u8',0
	.word	278
	.byte	1,2,35,6,23
	.byte	'numChannelsInSilentCom_u8',0
	.word	278
	.byte	1,2,35,7,23
	.byte	'numChannelsInNoCom_u8',0
	.word	278
	.byte	1,2,35,8,0,21
	.byte	'ComM_UserStruct_Impl',0,18,214,1,3
	.word	8604
	.byte	21
	.byte	'Dcm_IOOperationResponseType',0,18,252,1,15
	.word	278
	.byte	21
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	18,138,2,15
	.word	278
	.byte	21
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,18,146,2,15
	.word	278
	.byte	21
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,18,150,2,15
	.word	278
	.byte	21
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,18,154,2,15
	.word	278
	.byte	21
	.byte	'NvM_BlockIdType',0,18,215,2,16
	.word	201
	.byte	21
	.byte	'NvM_RequestResultType',0,18,225,2,15
	.word	278
	.byte	21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,18,243,3,34
	.word	7347
	.byte	24,128,8
	.word	278
	.byte	25,255,7,0,21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,18,246,3,34
	.word	7347
	.byte	2,19,31,9,4,3
	.byte	'MEMIF_JOB_OK',0,0,3
	.byte	'MEMIF_JOB_FAILED',0,1,3
	.byte	'MEMIF_JOB_PENDING',0,2,3
	.byte	'MEMIF_JOB_CANCELED',0,3,3
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,3
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,21
	.byte	'MemIf_JobResultType',0,19,39,2
	.word	9478
	.byte	21
	.byte	'NvM_BlockManagementType',0,2,45,3
	.word	134
	.byte	2,2,49,9,4,3
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,3
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,3
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,3
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,3
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,3
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,3
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,21
	.byte	'NvM_Prv_Activities_ten',0,2,58,3
	.word	9668
	.byte	2,2,104,9,4,3
	.byte	'NvM_Prv_idJob_Idle_e',0,0,3
	.byte	'NvM_Prv_idJob_Read_e',0,1,3
	.byte	'NvM_Prv_idJob_Write_e',0,2,3
	.byte	'NvM_Prv_idJob_Erase_e',0,3,3
	.byte	'NvM_Prv_idJob_Restore_e',0,4,3
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,3
	.byte	'NvM_Prv_idJob_Validate_e',0,6,3
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,3
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,3
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,3
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,3
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,3
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,3
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,21
	.byte	'NvM_Prv_idJob_ten',0,2,115,3
	.word	9909
	.byte	21
	.byte	'NvM_Prv_ServiceBit_tuo',0,2,168,1,16
	.word	201
	.byte	21
	.byte	'NvM_Prv_idService_tuo',0,2,173,1,15
	.word	278
	.byte	21
	.byte	'NvM_Prv_idQueue_tuo',0,2,206,1,15
	.word	278
	.byte	22,2,210,1,9,12,23
	.byte	'idService_uo',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'idBlock_uo',0
	.word	201
	.byte	2,2,35,2,23
	.byte	'ServiceBit_uo',0
	.word	201
	.byte	2,2,35,4,23
	.byte	'BlockData_pv',0
	.word	2602
	.byte	4,2,35,8,0,21
	.byte	'NvM_Prv_QueueEntry_tst',0,2,225,1,3
	.word	10466
	.byte	10
	.word	278
	.byte	22,2,227,1,9,20,23
	.byte	'idJob_en',0
	.word	9909
	.byte	4,2,35,0,23
	.byte	'idBlock_uo',0
	.word	201
	.byte	2,2,35,4,23
	.byte	'RamBlock_pu8',0
	.word	10592
	.byte	4,2,35,8,23
	.byte	'idxDataset_u8',0
	.word	278
	.byte	1,2,35,12,23
	.byte	'Result_en',0
	.word	9478
	.byte	4,2,35,16,0,21
	.byte	'NvM_Prv_JobData_tst',0,2,240,1,3
	.word	10597
	.byte	21
	.byte	'Rte_TaskRefType',0,20,184,1,32
	.word	3834
	.byte	21
	.byte	'Rte_EventRefType',0,20,185,1,32
	.word	278
	.byte	21
	.byte	'Rte_EventType',0,20,186,1,32
	.word	1321
	.byte	21
	.byte	'Rte_REActCounterType',0,20,252,1,15
	.word	278
	.byte	10
	.word	278
	.byte	21
	.byte	'Rte_REActCounterRefType',0,20,253,1,58
	.word	10839
	.byte	22,20,255,1,9,8,23
	.byte	'task',0
	.word	10735
	.byte	4,2,35,0,23
	.byte	'acnt',0
	.word	10844
	.byte	4,2,35,4,0,21
	.byte	'Rte_REContainerType',0,20,130,2,3
	.word	10877
	.byte	9
	.word	3574
	.byte	10
	.word	10941
	.byte	10
	.word	278
	.byte	9
	.word	10877
	.byte	10
	.word	10956
	.byte	21
	.byte	'Rte_REContainerRefType',0,20,132,2,60
	.word	10961
	.byte	21
	.byte	'Rte_MSICounterType',0,20,149,2,16
	.word	201
	.byte	10
	.word	201
	.byte	21
	.byte	'Rte_MSICounterRefType',0,20,150,2,56
	.word	11026
	.byte	21
	.byte	'Rte_MSIPendingFlagType',0,20,152,2,17
	.word	278
	.byte	10
	.word	278
	.byte	21
	.byte	'Rte_MSIPendingFlagRefType',0,20,153,2,60
	.word	11094
	.byte	22,20,163,2,9,24,23
	.byte	'counter',0
	.word	11031
	.byte	4,2,35,0,23
	.byte	'incCounter',0
	.word	278
	.byte	1,2,35,4,23
	.byte	'pending',0
	.word	11099
	.byte	4,2,35,8,23
	.byte	'osTask',0
	.word	10735
	.byte	4,2,35,12,23
	.byte	'acnt',0
	.word	10844
	.byte	4,2,35,16,23
	.byte	'osEvent',0
	.word	278
	.byte	1,2,35,20,23
	.byte	'MSIInit',0
	.word	201
	.byte	2,2,35,22,0,21
	.byte	'Rte_MSITableEntry',0,20,172,2,3
	.word	11134
	.byte	10
	.word	201
	.byte	10
	.word	278
	.byte	21
	.byte	'Rte_TaskArrayIndex',0,20,179,2,16
	.word	278
	.byte	21
	.byte	'Rte_NrWaitingTasks',0,20,180,2,16
	.word	278
	.byte	22,20,182,2,9,4,23
	.byte	'pending',0
	.word	278
	.byte	1,2,35,0,23
	.byte	'count',0
	.word	278
	.byte	1,2,35,1,23
	.byte	'firstWaitingTask',0
	.word	278
	.byte	1,2,35,2,0,21
	.byte	'Rte_WaitableDatum',0,20,186,2,3
	.word	11352
	.byte	10
	.word	11352
	.byte	22,20,226,2,9,12,23
	.byte	'event_id',0
	.word	1321
	.byte	4,2,35,0,23
	.byte	'wd',0
	.word	11444
	.byte	4,2,35,4,23
	.byte	'timeout',0
	.word	1321
	.byte	4,2,35,8,0,21
	.byte	'Rte_WOWP_NotificationType',0,20,230,2,3
	.word	11449
	.byte	9
	.word	11449
	.byte	10
	.word	11538
	.byte	21
	.byte	'Rte_WOWP_NotificationRefType',0,20,232,2,66
	.word	11543
	.byte	21
	.byte	'Rte_ARE_NotificationType',0,20,234,2,29
	.word	10877
	.byte	27
	.byte	'Rte_QTaskType',0,20,243,2,16,28,23
	.byte	'cmn',0
	.word	7098
	.byte	24,2,35,0,23
	.byte	'task',0
	.word	10735
	.byte	4,2,35,24,0,21
	.byte	'Rte_QTaskType',0,20,246,2,3
	.word	11620
	.byte	27
	.byte	'Rte_QREType',0,20,250,2,16,28,23
	.byte	'cmn',0
	.word	7098
	.byte	24,2,35,0,23
	.byte	're',0
	.word	10966
	.byte	4,2,35,24,0,21
	.byte	'Rte_QREType',0,20,253,2,3
	.word	11691
	.byte	9
	.word	10877
	.byte	10
	.word	11756
	.byte	27
	.byte	'Rte_QWWPType',0,20,129,3,16,28,23
	.byte	'cmn',0
	.word	7098
	.byte	24,2,35,0,23
	.byte	'wwp',0
	.word	11548
	.byte	4,2,35,24,0,21
	.byte	'Rte_QWWPType',0,20,132,3,3
	.word	11766
	.byte	9
	.word	11449
	.byte	10
	.word	11834
	.byte	27
	.byte	'Rte_QEvType',0,20,136,3,16,36,23
	.byte	'cmn',0
	.word	7098
	.byte	24,2,35,0,23
	.byte	'task',0
	.word	10735
	.byte	4,2,35,24,23
	.byte	'mask',0
	.word	278
	.byte	1,2,35,28,23
	.byte	'acnt',0
	.word	10844
	.byte	4,2,35,32,0,21
	.byte	'Rte_QEvType',0,20,141,3,3
	.word	11844
	.byte	27
	.byte	'Rte_QMSIType',0,20,145,3,16,48,23
	.byte	'cmn',0
	.word	7098
	.byte	24,2,35,0,23
	.byte	'task',0
	.word	10735
	.byte	4,2,35,24,23
	.byte	'mask',0
	.word	278
	.byte	1,2,35,28,23
	.byte	'acnt',0
	.word	10844
	.byte	4,2,35,32,23
	.byte	'msiCounter',0
	.word	11031
	.byte	4,2,35,36,23
	.byte	'msiPending',0
	.word	11099
	.byte	4,2,35,40,23
	.byte	'msiLimit',0
	.word	201
	.byte	2,2,35,44,0,21
	.byte	'Rte_QMSIType',0,20,153,3,3
	.word	11939
	.byte	34
	.word	278
	.byte	1,1,29
	.word	2602
	.byte	0,10
	.word	12094
	.byte	21
	.byte	'NvM_Prv_ExplicitSync_Copy_tpfct',0,1,29,26
	.word	12107
	.byte	2,1,34,9,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_READ_ALL',0,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_WRITE_ALL',0,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_FIRST_INIT_ALL',0,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_INIT_AT_LAYOUT_CHANGE',0,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_PROTECTED',0,16,3
	.byte	'NVM_PRV_BLOCK_FLAG_WRITE_ONCE',0,32,3
	.byte	'NVM_PRV_BLOCK_FLAG_RESISTANT_TO_CHANGED_SW',0,192,0,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_SYNC_MECHANISM',0,128,1,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_AUTO_VALIDATION',0,128,2,3
	.byte	'NVM_PRV_BLOCK_FLAG_USE_VARIABLE_BLOCK_LENGTH',0,128,4,3
	.byte	'NVM_PRV_BLOCK_FLAG_SELECT_FOR_MIGRATION',0,128,8,3
	.byte	'NVM_PRV_BLOCK_FLAG_RAM_INIT_UNCONDITIONAL',0,128,16,0,21
	.byte	'NvM_Prv_BlockConfiguration_ten',0,1,85,3
	.word	12152
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L8:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,4,1,58,15,59,15,57,15,11,15,0,0,3,40,0,3,8,28,13,0,0,4
	.byte	36,0,3,8,11,15,62,15,0,0,5,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,6,5,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,7,11,0,0,0,8,59,0,3,8,0,0,9,38,0,73,19,0,0,10,15,0,73,19,0,0,11,11,1,0,0,12,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,13,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,14,46,1
	.byte	3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,15,46,1,49,19,0,0,16,5,0,49,19,0,0,17,29,1,49,19,0,0
	.byte	18,11,0,49,19,0,0,19,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,20,21,0,54,15,0,0,21
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,22,19,1,58,15,59,15,57,15,11,15,0,0,23,13,0,3,8,73,19,11,15,56,9
	.byte	0,0,24,1,1,11,15,73,19,0,0,25,33,0,47,15,0,0,26,21,0,54,15,39,12,0,0,27,19,1,3,8,58,15,59,15,57,15,11
	.byte	15,0,0,28,21,1,54,15,39,12,0,0,29,5,0,73,19,0,0,30,23,1,58,15,59,15,57,15,11,15,0,0,31,4,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,32,21,0,73,19,54,15,39,12,0,0,33,53,0,73,19,0,0,34,21,1,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L9:
	.word	.L29-.L28
.L28:
	.half	3
	.word	.L31-.L30
.L30:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockDescriptor.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_BlockData.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_Queue.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_ErrorDetection.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_ProcessMultiBlock.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Prv_ExplicitSynchronization.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L31:
.L29:
	.sdecl	'.debug_info',debug,cluster('NvM_Init')
	.sect	'.debug_info'
.L10:
	.word	240
	.half	3
	.word	.L11
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L13,.L12
	.byte	2
	.word	.L6
	.byte	3
	.byte	'NvM_Init',0,1,54,6,1,1,1
	.word	.L5,.L15,.L4
	.byte	4
	.word	.L5,.L15
	.byte	5
	.byte	'isSavedZoneDataLost_b',0,1,60,13
	.word	.L16,.L17
	.byte	6
	.word	.L18,.L19,.L3
	.byte	7
	.word	.L20,.L19,.L3
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('NvM_Init')
	.sect	'.debug_abbrev'
.L11:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('NvM_Init')
	.sect	'.debug_line'
.L12:
	.word	.L33-.L32
.L32:
	.half	3
	.word	.L35-.L34
.L34:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Init.c',0,0,0,0,0
.L35:
	.byte	5,35,7,0,5,2
	.word	.L5
	.byte	3,59,1,5,54,9
	.half	.L19-.L5
	.byte	3,209,0,1,5,35,9
	.half	.L36-.L19
	.byte	3,11,1,5,29,9
	.half	.L37-.L36
	.byte	3,2,1,5,36,9
	.half	.L38-.L37
	.byte	3,2,1,5,45,9
	.half	.L39-.L38
	.byte	3,2,1,5,5,9
	.half	.L40-.L39
	.byte	1,5,37,7,9
	.half	.L41-.L40
	.byte	3,3,1,5,39,9
	.half	.L42-.L41
	.byte	1,9
	.half	.L2-.L42
	.byte	3,6,1,5,34,9
	.half	.L3-.L2
	.byte	3,160,127,1,5,30,9
	.half	.L22-.L3
	.byte	3,6,1,5,47,9
	.half	.L24-.L22
	.byte	3,1,1,5,1,9
	.half	.L26-.L24
	.byte	3,11,1,7,9
	.half	.L14-.L26
	.byte	0,1,1
.L33:
	.sdecl	'.debug_ranges',debug,cluster('NvM_Init')
	.sect	'.debug_ranges'
.L13:
	.word	-1,.L5,0,.L14-.L5,0,0
	.sdecl	'.debug_loc',debug,cluster('NvM_Init')
	.sect	'.debug_loc'
.L4:
	.word	-1,.L5,0,.L15-.L5
	.half	2
	.byte	138,0
	.word	0,0
.L17:
	.word	-1,.L5,.L19-.L5,.L15-.L5
	.half	1
	.byte	95
	.word	.L21-.L5,.L22-.L5
	.half	1
	.byte	84
	.word	.L23-.L5,.L24-.L5
	.half	1
	.byte	84
	.word	.L25-.L5,.L26-.L5
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L43:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('NvM_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L43,.L5,.L15-.L5

; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   168      }
; BSW\src\BSW\Gen\NvM\src\NvM_Init.c	   169  }

	; Module end
