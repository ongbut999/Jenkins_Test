	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16624a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\NvM\\NvM_Rb_WriteMon.src BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_WriteMon.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_WriteMon.c'

	
$TC16X
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	10969
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_WriteMon.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	141
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	143
	.byte	5
	.byte	'char',0,1,6,4
	.byte	'sint8',0,2,76,25
	.word	166
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'uint8',0,2,81,25
	.word	188
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,91,25
	.word	219
	.byte	5
	.byte	'unsigned int',0,4,7,4
	.byte	'uint32',0,2,106,24
	.word	256
	.byte	5
	.byte	'unsigned long long int',0,8,7,4
	.byte	'uint64',0,2,111,30
	.word	287
	.byte	4
	.byte	'boolean',0,2,127,25
	.word	188
	.byte	4
	.byte	'StatusType',0,3,191,1,27
	.word	188
	.byte	4
	.byte	'Std_ReturnType',0,3,199,1,15
	.word	188
	.byte	6,3,206,1,9,8,7
	.byte	'vendorID',0
	.word	219
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	219
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	188
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	188
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	188
	.byte	1,2,35,6,0,4
	.byte	'Std_VersionInfoType',0,3,213,1,3
	.word	388
	.byte	4
	.byte	'PduIdType',0,4,22,19
	.word	219
	.byte	4
	.byte	'PduLengthType',0,4,26,19
	.word	219
	.byte	8,5,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,118,3
	.word	578
	.byte	4
	.byte	'Can_IdType',0,6,32,16
	.word	256
	.byte	4
	.byte	'Can_HwHandleType',0,6,43,16
	.word	219
	.byte	6,7,93,9,8,7
	.byte	'Class',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	188
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	256
	.byte	4,2,35,4,0,4
	.byte	'OsTrapInfoType',0,7,97,3
	.word	698
	.byte	10,68
	.word	256
	.byte	11,16,0,6,7,154,1,9,68,7
	.byte	'store',0
	.word	778
	.byte	68,2,35,0,0,10,68
	.word	787
	.byte	11,0,0,4
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	809
	.byte	4
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	256
	.byte	6,7,175,1,9,8,7
	.byte	'sp',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	256
	.byte	4,2,35,4,0,4
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	869
	.byte	4
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	869
	.byte	12,1,1,3
	.word	954
	.byte	4
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	957
	.byte	4
	.byte	'ApplicationType',0,7,193,1,23
	.word	188
	.byte	13
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,7
	.byte	'app_id',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,1,0,4
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	1020
	.byte	4
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	256
	.byte	4
	.byte	'AreaIdType',0,7,204,1,16
	.word	219
	.byte	4
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	256
	.byte	4
	.byte	'TickType',0,7,221,1,22
	.word	256
	.byte	4
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	256
	.byte	3
	.word	256
	.byte	4
	.byte	'Os_Lockable',0,7,234,1,18
	.word	1262
	.byte	4
	.byte	'CoreIdType',0,7,236,1,16
	.word	219
	.byte	4
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	219
	.byte	8,7,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,4
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	1332
	.byte	8,7,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,4
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	1425
	.byte	14
	.byte	'void',0,3
	.word	1537
	.byte	15,1,1,16
	.word	188
	.byte	16
	.word	1543
	.byte	0,3
	.word	1548
	.byte	4
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	1562
	.byte	13
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,7
	.byte	'elapsed',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	256
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	256
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	256
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	869
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	869
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	869
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	869
	.byte	8,2,35,40,0,4
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	1597
	.byte	3
	.word	1597
	.byte	4
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	1795
	.byte	4
	.byte	'EventMaskType',0,7,206,2,15
	.word	188
	.byte	4
	.byte	'Os_imaskType',0,7,211,2,16
	.word	256
	.byte	13
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,7
	.byte	'meter',0
	.word	1597
	.byte	48,2,35,0,0,4
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	1874
	.byte	3
	.word	1874
	.byte	17
	.word	1935
	.byte	13
	.byte	'Os_ISRType_s',0,7,216,2,16,24,7
	.byte	'entry_function',0
	.word	962
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	1940
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	256
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	869
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	188
	.byte	1,2,35,21,0,4
	.byte	'Os_ISRType',0,7,223,2,3
	.word	1945
	.byte	3
	.word	954
	.byte	17
	.word	1945
	.byte	3
	.word	2104
	.byte	4
	.byte	'ISRType',0,7,224,2,46
	.word	2109
	.byte	4
	.byte	'Os_bitmask',0,7,239,2,22
	.word	256
	.byte	4
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	256
	.byte	4
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	256
	.byte	4
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	256
	.byte	18,7,243,2,9,4,7
	.byte	'p0',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	256
	.byte	4,2,35,0,0,4
	.byte	'Os_psetType',0,7,247,2,3
	.word	2217
	.byte	18,7,249,2,9,4,7
	.byte	't0',0
	.word	256
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	256
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	256
	.byte	4,2,35,0,0,4
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	2281
	.byte	4
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	188
	.byte	13
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	818
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	1597
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	188
	.byte	1,2,35,116,0,4
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	2379
	.byte	10,68
	.word	787
	.byte	11,0,0,3
	.word	2379
	.byte	17
	.word	2505
	.byte	13
	.byte	'Os_TaskType_s',0,7,134,3,16,40,7
	.byte	'dynamic',0
	.word	2510
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	962
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2217
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2281
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2281
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	219
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	256
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	869
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	188
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	188
	.byte	1,2,35,38,0,4
	.byte	'Os_TaskType',0,7,146,3,3
	.word	2515
	.byte	17
	.word	2515
	.byte	3
	.word	2765
	.byte	4
	.byte	'TaskType',0,7,147,3,47
	.word	2770
	.byte	19
	.byte	'Os_TaskStateType',0,7,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,4
	.byte	'TaskStateType',0,7,156,3,31
	.word	2793
	.byte	18,7,167,3,3,4,7
	.byte	'tpmask',0
	.word	2281
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,7
	.byte	'saved_priority',0
	.word	2880
	.byte	4,2,35,0,0,4
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	2903
	.byte	3
	.word	2903
	.byte	17
	.word	2983
	.byte	13
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,7
	.byte	'dynamic',0
	.word	2988
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2281
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,8,0,4
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	2993
	.byte	6,7,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	256
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	256
	.byte	4,2,35,8,0,4
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	3092
	.byte	6,7,206,3,9,8,7
	.byte	'Running',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	188
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	256
	.byte	4,2,35,4,0,4
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	3187
	.byte	20
	.word	188
	.byte	1,1,3
	.word	3273
	.byte	4
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	3280
	.byte	13
	.byte	's_swd',0,7,222,3,12,4,7
	.byte	'count',0
	.word	256
	.byte	4,2,35,0,0,18,7,221,3,3,4,7
	.byte	'sw',0
	.word	3316
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3344
	.byte	4,2,35,0,0,4
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	3363
	.byte	3
	.word	3363
	.byte	17
	.word	3441
	.byte	13
	.byte	'Os_CounterType_s',0,7,227,3,16,28,7
	.byte	'dynamic',0
	.word	3446
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3285
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	3092
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	1543
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	188
	.byte	1,2,35,25,0,4
	.byte	'Os_CounterType',0,7,234,3,3
	.word	3451
	.byte	3
	.word	3273
	.byte	17
	.word	3451
	.byte	3
	.word	3603
	.byte	4
	.byte	'CounterType',0,7,235,3,52
	.word	3608
	.byte	19
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,4
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	3634
	.byte	17
	.word	.L6-.L3
	.byte	3
	.word	3834
	.byte	4
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	3839
	.byte	13
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,7
	.byte	'match',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	3844
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	3634
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	219
	.byte	2,2,35,12,0,3
	.word	3871
	.byte	17
	.word	3964
.L6:
	.byte	13
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,7
	.byte	'dynamic',0
	.word	3969
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	3613
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	188
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	219
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	188
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	188
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	188
	.byte	1,2,35,14,0,4
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	3974
	.byte	17
	.word	3974
	.byte	3
	.word	4154
	.byte	17
	.word	3451
	.byte	3
	.word	4164
	.byte	21
	.word	1267
	.byte	21
	.word	2217
	.byte	21
	.word	2114
	.byte	21
	.word	2775
	.byte	21
	.word	2281
	.byte	21
	.word	188
	.byte	21
	.word	2775
	.byte	13
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	698
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4174
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4179
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4184
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4189
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4194
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	1800
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	1597
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	188
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4199
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	869
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	188
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4204
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	869
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	188
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	188
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	188
	.byte	1,2,35,110,0,4
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	4209
	.byte	3
	.word	256
	.byte	17
	.word	1945
	.byte	3
	.word	4665
	.byte	17
	.word	2515
	.byte	3
	.word	4675
	.byte	3
	.word	1597
	.byte	13
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	256
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	256
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	256
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	256
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	256
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	818
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	188
	.byte	1,2,35,92,0,4
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	4690
	.byte	4
	.byte	'Can_TxObjPriorityClassType',0,8,219,3,16
	.word	256
	.byte	13
	.byte	'Can_TxHwObjectConfigType',0,8,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	188
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	256
	.byte	4,2,35,4,0,4
	.byte	'Can_TxHwObjectConfigType',0,8,252,3,3
	.word	4967
	.byte	13
	.byte	'Can_RxHwObjectConfigType',0,8,129,4,16,12,7
	.byte	'MaskRef',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	256
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	188
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	188
	.byte	1,2,35,9,0,4
	.byte	'Can_RxHwObjectConfigType',0,8,147,4,3
	.word	5103
	.byte	10,4
	.word	188
	.byte	11,3,0,13
	.byte	'Can_ControllerMOMapConfigType',0,8,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	5243
	.byte	4,2,35,0,0,4
	.byte	'Can_ControllerMOMapConfigType',0,8,184,4,3
	.word	5252
	.byte	13
	.byte	'Can_NPCRValueType',0,8,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	219
	.byte	2,2,35,0,0,4
	.byte	'Can_NPCRValueType',0,8,191,4,3
	.word	5353
	.byte	13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	219
	.byte	2,2,35,4,0,4
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,8,198,4,3
	.word	5428
	.byte	17
	.word	5428
	.byte	3
	.word	5593
	.byte	13
	.byte	'Can_BaudrateConfigPtrType',0,8,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	5598
	.byte	4,2,35,0,0,4
	.byte	'Can_BaudrateConfigPtrType',0,8,204,4,3
	.word	5603
	.byte	13
	.byte	'Can_EventHandlingType',0,8,226,4,16,4,7
	.byte	'CanEventType',0
	.word	5243
	.byte	4,2,35,0,0,4
	.byte	'Can_EventHandlingType',0,8,229,4,3
	.word	5703
	.byte	4
	.byte	'Rte_TransformerErrorCode',0,9,130,1,15
	.word	188
	.byte	4
	.byte	'Rte_TransformerClass',0,9,131,1,15
	.word	188
	.byte	6,9,168,1,9,12,7
	.byte	'in',0
	.word	1543
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	1543
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	219
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	188
	.byte	1,2,35,10,0,4
	.byte	'Rte_QDynType',0,9,173,1,3
	.word	5849
	.byte	8,9,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,4
	.byte	'Rte_NotificationType',0,9,182,1,3
	.word	5936
	.byte	3
	.word	5849
	.byte	13
	.byte	'Rte_QCmnType',0,9,184,1,16,24,7
	.byte	'dynamic',0
	.word	6034
	.byte	4,2,35,0,7
	.byte	'copy',0
	.word	188
	.byte	1,2,35,4,7
	.byte	'queue_size',0
	.word	219
	.byte	2,2,35,6,7
	.byte	'element_size',0
	.word	219
	.byte	2,2,35,8,7
	.byte	'buffer_start',0
	.word	1543
	.byte	4,2,35,12,7
	.byte	'buffer_end',0
	.word	1543
	.byte	4,2,35,16,7
	.byte	'notification_type',0
	.word	5936
	.byte	4,2,35,20,0,4
	.byte	'Rte_QCmnType',0,9,192,1,3
	.word	6039
	.byte	4
	.byte	'Rte_AlarmRefType',0,9,224,1,32
	.word	256
	.byte	4
	.byte	'Rte_AlarmIndexType',0,9,226,1,32
	.word	219
	.byte	10,128,8
	.word	188
	.byte	11,255,7,0,4
	.byte	'Impl_NVM_DstPtrType_1024',0,10,50,15
	.word	6277
	.byte	4
	.byte	'CanIf_u32_impl',0,10,69,16
	.word	256
	.byte	4
	.byte	'CanIf_u16_impl',0,10,71,16
	.word	219
	.byte	4
	.byte	'CanIf_u8_impl',0,10,73,15
	.word	188
	.byte	4
	.byte	'CanIf_ControllerModeType_Enum_impl',0,10,88,15
	.word	188
	.byte	4
	.byte	'CanIf_PduModeType_Enum_impl',0,10,90,15
	.word	188
	.byte	6,10,92,9,2,7
	.byte	'DeviceMode',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	188
	.byte	1,2,35,1,0,4
	.byte	'CanIf_ControllerStateType_struct_impl',0,10,95,3
	.word	6468
	.byte	4
	.byte	'CanIf_NotifStatusType_Enum_impl',0,10,100,15
	.word	188
	.byte	4
	.byte	'CanSM_boolean_Impl',0,10,120,15
	.word	188
	.byte	4
	.byte	'CanSM_u8_Impl',0,10,123,15
	.word	188
	.byte	4
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,10,128,1,15
	.word	188
	.byte	4
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,10,132,1,15
	.word	188
	.byte	4
	.byte	'CanSM_u16_Impl',0,10,136,1,16
	.word	219
	.byte	4
	.byte	'CanSM_TimerStateType_Enum_impl',0,10,138,1,15
	.word	188
	.byte	6,10,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	219
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	188
	.byte	1,2,35,2,0,4
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,10,143,1,3
	.word	6809
	.byte	4
	.byte	'Com_impl_u16',0,10,154,1,16
	.word	219
	.byte	4
	.byte	'Com_impl_u8',0,10,157,1,15
	.word	188
	.byte	4
	.byte	'ComM_uint32_Impl',0,10,173,1,16
	.word	256
	.byte	4
	.byte	'ComM_uint16_Impl',0,10,175,1,16
	.word	219
	.byte	4
	.byte	'ComM_uint8_Impl',0,10,177,1,15
	.word	188
	.byte	4
	.byte	'ComM_bool_Impl',0,10,179,1,15
	.word	188
	.byte	6,10,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	256
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	219
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	188
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	188
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	188
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	188
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	188
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	188
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	188
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	188
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	188
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	188
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	188
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	188
	.byte	1,2,35,21,0,4
	.byte	'ComM_ChannelStruct_Impl',0,10,197,1,3
	.word	7041
	.byte	6,10,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	219
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	219
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	188
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	188
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	188
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	188
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	188
	.byte	1,2,35,8,0,4
	.byte	'ComM_UserStruct_Impl',0,10,214,1,3
	.word	7545
	.byte	4
	.byte	'Dcm_IOOperationResponseType',0,10,252,1,15
	.word	188
	.byte	4
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	10,138,2,15
	.word	188
	.byte	4
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,10,146,2,15
	.word	188
	.byte	4
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,10,150,2,15
	.word	188
	.byte	4
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,10,154,2,15
	.word	188
	.byte	4
	.byte	'NvM_BlockIdType',0,10,215,2,16
	.word	219
	.byte	4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,10,243,3,34
	.word	6288
	.byte	10,128,8
	.word	188
	.byte	11,255,7,0,4
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,10,246,3,34
	.word	6288
	.byte	8,11,31,9,4,9
	.byte	'MEMIF_JOB_OK',0,0,9
	.byte	'MEMIF_JOB_FAILED',0,1,9
	.byte	'MEMIF_JOB_PENDING',0,2,9
	.byte	'MEMIF_JOB_CANCELED',0,3,9
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,9
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,4
	.byte	'MemIf_JobResultType',0,11,39,2
	.word	8388
	.byte	8,12,49,9,4,9
	.byte	'NVM_PRV_ACTIVITY_NOT_INIT',0,0,9
	.byte	'NVM_PRV_ACTIVITY_IDLE',0,1,9
	.byte	'NVM_PRV_ACTIVITY_ARBITRATE',0,2,9
	.byte	'NVM_PRV_ACTIVITY_JOB_START',0,3,9
	.byte	'NVM_PRV_ACTIVITY_POLL_RESULT',0,4,9
	.byte	'NVM_PRV_ACTIVITY_JOB_COMPLETE',0,5,9
	.byte	'NVM_PRV_ACTIVITY_RESULT_EVAL',0,6,0,4
	.byte	'NvM_Prv_Activities_ten',0,12,58,3
	.word	8546
	.byte	8,12,104,9,4,9
	.byte	'NvM_Prv_idJob_Idle_e',0,0,9
	.byte	'NvM_Prv_idJob_Read_e',0,1,9
	.byte	'NvM_Prv_idJob_Write_e',0,2,9
	.byte	'NvM_Prv_idJob_Erase_e',0,3,9
	.byte	'NvM_Prv_idJob_Restore_e',0,4,9
	.byte	'NvM_Prv_idJob_Maintain_e',0,5,9
	.byte	'NvM_Prv_idJob_Validate_e',0,6,9
	.byte	'NvM_Prv_idJob_Invalidate_e',0,7,9
	.byte	'NvM_Prv_idJob_ReadIdConfigForReadAll_e',0,8,9
	.byte	'NvM_Prv_idJob_InvalidateForFirstInitAll_e',0,9,9
	.byte	'NvM_Prv_idJob_RestoreForImplicitRecovery_e',0,10,9
	.byte	'NvM_Prv_idJob_InvalidateForRemoveNonResistant_e',0,11,9
	.byte	'NvM_Prv_idJob_Invalid_e',0,12,9
	.byte	'NvM_Prv_idJob_Count_e',0,13,0,4
	.byte	'NvM_Prv_idJob_ten',0,12,115,3
	.word	8787
	.byte	4
	.byte	'NvM_Prv_ServiceBit_tuo',0,12,168,1,16
	.word	219
	.byte	4
	.byte	'NvM_Prv_idService_tuo',0,12,173,1,15
	.word	188
	.byte	4
	.byte	'NvM_Prv_idQueue_tuo',0,12,206,1,15
	.word	188
	.byte	6,12,210,1,9,12,7
	.byte	'idService_uo',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'idBlock_uo',0
	.word	219
	.byte	2,2,35,2,7
	.byte	'ServiceBit_uo',0
	.word	219
	.byte	2,2,35,4,7
	.byte	'BlockData_pv',0
	.word	1543
	.byte	4,2,35,8,0,4
	.byte	'NvM_Prv_QueueEntry_tst',0,12,225,1,3
	.word	9344
	.byte	3
	.word	188
	.byte	6,12,227,1,9,20,7
	.byte	'idJob_en',0
	.word	8787
	.byte	4,2,35,0,7
	.byte	'idBlock_uo',0
	.word	219
	.byte	2,2,35,4,7
	.byte	'RamBlock_pu8',0
	.word	9470
	.byte	4,2,35,8,7
	.byte	'idxDataset_u8',0
	.word	188
	.byte	1,2,35,12,7
	.byte	'Result_en',0
	.word	8388
	.byte	4,2,35,16,0,4
	.byte	'NvM_Prv_JobData_tst',0,12,240,1,3
	.word	9475
	.byte	4
	.byte	'Rte_TaskRefType',0,13,184,1,32
	.word	2775
	.byte	4
	.byte	'Rte_EventRefType',0,13,185,1,32
	.word	188
	.byte	4
	.byte	'Rte_EventType',0,13,186,1,32
	.word	256
	.byte	4
	.byte	'Rte_REActCounterType',0,13,252,1,15
	.word	188
	.byte	3
	.word	188
	.byte	4
	.byte	'Rte_REActCounterRefType',0,13,253,1,58
	.word	9717
	.byte	6,13,255,1,9,8,7
	.byte	'task',0
	.word	9613
	.byte	4,2,35,0,7
	.byte	'acnt',0
	.word	9722
	.byte	4,2,35,4,0,4
	.byte	'Rte_REContainerType',0,13,130,2,3
	.word	9755
	.byte	17
	.word	2515
	.byte	3
	.word	9819
	.byte	3
	.word	188
	.byte	17
	.word	9755
	.byte	3
	.word	9834
	.byte	4
	.byte	'Rte_REContainerRefType',0,13,132,2,60
	.word	9839
	.byte	4
	.byte	'Rte_MSICounterType',0,13,149,2,16
	.word	219
	.byte	3
	.word	219
	.byte	4
	.byte	'Rte_MSICounterRefType',0,13,150,2,56
	.word	9904
	.byte	4
	.byte	'Rte_MSIPendingFlagType',0,13,152,2,17
	.word	188
	.byte	3
	.word	188
	.byte	4
	.byte	'Rte_MSIPendingFlagRefType',0,13,153,2,60
	.word	9972
	.byte	6,13,163,2,9,24,7
	.byte	'counter',0
	.word	9909
	.byte	4,2,35,0,7
	.byte	'incCounter',0
	.word	188
	.byte	1,2,35,4,7
	.byte	'pending',0
	.word	9977
	.byte	4,2,35,8,7
	.byte	'osTask',0
	.word	9613
	.byte	4,2,35,12,7
	.byte	'acnt',0
	.word	9722
	.byte	4,2,35,16,7
	.byte	'osEvent',0
	.word	188
	.byte	1,2,35,20,7
	.byte	'MSIInit',0
	.word	219
	.byte	2,2,35,22,0,4
	.byte	'Rte_MSITableEntry',0,13,172,2,3
	.word	10012
	.byte	3
	.word	219
	.byte	3
	.word	188
	.byte	4
	.byte	'Rte_TaskArrayIndex',0,13,179,2,16
	.word	188
	.byte	4
	.byte	'Rte_NrWaitingTasks',0,13,180,2,16
	.word	188
	.byte	6,13,182,2,9,4,7
	.byte	'pending',0
	.word	188
	.byte	1,2,35,0,7
	.byte	'count',0
	.word	188
	.byte	1,2,35,1,7
	.byte	'firstWaitingTask',0
	.word	188
	.byte	1,2,35,2,0,4
	.byte	'Rte_WaitableDatum',0,13,186,2,3
	.word	10230
	.byte	3
	.word	10230
	.byte	6,13,226,2,9,12,7
	.byte	'event_id',0
	.word	256
	.byte	4,2,35,0,7
	.byte	'wd',0
	.word	10322
	.byte	4,2,35,4,7
	.byte	'timeout',0
	.word	256
	.byte	4,2,35,8,0,4
	.byte	'Rte_WOWP_NotificationType',0,13,230,2,3
	.word	10327
	.byte	17
	.word	10327
	.byte	3
	.word	10416
	.byte	4
	.byte	'Rte_WOWP_NotificationRefType',0,13,232,2,66
	.word	10421
	.byte	4
	.byte	'Rte_ARE_NotificationType',0,13,234,2,29
	.word	9755
	.byte	13
	.byte	'Rte_QTaskType',0,13,243,2,16,28,7
	.byte	'cmn',0
	.word	6039
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	9613
	.byte	4,2,35,24,0,4
	.byte	'Rte_QTaskType',0,13,246,2,3
	.word	10498
	.byte	13
	.byte	'Rte_QREType',0,13,250,2,16,28,7
	.byte	'cmn',0
	.word	6039
	.byte	24,2,35,0,7
	.byte	're',0
	.word	9844
	.byte	4,2,35,24,0,4
	.byte	'Rte_QREType',0,13,253,2,3
	.word	10569
	.byte	17
	.word	9755
	.byte	3
	.word	10634
	.byte	13
	.byte	'Rte_QWWPType',0,13,129,3,16,28,7
	.byte	'cmn',0
	.word	6039
	.byte	24,2,35,0,7
	.byte	'wwp',0
	.word	10426
	.byte	4,2,35,24,0,4
	.byte	'Rte_QWWPType',0,13,132,3,3
	.word	10644
	.byte	17
	.word	10327
	.byte	3
	.word	10712
	.byte	13
	.byte	'Rte_QEvType',0,13,136,3,16,36,7
	.byte	'cmn',0
	.word	6039
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	9613
	.byte	4,2,35,24,7
	.byte	'mask',0
	.word	188
	.byte	1,2,35,28,7
	.byte	'acnt',0
	.word	9722
	.byte	4,2,35,32,0,4
	.byte	'Rte_QEvType',0,13,141,3,3
	.word	10722
	.byte	13
	.byte	'Rte_QMSIType',0,13,145,3,16,48,7
	.byte	'cmn',0
	.word	6039
	.byte	24,2,35,0,7
	.byte	'task',0
	.word	9613
	.byte	4,2,35,24,7
	.byte	'mask',0
	.word	188
	.byte	1,2,35,28,7
	.byte	'acnt',0
	.word	9722
	.byte	4,2,35,32,7
	.byte	'msiCounter',0
	.word	9909
	.byte	4,2,35,36,7
	.byte	'msiPending',0
	.word	9977
	.byte	4,2,35,40,7
	.byte	'msiLimit',0
	.word	219
	.byte	2,2,35,44,0,4
	.byte	'Rte_QMSIType',0,13,153,3,3
	.word	10817
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,19,1,58,15,59,15,57,15,11,15,0,0,7,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,1,1,11,15,73,19,0,0,11,33,0,47,15,0,0
	.byte	12,21,0,54,15,39,12,0,0,13,19,1,3,8,58,15,59,15,57,15,11,15,0,0,14,59,0,3,8,0,0,15,21,1,54,15,39,12,0
	.byte	0,16,5,0,73,19,0,0,17,38,0,73,19,0,0,18,23,1,58,15,59,15,57,15,11,15,0,0,19,4,1,3,8,58,15,59,15,57,15
	.byte	11,15,0,0,20,21,0,73,19,54,15,39,12,0,0,21,53,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L8-.L7
.L7:
	.half	3
	.word	.L10-.L9
.L9:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\NvM\\src\\NvM_Rb_WriteMon.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\NvM\\api\\NvM_Types.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L10:
.L8:

; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     1  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     2  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     3   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     4   * Includes
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     6   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     7  #include "NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     8  #include "Rte_NvM.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	     9  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    10  #include "NvM_Prv.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    11  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    12  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    13   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    14   * Variables
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    15   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    16   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    17  #if (NVM_RB_REQ_MONITOR == NVM_RB_REQ_MON_WRITE)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    18  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    19  #define NVM_START_SEC_VAR_SAVED_ZONE_16
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    20  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    21  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    22   * Number of write requests since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    23   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    24  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3119]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    25  uint16 NvM_Rb_cntrWrites_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    26  #define NVM_STOP_SEC_VAR_SAVED_ZONE_16
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    27  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    28  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    29  #define NVM_START_SEC_VAR_SAVED_ZONE_32
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    30  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    31  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    32   * Number of bytes written since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    33   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    34  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3123]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    35  uint32 NvM_Rb_nrBytesWritten_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    36  #define NVM_STOP_SEC_VAR_SAVED_ZONE_32
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    37  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    38  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    39  #define NVM_START_SEC_VAR_SAVED_ZONE_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    40  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    41  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    42   * ID of the last written block.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    43   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    44  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3129]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    45  NvM_BlockIdType NvM_Rb_idLastWrittenBlock_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    46  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    47   * Write request counters which will be stored in persistent way.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    48   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    49  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3128]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    50  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3135]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    51  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3136]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    52  // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3137]
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    53  NvM_Rb_WriteMon_tst NvM_Rb_WriteMon_st;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    54  #define NVM_STOP_SEC_VAR_SAVED_ZONE_UNSPECIFIED
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    55  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    56  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    57  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    58  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    59  /*
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    60   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    61   * Code
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    62   **********************************************************************************************************************
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    63   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    64  #define NVM_START_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    65  #include "NvM_MemMap.h"
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    66  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    67  #if (NVM_RB_REQ_MONITOR == NVM_RB_REQ_MON_WRITE)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    68  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    69   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    70   * This function clears all write monitoring counters.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    71   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    72   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    73   * This function always returns E_OK.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    74   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    75   * \param[global out] NvM_Rb_WriteMon_st
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    76   * Structure to store write request counters in persistant way.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    77   * \param[global out] NvM_Rb_idLastWrittenBlock_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    78   * ID of the last written block.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    79   * \param[global out] NvM_Rb_nrBytesWritten_u32
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    80   * Number of bytes written since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    81   * \param[global out] NvM_Rb_cntrWrites_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    82   * Number of write requests since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    83   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    84   * \return
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    85   * - E_OK = write monitoring counters cleared successfully
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    86   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    87  Std_ReturnType NvM_Rb_ClrWriteMonCntrs(void)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    88  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    89      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3122] Service to clear write monitoring counters.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    90  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    91      NvM_Rb_WriteMon_st.cntrWritesAbs_u32 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    92      NvM_Rb_WriteMon_st.cntrWritesMax_u16 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    93      NvM_Rb_WriteMon_st.nrBytesWrittenMax_u32 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    94  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    95      NvM_Rb_idLastWrittenBlock_uo = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    96      NvM_Rb_nrBytesWritten_u32 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    97      NvM_Rb_cntrWrites_u16 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    98  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	    99      return E_OK;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   100  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   101  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   102  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   103   * This function initializes all NvM internal counters required for write request monitoring.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   104   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   105   * NvM internal counters will be initialized only if data in the saved zone is lost.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   106   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   107   * \param[in] isSavedZoneDataLost_b
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   108   * Status information of the data in the saved zone RAM:
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   109   * - true = data in the saved zone RAM is lost after the reset
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   110   * - false = data in the saved zone RAM is unchanged after the reset
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   111   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   112  void NvM_Prv_InitializeWriteMonCntrs(boolean isSavedZoneDataLost_b)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   113  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   114      if (isSavedZoneDataLost_b)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   115      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   116          // Write request monitoring
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   117          NvM_Rb_cntrWrites_u16 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   118          NvM_Rb_nrBytesWritten_u32 = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   119          NvM_Rb_idLastWrittenBlock_uo = 0u;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   120      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   121  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   122  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   123  /**
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   124   * \brief
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   125   * This function increases all NvM internal counters required for write request monitoring.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   126   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   127   * \details
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   128   * All counters have an overflow protection, i.e. a counter cannot exceed the maximum value.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   129   *
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   130   * \param idBlock_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   131   * ID of the last written block.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   132   * \param BlockLength_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   133   * Length of the last written block in bytes.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   134   * \param[global inout] NvM_Rb_WriteMon_st
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   135   * Structure to store write request counters in persistant way.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   136   * \param[global inout] NvM_Rb_idLastWrittenBlock_uo
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   137   * ID of the last written block.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   138   * \param[global in] NvM_Rb_nrBytesWritten_u32
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   139   * Number of bytes written since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   140   * \param[global in] NvM_Rb_cntrWrites_u16
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   141   * Number of write requests since last power-on.
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   142   */
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   143  void NvM_Prv_IncreaseWriteCounters(NvM_BlockIdType idBlock_uo, uint16 BlockLength_u16)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   144  {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   145      // save last written block ID
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   146      NvM_Rb_idLastWrittenBlock_uo = idBlock_uo;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   147  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   148      // increase the accumulated number of all write requests only if it has not reached the maximum
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   149      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3156] All counters shall have overflow protection
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   150      if (NvM_Rb_WriteMon_st.cntrWritesAbs_u32 < NVM_PRV_CNTR_WRITES_ABS_MAX_VALUE)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   151      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   152          ++NvM_Rb_WriteMon_st.cntrWritesAbs_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   153      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   154  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   155      // increase the number of write requests since last power-on only if it has not reached the maximum
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   156      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3156] All counters shall have overflow protection
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   157      if (NvM_Rb_cntrWrites_u16 < NVM_PRV_CNTR_WRITES_MAX_VALUE)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   158      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   159          ++NvM_Rb_cntrWrites_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   160  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   161          // store new maximum value if current maximum value has been exceeded
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   162          // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3156] All counters shall have overflow protection
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   163          if (NvM_Rb_cntrWrites_u16 > NvM_Rb_WriteMon_st.cntrWritesMax_u16)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   164          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   165              NvM_Rb_WriteMon_st.cntrWritesMax_u16 = NvM_Rb_cntrWrites_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   166          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   167      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   168  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   169      // increase the number of bytes written since last power-on only if it has not reached the maximum
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   170      // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3156] All counters shall have overflow protection
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   171      if ((NVM_PRV_NR_BYTES_WRITTEN_MAX_VALUE > NvM_Rb_nrBytesWritten_u32) &&
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   172          ((NVM_PRV_NR_BYTES_WRITTEN_MAX_VALUE - NvM_Rb_nrBytesWritten_u32) >= BlockLength_u16))
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   173      {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   174          NvM_Rb_nrBytesWritten_u32 += BlockLength_u16;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   175  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   176          // store new maximum value if current maximum value has been exceeded
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   177          // TRACE[BSW_SWS_AR4_0_R2_NVRAMManager_Ext-3156] All counters shall have overflow protection
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   178          if (NvM_Rb_nrBytesWritten_u32 > NvM_Rb_WriteMon_st.nrBytesWrittenMax_u32)
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   179          {
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   180              NvM_Rb_WriteMon_st.nrBytesWrittenMax_u32 = NvM_Rb_nrBytesWritten_u32;
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   181          }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   182      }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   183  }
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   184  #endif
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   185  
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   186  #define NVM_STOP_SEC_CODE
; BSW\src\BSW\Gen\NvM\src\NvM_Rb_WriteMon.c	   187  #include "NvM_MemMap.h"

	; Module end
