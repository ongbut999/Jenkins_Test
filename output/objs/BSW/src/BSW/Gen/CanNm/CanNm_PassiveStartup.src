	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc12400a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\CanNm\\CanNm_PassiveStartup.src BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c'

	
$TC16X
	
	.sdecl	'.text.CanNm_PassiveStartup.CanNm_PassiveStartUp',code,cluster('CanNm_PassiveStartUp')
	.sect	'.text.CanNm_PassiveStartup.CanNm_PassiveStartUp'
	.align	2
	
	.global	CanNm_PassiveStartUp

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     1  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     2  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     3  /*
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     4   ***************************************************************************************************
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     5   * Includes
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     6   ***************************************************************************************************
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     7   */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     8  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	     9  #include "CanNm_Prv.h"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    10  #include "Nm_Cbk.h"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    11  #if (!defined(NM_AR_RELEASE_MAJOR_VERSION) || (NM_AR_RELEASE_MAJOR_VERSION != CANNM_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    12  #error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    13  #endif
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    14  #if (!defined(NM_AR_RELEASE_MINOR_VERSION) || (NM_AR_RELEASE_MINOR_VERSION != CANNM_AR_RELEASE_MINOR_VERSION))
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    15  #error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    16  #endif
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    17  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    18  /**************************************************************************************************/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    19  /* Global functions (declared in header files )                                                   */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    20  /**************************************************************************************************/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    21  /***************************************************************************************************
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    22   Function name    : CanNm_PassiveStartUp
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    23   Description      : This is the AUTOSAR interface for triggering passive startup of the AUTOSAR CAN
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    24                      NM. It is called either by ComM or by Nm Interface when NetworkStartIndication
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    25                      is given.It triggers the transition from Bus-Sleep Mode or Prepare Bus Sleep
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    26                      Mode to the Network Mode in Repeat Message State. This API shall be called by Nm.
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    27   Parameter        : nmChannelHandle - Identification of the NM-channel
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    28   Return value     : E_OK - No error
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    29                    : E_NOT_OK - Passive startup of network management has failed
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    30   ***************************************************************************************************/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    31  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    32  #define CANNM_START_SEC_CODE
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    33  #include "CanNm_MemMap.h"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    34  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    35  FUNC(Std_ReturnType, CANNM_CODE) CanNm_PassiveStartUp( VAR(NetworkHandleType, AUTOMATIC) nmChannelHandle)
; Function CanNm_PassiveStartUp
.L12:
CanNm_PassiveStartUp:	.type	func
	mov	d8,d4
.L32:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    36  {
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    37      /* Pointer to configuration data */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    38      P2CONST(CanNm_ChannelConfigType, AUTOMATIC, CANNM_APPL_CONST) ConfigPtr_pcs;
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    39  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    40      /* Pointer to RAM data */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    41      P2VAR(CanNm_RamType, AUTOMATIC, CANNM_APPL_DATA) RamPtr_ps;
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    42  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    43      /* Return value of the API */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    44      VAR(Std_ReturnType, AUTOMATIC) RetVal_en;
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    45  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    46      /* Variable to hold the Network Handle of CanNm */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    47      VAR(NetworkHandleType, AUTOMATIC) CanNm_NetworkHandle;
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    48  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    49      /**** End Of Declarations ****/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    50  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    51      /* Receive CanNm Channel Index from the received ComM ChannelID */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    52      CanNm_NetworkHandle = CANNM_GET_HANDLE(nmChannelHandle);
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    53  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    54      /********************************* Start: DET *************************************/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    55  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    56      /* Report DET if Network Handle is Invalid */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    57      CANNM_DET_REPORT_ERROR_NOK((CanNm_NetworkHandle >= CANNM_NUMBER_OF_CHANNELS),
	jeq	d8,#0,.L2
.L59:
	mov	d4,#31
.L31:
	mov	d6,#1
	mov	d7,#2
	mov	d5,d8
.L33:
	call	Det_ReportError
.L34:
	mov	d2,#1
	j	.L3
.L2:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    58                              nmChannelHandle, CANNM_SID_PASSIVESTARTUP, CANNM_E_INVALID_CHANNEL)
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    59  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    60      /* Report DET if CANNM is Uninitialized */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    61      CANNM_DET_REPORT_ERROR_NOK((CanNm_RamData_s[CanNm_NetworkHandle].State_en == NM_STATE_UNINIT),
	movh.a	a15,#@his(CanNm_RamData_s)
	lea	a15,[a15]@los(CanNm_RamData_s)
	mul	d15,d8,#88
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]56
	jne	d15,#0,.L4
	mov	d4,#31
.L35:
	mov	d6,#1
	mov	d7,#1
	mov	d5,d8
.L36:
	call	Det_ReportError
.L37:
	mov	d2,#1
	j	.L5
.L4:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    62                              nmChannelHandle, CANNM_SID_PASSIVESTARTUP, CANNM_E_NO_INIT)
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    63  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    64      /*********************************  End: DET  *************************************/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    65  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    66      /* initialize the pointer to RAM data structure */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    67      RamPtr_ps = &CanNm_RamData_s[CanNm_NetworkHandle];
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    68  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    69  	/* Initialize the return value*/
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    70  	RetVal_en = E_NOT_OK;
	mov	d2,#1
.L39:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    71  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    72      /* TRACE[SWS_CanNm_00128] : API is valid if CanNm is in Bus Sleep Mode or Prepare Bus Sleep Mode */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    73      if((RamPtr_ps->State_en == NM_STATE_BUS_SLEEP) || (RamPtr_ps->State_en == NM_STATE_PREPARE_BUS_SLEEP))
	ld.w	d15,[a15]56
.L60:
	jeq	d15,#1,.L6
.L61:
	jne	d15,#2,.L7
.L6:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    74      {
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    75          /* set the pointer to Configuration structure of Channel nmChannelHandle */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    76          ConfigPtr_pcs = CANNM_GET_CHANNEL_CONFIG(CanNm_NetworkHandle);
	movh.a	a2,#@his(CanNm_ChannelConfigData_cs)
	lea	a2,[a2]@los(CanNm_ChannelConfigData_cs)
	mul	d15,d8,#52
	addsc.a	a12,a2,d15,#0
.L41:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    77  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    78          /* Transit to Network Mode */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    79          CanNm_ChangeState(RamPtr_ps, NM_STATE_REPEAT_MESSAGE, NM_MODE_NETWORK);
	mov	d4,#5
.L38:
	mov	d5,#3
	mov.aa	a4,a15
	call	CanNm_ChangeState
.L40:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    80  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    81          /* start NM-Timeout time */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    82          CanNm_StartTimer(RamPtr_ps->ctNMTimeoutTimer);
	ld.w	d15,[a15]8
	st.w	[a15]28,d15
.L62:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    83  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    84          /* indicate NmIf about Network mode */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    85          Nm_NetworkMode(nmChannelHandle);
	mov	d4,d8
.L42:
	call	Nm_NetworkMode
.L43:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    86  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    87          #if (CANNM_PASSIVE_MODE_ENABLED == STD_OFF)
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    88          /* start transmission */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    89          CanNm_StartTransmission(CanNm_NetworkHandle);
	mov	d4,d8
.L44:
	call	CanNm_StartTransmission
.L45:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    90          #endif
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    91  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    92          if (ConfigPtr_pcs->RepeatMessageTime != 0U)
	ld.w	d15,[a12]24
.L63:
	jeq	d15,#0,.L8
.L64:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    93          {
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    94              /* start Repeat Message timer */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    95              CanNm_StartTimer(RamPtr_ps->ctRepeatMessageTimer);
	ld.w	d15,[a15]8
	st.w	[a15]24,d15
.L65:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    96  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    97              /* Notify to the upper layer about changes of the CanNm states if configuration parameter
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    98               CANNM_STATE_CHANGE_IND_ENABLED is set to TRUE */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	    99              #if (CANNM_STATE_CHANGE_IND_ENABLED != STD_OFF)
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   100              Nm_StateChangeNotification(nmChannelHandle, NM_STATE_BUS_SLEEP, NM_STATE_REPEAT_MESSAGE);
	mov	d5,#1
.L66:
	mov	d6,#5
	mov	d4,d8
.L46:
	call	Nm_StateChangeNotification
.L47:
	j	.L9
.L8:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   101              #endif
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   102          }
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   103          else
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   104          {
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   105              /* if network is released, goto Ready Sleep state */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   106              RamPtr_ps->State_en = NM_STATE_READY_SLEEP;
	mov	d15,#3
.L67:
	st.w	[a15]56,d15
.L68:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   107  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   108              /* Notify to the upper layer about changes of the CanNm states if configuration parameter
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   109                 CANNM_STATE_CHANGE_IND_ENABLED is set to TRUE */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   110              #if (CANNM_STATE_CHANGE_IND_ENABLED != STD_OFF)
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   111              Nm_StateChangeNotification(nmChannelHandle, NM_STATE_REPEAT_MESSAGE, NM_STATE_READY_SLEEP);
	mov	d5,#5
.L69:
	mov	d6,#3
	mov	d4,d8
.L48:
	call	Nm_StateChangeNotification
.L49:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   112              #endif
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   113  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   114              /* Stop transmission */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   115              RamPtr_ps->MsgTxStatus_b = FALSE;
	mov	d15,#0
.L70:
	st.b	[a15]80,d15
.L9:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   116           }
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   117  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   118           /* return successful transition */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   119          RetVal_en = E_OK;
	mov	d2,#0
.L7:

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   120      }
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   121  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   122      /* TRACE[SWS_CanNm_00147] : The API is called in Network Mode */
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   123      return RetVal_en;
	j	.L10

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   124  }
.L10:
.L5:
.L3:
	ret
.L23:
	
__CanNm_PassiveStartUp_function_end:
	.size	CanNm_PassiveStartUp,__CanNm_PassiveStartUp_function_end-CanNm_PassiveStartUp
.L21:
	; End of function
	
	.calls	'CanNm_PassiveStartUp','Det_ReportError'
	.calls	'CanNm_PassiveStartUp','CanNm_ChangeState'
	.calls	'CanNm_PassiveStartUp','Nm_NetworkMode'
	.calls	'CanNm_PassiveStartUp','CanNm_StartTransmission'
	.calls	'CanNm_PassiveStartUp','Nm_StateChangeNotification'
	.extern	Det_ReportError
	.extern	CanNm_ChannelConfigData_cs
	.extern	CanNm_RamData_s
	.extern	CanNm_ChangeState
	.extern	CanNm_StartTransmission
	.extern	Nm_NetworkMode
	.extern	Nm_StateChangeNotification
	.calls	'CanNm_PassiveStartUp','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L14:
	.word	13480
	.half	3
	.word	.L15
	.byte	4
.L13:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L16
.L22:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.word	148
	.byte	4
	.byte	'rba_DiagLib_Bit8SetBit',0,3,1,36,19,1,1,5
	.byte	'buffer',0,1,36,49
	.word	165
	.byte	5
	.byte	'bit_position',0,1,36,63
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBit',0,3,1,42,19,1,1,5
	.byte	'buffer',0,1,42,51
	.word	165
	.byte	5
	.byte	'bit_position',0,1,42,65
	.word	148
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit8GetSingleBit',0,3,1,60,20
	.word	148
	.byte	1,1,5
	.byte	'value',0,1,60,55
	.word	148
	.byte	5
	.byte	'bit_position',0,1,60,68
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit8ClearBits',0,3,1,77,19,1,1,5
	.byte	'value',0,1,77,52
	.word	165
	.byte	5
	.byte	'bit_position',0,1,77,65
	.word	148
	.byte	5
	.byte	'number_of_bits',0,1,77,85
	.word	148
	.byte	6,0,2
	.byte	'unsigned short int',0,2,7,3
	.word	478
	.byte	4
	.byte	'rba_DiagLib_Bit16SetBit',0,3,2,36,19,1,1,5
	.byte	'buffer',0,2,36,51
	.word	500
	.byte	5
	.byte	'bit_position',0,2,36,65
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBit',0,3,2,42,19,1,1,5
	.byte	'buffer',0,2,42,53
	.word	500
	.byte	5
	.byte	'bit_position',0,2,42,67
	.word	148
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit16GetSingleBit',0,3,2,60,21
	.word	478
	.byte	1,1,5
	.byte	'value',0,2,60,58
	.word	478
	.byte	5
	.byte	'bit_position',0,2,60,71
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit16ClearBits',0,3,2,78,19,1,1,5
	.byte	'value',0,2,78,54
	.word	500
	.byte	5
	.byte	'bit_position',0,2,78,67
	.word	148
	.byte	5
	.byte	'number_of_bits',0,2,78,87
	.word	148
	.byte	6,0,2
	.byte	'unsigned int',0,4,7,3
	.word	817
	.byte	4
	.byte	'rba_DiagLib_Bit32SetBit',0,3,3,36,19,1,1,5
	.byte	'buffer',0,3,36,51
	.word	833
	.byte	5
	.byte	'bit_position',0,3,36,65
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBit',0,3,3,42,19,1,1,5
	.byte	'buffer',0,3,42,53
	.word	833
	.byte	5
	.byte	'bit_position',0,3,42,67
	.word	148
	.byte	6,0,7
	.byte	'rba_DiagLib_Bit32GetSingleBit',0,3,3,60,21
	.word	817
	.byte	1,1,5
	.byte	'value',0,3,60,58
	.word	817
	.byte	5
	.byte	'bit_position',0,3,60,71
	.word	148
	.byte	6,0,4
	.byte	'rba_DiagLib_Bit32ClearBits',0,3,3,78,19,1,1,5
	.byte	'value',0,3,78,54
	.word	833
	.byte	5
	.byte	'bit_position',0,3,78,67
	.word	148
	.byte	5
	.byte	'number_of_bits',0,3,78,87
	.word	148
	.byte	6,0,8
	.byte	'Det_ReportError',0,4,112,16
	.word	148
	.byte	1,1,1,1,5
	.byte	'ModuleId',0,4,112,39
	.word	478
	.byte	5
	.byte	'InstanceId',0,4,112,55
	.word	148
	.byte	5
	.byte	'ApiId',0,4,112,73
	.word	148
	.byte	5
	.byte	'ErrorId',0,4,112,86
	.word	148
	.byte	0,9,5,82,9,52,10
	.byte	'MsgCycleTime',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'MsgCycleOffset',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'MsgTimeoutTime',0
	.word	817
	.byte	4,2,35,8,10
	.byte	'MsgReducedTime',0
	.word	817
	.byte	4,2,35,12,10
	.byte	'ImmediateNmCycleTime',0
	.word	817
	.byte	4,2,35,16,10
	.byte	'NMTimeoutTime',0
	.word	817
	.byte	4,2,35,20,10
	.byte	'RepeatMessageTime',0
	.word	817
	.byte	4,2,35,24,10
	.byte	'RemoteSleepIndTime',0
	.word	817
	.byte	4,2,35,28,10
	.byte	'WaitBusSleepTime',0
	.word	817
	.byte	4,2,35,32,10
	.byte	'TxPduId',0
	.word	478
	.byte	2,2,35,36,10
	.byte	'NetworkHandle',0
	.word	148
	.byte	1,2,35,38,10
	.byte	'PduLength_u8',0
	.word	148
	.byte	1,2,35,39,10
	.byte	'NodeIdPos_u8',0
	.word	148
	.byte	1,2,35,40,10
	.byte	'ControlBitVectorPos_u8',0
	.word	148
	.byte	1,2,35,41,10
	.byte	'NodeDetectionEnabled_b',0
	.word	148
	.byte	1,2,35,42,10
	.byte	'NodeIdEnabled_b',0
	.word	148
	.byte	1,2,35,43,10
	.byte	'RepeatMsgIndEnabled_b',0
	.word	148
	.byte	1,2,35,44,10
	.byte	'NodeId_u8',0
	.word	148
	.byte	1,2,35,45,10
	.byte	'UserDataLength_u8',0
	.word	148
	.byte	1,2,35,46,10
	.byte	'ImmediateNmTransmissions_u8',0
	.word	148
	.byte	1,2,35,47,10
	.byte	'stChannelActive_b',0
	.word	148
	.byte	1,2,35,48,10
	.byte	'stBusLoadReductionActive_b',0
	.word	148
	.byte	1,2,35,49,10
	.byte	'ActiveWakeupBitEnabled_b',0
	.word	148
	.byte	1,2,35,50,0,11
	.word	1245
.L25:
	.byte	3
	.word	1863
	.byte	9,7,71,9,8,10
	.byte	'SduDataPtr',0
	.word	165
	.byte	4,2,35,0,10
	.byte	'SduLength',0
	.word	478
	.byte	2,2,35,4,0,12,8
	.word	148
	.byte	13,7,0,14,8,67,9,4,15
	.byte	'NM_STATE_UNINIT',0,0,15
	.byte	'NM_STATE_BUS_SLEEP',0,1,15
	.byte	'NM_STATE_PREPARE_BUS_SLEEP',0,2,15
	.byte	'NM_STATE_READY_SLEEP',0,3,15
	.byte	'NM_STATE_NORMAL_OPERATION',0,4,15
	.byte	'NM_STATE_REPEAT_MESSAGE',0,5,15
	.byte	'NM_STATE_SYNCHRONIZE',0,6,15
	.byte	'NM_STATE_OFFLINE',0,7,0,14,6,199,1,9,4,15
	.byte	'CANNM_NETWORK_RELEASED_E',0,0,15
	.byte	'CANNM_NETWORK_REQUESTED_E',0,1,0,14,8,43,9,4,15
	.byte	'NM_MODE_BUS_SLEEP',0,0,15
	.byte	'NM_MODE_PREPARE_BUS_SLEEP',0,1,15
	.byte	'NM_MODE_SYNCHRONIZE',0,2,15
	.byte	'NM_MODE_NETWORK',0,3,0,9,6,206,1,9,88,10
	.byte	'Pdu_s',0
	.word	1873
	.byte	8,2,35,0,10
	.byte	'ctSwFrTimer',0
	.word	817
	.byte	4,2,35,8,10
	.byte	'MsgCyclePeriod',0
	.word	817
	.byte	4,2,35,12,10
	.byte	'PrevMsgCycleTimestamp',0
	.word	817
	.byte	4,2,35,16,10
	.byte	'PrevMsgTimeoutTimestamp',0
	.word	817
	.byte	4,2,35,20,10
	.byte	'ctRepeatMessageTimer',0
	.word	817
	.byte	4,2,35,24,10
	.byte	'ctNMTimeoutTimer',0
	.word	817
	.byte	4,2,35,28,10
	.byte	'ctWaitBusSleepTimer',0
	.word	817
	.byte	4,2,35,32,10
	.byte	'ctRemoteSleepIndTimer',0
	.word	817
	.byte	4,2,35,36,10
	.byte	'RxBuffer_au8',0
	.word	1918
	.byte	8,2,35,40,10
	.byte	'TxBuffer_au8',0
	.word	1918
	.byte	8,2,35,48,10
	.byte	'State_en',0
	.word	1927
	.byte	4,2,35,56,10
	.byte	'NetworkReqState_en',0
	.word	2120
	.byte	4,2,35,60,10
	.byte	'UserDataBuffer_au8',0
	.word	1918
	.byte	8,2,35,64,10
	.byte	'Mode_en',0
	.word	2182
	.byte	4,2,35,72,10
	.byte	'RxNodeId_u8',0
	.word	148
	.byte	1,2,35,76,10
	.byte	'RxCtrlBitVector_u8',0
	.word	148
	.byte	1,2,35,77,10
	.byte	'TxCtrlBitVector_u8',0
	.word	148
	.byte	1,2,35,78,10
	.byte	'ImmediateNmTx_u8',0
	.word	148
	.byte	1,2,35,79,10
	.byte	'MsgTxStatus_b',0
	.word	148
	.byte	1,2,35,80,10
	.byte	'TxRptMsgStatus_b',0
	.word	148
	.byte	1,2,35,81,10
	.byte	'RxIndication_b',0
	.word	148
	.byte	1,2,35,82,10
	.byte	'TxConfirmation_b',0
	.word	148
	.byte	1,2,35,83,10
	.byte	'RxStatus_b',0
	.word	148
	.byte	1,2,35,84,10
	.byte	'stCanNmComm',0
	.word	148
	.byte	1,2,35,85,10
	.byte	'stRemoteSleepInd',0
	.word	148
	.byte	1,2,35,86,10
	.byte	'TxTimeoutMonitoringActive_b',0
	.word	148
	.byte	1,2,35,87,0
.L27:
	.byte	3
	.word	2276
	.byte	16
	.word	170
	.byte	17
	.word	200
	.byte	17
	.word	215
	.byte	6,0,16
	.word	238
	.byte	17
	.word	270
	.byte	17
	.word	285
	.byte	6,0,16
	.word	308
	.byte	17
	.word	348
	.byte	17
	.word	362
	.byte	6,0,16
	.word	385
	.byte	17
	.word	418
	.byte	17
	.word	432
	.byte	17
	.word	453
	.byte	6,0,16
	.word	505
	.byte	17
	.word	536
	.byte	17
	.word	551
	.byte	6,0,16
	.word	574
	.byte	17
	.word	607
	.byte	17
	.word	622
	.byte	6,0,16
	.word	645
	.byte	17
	.word	686
	.byte	17
	.word	700
	.byte	6,0,16
	.word	723
	.byte	17
	.word	757
	.byte	17
	.word	771
	.byte	17
	.word	792
	.byte	6,0,16
	.word	838
	.byte	17
	.word	869
	.byte	17
	.word	884
	.byte	6,0,16
	.word	907
	.byte	17
	.word	940
	.byte	17
	.word	955
	.byte	6,0,16
	.word	978
	.byte	17
	.word	1019
	.byte	17
	.word	1033
	.byte	6,0,16
	.word	1056
	.byte	17
	.word	1090
	.byte	17
	.word	1104
	.byte	17
	.word	1125
	.byte	6,0,18
	.byte	'CanNm_ChangeState',0,6,203,2,31,1,1,1,1,5
	.byte	'RamPtr_ps',0,6,204,2,100
	.word	2964
	.byte	5
	.byte	'nmState_en',0,6,205,2,80
	.word	1927
	.byte	5
	.byte	'nmMode_en',0,6,206,2,79
	.word	2182
	.byte	0,11
	.word	148
	.byte	18
	.byte	'CanNm_StartTransmission',0,6,213,2,31,1,1,1,1,5
	.byte	'CanNm_NetworkHandle',0,6,213,2,92
	.word	3274
	.byte	0,18
	.byte	'Nm_NetworkMode',0,9,51,28,1,1,1,1,5
	.byte	'NetworkHandle',0,9,51,77
	.word	148
	.byte	0,18
	.byte	'Nm_StateChangeNotification',0,9,210,1,28,1,1,1,1,5
	.byte	'nmNetworkHandle',0,9,212,1,39
	.word	148
	.byte	5
	.byte	'nmPreviousState',0,9,213,1,34
	.word	1927
	.byte	5
	.byte	'nmCurrentState',0,9,214,1,34
	.word	1927
	.byte	0,19,1,3
	.word	3499
	.byte	20
	.byte	'__codeptr',0,10,1,1
	.word	3501
	.byte	2
	.byte	'char',0,1,6,20
	.byte	'sint8',0,11,76,25
	.word	3524
	.byte	20
	.byte	'uint8',0,11,81,25
	.word	148
	.byte	20
	.byte	'uint16',0,11,91,25
	.word	478
	.byte	20
	.byte	'uint32',0,11,106,24
	.word	817
	.byte	2
	.byte	'unsigned long long int',0,8,7,20
	.byte	'uint64',0,11,111,30
	.word	3590
	.byte	20
	.byte	'boolean',0,11,127,25
	.word	148
	.byte	2
	.byte	'unsigned long int',0,4,7,20
	.byte	'uint16_least',0,11,147,1,25
	.word	3647
	.byte	20
	.byte	'StatusType',0,12,191,1,27
	.word	148
	.byte	20
	.byte	'Std_ReturnType',0,12,199,1,15
	.word	148
	.byte	9,12,206,1,9,8,10
	.byte	'vendorID',0
	.word	478
	.byte	2,2,35,0,10
	.byte	'moduleID',0
	.word	478
	.byte	2,2,35,2,10
	.byte	'sw_major_version',0
	.word	148
	.byte	1,2,35,4,10
	.byte	'sw_minor_version',0
	.word	148
	.byte	1,2,35,5,10
	.byte	'sw_patch_version',0
	.word	148
	.byte	1,2,35,6,0,20
	.byte	'Std_VersionInfoType',0,12,213,1,3
	.word	3734
	.byte	20
	.byte	'PduIdType',0,13,22,19
	.word	478
	.byte	20
	.byte	'PduLengthType',0,13,26,19
	.word	478
	.byte	20
	.byte	'PduInfoType',0,7,75,3
	.word	1873
	.byte	14,7,113,9,4,15
	.byte	'TP_DATACONF',0,0,15
	.byte	'TP_DATARETRY',0,1,15
	.byte	'TP_CONFPENDING',0,2,0,20
	.byte	'TpDataStateType',0,7,118,3
	.word	3944
	.byte	20
	.byte	'NetworkHandleType',0,7,128,1,17
	.word	148
	.byte	20
	.byte	'CanNm_TimerType',0,5,74,17
	.word	817
	.byte	20
	.byte	'CanNm_ChannelConfigType',0,5,131,1,3
	.word	1245
	.byte	20
	.byte	'Nm_ModeType',0,8,49,3
	.word	2182
	.byte	20
	.byte	'Nm_StateType',0,8,77,3
	.word	1927
	.byte	14,8,116,9,4,15
	.byte	'NM_ACTIVE_CHANNEL',0,0,15
	.byte	'NM_PASSIVE_CHANNEL',0,1,0,20
	.byte	'Nm_ChannelType',0,8,120,3
	.word	4145
	.byte	20
	.byte	'Can_IdType',0,14,32,16
	.word	817
	.byte	20
	.byte	'Can_HwHandleType',0,14,43,16
	.word	478
	.byte	9,15,93,9,8,10
	.byte	'Class',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'TIN',0
	.word	148
	.byte	1,2,35,1,10
	.byte	'ReturnAddress',0
	.word	817
	.byte	4,2,35,4,0,20
	.byte	'OsTrapInfoType',0,15,97,3
	.word	4259
	.byte	12,68
	.word	817
	.byte	13,16,0,9,15,154,1,9,68,10
	.byte	'store',0
	.word	4339
	.byte	68,2,35,0,0,12,68
	.word	4348
	.byte	13,0,0,20
	.byte	'Os_JumpBufType',0,15,156,1,3
	.word	4370
	.byte	20
	.byte	'Os_StackTraceType',0,15,174,1,18
	.word	817
	.byte	9,15,175,1,9,8,10
	.byte	'sp',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'ctx',0
	.word	817
	.byte	4,2,35,4,0,20
	.byte	'Os_StackValueType',0,15,175,1,63
	.word	4430
	.byte	20
	.byte	'Os_StackSizeType',0,15,176,1,27
	.word	4430
	.byte	21,1,1,3
	.word	4515
	.byte	20
	.byte	'Os_VoidVoidFunctionType',0,15,179,1,16
	.word	4518
	.byte	20
	.byte	'ApplicationType',0,15,193,1,23
	.word	148
	.byte	22
	.byte	'Os_ApplicationConfigurationType_s',0,15,198,1,16,2,10
	.byte	'app_id',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,1,0,20
	.byte	'Os_ApplicationConfigurationType',0,15,201,1,3
	.word	4581
	.byte	20
	.byte	'Os_CoreStateType',0,15,203,1,16
	.word	817
	.byte	20
	.byte	'AreaIdType',0,15,204,1,16
	.word	478
	.byte	20
	.byte	'Os_PeripheralAddressType',0,15,212,1,22
	.word	817
	.byte	20
	.byte	'TickType',0,15,221,1,22
	.word	817
	.byte	20
	.byte	'Os_StopwatchTickType',0,15,225,1,22
	.word	817
	.byte	20
	.byte	'Os_Lockable',0,15,234,1,18
	.word	833
	.byte	20
	.byte	'CoreIdType',0,15,236,1,16
	.word	478
	.byte	20
	.byte	'SpinlockIdType',0,15,237,1,16
	.word	478
	.byte	14,15,239,1,9,4,15
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,15
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,20
	.byte	'TryToGetSpinlockType',0,15,239,1,74
	.word	4888
	.byte	14,15,174,2,9,4,15
	.byte	'APPLICATION_ACCESSIBLE',0,0,15
	.byte	'APPLICATION_RESTARTING',0,1,15
	.byte	'APPLICATION_TERMINATED',0,2,0,20
	.byte	'ApplicationStateType',0,15,174,2,92
	.word	4981
	.byte	23
	.byte	'void',0,3
	.word	5093
	.byte	24,1,1,25
	.word	148
	.byte	25
	.word	5099
	.byte	0,3
	.word	5104
	.byte	20
	.byte	'Os_FunctionEntryType',0,15,183,2,16
	.word	5118
	.byte	22
	.byte	'Os_MeterInfoType_s',0,15,193,2,16,48,10
	.byte	'elapsed',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'previous',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'max',0
	.word	817
	.byte	4,2,35,8,10
	.byte	'cumulative',0
	.word	817
	.byte	4,2,35,12,10
	.byte	'stackbase',0
	.word	4430
	.byte	8,2,35,16,10
	.byte	'stackusage',0
	.word	4430
	.byte	8,2,35,24,10
	.byte	'stackmax',0
	.word	4430
	.byte	8,2,35,32,10
	.byte	'stackbudget',0
	.word	4430
	.byte	8,2,35,40,0,20
	.byte	'Os_MeterInfoType',0,15,202,2,3
	.word	5153
	.byte	3
	.word	5153
	.byte	20
	.byte	'Os_MeterInfoRefType',0,15,203,2,50
	.word	5351
	.byte	20
	.byte	'EventMaskType',0,15,206,2,15
	.word	148
	.byte	20
	.byte	'Os_imaskType',0,15,211,2,16
	.word	817
	.byte	22
	.byte	'Os_ISRDynType_s',0,15,213,2,16,48,10
	.byte	'meter',0
	.word	5153
	.byte	48,2,35,0,0,20
	.byte	'Os_ISRDynType',0,15,215,2,3
	.word	5430
	.byte	3
	.word	5430
	.byte	11
	.word	5491
	.byte	22
	.byte	'Os_ISRType_s',0,15,216,2,16,24,10
	.byte	'entry_function',0
	.word	4523
	.byte	4,2,35,0,10
	.byte	'dynamic',0
	.word	5496
	.byte	4,2,35,4,10
	.byte	'imask',0
	.word	817
	.byte	4,2,35,8,10
	.byte	'stackbudget',0
	.word	4430
	.byte	8,2,35,12,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,20,10
	.byte	'application',0
	.word	148
	.byte	1,2,35,21,0,20
	.byte	'Os_ISRType',0,15,223,2,3
	.word	5501
	.byte	3
	.word	4515
	.byte	11
	.word	5501
	.byte	3
	.word	5660
	.byte	20
	.byte	'ISRType',0,15,224,2,46
	.word	5665
	.byte	20
	.byte	'Os_bitmask',0,15,239,2,22
	.word	817
	.byte	20
	.byte	'Os_pset0Type',0,15,240,2,20
	.word	817
	.byte	20
	.byte	'Os_pset1Type',0,15,241,2,20
	.word	817
	.byte	20
	.byte	'Os_pset2Type',0,15,242,2,20
	.word	817
	.byte	26,15,243,2,9,4,10
	.byte	'p0',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'p1',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'p2',0
	.word	817
	.byte	4,2,35,0,0,20
	.byte	'Os_psetType',0,15,247,2,3
	.word	5773
	.byte	26,15,249,2,9,4,10
	.byte	't0',0
	.word	817
	.byte	4,2,35,0,10
	.byte	't1',0
	.word	817
	.byte	4,2,35,0,10
	.byte	't2',0
	.word	817
	.byte	4,2,35,0,0,20
	.byte	'Os_tpmaskType',0,15,253,2,3
	.word	5837
	.byte	20
	.byte	'Os_ActivationCountType',0,15,254,2,23
	.word	148
	.byte	22
	.byte	'Os_TaskDynType_s',0,15,128,3,16,120,10
	.byte	'terminate_jump_buf',0
	.word	4379
	.byte	68,2,35,0,10
	.byte	'meter',0
	.word	5153
	.byte	48,2,35,68,10
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,116,0,20
	.byte	'Os_TaskDynType',0,15,132,3,3
	.word	5935
	.byte	12,68
	.word	4348
	.byte	13,0,0,3
	.word	5935
	.byte	11
	.word	6061
	.byte	22
	.byte	'Os_TaskType_s',0,15,134,3,16,40,10
	.byte	'dynamic',0
	.word	6066
	.byte	4,2,35,0,10
	.byte	'entry_function',0
	.word	4523
	.byte	4,2,35,4,10
	.byte	'pset',0
	.word	5773
	.byte	4,2,35,8,10
	.byte	'base_tpmask',0
	.word	5837
	.byte	4,2,35,12,10
	.byte	'tpmask',0
	.word	5837
	.byte	4,2,35,16,10
	.byte	'core_id',0
	.word	478
	.byte	2,2,35,20,10
	.byte	'index',0
	.word	817
	.byte	4,2,35,24,10
	.byte	'stackbudget',0
	.word	4430
	.byte	8,2,35,28,10
	.byte	'activation_count',0
	.word	148
	.byte	1,2,35,36,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,37,10
	.byte	'application',0
	.word	148
	.byte	1,2,35,38,0,20
	.byte	'Os_TaskType',0,15,146,3,3
	.word	6071
	.byte	11
	.word	6071
	.byte	3
	.word	6321
	.byte	20
	.byte	'TaskType',0,15,147,3,47
	.word	6326
	.byte	27
	.byte	'Os_TaskStateType',0,15,155,3,6,4,15
	.byte	'SUSPENDED',0,0,15
	.byte	'READY',0,1,15
	.byte	'WAITING',0,2,15
	.byte	'RUNNING',0,3,0,20
	.byte	'TaskStateType',0,15,156,3,31
	.word	6349
	.byte	26,15,167,3,3,4,10
	.byte	'tpmask',0
	.word	5837
	.byte	4,2,35,0,0,22
	.byte	'Os_ResourceDynType_s',0,15,166,3,16,4,10
	.byte	'saved_priority',0
	.word	6436
	.byte	4,2,35,0,0,20
	.byte	'Os_ResourceDynType',0,15,170,3,3
	.word	6459
	.byte	3
	.word	6459
	.byte	11
	.word	6539
	.byte	22
	.byte	'Os_ResourceType_s',0,15,171,3,16,12,10
	.byte	'dynamic',0
	.word	6544
	.byte	4,2,35,0,10
	.byte	'tpmask',0
	.word	5837
	.byte	4,2,35,4,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,8,0,20
	.byte	'Os_ResourceType',0,15,175,3,3
	.word	6549
	.byte	9,15,181,3,9,12,10
	.byte	'maxallowedvalue',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'ticksperbase',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'mincycle',0
	.word	817
	.byte	4,2,35,8,0,20
	.byte	'AlarmBaseType',0,15,185,3,3
	.word	6648
	.byte	9,15,206,3,9,8,10
	.byte	'Running',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'Pending',0
	.word	148
	.byte	1,2,35,1,10
	.byte	'Delay',0
	.word	817
	.byte	4,2,35,4,0,20
	.byte	'Os_CounterStatusType',0,15,210,3,3
	.word	6743
	.byte	28
	.word	148
	.byte	1,1,3
	.word	6829
	.byte	20
	.byte	'Os_CounterIncrAdvType',0,15,217,3,22
	.word	6836
	.byte	22
	.byte	's_swd',0,15,222,3,12,4,10
	.byte	'count',0
	.word	817
	.byte	4,2,35,0,0,26,15,221,3,3,4,10
	.byte	'sw',0
	.word	6872
	.byte	4,2,35,0,0,22
	.byte	'Os_CounterDynType_s',0,15,220,3,16,4,10
	.byte	'type_dependent',0
	.word	6900
	.byte	4,2,35,0,0,20
	.byte	'Os_CounterDynType',0,15,226,3,3
	.word	6919
	.byte	3
	.word	6919
	.byte	11
	.word	6997
	.byte	22
	.byte	'Os_CounterType_s',0,15,227,3,16,28,10
	.byte	'dynamic',0
	.word	7002
	.byte	4,2,35,0,10
	.byte	'advincr',0
	.word	6841
	.byte	4,2,35,4,10
	.byte	'base',0
	.word	6648
	.byte	12,2,35,8,10
	.byte	'core',0
	.word	5099
	.byte	4,2,35,20,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,24,10
	.byte	'application',0
	.word	148
	.byte	1,2,35,25,0,20
	.byte	'Os_CounterType',0,15,234,3,3
	.word	7007
	.byte	3
	.word	6829
	.byte	11
	.word	7007
	.byte	3
	.word	7159
	.byte	20
	.byte	'CounterType',0,15,235,3,52
	.word	7164
	.byte	27
	.byte	'Os_ScheduleTableStatusType',0,15,240,3,6,4,15
	.byte	'SCHEDULETABLE_STOPPED',0,0,15
	.byte	'SCHEDULETABLE_NEXT',0,1,15
	.byte	'SCHEDULETABLE_WAITING',0,2,15
	.byte	'SCHEDULETABLE_RUNNING',0,3,15
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,20
	.byte	'ScheduleTableStatusType',0,15,241,3,41
	.word	7190
	.byte	11
	.word	.L50-.L14
	.byte	3
	.word	7390
	.byte	20
	.byte	'ScheduleTableType',0,15,128,4,58
	.word	7395
	.byte	22
	.byte	'Os_ScheduleTableDynType_s',0,15,130,4,16,16,10
	.byte	'match',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'next',0
	.word	7400
	.byte	4,2,35,4,10
	.byte	'state',0
	.word	7190
	.byte	4,2,35,8,10
	.byte	'config',0
	.word	478
	.byte	2,2,35,12,0,3
	.word	7427
	.byte	11
	.word	7520
.L50:
	.byte	22
	.byte	'Os_ScheduleTableType_s',0,15,247,3,16,16,10
	.byte	'dynamic',0
	.word	7525
	.byte	4,2,35,0,10
	.byte	'counter',0
	.word	7169
	.byte	4,2,35,4,10
	.byte	'repeat',0
	.word	148
	.byte	1,2,35,8,10
	.byte	'config',0
	.word	478
	.byte	2,2,35,10,10
	.byte	'initial',0
	.word	148
	.byte	1,2,35,12,10
	.byte	'access',0
	.word	148
	.byte	1,2,35,13,10
	.byte	'application',0
	.word	148
	.byte	1,2,35,14,0,20
	.byte	'Os_ScheduleTableType',0,15,255,3,3
	.word	7530
	.byte	11
	.word	7530
	.byte	3
	.word	7710
	.byte	11
	.word	7007
	.byte	3
	.word	7720
	.byte	29
	.word	4823
	.byte	29
	.word	5773
	.byte	29
	.word	5670
	.byte	29
	.word	6331
	.byte	29
	.word	5837
	.byte	29
	.word	148
	.byte	29
	.word	6331
	.byte	22
	.byte	'Os_ControlledCoreType_s',0,15,251,6,16,112,10
	.byte	'TrapInfo',0
	.word	4259
	.byte	8,2,35,0,10
	.byte	'lock_taskaccess',0
	.word	7730
	.byte	4,2,35,8,10
	.byte	'ReadyTasks',0
	.word	7735
	.byte	4,2,35,12,10
	.byte	'RunningISR',0
	.word	7740
	.byte	4,2,35,16,10
	.byte	'RunningTask',0
	.word	7745
	.byte	4,2,35,20,10
	.byte	'RunningTPMask',0
	.word	7750
	.byte	4,2,35,24,10
	.byte	'CurrentMeteredObject',0
	.word	5356
	.byte	4,2,35,28,10
	.byte	'IdleMeter',0
	.word	5153
	.byte	48,2,35,32,10
	.byte	'AppAccess',0
	.word	148
	.byte	1,2,35,80,10
	.byte	'AppOverride',0
	.word	7755
	.byte	1,2,35,81,10
	.byte	'GetStackValueAdjust',0
	.word	4430
	.byte	8,2,35,84,10
	.byte	'InErrorHook',0
	.word	148
	.byte	1,2,35,92,10
	.byte	'ChainTaskRef',0
	.word	7760
	.byte	4,2,35,96,10
	.byte	'GetStackUsageAdjust',0
	.word	4430
	.byte	8,2,35,100,10
	.byte	'InProtectionHook',0
	.word	148
	.byte	1,2,35,108,10
	.byte	'CoreIsActive',0
	.word	148
	.byte	1,2,35,109,10
	.byte	'InShutdownHook',0
	.word	148
	.byte	1,2,35,110,0,20
	.byte	'Os_ControlledCoreType',0,15,141,7,3
	.word	7765
	.byte	3
	.word	817
	.byte	11
	.word	5501
	.byte	3
	.word	8221
	.byte	11
	.word	6071
	.byte	3
	.word	8231
	.byte	3
	.word	5153
	.byte	22
	.byte	'Os_AnyCoreType_s',0,15,151,7,16,96,10
	.byte	'DisableAllImask',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'SuspendAllImask',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'SuspendOSImask',0
	.word	817
	.byte	4,2,35,8,10
	.byte	'DisableAllCount',0
	.word	817
	.byte	4,2,35,12,10
	.byte	'SuspendAllCount',0
	.word	817
	.byte	4,2,35,16,10
	.byte	'SuspendOSCount',0
	.word	817
	.byte	4,2,35,20,10
	.byte	'RestartJumpBuf',0
	.word	4379
	.byte	68,2,35,24,10
	.byte	'Restartable',0
	.word	148
	.byte	1,2,35,92,0,20
	.byte	'Os_AnyCoreType',0,15,160,7,3
	.word	8246
	.byte	20
	.byte	'Can_TxObjPriorityClassType',0,16,219,3,16
	.word	817
	.byte	22
	.byte	'Can_TxHwObjectConfigType',0,16,231,3,16,8,10
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,1,10
	.byte	'TxObjPriorityClass',0
	.word	817
	.byte	4,2,35,4,0,20
	.byte	'Can_TxHwObjectConfigType',0,16,252,3,3
	.word	8523
	.byte	22
	.byte	'Can_RxHwObjectConfigType',0,16,129,4,16,12,10
	.byte	'MaskRef',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'MsgId',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'MsgObjId',0
	.word	148
	.byte	1,2,35,8,10
	.byte	'HwControllerId',0
	.word	148
	.byte	1,2,35,9,0,20
	.byte	'Can_RxHwObjectConfigType',0,16,147,4,3
	.word	8659
	.byte	12,4
	.word	148
	.byte	13,3,0,22
	.byte	'Can_ControllerMOMapConfigType',0,16,181,4,16,4,10
	.byte	'ControllerMOMap',0
	.word	8799
	.byte	4,2,35,0,0,20
	.byte	'Can_ControllerMOMapConfigType',0,16,184,4,3
	.word	8808
	.byte	22
	.byte	'Can_NPCRValueType',0,16,188,4,16,2,10
	.byte	'Can_NPCRValue',0
	.word	478
	.byte	2,2,35,0,0,20
	.byte	'Can_NPCRValueType',0,16,191,4,3
	.word	8909
	.byte	22
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,194,4,16,8,10
	.byte	'CanControllerBaudrate',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'CanControllerBaudrateCfg',0
	.word	478
	.byte	2,2,35,4,0,20
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,16,198,4,3
	.word	8984
	.byte	11
	.word	8984
	.byte	3
	.word	9149
	.byte	22
	.byte	'Can_BaudrateConfigPtrType',0,16,201,4,16,4,10
	.byte	'Can_kBaudrateConfigPtr',0
	.word	9154
	.byte	4,2,35,0,0,20
	.byte	'Can_BaudrateConfigPtrType',0,16,204,4,3
	.word	9159
	.byte	22
	.byte	'Can_EventHandlingType',0,16,226,4,16,4,10
	.byte	'CanEventType',0
	.word	8799
	.byte	4,2,35,0,0,20
	.byte	'Can_EventHandlingType',0,16,229,4,3
	.word	9259
	.byte	20
	.byte	'Rte_TransformerErrorCode',0,17,130,1,15
	.word	148
	.byte	20
	.byte	'Rte_TransformerClass',0,17,131,1,15
	.word	148
	.byte	9,17,168,1,9,12,10
	.byte	'in',0
	.word	5099
	.byte	4,2,35,0,10
	.byte	'out',0
	.word	5099
	.byte	4,2,35,4,10
	.byte	'used',0
	.word	478
	.byte	2,2,35,8,10
	.byte	'lost_data',0
	.word	148
	.byte	1,2,35,10,0,20
	.byte	'Rte_QDynType',0,17,173,1,3
	.word	9405
	.byte	14,17,175,1,9,4,15
	.byte	'RTE_DRA',0,0,15
	.byte	'RTE_WOWP',0,1,15
	.byte	'RTE_TASK',0,2,15
	.byte	'RTE_ARE',0,3,15
	.byte	'RTE_EV',0,4,15
	.byte	'RTE_MSI',0,5,0,20
	.byte	'Rte_NotificationType',0,17,182,1,3
	.word	9492
	.byte	3
	.word	9405
	.byte	22
	.byte	'Rte_QCmnType',0,17,184,1,16,24,10
	.byte	'dynamic',0
	.word	9590
	.byte	4,2,35,0,10
	.byte	'copy',0
	.word	148
	.byte	1,2,35,4,10
	.byte	'queue_size',0
	.word	478
	.byte	2,2,35,6,10
	.byte	'element_size',0
	.word	478
	.byte	2,2,35,8,10
	.byte	'buffer_start',0
	.word	5099
	.byte	4,2,35,12,10
	.byte	'buffer_end',0
	.word	5099
	.byte	4,2,35,16,10
	.byte	'notification_type',0
	.word	9492
	.byte	4,2,35,20,0,20
	.byte	'Rte_QCmnType',0,17,192,1,3
	.word	9595
	.byte	20
	.byte	'Rte_AlarmRefType',0,17,224,1,32
	.word	817
	.byte	20
	.byte	'Rte_AlarmIndexType',0,17,226,1,32
	.word	478
	.byte	12,128,8
	.word	148
	.byte	13,255,7,0,20
	.byte	'Impl_NVM_DstPtrType_1024',0,18,50,15
	.word	9833
	.byte	20
	.byte	'CanIf_u32_impl',0,18,69,16
	.word	817
	.byte	20
	.byte	'CanIf_u16_impl',0,18,71,16
	.word	478
	.byte	20
	.byte	'CanIf_u8_impl',0,18,73,15
	.word	148
	.byte	20
	.byte	'CanIf_ControllerModeType_Enum_impl',0,18,88,15
	.word	148
	.byte	20
	.byte	'CanIf_PduModeType_Enum_impl',0,18,90,15
	.word	148
	.byte	9,18,92,9,2,10
	.byte	'DeviceMode',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'ChannelMode',0
	.word	148
	.byte	1,2,35,1,0,20
	.byte	'CanIf_ControllerStateType_struct_impl',0,18,95,3
	.word	10024
	.byte	20
	.byte	'CanIf_NotifStatusType_Enum_impl',0,18,100,15
	.word	148
	.byte	20
	.byte	'CanSM_boolean_Impl',0,18,120,15
	.word	148
	.byte	20
	.byte	'CanSM_u8_Impl',0,18,123,15
	.word	148
	.byte	20
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,18,128,1,15
	.word	148
	.byte	20
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,18,132,1,15
	.word	148
	.byte	20
	.byte	'CanSM_u16_Impl',0,18,136,1,16
	.word	478
	.byte	20
	.byte	'CanSM_TimerStateType_Enum_impl',0,18,138,1,15
	.word	148
	.byte	9,18,140,1,9,4,10
	.byte	'cntTick_u16',0
	.word	478
	.byte	2,2,35,0,10
	.byte	'stTimer',0
	.word	148
	.byte	1,2,35,2,0,20
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,18,143,1,3
	.word	10365
	.byte	20
	.byte	'Com_impl_u16',0,18,154,1,16
	.word	478
	.byte	20
	.byte	'Com_impl_u8',0,18,157,1,15
	.word	148
	.byte	20
	.byte	'ComM_uint32_Impl',0,18,173,1,16
	.word	817
	.byte	20
	.byte	'ComM_uint16_Impl',0,18,175,1,16
	.word	478
	.byte	20
	.byte	'ComM_uint8_Impl',0,18,177,1,15
	.word	148
	.byte	20
	.byte	'ComM_bool_Impl',0,18,179,1,15
	.word	148
	.byte	9,18,181,1,9,24,10
	.byte	'ChannelState_e',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'LightTimeoutCtr_u32',0
	.word	817
	.byte	4,2,35,4,10
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	478
	.byte	2,2,35,8,10
	.byte	'ChannelMode_u8',0
	.word	148
	.byte	1,2,35,10,10
	.byte	'BusSmMode_u8',0
	.word	148
	.byte	1,2,35,11,10
	.byte	'UserRequestCtr_u8',0
	.word	148
	.byte	1,2,35,12,10
	.byte	'PassiveRequestState_u8',0
	.word	148
	.byte	1,2,35,13,10
	.byte	'PncRequestCtr_u8',0
	.word	148
	.byte	1,2,35,14,10
	.byte	'InhibitionReqStatus_u8',0
	.word	148
	.byte	1,2,35,15,10
	.byte	'NmNetworkRequestStatus_b',0
	.word	148
	.byte	1,2,35,16,10
	.byte	'DiagnosticRequestState_b',0
	.word	148
	.byte	1,2,35,17,10
	.byte	'CommunicationAllowed_b',0
	.word	148
	.byte	1,2,35,18,10
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,19,10
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	148
	.byte	1,2,35,20,10
	.byte	'NmNetworkModeStatus_b',0
	.word	148
	.byte	1,2,35,21,0,20
	.byte	'ComM_ChannelStruct_Impl',0,18,197,1,3
	.word	10597
	.byte	9,18,206,1,9,10,10
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	478
	.byte	2,2,35,0,10
	.byte	'LimitToNoComCtr_u16',0
	.word	478
	.byte	2,2,35,2,10
	.byte	'RequestedUserMode_t',0
	.word	148
	.byte	1,2,35,4,10
	.byte	'IndicatedUserMode_t',0
	.word	148
	.byte	1,2,35,5,10
	.byte	'numChannelsInFullCom_u8',0
	.word	148
	.byte	1,2,35,6,10
	.byte	'numChannelsInSilentCom_u8',0
	.word	148
	.byte	1,2,35,7,10
	.byte	'numChannelsInNoCom_u8',0
	.word	148
	.byte	1,2,35,8,0,20
	.byte	'ComM_UserStruct_Impl',0,18,214,1,3
	.word	11101
	.byte	20
	.byte	'Dcm_IOOperationResponseType',0,18,252,1,15
	.word	148
	.byte	20
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	18,138,2,15
	.word	148
	.byte	20
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,18,146,2,15
	.word	148
	.byte	20
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,18,150,2,15
	.word	148
	.byte	20
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,18,154,2,15
	.word	148
	.byte	20
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,18,243,3,34
	.word	9844
	.byte	12,128,8
	.word	148
	.byte	13,255,7,0,20
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,18,246,3,34
	.word	9844
	.byte	14,19,186,1,10,4,15
	.byte	'NM_BUS_TYPE_CAN',0,0,0,20
	.byte	'Nm_BusType',0,19,189,1,3
	.word	11919
	.byte	20
	.byte	'Nm_TimerType',0,20,73,16
	.word	817
	.byte	20
	.byte	'Rte_TaskRefType',0,21,184,1,32
	.word	6331
	.byte	20
	.byte	'Rte_EventRefType',0,21,185,1,32
	.word	148
	.byte	20
	.byte	'Rte_EventType',0,21,186,1,32
	.word	817
	.byte	20
	.byte	'Rte_REActCounterType',0,21,252,1,15
	.word	148
	.byte	3
	.word	148
	.byte	20
	.byte	'Rte_REActCounterRefType',0,21,253,1,58
	.word	12089
	.byte	9,21,255,1,9,8,10
	.byte	'task',0
	.word	11985
	.byte	4,2,35,0,10
	.byte	'acnt',0
	.word	12094
	.byte	4,2,35,4,0,20
	.byte	'Rte_REContainerType',0,21,130,2,3
	.word	12127
	.byte	11
	.word	6071
	.byte	3
	.word	12191
	.byte	3
	.word	148
	.byte	11
	.word	12127
	.byte	3
	.word	12206
	.byte	20
	.byte	'Rte_REContainerRefType',0,21,132,2,60
	.word	12211
	.byte	20
	.byte	'Rte_MSICounterType',0,21,149,2,16
	.word	478
	.byte	3
	.word	478
	.byte	20
	.byte	'Rte_MSICounterRefType',0,21,150,2,56
	.word	12276
	.byte	20
	.byte	'Rte_MSIPendingFlagType',0,21,152,2,17
	.word	148
	.byte	3
	.word	148
	.byte	20
	.byte	'Rte_MSIPendingFlagRefType',0,21,153,2,60
	.word	12344
	.byte	9,21,163,2,9,24,10
	.byte	'counter',0
	.word	12281
	.byte	4,2,35,0,10
	.byte	'incCounter',0
	.word	148
	.byte	1,2,35,4,10
	.byte	'pending',0
	.word	12349
	.byte	4,2,35,8,10
	.byte	'osTask',0
	.word	11985
	.byte	4,2,35,12,10
	.byte	'acnt',0
	.word	12094
	.byte	4,2,35,16,10
	.byte	'osEvent',0
	.word	148
	.byte	1,2,35,20,10
	.byte	'MSIInit',0
	.word	478
	.byte	2,2,35,22,0,20
	.byte	'Rte_MSITableEntry',0,21,172,2,3
	.word	12384
	.byte	3
	.word	478
	.byte	3
	.word	148
	.byte	20
	.byte	'Rte_TaskArrayIndex',0,21,179,2,16
	.word	148
	.byte	20
	.byte	'Rte_NrWaitingTasks',0,21,180,2,16
	.word	148
	.byte	9,21,182,2,9,4,10
	.byte	'pending',0
	.word	148
	.byte	1,2,35,0,10
	.byte	'count',0
	.word	148
	.byte	1,2,35,1,10
	.byte	'firstWaitingTask',0
	.word	148
	.byte	1,2,35,2,0,20
	.byte	'Rte_WaitableDatum',0,21,186,2,3
	.word	12602
	.byte	3
	.word	12602
	.byte	9,21,226,2,9,12,10
	.byte	'event_id',0
	.word	817
	.byte	4,2,35,0,10
	.byte	'wd',0
	.word	12694
	.byte	4,2,35,4,10
	.byte	'timeout',0
	.word	817
	.byte	4,2,35,8,0,20
	.byte	'Rte_WOWP_NotificationType',0,21,230,2,3
	.word	12699
	.byte	11
	.word	12699
	.byte	3
	.word	12788
	.byte	20
	.byte	'Rte_WOWP_NotificationRefType',0,21,232,2,66
	.word	12793
	.byte	20
	.byte	'Rte_ARE_NotificationType',0,21,234,2,29
	.word	12127
	.byte	22
	.byte	'Rte_QTaskType',0,21,243,2,16,28,10
	.byte	'cmn',0
	.word	9595
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	11985
	.byte	4,2,35,24,0,20
	.byte	'Rte_QTaskType',0,21,246,2,3
	.word	12870
	.byte	22
	.byte	'Rte_QREType',0,21,250,2,16,28,10
	.byte	'cmn',0
	.word	9595
	.byte	24,2,35,0,10
	.byte	're',0
	.word	12216
	.byte	4,2,35,24,0,20
	.byte	'Rte_QREType',0,21,253,2,3
	.word	12941
	.byte	11
	.word	12127
	.byte	3
	.word	13006
	.byte	22
	.byte	'Rte_QWWPType',0,21,129,3,16,28,10
	.byte	'cmn',0
	.word	9595
	.byte	24,2,35,0,10
	.byte	'wwp',0
	.word	12798
	.byte	4,2,35,24,0,20
	.byte	'Rte_QWWPType',0,21,132,3,3
	.word	13016
	.byte	11
	.word	12699
	.byte	3
	.word	13084
	.byte	22
	.byte	'Rte_QEvType',0,21,136,3,16,36,10
	.byte	'cmn',0
	.word	9595
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	11985
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	148
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	12094
	.byte	4,2,35,32,0,20
	.byte	'Rte_QEvType',0,21,141,3,3
	.word	13094
	.byte	22
	.byte	'Rte_QMSIType',0,21,145,3,16,48,10
	.byte	'cmn',0
	.word	9595
	.byte	24,2,35,0,10
	.byte	'task',0
	.word	11985
	.byte	4,2,35,24,10
	.byte	'mask',0
	.word	148
	.byte	1,2,35,28,10
	.byte	'acnt',0
	.word	12094
	.byte	4,2,35,32,10
	.byte	'msiCounter',0
	.word	12281
	.byte	4,2,35,36,10
	.byte	'msiPending',0
	.word	12349
	.byte	4,2,35,40,10
	.byte	'msiLimit',0
	.word	478
	.byte	2,2,35,44,0,20
	.byte	'Rte_QMSIType',0,21,153,3,3
	.word	13189
	.byte	20
	.byte	'CanNm_NetworkStateType',0,6,204,1,3
	.word	2120
	.byte	20
	.byte	'CanNm_RamType',0,6,247,1,3
	.word	2276
	.byte	30
	.word	1245
	.byte	31,0,11
	.word	13399
	.byte	32
	.byte	'CanNm_ChannelConfigData_cs',0,6,134,2,70
	.word	13406
	.byte	1,1,30
	.word	2276
	.byte	31,0,32
	.byte	'CanNm_RamData_s',0,6,160,2,70
	.word	13449
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L15:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0
	.byte	9,19,1,58,15,59,15,57,15,11,15,0,0,10,13,0,3,8,73,19,11,15,56,9,0,0,11,38,0,73,19,0,0,12,1,1,11,15,73
	.byte	19,0,0,13,33,0,47,15,0,0,14,4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,46,1,49,19,0,0,17
	.byte	5,0,49,19,0,0,18,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,19,21,0,54,15,0,0,20,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,21,21,0,54,15,39,12,0,0,22,19,1,3,8,58,15,59,15,57,15,11,15,0,0,23,59,0,3
	.byte	8,0,0,24,21,1,54,15,39,12,0,0,25,5,0,73,19,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,4,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,28,21,0,73,19,54,15,39,12,0,0,29,53,0,73,19,0,0,30,1,1,73,19,0,0,31,33,0,0,0,32,52
	.byte	0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L16:
	.word	.L52-.L51
.L51:
	.half	3
	.word	.L54-.L53
.L53:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits8.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits16.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Rba_DiagLib\\src\\rba_DiagLib_Bits32.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Det\\api\\Det.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\CanNm_PreCompile_and_PB_Variant\\CanNm_Cfg.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_Prv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\NmStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\Nm_Cbk.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\Nm_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Nm\\api\\Nm.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Intl.h',0,0,0,0,0
.L54:
.L52:
	.sdecl	'.debug_info',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_info'
.L17:
	.word	339
	.half	3
	.word	.L18
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L20,.L19
	.byte	2
	.word	.L13
	.byte	3
	.byte	'CanNm_PassiveStartUp',0,1,35,34
	.word	.L22
	.byte	1,1,1
	.word	.L12,.L23,.L11
	.byte	4
	.byte	'nmChannelHandle',0,1,35,90
	.word	.L22,.L24
	.byte	5
	.word	.L12,.L23
	.byte	6
	.byte	'ConfigPtr_pcs',0,1,38,67
	.word	.L25,.L26
	.byte	6
	.byte	'RamPtr_ps',0,1,41,54
	.word	.L27,.L28
	.byte	6
	.byte	'RetVal_en',0,1,44,36
	.word	.L22,.L29
	.byte	6
	.byte	'CanNm_NetworkHandle',0,1,47,39
	.word	.L22,.L30
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_abbrev'
.L18:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_line'
.L19:
	.word	.L56-.L55
.L55:
	.half	3
	.word	.L58-.L57
.L57:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\CanNm\\src\\CanNm_PassiveStartup.c',0,0,0,0,0
.L58:
	.byte	5,34,7,0,5,2
	.word	.L12
	.byte	3,34,1,5,5,9
	.half	.L32-.L12
	.byte	3,22,1,7,9
	.half	.L59-.L32
	.byte	1,9
	.half	.L2-.L59
	.byte	3,4,1,5,12,9
	.half	.L4-.L2
	.byte	3,9,1,5,18,9
	.half	.L39-.L4
	.byte	3,3,1,5,8,9
	.half	.L60-.L39
	.byte	1,5,76,7,9
	.half	.L61-.L60
	.byte	1,5,25,7,9
	.half	.L6-.L61
	.byte	3,3,1,5,38,9
	.half	.L41-.L6
	.byte	3,3,1,5,63,9
	.half	.L38-.L41
	.byte	1,5,9,9
	.half	.L40-.L38
	.byte	3,3,1,5,24,9
	.half	.L62-.L40
	.byte	3,3,1,5,33,9
	.half	.L43-.L62
	.byte	3,4,1,5,26,9
	.half	.L45-.L43
	.byte	3,3,1,5,9,9
	.half	.L63-.L45
	.byte	1,5,13,7,9
	.half	.L64-.L63
	.byte	3,3,1,5,57,9
	.half	.L65-.L64
	.byte	3,5,1,5,77,9
	.half	.L66-.L65
	.byte	1,5,62,9
	.half	.L47-.L66
	.byte	3,123,1,5,35,9
	.half	.L8-.L47
	.byte	3,11,1,5,33,9
	.half	.L67-.L8
	.byte	1,5,57,9
	.half	.L68-.L67
	.byte	3,5,1,5,82,9
	.half	.L69-.L68
	.byte	1,5,40,9
	.half	.L49-.L69
	.byte	3,4,1,5,38,9
	.half	.L70-.L49
	.byte	1,5,19,9
	.half	.L9-.L70
	.byte	3,4,1,5,5,9
	.half	.L7-.L9
	.byte	3,4,1,5,1,9
	.half	.L3-.L7
	.byte	3,1,1,7,9
	.half	.L21-.L3
	.byte	0,1,1
.L56:
	.sdecl	'.debug_ranges',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_ranges'
.L20:
	.word	-1,.L12,0,.L21-.L12,0,0
	.sdecl	'.debug_loc',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_loc'
.L30:
	.word	0,0
.L11:
	.word	-1,.L12,0,.L23-.L12
	.half	2
	.byte	138,0
	.word	0,0
.L26:
	.word	-1,.L12,.L41-.L12,.L7-.L12
	.half	1
	.byte	108
	.word	0,0
.L28:
	.word	0,0
.L29:
	.word	-1,.L12,.L39-.L12,.L40-.L12
	.half	1
	.byte	82
	.word	.L7-.L12,.L3-.L12
	.half	1
	.byte	82
	.word	0,0
.L24:
	.word	-1,.L12,0,.L31-.L12
	.half	1
	.byte	84
	.word	.L32-.L12,.L23-.L12
	.half	1
	.byte	88
	.word	.L33-.L12,.L34-.L12
	.half	1
	.byte	85
	.word	.L2-.L12,.L35-.L12
	.half	1
	.byte	84
	.word	.L36-.L12,.L37-.L12
	.half	1
	.byte	85
	.word	.L4-.L12,.L38-.L12
	.half	1
	.byte	84
	.word	.L42-.L12,.L43-.L12
	.half	1
	.byte	84
	.word	.L44-.L12,.L45-.L12
	.half	1
	.byte	84
	.word	.L46-.L12,.L47-.L12
	.half	1
	.byte	84
	.word	.L48-.L12,.L49-.L12
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L71:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('CanNm_PassiveStartUp')
	.sect	'.debug_frame'
	.word	12
	.word	.L71,.L12,.L23-.L12

; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   125  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   126  #define CANNM_STOP_SEC_CODE
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   127  #include "CanNm_MemMap.h"
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   128  
; BSW\src\BSW\Gen\CanNm\src\CanNm_PassiveStartup.c	   129  

	; Module end
