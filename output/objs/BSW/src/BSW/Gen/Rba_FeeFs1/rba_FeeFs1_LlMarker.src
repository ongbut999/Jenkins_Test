	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16400a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\rba_FeeFs1_LlMarker.src BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c'

	
$TC16X
	
	.sdecl	'.text.rba_FeeFs1_LlMarker.Fee_LLWriteMarker',code,cluster('Fee_LLWriteMarker')
	.sect	'.text.rba_FeeFs1_LlMarker.Fee_LLWriteMarker'
	.align	2
	
	.global	Fee_LLWriteMarker

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     1  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     2  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     3  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     4  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     6   * \moduledescription
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     7   *           AUTOSAR FEE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     8   *           According to Document Version 3.0.0, Part of Release 4.0, Revision 2
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	     9   * \scope    INTERN
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    10   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    11   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    12  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    13  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    14  /*
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    15   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    16   * Includes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    17   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    18   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    19  #include "Fee.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    20  #include "rba_FeeFs1_Prv.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    21  #include "Fls.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    22  #if (!defined(FLS_AR_RELEASE_MAJOR_VERSION) || (FLS_AR_RELEASE_MAJOR_VERSION != FEE_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    23      #error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    24  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    25  #if (!defined(FLS_AR_RELEASE_MINOR_VERSION) || ((FLS_AR_RELEASE_MINOR_VERSION != 0) && (FLS_AR_RELEASE_MINOR_VERSION != 2)))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    26      #error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    27  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    28  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    29  #include "Crc.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    30  #if (!defined(CRC_AR_RELEASE_MAJOR_VERSION) || (CRC_AR_RELEASE_MAJOR_VERSION != FEE_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    31      #error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    32  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    33  #if (!defined(CRC_AR_RELEASE_MINOR_VERSION) || ((CRC_AR_RELEASE_MINOR_VERSION != 0) && (CRC_AR_RELEASE_MINOR_VERSION != 2)))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    34      #error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    35  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    36  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    37  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 == FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    38  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    39  #if (FEE_PRESENT == 1)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    40  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    41   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    42   * Fee_LLWriteMarker(): Write a marker in the sector marker section
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    43   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    44   * This function writes one of the sector markers in the respective
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    45   * sector header section. The marker pattern, marker ID,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    46   * sector change counter (if necessary) and the marker checksum are
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    47   * written.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    48   * If there is not enough space in the marker section and the USED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    49   * marker needs to be written, the calling function should erase
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    50   * this sector. Otherwise data might get lost.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    51   * If the there is enough space and the marker cannot be written
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    52   * due to any HW issue, the function will retry the write access
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    53   * automatically for FEE_MAX_RD_WR_COMP_RETRIES times.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    54   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    55   * \param    PhySectIdx_u8:         Index of the physical sector
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    56   * \param    MarkerID_u8:           Marker ID to write
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    57   * \return   Function result
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    58   * \retval   FEE_ORDER_PENDING_E:   Order is still pending
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    59   * \retval   FEE_ABORTED_E:         Order was aborted due to a wrong
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    60   *                                  FLS compare function call
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    61   * \retval   FEE_ERROR_E:           Marker not writable/readable or
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    62   *                                  marker section is full
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    63   * \retval   FEE_ORDER_FINISHED_E:  Order finished successfully
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    64   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    65   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    66   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    67   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    68  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    69  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    70  FUNC(Fee_stRetVal_ten, FEE_CODE) Fee_LLWriteMarker(VAR(uint8, AUTOMATIC) PhySectIdx_u8,
; Function Fee_LLWriteMarker
.L53:
Fee_LLWriteMarker:	.type	func
	sub.a	a10,#8
.L75:
	mov	d11,d4
.L77:
	mov	d8,d5
.L78:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    71                                                     VAR(uint8, AUTOMATIC) MarkerID_u8)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    72  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    73      VAR(Fee_MarkerProp_t, AUTOMATIC) xWrMarker_st;                      /* Marker structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    74      VAR(Fee_stRetVal_ten, AUTOMATIC) xRetVal_en = FEE_ORDER_PENDING_E;  /* Function return value */
	mov	d9,#0
.L79:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    75      VAR(uint32, AUTOMATIC) xSecChngCntTmp_u32 = 0;                      /* Temporary sector change counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    76      VAR(uint8, AUTOMATIC) xLogSectIdx_u8 = 0;                           /* Logical sector index */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    77      static uint32 xRdWr_Address_u32 = FEE_MAXUINT32;                    /* Read address for the blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    78  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    79      #if (FEE_PRV_DEBUG_MONITOR != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    80      VAR(uint16, FEE_VAR)             xCacheIdx_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    81      VAR(uint32, FEE_VAR)             stDBM_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    82      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    83  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    84      /* Get the logical sector index */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    85      xLogSectIdx_u8 = Fee_idxLLSectorOrder_au8[PhySectIdx_u8];
	movh.a	a15,#@his(Fee_idxLLSectorOrder_au8)
	lea	a15,[a15]@los(Fee_idxLLSectorOrder_au8)
.L107:
	addsc.a	a15,a15,d11,#0
	ld.bu	d10,[a15]
.L80:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    86  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    87  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    88      /* Switch over function state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    89      switch (Fee_RdWrOrder_st.Fee_LLWrMarker_en)
	movh.a	a15,#@his(Fee_RdWrOrder_st)
	lea	a15,[a15]@los(Fee_RdWrOrder_st)
.L108:
	lea	a12,[a15]88
	ld.w	d0,[a12]
.L109:
	mov	d15,#9
	jlt	d15,d0,.L2
	mov	d15,#0
	jlt	d0,d15,.L2
	sub	d15,d0,d15
	movh.a	a2,#@his(.1.jmp)
	lea	a2,[a2]@los(.1.jmp)
	addsc.a	a2,a2,d15,#2
	ld.a	a2,[a2]
	ji	a2
.L2:
	j	.L3
.L76:
	
	.sdecl	'.rodata.rba_FeeFs1_LlMarker..1.jmp',data,rom
	.sect	'.rodata.rba_FeeFs1_LlMarker..1.jmp'
	.align	4
.1.jmp:	.type	object
	.word	.L4
	.word	.L5
	.word	.L6
	.word	.L7
	.word	.L8
	.word	.L9
	.word	.L10
	.word	.L11
	.word	.L12
	.word	.L13
	
	.sect	'.text.rba_FeeFs1_LlMarker.Fee_LLWriteMarker'

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    90      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    91          /* Init state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    92          case FEE_LL_MARKER_INIT_E:
.L4:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    93          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    94              #if (FEE_PRV_DEBUG_MONITOR != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    95              /* For ERASE_REQUEST marker, check the cache if block is still in this sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    96              if (MarkerID_u8 == FEE_ERASE_REQUEST_ID_E)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    97              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    98                  /* Check if any cache entry points to the sector which should be erased */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	    99                  for (xCacheIdx_u16 = 0; xCacheIdx_u16 < FEE_NUM_BLOCKS; xCacheIdx_u16++)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   100                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   101                      if ((Fee_Cache_au32[xCacheIdx_u16] >= Fee_FlashProp_st[PhySectIdx_u8].Fee_PhysStartAddress_u32) &&
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   102                           (Fee_Cache_au32[xCacheIdx_u16] <= Fee_FlashProp_st[PhySectIdx_u8].Fee_PhysEndAddress_u32))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   103                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   104                          /* Set status for debug monitor */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   105                          stDBM_u32 = 0x1;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   106                          xRetVal_en = FEE_ERROR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   107                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   108                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   109              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   110              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   111  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   112              /* Set next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   113              Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_BLK_CHK_E;
	mov	d0,#1
.L110:
	st.w	[a12],d0
.L111:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   114  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   115              /* Reset buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   116              Fee_SrvMemSet8((uint8*)&Fee_MarkerBufBytePtr_cpu8[0], (uint8)FEE_ERASE_PATTERN, FEE_SEC_HEADER_SIZE);
	movh.a	a15,#@his(Fee_MarkerBufBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_MarkerBufBytePtr_cpu8)
	ld.a	a4,[a15]
.L112:
	mov	d4,#0
.L83:
	mov	d5,#96
.L81:
	call	Fee_SrvMemSet8
.L113:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   117  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   118              /* Set the start read address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   119              xRdWr_Address_u32 = Fee_FlashProp_st[PhySectIdx_u8].Fee_PhysStartAddress_u32;
	movh.a	a15,#@his(_999001_xRdWr_Address_u32)
	lea	a15,[a15]@los(_999001_xRdWr_Address_u32)
.L114:
	sha	d0,d11,#4
.L115:
	movh.a	a2,#@his(Fee_FlashProp_st)
	lea	a2,[a2]@los(Fee_FlashProp_st)
.L116:
	addsc.a	a2,a2,d0,#0
.L117:
	ld.w	d15,[a2]
.L118:
	st.w	[a15],d15

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   120          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   121          /* No break to save time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   122  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   123          /* Perform a blank check over one page */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   124          /* MR12 RULE 16.3 VIOLATION: Time critical position */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   125          case FEE_LL_MARKER_BLK_CHK_E:
.L5:
	movh.a	a15,#@his(_999001_xRdWr_Address_u32)
	lea	a15,[a15]@los(_999001_xRdWr_Address_u32)
.L74:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   126          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   127              /* Perform a blank check over the respective marker */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   128              if(Fls_Rb_BlankCheck(xRdWr_Address_u32, NULL_PTR, FEE_MARKER_SIZE) != E_NOT_OK)
	ld.w	d4,[a15]
	mov	d5,#8
	call	Fls_BlankCheck
.L119:
	jeq	d2,#1,.L14
.L120:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   129              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   130                  /* Set the next state for finishing the blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   131                  Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_BLK_CHK_WAIT_E;
	mov	d15,#2
.L121:
	st.w	[a12],d15
.L122:
	j	.L15
.L14:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   132              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   133              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   134              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   135                  /* Return an error due to invalid parameters or a busy / not intialized Fls */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   136                  xRetVal_en = FEE_ABORTED_E;
	mov	d9,#6
.L15:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   137              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   138          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   139          break;
	j	.L16

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   140  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   141          /* Wait for the blank check order to be finished */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   142          case FEE_LL_MARKER_BLK_CHK_WAIT_E:
.L6:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   143          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   144              /* The next state (FEE_LL_MARKER_BLK_CHK_FINISHED_E or FEE_LL_MARKER_BLK_CHK_ERROR_E)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   145               * will be set by the Fee_JobEndNotification() or Fee_JobErrorNotification() function
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   146               * automatically */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   147  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   148              /* Check whether the OS is currently running or not */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   149              if (Fee_stMain == FEE_POLLING_MODE_E)
	movh.a	a15,#@his(Fee_stMain)
	lea	a15,[a15]@los(Fee_stMain)
	ld.w	d15,[a15]
.L123:
	jne	d15,#0,.L17
.L124:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   150              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   151                  /* Call the Fls main function manually */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   152                  Fls_MainFunction();
	call	Fls_17_Pmu_MainFunction
.L17:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   153              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   154  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   155              #if (STD_ON == FEE_POLLING_MODE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   156              /* Use the FLS polling mechanism in order to reach the next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   157              Fee_CheckFlsJobResult();
	call	Fee_CheckFlsJobResult
.L125:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   158              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   159          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   160          break;
	j	.L18

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   161  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   162          /* Differences detected */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   163          case FEE_LL_MARKER_BLK_CHK_ERROR_E:
.L7:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   164          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   165              /* Check the next page / marker, increment the write address for the blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   166              xRdWr_Address_u32 += FEE_PAGE_LEN;
	movh.a	a15,#@his(_999001_xRdWr_Address_u32)
	lea	a15,[a15]@los(_999001_xRdWr_Address_u32)
	ld.w	d15,[a15]
.L126:
	add	d15,d15,#8
	st.w	[a15],d15
.L127:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   167  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   168              /* Ensure page alignment for blank check and write operation (following) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   169              while((xRdWr_Address_u32 % FEE_PAGE_LEN) != 0u)
	j	.L19
.L20:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   170              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   171                  /* Increment address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   172                  xRdWr_Address_u32++;
	ld.w	d15,[a15]
.L128:
	add	d15,#1
	st.w	[a15],d15
.L19:
	ld.w	d0,[a15]
	and	d15,d0,#7
.L129:
	jne	d15,#0,.L20
.L130:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   173              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   174  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   175              /* Check for an overflow (at least enough space for one more marker must be available) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   176              if(xRdWr_Address_u32 >
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   177                ((Fee_FlashProp_st[PhySectIdx_u8].Fee_PhysStartAddress_u32 + FEE_SEC_HEADER_SIZE) - FEE_MARKER_SIZE))
	sha	d11,#4
.L82:
	movh.a	a15,#@his(Fee_FlashProp_st)
	lea	a15,[a15]@los(Fee_FlashProp_st)
.L131:
	addsc.a	a15,a15,d11,#0
.L132:
	ld.w	d15,[a15]
.L133:
	add	d15,d15,#88
.L134:
	jge.u	d15,d0,.L21
.L135:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   178              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   179                  /* Return with an error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   180                  xRetVal_en = FEE_ERROR_E;
	mov	d9,#3
.L136:
	j	.L22
.L21:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   181              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   182              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   183              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   184                  /* Reset buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   185                  Fee_SrvMemSet8((uint8*)&Fee_MarkerBufBytePtr_cpu8[0], (uint8)FEE_ERASE_PATTERN, FEE_SEC_HEADER_SIZE);
	movh.a	a15,#@his(Fee_MarkerBufBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_MarkerBufBytePtr_cpu8)
	ld.a	a4,[a15]
.L137:
	mov	d4,#0
.L85:
	mov	d5,#96
.L84:
	call	Fee_SrvMemSet8
.L138:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   186  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   187                  /* Restart the state machine starting with a blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   188                  Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_BLK_CHK_E;
	mov	d15,#1
.L139:
	st.w	[a12],d15
.L22:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   189              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   190          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   191          break;
	j	.L23

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   192  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   193          /* Start write order of the marker */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   194          case FEE_LL_MARKER_BLK_CHK_FINISHED_E:
.L8:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   195          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   196              /* Prepare the marker to be written */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   197              xWrMarker_st.xPattern = FEE_MARKER_PATTERN;
	mov.u	d5,#51966
.L86:
	st.h	[a10],d5
.L140:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   198              xWrMarker_st.xIdent   = MarkerID_u8;
	st.b	[a10]2,d8
.L141:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   199  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   200              /* Verify whether enough space for another marker is left or not.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   201               * Hint: Header section size is generated depending on the page length
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   202               *       and the marker size: FEE_NUM_MARKER_IN_HEADER * FEE_PAGE_LEN */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   203              if(xRdWr_Address_u32 >
	movh.a	a13,#@his(_999001_xRdWr_Address_u32)
	lea	a13,[a13]@los(_999001_xRdWr_Address_u32)
	ld.w	d15,[a13]
.L142:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   204                ((Fee_FlashProp_st[PhySectIdx_u8].Fee_PhysStartAddress_u32 + FEE_SEC_HEADER_SIZE) - FEE_PAGE_LEN))
	sha	d11,#4
.L87:
	movh.a	a2,#@his(Fee_FlashProp_st)
	lea	a2,[a2]@los(Fee_FlashProp_st)
.L143:
	addsc.a	a2,a2,d11,#0
.L144:
	ld.w	d0,[a2]
.L145:
	add	d0,d0,#88
.L146:
	ge.u	d15,d0,d15
.L147:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   205              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   206                  /* Return with an error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   207                  xRetVal_en = FEE_ERROR_E;
	cmovn	d9,d15,#3
.L24:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   208              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   209  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   210              /* Check if the sector which will be used to store the marker has a valid
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   211               * sector change counter. If not, the highest available counter has to be
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   212               * searched and incremented within the other sectors.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   213               *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   214               * If the ERASED marker needs to be written, this search is also necessary,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   215               * because this is the first marker to be written inside this sectors
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   216               * --> no other sector change counter is available inside this sector yet
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   217               */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   218  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   219              /* Check for an available sector change counter inside the requested sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   220              if((Fee_LLSectorOrder_st[xLogSectIdx_u8].SecChngCnt_u32 != FEE_SEC_CHANGE_CNT_UNDEF) &&
	mul	d15,d10,#12
.L148:
	movh.a	a2,#@his(Fee_LLSectorOrder_st)
	lea	a2,[a2]@los(Fee_LLSectorOrder_st)
.L149:
	addsc.a	a2,a2,d15,#0
.L150:
	ld.w	d15,[a2]
.L89:
	jeq	d15,#-1,.L25
.L151:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   221                 (MarkerID_u8 != FEE_ERASED_MARKER_ID_E) )
	jeq	d8,#1,.L26
.L152:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   222              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   223                  /* Save the available counter value */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   224                  xSecChngCntTmp_u32 = Fee_LLSectorOrder_st[xLogSectIdx_u8].SecChngCnt_u32;
	j	.L27
.L26:
.L25:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   225              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   226              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   227              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   228                  /* Increment the counter because every sector has to use different sector
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   229                   * change counter values */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   230                  if (Fee_RdWrRetries_u8 == FEE_MAX_RD_WR_COMP_RETRIES)
	movh.a	a4,#@his(Fee_RdWrRetries_u8)
	lea	a4,[a4]@los(Fee_RdWrRetries_u8)
	ld.bu	d15,[a4]
.L90:
	jne	d15,#3,.L28
.L153:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   231                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   232                      /* Increment sector change counter (highest one is detected during the sector detection) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   233                      Fee_SecChngCnt_u32++;
	movh.a	a4,#@his(Fee_SecChngCnt_u32)
	lea	a4,[a4]@los(Fee_SecChngCnt_u32)
	ld.w	d15,[a4]
.L154:
	add	d15,#1
	st.w	[a4],d15
.L28:
	movh.a	a4,#@his(Fee_SecChngCnt_u32)
	lea	a4,[a4]@los(Fee_SecChngCnt_u32)
.L155:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   234                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   235                  xSecChngCntTmp_u32 = Fee_SecChngCnt_u32;
	ld.w	d15,[a4]
.L91:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   236                  /* Save the new sector change counter value */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   237                  Fee_LLSectorOrder_st[xLogSectIdx_u8].SecChngCnt_u32 = xSecChngCntTmp_u32;
	st.w	[a2],d15
.L27:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   238              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   239  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   240              if (MarkerID_u8 == FEE_START_MARKER_ID_E)
	jne	d8,#5,.L29
.L156:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   241              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   242                  xSecChngCntTmp_u32 = Fee_RdWrOrder_st.xStartAddrNextSector_u32;
	ld.w	d15,[a15]24
.L29:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   243              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   244  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   245              #if(FEE_ROBUST_PROG_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   246              if (MarkerID_u8 == FEE_CLONE_START_MARKER_ID_E)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   247              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   248                  xSecChngCntTmp_u32 = Fee_IfxRobustProgramming_s.xStartAddress;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   249              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   250              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   251  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   252              /* Save the counter value to the content structure of the marker content. For the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   253               * USED, FULL and ERASED marker it contains the sector change counter. The ERASE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   254               * marker content is not used and will therefore be zero.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   255               * Result of the shift operation: [2]CC, [1]BB, [0]AA: 0xAABBCC*/
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   256              xWrMarker_st.xContent[0] = (uint8)(xSecChngCntTmp_u32 >> 16u);
	sh	d0,d15,#-16
.L157:
	st.b	[a10]3,d0
.L158:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   257              xWrMarker_st.xContent[1] = (uint8)(xSecChngCntTmp_u32 >> 8u);
	sh	d0,d15,#-8
.L159:
	st.b	[a10]4,d0
.L160:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   258              xWrMarker_st.xContent[2] = (uint8)(xSecChngCntTmp_u32);
	st.b	[a10]5,d15
.L161:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   259  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   260              /* Calculate the new marker CRC and save it to the marker structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   261              /* MR12 RULE 11.3 VIOLATION: Variable must be changeable */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   262              xWrMarker_st.xChecksum  = Crc_CalculateCRC16((const uint8*)&xWrMarker_st,
	lea	a4,[a10]0
.L162:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   263                                                           (uint32)(FEE_MARKER_SIZE-FEE_MARKER_CS_SIZE),
	mov	d4,#6
.L88:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   264                                                           (uint16)FEE_MARKER_PATTERN,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   265                                                            FALSE);
	mov	d6,#0
	call	Crc_CalculateCRC16
.L163:
	st.h	[a10]6,d2
.L164:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   266  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   267              /* Prepare marker buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   268              Fee_LLPrepMarkerBufWithMarkerData(&xWrMarker_st, &Fee_MarkerBufBytePtr_cpu8[0]);
	movh.a	a15,#@his(Fee_MarkerBufBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_MarkerBufBytePtr_cpu8)
.L165:
	lea	a4,[a10]0
.L166:
	ld.a	a5,[a15]
	call	Fee_LLPrepMarkerBufWithMarkerData
.L167:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   269  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   270              /* Write the new marker into the flash */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   271              if(Fls_Write(xRdWr_Address_u32, (uint8*)&Fee_MarkerBufBytePtr_cpu8[0], FEE_MARKER_SIZE) != E_NOT_OK)
	ld.w	d4,[a13]
	ld.a	a4,[a15]
	mov	d5,#8
	call	Fls_17_Pmu_Write
.L168:
	jeq	d2,#1,.L30
.L169:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   272              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   273                  /* Set the next state to wait for the write order to be finished */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   274                  Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_WRITE_WAIT_E;
	mov	d15,#5
.L92:
	st.w	[a12],d15
.L170:
	j	.L31
.L30:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   275              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   276              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   277              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   278                  /* Abort due to wrong parameters or the Fls being busy / not initialized */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   279                  xRetVal_en = FEE_ABORTED_E;
	mov	d9,#6
.L31:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   280              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   281          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   282          break;
	j	.L32

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   283  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   284          /* Wait for the write order to be finished */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   285          case FEE_LL_MARKER_WRITE_WAIT_E:
.L9:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   286          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   287              /* The next state (FEE_LL_MARKER_WRITE_FINISHED_E) will be set by the Fee_JobEndNotification() or
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   288               * Fee_JobErrorNotification() function automatically (the verification of the data will be done
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   289               * in one step after the data was written) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   290  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   291              /* Check whether the OS is currently running or not */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   292              if (Fee_stMain == FEE_POLLING_MODE_E)
	movh.a	a15,#@his(Fee_stMain)
	lea	a15,[a15]@los(Fee_stMain)
	ld.w	d15,[a15]
.L171:
	jne	d15,#0,.L33
.L172:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   293              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   294                  /* Call the Fls main function manually */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   295                  Fls_MainFunction();
	call	Fls_17_Pmu_MainFunction
.L33:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   296              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   297  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   298              #if (STD_ON == FEE_POLLING_MODE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   299              /* Use the FLS polling mechanism in order to reach the next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   300              Fee_CheckFlsJobResult();
	call	Fee_CheckFlsJobResult
.L173:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   301              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   302          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   303          break;
	j	.L34

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   304  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   305          /* Read or write error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   306          case FEE_LL_MARKER_WRITE_ERROR_E:
.L10:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   307          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   308              /* Verify retry possibility */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   309              if(Fee_RdWrRetries_u8 > 0)
	movh.a	a15,#@his(Fee_RdWrRetries_u8)
	lea	a15,[a15]@los(Fee_RdWrRetries_u8)
	ld.bu	d15,[a15]
.L174:
	jeq	d15,#0,.L35
.L175:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   310              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   311                  /* Decrement retry possibilities */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   312                  Fee_RdWrRetries_u8--;
	add	d15,#-1
	st.b	[a15],d15
.L176:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   313  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   314                  /* Increment the write address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   315                  xRdWr_Address_u32 += FEE_PAGE_LEN;
	movh.a	a15,#@his(_999001_xRdWr_Address_u32)
	lea	a15,[a15]@los(_999001_xRdWr_Address_u32)
	ld.w	d15,[a15]
.L177:
	add	d15,d15,#8
	st.w	[a15],d15
.L178:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   316  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   317                  /* Ensure page alignment */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   318                  while((xRdWr_Address_u32 % FEE_PAGE_LEN) != 0u)
	j	.L36
.L37:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   319                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   320                      /* Increment address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   321                      xRdWr_Address_u32++;
	ld.w	d15,[a15]
.L179:
	add	d15,#1
	st.w	[a15],d15
.L36:
	ld.w	d15,[a15]
	and	d15,#7
.L180:
	jne	d15,#0,.L37
.L181:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   322                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   323  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   324                  /* Reset buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   325                  Fee_SrvMemSet8((uint8*)&Fee_MarkerBufBytePtr_cpu8[0], (uint8)FEE_ERASE_PATTERN, FEE_SEC_HEADER_SIZE);
	movh.a	a15,#@his(Fee_MarkerBufBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_MarkerBufBytePtr_cpu8)
	ld.a	a4,[a15]
.L182:
	mov	d4,#0
.L94:
	mov	d5,#96
.L93:
	call	Fee_SrvMemSet8
.L183:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   326  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   327                  /* Restart the state machine starting with a blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   328                  Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_BLK_CHK_E;
	mov	d15,#1
.L184:
	st.w	[a12],d15
.L185:
	j	.L38
.L35:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   329              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   330              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   331              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   332                  /* Return error, because maximum amount of retries is reached */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   333                  xRetVal_en = FEE_ERROR_E;
	mov	d9,#3
.L38:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   334              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   335          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   336          break;
	j	.L39

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   337  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   338          /* Verify the written marker  */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   339          case FEE_LL_MARKER_VERIFY_E:
.L11:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   340          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   341              if(Fls_Compare(xRdWr_Address_u32, (uint8*)&Fee_MarkerBufBytePtr_cpu8[0], FEE_MARKER_SIZE) != E_NOT_OK)
	movh.a	a15,#@his(Fee_MarkerBufBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_MarkerBufBytePtr_cpu8)
	movh.a	a2,#@his(_999001_xRdWr_Address_u32)
	lea	a2,[a2]@los(_999001_xRdWr_Address_u32)
	ld.w	d4,[a2]
.L96:
	ld.a	a4,[a15]
	mov	d5,#8
.L95:
	call	Fls_17_Pmu_Compare
.L186:
	jeq	d2,#1,.L40
.L187:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   342              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   343                  /* Set the next state to wait for the write order to be finished */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   344                  Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_VERIFY_WAIT_E;
	mov	d15,#8
.L188:
	st.w	[a12],d15
.L189:
	j	.L41
.L40:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   345              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   346              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   347              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   348                  /* Abort due to wrong parameters or the Fls being busy / not initialized */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   349                  xRetVal_en = FEE_ABORTED_E;
	mov	d9,#6
.L41:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   350              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   351          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   352          break;
	j	.L42

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   353  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   354          /* Verify the written marker  */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   355          case FEE_LL_MARKER_VERIFY_WAIT_E:
.L12:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   356          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   357              /* The next state (FEE_LL_MARKER_WRITE_FINISHED_E) will be set by the Fee_JobEndNotification() or
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   358               * Fee_JobErrorNotification() function automatically (the verification of the data will be done
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   359               * in one step after the data was written) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   360  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   361              /* Check whether the OS is currently running or not */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   362              if (Fee_stMain == FEE_POLLING_MODE_E)
	movh.a	a15,#@his(Fee_stMain)
	lea	a15,[a15]@los(Fee_stMain)
	ld.w	d15,[a15]
.L190:
	jne	d15,#0,.L43
.L191:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   363              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   364                  /* Call the Fls main function manually */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   365                  Fls_MainFunction();
	call	Fls_17_Pmu_MainFunction
.L43:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   366              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   367  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   368              #if (STD_ON == FEE_POLLING_MODE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   369              /* Use the FLS polling mechanism in order to reach the next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   370              Fee_CheckFlsJobResult();
	call	Fee_CheckFlsJobResult
.L192:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   371              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   372          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   373          break;
	j	.L44

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   374  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   375          /* Marker was written with success */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   376          case FEE_LL_MARKER_VERIFY_FINISHED_E:
.L13:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   377          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   378              /* Return with success */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   379              xRetVal_en = FEE_ORDER_FINISHED_E;
	mov	d9,#1
.L193:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   380          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   381          break;
	j	.L45

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   382  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   383          /* Default state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   384          default:
.L3:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   385          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   386              /* Return aborted */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   387              xRetVal_en = FEE_ABORTED_E;
	mov	d9,#6
.L194:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   388          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   389          break;
	j	.L46

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   390      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   391  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   392  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   393      /* Verify a necessary reset of the state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   394      if(xRetVal_en != FEE_ORDER_PENDING_E)
.L46:
.L45:
.L44:
.L42:
.L39:
.L34:
.L32:
.L23:
.L18:
.L16:
	jeq	d9,#0,.L47
.L195:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   395      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   396          #if (FEE_PRV_DEBUG_MONITOR != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   397          /* Report Debug monitor */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   398          if (stDBM_u32 > 0)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   399          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   400              Fee_DBM_RepError(PhySectIdx_u8, FEE_DBM_ERROR_LLMARKER_FCT_E, stDBM_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   401              stDBM_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   402          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   403          #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   404  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   405          /* Update the new sector state (if necessary the sector change counter has been updated already before) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   406          if ((MarkerID_u8 != FEE_START_MARKER_ID_E) && (MarkerID_u8 != FEE_CLONE_START_MARKER_ID_E))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   407          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   408              /* if a START-Marker was written, the sector is still in the STATE USED. It is not allowed to write the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   409               * START-Marker-ID on the sector state, because the sector didn't get a new STATE by writing START-Marker */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   410              /* MR12 RULE 10.5 VIOLATION: Sector states are defined as enum for modular design and easy to read. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   411              Fee_LLSectorOrder_st[xLogSectIdx_u8].SecState_en = (Fee_SectorState_ten)MarkerID_u8;
	mul	d15,d10,#12
.L196:
	movh.a	a15,#@his(Fee_LLSectorOrder_st)
	lea	a15,[a15]@los(Fee_LLSectorOrder_st)
.L197:
	addsc.a	a15,a15,d15,#0
.L198:
	add.a	a15,#4
.L199:
	jeq	d8,#5,.L48
.L200:
	jeq	d8,#6,.L49
.L201:
	st.w	[a15],d8
.L202:
	j	.L50
.L49:
.L48:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   412          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   413          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   414          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   415              /* Start- and Clonse-Marker is nearly the same as the USED-Marker */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   416              Fee_LLSectorOrder_st[xLogSectIdx_u8].SecState_en = FEE_SECTOR_USED_E;
	mov	d15,#2
.L203:
	st.w	[a15],d15
.L50:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   417          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   418  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   419          /* Init state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   420          Fee_RdWrOrder_st.Fee_LLWrMarker_en = FEE_LL_MARKER_INIT_E;
	mov	d15,#0
.L204:
	st.w	[a12],d15
.L205:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   421  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   422          /* Retries for write */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   423          Fee_RdWrRetries_u8 = FEE_MAX_RD_WR_COMP_RETRIES;
	movh.a	a15,#@his(Fee_RdWrRetries_u8)
	lea	a15,[a15]@los(Fee_RdWrRetries_u8)
.L206:
	mov	d15,#3
.L207:
	st.b	[a15],d15
.L208:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   424  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   425          /* Reset start address for the blank check */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   426          xRdWr_Address_u32 = FEE_MAXUINT32;
	movh.a	a15,#@his(_999001_xRdWr_Address_u32)
	lea	a15,[a15]@los(_999001_xRdWr_Address_u32)
.L209:
	mov	d15,#-1
.L210:
	st.w	[a15],d15
.L47:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   427      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   428  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   429      return (xRetVal_en);
	mov	d2,d9
.L97:
	j	.L51

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   430  }
.L51:
	ret
.L64:
	
__Fee_LLWriteMarker_function_end:
	.size	Fee_LLWriteMarker,__Fee_LLWriteMarker_function_end-Fee_LLWriteMarker
.L62:
	; End of function
	
	.sdecl	'.data.rba_FeeFs1_LlMarker._999001_xRdWr_Address_u32',data,cluster('_999001_xRdWr_Address_u32')
	.sect	'.data.rba_FeeFs1_LlMarker._999001_xRdWr_Address_u32'
	.align	4
_999001_xRdWr_Address_u32:	.type	object
	.size	_999001_xRdWr_Address_u32,4
	.word	-1
	.calls	'Fee_LLWriteMarker','Fee_SrvMemSet8'
	.calls	'Fee_LLWriteMarker','Fls_BlankCheck'
	.calls	'Fee_LLWriteMarker','Fls_17_Pmu_MainFunction'
	.calls	'Fee_LLWriteMarker','Fee_CheckFlsJobResult'
	.calls	'Fee_LLWriteMarker','Crc_CalculateCRC16'
	.calls	'Fee_LLWriteMarker','Fee_LLPrepMarkerBufWithMarkerData'
	.calls	'Fee_LLWriteMarker','Fls_17_Pmu_Write'
	.calls	'Fee_LLWriteMarker','Fls_17_Pmu_Compare'
	.extern	Fls_17_Pmu_Write
	.extern	Fls_17_Pmu_Compare
	.extern	Fls_17_Pmu_MainFunction
	.extern	Fee_stMain
	.extern	Fee_SecChngCnt_u32
	.extern	Fee_FlashProp_st
	.extern	Fee_RdWrOrder_st
	.extern	Fee_LLSectorOrder_st
	.extern	Fee_MarkerBufBytePtr_cpu8
	.extern	Fee_idxLLSectorOrder_au8
	.extern	Fee_RdWrRetries_u8
	.extern	Fee_LLPrepMarkerBufWithMarkerData
	.extern	Fee_SrvMemSet8
	.extern	Fee_CheckFlsJobResult
	.extern	Crc_CalculateCRC16
	.extern	Fls_BlankCheck
	.calls	'Fee_LLWriteMarker','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L55:
	.word	16571
	.half	3
	.word	.L56
	.byte	4
.L54:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L57
.L71:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Fee_SrvRoundUp',0,3,1,140,11,21
	.word	152
	.byte	1,1,4
	.byte	'value_u32',0,1,140,11,43
	.word	152
	.byte	4
	.byte	'stepsize_u32',0,1,140,11,62
	.word	152
	.byte	5,0
.L65:
	.byte	2
	.byte	'unsigned char',0,1,8,6
	.word	238
	.byte	7
	.word	255
	.byte	8
	.byte	'Fls_17_Pmu_Write',0,2,184,6,23
	.word	238
	.byte	1,1,1,1,4
	.byte	'TargetAddress',0,2,184,6,57
	.word	152
	.byte	4
	.byte	'SourceAddressPtr',0,2,185,6,47
	.word	260
	.byte	4
	.byte	'Length',0,2,186,6,49
	.word	152
	.byte	0,8
	.byte	'Fls_17_Pmu_Compare',0,2,216,6,23
	.word	238
	.byte	1,1,1,1,4
	.byte	'SourceAddress',0,2,216,6,59
	.word	152
	.byte	4
	.byte	'TargetAddressPtr',0,2,217,6,42
	.word	260
	.byte	4
	.byte	'Length',0,2,218,6,44
	.word	152
	.byte	0,9
	.byte	'Fls_17_Pmu_MainFunction',0,2,134,8,13,1,1,1,1
.L63:
	.byte	10,1,137,2,9,4,11
	.byte	'FEE_ORDER_PENDING_E',0,0,11
	.byte	'FEE_ORDER_FINISHED_E',0,1,11
	.byte	'FEE_BLOCK_INVALIDATED_E',0,2,11
	.byte	'FEE_ERROR_E',0,3,11
	.byte	'FEE_SECTORCHANGE_E',0,4,11
	.byte	'FEE_SECTORFULL_E',0,5,11
	.byte	'FEE_ABORTED_E',0,6,11
	.byte	'FEE_ERASE_SECTOR_E',0,7,11
	.byte	'FEE_SEARCH_ABORTED_E',0,8,11
	.byte	'FEE_NUM_RET_VAL_E',0,9,0,2
	.byte	'unsigned short int',0,2,7,12,3
	.word	238
	.byte	13,2,0
.L68:
	.byte	14,1,225,1,9,8,15
	.byte	'xPattern',0
	.word	704
	.byte	2,2,35,0,15
	.byte	'xIdent',0
	.word	238
	.byte	1,2,35,2,15
	.byte	'xContent',0
	.word	726
	.byte	3,2,35,3,15
	.byte	'xChecksum',0
	.word	704
	.byte	2,2,35,6,0,6
	.word	735
	.byte	7
	.word	813
	.byte	7
	.word	238
	.byte	16
	.byte	'Fee_LLPrepMarkerBufWithMarkerData',0,1,217,8,41,1,1,1,1,4
	.byte	'Marker_pcst',0,1,217,8,127
	.word	818
	.byte	4
	.byte	'MarkerBuf_pu8',0,1,218,8,114
	.word	823
	.byte	0,16
	.byte	'Fee_SrvMemSet8',0,1,191,9,30,1,1,1,1,4
	.byte	'xDest_pu8',0,1,191,9,84
	.word	823
	.byte	4
	.byte	'xPattern_u32',0,1,192,9,66
	.word	152
	.byte	4
	.byte	'numBytes_u32',0,1,193,9,66
	.word	152
	.byte	0,9
	.byte	'Fee_CheckFlsJobResult',0,1,219,9,31,1,1,1,1,17
	.word	168
	.byte	18
	.word	195
	.byte	18
	.word	214
	.byte	5,0,8
	.byte	'Crc_CalculateCRC16',0,3,80,15
	.word	704
	.byte	1,1,1,1,4
	.byte	'Crc_DataPtr',0,3,80,47
	.word	260
	.byte	4
	.byte	'Crc_Length',0,3,80,67
	.word	152
	.byte	4
	.byte	'Crc_StartValue16',0,3,80,86
	.word	704
	.byte	4
	.byte	'Crc_IsFirstCall',0,3,81,42
	.word	238
	.byte	0,2
	.byte	'int',0,4,5,19
	.byte	'Fls_BlankCheck',0,4,128,1,16
	.word	1172
	.byte	1,1,1,20,1,7
	.word	1206
	.byte	21
	.byte	'__codeptr',0,4,1,1
	.word	1208
	.byte	2
	.byte	'char',0,1,6,21
	.byte	'sint8',0,5,76,25
	.word	1231
	.byte	21
	.byte	'uint8',0,5,81,25
	.word	238
	.byte	21
	.byte	'uint16',0,5,91,25
	.word	704
	.byte	21
	.byte	'uint32',0,5,106,24
	.word	152
	.byte	2
	.byte	'unsigned long long int',0,8,7,21
	.byte	'uint64',0,5,111,30
	.word	1297
	.byte	21
	.byte	'boolean',0,5,127,25
	.word	238
	.byte	21
	.byte	'StatusType',0,6,191,1,27
	.word	238
	.byte	21
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	238
	.byte	14,6,206,1,9,8,15
	.byte	'vendorID',0
	.word	704
	.byte	2,2,35,0,15
	.byte	'moduleID',0
	.word	704
	.byte	2,2,35,2,15
	.byte	'sw_major_version',0
	.word	238
	.byte	1,2,35,4,15
	.byte	'sw_minor_version',0
	.word	238
	.byte	1,2,35,5,15
	.byte	'sw_patch_version',0
	.word	238
	.byte	1,2,35,6,0,21
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	1398
	.byte	14,7,93,9,8,15
	.byte	'Class',0
	.word	238
	.byte	1,2,35,0,15
	.byte	'TIN',0
	.word	238
	.byte	1,2,35,1,15
	.byte	'ReturnAddress',0
	.word	152
	.byte	4,2,35,4,0,21
	.byte	'OsTrapInfoType',0,7,97,3
	.word	1548
	.byte	12,68
	.word	152
	.byte	13,16,0,14,7,154,1,9,68,15
	.byte	'store',0
	.word	1628
	.byte	68,2,35,0,0,12,68
	.word	1637
	.byte	13,0,0,21
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	1659
	.byte	21
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	152
	.byte	14,7,175,1,9,8,15
	.byte	'sp',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'ctx',0
	.word	152
	.byte	4,2,35,4,0,21
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	1719
	.byte	21
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	1719
	.byte	22,1,1,7
	.word	1804
	.byte	21
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	1807
	.byte	21
	.byte	'ApplicationType',0,7,193,1,23
	.word	238
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,15
	.byte	'app_id',0
	.word	238
	.byte	1,2,35,0,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,1,0,21
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	1870
	.byte	21
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	152
	.byte	21
	.byte	'AreaIdType',0,7,204,1,16
	.word	704
	.byte	21
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	152
	.byte	21
	.byte	'TickType',0,7,221,1,22
	.word	152
	.byte	21
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	152
	.byte	7
	.word	152
	.byte	21
	.byte	'Os_Lockable',0,7,234,1,18
	.word	2112
	.byte	21
	.byte	'CoreIdType',0,7,236,1,16
	.word	704
	.byte	21
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	704
	.byte	10,7,239,1,9,4,11
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,11
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,21
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	2182
	.byte	10,7,174,2,9,4,11
	.byte	'APPLICATION_ACCESSIBLE',0,0,11
	.byte	'APPLICATION_RESTARTING',0,1,11
	.byte	'APPLICATION_TERMINATED',0,2,0,21
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	2275
	.byte	24
	.byte	'void',0,7
	.word	2387
	.byte	25,1,1,26
	.word	238
	.byte	26
	.word	2393
	.byte	0,7
	.word	2398
	.byte	21
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	2412
	.byte	23
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,15
	.byte	'elapsed',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'previous',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'max',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'cumulative',0
	.word	152
	.byte	4,2,35,12,15
	.byte	'stackbase',0
	.word	1719
	.byte	8,2,35,16,15
	.byte	'stackusage',0
	.word	1719
	.byte	8,2,35,24,15
	.byte	'stackmax',0
	.word	1719
	.byte	8,2,35,32,15
	.byte	'stackbudget',0
	.word	1719
	.byte	8,2,35,40,0,21
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	2447
	.byte	7
	.word	2447
	.byte	21
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	2645
	.byte	21
	.byte	'EventMaskType',0,7,206,2,15
	.word	238
	.byte	21
	.byte	'Os_imaskType',0,7,211,2,16
	.word	152
	.byte	23
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,15
	.byte	'meter',0
	.word	2447
	.byte	48,2,35,0,0,21
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	2724
	.byte	7
	.word	2724
	.byte	6
	.word	2785
	.byte	23
	.byte	'Os_ISRType_s',0,7,216,2,16,24,15
	.byte	'entry_function',0
	.word	1812
	.byte	4,2,35,0,15
	.byte	'dynamic',0
	.word	2790
	.byte	4,2,35,4,15
	.byte	'imask',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'stackbudget',0
	.word	1719
	.byte	8,2,35,12,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,20,15
	.byte	'application',0
	.word	238
	.byte	1,2,35,21,0,21
	.byte	'Os_ISRType',0,7,223,2,3
	.word	2795
	.byte	7
	.word	1804
	.byte	6
	.word	2795
	.byte	7
	.word	2954
	.byte	21
	.byte	'ISRType',0,7,224,2,46
	.word	2959
	.byte	21
	.byte	'Os_bitmask',0,7,239,2,22
	.word	152
	.byte	21
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	152
	.byte	21
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	152
	.byte	21
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	152
	.byte	27,7,243,2,9,4,15
	.byte	'p0',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'p1',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'p2',0
	.word	152
	.byte	4,2,35,0,0,21
	.byte	'Os_psetType',0,7,247,2,3
	.word	3067
	.byte	27,7,249,2,9,4,15
	.byte	't0',0
	.word	152
	.byte	4,2,35,0,15
	.byte	't1',0
	.word	152
	.byte	4,2,35,0,15
	.byte	't2',0
	.word	152
	.byte	4,2,35,0,0,21
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	3131
	.byte	21
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	238
	.byte	23
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,15
	.byte	'terminate_jump_buf',0
	.word	1668
	.byte	68,2,35,0,15
	.byte	'meter',0
	.word	2447
	.byte	48,2,35,68,15
	.byte	'activation_count',0
	.word	238
	.byte	1,2,35,116,0,21
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	3229
	.byte	12,68
	.word	1637
	.byte	13,0,0,7
	.word	3229
	.byte	6
	.word	3355
	.byte	23
	.byte	'Os_TaskType_s',0,7,134,3,16,40,15
	.byte	'dynamic',0
	.word	3360
	.byte	4,2,35,0,15
	.byte	'entry_function',0
	.word	1812
	.byte	4,2,35,4,15
	.byte	'pset',0
	.word	3067
	.byte	4,2,35,8,15
	.byte	'base_tpmask',0
	.word	3131
	.byte	4,2,35,12,15
	.byte	'tpmask',0
	.word	3131
	.byte	4,2,35,16,15
	.byte	'core_id',0
	.word	704
	.byte	2,2,35,20,15
	.byte	'index',0
	.word	152
	.byte	4,2,35,24,15
	.byte	'stackbudget',0
	.word	1719
	.byte	8,2,35,28,15
	.byte	'activation_count',0
	.word	238
	.byte	1,2,35,36,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,37,15
	.byte	'application',0
	.word	238
	.byte	1,2,35,38,0,21
	.byte	'Os_TaskType',0,7,146,3,3
	.word	3365
	.byte	6
	.word	3365
	.byte	7
	.word	3615
	.byte	21
	.byte	'TaskType',0,7,147,3,47
	.word	3620
	.byte	28
	.byte	'Os_TaskStateType',0,7,155,3,6,4,11
	.byte	'SUSPENDED',0,0,11
	.byte	'READY',0,1,11
	.byte	'WAITING',0,2,11
	.byte	'RUNNING',0,3,0,21
	.byte	'TaskStateType',0,7,156,3,31
	.word	3643
	.byte	27,7,167,3,3,4,15
	.byte	'tpmask',0
	.word	3131
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,15
	.byte	'saved_priority',0
	.word	3730
	.byte	4,2,35,0,0,21
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	3753
	.byte	7
	.word	3753
	.byte	6
	.word	3833
	.byte	23
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,15
	.byte	'dynamic',0
	.word	3838
	.byte	4,2,35,0,15
	.byte	'tpmask',0
	.word	3131
	.byte	4,2,35,4,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,8,0,21
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	3843
	.byte	14,7,181,3,9,12,15
	.byte	'maxallowedvalue',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'ticksperbase',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'mincycle',0
	.word	152
	.byte	4,2,35,8,0,21
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	3942
	.byte	14,7,206,3,9,8,15
	.byte	'Running',0
	.word	238
	.byte	1,2,35,0,15
	.byte	'Pending',0
	.word	238
	.byte	1,2,35,1,15
	.byte	'Delay',0
	.word	152
	.byte	4,2,35,4,0,21
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	4037
	.byte	29
	.word	238
	.byte	1,1,7
	.word	4123
	.byte	21
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	4130
	.byte	23
	.byte	's_swd',0,7,222,3,12,4,15
	.byte	'count',0
	.word	152
	.byte	4,2,35,0,0,27,7,221,3,3,4,15
	.byte	'sw',0
	.word	4166
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,15
	.byte	'type_dependent',0
	.word	4194
	.byte	4,2,35,0,0,21
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	4213
	.byte	7
	.word	4213
	.byte	6
	.word	4291
	.byte	23
	.byte	'Os_CounterType_s',0,7,227,3,16,28,15
	.byte	'dynamic',0
	.word	4296
	.byte	4,2,35,0,15
	.byte	'advincr',0
	.word	4135
	.byte	4,2,35,4,15
	.byte	'base',0
	.word	3942
	.byte	12,2,35,8,15
	.byte	'core',0
	.word	2393
	.byte	4,2,35,20,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,24,15
	.byte	'application',0
	.word	238
	.byte	1,2,35,25,0,21
	.byte	'Os_CounterType',0,7,234,3,3
	.word	4301
	.byte	7
	.word	4123
	.byte	6
	.word	4301
	.byte	7
	.word	4453
	.byte	21
	.byte	'CounterType',0,7,235,3,52
	.word	4458
	.byte	28
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,11
	.byte	'SCHEDULETABLE_STOPPED',0,0,11
	.byte	'SCHEDULETABLE_NEXT',0,1,11
	.byte	'SCHEDULETABLE_WAITING',0,2,11
	.byte	'SCHEDULETABLE_RUNNING',0,3,11
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,21
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	4484
	.byte	6
	.word	.L98-.L55
	.byte	7
	.word	4684
	.byte	21
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	4689
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,15
	.byte	'match',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'next',0
	.word	4694
	.byte	4,2,35,4,15
	.byte	'state',0
	.word	4484
	.byte	4,2,35,8,15
	.byte	'config',0
	.word	704
	.byte	2,2,35,12,0,7
	.word	4721
	.byte	6
	.word	4814
.L98:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,15
	.byte	'dynamic',0
	.word	4819
	.byte	4,2,35,0,15
	.byte	'counter',0
	.word	4463
	.byte	4,2,35,4,15
	.byte	'repeat',0
	.word	238
	.byte	1,2,35,8,15
	.byte	'config',0
	.word	704
	.byte	2,2,35,10,15
	.byte	'initial',0
	.word	238
	.byte	1,2,35,12,15
	.byte	'access',0
	.word	238
	.byte	1,2,35,13,15
	.byte	'application',0
	.word	238
	.byte	1,2,35,14,0,21
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	4824
	.byte	6
	.word	4824
	.byte	7
	.word	5004
	.byte	6
	.word	4301
	.byte	7
	.word	5014
	.byte	30
	.word	2117
	.byte	30
	.word	3067
	.byte	30
	.word	2964
	.byte	30
	.word	3625
	.byte	30
	.word	3131
	.byte	30
	.word	238
	.byte	30
	.word	3625
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,15
	.byte	'TrapInfo',0
	.word	1548
	.byte	8,2,35,0,15
	.byte	'lock_taskaccess',0
	.word	5024
	.byte	4,2,35,8,15
	.byte	'ReadyTasks',0
	.word	5029
	.byte	4,2,35,12,15
	.byte	'RunningISR',0
	.word	5034
	.byte	4,2,35,16,15
	.byte	'RunningTask',0
	.word	5039
	.byte	4,2,35,20,15
	.byte	'RunningTPMask',0
	.word	5044
	.byte	4,2,35,24,15
	.byte	'CurrentMeteredObject',0
	.word	2650
	.byte	4,2,35,28,15
	.byte	'IdleMeter',0
	.word	2447
	.byte	48,2,35,32,15
	.byte	'AppAccess',0
	.word	238
	.byte	1,2,35,80,15
	.byte	'AppOverride',0
	.word	5049
	.byte	1,2,35,81,15
	.byte	'GetStackValueAdjust',0
	.word	1719
	.byte	8,2,35,84,15
	.byte	'InErrorHook',0
	.word	238
	.byte	1,2,35,92,15
	.byte	'ChainTaskRef',0
	.word	5054
	.byte	4,2,35,96,15
	.byte	'GetStackUsageAdjust',0
	.word	1719
	.byte	8,2,35,100,15
	.byte	'InProtectionHook',0
	.word	238
	.byte	1,2,35,108,15
	.byte	'CoreIsActive',0
	.word	238
	.byte	1,2,35,109,15
	.byte	'InShutdownHook',0
	.word	238
	.byte	1,2,35,110,0,21
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	5059
	.byte	7
	.word	152
	.byte	6
	.word	2795
	.byte	7
	.word	5515
	.byte	6
	.word	3365
	.byte	7
	.word	5525
	.byte	7
	.word	2447
	.byte	23
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,15
	.byte	'DisableAllImask',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'SuspendAllImask',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'SuspendOSImask',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'DisableAllCount',0
	.word	152
	.byte	4,2,35,12,15
	.byte	'SuspendAllCount',0
	.word	152
	.byte	4,2,35,16,15
	.byte	'SuspendOSCount',0
	.word	152
	.byte	4,2,35,20,15
	.byte	'RestartJumpBuf',0
	.word	1668
	.byte	68,2,35,24,15
	.byte	'Restartable',0
	.word	238
	.byte	1,2,35,92,0,21
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	5540
	.byte	21
	.byte	'unsigned_int',0,8,116,22
	.word	152
	.byte	10,9,31,9,4,11
	.byte	'MEMIF_JOB_OK',0,0,11
	.byte	'MEMIF_JOB_FAILED',0,1,11
	.byte	'MEMIF_JOB_PENDING',0,2,11
	.byte	'MEMIF_JOB_CANCELED',0,3,11
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,11
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,21
	.byte	'MemIf_JobResultType',0,9,39,2
	.word	5802
	.byte	10,9,41,9,4,11
	.byte	'MEMIF_MODE_SLOW',0,0,11
	.byte	'MEMIF_MODE_FAST',0,1,0,21
	.byte	'MemIf_ModeType',0,9,45,2
	.word	5960
	.byte	21
	.byte	'PduIdType',0,10,22,19
	.word	704
	.byte	21
	.byte	'PduLengthType',0,10,26,19
	.word	704
	.byte	10,11,113,9,4,11
	.byte	'TP_DATACONF',0,0,11
	.byte	'TP_DATARETRY',0,1,11
	.byte	'TP_CONFPENDING',0,2,0,21
	.byte	'TpDataStateType',0,11,118,3
	.word	6065
	.byte	21
	.byte	'Can_IdType',0,12,32,16
	.word	152
	.byte	21
	.byte	'Can_HwHandleType',0,12,43,16
	.word	704
	.byte	21
	.byte	'Can_TxObjPriorityClassType',0,13,219,3,16
	.word	152
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,13,231,3,16,8,15
	.byte	'MsgObjId',0
	.word	238
	.byte	1,2,35,0,15
	.byte	'HwControllerId',0
	.word	238
	.byte	1,2,35,1,15
	.byte	'TxObjPriorityClass',0
	.word	152
	.byte	4,2,35,4,0,21
	.byte	'Can_TxHwObjectConfigType',0,13,252,3,3
	.word	6221
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,13,129,4,16,12,15
	.byte	'MaskRef',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'MsgId',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'MsgObjId',0
	.word	238
	.byte	1,2,35,8,15
	.byte	'HwControllerId',0
	.word	238
	.byte	1,2,35,9,0,21
	.byte	'Can_RxHwObjectConfigType',0,13,147,4,3
	.word	6357
	.byte	12,4
	.word	238
	.byte	13,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,13,181,4,16,4,15
	.byte	'ControllerMOMap',0
	.word	6497
	.byte	4,2,35,0,0,21
	.byte	'Can_ControllerMOMapConfigType',0,13,184,4,3
	.word	6506
	.byte	23
	.byte	'Can_NPCRValueType',0,13,188,4,16,2,15
	.byte	'Can_NPCRValue',0
	.word	704
	.byte	2,2,35,0,0,21
	.byte	'Can_NPCRValueType',0,13,191,4,3
	.word	6607
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,194,4,16,8,15
	.byte	'CanControllerBaudrate',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'CanControllerBaudrateCfg',0
	.word	704
	.byte	2,2,35,4,0,21
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,198,4,3
	.word	6682
	.byte	6
	.word	6682
	.byte	7
	.word	6847
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,13,201,4,16,4,15
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6852
	.byte	4,2,35,0,0,21
	.byte	'Can_BaudrateConfigPtrType',0,13,204,4,3
	.word	6857
	.byte	23
	.byte	'Can_EventHandlingType',0,13,226,4,16,4,15
	.byte	'CanEventType',0
	.word	6497
	.byte	4,2,35,0,0,21
	.byte	'Can_EventHandlingType',0,13,229,4,3
	.word	6957
	.byte	21
	.byte	'Rte_TransformerErrorCode',0,14,130,1,15
	.word	238
	.byte	21
	.byte	'Rte_TransformerClass',0,14,131,1,15
	.word	238
	.byte	14,14,168,1,9,12,15
	.byte	'in',0
	.word	2393
	.byte	4,2,35,0,15
	.byte	'out',0
	.word	2393
	.byte	4,2,35,4,15
	.byte	'used',0
	.word	704
	.byte	2,2,35,8,15
	.byte	'lost_data',0
	.word	238
	.byte	1,2,35,10,0,21
	.byte	'Rte_QDynType',0,14,173,1,3
	.word	7103
	.byte	10,14,175,1,9,4,11
	.byte	'RTE_DRA',0,0,11
	.byte	'RTE_WOWP',0,1,11
	.byte	'RTE_TASK',0,2,11
	.byte	'RTE_ARE',0,3,11
	.byte	'RTE_EV',0,4,11
	.byte	'RTE_MSI',0,5,0,21
	.byte	'Rte_NotificationType',0,14,182,1,3
	.word	7190
	.byte	12,128,8
	.word	238
	.byte	13,255,7,0,21
	.byte	'Impl_NVM_DstPtrType_1024',0,15,50,15
	.word	7288
	.byte	21
	.byte	'CanIf_u32_impl',0,15,69,16
	.word	152
	.byte	21
	.byte	'CanIf_u16_impl',0,15,71,16
	.word	704
	.byte	21
	.byte	'CanIf_u8_impl',0,15,73,15
	.word	238
	.byte	21
	.byte	'CanIf_ControllerModeType_Enum_impl',0,15,88,15
	.word	238
	.byte	21
	.byte	'CanIf_PduModeType_Enum_impl',0,15,90,15
	.word	238
	.byte	14,15,92,9,2,15
	.byte	'DeviceMode',0
	.word	238
	.byte	1,2,35,0,15
	.byte	'ChannelMode',0
	.word	238
	.byte	1,2,35,1,0,21
	.byte	'CanIf_ControllerStateType_struct_impl',0,15,95,3
	.word	7479
	.byte	21
	.byte	'CanIf_NotifStatusType_Enum_impl',0,15,100,15
	.word	238
	.byte	21
	.byte	'CanSM_boolean_Impl',0,15,120,15
	.word	238
	.byte	21
	.byte	'CanSM_u8_Impl',0,15,123,15
	.word	238
	.byte	21
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,15,128,1,15
	.word	238
	.byte	21
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,15,132,1,15
	.word	238
	.byte	21
	.byte	'CanSM_u16_Impl',0,15,136,1,16
	.word	704
	.byte	21
	.byte	'CanSM_TimerStateType_Enum_impl',0,15,138,1,15
	.word	238
	.byte	14,15,140,1,9,4,15
	.byte	'cntTick_u16',0
	.word	704
	.byte	2,2,35,0,15
	.byte	'stTimer',0
	.word	238
	.byte	1,2,35,2,0,21
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,15,143,1,3
	.word	7820
	.byte	21
	.byte	'Com_impl_u16',0,15,154,1,16
	.word	704
	.byte	21
	.byte	'Com_impl_u8',0,15,157,1,15
	.word	238
	.byte	21
	.byte	'ComM_uint32_Impl',0,15,173,1,16
	.word	152
	.byte	21
	.byte	'ComM_uint16_Impl',0,15,175,1,16
	.word	704
	.byte	21
	.byte	'ComM_uint8_Impl',0,15,177,1,15
	.word	238
	.byte	21
	.byte	'ComM_bool_Impl',0,15,179,1,15
	.word	238
	.byte	14,15,181,1,9,24,15
	.byte	'ChannelState_e',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'LightTimeoutCtr_u32',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	704
	.byte	2,2,35,8,15
	.byte	'ChannelMode_u8',0
	.word	238
	.byte	1,2,35,10,15
	.byte	'BusSmMode_u8',0
	.word	238
	.byte	1,2,35,11,15
	.byte	'UserRequestCtr_u8',0
	.word	238
	.byte	1,2,35,12,15
	.byte	'PassiveRequestState_u8',0
	.word	238
	.byte	1,2,35,13,15
	.byte	'PncRequestCtr_u8',0
	.word	238
	.byte	1,2,35,14,15
	.byte	'InhibitionReqStatus_u8',0
	.word	238
	.byte	1,2,35,15,15
	.byte	'NmNetworkRequestStatus_b',0
	.word	238
	.byte	1,2,35,16,15
	.byte	'DiagnosticRequestState_b',0
	.word	238
	.byte	1,2,35,17,15
	.byte	'CommunicationAllowed_b',0
	.word	238
	.byte	1,2,35,18,15
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	238
	.byte	1,2,35,19,15
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	238
	.byte	1,2,35,20,15
	.byte	'NmNetworkModeStatus_b',0
	.word	238
	.byte	1,2,35,21,0,21
	.byte	'ComM_ChannelStruct_Impl',0,15,197,1,3
	.word	8052
	.byte	14,15,206,1,9,10,15
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	704
	.byte	2,2,35,0,15
	.byte	'LimitToNoComCtr_u16',0
	.word	704
	.byte	2,2,35,2,15
	.byte	'RequestedUserMode_t',0
	.word	238
	.byte	1,2,35,4,15
	.byte	'IndicatedUserMode_t',0
	.word	238
	.byte	1,2,35,5,15
	.byte	'numChannelsInFullCom_u8',0
	.word	238
	.byte	1,2,35,6,15
	.byte	'numChannelsInSilentCom_u8',0
	.word	238
	.byte	1,2,35,7,15
	.byte	'numChannelsInNoCom_u8',0
	.word	238
	.byte	1,2,35,8,0,21
	.byte	'ComM_UserStruct_Impl',0,15,214,1,3
	.word	8556
	.byte	21
	.byte	'Dcm_IOOperationResponseType',0,15,252,1,15
	.word	238
	.byte	21
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	15,138,2,15
	.word	238
	.byte	21
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,15,146,2,15
	.word	238
	.byte	21
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,15,150,2,15
	.word	238
	.byte	21
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,15,154,2,15
	.word	238
	.byte	21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,15,243,3,34
	.word	7299
	.byte	12,128,8
	.word	238
	.byte	13,255,7,0,21
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,15,246,3,34
	.word	7299
	.byte	21
	.byte	'Fls_AddressType',0,2,171,3,16
	.word	152
	.byte	21
	.byte	'Fls_LengthType',0,2,173,3,16
	.word	152
	.byte	23
	.byte	'Fls_JobStartType',0,2,175,3,16,1,31
	.byte	'Reserved1',0,1
	.word	238
	.byte	1,7,2,35,0,31
	.byte	'Write',0,1
	.word	238
	.byte	1,6,2,35,0,31
	.byte	'Erase',0,1
	.word	238
	.byte	1,5,2,35,0,31
	.byte	'Read',0,1
	.word	238
	.byte	1,4,2,35,0,31
	.byte	'Compare',0,1
	.word	238
	.byte	1,3,2,35,0,31
	.byte	'Reserved2',0,1
	.word	238
	.byte	3,0,2,35,0,0,21
	.byte	'Fls_JobStartType',0,2,183,3,3
	.word	9423
	.byte	21
	.byte	'Fls_17_Pmu_Job_Type',0,2,187,3,15
	.word	238
	.byte	12,2
	.word	238
	.byte	13,1,0,23
	.byte	'Fls_17_Pmu_StateType',0,2,198,3,16,48,15
	.byte	'FlsReadAddress',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'FlsWriteAddress',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	152
	.byte	4,2,35,12,15
	.byte	'FlsReadLength',0
	.word	152
	.byte	4,2,35,16,15
	.byte	'FlsWriteLength',0
	.word	152
	.byte	4,2,35,20,15
	.byte	'FlsReadBufferPtr',0
	.word	823
	.byte	4,2,35,24,15
	.byte	'FlsWriteBufferPtr',0
	.word	260
	.byte	4,2,35,28,15
	.byte	'FlsJobResult',0
	.word	5802
	.byte	4,2,35,32,15
	.byte	'FlsMode',0
	.word	5960
	.byte	4,2,35,36,15
	.byte	'NotifCaller',0
	.word	238
	.byte	1,2,35,40,15
	.byte	'JobStarted',0
	.word	9423
	.byte	1,2,35,41,15
	.byte	'FlsJobType',0
	.word	9613
	.byte	2,2,35,42,15
	.byte	'FlsOper',0
	.word	238
	.byte	1,2,35,44,15
	.byte	'FlsTimeoutErr',0
	.word	238
	.byte	1,2,35,45,15
	.byte	'FlsTimeoutControl',0
	.word	238
	.byte	1,2,35,46,0,21
	.byte	'Fls_17_Pmu_StateType',0,2,130,4,3
	.word	9622
	.byte	21
	.byte	'Fls_NotifFunctionPtrType',0,2,137,4,16
	.word	1807
	.byte	6
	.word	152
	.byte	7
	.word	10100
	.byte	25,1,1,26
	.word	152
	.byte	26
	.word	152
	.byte	26
	.word	10105
	.byte	26
	.word	238
	.byte	0,7
	.word	10110
	.byte	21
	.byte	'Fls_WriteCmdPtrType',0,2,139,4,16
	.word	10134
	.byte	25,1,1,26
	.word	152
	.byte	0,7
	.word	10168
	.byte	21
	.byte	'Fls_EraseCmdPtrType',0,2,144,4,16
	.word	10177
	.byte	10,16,115,9,4,11
	.byte	'FEE_POLLING_MODE_E',0,0,11
	.byte	'FEE_NORMAL_MODE_E',0,1,0,21
	.byte	'Fee_stMainType',0,16,119,2
	.word	10211
	.byte	10,16,122,9,4,11
	.byte	'FEE_NO_ORDER',0,0,11
	.byte	'FEE_READ_ORDER',0,1,11
	.byte	'FEE_WRITE_ORDER',0,2,11
	.byte	'FEE_INVALIDATE_ORDER',0,3,11
	.byte	'FEE_MAINTAIN_ORDER',0,4,11
	.byte	'FEE_FORCED_READ_ORDER',0,5,0,21
	.byte	'Fee_HlMode_ten',0,16,132,1,2
	.word	10281
	.byte	32
	.byte	'Fee_stMain',0,16,203,1,39
	.word	10211
	.byte	1,1,32
	.byte	'Fee_SecChngCnt_u32',0,16,209,1,31
	.word	152
	.byte	1,1,10,1,147,1,9,4,11
	.byte	'FEE_NORMAL_PRIO_E',0,0,11
	.byte	'FEE_HIGH_PRIO_E',0,1,0,21
	.byte	'Fee_HlPriority_ten',0,1,151,1,2
	.word	10481
	.byte	21
	.byte	'Fee_MarkerProp_t',0,1,231,1,2
	.word	735
	.byte	10,1,246,1,9,4,11
	.byte	'FEE_SECTOR_STATE_UNDEF_E',0,0,11
	.byte	'FEE_SECTOR_ERASED_E',0,1,11
	.byte	'FEE_SECTOR_USED_E',0,2,11
	.byte	'FEE_SECTOR_FULL_E',0,3,11
	.byte	'FEE_SECTOR_REQUEST2ERASE_E',0,4,11
	.byte	'FEE_SECTOR_CONSIDERED_E',0,13,0,21
	.byte	'Fee_SectorState_ten',0,1,254,1,2
	.word	10580
	.byte	14,1,129,2,9,12,15
	.byte	'SecChngCnt_u32',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'SecState_en',0
	.word	10580
	.byte	4,2,35,4,15
	.byte	'xPhySecIdx_u8',0
	.word	238
	.byte	1,2,35,8,0,21
	.byte	'Fee_LLSectorOrder_tst',0,1,134,2,2
	.word	10760
	.byte	21
	.byte	'Fee_stRetVal_ten',0,1,149,2,2
	.word	492
	.byte	14,1,153,2,9,16,15
	.byte	'Fee_PhysStartAddress_u32',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'Fee_PhysEndAddress_u32',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'Fee_LogStartAddress_u32',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'Fee_LogEndAddress_u32',0
	.word	152
	.byte	4,2,35,12,0,21
	.byte	'Fee_FlashProp_tst',0,1,159,2,2
	.word	10892
	.byte	10,1,210,2,9,4,11
	.byte	'FEE_LL_MARKER_INIT_E',0,0,11
	.byte	'FEE_LL_MARKER_BLK_CHK_E',0,1,11
	.byte	'FEE_LL_MARKER_BLK_CHK_WAIT_E',0,2,11
	.byte	'FEE_LL_MARKER_BLK_CHK_ERROR_E',0,3,11
	.byte	'FEE_LL_MARKER_BLK_CHK_FINISHED_E',0,4,11
	.byte	'FEE_LL_MARKER_WRITE_WAIT_E',0,5,11
	.byte	'FEE_LL_MARKER_WRITE_ERROR_E',0,6,11
	.byte	'FEE_LL_MARKER_VERIFY_E',0,7,11
	.byte	'FEE_LL_MARKER_VERIFY_WAIT_E',0,8,11
	.byte	'FEE_LL_MARKER_VERIFY_FINISHED_E',0,9,0,21
	.byte	'Fee_LLWrMarkerType_ten',0,1,222,2,2
	.word	11056
	.byte	10,1,225,2,9,4,11
	.byte	'FEE_HL_RDWR_BLK_INIT_E',0,0,11
	.byte	'FEE_HL_SEARCH_BLK_HDR_E',0,1,11
	.byte	'FEE_HL_READ_BLK_HDR_WAIT_E',0,2,11
	.byte	'FEE_HL_CHECK_BLK_HDR_E',0,3,11
	.byte	'FEE_HL_CALC_BLK_CS_E',0,4,11
	.byte	'FEE_HL_CHECK_BLK_CS_E',0,5,11
	.byte	'FEE_HL_RD_DATA_FROM_BLK_E',0,6,11
	.byte	'FEE_HL_COMP_BLK_E',0,7,11
	.byte	'FEE_HL_WR_BLK_E',0,8,0,21
	.byte	'Fee_HLRdWrBlockType_ten',0,1,243,2,2
	.word	11390
	.byte	10,1,246,2,9,4,11
	.byte	'FEE_LL_WR_BLK_INIT_E',0,0,11
	.byte	'FEE_LL_WR_WRITEHEADER_E',0,1,11
	.byte	'FEE_LL_WR_SIZECHECK_HSR_E',0,2,11
	.byte	'FEE_LL_WR_WRITEHEADER_WAIT_E',0,3,11
	.byte	'FEE_LL_WR_VERIFYHEADER_E',0,4,11
	.byte	'FEE_LL_WR_VERIFYHEADER_WAIT_E',0,5,11
	.byte	'FEE_LL_WR_VERIFYHEADER_ERROR_E',0,6,11
	.byte	'FEE_LL_WR_WRITEDATA_SEC_A_E',0,7,11
	.byte	'FEE_LL_WR_WAIT_WRITEDATA_SEC_A_E',0,8,11
	.byte	'FEE_LL_WR_WRITE_ERROR_E',0,9,11
	.byte	'FEE_LL_WR_WRITE_FULL_MARKER_E',0,10,11
	.byte	'FEE_LL_WR_ERASE_SECTOR_E',0,11,11
	.byte	'FEE_LL_WR_WRITE_USED_MARKER_E',0,12,11
	.byte	'FEE_LL_WR_WRITE_START_MARKER_E',0,13,11
	.byte	'FEE_LL_WR_VERIFY_BLK_E',0,14,11
	.byte	'FEE_LL_WR_WRITEHDRPG2_E',0,15,11
	.byte	'FEE_LL_WR_WAIT_WRITEHDRPG2_E',0,16,0,21
	.byte	'Fee_LLWrBlockType_ten',0,1,162,3,2
	.word	11648
	.byte	10,1,165,3,9,4,11
	.byte	'FEE_LL_CMP_BLK_INIT_E',0,0,11
	.byte	'FEE_LL_CMP_HEADER_E',0,1,11
	.byte	'FEE_LL_CMP_WAIT_HEADER_E',0,2,11
	.byte	'FEE_LL_CMP_CHECK_OVERLAP_E',0,3,11
	.byte	'FEE_LL_CMP_DATA_SEC_A_E',0,4,11
	.byte	'FEE_LL_CMP_WAIT_DATA_SEC_A_E',0,5,11
	.byte	'FEE_LL_CMP_FINISHED_E',0,6,0,21
	.byte	'Fee_LLCmpBlkType_ten',0,1,174,3,2
	.word	12183
	.byte	10,1,177,3,9,4,11
	.byte	'FEE_LL_CPY_BLK_INIT_E',0,0,11
	.byte	'FEE_LL_CPY_BLOCK_START_E',0,1,11
	.byte	'FEE_LL_CPY_BLOCK_WAIT_E',0,2,11
	.byte	'FEE_LL_CPY_BLOCK_ERROR_E',0,3,11
	.byte	'FEE_LL_CPY_BLOCK_FINISHED_E',0,4,0,21
	.byte	'Fee_LLCpyBlkType_ten',0,1,184,3,2
	.word	12403
	.byte	10,1,187,3,9,4,11
	.byte	'FEE_LL_CRC_BLK_INIT_E',0,0,11
	.byte	'FEE_LL_CRC_RD_HD_PAGE_E',0,1,11
	.byte	'FEE_LL_CRC_RD_PAGE_E',0,2,11
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_E',0,3,11
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_E',0,4,11
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_ROB_E',0,5,11
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_WAIT_E',0,6,11
	.byte	'FEE_LL_CRC_RD_PAGE_WAIT_E',0,7,11
	.byte	'FEE_LL_CRC_RD_ERROR_E',0,8,0,21
	.byte	'Fee_LLCalcCrcBlkType_ten',0,1,200,3,2
	.word	12574
	.byte	10,1,203,3,9,4,11
	.byte	'FEE_LL_INIT_READ_E',0,0,11
	.byte	'FEE_LL_BLANK_CHECK_E',0,1,11
	.byte	'FEE_LL_BLANK_CHECK_WAIT_E',0,2,11
	.byte	'FEE_LL_READ_PAGE_E',0,3,11
	.byte	'FEE_LL_WAIT_READ_PAGE_E',0,4,11
	.byte	'FEE_LL_READ_ERROR_E',0,5,11
	.byte	'FEE_LL_READ_FINISHED_E',0,6,0,21
	.byte	'Fee_LLRdStateType_ten',0,1,223,3,3
	.word	12861
	.byte	10,1,226,3,9,4,11
	.byte	'FEE_LL_INIT_BLANK_CHECK_E',0,0,11
	.byte	'FEE_LL_PERFORM_BLANK_CHECK_E',0,1,11
	.byte	'FEE_LL_WAIT_PERFORM_BLANK_CHECK_E',0,2,11
	.byte	'FEE_LL_BLANK_CHECK_ERROR_E',0,3,11
	.byte	'FEE_LL_BLANK_CHECK_FINISHED_E',0,4,0,21
	.byte	'Fee_LLBlankCheckType_ten',0,1,233,3,3
	.word	13065
	.byte	10,1,236,3,9,4,11
	.byte	'FEE_LL_FIND_CURRENT_SECTOR_E',0,0,11
	.byte	'FEE_LL_FIND_LAST_HEADER_E',0,1,11
	.byte	'FEE_LL_FINISHED_E',0,2,0,21
	.byte	'Fee_LLFndEmptyPgeType_ten',0,1,249,3,2
	.word	13262
	.byte	10,1,252,3,9,4,11
	.byte	'FEE_LL_SEARCHBLK_INIT_E',0,0,11
	.byte	'FEE_LL_SEARCHBLK_BLK_HEADER_E',0,1,0,21
	.byte	'Fee_LLSearchBlkHdrType_ten',0,1,128,4,2
	.word	13383
	.byte	10,1,132,4,9,4,11
	.byte	'FEE_LL_BLD_UP_CACHE_INIT_E',0,0,11
	.byte	'FEE_LL_BLD_UP_CACHE_READ_E',0,1,0,21
	.byte	'Fee_LLBuildUpCache_ten',0,1,136,4,2
	.word	13484
	.byte	10,1,139,4,9,4,11
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E',0,0,11
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_DO_E',0,1,0,21
	.byte	'Fee_LLBuildUpCacheAllSect_ten',0,1,143,4,2
	.word	13581
	.byte	10,1,168,4,9,4,11
	.byte	'FEE_LL_REORG_INIT_E',0,0,11
	.byte	'FEE_LL_REORG_PREP_SEARCH_BLK_E',0,1,11
	.byte	'FEE_LL_REORG_SEARCH_BLK_E',0,2,11
	.byte	'FEE_LL_REORG_CHECK_BLOCK_CS_E',0,3,11
	.byte	'FEE_LL_REORG_REDUNDANT_BLK_CHK_E',0,4,11
	.byte	'FEE_LL_REORG_WRITE_BLOCK_E',0,5,11
	.byte	'FEE_LL_REORG_FINISHED_E',0,6,0,21
	.byte	'Fee_LLSecReorgType_ten',0,1,193,4,2
	.word	13701
	.byte	10,1,196,4,9,4,11
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_INIT_E',0,0,11
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_SEARCH_HDR_E',0,1,11
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_BLK_CS_E',0,2,0,21
	.byte	'Fee_LLRedundantCpyChk_ten',0,1,201,4,2
	.word	13945
	.byte	10,1,204,4,9,4,11
	.byte	'FEE_LL_CPY_FLS2FLS_INIT_E',0,0,11
	.byte	'FEE_LL_CPY_FLS2FLS_READ_E',0,1,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_READ_E',0,2,11
	.byte	'FEE_LL_CPY_FLS2FLS_READ_ERROR_E',0,3,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_E',0,4,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_WRITE_E',0,5,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_ERROR_E',0,6,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_E',0,7,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_VERIFY_E',0,8,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_ERROR_E',0,9,11
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_E',0,10,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_WRITE_E',0,11,11
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_ERROR_E',0,12,11
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_E',0,13,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_VERIFY_E',0,14,11
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_ERROR_E',0,15,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_E',0,16,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_WRITE_E',0,17,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_ERROR_E',0,18,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_E',0,19,11
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_VERIFY_E',0,20,11
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_ERROR_E',0,21,11
	.byte	'FEE_LL_CPY_FLS2FLS_CHECK_ADR_OVERFLOW_E',0,22,11
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_FULL_MARKER_E',0,23,11
	.byte	'FEE_LL_CPY_FLS2FLS_ERASE_SECTOR_E',0,24,11
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_USED_MARKER_E',0,25,11
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_START_MARKER_E',0,26,0,21
	.byte	'Fee_LLCpyBlkFls2Fls_ten',0,1,133,5,2
	.word	14097
	.byte	14,1,163,5,9,116,15
	.byte	'xRdAddress',0
	.word	152
	.byte	4,2,35,0,15
	.byte	'xWrAddress',0
	.word	152
	.byte	4,2,35,4,15
	.byte	'xCmpAddress',0
	.word	152
	.byte	4,2,35,8,15
	.byte	'xCrcAddress',0
	.word	152
	.byte	4,2,35,12,15
	.byte	'xCpyAddress',0
	.word	152
	.byte	4,2,35,16,15
	.byte	'AdrHdSearchStart_u32',0
	.word	152
	.byte	4,2,35,20,15
	.byte	'xStartAddrNextSector_u32',0
	.word	152
	.byte	4,2,35,24,15
	.byte	'xHdPg2Address',0
	.word	152
	.byte	4,2,35,28,15
	.byte	'LastProgrammedAddress_u32',0
	.word	152
	.byte	4,2,35,32,15
	.byte	'LastValidHdrAddress_u32',0
	.word	152
	.byte	4,2,35,36,15
	.byte	'Fee_LLSecReorg_en',0
	.word	13701
	.byte	4,2,35,40,15
	.byte	'Fee_LLRedundantCpyChk_en',0
	.word	13945
	.byte	4,2,35,44,15
	.byte	'Fee_LLCpyBlkFls2Fls_en',0
	.word	14097
	.byte	4,2,35,48,15
	.byte	'Fee_HLWrBlock_en',0
	.word	11390
	.byte	4,2,35,52,15
	.byte	'Fee_HLMtBlock_en',0
	.word	11390
	.byte	4,2,35,56,15
	.byte	'Fee_LLWrBlock_en',0
	.word	11648
	.byte	4,2,35,60,15
	.byte	'Fee_HLRdBlock',0
	.word	11390
	.byte	4,2,35,64,15
	.byte	'Fee_LLNextUsedWrBlock_en',0
	.word	11648
	.byte	4,2,35,68,15
	.byte	'Fee_LLNextEraseWrBlock_en',0
	.word	11648
	.byte	4,2,35,72,15
	.byte	'Fee_LLCompBlk',0
	.word	12183
	.byte	4,2,35,76,15
	.byte	'Fee_LLCopyBlk_en',0
	.word	12403
	.byte	4,2,35,80,15
	.byte	'Fee_LLCalcCrcBlk_en',0
	.word	12574
	.byte	4,2,35,84,15
	.byte	'Fee_LLWrMarker_en',0
	.word	11056
	.byte	4,2,35,88,15
	.byte	'Fee_LLRdState_en',0
	.word	12861
	.byte	4,2,35,92,15
	.byte	'Fee_LLBlankCheckState_en',0
	.word	13065
	.byte	4,2,35,96,15
	.byte	'Fee_LLFindEmptyPageState_en',0
	.word	13262
	.byte	4,2,35,100,15
	.byte	'Fee_LLSearchBlkHdr_en',0
	.word	13383
	.byte	4,2,35,104,15
	.byte	'Fee_LLBuildUpCache_en',0
	.word	13484
	.byte	4,2,35,108,15
	.byte	'Fee_LLBuildUpCacheAllSect_en',0
	.word	13581
	.byte	4,2,35,112,0,21
	.byte	'Fee_RdWrOrder_tst',0,1,224,5,3
	.word	15143
	.byte	10,1,133,6,9,4,11
	.byte	'FEE_ERASESEC_IDLE_E',0,0,11
	.byte	'FEE_ERASESEC_CHECK_CACHE_E',0,1,11
	.byte	'FEE_ERASESEC_START_E',0,2,11
	.byte	'FEE_ERASESEC_DO_E',0,3,11
	.byte	'FEE_ERASESEC_WRITE_MARKER_E',0,4,11
	.byte	'FEE_ERASESEC_ERROR_E',0,5,0,21
	.byte	'Fee_LLEraseStateType_ten',0,1,141,6,2
	.word	16000
	.byte	14,1,151,6,9,16,15
	.byte	'Preamble_au8',0
	.word	726
	.byte	3,2,35,0,15
	.byte	'BlkStatus_u8',0
	.word	238
	.byte	1,2,35,3,15
	.byte	'FeeIndex_u16',0
	.word	704
	.byte	2,2,35,4,15
	.byte	'BlkLength_u16',0
	.word	704
	.byte	2,2,35,6,15
	.byte	'HdrCrc16_u16',0
	.word	704
	.byte	2,2,35,8,15
	.byte	'BlkCrc32_u32',0
	.word	152
	.byte	4,2,35,12,0,21
	.byte	'Fee_BlkHeader_tst',0,1,159,6,2
	.word	16188
	.byte	12,32
	.word	10892
	.byte	13,1,0,6
	.word	16355
	.byte	32
	.byte	'Fee_FlashProp_st',0,1,135,7,53
	.word	16364
	.byte	1,1,32
	.byte	'Fee_RdWrOrder_st',0,1,144,7,53
	.word	15143
	.byte	1,1,12,24
	.word	10760
	.byte	13,1,0,32
	.byte	'Fee_LLSectorOrder_st',0,1,145,7,53
	.word	16425
	.byte	1,1,6
	.word	823
	.byte	32
	.byte	'Fee_MarkerBufBytePtr_cpu8',0,1,157,7,53
	.word	16466
	.byte	1,1,32
	.byte	'Fee_idxLLSectorOrder_au8',0,1,192,7,53
	.word	9613
	.byte	1,1,32
	.byte	'Fee_RdWrRetries_u8',0,1,195,7,53
	.word	238
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,38,0,73,19,0,0,7,15,0,73
	.byte	19,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,9,46,0,3,8,58,15,59,15,57,15,54
	.byte	15,39,12,63,12,60,12,0,0,10,4,1,58,15,59,15,57,15,11,15,0,0,11,40,0,3,8,28,13,0,0,12,1,1,11,15,73,19,0
	.byte	0,13,33,0,47,15,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,73,19,11,15,56,9,0,0,16,46,1,3,8,58
	.byte	15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,17,46,1,49,19,0,0,18,5,0,49,19,0,0,19,46,0,3,8,58,15,59,15
	.byte	57,15,73,19,54,15,63,12,60,12,0,0,20,21,0,54,15,0,0,21,22,0,3,8,58,15,59,15,57,15,73,19,0,0,22,21,0,54
	.byte	15,39,12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,59,0,3,8,0,0,25,21,1,54,15,39,12,0,0,26,5,0,73
	.byte	19,0,0,27,23,1,58,15,59,15,57,15,11,15,0,0,28,4,1,3,8,58,15,59,15,57,15,11,15,0,0,29,21,0,73,19,54,15
	.byte	39,12,0,0,30,53,0,73,19,0,0,31,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,32,52,0,3,8,58,15,59,15,57,15
	.byte	73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L57:
	.word	.L100-.L99
.L99:
	.half	3
	.word	.L102-.L101
.L101:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Prv.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Crc\\Crc_16.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Fee\\api\\Fee.h',0,0,0,0,0
.L102:
.L100:
	.sdecl	'.debug_info',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_info'
.L58:
	.word	407
	.half	3
	.word	.L59
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L61,.L60
	.byte	2
	.word	.L54
	.byte	3
	.byte	'Fee_LLWriteMarker',0,1,70,34
	.word	.L63
	.byte	1,1,1
	.word	.L53,.L64,.L52
	.byte	4
	.byte	'PhySectIdx_u8',0,1,70,74
	.word	.L65,.L66
	.byte	4
	.byte	'MarkerID_u8',0,1,71,74
	.word	.L65,.L67
	.byte	5
	.word	.L53,.L64
	.byte	6
	.byte	'xWrMarker_st',0,1,73,38
	.word	.L68,.L69
	.byte	6
	.byte	'xRetVal_en',0,1,74,38
	.word	.L63,.L70
	.byte	6
	.byte	'xSecChngCntTmp_u32',0,1,75,28
	.word	.L71,.L72
	.byte	6
	.byte	'xLogSectIdx_u8',0,1,76,27
	.word	.L65,.L73
	.byte	7
	.byte	'xRdWr_Address_u32',0,1,77,19
	.word	.L71
	.byte	5,3
	.word	_999001_xRdWr_Address_u32
	.byte	8
	.word	.L74,.L15
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_abbrev'
.L59:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,8,11,0,17,1,18,1,0
	.byte	0,0
	.sdecl	'.debug_line',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_line'
.L60:
	.word	.L104-.L103
.L103:
	.half	3
	.word	.L106-.L105
.L105:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_LlMarker.c',0,0,0,0,0
.L106:
	.byte	5,34,7,0,5,2
	.word	.L53
	.byte	3,197,0,1,5,49,9
	.half	.L78-.L53
	.byte	3,4,1,5,22,9
	.half	.L79-.L78
	.byte	3,11,1,5,46,9
	.half	.L107-.L79
	.byte	1,5,13,9
	.half	.L80-.L107
	.byte	3,4,1,5,29,9
	.half	.L108-.L80
	.byte	1,5,5,9
	.half	.L109-.L108
	.byte	1,5,50,9
	.half	.L4-.L109
	.byte	3,24,1,5,48,9
	.half	.L110-.L4
	.byte	1,5,37,9
	.half	.L111-.L110
	.byte	3,3,1,5,67,9
	.half	.L112-.L111
	.byte	1,5,93,9
	.half	.L83-.L112
	.byte	1,5,13,9
	.half	.L113-.L83
	.byte	3,3,1,5,50,9
	.half	.L114-.L113
	.byte	1,5,33,9
	.half	.L115-.L114
	.byte	1,5,49,9
	.half	.L116-.L115
	.byte	1,5,64,9
	.half	.L117-.L116
	.byte	1,5,31,9
	.half	.L118-.L117
	.byte	1,5,13,9
	.half	.L5-.L118
	.byte	1,5,16,9
	.half	.L74-.L5
	.byte	3,9,1,5,13,9
	.half	.L119-.L74
	.byte	1,5,54,7,9
	.half	.L120-.L119
	.byte	3,3,1,5,52,9
	.half	.L121-.L120
	.byte	1,5,82,9
	.half	.L122-.L121
	.byte	1,5,28,9
	.half	.L14-.L122
	.byte	3,5,1,5,9,9
	.half	.L15-.L14
	.byte	3,3,1,5,17,9
	.half	.L6-.L15
	.byte	3,10,1,5,13,9
	.half	.L123-.L6
	.byte	1,5,17,7,9
	.half	.L124-.L123
	.byte	3,3,1,5,34,9
	.half	.L17-.L124
	.byte	3,5,1,5,9,9
	.half	.L125-.L17
	.byte	3,3,1,5,13,9
	.half	.L7-.L125
	.byte	3,6,1,5,31,9
	.half	.L126-.L7
	.byte	1,5,59,9
	.half	.L127-.L126
	.byte	3,3,1,5,17,9
	.half	.L20-.L127
	.byte	3,3,1,5,34,9
	.half	.L128-.L20
	.byte	1,5,20,9
	.half	.L19-.L128
	.byte	3,125,1,5,59,9
	.half	.L129-.L19
	.byte	1,5,34,7,9
	.half	.L130-.L129
	.byte	3,8,1,5,17,9
	.half	.L82-.L130
	.byte	1,5,33,9
	.half	.L131-.L82
	.byte	1,5,48,9
	.half	.L132-.L131
	.byte	1,5,74,9
	.half	.L133-.L132
	.byte	1,5,13,9
	.half	.L134-.L133
	.byte	3,127,1,5,28,7,9
	.half	.L135-.L134
	.byte	3,4,1,5,41,9
	.half	.L136-.L135
	.byte	1,9
	.half	.L21-.L136
	.byte	3,5,1,5,71,9
	.half	.L137-.L21
	.byte	1,5,97,9
	.half	.L85-.L137
	.byte	1,5,54,9
	.half	.L138-.L85
	.byte	3,3,1,5,52,9
	.half	.L139-.L138
	.byte	1,5,9,9
	.half	.L22-.L139
	.byte	3,3,1,5,37,9
	.half	.L8-.L22
	.byte	3,6,1,5,35,9
	.half	.L86-.L8
	.byte	1,9
	.half	.L140-.L86
	.byte	3,1,1,5,16,9
	.half	.L141-.L140
	.byte	3,5,1,5,34,9
	.half	.L142-.L141
	.byte	3,1,1,5,17,9
	.half	.L87-.L142
	.byte	1,5,33,9
	.half	.L143-.L87
	.byte	1,5,48,9
	.half	.L144-.L143
	.byte	1,5,74,9
	.half	.L145-.L144
	.byte	1,5,13,9
	.half	.L146-.L145
	.byte	3,127,1,5,28,9
	.half	.L147-.L146
	.byte	3,4,1,5,37,9
	.half	.L24-.L147
	.byte	3,13,1,5,17,9
	.half	.L148-.L24
	.byte	1,5,37,9
	.half	.L149-.L148
	.byte	1,5,53,9
	.half	.L150-.L149
	.byte	1,5,16,9
	.half	.L89-.L150
	.byte	1,5,29,7,9
	.half	.L151-.L89
	.byte	3,1,1,5,89,7,9
	.half	.L152-.L151
	.byte	3,3,1,5,21,9
	.half	.L25-.L152
	.byte	3,6,1,5,17,9
	.half	.L90-.L25
	.byte	1,5,21,7,9
	.half	.L153-.L90
	.byte	3,3,1,5,39,9
	.half	.L154-.L153
	.byte	1,5,21,9
	.half	.L28-.L154
	.byte	1,5,38,9
	.half	.L155-.L28
	.byte	3,2,1,5,69,9
	.half	.L91-.L155
	.byte	3,2,1,5,13,9
	.half	.L27-.L91
	.byte	3,3,1,5,54,7,9
	.half	.L156-.L27
	.byte	3,2,1,5,67,9
	.half	.L29-.L156
	.byte	3,14,1,5,38,9
	.half	.L157-.L29
	.byte	1,5,67,9
	.half	.L158-.L157
	.byte	3,1,1,5,38,9
	.half	.L159-.L158
	.byte	1,9
	.half	.L160-.L159
	.byte	3,1,1,5,73,9
	.half	.L161-.L160
	.byte	3,4,1,5,82,9
	.half	.L162-.L161
	.byte	3,1,1,5,59,9
	.half	.L88-.L162
	.byte	3,2,1,5,37,9
	.half	.L163-.L88
	.byte	3,125,1,5,63,9
	.half	.L164-.L163
	.byte	3,6,1,5,48,9
	.half	.L165-.L164
	.byte	1,5,63,9
	.half	.L166-.L165
	.byte	1,5,16,9
	.half	.L167-.L166
	.byte	3,3,1,5,13,9
	.half	.L168-.L167
	.byte	1,5,54,7,9
	.half	.L169-.L168
	.byte	3,3,1,5,52,9
	.half	.L92-.L169
	.byte	1,5,80,9
	.half	.L170-.L92
	.byte	1,5,28,9
	.half	.L30-.L170
	.byte	3,5,1,5,9,9
	.half	.L31-.L30
	.byte	3,3,1,5,17,9
	.half	.L9-.L31
	.byte	3,10,1,5,13,9
	.half	.L171-.L9
	.byte	1,5,17,7,9
	.half	.L172-.L171
	.byte	3,3,1,5,34,9
	.half	.L33-.L172
	.byte	3,5,1,5,9,9
	.half	.L173-.L33
	.byte	3,3,1,5,16,9
	.half	.L10-.L173
	.byte	3,6,1,5,13,9
	.half	.L174-.L10
	.byte	1,5,35,7,9
	.half	.L175-.L174
	.byte	3,3,1,5,17,9
	.half	.L176-.L175
	.byte	3,3,1,5,35,9
	.half	.L177-.L176
	.byte	1,5,63,9
	.half	.L178-.L177
	.byte	3,3,1,5,21,9
	.half	.L37-.L178
	.byte	3,3,1,5,38,9
	.half	.L179-.L37
	.byte	1,5,24,9
	.half	.L36-.L179
	.byte	3,125,1,5,63,9
	.half	.L180-.L36
	.byte	1,5,41,7,9
	.half	.L181-.L180
	.byte	3,7,1,5,71,9
	.half	.L182-.L181
	.byte	1,5,97,9
	.half	.L94-.L182
	.byte	1,5,54,9
	.half	.L183-.L94
	.byte	3,3,1,5,52,9
	.half	.L184-.L183
	.byte	1,5,117,9
	.half	.L185-.L184
	.byte	3,125,1,5,28,9
	.half	.L35-.L185
	.byte	3,8,1,5,9,9
	.half	.L38-.L35
	.byte	3,3,1,5,16,9
	.half	.L11-.L38
	.byte	3,5,1,5,13,9
	.half	.L186-.L11
	.byte	1,5,54,7,9
	.half	.L187-.L186
	.byte	3,3,1,5,52,9
	.half	.L188-.L187
	.byte	1,5,81,9
	.half	.L189-.L188
	.byte	1,5,28,9
	.half	.L40-.L189
	.byte	3,5,1,5,9,9
	.half	.L41-.L40
	.byte	3,3,1,5,17,9
	.half	.L12-.L41
	.byte	3,10,1,5,13,9
	.half	.L190-.L12
	.byte	1,5,17,7,9
	.half	.L191-.L190
	.byte	3,3,1,5,34,9
	.half	.L43-.L191
	.byte	3,5,1,5,9,9
	.half	.L192-.L43
	.byte	3,3,1,5,24,9
	.half	.L13-.L192
	.byte	3,6,1,5,9,9
	.half	.L193-.L13
	.byte	3,2,1,5,24,9
	.half	.L3-.L193
	.byte	3,6,1,5,9,9
	.half	.L194-.L3
	.byte	3,2,1,5,5,9
	.half	.L16-.L194
	.byte	3,5,1,5,33,7,9
	.half	.L195-.L16
	.byte	3,17,1,5,13,9
	.half	.L196-.L195
	.byte	1,5,33,9
	.half	.L197-.L196
	.byte	1,5,49,9
	.half	.L198-.L197
	.byte	1,5,13,9
	.half	.L199-.L198
	.byte	3,123,1,5,68,7,9
	.half	.L200-.L199
	.byte	1,5,62,7,9
	.half	.L201-.L200
	.byte	3,5,1,5,96,9
	.half	.L202-.L201
	.byte	1,5,64,9
	.half	.L48-.L202
	.byte	3,5,1,5,62,9
	.half	.L203-.L48
	.byte	1,5,46,9
	.half	.L50-.L203
	.byte	3,4,1,5,44,9
	.half	.L204-.L50
	.byte	1,5,9,9
	.half	.L205-.L204
	.byte	3,3,1,5,30,9
	.half	.L206-.L205
	.byte	1,5,28,9
	.half	.L207-.L206
	.byte	1,5,9,9
	.half	.L208-.L207
	.byte	3,3,1,5,29,9
	.half	.L209-.L208
	.byte	1,5,27,9
	.half	.L210-.L209
	.byte	1,5,5,9
	.half	.L47-.L210
	.byte	3,3,1,5,1,9
	.half	.L51-.L47
	.byte	3,1,1,7,9
	.half	.L62-.L51
	.byte	0,1,1
.L104:
	.sdecl	'.debug_ranges',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_ranges'
.L61:
	.word	-1,.L53,0,.L62-.L53,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_loc'
.L52:
	.word	-1,.L53,0,.L75-.L53
	.half	2
	.byte	138,0
	.word	.L75-.L53,.L64-.L53
	.half	2
	.byte	138,8
	.word	.L64-.L53,.L64-.L53
	.half	2
	.byte	138,0
	.word	0,0
.L67:
	.word	-1,.L53,0,.L76-.L53
	.half	1
	.byte	85
	.word	.L78-.L53,.L76-.L53
	.half	1
	.byte	88
	.word	.L4-.L53,.L64-.L53
	.half	1
	.byte	88
	.word	.L4-.L53,.L81-.L53
	.half	1
	.byte	85
	.word	.L6-.L53,.L17-.L53
	.half	1
	.byte	85
	.word	.L7-.L53,.L84-.L53
	.half	1
	.byte	85
	.word	.L8-.L53,.L86-.L53
	.half	1
	.byte	85
	.word	.L9-.L53,.L33-.L53
	.half	1
	.byte	85
	.word	.L10-.L53,.L93-.L53
	.half	1
	.byte	85
	.word	.L35-.L53,.L38-.L53
	.half	1
	.byte	85
	.word	.L11-.L53,.L95-.L53
	.half	1
	.byte	85
	.word	.L12-.L53,.L43-.L53
	.half	1
	.byte	85
	.word	.L13-.L53,.L16-.L53
	.half	1
	.byte	85
	.word	0,0
.L66:
	.word	-1,.L53,0,.L76-.L53
	.half	1
	.byte	84
	.word	.L77-.L53,.L76-.L53
	.half	1
	.byte	91
	.word	.L4-.L53,.L82-.L53
	.half	1
	.byte	91
	.word	.L4-.L53,.L83-.L53
	.half	1
	.byte	84
	.word	.L6-.L53,.L17-.L53
	.half	1
	.byte	84
	.word	.L7-.L53,.L85-.L53
	.half	1
	.byte	84
	.word	.L8-.L53,.L87-.L53
	.half	1
	.byte	91
	.word	.L8-.L53,.L88-.L53
	.half	1
	.byte	84
	.word	.L9-.L53,.L16-.L53
	.half	1
	.byte	91
	.word	.L9-.L53,.L33-.L53
	.half	1
	.byte	84
	.word	.L10-.L53,.L94-.L53
	.half	1
	.byte	84
	.word	.L35-.L53,.L38-.L53
	.half	1
	.byte	84
	.word	.L11-.L53,.L96-.L53
	.half	1
	.byte	84
	.word	.L12-.L53,.L43-.L53
	.half	1
	.byte	84
	.word	.L13-.L53,.L16-.L53
	.half	1
	.byte	84
	.word	0,0
.L73:
	.word	-1,.L53,.L80-.L53,.L76-.L53
	.half	1
	.byte	90
	.word	.L4-.L53,.L64-.L53
	.half	1
	.byte	90
	.word	0,0
.L70:
	.word	-1,.L53,.L79-.L53,.L76-.L53
	.half	1
	.byte	89
	.word	.L4-.L53,.L64-.L53
	.half	1
	.byte	89
	.word	.L97-.L53,.L64-.L53
	.half	1
	.byte	82
	.word	0,0
.L72:
	.word	-1,.L53,.L89-.L53,.L90-.L53
	.half	1
	.byte	95
	.word	.L91-.L53,.L92-.L53
	.half	1
	.byte	95
	.word	.L30-.L53,.L31-.L53
	.half	1
	.byte	95
	.word	0,0
.L69:
	.word	-1,.L53,0,.L76-.L53
	.half	2
	.byte	145,120
	.word	.L4-.L53,.L64-.L53
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L211:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_LLWriteMarker')
	.sect	'.debug_frame'
	.word	36
	.word	.L211,.L53,.L64-.L53
	.byte	4
	.word	(.L75-.L53)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L64-.L75)/2
	.byte	19,0,8,26,0,0

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   431  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   432  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   433  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   434  /* 1 == FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   435  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   436  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   437  /*<BASDKey>
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   438  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   439  * $History__:$
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   440  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_LlMarker.c	   441  </BASDKey>*/

	; Module end
