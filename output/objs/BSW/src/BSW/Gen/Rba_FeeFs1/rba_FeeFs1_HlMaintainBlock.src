	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16268a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\rba_FeeFs1_HlMaintainBlock.src BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c'

	
$TC16X
	
	.sdecl	'.text.rba_FeeFs1_HlMaintainBlock.Fee_HLMaintainBlock',code,cluster('Fee_HLMaintainBlock')
	.sect	'.text.rba_FeeFs1_HlMaintainBlock.Fee_HLMaintainBlock'
	.align	2
	
	.global	Fee_HLMaintainBlock

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     1  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     2  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     3  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     4  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     6   * \moduledescription
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     7   *           AUTOSAR FEE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     8   *           According to Document Version 3.0.0, Part of Release 4.0, Revision 2
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	     9   * \scope    INTERN
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    10   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    11   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    12  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    13  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    14  /*
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    15   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    16   * Includes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    17   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    18   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    19  #include "Fee.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    20  #include "rba_FeeFs1_Prv.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    21  #include "Crc.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    22  #if (!defined(CRC_AR_RELEASE_MAJOR_VERSION) || (CRC_AR_RELEASE_MAJOR_VERSION != FEE_AR_RELEASE_MAJOR_VERSION))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    23      #error "AUTOSAR major version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    24  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    25  #if (!defined(CRC_AR_RELEASE_MINOR_VERSION) || ((CRC_AR_RELEASE_MINOR_VERSION != 0) && (CRC_AR_RELEASE_MINOR_VERSION != 2)))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    26      #error "AUTOSAR minor version undefined or mismatched"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    27  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    28  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    29  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 == FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    30  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    31  #if (FEE_PRESENT == 1)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    32  #if(FEE_RB_MAINTAIN != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    33  /* Information regarding the last found block header */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    34  #define FEE_START_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    35  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    36  /* MR12 RULE 8.5 VIOLATION: This variable needs to keep its value but it is not used outside of this file */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    37  static Fee_GlobInfoLastRdHeader_tst Fee_GlobInfoLastRdHeaderMt_st;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    38  #define FEE_STOP_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    39  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    40  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    41  #define FEE_START_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    42  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    43  /* MR12 RULE 8.5 VIOLATION: This variable needs to keep its value but it is not used outside of this file */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    44  static boolean Fee_Rb_GlobSecurityLevelInfo_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    45  #define FEE_STOP_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    46  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    47  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    48  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    49   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    50   * Fee_HLMaintainBlock(): Maintain a redundant block
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    51   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    52   * This function is used to repair a redundant block if one of the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    53   * copies has corrupt data.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    54   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    55   * The block is being searched in all the sectors due to the verification
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    56   * whether a maintenance is necessary or not (one of the copes incorrect).
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    57   * In this case, the correct copy will be moved to newest free FLASH space
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    58   * and write it redundant again.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    59   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    60   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    61   * \return   Function result
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    62   * \retval   FEE_ORDER_PENDING_E:   Order is still pending
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    63   * \retval   FEE_ABORTED_E:         Order was aborted due to a wrong
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    64   *                                  FLS compare function call
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    65   * \retval   FEE_ERROR_E:           Block write caused an error
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    66   *                                  (3 retries failed)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    67   * \retval   FEE_ORDER_FINISHED_E:  Order finished successfully or
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    68   *                                  write order not necessary
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    69   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    70   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    71   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    72   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    73  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    74  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    75  FUNC(Fee_stRetVal_ten, FEE_CODE) Fee_HLMaintainBlock(void)
; Function Fee_HLMaintainBlock
.L88:
Fee_HLMaintainBlock:	.type	func
	sub.a	a10,#16
.L114:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    76  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    77      VAR(Fee_stRetVal_ten, AUTOMATIC)  xRetVal_en    = FEE_ORDER_PENDING_E;  /* Function return */
	mov	d8,#0
.L115:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    78      VAR(Fee_stRetVal_ten, AUTOMATIC)  xTmpRetVal_en = FEE_ORDER_PENDING_E;  /* Temp return */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    79      VAR(Fee_BlkHeader_tst, AUTOMATIC) xTmpBlkHdr_st;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    80      static uint32  xAdrLastBlkHeader_u32            = FEE_MAXUINT32;        /* Block header address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    81      static boolean xSearchRetry_b;                                          /* First try indicator for finding a block */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    82      uint16 xBlockLength_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    83      uint16 xCalcCrc_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    84  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    85      #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    86      uint8 xPhySectIdxFirstCopy_u8;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    87      uint8 xPhySectIdxSecondCopy_u8;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    88      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    89  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    90  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    91      /* Loop if polling mode is active and function state is pending */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    92      do
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    93      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    94          /* Switch over function state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    95          switch (Fee_RdWrOrder_st.Fee_HLMtBlock_en)
	movh.a	a15,#@his(Fee_RdWrOrder_st)
	lea	a15,[a15]@los(Fee_RdWrOrder_st)
.L135:
	lea	a12,[a15]56

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    96          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    97              /* Init state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    98              case FEE_HL_RDWR_BLK_INIT_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	    99              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   100                  /* Do not maintain single storage blocks */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   101                  if ((Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Flags_u16 &
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   102                          FEE_FLAG_SEC_LEVEL_MSK) == 0u)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   103                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   104                      xRetVal_en = FEE_ORDER_FINISHED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   105                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   106                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   107  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   108                  /* Init last block header address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   109                  xAdrLastBlkHeader_u32 = FEE_MAXUINT32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   110  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   111                  /* Extract the required information from the configuration table */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   112                  Fee_GlobInfoLastRdHeader_st.FeeIndex_u16  =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   113                          Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].BlockPersistentId_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   114                  Fee_GlobInfoLastRdHeader_st.BlkLength_u16 =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   115                          Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Length_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   116                  Fee_GlobInfoLastRdHeader_st.BlkStatus_u8  =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   117                          (uint8)(Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Flags_u16 & (uint16)0x00FF);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   118  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   119                  Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32 = FEE_NULL;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   120                  Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32     = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   121                  Fee_GlobInfoLastRdHeader_st.HdrCrc16_u16     = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   122  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   123                  /* Reset start search indicator */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   124                  xSearchRetry_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   125  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   126                  /* Reset the redundant block flag */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   127                  Fee_Rb_GlobSecurityLevelInfo_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   128  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   129                  #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   130                  /* Reset the flag to invalidate an old copy */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   131                  Fee_Rb_InvalidateOldCopy_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   132  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   133                  /* Indicate Fee_LLCpyBlkFromFls2Fls that Maintain is running */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   134                  Fee_Rb_MaintainRun_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   135                  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   136  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   137                  /* Set next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   138                  Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_SEARCH_BLK_HDR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   139              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   140              /* No break to save time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   141  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   142              /* Search for a block header */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   143              /* MR12 RULE 16.3 VIOLATION: Time critical position */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   144              case FEE_HL_SEARCH_BLK_HDR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   145              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   146                  /* Search for the latest valid block header with the given FeeIdx.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   147                   * The end address for the search can be set with the variable xAdrLastBlkHeader_u32. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   148                  xTmpRetVal_en = Fee_LLSearchSpecifiedBlkHeader(Fee_OrderFifo_st[Fee_idxActQueue_u8].FeeIdx_u16,         /* FeeIdx */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   149                                                                 &xAdrLastBlkHeader_u32,                                  /* End address for the search */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   150                                                                 &Fee_GlobInfoLastRdHeader_st,                            /* Result structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   151                                                                 xSearchRetry_b);                                         /* Indicate first try */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   152  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   153                  /* Evaluate the search result */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   154                  switch (xTmpRetVal_en)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   155                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   156                      /* Order not finished yet */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   157                      case FEE_ORDER_PENDING_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   158                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   159                          /* Just wait */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   160                          ;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   161                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   162                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   163  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   164                      /* A valid block header was found */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   165                      case FEE_ORDER_FINISHED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   166                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   167                          /* Calculate block checksum in flash to check if the block is valid */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   168                          Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_CHECK_BLK_CS_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   169                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   170                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   171  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   172                      case FEE_ERROR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   173                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   174                          #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   175                          if (((Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Flags_u16 & FEE_FLAG_NOFALLBACK_MSK) > 0u) &&
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   176                              (Fee_Rb_GlobSecurityLevelInfo_b != FALSE))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   177                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   178                              /* Only one valid block was found within the complete flash (all sectors have been checked)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   179                               * -> rewrite the block */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   180                              Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   181                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   182                          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   183                          #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   184                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   185                              /* No valid header was found within the complete flash (all sectors have been checked) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   186                              xRetVal_en = FEE_ERROR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   187                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   188                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   189                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   190  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   191                      /* The cache is corrupt */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   192                      case FEE_ABORTED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   193                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   194                          /* The wrong index was found using the cache. The respective entry was already
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   195                           * marked for a manual search during the sector reorganization.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   196                           * --> "Manual search" will start automatically in order to find other copies */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   197  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   198                          /* Indicate retry */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   199                          xSearchRetry_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   200                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   201                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   202  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   203                      /* These cases should never be reached (cannot be returned by Fee_LLSearchSpecifiedBlkHeader) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   204                      case FEE_BLOCK_INVALIDATED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   205                      case FEE_NUM_RET_VAL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   206                      case FEE_ERASE_SECTOR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   207                      case FEE_SECTORCHANGE_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   208                      case FEE_SECTORFULL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   209                      default:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   210                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   211                          /* Return an error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   212                          xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   213                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   214                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   215                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   216              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   217              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   218  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   219              /* A valid header was found, evaluate the block content */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   220              case FEE_HL_CHECK_BLK_CS_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   221              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   222                  /* Calculate the block CRC */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   223                  xTmpRetVal_en = Fee_LLCalcBlkCrcInFlash(&Fee_GlobInfoLastRdHeader_st);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   224  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   225                  /* Evaluate the result */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   226                  switch (xTmpRetVal_en)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   227                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   228                      /* Order is still pending */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   229                      case FEE_ORDER_PENDING_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   230                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   231                          /* Just wait */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   232                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   233                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   234  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   235                      /* Order is finished with success (block CRC is correct) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   236                      case FEE_ORDER_FINISHED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   237                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   238                          if (Fee_Rb_GlobSecurityLevelInfo_b == FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   239                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   240                              /* Store the found valid block header */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   241                              Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32 = Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   242                              Fee_GlobInfoLastRdHeaderMt_st.BlkCrc32_u32     = Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   243                              Fee_GlobInfoLastRdHeaderMt_st.BlkLength_u16    = Fee_GlobInfoLastRdHeader_st.BlkLength_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   244                              Fee_GlobInfoLastRdHeaderMt_st.BlkStatus_u8     = Fee_GlobInfoLastRdHeader_st.BlkStatus_u8;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   245                              Fee_GlobInfoLastRdHeaderMt_st.FeeIndex_u16     = Fee_GlobInfoLastRdHeader_st.FeeIndex_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   246                              Fee_GlobInfoLastRdHeaderMt_st.HdrCrc16_u16     = Fee_GlobInfoLastRdHeader_st.HdrCrc16_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   247  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   248                              /* Reset the block header info for further search */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   249                              Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   250  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   251                              /* Set the second search flag */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   252                              Fee_Rb_GlobSecurityLevelInfo_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   253  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   254                              /* Load the limit address for next search: if the limit is not given with FEE_MAXUINT32,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   255                               * next search happens only on current sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   256                              xAdrLastBlkHeader_u32 = Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   257  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   258                              #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   259                              if ((Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Flags_u16 & FEE_FLAG_NOFALLBACK_MSK) > 0u)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   260                              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   261                                  /* Indicate a retry (necessary to search a second version of a NoFallback block) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   262                                  xSearchRetry_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   263  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   264                                  /* Search for a second copy or version of this block */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   265                                  Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_SEARCH_BLK_HDR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   266                              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   267                              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   268                              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   269                              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   270                                  /* Temporary block length without alignment */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   271                                  xBlockLength_u16 = Fee_GlobInfoLastRdHeaderMt_st.BlkLength_u16 + FEE_BLOCK_OVERHEAD;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   272  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   273                                  /* Alignment with FEE_PAGE_LEN */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   274                                  while ((xBlockLength_u16 % (uint16)FEE_PAGE_LEN) != 0)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   275                                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   276                                      xBlockLength_u16++;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   277                                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   278  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   279                                  /* Calculate the possible start address of next copy */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   280                                  xAdrLastBlkHeader_u32 -= xBlockLength_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   281  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   282                                  /* Check if this address on the same sector of the found block or not */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   283                                  if (xAdrLastBlkHeader_u32 < Fee_LLGetSecStartAddress(Fee_GetPhysSectorByAddress(Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32)))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   284                                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   285                                      /* The next copy does not exist in this sector, rewrite this block directly */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   286                                      Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   287                                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   288                                  else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   289                                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   290                                      /* Start to read block header in calculated address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   291                                      if (Fls_Read(xAdrLastBlkHeader_u32, (uint8*)&Fee_PageBytePtr_cpu8[0], FEE_BLOCK_OVERHEAD) != E_NOT_OK)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   292                                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   293                                          /* Set next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   294                                          Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_READ_BLK_HDR_WAIT_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   295  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   296                                          /* Update the next header address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   297                                          Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32 = xAdrLastBlkHeader_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   298                                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   299                                      else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   300                                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   301                                          /* Fls did not accept the order due to wrong parameters or an internal busy state.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   302                                           * Reset the state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   303                                          xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   304                                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   305                                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   306                              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   307                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   308                          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   309                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   310                              #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   311                              if ((Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].Flags_u16 & FEE_FLAG_NOFALLBACK_MSK) > 0u)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   312                              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   313                                  /* Get the sector index of both copies */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   314                                  xPhySectIdxFirstCopy_u8 = Fee_GetPhysSectorByAddress(Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   315                                  xPhySectIdxSecondCopy_u8 = Fee_GetPhysSectorByAddress(Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   316  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   317                                  /* In case the function is called during shutdown the block has to be restored and a
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   318                                   * possibly available old copy destroyed!
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   319                                   * -> Check if the block CRC of both copies are equal
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   320                                   * -> Check if the second copy starts in the same sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   321                                  if ((Fee_GlobInfoLastRdHeaderMt_st.BlkCrc32_u32 != Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32) ||
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   322                                      (xPhySectIdxFirstCopy_u8 != xPhySectIdxSecondCopy_u8))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   323                                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   324                                      /* The old copy needs to be invalidated first! */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   325                                      Fee_Rb_InvalidateOldCopy_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   326  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   327                                      Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   328                                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   329                                  else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   330                                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   331                                      /* The cache was updated with the address of the second valid version of the block
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   332                                       * -> restore the cache with the address of the latest copy */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   333                                      Fee_LLUpdateAddressInCache(Fee_GlobInfoLastRdHeaderMt_st.FeeIndex_u16,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   334                                                                 Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   335  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   336                                      /* The block CRC of the second copy has been checked already and is equal to the first copy
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   337                                       * -> no repair needed */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   338                                      xRetVal_en = FEE_ORDER_FINISHED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   339                                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   340                              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   341                              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   342                              #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   343                              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   344                                  /* The cache was updated with the address of the second valid version of the block
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   345                                   * -> restore the cache with the address of the latest copy */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   346                                  Fee_LLUpdateAddressInCache(Fee_GlobInfoLastRdHeaderMt_st.FeeIndex_u16,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   347                                                             Fee_GlobInfoLastRdHeaderMt_st.AdrBlkHeader_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   348  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   349                                  /* The block CRC of the second copy has been checked already and is equal to the first copy
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   350                                   * -> no repair needed */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   351                                  xRetVal_en = FEE_ORDER_FINISHED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   352                              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   353                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   354                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   355                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   356  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   357                      /* The checksum is invalid (block CRC is incorrect) or a read error occurred */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   358                      case FEE_ERROR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   359                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   360                          /* Error during CRC detected:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   361                           * -> For the 1. copy: search further
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   362                           * -> For the 2. copy: repair it with the found block */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   363  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   364                          if(Fee_Rb_GlobSecurityLevelInfo_b == FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   365                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   366                              /* Indicate a retry */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   367                              xSearchRetry_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   368  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   369                              xAdrLastBlkHeader_u32 = Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   370  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   371                              /* Search for an older copy (last header address was already set in the last state) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   372                              Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_SEARCH_BLK_HDR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   373                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   374                          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   375                          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   376                              /* Start to repair */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   377                              Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   378                          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   379                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   380                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   381  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   382                      /* These states should never be reached (cannot be returned by Fee_LLCalcBlkCrcInFlash) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   383                      case FEE_BLOCK_INVALIDATED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   384                      case FEE_NUM_RET_VAL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   385                      case FEE_ERASE_SECTOR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   386                      case FEE_SECTORCHANGE_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   387                      case FEE_SECTORFULL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   388                      case FEE_ABORTED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   389                      default:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   390                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   391                          /* Return an error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   392                          xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   393                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   394                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   395                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   396              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   397              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   398  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   399              /* Search for a block header */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   400              case FEE_HL_READ_BLK_HDR_WAIT_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   401              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   402                  /* The next state will be set by the Fee_JobEndNotification() or
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   403                   * Fee_JobErrorNotification() function automatically (the verification of the data will be done
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   404                   * in one step after the data was read) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   405  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   406                  /* Check whether the OS is currently running or not */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   407                  if (Fee_stMain == FEE_POLLING_MODE_E)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   408                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   409                      /* Call the Fls main function manually */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   410                      Fls_MainFunction();
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   411                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   412  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   413                  #if (STD_ON == FEE_POLLING_MODE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   414                  /* Use the FLS polling mechanism in order to reach the next state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   415                  Fee_CheckFlsJobResult();
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   416                  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   417              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   418              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   419  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   420              case FEE_HL_CHECK_BLK_HDR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   421              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   422                  /* Compare the preamble of the block header byte - wise */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   423                  if ((Fee_PageBytePtr_cpu8[2] == FEE_BLK_HEADER_PREAMBEL_BYTE_2) &&
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   424                      (Fee_PageBytePtr_cpu8[1] == FEE_BLK_HEADER_PREAMBEL_BYTE_1) &&
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   425                      (Fee_PageBytePtr_cpu8[0] == FEE_BLK_HEADER_PREAMBEL_BYTE_0))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   426                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   427                      /* Extract the rest up to the Crc32 out of the page buffer and copy it to the block structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   428                      Fee_LLCopyPageBuff2HeaderMid(&xTmpBlkHdr_st, &Fee_PageBytePtr_cpu8[0]);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   429  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   430                      /* Check the block header CRC */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   431                      xCalcCrc_u16 = Crc_CalculateCRC16((uint8*)&Fee_PageBytePtr_cpu8[0],
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   432                                                        (uint32)(FEE_BLK_HEADER_SIZE - 6u),
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   433                                                        (uint16)FEE_MARKER_PATTERN,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   434                                                        FALSE);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   435  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   436                     /* Check the header consistency and persistent ID */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   437                     if ((xCalcCrc_u16 == xTmpBlkHdr_st.HdrCrc16_u16) &&
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   438                         (xTmpBlkHdr_st.FeeIndex_u16 == Fee_BlockProperties_st[Fee_OrderFifo_st[Fee_idxActQueue_u8].BlockPropIdx_u16].BlockPersistentId_u16))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   439                     {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   440                        /* This is a valid header. Nevertheless it is possible that this order was not finished correct
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   441                         * or that the block checksum is wrong. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   442  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   443                        /* Extract the rest out of the page buffer and copy it to the block structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   444                        Fee_LLCopyPageBuff2HeaderEnd(&xTmpBlkHdr_st, &Fee_PageBytePtr_cpu8[0]);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   445  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   446                        /* Load the valid block header info to global header structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   447                        Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32  = xTmpBlkHdr_st.BlkCrc32_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   448                        Fee_GlobInfoLastRdHeader_st.BlkLength_u16 = xTmpBlkHdr_st.BlkLength_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   449                        Fee_GlobInfoLastRdHeader_st.BlkStatus_u8  = xTmpBlkHdr_st.BlkStatus_u8;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   450                        Fee_GlobInfoLastRdHeader_st.FeeIndex_u16  = xTmpBlkHdr_st.FeeIndex_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   451                        Fee_GlobInfoLastRdHeader_st.HdrCrc16_u16  = xTmpBlkHdr_st.HdrCrc16_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   452  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   453                        /* Compare the block data checksum at first for both copies */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   454                        if (Fee_GlobInfoLastRdHeaderMt_st.BlkCrc32_u32 == Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   455                        {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   456                            /* Calculate block checksum in flash to check if the block is valid */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   457                            Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_CHECK_BLK_CS_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   458                        }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   459                        else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   460                        {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   461                            /* Different data checksum --> Start to repair directly */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   462                            Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   463                        }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   464                     }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   465                     else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   466                     {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   467                         /* 2. copy header corrupt --> Start to repair */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   468                         Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   469                     }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   470                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   471                  else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   472                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   473                      /* 2. copy header not found --> Start to repair */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   474                      Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_WR_BLK_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   475                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   476              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   477              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   478  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   479              /* Write a block into the latest sector twice */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   480              case FEE_HL_WR_BLK_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   481              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   482                  /* Copy the block from the old sector (Fee_GlobInfoLastRdHeader_st->AdrBlkHeader_u32) to the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   483                   * new sector (Fee_RdWrOrder_st.xWrAddress). If the security level is greater than 1, the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   484                   * same block (latest valid copy) is copied twice automatically. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   485                  xTmpRetVal_en = Fee_LLCpyBlkFromFls2Fls(&Fee_GlobInfoLastRdHeaderMt_st, TRUE);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   486  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   487                  /* Evaluate the function return */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   488                  switch (xTmpRetVal_en)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   489                  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   490                      /* Order not finished yet */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   491                      case FEE_ORDER_PENDING_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   492                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   493                          /* Just wait */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   494                          ;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   495                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   496                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   497  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   498                      /* All copies of the respective block were copied and verified */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   499                      case FEE_ORDER_FINISHED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   500                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   501                          xRetVal_en = FEE_ORDER_FINISHED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   502                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   503                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   504  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   505                      /* An error occurred during the read, write or verify sequence
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   506                       * (3 retries for read, write or verify failed in case the orders
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   507                       *  have been accepted by the Fls before)*/
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   508                      case FEE_ERROR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   509                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   510                          xRetVal_en = FEE_ERROR_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   511                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   512  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   513                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   514  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   515                      /* The reorganization was aborted and the USED sector was erased */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   516                      case FEE_ABORTED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   517                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   518                          xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   519                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   520                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   521  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   522                      /* These states should never be reached (cannot be returned by Fee_LLCpyBlkFromFls2Fls) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   523                      case FEE_ERASE_SECTOR_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   524                      case FEE_SECTORCHANGE_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   525                      case FEE_SECTORFULL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   526                      case FEE_BLOCK_INVALIDATED_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   527                      case FEE_NUM_RET_VAL_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   528                      default:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   529                      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   530                          xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   531                      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   532                      break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   533                  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   534              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   535              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   536              /* Cases are not reachable for the write function */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   537              case FEE_HL_RD_DATA_FROM_BLK_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   538              case FEE_HL_COMP_BLK_E:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   539              default:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   540              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   541                  /* Return an error */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   542                  xRetVal_en = FEE_ABORTED_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   543              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   544              break;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   545          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   546      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   547      while ((Fee_stMain == FEE_POLLING_MODE_E) && (xRetVal_en == FEE_ORDER_PENDING_E));
.L2:
	ld.w	d0,[a12]
.L136:
	mov	d15,#0
	jeq	d15,d0,.L3
.L137:
	mov	d1,#1
	jeq	d1,d0,.L4
.L138:
	mov	d1,#2
	jeq	d1,d0,.L5
.L139:
	mov	d1,#3
	jeq	d1,d0,.L6
.L140:
	mov	d1,#5
	jeq	d1,d0,.L7
.L141:
	mov	d1,#6
	jeq	d1,d0,.L8
.L142:
	mov	d15,#7
	jeq	d15,d0,.L9
.L143:
	mov	d15,#8
	jeq	d15,d0,.L10
	j	.L11
.L3:
	movh.a	a15,#@his(Fee_idxActQueue_u8)
	lea	a15,[a15]@los(Fee_idxActQueue_u8)
	ld.bu	d15,[a15]
.L144:
	mul	d15,d15,#24
.L145:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L146:
	addsc.a	a15,a15,d15,#0
.L147:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L148:
	movh.a	a15,#@his(Fee_BlockProperties_st)
	lea	a15,[a15]@los(Fee_BlockProperties_st)
.L149:
	addsc.a	a2,a15,d15,#0
.L150:
	ld.hu	d0,[a2]2
.L151:
	jnz.t	d0:0,.L12
.L152:
	mov	d8,#1
.L153:
	j	.L13
.L12:
	movh.a	a15,#@his(_999001_xAdrLastBlkHeader_u32)
	lea	a15,[a15]@los(_999001_xAdrLastBlkHeader_u32)
.L154:
	mov	d15,#-1
.L155:
	st.w	[a15],d15
.L156:
	movh.a	a15,#@his(Fee_GlobInfoLastRdHeader_st)
	lea	a15,[a15]@los(Fee_GlobInfoLastRdHeader_st)
.L157:
	ld.hu	d15,[a2]0
.L158:
	st.h	[a15]12,d15
.L159:
	ld.hu	d15,[a2]4
.L160:
	st.h	[a15]10,d15
.L161:
	st.b	[a15]14,d0
.L162:
	mov	d15,#0
.L163:
	st.w	[a15],d15
.L164:
	mov.aa	a2,a15
	add.a	a2,#4
.L165:
	mov	d15,#0
.L166:
	st.w	[a2],d15
.L167:
	mov	d15,#0
.L168:
	st.h	[a15]8,d15
.L169:
	movh.a	a15,#@his(_999002_xSearchRetry_b)
	lea	a15,[a15]@los(_999002_xSearchRetry_b)
.L170:
	mov	d15,#0
.L171:
	st.b	[a15],d15
.L172:
	movh.a	a15,#@his(Fee_Rb_GlobSecurityLevelInfo_b)
	lea	a15,[a15]@los(Fee_Rb_GlobSecurityLevelInfo_b)
.L173:
	mov	d15,#0
.L174:
	st.b	[a15],d15
.L175:
	mov	d15,#1
.L176:
	st.w	[a12],d15
.L4:
	movh.a	a4,#@his(_999001_xAdrLastBlkHeader_u32)
	lea	a4,[a4]@los(_999001_xAdrLastBlkHeader_u32)
.L177:
	movh.a	a5,#@his(Fee_GlobInfoLastRdHeader_st)
	lea	a5,[a5]@los(Fee_GlobInfoLastRdHeader_st)
.L178:
	movh.a	a13,#@his(_999002_xSearchRetry_b)
	lea	a13,[a13]@los(_999002_xSearchRetry_b)
.L179:
	movh.a	a15,#@his(Fee_idxActQueue_u8)
	lea	a15,[a15]@los(Fee_idxActQueue_u8)
	ld.bu	d15,[a15]
.L180:
	mul	d15,d15,#24
.L181:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L182:
	addsc.a	a15,a15,d15,#0
.L183:
	ld.hu	d4,[a15]4
.L184:
	ld.bu	d5,[a13]
	call	Fee_LLSearchSpecifiedBlkHeader
.L116:
	mov	d15,#0
	jeq	d15,d2,.L14
.L185:
	mov	d15,#1
	jeq	d15,d2,.L15
.L186:
	mov	d15,#2
	jeq	d15,d2,.L16
.L187:
	mov	d15,#3
	jeq	d15,d2,.L17
.L188:
	mov	d15,#4
	jeq	d15,d2,.L18
.L189:
	mov	d15,#5
	jeq	d15,d2,.L19
.L190:
	mov	d15,#6
	jeq	d15,d2,.L20
.L191:
	mov	d15,#7
	jeq	d15,d2,.L21
.L192:
	mov	d15,#9
	jeq	d15,d2,.L22
	j	.L23
.L14:
	j	.L24
.L15:
	mov	d15,#5
.L193:
	st.w	[a12],d15
.L194:
	j	.L25
.L17:
	mov	d8,#3
.L195:
	j	.L26
.L20:
	mov	d15,#1
.L196:
	st.b	[a13],d15
.L197:
	j	.L27
.L16:
.L22:
.L21:
.L18:
.L19:
.L23:
	mov	d8,#6
.L198:
	j	.L28
.L28:
.L27:
.L26:
.L25:
.L24:
	j	.L29
.L7:
	movh.a	a13,#@his(Fee_GlobInfoLastRdHeader_st)
	lea	a13,[a13]@los(Fee_GlobInfoLastRdHeader_st)
	mov.aa	a4,a13
	call	Fee_LLCalcBlkCrcInFlash
.L117:
	mov	d15,#0
	jeq	d15,d2,.L30
.L199:
	mov	d15,#1
	jeq	d15,d2,.L31
.L200:
	mov	d15,#2
	jeq	d15,d2,.L32
.L201:
	mov	d15,#3
	jeq	d15,d2,.L33
.L202:
	mov	d15,#4
	jeq	d15,d2,.L34
.L203:
	mov	d15,#5
	jeq	d15,d2,.L35
.L204:
	mov	d15,#6
	jeq	d15,d2,.L36
.L205:
	mov	d15,#7
	jeq	d15,d2,.L37
.L206:
	mov	d15,#9
	jeq	d15,d2,.L38
	j	.L39
.L30:
	j	.L40
.L31:
	movh.a	a15,#@his(Fee_GlobInfoLastRdHeaderMt_st)
	lea	a15,[a15]@los(Fee_GlobInfoLastRdHeaderMt_st)
.L207:
	lea	a2,[a15]12
.L208:
	movh.a	a4,#@his(Fee_Rb_GlobSecurityLevelInfo_b)
	lea	a4,[a4]@los(Fee_Rb_GlobSecurityLevelInfo_b)
	ld.bu	d15,[a4]
.L209:
	jne	d15,#0,.L41
.L210:
	ld.w	d15,[a13]
.L211:
	st.w	[a15],d15
.L212:
	mov.aa	a5,a13
	add.a	a5,#4
	ld.w	d15,[a5]
.L213:
	st.w	[a15]4,d15
.L214:
	lea	a6,[a15]10
.L215:
	ld.hu	d15,[a13]10
.L216:
	st.h	[a6],d15
.L217:
	ld.bu	d15,[a13]14
.L218:
	st.b	[a15]14,d15
.L219:
	ld.hu	d15,[a13]12
.L220:
	st.h	[a2],d15
.L221:
	ld.hu	d15,[a13]8
.L222:
	st.h	[a15]8,d15
.L223:
	mov	d15,#0
.L224:
	st.w	[a5],d15
.L225:
	mov	d15,#1
.L226:
	st.b	[a4],d15
.L227:
	ld.w	d4,[a15]
.L228:
	movh.a	a14,#@his(_999001_xAdrLastBlkHeader_u32)
	lea	a14,[a14]@los(_999001_xAdrLastBlkHeader_u32)
.L229:
	st.w	[a14],d4
.L230:
	ld.hu	d15,[a15]10
.L231:
	add	d15,d15,#14
	extr.u	d0,d15,#0,#16
.L119:
	j	.L42
.L43:
	add	d0,#1
.L120:
	extr.u	d0,d0,#0,#16
.L42:
	and	d15,d0,#7
.L232:
	jne	d15,#0,.L43
.L233:
	sub	d15,d4,d0
	st.w	[a14],d15
.L234:
	call	Fee_GetPhysSectorByAddress
.L118:
	ld.w	d15,[a14]
.L235:
	mov	d4,d2
	call	Fee_LLGetSecStartAddress
.L236:
	jge.u	d15,d2,.L44
.L237:
	mov	d15,#8
.L238:
	st.w	[a12],d15
.L239:
	j	.L45
.L44:
	movh.a	a15,#@his(Fee_PageBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_PageBytePtr_cpu8)
	ld.a	a4,[a15]
	mov	d5,#14
	mov	d4,d15
	call	Fls_17_Pmu_Read
.L240:
	jeq	d2,#1,.L46
.L241:
	mov	d15,#2
.L242:
	st.w	[a12],d15
.L243:
	ld.w	d15,[a14]
.L244:
	st.w	[a13],d15
.L245:
	j	.L47
.L46:
	mov	d8,#6
.L47:
.L45:
	j	.L48
.L41:
	ld.hu	d4,[a15]12
.L246:
	ld.w	d5,[a15]
	call	Fee_LLUpdateAddressInCache
.L121:
	mov	d8,#1
.L48:
	j	.L49
.L33:
	movh.a	a15,#@his(Fee_Rb_GlobSecurityLevelInfo_b)
	lea	a15,[a15]@los(Fee_Rb_GlobSecurityLevelInfo_b)
	ld.bu	d15,[a15]
.L247:
	jne	d15,#0,.L50
.L248:
	movh.a	a15,#@his(_999002_xSearchRetry_b)
	lea	a15,[a15]@los(_999002_xSearchRetry_b)
.L249:
	mov	d15,#1
.L250:
	st.b	[a15],d15
.L251:
	movh.a	a15,#@his(_999001_xAdrLastBlkHeader_u32)
	lea	a15,[a15]@los(_999001_xAdrLastBlkHeader_u32)
.L252:
	ld.w	d15,[a13]
.L253:
	st.w	[a15],d15
.L254:
	mov	d15,#1
.L255:
	st.w	[a12],d15
.L256:
	j	.L51
.L50:
	mov	d15,#8
.L257:
	st.w	[a12],d15
.L51:
	j	.L52
.L32:
.L38:
.L37:
.L34:
.L35:
.L36:
.L39:
	mov	d8,#6
.L258:
	j	.L53
.L53:
.L52:
.L49:
.L40:
	j	.L54
.L5:
	movh.a	a15,#@his(Fee_stMain)
	lea	a15,[a15]@los(Fee_stMain)
	ld.w	d15,[a15]
.L259:
	jne	d15,#0,.L55
.L260:
	call	Fls_17_Pmu_MainFunction
.L55:
	call	Fee_CheckFlsJobResult
.L261:
	j	.L56
.L6:
	movh.a	a13,#@his(Fee_PageBytePtr_cpu8)
	lea	a13,[a13]@los(Fee_PageBytePtr_cpu8)
	ld.a	a5,[a13]
.L262:
	ld.bu	d0,[a5]2
.L263:
	mov	d15,#150
.L264:
	jne	d15,d0,.L57
.L265:
	ld.bu	d0,[a5]1
.L266:
	mov	d15,#60
.L267:
	jne	d15,d0,.L58
.L268:
	ld.bu	d0,[a5]
.L269:
	mov	d15,#165
.L270:
	jne	d15,d0,.L59
.L271:
	lea	a4,[a10]0
.L272:
	call	Fee_LLCopyPageBuff2HeaderMid
.L273:
	ld.a	a4,[a13]
.L274:
	mov	d4,#8
.L275:
	mov.u	d5,#51966
.L276:
	mov	d6,#0
	call	Crc_CalculateCRC16
.L122:
	ld.hu	d15,[a10]8
.L277:
	jne	d15,d2,.L60
.L278:
	ld.hu	d0,[a10]4
.L279:
	movh.a	a15,#@his(Fee_idxActQueue_u8)
	lea	a15,[a15]@los(Fee_idxActQueue_u8)
	ld.bu	d15,[a15]
.L280:
	mul	d15,d15,#24
.L281:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L282:
	addsc.a	a15,a15,d15,#0
.L283:
	ld.hu	d15,[a15]6
	sha	d15,#4
.L284:
	movh.a	a15,#@his(Fee_BlockProperties_st)
	lea	a15,[a15]@los(Fee_BlockProperties_st)
.L285:
	addsc.a	a15,a15,d15,#0
.L286:
	ld.hu	d15,[a15]0
.L287:
	jne	d15,d0,.L61
.L288:
	lea	a4,[a10]0
.L289:
	ld.a	a5,[a13]
.L290:
	call	Fee_LLCopyPageBuff2HeaderEnd
.L123:
	movh.a	a15,#@his(Fee_GlobInfoLastRdHeader_st)
	lea	a15,[a15]@los(Fee_GlobInfoLastRdHeader_st)
.L291:
	mov.aa	a2,a15
	add.a	a2,#4
.L292:
	ld.w	d15,[a10]12
.L293:
	st.w	[a2],d15
.L294:
	ld.hu	d15,[a10]6
.L295:
	st.h	[a15]10,d15
.L296:
	ld.bu	d15,[a10]3
.L297:
	st.b	[a15]14,d15
.L298:
	ld.hu	d15,[a10]4
.L299:
	st.h	[a15]12,d15
.L300:
	ld.hu	d15,[a10]8
.L301:
	st.h	[a15]8,d15
.L302:
	movh.a	a15,#@his(Fee_GlobInfoLastRdHeaderMt_st)
	lea	a15,[a15]@los(Fee_GlobInfoLastRdHeaderMt_st)
.L303:
	ld.w	d15,[a15]4
.L304:
	ld.w	d0,[a2]
.L305:
	jne	d15,d0,.L62
.L306:
	mov	d15,#5
.L307:
	st.w	[a12],d15
.L308:
	j	.L63
.L62:
	mov	d15,#8
.L309:
	st.w	[a12],d15
.L63:
	j	.L64
.L61:
.L60:
	mov	d15,#8
.L310:
	st.w	[a12],d15
.L64:
	j	.L65
.L59:
.L58:
.L57:
	mov	d15,#8
.L311:
	st.w	[a12],d15
.L65:
	j	.L66
.L10:
	movh.a	a4,#@his(Fee_GlobInfoLastRdHeaderMt_st)
	lea	a4,[a4]@los(Fee_GlobInfoLastRdHeaderMt_st)
.L312:
	mov	d4,#1
	call	Fee_LLCpyBlkFromFls2Fls
.L124:
	mov	d15,#0
	jeq	d15,d2,.L67
.L313:
	mov	d15,#1
	jeq	d15,d2,.L68
.L314:
	mov	d15,#2
	jeq	d15,d2,.L69
.L315:
	mov	d15,#3
	jeq	d15,d2,.L70
.L316:
	mov	d15,#4
	jeq	d15,d2,.L71
.L317:
	mov	d15,#5
	jeq	d15,d2,.L72
.L318:
	mov	d15,#6
	jeq	d15,d2,.L73
.L319:
	mov	d15,#7
	jeq	d15,d2,.L74
.L320:
	mov	d15,#9
	jeq	d15,d2,.L75
	j	.L76
.L67:
	j	.L77
.L68:
	mov	d8,#1
.L321:
	j	.L78
.L70:
	mov	d8,#3
.L322:
	j	.L79
.L73:
	mov	d8,#6
.L323:
	j	.L80
.L74:
.L71:
.L72:
.L69:
.L75:
.L76:
	mov	d8,#6
.L324:
	j	.L81
.L81:
.L80:
.L79:
.L78:
.L77:
	j	.L82
.L8:
.L9:
.L11:
	mov	d8,#6
.L325:
	j	.L83
.L83:
.L82:
.L66:
.L56:
.L54:
.L29:
.L13:
	movh.a	a15,#@his(Fee_stMain)
	lea	a15,[a15]@los(Fee_stMain)
	ld.w	d15,[a15]
.L326:
	jne	d15,#0,.L84
.L327:
	jeq	d8,#0,.L2
.L84:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   548  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   549      /* Reset state machine if necessary */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   550      if (xRetVal_en != FEE_ORDER_PENDING_E)
	jeq	d8,#0,.L85
.L328:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   551      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   552          /* Reset state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   553          Fee_RdWrOrder_st.Fee_HLMtBlock_en = FEE_HL_RDWR_BLK_INIT_E;
	mov	d15,#0
.L329:
	st.w	[a12],d15
.L330:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   554  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   555          /* Reset the end address of the search */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   556          xAdrLastBlkHeader_u32 = FEE_MAXUINT32;
	movh.a	a15,#@his(_999001_xAdrLastBlkHeader_u32)
	lea	a15,[a15]@los(_999001_xAdrLastBlkHeader_u32)
.L331:
	mov	d15,#-1
.L332:
	st.w	[a15],d15
.L85:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   557  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   558          #if (FEE_NO_FALLBACK_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   559          /* Reset the Maintain indication flag for Fee_LLCpyBlkFromFls2Fls */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   560          Fee_Rb_MaintainRun_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   561          #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   562      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   563  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   564      return (xRetVal_en);
	mov	d2,d8
.L125:
	j	.L86

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   565  }
.L86:
	ret
.L103:
	
__Fee_HLMaintainBlock_function_end:
	.size	Fee_HLMaintainBlock,__Fee_HLMaintainBlock_function_end-Fee_HLMaintainBlock
.L97:
	; End of function
	
	.sdecl	'.bss.rba_FeeFs1_HlMaintainBlock.Fee_GlobInfoLastRdHeaderMt_st',data,cluster('Fee_GlobInfoLastRdHeaderMt_st')
	.sect	'.bss.rba_FeeFs1_HlMaintainBlock.Fee_GlobInfoLastRdHeaderMt_st'
	.align	4
Fee_GlobInfoLastRdHeaderMt_st:	.type	object
	.size	Fee_GlobInfoLastRdHeaderMt_st,16
	.space	16
	.sdecl	'.data.rba_FeeFs1_HlMaintainBlock.Fee_Rb_GlobSecurityLevelInfo_b',data,cluster('Fee_Rb_GlobSecurityLevelInfo_b')
	.sect	'.data.rba_FeeFs1_HlMaintainBlock.Fee_Rb_GlobSecurityLevelInfo_b'
Fee_Rb_GlobSecurityLevelInfo_b:	.type	object
	.size	Fee_Rb_GlobSecurityLevelInfo_b,1
	.space	1
	.sdecl	'.data.rba_FeeFs1_HlMaintainBlock._999001_xAdrLastBlkHeader_u32',data,cluster('_999001_xAdrLastBlkHeader_u32')
	.sect	'.data.rba_FeeFs1_HlMaintainBlock._999001_xAdrLastBlkHeader_u32'
	.align	4
_999001_xAdrLastBlkHeader_u32:	.type	object
	.size	_999001_xAdrLastBlkHeader_u32,4
	.word	-1
	.sdecl	'.bss.rba_FeeFs1_HlMaintainBlock._999002_xSearchRetry_b',data,cluster('_999002_xSearchRetry_b')
	.sect	'.bss.rba_FeeFs1_HlMaintainBlock._999002_xSearchRetry_b'
_999002_xSearchRetry_b:	.type	object
	.size	_999002_xSearchRetry_b,1
	.space	1
	.calls	'Fee_HLMaintainBlock','Fee_LLSearchSpecifiedBlkHeader'
	.calls	'Fee_HLMaintainBlock','Fee_LLCalcBlkCrcInFlash'
	.calls	'Fee_HLMaintainBlock','Fee_GetPhysSectorByAddress'
	.calls	'Fee_HLMaintainBlock','Fee_LLGetSecStartAddress'
	.calls	'Fee_HLMaintainBlock','Fls_17_Pmu_Read'
	.calls	'Fee_HLMaintainBlock','Fee_LLUpdateAddressInCache'
	.calls	'Fee_HLMaintainBlock','Fls_17_Pmu_MainFunction'
	.calls	'Fee_HLMaintainBlock','Fee_CheckFlsJobResult'
	.calls	'Fee_HLMaintainBlock','Fee_LLCopyPageBuff2HeaderMid'
	.calls	'Fee_HLMaintainBlock','Crc_CalculateCRC16'
	.calls	'Fee_HLMaintainBlock','Fee_LLCopyPageBuff2HeaderEnd'
	.calls	'Fee_HLMaintainBlock','Fee_LLCpyBlkFromFls2Fls'
	.extern	Fls_17_Pmu_MainFunction
	.extern	Fls_17_Pmu_Read
	.extern	Fee_stMain
	.extern	Fee_PageBytePtr_cpu8
	.extern	Fee_RdWrOrder_st
	.extern	Fee_OrderFifo_st
	.extern	Fee_GlobInfoLastRdHeader_st
	.extern	Fee_idxActQueue_u8
	.extern	Fee_BlockProperties_st
	.extern	Fee_GetPhysSectorByAddress
	.extern	Fee_LLSearchSpecifiedBlkHeader
	.extern	Fee_LLGetSecStartAddress
	.extern	Fee_LLCalcBlkCrcInFlash
	.extern	Fee_LLCpyBlkFromFls2Fls
	.extern	Fee_LLCopyPageBuff2HeaderMid
	.extern	Fee_LLCopyPageBuff2HeaderEnd
	.extern	Fee_LLUpdateAddressInCache
	.extern	Fee_CheckFlsJobResult
	.extern	Crc_CalculateCRC16
	.calls	'Fee_HLMaintainBlock','',16
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L90:
	.word	17111
	.half	3
	.word	.L91
	.byte	4
.L89:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L92
.L108:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Fee_SrvRoundUp',0,3,1,140,11,21
	.word	159
	.byte	1,1,4
	.byte	'value_u32',0,1,140,11,43
	.word	159
	.byte	4
	.byte	'stepsize_u32',0,1,140,11,62
	.word	159
	.byte	5,0,6
	.byte	'Fls_17_Pmu_MainFunction',0,2,134,8,13,1,1,1,1
.L109:
	.byte	2
	.byte	'unsigned char',0,1,8,7
	.word	278
	.byte	8
	.byte	'Fls_17_Pmu_Read',0,2,192,8,23
	.word	278
	.byte	1,1,1,1,4
	.byte	'SourceAddress',0,2,192,8,56
	.word	159
	.byte	4
	.byte	'TargetAddressPtr',0,2,193,8,40
	.word	295
	.byte	4
	.byte	'Length',0,2,194,8,48
	.word	159
	.byte	0,8
	.byte	'Fee_GetPhysSectorByAddress',0,1,171,8,31
	.word	278
	.byte	1,1,1,1,4
	.byte	'Address_u32',0,1,171,8,81
	.word	159
	.byte	0
.L102:
	.byte	9,1,137,2,9,4,10
	.byte	'FEE_ORDER_PENDING_E',0,0,10
	.byte	'FEE_ORDER_FINISHED_E',0,1,10
	.byte	'FEE_BLOCK_INVALIDATED_E',0,2,10
	.byte	'FEE_ERROR_E',0,3,10
	.byte	'FEE_SECTORCHANGE_E',0,4,10
	.byte	'FEE_SECTORFULL_E',0,5,10
	.byte	'FEE_ABORTED_E',0,6,10
	.byte	'FEE_ERASE_SECTOR_E',0,7,10
	.byte	'FEE_SEARCH_ABORTED_E',0,8,10
	.byte	'FEE_NUM_RET_VAL_E',0,9,0
.L110:
	.byte	2
	.byte	'unsigned short int',0,2,7,7
	.word	159
.L113:
	.byte	11,1,227,5,9,16,12
	.byte	'AdrBlkHeader_u32',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'BlkCrc32_u32',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'HdrCrc16_u16',0
	.word	669
	.byte	2,2,35,8,12
	.byte	'BlkLength_u16',0
	.word	669
	.byte	2,2,35,10,12
	.byte	'FeeIndex_u16',0
	.word	669
	.byte	2,2,35,12,12
	.byte	'BlkStatus_u8',0
	.word	278
	.byte	1,2,35,14,0,7
	.word	696
	.byte	8
	.byte	'Fee_LLSearchSpecifiedBlkHeader',0,1,188,8,41
	.word	457
	.byte	1,1,1,1,4
	.byte	'FeeIdx_u16',0,1,188,8,95
	.word	669
	.byte	4
	.byte	'LastHdrAddr_ptr',0,1,189,8,112
	.word	691
	.byte	4
	.byte	'GlobBlkHdr_ptr',0,1,190,8,134,1
	.word	840
	.byte	4
	.byte	'SearchRetry_b',0,1,191,8,96
	.word	278
	.byte	0,8
	.byte	'Fee_LLGetSecStartAddress',0,1,206,8,31
	.word	159
	.byte	1,1,1,1,4
	.byte	'xPhySectorIdx_u8',0,1,206,8,78
	.word	278
	.byte	0,13
	.word	696
	.byte	7
	.word	1048
	.byte	8
	.byte	'Fee_LLCalcBlkCrcInFlash',0,1,212,8,41
	.word	457
	.byte	1,1,1,1,4
	.byte	'HeaderInfo_pcst',0,1,212,8,129,1
	.word	1053
	.byte	0,8
	.byte	'Fee_LLCpyBlkFromFls2Fls',0,1,213,8,41
	.word	457
	.byte	1,1,1,1,4
	.byte	'Fee_GlobInfoLastRdHeader_pcst',0,1,213,8,129,1
	.word	1053
	.byte	4
	.byte	'Fee_WriteTwice_b',0,1,213,8,168,1
	.word	278
	.byte	0,14,3
	.word	278
	.byte	15,2,0
.L106:
	.byte	11,1,151,6,9,16,12
	.byte	'Preamble_au8',0
	.word	1227
	.byte	3,2,35,0,12
	.byte	'BlkStatus_u8',0
	.word	278
	.byte	1,2,35,3,12
	.byte	'FeeIndex_u16',0
	.word	669
	.byte	2,2,35,4,12
	.byte	'BlkLength_u16',0
	.word	669
	.byte	2,2,35,6,12
	.byte	'HdrCrc16_u16',0
	.word	669
	.byte	2,2,35,8,12
	.byte	'BlkCrc32_u32',0
	.word	159
	.byte	4,2,35,12,0,7
	.word	1236
	.byte	13
	.word	278
	.byte	7
	.word	1381
	.byte	16
	.byte	'Fee_LLCopyPageBuff2HeaderMid',0,1,249,8,41,1,1,1,1,4
	.byte	'BlkHdr_pst',0,1,249,8,121
	.word	1376
	.byte	4
	.byte	'PageBuf_pcu8',0,1,250,8,111
	.word	1386
	.byte	0,16
	.byte	'Fee_LLCopyPageBuff2HeaderEnd',0,1,251,8,41,1,1,1,1,4
	.byte	'BlkHdr_pst',0,1,251,8,121
	.word	1376
	.byte	4
	.byte	'PageBuf_pcu8',0,1,252,8,111
	.word	1386
	.byte	0,16
	.byte	'Fee_LLUpdateAddressInCache',0,1,163,9,31,1,1,1,1,4
	.byte	'FeeIdx_u16',0,1,163,9,81
	.word	669
	.byte	4
	.byte	'Addr_u32',0,1,164,9,81
	.word	159
	.byte	0,6
	.byte	'Fee_CheckFlsJobResult',0,1,219,9,31,1,1,1,1,17
	.word	175
	.byte	18
	.word	202
	.byte	18
	.word	221
	.byte	5,0,8
	.byte	'Crc_CalculateCRC16',0,3,80,15
	.word	669
	.byte	1,1,1,1,4
	.byte	'Crc_DataPtr',0,3,80,47
	.word	1386
	.byte	4
	.byte	'Crc_Length',0,3,80,67
	.word	159
	.byte	4
	.byte	'Crc_StartValue16',0,3,80,86
	.word	669
	.byte	4
	.byte	'Crc_IsFirstCall',0,3,81,42
	.word	278
	.byte	0,19,1,7
	.word	1796
	.byte	20
	.byte	'__codeptr',0,4,1,1
	.word	1798
	.byte	2
	.byte	'char',0,1,6,20
	.byte	'sint8',0,5,76,25
	.word	1821
	.byte	20
	.byte	'uint8',0,5,81,25
	.word	278
	.byte	20
	.byte	'uint16',0,5,91,25
	.word	669
	.byte	20
	.byte	'uint32',0,5,106,24
	.word	159
	.byte	2
	.byte	'unsigned long long int',0,8,7,20
	.byte	'uint64',0,5,111,30
	.word	1887
	.byte	20
	.byte	'boolean',0,5,127,25
	.word	278
	.byte	20
	.byte	'StatusType',0,6,191,1,27
	.word	278
	.byte	20
	.byte	'Std_ReturnType',0,6,199,1,15
	.word	278
	.byte	11,6,206,1,9,8,12
	.byte	'vendorID',0
	.word	669
	.byte	2,2,35,0,12
	.byte	'moduleID',0
	.word	669
	.byte	2,2,35,2,12
	.byte	'sw_major_version',0
	.word	278
	.byte	1,2,35,4,12
	.byte	'sw_minor_version',0
	.word	278
	.byte	1,2,35,5,12
	.byte	'sw_patch_version',0
	.word	278
	.byte	1,2,35,6,0,20
	.byte	'Std_VersionInfoType',0,6,213,1,3
	.word	1988
	.byte	11,7,93,9,8,12
	.byte	'Class',0
	.word	278
	.byte	1,2,35,0,12
	.byte	'TIN',0
	.word	278
	.byte	1,2,35,1,12
	.byte	'ReturnAddress',0
	.word	159
	.byte	4,2,35,4,0,20
	.byte	'OsTrapInfoType',0,7,97,3
	.word	2138
	.byte	14,68
	.word	159
	.byte	15,16,0,11,7,154,1,9,68,12
	.byte	'store',0
	.word	2218
	.byte	68,2,35,0,0,14,68
	.word	2227
	.byte	15,0,0,20
	.byte	'Os_JumpBufType',0,7,156,1,3
	.word	2249
	.byte	20
	.byte	'Os_StackTraceType',0,7,174,1,18
	.word	159
	.byte	11,7,175,1,9,8,12
	.byte	'sp',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'ctx',0
	.word	159
	.byte	4,2,35,4,0,20
	.byte	'Os_StackValueType',0,7,175,1,63
	.word	2309
	.byte	20
	.byte	'Os_StackSizeType',0,7,176,1,27
	.word	2309
	.byte	21,1,1,7
	.word	2394
	.byte	20
	.byte	'Os_VoidVoidFunctionType',0,7,179,1,16
	.word	2397
	.byte	20
	.byte	'ApplicationType',0,7,193,1,23
	.word	278
	.byte	22
	.byte	'Os_ApplicationConfigurationType_s',0,7,198,1,16,2,12
	.byte	'app_id',0
	.word	278
	.byte	1,2,35,0,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,1,0,20
	.byte	'Os_ApplicationConfigurationType',0,7,201,1,3
	.word	2460
	.byte	20
	.byte	'Os_CoreStateType',0,7,203,1,16
	.word	159
	.byte	20
	.byte	'AreaIdType',0,7,204,1,16
	.word	669
	.byte	20
	.byte	'Os_PeripheralAddressType',0,7,212,1,22
	.word	159
	.byte	20
	.byte	'TickType',0,7,221,1,22
	.word	159
	.byte	20
	.byte	'Os_StopwatchTickType',0,7,225,1,22
	.word	159
	.byte	20
	.byte	'Os_Lockable',0,7,234,1,18
	.word	691
	.byte	20
	.byte	'CoreIdType',0,7,236,1,16
	.word	669
	.byte	20
	.byte	'SpinlockIdType',0,7,237,1,16
	.word	669
	.byte	9,7,239,1,9,4,10
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,10
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,20
	.byte	'TryToGetSpinlockType',0,7,239,1,74
	.word	2767
	.byte	9,7,174,2,9,4,10
	.byte	'APPLICATION_ACCESSIBLE',0,0,10
	.byte	'APPLICATION_RESTARTING',0,1,10
	.byte	'APPLICATION_TERMINATED',0,2,0,20
	.byte	'ApplicationStateType',0,7,174,2,92
	.word	2860
	.byte	23
	.byte	'void',0,7
	.word	2972
	.byte	24,1,1,25
	.word	278
	.byte	25
	.word	2978
	.byte	0,7
	.word	2983
	.byte	20
	.byte	'Os_FunctionEntryType',0,7,183,2,16
	.word	2997
	.byte	22
	.byte	'Os_MeterInfoType_s',0,7,193,2,16,48,12
	.byte	'elapsed',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'previous',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'max',0
	.word	159
	.byte	4,2,35,8,12
	.byte	'cumulative',0
	.word	159
	.byte	4,2,35,12,12
	.byte	'stackbase',0
	.word	2309
	.byte	8,2,35,16,12
	.byte	'stackusage',0
	.word	2309
	.byte	8,2,35,24,12
	.byte	'stackmax',0
	.word	2309
	.byte	8,2,35,32,12
	.byte	'stackbudget',0
	.word	2309
	.byte	8,2,35,40,0,20
	.byte	'Os_MeterInfoType',0,7,202,2,3
	.word	3032
	.byte	7
	.word	3032
	.byte	20
	.byte	'Os_MeterInfoRefType',0,7,203,2,50
	.word	3230
	.byte	20
	.byte	'EventMaskType',0,7,206,2,15
	.word	278
	.byte	20
	.byte	'Os_imaskType',0,7,211,2,16
	.word	159
	.byte	22
	.byte	'Os_ISRDynType_s',0,7,213,2,16,48,12
	.byte	'meter',0
	.word	3032
	.byte	48,2,35,0,0,20
	.byte	'Os_ISRDynType',0,7,215,2,3
	.word	3309
	.byte	7
	.word	3309
	.byte	13
	.word	3370
	.byte	22
	.byte	'Os_ISRType_s',0,7,216,2,16,24,12
	.byte	'entry_function',0
	.word	2402
	.byte	4,2,35,0,12
	.byte	'dynamic',0
	.word	3375
	.byte	4,2,35,4,12
	.byte	'imask',0
	.word	159
	.byte	4,2,35,8,12
	.byte	'stackbudget',0
	.word	2309
	.byte	8,2,35,12,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,20,12
	.byte	'application',0
	.word	278
	.byte	1,2,35,21,0,20
	.byte	'Os_ISRType',0,7,223,2,3
	.word	3380
	.byte	7
	.word	2394
	.byte	13
	.word	3380
	.byte	7
	.word	3539
	.byte	20
	.byte	'ISRType',0,7,224,2,46
	.word	3544
	.byte	20
	.byte	'Os_bitmask',0,7,239,2,22
	.word	159
	.byte	20
	.byte	'Os_pset0Type',0,7,240,2,20
	.word	159
	.byte	20
	.byte	'Os_pset1Type',0,7,241,2,20
	.word	159
	.byte	20
	.byte	'Os_pset2Type',0,7,242,2,20
	.word	159
	.byte	26,7,243,2,9,4,12
	.byte	'p0',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'p1',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'p2',0
	.word	159
	.byte	4,2,35,0,0,20
	.byte	'Os_psetType',0,7,247,2,3
	.word	3652
	.byte	26,7,249,2,9,4,12
	.byte	't0',0
	.word	159
	.byte	4,2,35,0,12
	.byte	't1',0
	.word	159
	.byte	4,2,35,0,12
	.byte	't2',0
	.word	159
	.byte	4,2,35,0,0,20
	.byte	'Os_tpmaskType',0,7,253,2,3
	.word	3716
	.byte	20
	.byte	'Os_ActivationCountType',0,7,254,2,23
	.word	278
	.byte	22
	.byte	'Os_TaskDynType_s',0,7,128,3,16,120,12
	.byte	'terminate_jump_buf',0
	.word	2258
	.byte	68,2,35,0,12
	.byte	'meter',0
	.word	3032
	.byte	48,2,35,68,12
	.byte	'activation_count',0
	.word	278
	.byte	1,2,35,116,0,20
	.byte	'Os_TaskDynType',0,7,132,3,3
	.word	3814
	.byte	14,68
	.word	2227
	.byte	15,0,0,7
	.word	3814
	.byte	13
	.word	3940
	.byte	22
	.byte	'Os_TaskType_s',0,7,134,3,16,40,12
	.byte	'dynamic',0
	.word	3945
	.byte	4,2,35,0,12
	.byte	'entry_function',0
	.word	2402
	.byte	4,2,35,4,12
	.byte	'pset',0
	.word	3652
	.byte	4,2,35,8,12
	.byte	'base_tpmask',0
	.word	3716
	.byte	4,2,35,12,12
	.byte	'tpmask',0
	.word	3716
	.byte	4,2,35,16,12
	.byte	'core_id',0
	.word	669
	.byte	2,2,35,20,12
	.byte	'index',0
	.word	159
	.byte	4,2,35,24,12
	.byte	'stackbudget',0
	.word	2309
	.byte	8,2,35,28,12
	.byte	'activation_count',0
	.word	278
	.byte	1,2,35,36,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,37,12
	.byte	'application',0
	.word	278
	.byte	1,2,35,38,0,20
	.byte	'Os_TaskType',0,7,146,3,3
	.word	3950
	.byte	13
	.word	3950
	.byte	7
	.word	4200
	.byte	20
	.byte	'TaskType',0,7,147,3,47
	.word	4205
	.byte	27
	.byte	'Os_TaskStateType',0,7,155,3,6,4,10
	.byte	'SUSPENDED',0,0,10
	.byte	'READY',0,1,10
	.byte	'WAITING',0,2,10
	.byte	'RUNNING',0,3,0,20
	.byte	'TaskStateType',0,7,156,3,31
	.word	4228
	.byte	26,7,167,3,3,4,12
	.byte	'tpmask',0
	.word	3716
	.byte	4,2,35,0,0,22
	.byte	'Os_ResourceDynType_s',0,7,166,3,16,4,12
	.byte	'saved_priority',0
	.word	4315
	.byte	4,2,35,0,0,20
	.byte	'Os_ResourceDynType',0,7,170,3,3
	.word	4338
	.byte	7
	.word	4338
	.byte	13
	.word	4418
	.byte	22
	.byte	'Os_ResourceType_s',0,7,171,3,16,12,12
	.byte	'dynamic',0
	.word	4423
	.byte	4,2,35,0,12
	.byte	'tpmask',0
	.word	3716
	.byte	4,2,35,4,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,8,0,20
	.byte	'Os_ResourceType',0,7,175,3,3
	.word	4428
	.byte	11,7,181,3,9,12,12
	.byte	'maxallowedvalue',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'ticksperbase',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'mincycle',0
	.word	159
	.byte	4,2,35,8,0,20
	.byte	'AlarmBaseType',0,7,185,3,3
	.word	4527
	.byte	11,7,206,3,9,8,12
	.byte	'Running',0
	.word	278
	.byte	1,2,35,0,12
	.byte	'Pending',0
	.word	278
	.byte	1,2,35,1,12
	.byte	'Delay',0
	.word	159
	.byte	4,2,35,4,0,20
	.byte	'Os_CounterStatusType',0,7,210,3,3
	.word	4622
	.byte	28
	.word	278
	.byte	1,1,7
	.word	4708
	.byte	20
	.byte	'Os_CounterIncrAdvType',0,7,217,3,22
	.word	4715
	.byte	22
	.byte	's_swd',0,7,222,3,12,4,12
	.byte	'count',0
	.word	159
	.byte	4,2,35,0,0,26,7,221,3,3,4,12
	.byte	'sw',0
	.word	4751
	.byte	4,2,35,0,0,22
	.byte	'Os_CounterDynType_s',0,7,220,3,16,4,12
	.byte	'type_dependent',0
	.word	4779
	.byte	4,2,35,0,0,20
	.byte	'Os_CounterDynType',0,7,226,3,3
	.word	4798
	.byte	7
	.word	4798
	.byte	13
	.word	4876
	.byte	22
	.byte	'Os_CounterType_s',0,7,227,3,16,28,12
	.byte	'dynamic',0
	.word	4881
	.byte	4,2,35,0,12
	.byte	'advincr',0
	.word	4720
	.byte	4,2,35,4,12
	.byte	'base',0
	.word	4527
	.byte	12,2,35,8,12
	.byte	'core',0
	.word	2978
	.byte	4,2,35,20,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,24,12
	.byte	'application',0
	.word	278
	.byte	1,2,35,25,0,20
	.byte	'Os_CounterType',0,7,234,3,3
	.word	4886
	.byte	7
	.word	4708
	.byte	13
	.word	4886
	.byte	7
	.word	5038
	.byte	20
	.byte	'CounterType',0,7,235,3,52
	.word	5043
	.byte	27
	.byte	'Os_ScheduleTableStatusType',0,7,240,3,6,4,10
	.byte	'SCHEDULETABLE_STOPPED',0,0,10
	.byte	'SCHEDULETABLE_NEXT',0,1,10
	.byte	'SCHEDULETABLE_WAITING',0,2,10
	.byte	'SCHEDULETABLE_RUNNING',0,3,10
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,20
	.byte	'ScheduleTableStatusType',0,7,241,3,41
	.word	5069
	.byte	13
	.word	.L126-.L90
	.byte	7
	.word	5269
	.byte	20
	.byte	'ScheduleTableType',0,7,128,4,58
	.word	5274
	.byte	22
	.byte	'Os_ScheduleTableDynType_s',0,7,130,4,16,16,12
	.byte	'match',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'next',0
	.word	5279
	.byte	4,2,35,4,12
	.byte	'state',0
	.word	5069
	.byte	4,2,35,8,12
	.byte	'config',0
	.word	669
	.byte	2,2,35,12,0,7
	.word	5306
	.byte	13
	.word	5399
.L126:
	.byte	22
	.byte	'Os_ScheduleTableType_s',0,7,247,3,16,16,12
	.byte	'dynamic',0
	.word	5404
	.byte	4,2,35,0,12
	.byte	'counter',0
	.word	5048
	.byte	4,2,35,4,12
	.byte	'repeat',0
	.word	278
	.byte	1,2,35,8,12
	.byte	'config',0
	.word	669
	.byte	2,2,35,10,12
	.byte	'initial',0
	.word	278
	.byte	1,2,35,12,12
	.byte	'access',0
	.word	278
	.byte	1,2,35,13,12
	.byte	'application',0
	.word	278
	.byte	1,2,35,14,0,20
	.byte	'Os_ScheduleTableType',0,7,255,3,3
	.word	5409
	.byte	13
	.word	5409
	.byte	7
	.word	5589
	.byte	13
	.word	4886
	.byte	7
	.word	5599
	.byte	29
	.word	2702
	.byte	29
	.word	3652
	.byte	29
	.word	3549
	.byte	29
	.word	4210
	.byte	29
	.word	3716
	.byte	29
	.word	278
	.byte	29
	.word	4210
	.byte	22
	.byte	'Os_ControlledCoreType_s',0,7,251,6,16,112,12
	.byte	'TrapInfo',0
	.word	2138
	.byte	8,2,35,0,12
	.byte	'lock_taskaccess',0
	.word	5609
	.byte	4,2,35,8,12
	.byte	'ReadyTasks',0
	.word	5614
	.byte	4,2,35,12,12
	.byte	'RunningISR',0
	.word	5619
	.byte	4,2,35,16,12
	.byte	'RunningTask',0
	.word	5624
	.byte	4,2,35,20,12
	.byte	'RunningTPMask',0
	.word	5629
	.byte	4,2,35,24,12
	.byte	'CurrentMeteredObject',0
	.word	3235
	.byte	4,2,35,28,12
	.byte	'IdleMeter',0
	.word	3032
	.byte	48,2,35,32,12
	.byte	'AppAccess',0
	.word	278
	.byte	1,2,35,80,12
	.byte	'AppOverride',0
	.word	5634
	.byte	1,2,35,81,12
	.byte	'GetStackValueAdjust',0
	.word	2309
	.byte	8,2,35,84,12
	.byte	'InErrorHook',0
	.word	278
	.byte	1,2,35,92,12
	.byte	'ChainTaskRef',0
	.word	5639
	.byte	4,2,35,96,12
	.byte	'GetStackUsageAdjust',0
	.word	2309
	.byte	8,2,35,100,12
	.byte	'InProtectionHook',0
	.word	278
	.byte	1,2,35,108,12
	.byte	'CoreIsActive',0
	.word	278
	.byte	1,2,35,109,12
	.byte	'InShutdownHook',0
	.word	278
	.byte	1,2,35,110,0,20
	.byte	'Os_ControlledCoreType',0,7,141,7,3
	.word	5644
	.byte	7
	.word	159
	.byte	13
	.word	3380
	.byte	7
	.word	6100
	.byte	13
	.word	3950
	.byte	7
	.word	6110
	.byte	7
	.word	3032
	.byte	22
	.byte	'Os_AnyCoreType_s',0,7,151,7,16,96,12
	.byte	'DisableAllImask',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'SuspendAllImask',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'SuspendOSImask',0
	.word	159
	.byte	4,2,35,8,12
	.byte	'DisableAllCount',0
	.word	159
	.byte	4,2,35,12,12
	.byte	'SuspendAllCount',0
	.word	159
	.byte	4,2,35,16,12
	.byte	'SuspendOSCount',0
	.word	159
	.byte	4,2,35,20,12
	.byte	'RestartJumpBuf',0
	.word	2258
	.byte	68,2,35,24,12
	.byte	'Restartable',0
	.word	278
	.byte	1,2,35,92,0,20
	.byte	'Os_AnyCoreType',0,7,160,7,3
	.word	6125
	.byte	20
	.byte	'unsigned_int',0,8,116,22
	.word	159
	.byte	9,9,31,9,4,10
	.byte	'MEMIF_JOB_OK',0,0,10
	.byte	'MEMIF_JOB_FAILED',0,1,10
	.byte	'MEMIF_JOB_PENDING',0,2,10
	.byte	'MEMIF_JOB_CANCELED',0,3,10
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,10
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,20
	.byte	'MemIf_JobResultType',0,9,39,2
	.word	6387
	.byte	9,9,41,9,4,10
	.byte	'MEMIF_MODE_SLOW',0,0,10
	.byte	'MEMIF_MODE_FAST',0,1,0,20
	.byte	'MemIf_ModeType',0,9,45,2
	.word	6545
	.byte	20
	.byte	'PduIdType',0,10,22,19
	.word	669
	.byte	20
	.byte	'PduLengthType',0,10,26,19
	.word	669
	.byte	9,11,113,9,4,10
	.byte	'TP_DATACONF',0,0,10
	.byte	'TP_DATARETRY',0,1,10
	.byte	'TP_CONFPENDING',0,2,0,20
	.byte	'TpDataStateType',0,11,118,3
	.word	6650
	.byte	20
	.byte	'Can_IdType',0,12,32,16
	.word	159
	.byte	20
	.byte	'Can_HwHandleType',0,12,43,16
	.word	669
	.byte	20
	.byte	'Can_TxObjPriorityClassType',0,13,219,3,16
	.word	159
	.byte	22
	.byte	'Can_TxHwObjectConfigType',0,13,231,3,16,8,12
	.byte	'MsgObjId',0
	.word	278
	.byte	1,2,35,0,12
	.byte	'HwControllerId',0
	.word	278
	.byte	1,2,35,1,12
	.byte	'TxObjPriorityClass',0
	.word	159
	.byte	4,2,35,4,0,20
	.byte	'Can_TxHwObjectConfigType',0,13,252,3,3
	.word	6806
	.byte	22
	.byte	'Can_RxHwObjectConfigType',0,13,129,4,16,12,12
	.byte	'MaskRef',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'MsgId',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'MsgObjId',0
	.word	278
	.byte	1,2,35,8,12
	.byte	'HwControllerId',0
	.word	278
	.byte	1,2,35,9,0,20
	.byte	'Can_RxHwObjectConfigType',0,13,147,4,3
	.word	6942
	.byte	14,4
	.word	278
	.byte	15,3,0,22
	.byte	'Can_ControllerMOMapConfigType',0,13,181,4,16,4,12
	.byte	'ControllerMOMap',0
	.word	7082
	.byte	4,2,35,0,0,20
	.byte	'Can_ControllerMOMapConfigType',0,13,184,4,3
	.word	7091
	.byte	22
	.byte	'Can_NPCRValueType',0,13,188,4,16,2,12
	.byte	'Can_NPCRValue',0
	.word	669
	.byte	2,2,35,0,0,20
	.byte	'Can_NPCRValueType',0,13,191,4,3
	.word	7192
	.byte	22
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,194,4,16,8,12
	.byte	'CanControllerBaudrate',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'CanControllerBaudrateCfg',0
	.word	669
	.byte	2,2,35,4,0,20
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,198,4,3
	.word	7267
	.byte	13
	.word	7267
	.byte	7
	.word	7432
	.byte	22
	.byte	'Can_BaudrateConfigPtrType',0,13,201,4,16,4,12
	.byte	'Can_kBaudrateConfigPtr',0
	.word	7437
	.byte	4,2,35,0,0,20
	.byte	'Can_BaudrateConfigPtrType',0,13,204,4,3
	.word	7442
	.byte	22
	.byte	'Can_EventHandlingType',0,13,226,4,16,4,12
	.byte	'CanEventType',0
	.word	7082
	.byte	4,2,35,0,0,20
	.byte	'Can_EventHandlingType',0,13,229,4,3
	.word	7542
	.byte	20
	.byte	'Rte_TransformerErrorCode',0,14,130,1,15
	.word	278
	.byte	20
	.byte	'Rte_TransformerClass',0,14,131,1,15
	.word	278
	.byte	11,14,168,1,9,12,12
	.byte	'in',0
	.word	2978
	.byte	4,2,35,0,12
	.byte	'out',0
	.word	2978
	.byte	4,2,35,4,12
	.byte	'used',0
	.word	669
	.byte	2,2,35,8,12
	.byte	'lost_data',0
	.word	278
	.byte	1,2,35,10,0,20
	.byte	'Rte_QDynType',0,14,173,1,3
	.word	7688
	.byte	9,14,175,1,9,4,10
	.byte	'RTE_DRA',0,0,10
	.byte	'RTE_WOWP',0,1,10
	.byte	'RTE_TASK',0,2,10
	.byte	'RTE_ARE',0,3,10
	.byte	'RTE_EV',0,4,10
	.byte	'RTE_MSI',0,5,0,20
	.byte	'Rte_NotificationType',0,14,182,1,3
	.word	7775
	.byte	14,128,8
	.word	278
	.byte	15,255,7,0,20
	.byte	'Impl_NVM_DstPtrType_1024',0,15,50,15
	.word	7873
	.byte	20
	.byte	'CanIf_u32_impl',0,15,69,16
	.word	159
	.byte	20
	.byte	'CanIf_u16_impl',0,15,71,16
	.word	669
	.byte	20
	.byte	'CanIf_u8_impl',0,15,73,15
	.word	278
	.byte	20
	.byte	'CanIf_ControllerModeType_Enum_impl',0,15,88,15
	.word	278
	.byte	20
	.byte	'CanIf_PduModeType_Enum_impl',0,15,90,15
	.word	278
	.byte	11,15,92,9,2,12
	.byte	'DeviceMode',0
	.word	278
	.byte	1,2,35,0,12
	.byte	'ChannelMode',0
	.word	278
	.byte	1,2,35,1,0,20
	.byte	'CanIf_ControllerStateType_struct_impl',0,15,95,3
	.word	8064
	.byte	20
	.byte	'CanIf_NotifStatusType_Enum_impl',0,15,100,15
	.word	278
	.byte	20
	.byte	'CanSM_boolean_Impl',0,15,120,15
	.word	278
	.byte	20
	.byte	'CanSM_u8_Impl',0,15,123,15
	.word	278
	.byte	20
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,15,128,1,15
	.word	278
	.byte	20
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,15,132,1,15
	.word	278
	.byte	20
	.byte	'CanSM_u16_Impl',0,15,136,1,16
	.word	669
	.byte	20
	.byte	'CanSM_TimerStateType_Enum_impl',0,15,138,1,15
	.word	278
	.byte	11,15,140,1,9,4,12
	.byte	'cntTick_u16',0
	.word	669
	.byte	2,2,35,0,12
	.byte	'stTimer',0
	.word	278
	.byte	1,2,35,2,0,20
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,15,143,1,3
	.word	8405
	.byte	20
	.byte	'Com_impl_u16',0,15,154,1,16
	.word	669
	.byte	20
	.byte	'Com_impl_u8',0,15,157,1,15
	.word	278
	.byte	20
	.byte	'ComM_uint32_Impl',0,15,173,1,16
	.word	159
	.byte	20
	.byte	'ComM_uint16_Impl',0,15,175,1,16
	.word	669
	.byte	20
	.byte	'ComM_uint8_Impl',0,15,177,1,15
	.word	278
	.byte	20
	.byte	'ComM_bool_Impl',0,15,179,1,15
	.word	278
	.byte	11,15,181,1,9,24,12
	.byte	'ChannelState_e',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'LightTimeoutCtr_u32',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	669
	.byte	2,2,35,8,12
	.byte	'ChannelMode_u8',0
	.word	278
	.byte	1,2,35,10,12
	.byte	'BusSmMode_u8',0
	.word	278
	.byte	1,2,35,11,12
	.byte	'UserRequestCtr_u8',0
	.word	278
	.byte	1,2,35,12,12
	.byte	'PassiveRequestState_u8',0
	.word	278
	.byte	1,2,35,13,12
	.byte	'PncRequestCtr_u8',0
	.word	278
	.byte	1,2,35,14,12
	.byte	'InhibitionReqStatus_u8',0
	.word	278
	.byte	1,2,35,15,12
	.byte	'NmNetworkRequestStatus_b',0
	.word	278
	.byte	1,2,35,16,12
	.byte	'DiagnosticRequestState_b',0
	.word	278
	.byte	1,2,35,17,12
	.byte	'CommunicationAllowed_b',0
	.word	278
	.byte	1,2,35,18,12
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	278
	.byte	1,2,35,19,12
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	278
	.byte	1,2,35,20,12
	.byte	'NmNetworkModeStatus_b',0
	.word	278
	.byte	1,2,35,21,0,20
	.byte	'ComM_ChannelStruct_Impl',0,15,197,1,3
	.word	8637
	.byte	11,15,206,1,9,10,12
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	669
	.byte	2,2,35,0,12
	.byte	'LimitToNoComCtr_u16',0
	.word	669
	.byte	2,2,35,2,12
	.byte	'RequestedUserMode_t',0
	.word	278
	.byte	1,2,35,4,12
	.byte	'IndicatedUserMode_t',0
	.word	278
	.byte	1,2,35,5,12
	.byte	'numChannelsInFullCom_u8',0
	.word	278
	.byte	1,2,35,6,12
	.byte	'numChannelsInSilentCom_u8',0
	.word	278
	.byte	1,2,35,7,12
	.byte	'numChannelsInNoCom_u8',0
	.word	278
	.byte	1,2,35,8,0,20
	.byte	'ComM_UserStruct_Impl',0,15,214,1,3
	.word	9141
	.byte	20
	.byte	'Dcm_IOOperationResponseType',0,15,252,1,15
	.word	278
	.byte	20
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	15,138,2,15
	.word	278
	.byte	20
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,15,146,2,15
	.word	278
	.byte	20
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,15,150,2,15
	.word	278
	.byte	20
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,15,154,2,15
	.word	278
	.byte	20
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,15,243,3,34
	.word	7884
	.byte	14,128,8
	.word	278
	.byte	15,255,7,0,20
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,15,246,3,34
	.word	7884
	.byte	20
	.byte	'Fls_AddressType',0,2,171,3,16
	.word	159
	.byte	20
	.byte	'Fls_LengthType',0,2,173,3,16
	.word	159
	.byte	22
	.byte	'Fls_JobStartType',0,2,175,3,16,1,30
	.byte	'Reserved1',0,1
	.word	278
	.byte	1,7,2,35,0,30
	.byte	'Write',0,1
	.word	278
	.byte	1,6,2,35,0,30
	.byte	'Erase',0,1
	.word	278
	.byte	1,5,2,35,0,30
	.byte	'Read',0,1
	.word	278
	.byte	1,4,2,35,0,30
	.byte	'Compare',0,1
	.word	278
	.byte	1,3,2,35,0,30
	.byte	'Reserved2',0,1
	.word	278
	.byte	3,0,2,35,0,0,20
	.byte	'Fls_JobStartType',0,2,183,3,3
	.word	10008
	.byte	20
	.byte	'Fls_17_Pmu_Job_Type',0,2,187,3,15
	.word	278
	.byte	14,2
	.word	278
	.byte	15,1,0,22
	.byte	'Fls_17_Pmu_StateType',0,2,198,3,16,48,12
	.byte	'FlsReadAddress',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'FlsWriteAddress',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	159
	.byte	4,2,35,8,12
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	159
	.byte	4,2,35,12,12
	.byte	'FlsReadLength',0
	.word	159
	.byte	4,2,35,16,12
	.byte	'FlsWriteLength',0
	.word	159
	.byte	4,2,35,20,12
	.byte	'FlsReadBufferPtr',0
	.word	295
	.byte	4,2,35,24,12
	.byte	'FlsWriteBufferPtr',0
	.word	1386
	.byte	4,2,35,28,12
	.byte	'FlsJobResult',0
	.word	6387
	.byte	4,2,35,32,12
	.byte	'FlsMode',0
	.word	6545
	.byte	4,2,35,36,12
	.byte	'NotifCaller',0
	.word	278
	.byte	1,2,35,40,12
	.byte	'JobStarted',0
	.word	10008
	.byte	1,2,35,41,12
	.byte	'FlsJobType',0
	.word	10198
	.byte	2,2,35,42,12
	.byte	'FlsOper',0
	.word	278
	.byte	1,2,35,44,12
	.byte	'FlsTimeoutErr',0
	.word	278
	.byte	1,2,35,45,12
	.byte	'FlsTimeoutControl',0
	.word	278
	.byte	1,2,35,46,0,20
	.byte	'Fls_17_Pmu_StateType',0,2,130,4,3
	.word	10207
	.byte	20
	.byte	'Fls_NotifFunctionPtrType',0,2,137,4,16
	.word	2397
	.byte	13
	.word	159
	.byte	7
	.word	10685
	.byte	24,1,1,25
	.word	159
	.byte	25
	.word	159
	.byte	25
	.word	10690
	.byte	25
	.word	278
	.byte	0,7
	.word	10695
	.byte	20
	.byte	'Fls_WriteCmdPtrType',0,2,139,4,16
	.word	10719
	.byte	24,1,1,25
	.word	159
	.byte	0,7
	.word	10753
	.byte	20
	.byte	'Fls_EraseCmdPtrType',0,2,144,4,16
	.word	10762
	.byte	9,16,115,9,4,10
	.byte	'FEE_POLLING_MODE_E',0,0,10
	.byte	'FEE_NORMAL_MODE_E',0,1,0,20
	.byte	'Fee_stMainType',0,16,119,2
	.word	10796
	.byte	9,16,122,9,4,10
	.byte	'FEE_NO_ORDER',0,0,10
	.byte	'FEE_READ_ORDER',0,1,10
	.byte	'FEE_WRITE_ORDER',0,2,10
	.byte	'FEE_INVALIDATE_ORDER',0,3,10
	.byte	'FEE_MAINTAIN_ORDER',0,4,10
	.byte	'FEE_FORCED_READ_ORDER',0,5,0,20
	.byte	'Fee_HlMode_ten',0,16,132,1,2
	.word	10866
	.byte	31
	.byte	'Fee_stMain',0,16,203,1,39
	.word	10796
	.byte	1,1,9,1,147,1,9,4,10
	.byte	'FEE_NORMAL_PRIO_E',0,0,10
	.byte	'FEE_HIGH_PRIO_E',0,1,0,20
	.byte	'Fee_HlPriority_ten',0,1,151,1,2
	.word	11036
	.byte	11,1,165,1,9,24,12
	.byte	'DataBufferPtr_pu8',0
	.word	295
	.byte	4,2,35,0,12
	.byte	'FeeIdx_u16',0
	.word	669
	.byte	2,2,35,4,12
	.byte	'BlockPropIdx_u16',0
	.word	669
	.byte	2,2,35,6,12
	.byte	'Offset_u16',0
	.word	669
	.byte	2,2,35,8,12
	.byte	'Length_u16',0
	.word	669
	.byte	2,2,35,10,12
	.byte	'Mode_en',0
	.word	10866
	.byte	4,2,35,12,12
	.byte	'Prio_en',0
	.word	11036
	.byte	4,2,35,16,12
	.byte	'SecLevel_u8',0
	.word	278
	.byte	1,2,35,20,0,20
	.byte	'Fee_OrderFifo_tst',0,1,175,1,2
	.word	11109
	.byte	9,1,246,1,9,4,10
	.byte	'FEE_SECTOR_STATE_UNDEF_E',0,0,10
	.byte	'FEE_SECTOR_ERASED_E',0,1,10
	.byte	'FEE_SECTOR_USED_E',0,2,10
	.byte	'FEE_SECTOR_FULL_E',0,3,10
	.byte	'FEE_SECTOR_REQUEST2ERASE_E',0,4,10
	.byte	'FEE_SECTOR_CONSIDERED_E',0,13,0,20
	.byte	'Fee_SectorState_ten',0,1,254,1,2
	.word	11311
	.byte	20
	.byte	'Fee_stRetVal_ten',0,1,149,2,2
	.word	457
	.byte	13
	.word	2397
	.byte	13
	.word	2397
	.byte	11,1,192,2,9,16,12
	.byte	'BlockPersistentId_u16',0
	.word	669
	.byte	2,2,35,0,12
	.byte	'Flags_u16',0
	.word	669
	.byte	2,2,35,2,12
	.byte	'Length_u16',0
	.word	669
	.byte	2,2,35,4,12
	.byte	'JobEndNotification_pfn',0
	.word	11517
	.byte	4,2,35,8,12
	.byte	'JobErrorNotification_pfn',0
	.word	11522
	.byte	4,2,35,12,0,20
	.byte	'Fee_BlockPropertiesType_tst',0,1,199,2,2
	.word	11527
	.byte	9,1,210,2,9,4,10
	.byte	'FEE_LL_MARKER_INIT_E',0,0,10
	.byte	'FEE_LL_MARKER_BLK_CHK_E',0,1,10
	.byte	'FEE_LL_MARKER_BLK_CHK_WAIT_E',0,2,10
	.byte	'FEE_LL_MARKER_BLK_CHK_ERROR_E',0,3,10
	.byte	'FEE_LL_MARKER_BLK_CHK_FINISHED_E',0,4,10
	.byte	'FEE_LL_MARKER_WRITE_WAIT_E',0,5,10
	.byte	'FEE_LL_MARKER_WRITE_ERROR_E',0,6,10
	.byte	'FEE_LL_MARKER_VERIFY_E',0,7,10
	.byte	'FEE_LL_MARKER_VERIFY_WAIT_E',0,8,10
	.byte	'FEE_LL_MARKER_VERIFY_FINISHED_E',0,9,0,20
	.byte	'Fee_LLWrMarkerType_ten',0,1,222,2,2
	.word	11707
	.byte	9,1,225,2,9,4,10
	.byte	'FEE_HL_RDWR_BLK_INIT_E',0,0,10
	.byte	'FEE_HL_SEARCH_BLK_HDR_E',0,1,10
	.byte	'FEE_HL_READ_BLK_HDR_WAIT_E',0,2,10
	.byte	'FEE_HL_CHECK_BLK_HDR_E',0,3,10
	.byte	'FEE_HL_CALC_BLK_CS_E',0,4,10
	.byte	'FEE_HL_CHECK_BLK_CS_E',0,5,10
	.byte	'FEE_HL_RD_DATA_FROM_BLK_E',0,6,10
	.byte	'FEE_HL_COMP_BLK_E',0,7,10
	.byte	'FEE_HL_WR_BLK_E',0,8,0,20
	.byte	'Fee_HLRdWrBlockType_ten',0,1,243,2,2
	.word	12041
	.byte	9,1,246,2,9,4,10
	.byte	'FEE_LL_WR_BLK_INIT_E',0,0,10
	.byte	'FEE_LL_WR_WRITEHEADER_E',0,1,10
	.byte	'FEE_LL_WR_SIZECHECK_HSR_E',0,2,10
	.byte	'FEE_LL_WR_WRITEHEADER_WAIT_E',0,3,10
	.byte	'FEE_LL_WR_VERIFYHEADER_E',0,4,10
	.byte	'FEE_LL_WR_VERIFYHEADER_WAIT_E',0,5,10
	.byte	'FEE_LL_WR_VERIFYHEADER_ERROR_E',0,6,10
	.byte	'FEE_LL_WR_WRITEDATA_SEC_A_E',0,7,10
	.byte	'FEE_LL_WR_WAIT_WRITEDATA_SEC_A_E',0,8,10
	.byte	'FEE_LL_WR_WRITE_ERROR_E',0,9,10
	.byte	'FEE_LL_WR_WRITE_FULL_MARKER_E',0,10,10
	.byte	'FEE_LL_WR_ERASE_SECTOR_E',0,11,10
	.byte	'FEE_LL_WR_WRITE_USED_MARKER_E',0,12,10
	.byte	'FEE_LL_WR_WRITE_START_MARKER_E',0,13,10
	.byte	'FEE_LL_WR_VERIFY_BLK_E',0,14,10
	.byte	'FEE_LL_WR_WRITEHDRPG2_E',0,15,10
	.byte	'FEE_LL_WR_WAIT_WRITEHDRPG2_E',0,16,0,20
	.byte	'Fee_LLWrBlockType_ten',0,1,162,3,2
	.word	12299
	.byte	9,1,165,3,9,4,10
	.byte	'FEE_LL_CMP_BLK_INIT_E',0,0,10
	.byte	'FEE_LL_CMP_HEADER_E',0,1,10
	.byte	'FEE_LL_CMP_WAIT_HEADER_E',0,2,10
	.byte	'FEE_LL_CMP_CHECK_OVERLAP_E',0,3,10
	.byte	'FEE_LL_CMP_DATA_SEC_A_E',0,4,10
	.byte	'FEE_LL_CMP_WAIT_DATA_SEC_A_E',0,5,10
	.byte	'FEE_LL_CMP_FINISHED_E',0,6,0,20
	.byte	'Fee_LLCmpBlkType_ten',0,1,174,3,2
	.word	12834
	.byte	9,1,177,3,9,4,10
	.byte	'FEE_LL_CPY_BLK_INIT_E',0,0,10
	.byte	'FEE_LL_CPY_BLOCK_START_E',0,1,10
	.byte	'FEE_LL_CPY_BLOCK_WAIT_E',0,2,10
	.byte	'FEE_LL_CPY_BLOCK_ERROR_E',0,3,10
	.byte	'FEE_LL_CPY_BLOCK_FINISHED_E',0,4,0,20
	.byte	'Fee_LLCpyBlkType_ten',0,1,184,3,2
	.word	13054
	.byte	9,1,187,3,9,4,10
	.byte	'FEE_LL_CRC_BLK_INIT_E',0,0,10
	.byte	'FEE_LL_CRC_RD_HD_PAGE_E',0,1,10
	.byte	'FEE_LL_CRC_RD_PAGE_E',0,2,10
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_E',0,3,10
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_E',0,4,10
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_ROB_E',0,5,10
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_WAIT_E',0,6,10
	.byte	'FEE_LL_CRC_RD_PAGE_WAIT_E',0,7,10
	.byte	'FEE_LL_CRC_RD_ERROR_E',0,8,0,20
	.byte	'Fee_LLCalcCrcBlkType_ten',0,1,200,3,2
	.word	13225
	.byte	9,1,203,3,9,4,10
	.byte	'FEE_LL_INIT_READ_E',0,0,10
	.byte	'FEE_LL_BLANK_CHECK_E',0,1,10
	.byte	'FEE_LL_BLANK_CHECK_WAIT_E',0,2,10
	.byte	'FEE_LL_READ_PAGE_E',0,3,10
	.byte	'FEE_LL_WAIT_READ_PAGE_E',0,4,10
	.byte	'FEE_LL_READ_ERROR_E',0,5,10
	.byte	'FEE_LL_READ_FINISHED_E',0,6,0,20
	.byte	'Fee_LLRdStateType_ten',0,1,223,3,3
	.word	13512
	.byte	9,1,226,3,9,4,10
	.byte	'FEE_LL_INIT_BLANK_CHECK_E',0,0,10
	.byte	'FEE_LL_PERFORM_BLANK_CHECK_E',0,1,10
	.byte	'FEE_LL_WAIT_PERFORM_BLANK_CHECK_E',0,2,10
	.byte	'FEE_LL_BLANK_CHECK_ERROR_E',0,3,10
	.byte	'FEE_LL_BLANK_CHECK_FINISHED_E',0,4,0,20
	.byte	'Fee_LLBlankCheckType_ten',0,1,233,3,3
	.word	13716
	.byte	9,1,236,3,9,4,10
	.byte	'FEE_LL_FIND_CURRENT_SECTOR_E',0,0,10
	.byte	'FEE_LL_FIND_LAST_HEADER_E',0,1,10
	.byte	'FEE_LL_FINISHED_E',0,2,0,20
	.byte	'Fee_LLFndEmptyPgeType_ten',0,1,249,3,2
	.word	13913
	.byte	9,1,252,3,9,4,10
	.byte	'FEE_LL_SEARCHBLK_INIT_E',0,0,10
	.byte	'FEE_LL_SEARCHBLK_BLK_HEADER_E',0,1,0,20
	.byte	'Fee_LLSearchBlkHdrType_ten',0,1,128,4,2
	.word	14034
	.byte	9,1,132,4,9,4,10
	.byte	'FEE_LL_BLD_UP_CACHE_INIT_E',0,0,10
	.byte	'FEE_LL_BLD_UP_CACHE_READ_E',0,1,0,20
	.byte	'Fee_LLBuildUpCache_ten',0,1,136,4,2
	.word	14135
	.byte	9,1,139,4,9,4,10
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E',0,0,10
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_DO_E',0,1,0,20
	.byte	'Fee_LLBuildUpCacheAllSect_ten',0,1,143,4,2
	.word	14232
	.byte	9,1,168,4,9,4,10
	.byte	'FEE_LL_REORG_INIT_E',0,0,10
	.byte	'FEE_LL_REORG_PREP_SEARCH_BLK_E',0,1,10
	.byte	'FEE_LL_REORG_SEARCH_BLK_E',0,2,10
	.byte	'FEE_LL_REORG_CHECK_BLOCK_CS_E',0,3,10
	.byte	'FEE_LL_REORG_REDUNDANT_BLK_CHK_E',0,4,10
	.byte	'FEE_LL_REORG_WRITE_BLOCK_E',0,5,10
	.byte	'FEE_LL_REORG_FINISHED_E',0,6,0,20
	.byte	'Fee_LLSecReorgType_ten',0,1,193,4,2
	.word	14352
	.byte	9,1,196,4,9,4,10
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_INIT_E',0,0,10
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_SEARCH_HDR_E',0,1,10
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_BLK_CS_E',0,2,0,20
	.byte	'Fee_LLRedundantCpyChk_ten',0,1,201,4,2
	.word	14596
	.byte	9,1,204,4,9,4,10
	.byte	'FEE_LL_CPY_FLS2FLS_INIT_E',0,0,10
	.byte	'FEE_LL_CPY_FLS2FLS_READ_E',0,1,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_READ_E',0,2,10
	.byte	'FEE_LL_CPY_FLS2FLS_READ_ERROR_E',0,3,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_E',0,4,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_WRITE_E',0,5,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_ERROR_E',0,6,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_E',0,7,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_VERIFY_E',0,8,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_ERROR_E',0,9,10
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_E',0,10,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_WRITE_E',0,11,10
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_ERROR_E',0,12,10
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_E',0,13,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_VERIFY_E',0,14,10
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_ERROR_E',0,15,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_E',0,16,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_WRITE_E',0,17,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_ERROR_E',0,18,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_E',0,19,10
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_VERIFY_E',0,20,10
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_ERROR_E',0,21,10
	.byte	'FEE_LL_CPY_FLS2FLS_CHECK_ADR_OVERFLOW_E',0,22,10
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_FULL_MARKER_E',0,23,10
	.byte	'FEE_LL_CPY_FLS2FLS_ERASE_SECTOR_E',0,24,10
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_USED_MARKER_E',0,25,10
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_START_MARKER_E',0,26,0,20
	.byte	'Fee_LLCpyBlkFls2Fls_ten',0,1,133,5,2
	.word	14748
	.byte	11,1,163,5,9,116,12
	.byte	'xRdAddress',0
	.word	159
	.byte	4,2,35,0,12
	.byte	'xWrAddress',0
	.word	159
	.byte	4,2,35,4,12
	.byte	'xCmpAddress',0
	.word	159
	.byte	4,2,35,8,12
	.byte	'xCrcAddress',0
	.word	159
	.byte	4,2,35,12,12
	.byte	'xCpyAddress',0
	.word	159
	.byte	4,2,35,16,12
	.byte	'AdrHdSearchStart_u32',0
	.word	159
	.byte	4,2,35,20,12
	.byte	'xStartAddrNextSector_u32',0
	.word	159
	.byte	4,2,35,24,12
	.byte	'xHdPg2Address',0
	.word	159
	.byte	4,2,35,28,12
	.byte	'LastProgrammedAddress_u32',0
	.word	159
	.byte	4,2,35,32,12
	.byte	'LastValidHdrAddress_u32',0
	.word	159
	.byte	4,2,35,36,12
	.byte	'Fee_LLSecReorg_en',0
	.word	14352
	.byte	4,2,35,40,12
	.byte	'Fee_LLRedundantCpyChk_en',0
	.word	14596
	.byte	4,2,35,44,12
	.byte	'Fee_LLCpyBlkFls2Fls_en',0
	.word	14748
	.byte	4,2,35,48,12
	.byte	'Fee_HLWrBlock_en',0
	.word	12041
	.byte	4,2,35,52,12
	.byte	'Fee_HLMtBlock_en',0
	.word	12041
	.byte	4,2,35,56,12
	.byte	'Fee_LLWrBlock_en',0
	.word	12299
	.byte	4,2,35,60,12
	.byte	'Fee_HLRdBlock',0
	.word	12041
	.byte	4,2,35,64,12
	.byte	'Fee_LLNextUsedWrBlock_en',0
	.word	12299
	.byte	4,2,35,68,12
	.byte	'Fee_LLNextEraseWrBlock_en',0
	.word	12299
	.byte	4,2,35,72,12
	.byte	'Fee_LLCompBlk',0
	.word	12834
	.byte	4,2,35,76,12
	.byte	'Fee_LLCopyBlk_en',0
	.word	13054
	.byte	4,2,35,80,12
	.byte	'Fee_LLCalcCrcBlk_en',0
	.word	13225
	.byte	4,2,35,84,12
	.byte	'Fee_LLWrMarker_en',0
	.word	11707
	.byte	4,2,35,88,12
	.byte	'Fee_LLRdState_en',0
	.word	13512
	.byte	4,2,35,92,12
	.byte	'Fee_LLBlankCheckState_en',0
	.word	13716
	.byte	4,2,35,96,12
	.byte	'Fee_LLFindEmptyPageState_en',0
	.word	13913
	.byte	4,2,35,100,12
	.byte	'Fee_LLSearchBlkHdr_en',0
	.word	14034
	.byte	4,2,35,104,12
	.byte	'Fee_LLBuildUpCache_en',0
	.word	14135
	.byte	4,2,35,108,12
	.byte	'Fee_LLBuildUpCacheAllSect_en',0
	.word	14232
	.byte	4,2,35,112,0,20
	.byte	'Fee_RdWrOrder_tst',0,1,224,5,3
	.word	15794
	.byte	20
	.byte	'Fee_GlobInfoLastRdHeader_tst',0,1,235,5,2
	.word	696
	.byte	9,1,133,6,9,4,10
	.byte	'FEE_ERASESEC_IDLE_E',0,0,10
	.byte	'FEE_ERASESEC_CHECK_CACHE_E',0,1,10
	.byte	'FEE_ERASESEC_START_E',0,2,10
	.byte	'FEE_ERASESEC_DO_E',0,3,10
	.byte	'FEE_ERASESEC_WRITE_MARKER_E',0,4,10
	.byte	'FEE_ERASESEC_ERROR_E',0,5,0,20
	.byte	'Fee_LLEraseStateType_ten',0,1,141,6,2
	.word	16689
	.byte	20
	.byte	'Fee_BlkHeader_tst',0,1,159,6,2
	.word	1236
	.byte	31
	.byte	'Fee_PageBytePtr_cpu8',0,1,143,7,53
	.word	295
	.byte	1,1,31
	.byte	'Fee_RdWrOrder_st',0,1,144,7,53
	.word	15794
	.byte	1,1,14,72
	.word	11109
	.byte	15,2,0,31
	.byte	'Fee_OrderFifo_st',0,1,147,7,53
	.word	16964
	.byte	1,1,31
	.byte	'Fee_GlobInfoLastRdHeader_st',0,1,148,7,53
	.word	696
	.byte	1,1,31
	.byte	'Fee_idxActQueue_u8',0,1,193,7,53
	.word	278
	.byte	1,1,14,192,1
	.word	11527
	.byte	15,11,0,31
	.byte	'Fee_BlockProperties_st',0,1,237,7,53
	.word	17070
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L91:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,46,0,3,8,58,15,59,15,57
	.byte	15,54,15,39,12,63,12,60,12,0,0,7,15,0,73,19,0,0,8,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60
	.byte	12,0,0,9,4,1,58,15,59,15,57,15,11,15,0,0,10,40,0,3,8,28,13,0,0,11,19,1,58,15,59,15,57,15,11,15,0,0,12
	.byte	13,0,3,8,73,19,11,15,56,9,0,0,13,38,0,73,19,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,46,1,3,8,58
	.byte	15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,17,46,1,49,19,0,0,18,5,0,49,19,0,0,19,21,0,54,15,0,0,20,22
	.byte	0,3,8,58,15,59,15,57,15,73,19,0,0,21,21,0,54,15,39,12,0,0,22,19,1,3,8,58,15,59,15,57,15,11,15,0,0,23,59
	.byte	0,3,8,0,0,24,21,1,54,15,39,12,0,0,25,5,0,73,19,0,0,26,23,1,58,15,59,15,57,15,11,15,0,0,27,4,1,3,8,58,15
	.byte	59,15,57,15,11,15,0,0,28,21,0,73,19,54,15,39,12,0,0,29,53,0,73,19,0,0,30,13,0,3,8,11,15,73,19,13,15,12
	.byte	15,56,9,0,0,31,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L92:
	.word	.L128-.L127
.L127:
	.half	3
	.word	.L130-.L129
.L129:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Prv.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Crc\\Crc_16.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Fee\\api\\Fee.h',0,0,0,0,0
.L130:
.L128:
	.sdecl	'.debug_info',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_info'
.L93:
	.word	413
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L96,.L95
	.byte	2
	.word	.L89
	.byte	3
	.byte	'Fee_HLMaintainBlock',0,1,75,34
	.word	.L102
	.byte	1,1,1
	.word	.L88,.L103,.L87
	.byte	4
	.word	.L88,.L103
	.byte	5
	.byte	'xRetVal_en',0,1,77,39
	.word	.L102,.L104
	.byte	5
	.byte	'xTmpRetVal_en',0,1,78,39
	.word	.L102,.L105
	.byte	5
	.byte	'xTmpBlkHdr_st',0,1,79,39
	.word	.L106,.L107
	.byte	6
	.byte	'xAdrLastBlkHeader_u32',0,1,80,20
	.word	.L108
	.byte	5,3
	.word	_999001_xAdrLastBlkHeader_u32
	.byte	6
	.byte	'xSearchRetry_b',0,1,81,20
	.word	.L109
	.byte	5,3
	.word	_999002_xSearchRetry_b
	.byte	5
	.byte	'xBlockLength_u16',0,1,82,12
	.word	.L110,.L111
	.byte	5
	.byte	'xCalcCrc_u16',0,1,83,12
	.word	.L110,.L112
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_line'
.L95:
	.word	.L132-.L131
.L131:
	.half	3
	.word	.L134-.L133
.L133:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0,0,0,0,0
.L134:
	.byte	5,34,7,0,5,2
	.word	.L88
	.byte	3,202,0,1,5,53,9
	.half	.L114-.L88
	.byte	3,2,1,5,17,9
	.half	.L115-.L114
	.byte	3,18,1,5,33,9
	.half	.L135-.L115
	.byte	1,5,18,9
	.half	.L136-.L135
	.byte	3,3,1,9
	.half	.L137-.L136
	.byte	3,46,1,9
	.half	.L138-.L137
	.byte	3,128,2,1,9
	.half	.L139-.L138
	.byte	3,20,1,9
	.half	.L140-.L139
	.byte	3,184,126,1,9
	.half	.L141-.L140
	.byte	3,189,2,1,9
	.half	.L142-.L141
	.byte	3,1,1,9
	.half	.L143-.L142
	.byte	3,70,1,5,62,9
	.half	.L3-.L143
	.byte	3,133,125,1,5,61,9
	.half	.L144-.L3
	.byte	1,5,45,9
	.half	.L145-.L144
	.byte	1,5,61,9
	.half	.L146-.L145
	.byte	1,5,81,9
	.half	.L147-.L146
	.byte	1,5,22,9
	.half	.L148-.L147
	.byte	1,5,44,9
	.half	.L149-.L148
	.byte	1,5,99,9
	.half	.L150-.L149
	.byte	1,5,17,9
	.half	.L151-.L150
	.byte	1,5,32,7,9
	.half	.L152-.L151
	.byte	3,3,1,5,21,9
	.half	.L153-.L152
	.byte	3,1,1,5,17,9
	.half	.L12-.L153
	.byte	3,4,1,5,41,9
	.half	.L154-.L12
	.byte	1,5,39,9
	.half	.L155-.L154
	.byte	1,5,17,9
	.half	.L156-.L155
	.byte	3,3,1,5,102,9
	.half	.L157-.L156
	.byte	3,1,1,5,59,9
	.half	.L158-.L157
	.byte	3,127,1,5,102,9
	.half	.L159-.L158
	.byte	3,3,1,5,59,9
	.half	.L160-.L159
	.byte	3,127,1,9
	.half	.L161-.L160
	.byte	3,2,1,5,64,9
	.half	.L162-.L161
	.byte	3,3,1,5,62,9
	.half	.L163-.L162
	.byte	1,5,44,9
	.half	.L164-.L163
	.byte	3,1,1,5,64,9
	.half	.L165-.L164
	.byte	1,5,62,9
	.half	.L166-.L165
	.byte	1,5,64,9
	.half	.L167-.L166
	.byte	3,1,1,5,62,9
	.half	.L168-.L167
	.byte	1,5,17,9
	.half	.L169-.L168
	.byte	3,3,1,5,34,9
	.half	.L170-.L169
	.byte	1,5,32,9
	.half	.L171-.L170
	.byte	1,5,17,9
	.half	.L172-.L171
	.byte	3,3,1,5,50,9
	.half	.L173-.L172
	.byte	1,5,48,9
	.half	.L174-.L173
	.byte	1,5,53,9
	.half	.L175-.L174
	.byte	3,11,1,5,51,9
	.half	.L176-.L175
	.byte	1,5,17,9
	.half	.L4-.L176
	.byte	3,99,1,9
	.half	.L177-.L4
	.byte	3,3,1,9
	.half	.L178-.L177
	.byte	3,12,1,5,81,9
	.half	.L179-.L178
	.byte	3,24,1,5,80,9
	.half	.L180-.L179
	.byte	1,5,64,9
	.half	.L181-.L180
	.byte	1,5,80,9
	.half	.L182-.L181
	.byte	1,5,100,9
	.half	.L183-.L182
	.byte	1,5,64,9
	.half	.L184-.L183
	.byte	3,3,1,5,26,9
	.half	.L116-.L184
	.byte	3,6,1,9
	.half	.L185-.L116
	.byte	3,8,1,9
	.half	.L186-.L185
	.byte	3,39,1,9
	.half	.L187-.L186
	.byte	3,96,1,9
	.half	.L188-.L187
	.byte	3,35,1,9
	.half	.L189-.L188
	.byte	3,1,1,9
	.half	.L190-.L189
	.byte	3,112,1,9
	.half	.L191-.L190
	.byte	3,14,1,9
	.half	.L192-.L191
	.byte	3,127,1,5,21,9
	.half	.L14-.L192
	.byte	3,85,1,5,61,9
	.half	.L15-.L14
	.byte	3,6,1,5,59,9
	.half	.L193-.L15
	.byte	1,5,21,9
	.half	.L194-.L193
	.byte	3,2,1,5,40,9
	.half	.L17-.L194
	.byte	3,16,1,5,21,9
	.half	.L195-.L17
	.byte	3,3,1,5,42,9
	.half	.L20-.L195
	.byte	3,10,1,5,40,9
	.half	.L196-.L20
	.byte	1,5,21,9
	.half	.L197-.L196
	.byte	3,2,1,5,36,9
	.half	.L23-.L197
	.byte	3,11,1,5,21,9
	.half	.L198-.L23
	.byte	3,2,1,5,13,9
	.half	.L24-.L198
	.byte	3,3,1,5,58,9
	.half	.L7-.L24
	.byte	3,6,1,5,26,9
	.half	.L117-.L7
	.byte	3,6,1,9
	.half	.L199-.L117
	.byte	3,7,1,9
	.half	.L200-.L199
	.byte	3,147,1,1,9
	.half	.L201-.L200
	.byte	3,103,1,9
	.half	.L202-.L201
	.byte	3,28,1,9
	.half	.L203-.L202
	.byte	3,1,1,9
	.half	.L204-.L203
	.byte	3,1,1,9
	.half	.L205-.L204
	.byte	3,125,1,9
	.half	.L206-.L205
	.byte	3,127,1,5,21,9
	.half	.L30-.L206
	.byte	3,233,126,1,5,29,9
	.half	.L31-.L30
	.byte	3,12,1,5,58,9
	.half	.L207-.L31
	.byte	1,5,29,9
	.half	.L208-.L207
	.byte	3,121,1,5,25,9
	.half	.L209-.L208
	.byte	1,5,105,7,9
	.half	.L210-.L209
	.byte	3,3,1,5,76,9
	.half	.L211-.L210
	.byte	1,5,105,9
	.half	.L212-.L211
	.byte	3,1,1,5,76,9
	.half	.L213-.L212
	.byte	1,5,58,9
	.half	.L214-.L213
	.byte	3,1,1,5,105,9
	.half	.L215-.L214
	.byte	1,5,76,9
	.half	.L216-.L215
	.byte	1,5,105,9
	.half	.L217-.L216
	.byte	3,1,1,5,76,9
	.half	.L218-.L217
	.byte	1,5,105,9
	.half	.L219-.L218
	.byte	3,1,1,5,76,9
	.half	.L220-.L219
	.byte	1,5,105,9
	.half	.L221-.L220
	.byte	3,1,1,5,76,9
	.half	.L222-.L221
	.byte	1,5,72,9
	.half	.L223-.L222
	.byte	3,3,1,5,70,9
	.half	.L224-.L223
	.byte	1,5,62,9
	.half	.L225-.L224
	.byte	3,3,1,5,60,9
	.half	.L226-.L225
	.byte	1,5,82,9
	.half	.L227-.L226
	.byte	3,4,1,5,29,9
	.half	.L228-.L227
	.byte	1,5,51,9
	.half	.L229-.L228
	.byte	1,5,81,9
	.half	.L230-.L229
	.byte	3,15,1,5,96,9
	.half	.L231-.L230
	.byte	1,5,86,9
	.half	.L119-.L231
	.byte	3,3,1,5,53,9
	.half	.L43-.L119
	.byte	3,2,1,5,41,9
	.half	.L42-.L43
	.byte	3,126,1,5,86,9
	.half	.L232-.L42
	.byte	1,5,55,7,9
	.half	.L233-.L232
	.byte	3,6,1,5,142,1,9
	.half	.L234-.L233
	.byte	3,3,1,5,37,9
	.half	.L118-.L234
	.byte	1,5,112,9
	.half	.L235-.L118
	.byte	1,5,33,9
	.half	.L236-.L235
	.byte	1,5,73,7,9
	.half	.L237-.L236
	.byte	3,3,1,5,71,9
	.half	.L238-.L237
	.byte	1,5,88,9
	.half	.L239-.L238
	.byte	1,5,41,9
	.half	.L44-.L239
	.byte	3,5,1,5,37,9
	.half	.L240-.L44
	.byte	1,5,77,7,9
	.half	.L241-.L240
	.byte	3,3,1,5,75,9
	.half	.L242-.L241
	.byte	1,5,88,9
	.half	.L243-.L242
	.byte	3,3,1,5,86,9
	.half	.L244-.L243
	.byte	1,5,103,9
	.half	.L245-.L244
	.byte	3,125,1,5,52,9
	.half	.L46-.L245
	.byte	3,9,1,5,33,9
	.half	.L45-.L46
	.byte	3,113,1,5,89,9
	.half	.L41-.L45
	.byte	3,58,1,9
	.half	.L246-.L41
	.byte	3,1,1,5,44,9
	.half	.L121-.L246
	.byte	3,4,1,5,21,9
	.half	.L48-.L121
	.byte	3,4,1,5,28,9
	.half	.L33-.L48
	.byte	3,9,1,5,25,9
	.half	.L247-.L33
	.byte	1,5,29,7,9
	.half	.L248-.L247
	.byte	3,3,1,5,46,9
	.half	.L249-.L248
	.byte	1,5,44,9
	.half	.L250-.L249
	.byte	1,5,29,9
	.half	.L251-.L250
	.byte	3,2,1,5,80,9
	.half	.L252-.L251
	.byte	1,5,51,9
	.half	.L253-.L252
	.byte	1,5,65,9
	.half	.L254-.L253
	.byte	3,3,1,5,63,9
	.half	.L255-.L254
	.byte	1,5,50,9
	.half	.L256-.L255
	.byte	3,123,1,5,65,9
	.half	.L50-.L256
	.byte	3,10,1,5,63,9
	.half	.L257-.L50
	.byte	1,5,21,9
	.half	.L51-.L257
	.byte	3,3,1,5,36,9
	.half	.L39-.L51
	.byte	3,12,1,5,21,9
	.half	.L258-.L39
	.byte	3,2,1,5,13,9
	.half	.L40-.L258
	.byte	3,3,1,5,21,9
	.half	.L5-.L40
	.byte	3,10,1,5,17,9
	.half	.L259-.L5
	.byte	1,5,21,7,9
	.half	.L260-.L259
	.byte	3,3,1,5,38,9
	.half	.L55-.L260
	.byte	3,5,1,5,13,9
	.half	.L261-.L55
	.byte	3,3,1,5,22,9
	.half	.L6-.L261
	.byte	3,5,1,5,42,9
	.half	.L262-.L6
	.byte	1,5,49,9
	.half	.L263-.L262
	.byte	1,5,21,9
	.half	.L264-.L263
	.byte	1,5,42,7,9
	.half	.L265-.L264
	.byte	3,1,1,5,49,9
	.half	.L266-.L265
	.byte	1,5,46,9
	.half	.L267-.L266
	.byte	1,5,42,7,9
	.half	.L268-.L267
	.byte	3,1,1,5,49,9
	.half	.L269-.L268
	.byte	1,5,46,9
	.half	.L270-.L269
	.byte	1,5,51,7,9
	.half	.L271-.L270
	.byte	3,3,1,5,87,9
	.half	.L272-.L271
	.byte	1,5,64,9
	.half	.L273-.L272
	.byte	3,3,1,5,84,9
	.half	.L274-.L273
	.byte	3,1,1,5,55,9
	.half	.L275-.L274
	.byte	3,1,1,9
	.half	.L276-.L275
	.byte	3,1,1,5,54,9
	.half	.L122-.L276
	.byte	3,3,1,5,24,9
	.half	.L277-.L122
	.byte	1,5,38,7,9
	.half	.L278-.L277
	.byte	3,1,1,5,95,9
	.half	.L279-.L278
	.byte	1,5,94,9
	.half	.L280-.L279
	.byte	1,5,78,9
	.half	.L281-.L280
	.byte	1,5,94,9
	.half	.L282-.L281
	.byte	1,5,114,9
	.half	.L283-.L282
	.byte	1,5,55,9
	.half	.L284-.L283
	.byte	1,5,77,9
	.half	.L285-.L284
	.byte	1,5,132,1,9
	.half	.L286-.L285
	.byte	1,5,52,9
	.half	.L287-.L286
	.byte	1,5,53,7,9
	.half	.L288-.L287
	.byte	3,6,1,5,69,9
	.half	.L289-.L288
	.byte	1,5,89,9
	.half	.L290-.L289
	.byte	1,5,23,9
	.half	.L123-.L290
	.byte	3,3,1,5,50,9
	.half	.L291-.L123
	.byte	1,5,80,9
	.half	.L292-.L291
	.byte	1,5,65,9
	.half	.L293-.L292
	.byte	1,5,80,9
	.half	.L294-.L293
	.byte	3,1,1,5,65,9
	.half	.L295-.L294
	.byte	1,5,80,9
	.half	.L296-.L295
	.byte	3,1,1,5,65,9
	.half	.L297-.L296
	.byte	1,5,80,9
	.half	.L298-.L297
	.byte	3,1,1,5,65,9
	.half	.L299-.L298
	.byte	1,5,80,9
	.half	.L300-.L299
	.byte	3,1,1,5,65,9
	.half	.L301-.L300
	.byte	1,5,27,9
	.half	.L302-.L301
	.byte	3,3,1,5,56,9
	.half	.L303-.L302
	.byte	1,5,100,9
	.half	.L304-.L303
	.byte	1,5,23,9
	.half	.L305-.L304
	.byte	1,5,63,7,9
	.half	.L306-.L305
	.byte	3,3,1,5,61,9
	.half	.L307-.L306
	.byte	1,5,84,9
	.half	.L308-.L307
	.byte	1,5,63,9
	.half	.L62-.L308
	.byte	3,5,1,5,61,9
	.half	.L309-.L62
	.byte	1,5,23,9
	.half	.L63-.L309
	.byte	3,125,1,5,60,9
	.half	.L60-.L63
	.byte	3,9,1,5,58,9
	.half	.L310-.L60
	.byte	1,5,20,9
	.half	.L64-.L310
	.byte	3,125,1,5,57,9
	.half	.L57-.L64
	.byte	3,9,1,5,55,9
	.half	.L311-.L57
	.byte	1,5,13,9
	.half	.L65-.L311
	.byte	3,3,1,5,58,9
	.half	.L10-.L65
	.byte	3,8,1,5,89,9
	.half	.L312-.L10
	.byte	1,5,26,9
	.half	.L124-.L312
	.byte	3,6,1,9
	.half	.L313-.L124
	.byte	3,8,1,9
	.half	.L314-.L313
	.byte	3,27,1,9
	.half	.L315-.L314
	.byte	3,110,1,9
	.half	.L316-.L315
	.byte	3,16,1,9
	.half	.L317-.L316
	.byte	3,1,1,9
	.half	.L318-.L317
	.byte	3,119,1,9
	.half	.L319-.L318
	.byte	3,7,1,9
	.half	.L320-.L319
	.byte	3,4,1,5,21,9
	.half	.L67-.L320
	.byte	3,97,1,5,36,9
	.half	.L68-.L67
	.byte	3,5,1,5,21,9
	.half	.L321-.L68
	.byte	3,2,1,5,36,9
	.half	.L70-.L321
	.byte	3,7,1,5,21,9
	.half	.L322-.L70
	.byte	3,3,1,5,36,9
	.half	.L73-.L322
	.byte	3,5,1,5,21,9
	.half	.L323-.L73
	.byte	3,2,1,5,36,9
	.half	.L76-.L323
	.byte	3,10,1,5,21,9
	.half	.L324-.L76
	.byte	3,2,1,5,13,9
	.half	.L77-.L324
	.byte	3,3,1,5,28,9
	.half	.L11-.L77
	.byte	3,7,1,5,13,9
	.half	.L325-.L11
	.byte	3,2,1,9
	.half	.L13-.L325
	.byte	3,3,1,5,12,9
	.half	.L326-.L13
	.byte	1,5,62,7,9
	.half	.L327-.L326
	.byte	1,5,5,7,9
	.half	.L84-.L327
	.byte	3,3,1,5,45,7,9
	.half	.L328-.L84
	.byte	3,3,1,5,43,9
	.half	.L329-.L328
	.byte	1,5,9,9
	.half	.L330-.L329
	.byte	3,3,1,5,33,9
	.half	.L331-.L330
	.byte	1,5,31,9
	.half	.L332-.L331
	.byte	1,5,5,9
	.half	.L85-.L332
	.byte	3,8,1,5,1,9
	.half	.L86-.L85
	.byte	3,1,1,7,9
	.half	.L97-.L86
	.byte	0,1,1
.L132:
	.sdecl	'.debug_ranges',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_ranges'
.L96:
	.word	-1,.L88,0,.L97-.L88,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GlobInfoLastRdHeaderMt_st')
	.sect	'.debug_info'
.L98:
	.word	201
	.half	3
	.word	.L99
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L89
	.byte	3
	.byte	'Fee_GlobInfoLastRdHeaderMt_st',0,4,37,37
	.word	.L113
	.byte	5,3
	.word	Fee_GlobInfoLastRdHeaderMt_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GlobInfoLastRdHeaderMt_st')
	.sect	'.debug_abbrev'
.L99:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_GlobSecurityLevelInfo_b')
	.sect	'.debug_info'
.L100:
	.word	202
	.half	3
	.word	.L101
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_HlMaintainBlock.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L89
	.byte	3
	.byte	'Fee_Rb_GlobSecurityLevelInfo_b',0,4,44,16
	.word	.L109
	.byte	5,3
	.word	Fee_Rb_GlobSecurityLevelInfo_b
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_GlobSecurityLevelInfo_b')
	.sect	'.debug_abbrev'
.L101:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_loc'
.L87:
	.word	-1,.L88,0,.L114-.L88
	.half	2
	.byte	138,0
	.word	.L114-.L88,.L103-.L88
	.half	2
	.byte	138,16
	.word	.L103-.L88,.L103-.L88
	.half	2
	.byte	138,0
	.word	0,0
.L111:
	.word	-1,.L88,.L119-.L88,.L120-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	.L42-.L88,.L118-.L88
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L112:
	.word	-1,.L88,.L122-.L88,.L123-.L88
	.half	1
	.byte	82
	.word	.L60-.L88,.L64-.L88
	.half	1
	.byte	82
	.word	0,0
.L104:
	.word	-1,.L88,.L115-.L88,.L103-.L88
	.half	1
	.byte	88
	.word	.L125-.L88,.L103-.L88
	.half	1
	.byte	82
	.word	0,0
.L107:
	.word	-1,.L88,0,.L103-.L88
	.half	2
	.byte	145,112
	.word	0,0
.L105:
	.word	-1,.L88,.L116-.L88,.L7-.L88
	.half	1
	.byte	82
	.word	.L117-.L88,.L118-.L88
	.half	1
	.byte	82
	.word	.L41-.L88,.L121-.L88
	.half	1
	.byte	82
	.word	.L33-.L88,.L40-.L88
	.half	1
	.byte	82
	.word	.L124-.L88,.L11-.L88
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L333:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_HLMaintainBlock')
	.sect	'.debug_frame'
	.word	36
	.word	.L333,.L88,.L103-.L88
	.byte	4
	.word	(.L114-.L88)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L103-.L114)/2
	.byte	19,0,8,26,0,0

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   566  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   567  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   568  /* FEE_RB_MAINTAIN != FALSE */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   569  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   570  /* FEE_PRESENT == 1 */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   571  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   572  /* 1 == FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   573  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   574  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   575  /*<BASDKey>
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   576  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   577  * $History__:$
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   578  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_HlMaintainBlock.c	   579  </BASDKey>*/

	; Module end
