	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc16300a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\rba_FeeFs1_Srv.src BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c'

	
$TC16X
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_SrvBinarySearchInBlockProp',code,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.text.rba_FeeFs1_Srv.Fee_SrvBinarySearchInBlockProp'
	.align	2
	
	.global	Fee_SrvBinarySearchInBlockProp

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     1  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     2  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     3  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     4  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     6   * \moduledescription
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     7   *           AUTOSAR FEE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     8   *           According to Document Version 3.0.0, Part of Release 4.0, Revision 2
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	     9   * \scope    INTERN
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    10   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    11   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    12  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    13  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    14  /*
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    15   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    16   * Includes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    17   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    18   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    19  #include "Fee.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    20  #include "rba_FeeFs1_Prv.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    21  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    22  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 == FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    23  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    24  #if (FEE_PRESENT == 1)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    25  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    26   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    27   * Fee_SrvBinarySearchInBlockProp(): Get the respective index out of
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    28   *                                   the block properties table
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    29   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    30   * This function searches for the respective block properties table
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    31   * index. In case unknown blocks are searched, the function will
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    32   * return with a negative response.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    33   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    34   * \param    FeeIdx_u16:    Fee index (persistent ID)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    35   * \param    CacheIdx_pu16: Pointer for the result
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    36   * \return   Success of the function
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    37   * \retval   FALSE: Corresponding index was not found
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    38   * \retval   TRUE:  Corresponding index was found
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    39   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    40   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    41   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    42   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    43   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    44  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    45  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    46  FUNC(boolean, FEE_CODE) Fee_SrvBinarySearchInBlockProp(VAR(uint16, AUTOMATIC) FeeIdx_u16,
; Function Fee_SrvBinarySearchInBlockProp
.L23:
Fee_SrvBinarySearchInBlockProp:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    47                                                         P2VAR(uint16, AUTOMATIC, FEE_APPL_DATA) CacheIdx_pu16)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    48  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    49      VAR(boolean, AUTOMATIC)  xFuncRet_b = FALSE;    /* Function return value */
	mov	d2,#0
.L115:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    50      VAR(uint16, AUTOMATIC)  xMid_u16;               /* Mid index for the search */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    51      VAR(uint16, AUTOMATIC)  xLeft_u16 = 0;          /* Left index for the search */
	mov	d0,#0
.L116:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    52      VAR(uint16, AUTOMATIC)  xRight_u16 = FEE_NUM_BLOCKS - 1u; /* Right index for the search */
	mov	d1,#11

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    53  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    54      /* Loop until the value is found */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    55      do
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    56      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    57          /* Divide search area by two */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    58          xMid_u16 = (uint16)(xLeft_u16 + ((xRight_u16 - xLeft_u16) / 2));
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    59  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    60          /* Check the cache content */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    61          if(Fee_BlockProperties_st[xMid_u16].BlockPersistentId_u16 == FeeIdx_u16)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    62          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    63              /* Index was found, set return value */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    64              *CacheIdx_pu16 = xMid_u16;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    65  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    66              /* Return positive response */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    67              xFuncRet_b = TRUE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    68  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    69              /* Leave the loop */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    70              return xFuncRet_b;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    71          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    72  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    73          /* Check the current array index */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    74          if(Fee_BlockProperties_st[xMid_u16].BlockPersistentId_u16 > FeeIdx_u16)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    75          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    76              /* Check if the lowest array position is reached */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    77              if(xMid_u16 != 0)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    78              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    79                  /* Reduce the right limit to the left */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    80                  xRight_u16 = (uint16)(xMid_u16 - 1u);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    81              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    82              else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    83              {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    84                  /* Leave the loop with a negative response */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    85                  return xFuncRet_b;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    86              }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    87          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    88          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    89          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    90              /* Reduce the left limit to the right (upper limit is
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    91               * safe because of the loop condition) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    92              xLeft_u16 = (uint16)(xMid_u16 + 1u);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    93          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    94      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    95      while(xRight_u16 >= xLeft_u16);
.L2:
	sub	d15,d1,d0
.L152:
	mov	d3,#2
.L153:
	div	e6,d15,d3
.L154:
	add	d15,d0,d6
.L155:
	extr.u	d15,d15,#0,#16
.L117:
	sha	d3,d15,#4
.L156:
	movh.a	a15,#@his(Fee_BlockProperties_st)
	lea	a15,[a15]@los(Fee_BlockProperties_st)
.L157:
	addsc.a	a15,a15,d3,#0
.L158:
	ld.hu	d3,[a15]0
.L159:
	jne	d3,d4,.L3
.L160:
	st.h	[a4],d15
.L161:
	mov	d2,#1
.L162:
	j	.L4
.L3:
	jge.u	d4,d3,.L5
.L163:
	jeq	d15,#0,.L6
.L164:
	add	d1,d15,#-1
.L165:
	j	.L7
.L6:
	j	.L8
.L7:
	j	.L9
.L5:
	add	d15,#1
.L118:
	extr.u	d0,d15,#0,#16
.L9:
	jge.u	d1,d0,.L2
.L166:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    96  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    97      return xFuncRet_b;
	j	.L10

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    98  }
.L10:
.L8:
.L4:
	ret
.L88:
	
__Fee_SrvBinarySearchInBlockProp_function_end:
	.size	Fee_SrvBinarySearchInBlockProp,__Fee_SrvBinarySearchInBlockProp_function_end-Fee_SrvBinarySearchInBlockProp
.L61:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_Rb_GetSectChngCnt',code,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.text.rba_FeeFs1_Srv.Fee_Rb_GetSectChngCnt'
	.align	2
	
	.global	Fee_Rb_GetSectChngCnt

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	    99  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   100  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   101  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   102   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   103   * Fee_Rb_GetSectChngCnt(): Return number of sector changes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   104   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   105   * This function returns the number of sector changes (sector
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   106   * reorganizations) which is represented by the sector change
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   107   * counter of the current USED sector.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   108   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   109   * \param   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   110   * \return  xSecChngCnt_u32: Number of sector changes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   111   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   112   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   113   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   114   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   115  FUNC(uint32, FEE_CODE) Fee_Rb_GetSectChngCnt(void)
; Function Fee_Rb_GetSectChngCnt
.L25:
Fee_Rb_GetSectChngCnt:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   116  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   117      VAR(uint32, AUTOMATIC)  xSecChngCnt_u32;        /* Function return value */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   118  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   119      /* Check if a division is possible */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   120      if(Fee_SecChngCnt_u32 >= FEE_NUM_FLASH_BANKS)
	movh.a	a15,#@his(Fee_NumFlashBanksUsed_u8)
	lea	a15,[a15]@los(Fee_NumFlashBanksUsed_u8)
	ld.bu	d15,[a15]
.L131:
	movh.a	a15,#@his(Fee_SecChngCnt_u32)
	lea	a15,[a15]@los(Fee_SecChngCnt_u32)
	ld.w	d2,[a15]
.L132:
	jlt.u	d2,d15,.L11
.L119:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   121      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   122          /* Calculate the amount of sector reorganizations */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   123          xSecChngCnt_u32 = (Fee_SecChngCnt_u32 - FEE_NUM_FLASH_BANKS);
	sub	d2,d15
.L133:
	j	.L12
.L11:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   124      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   125      else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   126      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   127          /* No sector reorganization was necessary so far */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   128          xSecChngCnt_u32 = 0;
	mov	d2,#0
.L12:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   129      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   130  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   131      return(xSecChngCnt_u32);
	j	.L13

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   132  }
.L13:
	ret
.L83:
	
__Fee_Rb_GetSectChngCnt_function_end:
	.size	Fee_Rb_GetSectChngCnt,__Fee_Rb_GetSectChngCnt_function_end-Fee_Rb_GetSectChngCnt
.L46:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_Rb_DisableBackgroundOperation',code,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.text.rba_FeeFs1_Srv.Fee_Rb_DisableBackgroundOperation'
	.align	2
	
	.global	Fee_Rb_DisableBackgroundOperation

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   133  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   134  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   135   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   136   * Fee_Rb_DisableBackgroundOperation(): This function when called stops the execution of background operations i.e.,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   137   * Soft Sector Reorganisation and Sector Erase.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   138   * It does not suspend or stops the already ongoing background task but stops further background operations execution i.e.,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   139   * if a sector reorganisation operation has started and one job is currently being transfered then the current block
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   140   * operation will be completed and next block will not be transfered. if an erase is ongoing, then it will wait for the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   141   * erase to be completed and next background operation will not be started.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   142   * Application requests of read, write, maintain, invalidate and others will be processed as usual without any delay.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   143   * HSR will also be processed without any delay.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   144   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   145   * The interface is to be used only if there are some critical writes coming up and to delay background operations so that
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   146   * the new requests are not disturbed or delayed by background requests.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   147   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   148   * Background tasks could be resumed again by calling the API Fee_Rb_EnableBackgroundOperation().
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   149   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   150   * Please note, background operations can only be delayed till HSR is reached.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   151   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   152   * \param   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   153   * \return  none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   154   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   155   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   156   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   157   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   158  FUNC(void, FEE_CODE) Fee_Rb_DisableBackgroundOperation(void)
; Function Fee_Rb_DisableBackgroundOperation
.L27:
Fee_Rb_DisableBackgroundOperation:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   159  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   160      /* Stop the ongoing background operations. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   161      Fee_Prv_stInit_u8 = FEE_PRV_ST_INIT_RUNNING;
	movh.a	a15,#@his(Fee_Prv_stInit_u8)
	lea	a15,[a15]@los(Fee_Prv_stInit_u8)
.L138:
	mov	d15,#0
.L139:
	st.b	[a15],d15
.L140:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   162  }
	ret
.L85:
	
__Fee_Rb_DisableBackgroundOperation_function_end:
	.size	Fee_Rb_DisableBackgroundOperation,__Fee_Rb_DisableBackgroundOperation_function_end-Fee_Rb_DisableBackgroundOperation
.L51:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_Rb_EnableBackgroundOperation',code,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.text.rba_FeeFs1_Srv.Fee_Rb_EnableBackgroundOperation'
	.align	2
	
	.global	Fee_Rb_EnableBackgroundOperation

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   163  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   164  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   165   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   166   * Fee_Rb_EnableBackgroundOperation(): This function when called resumes the execution of background operations i.e.,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   167   * Soft Sector Reorganisation and Sector Erase if it was halted by Fee_Rb_DisableBackgroundOperation().
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   168   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   169   * \param   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   170   * \return  none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   171   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   172   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   173   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   174   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   175  FUNC(void, FEE_CODE) Fee_Rb_EnableBackgroundOperation(void)
; Function Fee_Rb_EnableBackgroundOperation
.L29:
Fee_Rb_EnableBackgroundOperation:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   176  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   177      /* Resume the ongoing background operations. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   178      Fee_Prv_stInit_u8 = FEE_PRV_ST_INIT_DONE;
	movh.a	a15,#@his(Fee_Prv_stInit_u8)
	lea	a15,[a15]@los(Fee_Prv_stInit_u8)
.L145:
	mov	d15,#1
.L146:
	st.b	[a15],d15
.L147:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   179  }
	ret
.L86:
	
__Fee_Rb_EnableBackgroundOperation_function_end:
	.size	Fee_Rb_EnableBackgroundOperation,__Fee_Rb_EnableBackgroundOperation_function_end-Fee_Rb_EnableBackgroundOperation
.L56:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_SrvMemSet8',code,cluster('Fee_SrvMemSet8')
	.sect	'.text.rba_FeeFs1_Srv.Fee_SrvMemSet8'
	.align	2
	
	.global	Fee_SrvMemSet8

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   180  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   181  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   182   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   183   * Fee_SrvMemSet8 - initialize memory with 8 Bit data
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   184   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   185   * Memory initialization routine. 8 Bit Pattern is written to the destination.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   186   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   187   * \param   xDest_pu8       destination address
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   188   * \param   xPattern_u32    fill pattern, only lower 8 bit used
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   189   * \param   numBytes_u32    number of bytes to be initialized
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   190   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   191   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   192   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   193   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   194  FUNC(void, FEE_CODE)  Fee_SrvMemSet8(P2VAR(uint8, AUTOMATIC, FEE_APPL_DATA) xDest_pu8,
; Function Fee_SrvMemSet8
.L31:
Fee_SrvMemSet8:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   195                                       VAR(uint32, FEE_VAR) xPattern_u32,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   196                                       VAR(uint32, FEE_VAR) numBytes_u32)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   197  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   198      uint32 ctLoop_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   199  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   200      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)
	mov	d15,#0
.L120:
	j	.L14
.L15:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   201      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   202          *xDest_pu8 = (uint8)xPattern_u32;
	st.b	[a4],d4
.L171:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   203          xDest_pu8++;
	add.a	a4,#1
.L172:
	add	d15,#1
.L14:
	jlt.u	d15,d5,.L15
.L173:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   204      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   205  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   206      return;
	j	.L16

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   207  }
.L16:
	ret
.L97:
	
__Fee_SrvMemSet8_function_end:
	.size	Fee_SrvMemSet8,__Fee_SrvMemSet8_function_end-Fee_SrvMemSet8
.L66:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_SrvMemCopy8',code,cluster('Fee_SrvMemCopy8')
	.sect	'.text.rba_FeeFs1_Srv.Fee_SrvMemCopy8'
	.align	2
	
	.global	Fee_SrvMemCopy8

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   208  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   209  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   210  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   211   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   212   * Fee_SrvMemCopy8 - copy non overlapping memory
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   213   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   214   * Memory copy routine. Source and destination must not overlap.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   215   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   216   * \param   xDest_pu8       destination address
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   217   * \param   xSrc_pcu8       source address
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   218   * \param   numBytes_u32    number of bytes to be copied
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   219   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   220   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   221   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   222   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   223  FUNC(void, FEE_CODE)  Fee_SrvMemCopy8(P2VAR(uint8, AUTOMATIC, FEE_APPL_DATA) xDest_pu8,
; Function Fee_SrvMemCopy8
.L33:
Fee_SrvMemCopy8:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   224                                        P2CONST(uint8, AUTOMATIC, FEE_APPL_DATA) xSrc_pcu8,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   225                                        VAR(uint32, FEE_VAR) numBytes_u32)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   226  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   227      uint32 ctLoop_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   228  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   229      for(ctLoop_u32 = 0; ctLoop_u32 < numBytes_u32; ctLoop_u32++)
	mov	d15,#0
.L121:
	j	.L17
.L18:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   230      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   231          *xDest_pu8 = *xSrc_pcu8;
	ld.bu	d0,[a5]
.L178:
	st.b	[a4],d0
.L179:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   232          xDest_pu8++;
	add.a	a4,#1
.L180:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   233          xSrc_pcu8++;
	add.a	a5,#1
.L181:
	add	d15,#1
.L17:
	jlt.u	d15,d4,.L18
.L182:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   234      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   235  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   236      return;
	j	.L19

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   237  }
.L19:
	ret
.L103:
	
__Fee_SrvMemCopy8_function_end:
	.size	Fee_SrvMemCopy8,__Fee_SrvMemCopy8_function_end-Fee_SrvMemCopy8
.L71:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_SrvSetFifoMode',code,cluster('Fee_SrvSetFifoMode')
	.sect	'.text.rba_FeeFs1_Srv.Fee_SrvSetFifoMode'
	.align	2
	
	.global	Fee_SrvSetFifoMode

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   238  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   239  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   240  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   241   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   242   * Fee_SrvSetFifoMode - Set the internal order mode of the module
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   243   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   244   * This function changes the internal order mode within the order fifo of the module.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   245   * This is done inside a function in order to ensure the correct read and write order
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   246   * in combination with other variables in case of compiler optimizations. Therefor
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   247   * no common locks are necessary.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   248   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   249   * \param   Mode_en         mode to be set
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   250   * \param   xJobType_u16    index for order queue
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   251   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   252    * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   253   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   254   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   255  FUNC(void, FEE_CODE)  Fee_SrvSetFifoMode(VAR(Fee_HlMode_ten, AUTOMATIC) Mode_en,
; Function Fee_SrvSetFifoMode
.L35:
Fee_SrvSetFifoMode:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   256                                           VAR(uint16, AUTOMATIC) xJobType_u16)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   257  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   258      /* Set the order mode and return */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   259      Fee_OrderFifo_st[xJobType_u16].Mode_en = Mode_en;
	mul	d15,d5,#24
.L187:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L188:
	addsc.a	a15,a15,d15,#0
.L189:
	st.w	[a15]12,d4
.L190:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   260  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   261      return;
	j	.L20

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   262  }
.L20:
	ret
.L109:
	
__Fee_SrvSetFifoMode_function_end:
	.size	Fee_SrvSetFifoMode,__Fee_SrvSetFifoMode_function_end-Fee_SrvSetFifoMode
.L76:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Srv.Fee_SrvGetFifoMode',code,cluster('Fee_SrvGetFifoMode')
	.sect	'.text.rba_FeeFs1_Srv.Fee_SrvGetFifoMode'
	.align	2
	
	.global	Fee_SrvGetFifoMode

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   263  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   264  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   265  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   266   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   267   * Fee_SrvGetFifoMode - Get the internal order mode of the module
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   268   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   269   * This function returns the internal order mode of the respective position within the
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   270   * order fifo of the module.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   271   * This is done inside a function in order to ensure the correct read and write order
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   272   * in combination with other variables in case of compiler optimizations. Therefor
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   273   * no common locks are necessary.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   274   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   275   * \param   xJobType_u16    index for order queue
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   276   * \return  current mode
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   277   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   278   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   279   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   280  FUNC(Fee_HlMode_ten, FEE_CODE)  Fee_SrvGetFifoMode(VAR(uint16, AUTOMATIC) xJobType_u16)
; Function Fee_SrvGetFifoMode
.L37:
Fee_SrvGetFifoMode:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   281  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   282      /* Return the order mode of the respective array position */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   283      return Fee_OrderFifo_st[xJobType_u16].Mode_en;
	mul	d15,d4,#24
.L195:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L196:
	addsc.a	a15,a15,d15,#0
.L197:
	ld.w	d2,[a15]12
.L198:
	j	.L21

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   284  }
.L21:
	ret
.L113:
	
__Fee_SrvGetFifoMode_function_end:
	.size	Fee_SrvGetFifoMode,__Fee_SrvGetFifoMode_function_end-Fee_SrvGetFifoMode
.L81:
	; End of function
	
	.calls	'Fee_SrvBinarySearchInBlockProp','',0
	.calls	'Fee_Rb_GetSectChngCnt','',0
	.calls	'Fee_Rb_DisableBackgroundOperation','',0
	.calls	'Fee_Rb_EnableBackgroundOperation','',0
	.calls	'Fee_SrvMemSet8','',0
	.calls	'Fee_SrvMemCopy8','',0
	.calls	'Fee_SrvSetFifoMode','',0
	.extern	Fee_SecChngCnt_u32
	.extern	Fee_OrderFifo_st
	.extern	Fee_Prv_stInit_u8
	.extern	Fee_NumFlashBanksUsed_u8
	.extern	Fee_BlockProperties_st
	.calls	'Fee_SrvGetFifoMode','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L39:
	.word	14706
	.half	3
	.word	.L40
	.byte	4
.L38:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L41
.L82:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Fee_SrvRoundUp',0,3,1,140,11,21
	.word	147
	.byte	1,1,4
	.byte	'value_u32',0,1,140,11,43
	.word	147
	.byte	4
	.byte	'stepsize_u32',0,1,140,11,62
	.word	147
	.byte	5,0
.L87:
	.byte	2
	.byte	'unsigned char',0,1,8
.L89:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L91:
	.byte	6
	.word	250
.L98:
	.byte	6
	.word	233
	.byte	7
	.word	233
.L105:
	.byte	6
	.word	282
.L110:
	.byte	8,2,122,9,4,9
	.byte	'FEE_NO_ORDER',0,0,9
	.byte	'FEE_READ_ORDER',0,1,9
	.byte	'FEE_WRITE_ORDER',0,2,9
	.byte	'FEE_INVALIDATE_ORDER',0,3,9
	.byte	'FEE_MAINTAIN_ORDER',0,4,9
	.byte	'FEE_FORCED_READ_ORDER',0,5,0,10
	.word	163
	.byte	11
	.word	190
	.byte	11
	.word	209
	.byte	5,0,12,1,6
	.word	433
	.byte	13
	.byte	'__codeptr',0,3,1,1
	.word	435
	.byte	2
	.byte	'char',0,1,6,13
	.byte	'sint8',0,4,76,25
	.word	458
	.byte	13
	.byte	'uint8',0,4,81,25
	.word	233
	.byte	13
	.byte	'uint16',0,4,91,25
	.word	250
	.byte	13
	.byte	'uint32',0,4,106,24
	.word	147
	.byte	2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'uint64',0,4,111,30
	.word	524
	.byte	13
	.byte	'boolean',0,4,127,25
	.word	233
	.byte	13
	.byte	'StatusType',0,5,191,1,27
	.word	233
	.byte	13
	.byte	'Std_ReturnType',0,5,199,1,15
	.word	233
	.byte	14,5,206,1,9,8,15
	.byte	'vendorID',0
	.word	250
	.byte	2,2,35,0,15
	.byte	'moduleID',0
	.word	250
	.byte	2,2,35,2,15
	.byte	'sw_major_version',0
	.word	233
	.byte	1,2,35,4,15
	.byte	'sw_minor_version',0
	.word	233
	.byte	1,2,35,5,15
	.byte	'sw_patch_version',0
	.word	233
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,5,213,1,3
	.word	625
	.byte	14,6,93,9,8,15
	.byte	'Class',0
	.word	233
	.byte	1,2,35,0,15
	.byte	'TIN',0
	.word	233
	.byte	1,2,35,1,15
	.byte	'ReturnAddress',0
	.word	147
	.byte	4,2,35,4,0,13
	.byte	'OsTrapInfoType',0,6,97,3
	.word	775
	.byte	16,68
	.word	147
	.byte	17,16,0,14,6,154,1,9,68,15
	.byte	'store',0
	.word	855
	.byte	68,2,35,0,0,16,68
	.word	864
	.byte	17,0,0,13
	.byte	'Os_JumpBufType',0,6,156,1,3
	.word	886
	.byte	13
	.byte	'Os_StackTraceType',0,6,174,1,18
	.word	147
	.byte	14,6,175,1,9,8,15
	.byte	'sp',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'ctx',0
	.word	147
	.byte	4,2,35,4,0,13
	.byte	'Os_StackValueType',0,6,175,1,63
	.word	946
	.byte	13
	.byte	'Os_StackSizeType',0,6,176,1,27
	.word	946
	.byte	18,1,1,6
	.word	1031
	.byte	13
	.byte	'Os_VoidVoidFunctionType',0,6,179,1,16
	.word	1034
	.byte	13
	.byte	'ApplicationType',0,6,193,1,23
	.word	233
	.byte	19
	.byte	'Os_ApplicationConfigurationType_s',0,6,198,1,16,2,15
	.byte	'app_id',0
	.word	233
	.byte	1,2,35,0,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,1,0,13
	.byte	'Os_ApplicationConfigurationType',0,6,201,1,3
	.word	1097
	.byte	13
	.byte	'Os_CoreStateType',0,6,203,1,16
	.word	147
	.byte	13
	.byte	'AreaIdType',0,6,204,1,16
	.word	250
	.byte	13
	.byte	'Os_PeripheralAddressType',0,6,212,1,22
	.word	147
	.byte	13
	.byte	'TickType',0,6,221,1,22
	.word	147
	.byte	13
	.byte	'Os_StopwatchTickType',0,6,225,1,22
	.word	147
	.byte	6
	.word	147
	.byte	13
	.byte	'Os_Lockable',0,6,234,1,18
	.word	1339
	.byte	13
	.byte	'CoreIdType',0,6,236,1,16
	.word	250
	.byte	13
	.byte	'SpinlockIdType',0,6,237,1,16
	.word	250
	.byte	8,6,239,1,9,4,9
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,9
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,13
	.byte	'TryToGetSpinlockType',0,6,239,1,74
	.word	1409
	.byte	8,6,174,2,9,4,9
	.byte	'APPLICATION_ACCESSIBLE',0,0,9
	.byte	'APPLICATION_RESTARTING',0,1,9
	.byte	'APPLICATION_TERMINATED',0,2,0,13
	.byte	'ApplicationStateType',0,6,174,2,92
	.word	1502
	.byte	20
	.byte	'void',0,6
	.word	1614
	.byte	21,1,1,22
	.word	233
	.byte	22
	.word	1620
	.byte	0,6
	.word	1625
	.byte	13
	.byte	'Os_FunctionEntryType',0,6,183,2,16
	.word	1639
	.byte	19
	.byte	'Os_MeterInfoType_s',0,6,193,2,16,48,15
	.byte	'elapsed',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'previous',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'max',0
	.word	147
	.byte	4,2,35,8,15
	.byte	'cumulative',0
	.word	147
	.byte	4,2,35,12,15
	.byte	'stackbase',0
	.word	946
	.byte	8,2,35,16,15
	.byte	'stackusage',0
	.word	946
	.byte	8,2,35,24,15
	.byte	'stackmax',0
	.word	946
	.byte	8,2,35,32,15
	.byte	'stackbudget',0
	.word	946
	.byte	8,2,35,40,0,13
	.byte	'Os_MeterInfoType',0,6,202,2,3
	.word	1674
	.byte	6
	.word	1674
	.byte	13
	.byte	'Os_MeterInfoRefType',0,6,203,2,50
	.word	1872
	.byte	13
	.byte	'EventMaskType',0,6,206,2,15
	.word	233
	.byte	13
	.byte	'Os_imaskType',0,6,211,2,16
	.word	147
	.byte	19
	.byte	'Os_ISRDynType_s',0,6,213,2,16,48,15
	.byte	'meter',0
	.word	1674
	.byte	48,2,35,0,0,13
	.byte	'Os_ISRDynType',0,6,215,2,3
	.word	1951
	.byte	6
	.word	1951
	.byte	7
	.word	2012
	.byte	19
	.byte	'Os_ISRType_s',0,6,216,2,16,24,15
	.byte	'entry_function',0
	.word	1039
	.byte	4,2,35,0,15
	.byte	'dynamic',0
	.word	2017
	.byte	4,2,35,4,15
	.byte	'imask',0
	.word	147
	.byte	4,2,35,8,15
	.byte	'stackbudget',0
	.word	946
	.byte	8,2,35,12,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,20,15
	.byte	'application',0
	.word	233
	.byte	1,2,35,21,0,13
	.byte	'Os_ISRType',0,6,223,2,3
	.word	2022
	.byte	6
	.word	1031
	.byte	7
	.word	2022
	.byte	6
	.word	2181
	.byte	13
	.byte	'ISRType',0,6,224,2,46
	.word	2186
	.byte	13
	.byte	'Os_bitmask',0,6,239,2,22
	.word	147
	.byte	13
	.byte	'Os_pset0Type',0,6,240,2,20
	.word	147
	.byte	13
	.byte	'Os_pset1Type',0,6,241,2,20
	.word	147
	.byte	13
	.byte	'Os_pset2Type',0,6,242,2,20
	.word	147
	.byte	23,6,243,2,9,4,15
	.byte	'p0',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'p1',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'p2',0
	.word	147
	.byte	4,2,35,0,0,13
	.byte	'Os_psetType',0,6,247,2,3
	.word	2294
	.byte	23,6,249,2,9,4,15
	.byte	't0',0
	.word	147
	.byte	4,2,35,0,15
	.byte	't1',0
	.word	147
	.byte	4,2,35,0,15
	.byte	't2',0
	.word	147
	.byte	4,2,35,0,0,13
	.byte	'Os_tpmaskType',0,6,253,2,3
	.word	2358
	.byte	13
	.byte	'Os_ActivationCountType',0,6,254,2,23
	.word	233
	.byte	19
	.byte	'Os_TaskDynType_s',0,6,128,3,16,120,15
	.byte	'terminate_jump_buf',0
	.word	895
	.byte	68,2,35,0,15
	.byte	'meter',0
	.word	1674
	.byte	48,2,35,68,15
	.byte	'activation_count',0
	.word	233
	.byte	1,2,35,116,0,13
	.byte	'Os_TaskDynType',0,6,132,3,3
	.word	2456
	.byte	16,68
	.word	864
	.byte	17,0,0,6
	.word	2456
	.byte	7
	.word	2582
	.byte	19
	.byte	'Os_TaskType_s',0,6,134,3,16,40,15
	.byte	'dynamic',0
	.word	2587
	.byte	4,2,35,0,15
	.byte	'entry_function',0
	.word	1039
	.byte	4,2,35,4,15
	.byte	'pset',0
	.word	2294
	.byte	4,2,35,8,15
	.byte	'base_tpmask',0
	.word	2358
	.byte	4,2,35,12,15
	.byte	'tpmask',0
	.word	2358
	.byte	4,2,35,16,15
	.byte	'core_id',0
	.word	250
	.byte	2,2,35,20,15
	.byte	'index',0
	.word	147
	.byte	4,2,35,24,15
	.byte	'stackbudget',0
	.word	946
	.byte	8,2,35,28,15
	.byte	'activation_count',0
	.word	233
	.byte	1,2,35,36,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,37,15
	.byte	'application',0
	.word	233
	.byte	1,2,35,38,0,13
	.byte	'Os_TaskType',0,6,146,3,3
	.word	2592
	.byte	7
	.word	2592
	.byte	6
	.word	2842
	.byte	13
	.byte	'TaskType',0,6,147,3,47
	.word	2847
	.byte	24
	.byte	'Os_TaskStateType',0,6,155,3,6,4,9
	.byte	'SUSPENDED',0,0,9
	.byte	'READY',0,1,9
	.byte	'WAITING',0,2,9
	.byte	'RUNNING',0,3,0,13
	.byte	'TaskStateType',0,6,156,3,31
	.word	2870
	.byte	23,6,167,3,3,4,15
	.byte	'tpmask',0
	.word	2358
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType_s',0,6,166,3,16,4,15
	.byte	'saved_priority',0
	.word	2957
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType',0,6,170,3,3
	.word	2980
	.byte	6
	.word	2980
	.byte	7
	.word	3060
	.byte	19
	.byte	'Os_ResourceType_s',0,6,171,3,16,12,15
	.byte	'dynamic',0
	.word	3065
	.byte	4,2,35,0,15
	.byte	'tpmask',0
	.word	2358
	.byte	4,2,35,4,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,8,0,13
	.byte	'Os_ResourceType',0,6,175,3,3
	.word	3070
	.byte	14,6,181,3,9,12,15
	.byte	'maxallowedvalue',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'ticksperbase',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'mincycle',0
	.word	147
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,6,185,3,3
	.word	3169
	.byte	14,6,206,3,9,8,15
	.byte	'Running',0
	.word	233
	.byte	1,2,35,0,15
	.byte	'Pending',0
	.word	233
	.byte	1,2,35,1,15
	.byte	'Delay',0
	.word	147
	.byte	4,2,35,4,0,13
	.byte	'Os_CounterStatusType',0,6,210,3,3
	.word	3264
	.byte	25
	.word	233
	.byte	1,1,6
	.word	3350
	.byte	13
	.byte	'Os_CounterIncrAdvType',0,6,217,3,22
	.word	3357
	.byte	19
	.byte	's_swd',0,6,222,3,12,4,15
	.byte	'count',0
	.word	147
	.byte	4,2,35,0,0,23,6,221,3,3,4,15
	.byte	'sw',0
	.word	3393
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType_s',0,6,220,3,16,4,15
	.byte	'type_dependent',0
	.word	3421
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType',0,6,226,3,3
	.word	3440
	.byte	6
	.word	3440
	.byte	7
	.word	3518
	.byte	19
	.byte	'Os_CounterType_s',0,6,227,3,16,28,15
	.byte	'dynamic',0
	.word	3523
	.byte	4,2,35,0,15
	.byte	'advincr',0
	.word	3362
	.byte	4,2,35,4,15
	.byte	'base',0
	.word	3169
	.byte	12,2,35,8,15
	.byte	'core',0
	.word	1620
	.byte	4,2,35,20,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,24,15
	.byte	'application',0
	.word	233
	.byte	1,2,35,25,0,13
	.byte	'Os_CounterType',0,6,234,3,3
	.word	3528
	.byte	6
	.word	3350
	.byte	7
	.word	3528
	.byte	6
	.word	3680
	.byte	13
	.byte	'CounterType',0,6,235,3,52
	.word	3685
	.byte	24
	.byte	'Os_ScheduleTableStatusType',0,6,240,3,6,4,9
	.byte	'SCHEDULETABLE_STOPPED',0,0,9
	.byte	'SCHEDULETABLE_NEXT',0,1,9
	.byte	'SCHEDULETABLE_WAITING',0,2,9
	.byte	'SCHEDULETABLE_RUNNING',0,3,9
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,6,241,3,41
	.word	3711
	.byte	7
	.word	.L122-.L39
	.byte	6
	.word	3911
	.byte	13
	.byte	'ScheduleTableType',0,6,128,4,58
	.word	3916
	.byte	19
	.byte	'Os_ScheduleTableDynType_s',0,6,130,4,16,16,15
	.byte	'match',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'next',0
	.word	3921
	.byte	4,2,35,4,15
	.byte	'state',0
	.word	3711
	.byte	4,2,35,8,15
	.byte	'config',0
	.word	250
	.byte	2,2,35,12,0,6
	.word	3948
	.byte	7
	.word	4041
.L122:
	.byte	19
	.byte	'Os_ScheduleTableType_s',0,6,247,3,16,16,15
	.byte	'dynamic',0
	.word	4046
	.byte	4,2,35,0,15
	.byte	'counter',0
	.word	3690
	.byte	4,2,35,4,15
	.byte	'repeat',0
	.word	233
	.byte	1,2,35,8,15
	.byte	'config',0
	.word	250
	.byte	2,2,35,10,15
	.byte	'initial',0
	.word	233
	.byte	1,2,35,12,15
	.byte	'access',0
	.word	233
	.byte	1,2,35,13,15
	.byte	'application',0
	.word	233
	.byte	1,2,35,14,0,13
	.byte	'Os_ScheduleTableType',0,6,255,3,3
	.word	4051
	.byte	7
	.word	4051
	.byte	6
	.word	4231
	.byte	7
	.word	3528
	.byte	6
	.word	4241
	.byte	26
	.word	1344
	.byte	26
	.word	2294
	.byte	26
	.word	2191
	.byte	26
	.word	2852
	.byte	26
	.word	2358
	.byte	26
	.word	233
	.byte	26
	.word	2852
	.byte	19
	.byte	'Os_ControlledCoreType_s',0,6,251,6,16,112,15
	.byte	'TrapInfo',0
	.word	775
	.byte	8,2,35,0,15
	.byte	'lock_taskaccess',0
	.word	4251
	.byte	4,2,35,8,15
	.byte	'ReadyTasks',0
	.word	4256
	.byte	4,2,35,12,15
	.byte	'RunningISR',0
	.word	4261
	.byte	4,2,35,16,15
	.byte	'RunningTask',0
	.word	4266
	.byte	4,2,35,20,15
	.byte	'RunningTPMask',0
	.word	4271
	.byte	4,2,35,24,15
	.byte	'CurrentMeteredObject',0
	.word	1877
	.byte	4,2,35,28,15
	.byte	'IdleMeter',0
	.word	1674
	.byte	48,2,35,32,15
	.byte	'AppAccess',0
	.word	233
	.byte	1,2,35,80,15
	.byte	'AppOverride',0
	.word	4276
	.byte	1,2,35,81,15
	.byte	'GetStackValueAdjust',0
	.word	946
	.byte	8,2,35,84,15
	.byte	'InErrorHook',0
	.word	233
	.byte	1,2,35,92,15
	.byte	'ChainTaskRef',0
	.word	4281
	.byte	4,2,35,96,15
	.byte	'GetStackUsageAdjust',0
	.word	946
	.byte	8,2,35,100,15
	.byte	'InProtectionHook',0
	.word	233
	.byte	1,2,35,108,15
	.byte	'CoreIsActive',0
	.word	233
	.byte	1,2,35,109,15
	.byte	'InShutdownHook',0
	.word	233
	.byte	1,2,35,110,0,13
	.byte	'Os_ControlledCoreType',0,6,141,7,3
	.word	4286
	.byte	6
	.word	147
	.byte	7
	.word	2022
	.byte	6
	.word	4742
	.byte	7
	.word	2592
	.byte	6
	.word	4752
	.byte	6
	.word	1674
	.byte	19
	.byte	'Os_AnyCoreType_s',0,6,151,7,16,96,15
	.byte	'DisableAllImask',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'SuspendAllImask',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'SuspendOSImask',0
	.word	147
	.byte	4,2,35,8,15
	.byte	'DisableAllCount',0
	.word	147
	.byte	4,2,35,12,15
	.byte	'SuspendAllCount',0
	.word	147
	.byte	4,2,35,16,15
	.byte	'SuspendOSCount',0
	.word	147
	.byte	4,2,35,20,15
	.byte	'RestartJumpBuf',0
	.word	895
	.byte	68,2,35,24,15
	.byte	'Restartable',0
	.word	233
	.byte	1,2,35,92,0,13
	.byte	'Os_AnyCoreType',0,6,160,7,3
	.word	4767
	.byte	13
	.byte	'unsigned_int',0,7,116,22
	.word	147
	.byte	8,8,31,9,4,9
	.byte	'MEMIF_JOB_OK',0,0,9
	.byte	'MEMIF_JOB_FAILED',0,1,9
	.byte	'MEMIF_JOB_PENDING',0,2,9
	.byte	'MEMIF_JOB_CANCELED',0,3,9
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,9
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,13
	.byte	'MemIf_JobResultType',0,8,39,2
	.word	5029
	.byte	8,8,41,9,4,9
	.byte	'MEMIF_MODE_SLOW',0,0,9
	.byte	'MEMIF_MODE_FAST',0,1,0,13
	.byte	'MemIf_ModeType',0,8,45,2
	.word	5187
	.byte	13
	.byte	'PduIdType',0,9,22,19
	.word	250
	.byte	13
	.byte	'PduLengthType',0,9,26,19
	.word	250
	.byte	8,10,113,9,4,9
	.byte	'TP_DATACONF',0,0,9
	.byte	'TP_DATARETRY',0,1,9
	.byte	'TP_CONFPENDING',0,2,0,13
	.byte	'TpDataStateType',0,10,118,3
	.word	5292
	.byte	13
	.byte	'Can_IdType',0,11,32,16
	.word	147
	.byte	13
	.byte	'Can_HwHandleType',0,11,43,16
	.word	250
	.byte	13
	.byte	'Can_TxObjPriorityClassType',0,12,219,3,16
	.word	147
	.byte	19
	.byte	'Can_TxHwObjectConfigType',0,12,231,3,16,8,15
	.byte	'MsgObjId',0
	.word	233
	.byte	1,2,35,0,15
	.byte	'HwControllerId',0
	.word	233
	.byte	1,2,35,1,15
	.byte	'TxObjPriorityClass',0
	.word	147
	.byte	4,2,35,4,0,13
	.byte	'Can_TxHwObjectConfigType',0,12,252,3,3
	.word	5448
	.byte	19
	.byte	'Can_RxHwObjectConfigType',0,12,129,4,16,12,15
	.byte	'MaskRef',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'MsgId',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'MsgObjId',0
	.word	233
	.byte	1,2,35,8,15
	.byte	'HwControllerId',0
	.word	233
	.byte	1,2,35,9,0,13
	.byte	'Can_RxHwObjectConfigType',0,12,147,4,3
	.word	5584
	.byte	16,4
	.word	233
	.byte	17,3,0,19
	.byte	'Can_ControllerMOMapConfigType',0,12,181,4,16,4,15
	.byte	'ControllerMOMap',0
	.word	5724
	.byte	4,2,35,0,0,13
	.byte	'Can_ControllerMOMapConfigType',0,12,184,4,3
	.word	5733
	.byte	19
	.byte	'Can_NPCRValueType',0,12,188,4,16,2,15
	.byte	'Can_NPCRValue',0
	.word	250
	.byte	2,2,35,0,0,13
	.byte	'Can_NPCRValueType',0,12,191,4,3
	.word	5834
	.byte	19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,194,4,16,8,15
	.byte	'CanControllerBaudrate',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'CanControllerBaudrateCfg',0
	.word	250
	.byte	2,2,35,4,0,13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,198,4,3
	.word	5909
	.byte	7
	.word	5909
	.byte	6
	.word	6074
	.byte	19
	.byte	'Can_BaudrateConfigPtrType',0,12,201,4,16,4,15
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6079
	.byte	4,2,35,0,0,13
	.byte	'Can_BaudrateConfigPtrType',0,12,204,4,3
	.word	6084
	.byte	19
	.byte	'Can_EventHandlingType',0,12,226,4,16,4,15
	.byte	'CanEventType',0
	.word	5724
	.byte	4,2,35,0,0,13
	.byte	'Can_EventHandlingType',0,12,229,4,3
	.word	6184
	.byte	13
	.byte	'Rte_TransformerErrorCode',0,13,130,1,15
	.word	233
	.byte	13
	.byte	'Rte_TransformerClass',0,13,131,1,15
	.word	233
	.byte	14,13,168,1,9,12,15
	.byte	'in',0
	.word	1620
	.byte	4,2,35,0,15
	.byte	'out',0
	.word	1620
	.byte	4,2,35,4,15
	.byte	'used',0
	.word	250
	.byte	2,2,35,8,15
	.byte	'lost_data',0
	.word	233
	.byte	1,2,35,10,0,13
	.byte	'Rte_QDynType',0,13,173,1,3
	.word	6330
	.byte	8,13,175,1,9,4,9
	.byte	'RTE_DRA',0,0,9
	.byte	'RTE_WOWP',0,1,9
	.byte	'RTE_TASK',0,2,9
	.byte	'RTE_ARE',0,3,9
	.byte	'RTE_EV',0,4,9
	.byte	'RTE_MSI',0,5,0,13
	.byte	'Rte_NotificationType',0,13,182,1,3
	.word	6417
	.byte	16,128,8
	.word	233
	.byte	17,255,7,0,13
	.byte	'Impl_NVM_DstPtrType_1024',0,14,50,15
	.word	6515
	.byte	13
	.byte	'CanIf_u32_impl',0,14,69,16
	.word	147
	.byte	13
	.byte	'CanIf_u16_impl',0,14,71,16
	.word	250
	.byte	13
	.byte	'CanIf_u8_impl',0,14,73,15
	.word	233
	.byte	13
	.byte	'CanIf_ControllerModeType_Enum_impl',0,14,88,15
	.word	233
	.byte	13
	.byte	'CanIf_PduModeType_Enum_impl',0,14,90,15
	.word	233
	.byte	14,14,92,9,2,15
	.byte	'DeviceMode',0
	.word	233
	.byte	1,2,35,0,15
	.byte	'ChannelMode',0
	.word	233
	.byte	1,2,35,1,0,13
	.byte	'CanIf_ControllerStateType_struct_impl',0,14,95,3
	.word	6706
	.byte	13
	.byte	'CanIf_NotifStatusType_Enum_impl',0,14,100,15
	.word	233
	.byte	13
	.byte	'CanSM_boolean_Impl',0,14,120,15
	.word	233
	.byte	13
	.byte	'CanSM_u8_Impl',0,14,123,15
	.word	233
	.byte	13
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,14,128,1,15
	.word	233
	.byte	13
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,14,132,1,15
	.word	233
	.byte	13
	.byte	'CanSM_u16_Impl',0,14,136,1,16
	.word	250
	.byte	13
	.byte	'CanSM_TimerStateType_Enum_impl',0,14,138,1,15
	.word	233
	.byte	14,14,140,1,9,4,15
	.byte	'cntTick_u16',0
	.word	250
	.byte	2,2,35,0,15
	.byte	'stTimer',0
	.word	233
	.byte	1,2,35,2,0,13
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,14,143,1,3
	.word	7047
	.byte	13
	.byte	'Com_impl_u16',0,14,154,1,16
	.word	250
	.byte	13
	.byte	'Com_impl_u8',0,14,157,1,15
	.word	233
	.byte	13
	.byte	'ComM_uint32_Impl',0,14,173,1,16
	.word	147
	.byte	13
	.byte	'ComM_uint16_Impl',0,14,175,1,16
	.word	250
	.byte	13
	.byte	'ComM_uint8_Impl',0,14,177,1,15
	.word	233
	.byte	13
	.byte	'ComM_bool_Impl',0,14,179,1,15
	.word	233
	.byte	14,14,181,1,9,24,15
	.byte	'ChannelState_e',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'LightTimeoutCtr_u32',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	250
	.byte	2,2,35,8,15
	.byte	'ChannelMode_u8',0
	.word	233
	.byte	1,2,35,10,15
	.byte	'BusSmMode_u8',0
	.word	233
	.byte	1,2,35,11,15
	.byte	'UserRequestCtr_u8',0
	.word	233
	.byte	1,2,35,12,15
	.byte	'PassiveRequestState_u8',0
	.word	233
	.byte	1,2,35,13,15
	.byte	'PncRequestCtr_u8',0
	.word	233
	.byte	1,2,35,14,15
	.byte	'InhibitionReqStatus_u8',0
	.word	233
	.byte	1,2,35,15,15
	.byte	'NmNetworkRequestStatus_b',0
	.word	233
	.byte	1,2,35,16,15
	.byte	'DiagnosticRequestState_b',0
	.word	233
	.byte	1,2,35,17,15
	.byte	'CommunicationAllowed_b',0
	.word	233
	.byte	1,2,35,18,15
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	233
	.byte	1,2,35,19,15
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	233
	.byte	1,2,35,20,15
	.byte	'NmNetworkModeStatus_b',0
	.word	233
	.byte	1,2,35,21,0,13
	.byte	'ComM_ChannelStruct_Impl',0,14,197,1,3
	.word	7279
	.byte	14,14,206,1,9,10,15
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	250
	.byte	2,2,35,0,15
	.byte	'LimitToNoComCtr_u16',0
	.word	250
	.byte	2,2,35,2,15
	.byte	'RequestedUserMode_t',0
	.word	233
	.byte	1,2,35,4,15
	.byte	'IndicatedUserMode_t',0
	.word	233
	.byte	1,2,35,5,15
	.byte	'numChannelsInFullCom_u8',0
	.word	233
	.byte	1,2,35,6,15
	.byte	'numChannelsInSilentCom_u8',0
	.word	233
	.byte	1,2,35,7,15
	.byte	'numChannelsInNoCom_u8',0
	.word	233
	.byte	1,2,35,8,0,13
	.byte	'ComM_UserStruct_Impl',0,14,214,1,3
	.word	7783
	.byte	13
	.byte	'Dcm_IOOperationResponseType',0,14,252,1,15
	.word	233
	.byte	13
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	14,138,2,15
	.word	233
	.byte	13
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,14,146,2,15
	.word	233
	.byte	13
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,14,150,2,15
	.word	233
	.byte	13
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,14,154,2,15
	.word	233
	.byte	13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,14,243,3,34
	.word	6526
	.byte	16,128,8
	.word	233
	.byte	17,255,7,0,13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,14,246,3,34
	.word	6526
	.byte	13
	.byte	'Fls_LengthType',0,15,173,3,16
	.word	147
	.byte	19
	.byte	'Fls_JobStartType',0,15,175,3,16,1,27
	.byte	'Reserved1',0,1
	.word	233
	.byte	1,7,2,35,0,27
	.byte	'Write',0,1
	.word	233
	.byte	1,6,2,35,0,27
	.byte	'Erase',0,1
	.word	233
	.byte	1,5,2,35,0,27
	.byte	'Read',0,1
	.word	233
	.byte	1,4,2,35,0,27
	.byte	'Compare',0,1
	.word	233
	.byte	1,3,2,35,0,27
	.byte	'Reserved2',0,1
	.word	233
	.byte	3,0,2,35,0,0,13
	.byte	'Fls_JobStartType',0,15,183,3,3
	.word	8625
	.byte	13
	.byte	'Fls_17_Pmu_Job_Type',0,15,187,3,15
	.word	233
	.byte	16,2
	.word	233
	.byte	17,1,0,19
	.byte	'Fls_17_Pmu_StateType',0,15,198,3,16,48,15
	.byte	'FlsReadAddress',0
	.word	147
	.byte	4,2,35,0,15
	.byte	'FlsWriteAddress',0
	.word	147
	.byte	4,2,35,4,15
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	147
	.byte	4,2,35,8,15
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	147
	.byte	4,2,35,12,15
	.byte	'FlsReadLength',0
	.word	147
	.byte	4,2,35,16,15
	.byte	'FlsWriteLength',0
	.word	147
	.byte	4,2,35,20,15
	.byte	'FlsReadBufferPtr',0
	.word	277
	.byte	4,2,35,24,15
	.byte	'FlsWriteBufferPtr',0
	.word	287
	.byte	4,2,35,28,15
	.byte	'FlsJobResult',0
	.word	5029
	.byte	4,2,35,32,15
	.byte	'FlsMode',0
	.word	5187
	.byte	4,2,35,36,15
	.byte	'NotifCaller',0
	.word	233
	.byte	1,2,35,40,15
	.byte	'JobStarted',0
	.word	8625
	.byte	1,2,35,41,15
	.byte	'FlsJobType',0
	.word	8815
	.byte	2,2,35,42,15
	.byte	'FlsOper',0
	.word	233
	.byte	1,2,35,44,15
	.byte	'FlsTimeoutErr',0
	.word	233
	.byte	1,2,35,45,15
	.byte	'FlsTimeoutControl',0
	.word	233
	.byte	1,2,35,46,0,13
	.byte	'Fls_17_Pmu_StateType',0,15,130,4,3
	.word	8824
	.byte	13
	.byte	'Fls_NotifFunctionPtrType',0,15,137,4,16
	.word	1034
	.byte	7
	.word	147
	.byte	6
	.word	9302
	.byte	21,1,1,22
	.word	147
	.byte	22
	.word	147
	.byte	22
	.word	9307
	.byte	22
	.word	233
	.byte	0,6
	.word	9312
	.byte	13
	.byte	'Fls_WriteCmdPtrType',0,15,139,4,16
	.word	9336
	.byte	21,1,1,22
	.word	147
	.byte	0,6
	.word	9370
	.byte	13
	.byte	'Fls_EraseCmdPtrType',0,15,144,4,16
	.word	9379
	.byte	13
	.byte	'Fee_HlMode_ten',0,2,132,1,2
	.word	292
	.byte	28
	.byte	'Fee_SecChngCnt_u32',0,2,209,1,31
	.word	147
	.byte	1,1,8,1,147,1,9,4,9
	.byte	'FEE_NORMAL_PRIO_E',0,0,9
	.byte	'FEE_HIGH_PRIO_E',0,1,0,13
	.byte	'Fee_HlPriority_ten',0,1,151,1,2
	.word	9467
	.byte	14,1,165,1,9,24,15
	.byte	'DataBufferPtr_pu8',0
	.word	277
	.byte	4,2,35,0,15
	.byte	'FeeIdx_u16',0
	.word	250
	.byte	2,2,35,4,15
	.byte	'BlockPropIdx_u16',0
	.word	250
	.byte	2,2,35,6,15
	.byte	'Offset_u16',0
	.word	250
	.byte	2,2,35,8,15
	.byte	'Length_u16',0
	.word	250
	.byte	2,2,35,10,15
	.byte	'Mode_en',0
	.word	292
	.byte	4,2,35,12,15
	.byte	'Prio_en',0
	.word	9467
	.byte	4,2,35,16,15
	.byte	'SecLevel_u8',0
	.word	233
	.byte	1,2,35,20,0,13
	.byte	'Fee_OrderFifo_tst',0,1,175,1,2
	.word	9540
	.byte	8,1,246,1,9,4,9
	.byte	'FEE_SECTOR_STATE_UNDEF_E',0,0,9
	.byte	'FEE_SECTOR_ERASED_E',0,1,9
	.byte	'FEE_SECTOR_USED_E',0,2,9
	.byte	'FEE_SECTOR_FULL_E',0,3,9
	.byte	'FEE_SECTOR_REQUEST2ERASE_E',0,4,9
	.byte	'FEE_SECTOR_CONSIDERED_E',0,13,0,13
	.byte	'Fee_SectorState_ten',0,1,254,1,2
	.word	9742
	.byte	7
	.word	1034
	.byte	7
	.word	1034
	.byte	14,1,192,2,9,16,15
	.byte	'BlockPersistentId_u16',0
	.word	250
	.byte	2,2,35,0,15
	.byte	'Flags_u16',0
	.word	250
	.byte	2,2,35,2,15
	.byte	'Length_u16',0
	.word	250
	.byte	2,2,35,4,15
	.byte	'JobEndNotification_pfn',0
	.word	9922
	.byte	4,2,35,8,15
	.byte	'JobErrorNotification_pfn',0
	.word	9927
	.byte	4,2,35,12,0,13
	.byte	'Fee_BlockPropertiesType_tst',0,1,199,2,2
	.word	9932
	.byte	8,1,210,2,9,4,9
	.byte	'FEE_LL_MARKER_INIT_E',0,0,9
	.byte	'FEE_LL_MARKER_BLK_CHK_E',0,1,9
	.byte	'FEE_LL_MARKER_BLK_CHK_WAIT_E',0,2,9
	.byte	'FEE_LL_MARKER_BLK_CHK_ERROR_E',0,3,9
	.byte	'FEE_LL_MARKER_BLK_CHK_FINISHED_E',0,4,9
	.byte	'FEE_LL_MARKER_WRITE_WAIT_E',0,5,9
	.byte	'FEE_LL_MARKER_WRITE_ERROR_E',0,6,9
	.byte	'FEE_LL_MARKER_VERIFY_E',0,7,9
	.byte	'FEE_LL_MARKER_VERIFY_WAIT_E',0,8,9
	.byte	'FEE_LL_MARKER_VERIFY_FINISHED_E',0,9,0,13
	.byte	'Fee_LLWrMarkerType_ten',0,1,222,2,2
	.word	10112
	.byte	8,1,225,2,9,4,9
	.byte	'FEE_HL_RDWR_BLK_INIT_E',0,0,9
	.byte	'FEE_HL_SEARCH_BLK_HDR_E',0,1,9
	.byte	'FEE_HL_READ_BLK_HDR_WAIT_E',0,2,9
	.byte	'FEE_HL_CHECK_BLK_HDR_E',0,3,9
	.byte	'FEE_HL_CALC_BLK_CS_E',0,4,9
	.byte	'FEE_HL_CHECK_BLK_CS_E',0,5,9
	.byte	'FEE_HL_RD_DATA_FROM_BLK_E',0,6,9
	.byte	'FEE_HL_COMP_BLK_E',0,7,9
	.byte	'FEE_HL_WR_BLK_E',0,8,0,13
	.byte	'Fee_HLRdWrBlockType_ten',0,1,243,2,2
	.word	10446
	.byte	8,1,246,2,9,4,9
	.byte	'FEE_LL_WR_BLK_INIT_E',0,0,9
	.byte	'FEE_LL_WR_WRITEHEADER_E',0,1,9
	.byte	'FEE_LL_WR_SIZECHECK_HSR_E',0,2,9
	.byte	'FEE_LL_WR_WRITEHEADER_WAIT_E',0,3,9
	.byte	'FEE_LL_WR_VERIFYHEADER_E',0,4,9
	.byte	'FEE_LL_WR_VERIFYHEADER_WAIT_E',0,5,9
	.byte	'FEE_LL_WR_VERIFYHEADER_ERROR_E',0,6,9
	.byte	'FEE_LL_WR_WRITEDATA_SEC_A_E',0,7,9
	.byte	'FEE_LL_WR_WAIT_WRITEDATA_SEC_A_E',0,8,9
	.byte	'FEE_LL_WR_WRITE_ERROR_E',0,9,9
	.byte	'FEE_LL_WR_WRITE_FULL_MARKER_E',0,10,9
	.byte	'FEE_LL_WR_ERASE_SECTOR_E',0,11,9
	.byte	'FEE_LL_WR_WRITE_USED_MARKER_E',0,12,9
	.byte	'FEE_LL_WR_WRITE_START_MARKER_E',0,13,9
	.byte	'FEE_LL_WR_VERIFY_BLK_E',0,14,9
	.byte	'FEE_LL_WR_WRITEHDRPG2_E',0,15,9
	.byte	'FEE_LL_WR_WAIT_WRITEHDRPG2_E',0,16,0,13
	.byte	'Fee_LLWrBlockType_ten',0,1,162,3,2
	.word	10704
	.byte	8,1,165,3,9,4,9
	.byte	'FEE_LL_CMP_BLK_INIT_E',0,0,9
	.byte	'FEE_LL_CMP_HEADER_E',0,1,9
	.byte	'FEE_LL_CMP_WAIT_HEADER_E',0,2,9
	.byte	'FEE_LL_CMP_CHECK_OVERLAP_E',0,3,9
	.byte	'FEE_LL_CMP_DATA_SEC_A_E',0,4,9
	.byte	'FEE_LL_CMP_WAIT_DATA_SEC_A_E',0,5,9
	.byte	'FEE_LL_CMP_FINISHED_E',0,6,0,13
	.byte	'Fee_LLCmpBlkType_ten',0,1,174,3,2
	.word	11239
	.byte	8,1,177,3,9,4,9
	.byte	'FEE_LL_CPY_BLK_INIT_E',0,0,9
	.byte	'FEE_LL_CPY_BLOCK_START_E',0,1,9
	.byte	'FEE_LL_CPY_BLOCK_WAIT_E',0,2,9
	.byte	'FEE_LL_CPY_BLOCK_ERROR_E',0,3,9
	.byte	'FEE_LL_CPY_BLOCK_FINISHED_E',0,4,0,13
	.byte	'Fee_LLCpyBlkType_ten',0,1,184,3,2
	.word	11459
	.byte	8,1,187,3,9,4,9
	.byte	'FEE_LL_CRC_BLK_INIT_E',0,0,9
	.byte	'FEE_LL_CRC_RD_HD_PAGE_E',0,1,9
	.byte	'FEE_LL_CRC_RD_PAGE_E',0,2,9
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_E',0,3,9
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_E',0,4,9
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_ROB_E',0,5,9
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_WAIT_E',0,6,9
	.byte	'FEE_LL_CRC_RD_PAGE_WAIT_E',0,7,9
	.byte	'FEE_LL_CRC_RD_ERROR_E',0,8,0,13
	.byte	'Fee_LLCalcCrcBlkType_ten',0,1,200,3,2
	.word	11630
	.byte	8,1,203,3,9,4,9
	.byte	'FEE_LL_INIT_READ_E',0,0,9
	.byte	'FEE_LL_BLANK_CHECK_E',0,1,9
	.byte	'FEE_LL_BLANK_CHECK_WAIT_E',0,2,9
	.byte	'FEE_LL_READ_PAGE_E',0,3,9
	.byte	'FEE_LL_WAIT_READ_PAGE_E',0,4,9
	.byte	'FEE_LL_READ_ERROR_E',0,5,9
	.byte	'FEE_LL_READ_FINISHED_E',0,6,0,13
	.byte	'Fee_LLRdStateType_ten',0,1,223,3,3
	.word	11917
	.byte	8,1,226,3,9,4,9
	.byte	'FEE_LL_INIT_BLANK_CHECK_E',0,0,9
	.byte	'FEE_LL_PERFORM_BLANK_CHECK_E',0,1,9
	.byte	'FEE_LL_WAIT_PERFORM_BLANK_CHECK_E',0,2,9
	.byte	'FEE_LL_BLANK_CHECK_ERROR_E',0,3,9
	.byte	'FEE_LL_BLANK_CHECK_FINISHED_E',0,4,0,13
	.byte	'Fee_LLBlankCheckType_ten',0,1,233,3,3
	.word	12121
	.byte	8,1,236,3,9,4,9
	.byte	'FEE_LL_FIND_CURRENT_SECTOR_E',0,0,9
	.byte	'FEE_LL_FIND_LAST_HEADER_E',0,1,9
	.byte	'FEE_LL_FINISHED_E',0,2,0,13
	.byte	'Fee_LLFndEmptyPgeType_ten',0,1,249,3,2
	.word	12318
	.byte	8,1,252,3,9,4,9
	.byte	'FEE_LL_SEARCHBLK_INIT_E',0,0,9
	.byte	'FEE_LL_SEARCHBLK_BLK_HEADER_E',0,1,0,13
	.byte	'Fee_LLSearchBlkHdrType_ten',0,1,128,4,2
	.word	12439
	.byte	8,1,132,4,9,4,9
	.byte	'FEE_LL_BLD_UP_CACHE_INIT_E',0,0,9
	.byte	'FEE_LL_BLD_UP_CACHE_READ_E',0,1,0,13
	.byte	'Fee_LLBuildUpCache_ten',0,1,136,4,2
	.word	12540
	.byte	8,1,139,4,9,4,9
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E',0,0,9
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_DO_E',0,1,0,13
	.byte	'Fee_LLBuildUpCacheAllSect_ten',0,1,143,4,2
	.word	12637
	.byte	8,1,168,4,9,4,9
	.byte	'FEE_LL_REORG_INIT_E',0,0,9
	.byte	'FEE_LL_REORG_PREP_SEARCH_BLK_E',0,1,9
	.byte	'FEE_LL_REORG_SEARCH_BLK_E',0,2,9
	.byte	'FEE_LL_REORG_CHECK_BLOCK_CS_E',0,3,9
	.byte	'FEE_LL_REORG_REDUNDANT_BLK_CHK_E',0,4,9
	.byte	'FEE_LL_REORG_WRITE_BLOCK_E',0,5,9
	.byte	'FEE_LL_REORG_FINISHED_E',0,6,0,13
	.byte	'Fee_LLSecReorgType_ten',0,1,193,4,2
	.word	12757
	.byte	8,1,196,4,9,4,9
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_INIT_E',0,0,9
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_SEARCH_HDR_E',0,1,9
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_BLK_CS_E',0,2,0,13
	.byte	'Fee_LLRedundantCpyChk_ten',0,1,201,4,2
	.word	13001
	.byte	8,1,204,4,9,4,9
	.byte	'FEE_LL_CPY_FLS2FLS_INIT_E',0,0,9
	.byte	'FEE_LL_CPY_FLS2FLS_READ_E',0,1,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_READ_E',0,2,9
	.byte	'FEE_LL_CPY_FLS2FLS_READ_ERROR_E',0,3,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_E',0,4,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_WRITE_E',0,5,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_ERROR_E',0,6,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_E',0,7,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_VERIFY_E',0,8,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_ERROR_E',0,9,9
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_E',0,10,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_WRITE_E',0,11,9
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_ERROR_E',0,12,9
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_E',0,13,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_VERIFY_E',0,14,9
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_ERROR_E',0,15,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_E',0,16,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_WRITE_E',0,17,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_ERROR_E',0,18,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_E',0,19,9
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_VERIFY_E',0,20,9
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_ERROR_E',0,21,9
	.byte	'FEE_LL_CPY_FLS2FLS_CHECK_ADR_OVERFLOW_E',0,22,9
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_FULL_MARKER_E',0,23,9
	.byte	'FEE_LL_CPY_FLS2FLS_ERASE_SECTOR_E',0,24,9
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_USED_MARKER_E',0,25,9
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_START_MARKER_E',0,26,0,13
	.byte	'Fee_LLCpyBlkFls2Fls_ten',0,1,133,5,2
	.word	13153
	.byte	8,1,133,6,9,4,9
	.byte	'FEE_ERASESEC_IDLE_E',0,0,9
	.byte	'FEE_ERASESEC_CHECK_CACHE_E',0,1,9
	.byte	'FEE_ERASESEC_START_E',0,2,9
	.byte	'FEE_ERASESEC_DO_E',0,3,9
	.byte	'FEE_ERASESEC_WRITE_MARKER_E',0,4,9
	.byte	'FEE_ERASESEC_ERROR_E',0,5,0,13
	.byte	'Fee_LLEraseStateType_ten',0,1,141,6,2
	.word	14199
	.byte	16,3
	.word	233
	.byte	17,2,0,14,1,151,6,9,16,15
	.byte	'Preamble_au8',0
	.word	14387
	.byte	3,2,35,0,15
	.byte	'BlkStatus_u8',0
	.word	233
	.byte	1,2,35,3,15
	.byte	'FeeIndex_u16',0
	.word	250
	.byte	2,2,35,4,15
	.byte	'BlkLength_u16',0
	.word	250
	.byte	2,2,35,6,15
	.byte	'HdrCrc16_u16',0
	.word	250
	.byte	2,2,35,8,15
	.byte	'BlkCrc32_u32',0
	.word	147
	.byte	4,2,35,12,0,13
	.byte	'Fee_BlkHeader_tst',0,1,159,6,2
	.word	14396
	.byte	16,72
	.word	9540
	.byte	17,2,0,28
	.byte	'Fee_OrderFifo_st',0,1,147,7,53
	.word	14563
	.byte	1,1,28
	.byte	'Fee_Prv_stInit_u8',0,1,164,7,53
	.word	233
	.byte	1,1,28
	.byte	'Fee_NumFlashBanksUsed_u8',0,1,166,7,53
	.word	233
	.byte	1,1,16,192,1
	.word	9932
	.byte	17,11,0,28
	.byte	'Fee_BlockProperties_st',0,1,237,7,53
	.word	14665
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L40:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,15,0,73,19,0,0,7,38,0,73
	.byte	19,0,0,8,4,1,58,15,59,15,57,15,11,15,0,0,9,40,0,3,8,28,13,0,0,10,46,1,49,19,0,0,11,5,0,49,19,0,0,12,21
	.byte	0,54,15,0,0,13,22,0,3,8,58,15,59,15,57,15,73,19,0,0,14,19,1,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,73
	.byte	19,11,15,56,9,0,0,16,1,1,11,15,73,19,0,0,17,33,0,47,15,0,0,18,21,0,54,15,39,12,0,0,19,19,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,20,59,0,3,8,0,0,21,21,1,54,15,39,12,0,0,22,5,0,73,19,0,0,23,23,1,58,15,59,15,57,15
	.byte	11,15,0,0,24,4,1,3,8,58,15,59,15,57,15,11,15,0,0,25,21,0,73,19,54,15,39,12,0,0,26,53,0,73,19,0,0,27,13
	.byte	0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,28,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L41:
	.word	.L124-.L123
.L123:
	.half	3
	.word	.L126-.L125
.L125:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Prv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Fee\\api\\Fee.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0,0
.L126:
.L124:
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_info'
.L42:
	.word	237
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L45,.L44
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_Rb_GetSectChngCnt',0,1,115,24
	.word	.L82
	.byte	1,1,1
	.word	.L25,.L83,.L24
	.byte	4
	.word	.L25,.L83
	.byte	5
	.byte	'xSecChngCnt_u32',0,1,117,29
	.word	.L82,.L84
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_line'
.L44:
	.word	.L128-.L127
.L127:
	.half	3
	.word	.L130-.L129
.L129:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L130:
	.byte	5,30,7,0,5,2
	.word	.L25
	.byte	3,247,0,1,5,8,9
	.half	.L131-.L25
	.byte	1,5,5,9
	.half	.L132-.L131
	.byte	1,5,47,7,9
	.half	.L119-.L132
	.byte	3,3,1,5,69,9
	.half	.L133-.L119
	.byte	1,5,25,9
	.half	.L11-.L133
	.byte	3,5,1,5,5,9
	.half	.L12-.L11
	.byte	3,3,1,5,1,9
	.half	.L13-.L12
	.byte	3,1,1,7,9
	.half	.L46-.L13
	.byte	0,1,1
.L128:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_ranges'
.L45:
	.word	-1,.L25,0,.L46-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_info'
.L47:
	.word	217
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L50,.L49
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_Rb_DisableBackgroundOperation',0,1,158,1,22,1,1,1
	.word	.L27,.L85,.L26
	.byte	4
	.word	.L27,.L85
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_line'
.L49:
	.word	.L135-.L134
.L134:
	.half	3
	.word	.L137-.L136
.L136:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L137:
	.byte	5,5,7,0,5,2
	.word	.L27
	.byte	3,160,1,1,5,25,9
	.half	.L138-.L27
	.byte	1,5,23,9
	.half	.L139-.L138
	.byte	1,5,1,9
	.half	.L140-.L139
	.byte	3,1,1,7,9
	.half	.L51-.L140
	.byte	0,1,1
.L135:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L27,0,.L51-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_info'
.L52:
	.word	216
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_Rb_EnableBackgroundOperation',0,1,175,1,22,1,1,1
	.word	.L29,.L86,.L28
	.byte	4
	.word	.L29,.L86
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_line'
.L54:
	.word	.L142-.L141
.L141:
	.half	3
	.word	.L144-.L143
.L143:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L144:
	.byte	5,5,7,0,5,2
	.word	.L29
	.byte	3,177,1,1,5,25,9
	.half	.L145-.L29
	.byte	1,5,23,9
	.half	.L146-.L145
	.byte	1,5,1,9
	.half	.L147-.L146
	.byte	3,1,1,7,9
	.half	.L56-.L147
	.byte	0,1,1
.L142:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L29,0,.L56-.L29,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_info'
.L57:
	.word	356
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_SrvBinarySearchInBlockProp',0,1,46,25
	.word	.L87
	.byte	1,1,1
	.word	.L23,.L88,.L22
	.byte	4
	.byte	'FeeIdx_u16',0,1,46,79
	.word	.L89,.L90
	.byte	4
	.byte	'CacheIdx_pu16',0,1,47,96
	.word	.L91,.L92
	.byte	5
	.word	.L23,.L88
	.byte	6
	.byte	'xFuncRet_b',0,1,49,30
	.word	.L87,.L93
	.byte	6
	.byte	'xMid_u16',0,1,50,29
	.word	.L89,.L94
	.byte	6
	.byte	'xLeft_u16',0,1,51,29
	.word	.L89,.L95
	.byte	6
	.byte	'xRight_u16',0,1,52,29
	.word	.L89,.L96
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_line'
.L59:
	.word	.L149-.L148
.L148:
	.half	3
	.word	.L151-.L150
.L150:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L151:
	.byte	5,41,7,0,5,2
	.word	.L23
	.byte	3,48,1,5,39,9
	.half	.L115-.L23
	.byte	3,2,1,5,40,9
	.half	.L116-.L115
	.byte	3,1,1,5,54,9
	.half	.L2-.L116
	.byte	3,6,1,5,69,9
	.half	.L152-.L2
	.byte	1,5,67,9
	.half	.L153-.L152
	.byte	1,5,39,9
	.half	.L154-.L153
	.byte	1,5,20,9
	.half	.L155-.L154
	.byte	1,5,35,9
	.half	.L117-.L155
	.byte	3,3,1,5,12,9
	.half	.L156-.L117
	.byte	1,5,34,9
	.half	.L157-.L156
	.byte	1,5,44,9
	.half	.L158-.L157
	.byte	1,5,9,9
	.half	.L159-.L158
	.byte	1,5,28,7,9
	.half	.L160-.L159
	.byte	3,3,1,5,24,9
	.half	.L161-.L160
	.byte	3,3,1,5,13,9
	.half	.L162-.L161
	.byte	3,3,1,5,9,9
	.half	.L3-.L162
	.byte	3,4,1,5,13,7,9
	.half	.L163-.L3
	.byte	3,3,1,5,48,7,9
	.half	.L164-.L163
	.byte	3,3,1,5,53,9
	.half	.L165-.L164
	.byte	1,5,17,9
	.half	.L6-.L165
	.byte	3,5,1,5,13,9
	.half	.L7-.L6
	.byte	3,125,1,5,43,9
	.half	.L5-.L7
	.byte	3,10,1,5,25,9
	.half	.L118-.L5
	.byte	1,5,35,9
	.half	.L9-.L118
	.byte	3,3,1,5,5,7,9
	.half	.L166-.L9
	.byte	3,2,1,5,1,9
	.half	.L4-.L166
	.byte	3,1,1,7,9
	.half	.L61-.L4
	.byte	0,1,1
.L149:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L23,0,.L61-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_info'
.L62:
	.word	298
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_SrvMemSet8',0,1,194,1,23,1,1,1
	.word	.L31,.L97,.L30
	.byte	4
	.byte	'xDest_pu8',0,1,194,1,77
	.word	.L98,.L99
	.byte	4
	.byte	'xPattern_u32',0,1,195,1,59
	.word	.L82,.L100
	.byte	4
	.byte	'numBytes_u32',0,1,196,1,59
	.word	.L82,.L101
	.byte	5
	.word	.L31,.L97
	.byte	6
	.byte	'ctLoop_u32',0,1,198,1,12
	.word	.L82,.L102
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_line'
.L64:
	.word	.L168-.L167
.L167:
	.half	3
	.word	.L170-.L169
.L169:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L170:
	.byte	5,20,7,0,5,2
	.word	.L31
	.byte	3,199,1,1,5,50,9
	.half	.L120-.L31
	.byte	1,5,20,9
	.half	.L15-.L120
	.byte	3,2,1,5,18,9
	.half	.L171-.L15
	.byte	3,1,1,5,62,9
	.half	.L172-.L171
	.byte	3,125,1,5,50,9
	.half	.L14-.L172
	.byte	1,5,5,7,9
	.half	.L173-.L14
	.byte	3,6,1,5,1,9
	.half	.L16-.L173
	.byte	3,1,1,7,9
	.half	.L66-.L16
	.byte	0,1,1
.L168:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L31,0,.L66-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_info'
.L67:
	.word	296
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_SrvMemCopy8',0,1,223,1,23,1,1,1
	.word	.L33,.L103,.L32
	.byte	4
	.byte	'xDest_pu8',0,1,223,1,78
	.word	.L98,.L104
	.byte	4
	.byte	'xSrc_pcu8',0,1,224,1,80
	.word	.L105,.L106
	.byte	4
	.byte	'numBytes_u32',0,1,225,1,60
	.word	.L82,.L107
	.byte	5
	.word	.L33,.L103
	.byte	6
	.byte	'ctLoop_u32',0,1,227,1,12
	.word	.L82,.L108
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_line'
.L69:
	.word	.L175-.L174
.L174:
	.half	3
	.word	.L177-.L176
.L176:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L177:
	.byte	5,20,7,0,5,2
	.word	.L33
	.byte	3,228,1,1,5,50,9
	.half	.L121-.L33
	.byte	1,5,22,9
	.half	.L18-.L121
	.byte	3,2,1,5,20,9
	.half	.L178-.L18
	.byte	1,5,18,9
	.half	.L179-.L178
	.byte	3,1,1,9
	.half	.L180-.L179
	.byte	3,1,1,5,62,9
	.half	.L181-.L180
	.byte	3,124,1,5,50,9
	.half	.L17-.L181
	.byte	1,5,5,7,9
	.half	.L182-.L17
	.byte	3,7,1,5,1,9
	.half	.L19-.L182
	.byte	3,1,1,7,9
	.half	.L71-.L19
	.byte	0,1,1
.L175:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L33,0,.L71-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_info'
.L72:
	.word	249
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_SrvSetFifoMode',0,1,255,1,23,1,1,1
	.word	.L35,.L109,.L34
	.byte	4
	.byte	'Mode_en',0,1,255,1,73
	.word	.L110,.L111
	.byte	4
	.byte	'xJobType_u16',0,1,128,2,65
	.word	.L89,.L112
	.byte	5
	.word	.L35,.L109
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_line'
.L74:
	.word	.L184-.L183
.L183:
	.half	3
	.word	.L186-.L185
.L185:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L186:
	.byte	5,21,7,0,5,2
	.word	.L35
	.byte	3,130,2,1,5,5,9
	.half	.L187-.L35
	.byte	1,5,21,9
	.half	.L188-.L187
	.byte	1,5,44,9
	.half	.L189-.L188
	.byte	1,5,5,9
	.half	.L190-.L189
	.byte	3,2,1,5,1,9
	.half	.L20-.L190
	.byte	3,1,1,7,9
	.half	.L76-.L20
	.byte	0,1,1
.L184:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L35,0,.L76-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_info'
.L77:
	.word	232
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L38
	.byte	3
	.byte	'Fee_SrvGetFifoMode',0,1,152,2,33
	.word	.L110
	.byte	1,1,1
	.word	.L37,.L113,.L36
	.byte	4
	.byte	'xJobType_u16',0,1,152,2,75
	.word	.L89,.L114
	.byte	5
	.word	.L37,.L113
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_line'
.L79:
	.word	.L192-.L191
.L191:
	.half	3
	.word	.L194-.L193
.L193:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Srv.c',0,0,0,0,0
.L194:
	.byte	5,28,7,0,5,2
	.word	.L37
	.byte	3,154,2,1,5,12,9
	.half	.L195-.L37
	.byte	1,5,28,9
	.half	.L196-.L195
	.byte	1,5,42,9
	.half	.L197-.L196
	.byte	1,5,5,9
	.half	.L198-.L197
	.byte	1,5,1,9
	.half	.L21-.L198
	.byte	3,1,1,7,9
	.half	.L81-.L21
	.byte	0,1,1
.L192:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L37,0,.L81-.L37,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L85-.L27
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_loc'
.L28:
	.word	-1,.L29,0,.L86-.L29
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L83-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L84:
	.word	-1,.L25,.L119-.L25,.L11-.L25
	.half	1
	.byte	82
	.word	.L12-.L25,.L83-.L25
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_loc'
.L92:
	.word	-1,.L23,0,.L88-.L23
	.half	1
	.byte	100
	.word	0,0
.L90:
	.word	-1,.L23,0,.L88-.L23
	.half	1
	.byte	84
	.word	0,0
.L22:
	.word	-1,.L23,0,.L88-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L93:
	.word	-1,.L23,.L115-.L23,.L4-.L23
	.half	1
	.byte	82
	.word	0,0
.L95:
	.word	-1,.L23,.L116-.L23,.L88-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L94:
	.word	-1,.L23,.L117-.L23,.L118-.L23
	.half	1
	.byte	95
	.word	0,0
.L96:
	.word	-1,.L23,.L2-.L23,.L88-.L23
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_loc'
.L36:
	.word	-1,.L37,0,.L113-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L114:
	.word	-1,.L37,0,.L113-.L37
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_loc'
.L32:
	.word	-1,.L33,0,.L103-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L108:
	.word	-1,.L33,.L121-.L33,.L103-.L33
	.half	1
	.byte	95
	.word	0,0
.L107:
	.word	-1,.L33,0,.L103-.L33
	.half	1
	.byte	84
	.word	0,0
.L104:
	.word	-1,.L33,0,.L103-.L33
	.half	1
	.byte	100
	.word	0,0
.L106:
	.word	-1,.L33,0,.L103-.L33
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_loc'
.L30:
	.word	-1,.L31,0,.L97-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L102:
	.word	-1,.L31,.L120-.L31,.L97-.L31
	.half	1
	.byte	95
	.word	0,0
.L101:
	.word	-1,.L31,0,.L97-.L31
	.half	1
	.byte	85
	.word	0,0
.L99:
	.word	-1,.L31,0,.L97-.L31
	.half	1
	.byte	100
	.word	0,0
.L100:
	.word	-1,.L31,0,.L97-.L31
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_loc'
.L34:
	.word	-1,.L35,0,.L109-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L111:
	.word	-1,.L35,0,.L109-.L35
	.half	1
	.byte	84
	.word	0,0
.L112:
	.word	-1,.L35,0,.L109-.L35
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L199:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_SrvBinarySearchInBlockProp')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L23,.L88-.L23
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_Rb_GetSectChngCnt')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L25,.L83-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_Rb_DisableBackgroundOperation')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L27,.L85-.L27
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_Rb_EnableBackgroundOperation')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L29,.L86-.L29
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_SrvMemSet8')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L31,.L97-.L31
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_SrvMemCopy8')
	.sect	'.debug_frame'
	.word	20
	.word	.L199,.L33,.L103-.L33
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_SrvSetFifoMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L35,.L109-.L35
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_SrvGetFifoMode')
	.sect	'.debug_frame'
	.word	24
	.word	.L199,.L37,.L113-.L37
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   285  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   286  #if (FEE_PRV_DEBUG_MONITOR != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   287  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   288   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   289   * Fee_DBM_RepError - Debug monitor function
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   290   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   291   * This function stores information for debug monitor.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   292   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   293   * \param   FeeBlkIdx    Fee block index
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   294   * \param   xError       Error ID
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   295   * \param   xErrorInfo   Error info
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   296   * \return  none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   297   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   298   ***************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   299   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   300  FUNC(void ,FEE_CODE) Fee_DBM_RepError(VAR(uint16,FEE_VAR) FeeBlkIdx, VAR(Fee_DebugMonitoringFct_ten,FEE_VAR) xError, VAR(uint8,FEE_VAR) xErrorInfo)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   301  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   302      Fee_DebugMonitoring.xErrorEntry[Fee_DebugMonitoring.idxNewEntry].FeeBlkIdx      = FeeBlkIdx;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   303      Fee_DebugMonitoring.xErrorEntry[Fee_DebugMonitoring.idxNewEntry].xError         = xError;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   304      Fee_DebugMonitoring.xErrorEntry[Fee_DebugMonitoring.idxNewEntry].xErrorInfo     = xErrorInfo;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   305      Fee_DebugMonitoring.xErrorEntry[Fee_DebugMonitoring.idxNewEntry].xSecChngCntVal = Fee_SecChngCnt_u32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   306      Fee_DebugMonitoring.idxNewEntry++;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   307  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   308      if (Fee_DebugMonitoring.idxNewEntry >= FEE_DBM_ERROR_ENTRIES)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   309      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   310          /* If debug monitor is full, overwrite the last entry */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   311          Fee_DebugMonitoring.idxNewEntry = FEE_DBM_ERROR_ENTRIES - 1;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   312          if (Fee_DebugMonitoring.ctBuffOverflow < 0xFF)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   313          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   314              Fee_DebugMonitoring.ctBuffOverflow++;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   315          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   316  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   317      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   318  }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   319  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   320  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   321  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   322  /* FEE_PRESENT == 1 */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   323  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   324  /* 1 == FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   325  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   326  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   327  /*<BASDKey>
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   328  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   329  * $History__:$
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   330  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Srv.c	   331  </BASDKey>*/

	; Module end
