	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc2524a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\rba_FeeFs1_Init.src BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c'

	
$TC16X
	
	.sdecl	'.text.rba_FeeFs1_Init.Fee_Init',code,cluster('Fee_Init')
	.sect	'.text.rba_FeeFs1_Init.Fee_Init'
	.align	2
	
	.global	Fee_Init

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     1  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     2  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     3  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     4  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     5   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     6   * \moduledescription
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     7   *           AUTOSAR FEE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     8   *           According to Document Version 3.0.0, Part of Release 4.0, Revision 2
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	     9   * \scope    INTERN
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    10   **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    11   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    12  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    13  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    14  /*
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    15   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    16   * Includes
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    17   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    18   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    19  #include "Fee.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    20  #include "rba_FeeFs1_Prv.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    21  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    22  #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    23  #include "Mcu.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    24  //#include "TestCd_Fee.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    25  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    26  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    27  #if(defined(FEE_PRV_CFG_SELECTED_FS) && (1 == FEE_PRV_CFG_SELECTED_FS))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    28  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    29  #if (FEE_PRESENT == 1)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    30  /*
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    31   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    32   * Global Variables
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    33   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    34   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    35  #define FEE_START_SEC_CONST_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    36  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    37  /* This pointer is used for easy, byte - wise access to the marker buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    38  /* MR12 RULE 11.3 VIOLATION: Cast necessary for byte wise access */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    39  CONSTP2VAR(uint8, AUTOMATIC, FEE_APPL_DATA) Fee_MarkerBufBytePtr_cpu8 = (uint8*)Fee_llMarkerPageBuf_au32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    40  /* This pointer is used for easy, byte - wise access to the pagebuffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    41  /* MR12 RULE 11.3 VIOLATION: Cast necessary for byte wise access */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    42  CONSTP2VAR(uint8, AUTOMATIC, FEE_APPL_DATA) Fee_DataBytePtr_cpu8 = (uint8*)Fee_llDataBuf_au32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    43  #define FEE_STOP_SEC_CONST_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    44  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    45  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    46  #define FEE_START_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    47  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    48  /* Array containing the sectors that have already been checked completely */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    49  VAR(uint8, FEE_VAR)                     Fee_Prv_stInit_u8        = FEE_PRV_ST_INIT_RUNNING; /* Global init state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    50  VAR(uint8, FEE_VAR)                     Fee_Prv_stReorg_u8       = FEE_PRV_ST_REORG_IDLE; /* Global reorganization state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    51  VAR(uint8, FEE_VAR)                     Fee_NumFlashBanksUsed_u8 = FEE_NUM_FLASH_BANKS_AVAILABLE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    52                                                                          /* Init number of sectors corresponding
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    53                                                                             to HW availability */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    54  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    55  #define FEE_STOP_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    56  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    57  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    58  #define FEE_START_SEC_VAR_INIT_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    59  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    60  VAR(uint32, AUTOMATIC)                  Fee_SecChngCnt_u32 = 0;             /* Fee sector change counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    61  #define FEE_STOP_SEC_VAR_INIT_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    62  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    63  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    64  #define FEE_START_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    65  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    66  /* This pointer is used for easy, byte - wise access to the pagebuffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    67  /* MR12 RULE 11.3 VIOLATION: Cast necessary for byte wise access */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    68  P2VAR(uint8, AUTOMATIC, FEE_APPL_DATA) Fee_PageBytePtr_cpu8;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    69  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    70  /* Global structure containing states, etc. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    71  VAR(Fee_RdWrOrder_tst, AUTOMATIC) Fee_RdWrOrder_st;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    72  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    73  /* Structure contains sector order (0 is eldest, valid sector) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    74  VAR(Fee_LLSectorOrder_tst, AUTOMATIC) Fee_LLSectorOrder_st[FEE_NUM_FLASH_BANKS_AVAILABLE];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    75  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    76  /* Information regarding the last block header that was read */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    77  VAR(Fee_GlobInfoLastRdHeader_tst, AUTOMATIC) Fee_GlobInfoLastRdHeader_st;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    78  VAR(Fee_LLEraseOrderType_tst, AUTOMATIC)  Fee_LLEraseOrder_st;          /* Global sector erase structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    79  VAR(Fee_OrderFifo_tst, AUTOMATIC)       Fee_OrderFifo_st[FEE_QUEUE_SIZE];  /* Fee order queue */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    80  VAR(Fee_LLSecReorgStruct_tst, FEE_VAR)  Fee_LLSecReorgStruct_st;        /* Global sector reorganization structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    81  VAR(Fee_GlobInfoWrBlock_tst, FEE_VAR)   Fee_GlobInfoWrBlock_st;         /* Global sector write structure */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    82  VAR(MemIf_JobResultType, AUTOMATIC)     Fee_JobResult[FEE_QUEUE_SIZE];                  /* Fee job result */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    83  #define FEE_STOP_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    84  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    85  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    86  #define FEE_START_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    87  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    88  /* Array containing the index of each sector in the RAM table (fast access) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    89  VAR(uint8, AUTOMATIC) Fee_idxLLSectorOrder_au8[FEE_NUM_FLASH_BANKS_AVAILABLE];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    90  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    91  /* Array containing the sectors that have already been checked completely */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    92  VAR(uint8,  FEE_CONST) Fee_CacheUpdCompForSect_au8[FEE_NUM_FLASH_BANKS_AVAILABLE];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    93  VAR(uint8, FEE_VAR)                     Fee_idxActQueue_u8;             /* Fee queue index */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    94  VAR(uint8, AUTOMATIC)                   Fee_RdWrRetries_u8;             /* Read and write retry amounts */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    95  #define FEE_STOP_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    96  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    97  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    98  /* Page buffer, used for reading FEE_LL_PAGEBUFFSIZE/FEE_PAGE_SIZE pages at once.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	    99   * Because access is also done with a struct pointer, the buffer has to be aligned
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   100   * on a 32bit address. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   101  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   102  #define FEE_START_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   103  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   104  /* Page buffer, used for reading the sector header. It is possible that
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   105   * a marker has to be written while processing an order with valid
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   106   * data in pagebuffer --> easy solution: use extra buffer for marker handling */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   107  /* MR12 RULE 1504 VIOLATION: This is no function declaration but a variable only with an external linkage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   108  VAR(uint32, AUTOMATIC) Fee_llMarkerPageBuf_au32[FEE_SEC_HEADER_SIZE / 4u];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   109  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   110  /* This array should be located in the ProtRam, if a ProtRam is available */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   111  VAR(uint32, FEE_CONST) Fee_Cache_au32[FEE_NUM_BLOCKS];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   112  #define FEE_STOP_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   113  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   114  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   115  #define FEE_START_SEC_VAR_CLEARED_SECURED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   116  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   117  VAR(uint32, AUTOMATIC) Fee_llPageBuf_au32[(FEE_LL_PAGEBUFFSIZE / 4u) + 2u];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   118  /* Data buffer used for writing data step by step into the flash */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   119  /* MR12 RULE 1504 VIOLATION: This is no function declaration but a variable only with an external linkage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   120  VAR(uint32, AUTOMATIC) Fee_llDataBuf_au32[FEE_LL_DATABUFFSIZE / 4u];
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   121  #define FEE_STOP_SEC_VAR_CLEARED_SECURED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   122  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   123  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   124  #if((FEE_RB_ACT_UNKNOWN_BLOCK_REORG != FALSE) && (FEE_RB_ACT_UNKNOWN_BLOCK_CACHE_SIZE != 0))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   125  /* Cache for unknown block sector reorganisation */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   126  #define FEE_START_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   127  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   128  VAR(uint32, AUTOMATIC) Fee_UnknownBlkCache_Addr_au32[FEE_RB_ACT_UNKNOWN_BLK_CACHE_ARRAY_SIZE];   /* Address of unknown block. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   129  #define FEE_STOP_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   130  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   131  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   132  #define FEE_START_SEC_VAR_CLEARED_16
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   133  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   134  VAR(uint16, AUTOMATIC) Fee_UnknownBlkCache_FeeIndex_u16[FEE_RB_ACT_UNKNOWN_BLK_CACHE_ARRAY_SIZE]; /* Index of unknown block. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   135  #define FEE_STOP_SEC_VAR_CLEARED_16
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   136  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   137  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   138  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   139  #define FEE_START_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   140  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   141  VAR(MemIf_StatusType, FEE_VAR)            Fee_GlobModuleState_st   = MEMIF_UNINIT; /* Global module state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   142  VAR(Fee_stMainType, AUTOMATIC)            Fee_stMain               = FEE_POLLING_MODE_E;                     /* Fee main state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   143  VAR(Fee_Rb_WorkingStateType_ten, FEE_VAR) Fee_Rb_WorkingState_en = FEE_RB_IDLE_E;       /* Working state of Fee_MainFunction */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   144  #define FEE_STOP_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   145  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   146  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   147  #if(FEE_ROB_FEATURE_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   148  #define FEE_START_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   149  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   150  VAR(uint32, AUTOMATIC)                   Fee_DataByteStartCrc_u32;       /* Start value of the robustness checksum */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   151  #define FEE_STOP_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   152  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   153  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   154  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   155  #if ((FEE_RB_MAINTAIN != FALSE) && (FEE_NO_FALLBACK_ACTIVE != FALSE))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   156  #define FEE_START_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   157  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   158  Fee_WriteStateNoFb_ten Fee_WriteStateNoFb_en = FEE_WRITE_NOFB_IDLE_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   159  #define FEE_STOP_SEC_VAR_INIT_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   160  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   161  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   162  #define FEE_START_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   163  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   164  VAR(uint32, AUTOMATIC)                  Fee_Rb_NoFallback_RemAdr_u32;           /* Address of 2nd copy for double storage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   165  #define FEE_STOP_SEC_VAR_CLEARED_32
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   166  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   167  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   168  #define FEE_START_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   169  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   170  VAR(boolean, AUTOMATIC)                 Fee_Rb_NoFallback_LastBlockCfg_b;       /* NoFallback configuration of the last found block */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   171  VAR(boolean, AUTOMATIC)                 Fee_Rb_InvalidateOldCopy_b;             /* Indication to invalidate an old copy */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   172  VAR(boolean, AUTOMATIC)                 Fee_Rb_MaintainRun_b;                   /* Indicate that Maintain is running */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   173  #define FEE_STOP_SEC_VAR_CLEARED_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   174  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   175  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   176  #define FEE_START_SEC_CONST_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   177  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   178  const uint8 Fee_NoFallbackMarkerPattern[FEE_PAGES_USED_BY_BLK_HEADER * FEE_PAGE_LEN] =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   179  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   180          0xDE, 0xAD, 0xB1, 0x0C, 0xB1, 0x0C, 0xDE, 0xAD,
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   181          0xDE, 0xAD, 0xB1, 0x0C, 0xB1, 0x0C, 0xDE, 0xAD
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   182  };
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   183  #define FEE_STOP_SEC_CONST_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   184  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   185  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   186  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   187  #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   188  #define FEE_START_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   189  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   190  VAR(Fee_Prv_stModuleTest_tst, AUTOMATIC) Fee_Prv_stModuleTest_st;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   191  #define FEE_STOP_SEC_VAR_CLEARED_UNSPECIFIED
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   192  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   193  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   194  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   195  /* Buffer to hold 2nd header page contents. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   196  #if (FEE_PAGES_USED_BY_BLK_HEADER == 2u)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   197  #define FEE_START_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   198  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   199  VAR(uint8, AUTOMATIC) Fee_hdr2Buffer_au8[FEE_PAGE_LEN] = {0};
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   200  #define FEE_STOP_SEC_VAR_INIT_8
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   201  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   202  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   203  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   204  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   205   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   206   * Fee_Init(): Initialize the module
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   207   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   208   * This function intializes the Fee and has to be called by
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   209   * the operating system once during the Init phase.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   210   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   211   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   212   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   213   * \retval   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   214   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   215   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   216   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   217   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   218  #define FEE_START_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   219  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   220  #if (FEE_AR42_API_COMPLIANCE == STD_ON)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   221  /*MR12 RULE 8.13 VIOLATION: AR4.2 defines this function prototype with a non-constant pointer*/
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   222  FUNC(void, FEE_CODE) Fee_Init(Fee_ConfigType const * ConfigPtr)
; Function Fee_Init
.L19:
Fee_Init:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   223  #else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   224  FUNC(void, FEE_CODE) Fee_Init(void)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   225  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   226  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   227      VAR(uint8,  AUTOMATIC) xPhySecIdx_u8;       /* Index of physical sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   228      VAR(uint8,  AUTOMATIC) xLogSecIdx_u8;       /* Index of logical sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   229      VAR(uint8,  AUTOMATIC) local_loop_u8;       /* Local loop variable */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   230  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   231      /* Workaround Overstamp invalid header to reduce init time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   232      #if (defined(RBA_FLSIFX_FLASH) || defined(RBA_FLSJDP_FLASH))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   233      VAR(uint8, AUTOMATIC) a_u8 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   234      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   235      /* END Workaround Overstamp invalid header to reduce init time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   236  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   237      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   238      /* Init max timings */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   239      VAR(uint32, AUTOMATIC) xIniTimeStart_u32 = Mcu_Rb_GetSysTimePart(TIM0);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   240      VAR(uint32, AUTOMATIC) xIniTimeEnd_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   241      VAR(uint32, AUTOMATIC) xIniTimeCacheStart_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   242      VAR(uint32, AUTOMATIC) xFindEmptyPageStart_u32 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   243  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   244      Fee_Prv_stModuleTest_st.Fee_ReorgTimeDiffMax_u32    = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   245      Fee_Prv_stModuleTest_st.Fee_EraseTimeDiffMax_u32    = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   246      Fee_Prv_stModuleTest_st.Fee_SearchNextBlockHeaderNum_u32            = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   247      Fee_Prv_stModuleTest_st.Fee_SearchSpecificBlockHeaderNum_u32        = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   248      Fee_Prv_stModuleTest_st.Fee_SearchNextBlockHeaderNumReload_u32      = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   249      Fee_Prv_stModuleTest_st.Fee_SearchNextBlockHeaderLoopRamDiff_u32    = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   250      Fee_Prv_stModuleTest_st.Fee_DataReadNumBytes_u32    = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   251      Fee_Prv_stModuleTest_st.Fee_DataReadDiff_u32        = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   252      Fee_Prv_stModuleTest_st.Eep_InitTimeDiff_u32        = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   253      Fee_Prv_stModuleTest_st.Fee_CacheInitTime_u32       = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   254      Fee_Prv_stModuleTest_st.Fee_FindEmptyPageTime_u32   = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   255      Fee_Prv_stModuleTest_st.Eep_EepRamIniDiff_u32       = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   256      Fee_Prv_stModuleTest_st.Eep_EnvRamIniDiff_u32       = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   257      Fee_Prv_stModuleTest_st.Eep_FirstIniDiff_u32        = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   258      Fee_Prv_stModuleTest_st.Eep_MigrationIniDiff_u32    = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   259      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   260  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   261      // ignore AR4.2 Config Pointer because Postcompile configuration is not possible
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   262  #if (FEE_AR42_API_COMPLIANCE == STD_ON)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   263      if(ConfigPtr != NULL_PTR){}
	jz.a	a4,.L2
.L2:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   264  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   265  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   266      /* Workaround Overstamp invalid header to reduce init time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   267      #if (defined(RBA_FLSIFX_FLASH) || defined(RBA_FLSJDP_FLASH))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   268      for(a_u8 = 0; a_u8 < FEE_PAGE_LEN; a_u8++)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   269      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   270          Fee_hdrBuffer_au8[a_u8] = (uint8)(~FEE_ERASE_PATTERN);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   271      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   272      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   273      /* END Workaround Overstamp invalid header to reduce init time */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   274  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   275      /* Check if the amount of used sectors needs to be reset */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   276      if(Fee_LinkedFunctions_cst.Fee_ResetUsedSectors_pfn != NULL_PTR)
	movh.a	a15,#@his(Fee_LinkedFunctions_cst)
	lea	a15,[a15]@los(Fee_LinkedFunctions_cst)
.L175:
	ld.a	a15,[a15]
.L176:
	jz.a	a15,.L3
.L177:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   277      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   278          /* Overwrite the amount of used sectors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   279          Fee_LinkedFunctions_cst.Fee_ResetUsedSectors_pfn();
	calli	a15
.L3:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   280      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   281  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   282      /* Ensure proper 64 Bit alignment of the pointer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   283      /* MISRA RULE 11.3 VIOLATION: cast of address required */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   284      Fee_PageBytePtr_cpu8 = (uint8*)(((uint32)(&Fee_llPageBuf_au32[0]) + 7u) & ~7uL);
	movh.a	a15,#@his(Fee_PageBytePtr_cpu8)
	lea	a15,[a15]@los(Fee_PageBytePtr_cpu8)
.L178:
	movh.a	a2,#@his(Fee_llPageBuf_au32)
	lea	a2,[a2]@los(Fee_llPageBuf_au32)
	mov.d	d15,a2
.L179:
	add	d15,#7
.L180:
	insert	d15,d15,#0,#0,#3
.L181:
	st.w	[a15],d15
.L182:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   285  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   286      /* Reset the init indicator */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   287      Fee_Prv_stInit_u8 = FEE_PRV_ST_INIT_RUNNING;
	movh.a	a15,#@his(Fee_Prv_stInit_u8)
	lea	a15,[a15]@los(Fee_Prv_stInit_u8)
.L183:
	mov	d15,#0
.L184:
	st.b	[a15],d15
.L185:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   288  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   289      /* Init Fee internal sector change counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   290      Fee_SecChngCnt_u32 = 0;
	movh.a	a15,#@his(Fee_SecChngCnt_u32)
	lea	a15,[a15]@los(Fee_SecChngCnt_u32)
.L186:
	mov	d15,#0
.L187:
	st.w	[a15],d15
.L188:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   291  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   292      /* Indicate polling mode (no OS scheduling active) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   293      Fee_stMain = FEE_POLLING_MODE_E;
	movh.a	a12,#@his(Fee_stMain)
	lea	a12,[a12]@los(Fee_stMain)
.L189:
	mov	d15,#0
.L190:
	st.w	[a12],d15
.L191:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   294  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   295      /* Reset job result */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   296      for (local_loop_u8=0;local_loop_u8<(uint8)FEE_QUEUE_SIZE;local_loop_u8++)
	mov	d15,#0
.L149:
	j	.L4
.L5:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   297      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   298          Fee_JobResult[local_loop_u8] = MEMIF_JOB_OK;
	movh.a	a15,#@his(Fee_JobResult)
	lea	a15,[a15]@los(Fee_JobResult)
.L192:
	addsc.a	a15,a15,d15,#2
.L193:
	mov	d0,#0
.L194:
	st.w	[a15],d0
.L195:
	add	d15,#1
.L4:
	jlt.u	d15,#3,.L5
.L196:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   299      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   300  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   301      /* Init the Fee internal working state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   302      Fee_Rb_WorkingState_en = FEE_RB_IDLE_E;
	movh.a	a15,#@his(Fee_Rb_WorkingState_en)
	lea	a15,[a15]@los(Fee_Rb_WorkingState_en)
.L197:
	mov	d15,#0
.L150:
	st.w	[a15],d15
.L198:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   303  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   304      #if ((FEE_RB_MAINTAIN != FALSE) && (FEE_NO_FALLBACK_ACTIVE != FALSE))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   305      /* Init the internal main write state machine */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   306      Fee_WriteStateNoFb_en = FEE_WRITE_NOFB_IDLE_E;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   307  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   308      /* Clear the Maintain indication flag */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   309      Fee_Rb_MaintainRun_b = FALSE;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   310      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   311  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   312      /* Init Fee internal variables and state machines */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   313      Fee_InitVarAndState();
	call	Fee_InitVarAndState
.L199:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   314  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   315      /* Init the Fee cache and its status */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   316      Fee_InitCache();
	call	Fee_InitCache
.L200:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   317  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   318      /* Clear the order fifo buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   319      Fee_InitOrderFifoBuffer();
	call	Fee_InitOrderFifoBuffer
.L201:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   320  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   321      /* Detect the most current and eldest sectors (physical and logical index) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   322      xPhySecIdx_u8 = Fee_LLDetectActiveSector();
	call	Fee_LLDetectActiveSector
.L151:
	mov	d8,d2
.L152:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   323  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   324      xLogSecIdx_u8 = Fee_idxLLSectorOrder_au8[xPhySecIdx_u8];
	movh.a	a15,#@his(Fee_idxLLSectorOrder_au8)
	lea	a15,[a15]@los(Fee_idxLLSectorOrder_au8)
.L202:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L153:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   325  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   326      #if (!defined(RBA_FLSRH850P1xC_FLASH) && !defined(RBA_FLSV850R1x_FLASH) && !defined(RBA_FLSRH850xx_FLASH))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   327      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   328      xIniTimeCacheStart_u32 = Mcu_Rb_GetSysTimePart(TIM0);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   329      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   330  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   331      #if(FEE_FAST_CACHE_INIT_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   332      /* Build up the cache in the correct logical order for all relevant sectors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   333      /* MR12 RULE 17.7 VIOLATION: Return value is not required */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   334      (void)Fee_BuildUpCacheForAllSect();
	call	Fee_BuildUpCacheForAllSect
.L203:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   335      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   336  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   337      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   338      Fee_Prv_stModuleTest_st.Fee_CacheInitTime_u32 =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   339              MCU_RB_TIM0TICKS_TO_US(Mcu_Rb_GetSysTimePart(TIM0) - xIniTimeCacheStart_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   340      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   341      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   342  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   343      /* Search only within USED sectors for the first empty page */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   344      if(Fee_LLSectorOrder_st[xLogSecIdx_u8].SecState_en == FEE_SECTOR_USED_E)
	mul	d15,d15,#12
.L154:
	movh.a	a15,#@his(Fee_LLSectorOrder_st)
	lea	a15,[a15]@los(Fee_LLSectorOrder_st)
.L204:
	addsc.a	a15,a15,d15,#0
.L205:
	ld.w	d15,[a15]4
.L206:
	jne	d15,#2,.L6
.L207:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   345      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   346  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   347          #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   348          xFindEmptyPageStart_u32 = Mcu_Rb_GetSysTimePart(TIM0);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   349          #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   350  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   351          /* Search empty page in most current sector */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   352          /* MR12 RULE 17.7 VIOLATION: Return value is not required */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   353          (void)Fee_LLFindEmptyPage(xPhySecIdx_u8);
	mov	d4,d8
.L155:
	call	Fee_LLFindEmptyPage
.L156:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   354  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   355          #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   356          Fee_Prv_stModuleTest_st.Fee_FindEmptyPageTime_u32 = MCU_RB_TIM0TICKS_TO_US(Mcu_Rb_GetSysTimePart(TIM0) - xFindEmptyPageStart_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   357          #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   358  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   359          /* Update the respective sector index in the array for checked sectors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   360          Fee_LLUpdateCacheStForSect(xPhySecIdx_u8);
	mov	d4,d8
.L157:
	call	Fee_LLUpdateCacheStForSect
.L158:
	j	.L7
.L6:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   361      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   362      else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   363      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   364          /* Sector state is FULL, ERASED, UNDEF or REQUEST2ERASE */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   365  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   366          /* Check for the FULL state */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   367          if(Fee_LLSectorOrder_st[xLogSecIdx_u8].SecState_en == FEE_SECTOR_FULL_E)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   368          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   369              /* Set the read and write address to the sector end address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   370              Fee_RdWrOrder_st.xRdAddress = Fee_LLGetSecEndAddress(xPhySecIdx_u8);
	movh.a	a15,#@his(Fee_RdWrOrder_st)
	lea	a15,[a15]@los(Fee_RdWrOrder_st)
.L208:
	jne	d15,#3,.L8
.L209:
	mov	d4,d8
.L159:
	call	Fee_LLGetSecEndAddress
.L160:
	st.w	[a15],d2
.L210:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   371          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   372          else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   373          {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   374              /* Sector state is REQUEST2ERASE, ERASED or UNDEF, mark this for the erase sequence */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   375  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   376              /* Set the read and write address to the sector start address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   377              Fee_RdWrOrder_st.xRdAddress = Fee_LLGetSecStartAddress(xPhySecIdx_u8);
	mov	d4,d8
.L161:
	call	Fee_LLGetSecStartAddress
.L162:
	st.w	[a15],d2
.L9:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   378          }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   379  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   380          /* Take over the read address */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   381          Fee_RdWrOrder_st.xWrAddress = Fee_RdWrOrder_st.xRdAddress;
	ld.w	d15,[a15]
.L211:
	st.w	[a15]4,d15
.L7:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   382      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   383  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   384      #if (defined(RBA_FLSRH850P1xC_FLASH) || defined(RBA_FLSV850R1x_FLASH) || defined(RBA_FLSRH850xx_FLASH))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   385      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   386      xIniTimeCacheStart_u32 = Mcu_Rb_GetSysTimePart(TIM0);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   387      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   388  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   389      /* Build up the cache in the correct logical order for all relevant sectors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   390      /* MR12 RULE 17.7 VIOLATION: Return value is not required */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   391      (void)Fee_BuildUpCacheForAllSect();
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   392  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   393      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   394      Fee_Prv_stModuleTest_st.Fee_CacheInitTime_u32 =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   395              MCU_RB_TIM0TICKS_TO_US(Mcu_Rb_GetSysTimePart(TIM0) - xIniTimeCacheStart_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   396      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   397      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   398  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   399      /* FEE168:
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   400       * If initialization is finished within Fee_Init, the function Fee_Init shall set the module state from
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   401       * MEMIF_BUSY_INTERNAL to MEMIF_IDLE once initialization has been successfully finished.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   402       *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   403       * Note: The FEE module s environment shall not call the function Fee_Init during a running operation of the FEE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   404       * module. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   405      Fee_GlobModuleState_st = MEMIF_IDLE;
	movh.a	a15,#@his(Fee_GlobModuleState_st)
	lea	a15,[a15]@los(Fee_GlobModuleState_st)
.L212:
	mov	d15,#1
.L213:
	st.w	[a15],d15
.L214:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   406  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   407      /* Set the global main status to normal mode
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   408       * --> internal or user orders are only processed if the Fee_MainFunction is called
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   409       * by the user (e.g. via scheduling or MemIf) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   410      Fee_stMain = FEE_NORMAL_MODE_E;
	mov	d15,#1
.L215:
	st.w	[a12],d15
.L216:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   411  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   412      /* Set normal mode for reading and writing (ensure maximum Fee speed) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   413  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   414      #if (FEE_PRV_DEBUGGING != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   415      xIniTimeEnd_u32 = Mcu_Rb_GetSysTimePart(TIM0);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   416  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   417      Fee_Prv_stModuleTest_st.Fee_InitTimeDiff_u32 =
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   418              MCU_RB_TIM0TICKS_TO_US(xIniTimeEnd_u32 - xIniTimeStart_u32);
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   419  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   420      Fee_Prv_stModuleTest_st.Fee_InitTimeDiff_u32 /= 1000u;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   421      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   422  }
	ret
.L113:
	
__Fee_Init_function_end:
	.size	Fee_Init,__Fee_Init_function_end-Fee_Init
.L36:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Init.Fee_Rb_EndInit',code,cluster('Fee_Rb_EndInit')
	.sect	'.text.rba_FeeFs1_Init.Fee_Rb_EndInit'
	.align	2
	
	.global	Fee_Rb_EndInit

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   423  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   424  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   425  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   426   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   427   * Fee_Rb_EndInit(): Allow background services of the module
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   428   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   429   * This function indicates the end of the system's init phase and
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   430   * therefore allows the Fee to start erasing any sector if necessary.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   431   * Also Soft Sector reorganizations are only performed if this function
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   432   * has been called before.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   433   * This function should be placed when the period of a necessary
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   434   * fast start-up is finished, e.g. after the ECU is ready to accept
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   435   * CAN messages.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   436   * This function should also be called right after the Fee_Init()
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   437   * function in case the system uses the initialization function
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   438   * inside a power down service (e.g. Shutdown). Otherwise erasing
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   439   * and sector reorganizations will not be formed inside this system
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   440   * state anymore.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   441   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   442   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   443   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   444   * \retval   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   445   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   446   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   447   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   448   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   449  FUNC(void, FEE_CODE) Fee_Rb_EndInit(void)
; Function Fee_Rb_EndInit
.L21:
Fee_Rb_EndInit:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   450  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   451      /* Set the init indicator to finished and allow for erase sequences
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   452       * or the soft sector reorganization in the background whenever
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   453       * the Fee is in IDLE mode */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   454      Fee_Prv_stInit_u8 = FEE_PRV_ST_INIT_DONE;
	movh.a	a15,#@his(Fee_Prv_stInit_u8)
	lea	a15,[a15]@los(Fee_Prv_stInit_u8)
.L221:
	mov	d15,#1
.L222:
	st.b	[a15],d15
.L223:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   455  }
	ret
.L120:
	
__Fee_Rb_EndInit_function_end:
	.size	Fee_Rb_EndInit,__Fee_Rb_EndInit_function_end-Fee_Rb_EndInit
.L41:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Init.Fee_InitVarAndState',code,cluster('Fee_InitVarAndState')
	.sect	'.text.rba_FeeFs1_Init.Fee_InitVarAndState'
	.align	2
	
	.global	Fee_InitVarAndState

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   456  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   457  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   458  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   459   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   460   * Fee_InitVarAndState(): Initialize internal Fee state machines
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   461   *                           and variables
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   462   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   463   * This function initializes the module s internal state machines
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   464   * and variables.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   465   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   466   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   467   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   468   * \retval   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   469   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   470   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   471   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   472   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   473  /* MR12 RULE 1505 VIOLATION: This function is used within the same file and has no external linkage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   474  FUNC(void, FEE_CODE) Fee_InitVarAndState(void)
; Function Fee_InitVarAndState
.L23:
Fee_InitVarAndState:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   475  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   476      VAR(uint8, AUTOMATIC) i_u8;                                         /* loop counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   477  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   478      /* Init read / write addresses */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   479      Fee_RdWrOrder_st.xRdAddress           = FEE_NULL;
	movh.a	a15,#@his(Fee_RdWrOrder_st)
	lea	a15,[a15]@los(Fee_RdWrOrder_st)
.L228:
	mov	d15,#0
.L229:
	st.w	[a15],d15
.L230:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   480      Fee_RdWrOrder_st.xWrAddress           = FEE_NULL;
	mov	d15,#0
.L231:
	st.w	[a15]4,d15
.L232:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   481      Fee_RdWrOrder_st.xCmpAddress          = FEE_NULL;
	mov	d15,#0
.L233:
	st.w	[a15]8,d15
.L234:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   482      Fee_RdWrOrder_st.xCrcAddress          = FEE_NULL;
	mov	d15,#0
.L235:
	st.w	[a15]12,d15
.L236:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   483      Fee_RdWrOrder_st.xCpyAddress          = FEE_NULL;
	mov	d15,#0
.L237:
	st.w	[a15]16,d15
.L238:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   484      Fee_RdWrOrder_st.AdrHdSearchStart_u32 = FEE_MAXUINT32;
	mov	d15,#-1
.L239:
	st.w	[a15]20,d15
.L240:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   485  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   486  #if (FEE_PAGES_USED_BY_BLK_HEADER == 2u)    /* Robust block programming states (Hdpg1 -> Data -> Hdpg2 write) */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   487      Fee_RdWrOrder_st.xHdPg2Address = FEE_NULL;
	mov	d15,#0
.L241:
	st.w	[a15]28,d15
.L242:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   488  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   489  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   490  #if !( defined(RBA_FLSRH850P1xC_FLASH) || defined(RBA_FLSV850R1x_FLASH) || defined(RBA_FLSRH850xx_FLASH) )
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   491      Fee_RdWrOrder_st.LastProgrammedAddress_u32 = FEE_NULL;
	mov	d15,#0
.L243:
	st.w	[a15]32,d15
.L244:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   492      Fee_RdWrOrder_st.LastValidHdrAddress_u32 = FEE_NULL;
	mov	d15,#0
.L245:
	st.w	[a15]36,d15
.L246:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   493  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   494  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   495      /* Init state machines of different Fee functions */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   496      Fee_RdWrOrder_st.Fee_LLSecReorg_en    = FEE_LL_REORG_INIT_E;         /* Fee_LLSectorReorganization */
	mov	d15,#0
.L247:
	st.w	[a15]40,d15
.L248:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   497      Fee_RdWrOrder_st.Fee_LLRedundantCpyChk_en = FEE_LL_REDUNDANT_CPY_CHK_INIT_E;    /* Fee_LLRedundantCpyChk */
	mov	d15,#0
.L249:
	st.w	[a15]44,d15
.L250:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   498      Fee_RdWrOrder_st.Fee_LLCpyBlkFls2Fls_en = FEE_LL_CPY_FLS2FLS_INIT_E; /* Fee_LLCpyBlkFromFls2Fls */
	mov	d15,#0
.L251:
	st.w	[a15]48,d15
.L252:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   499      Fee_RdWrOrder_st.Fee_HLWrBlock_en     = FEE_HL_RDWR_BLK_INIT_E;      /* Fee_HLWriteBlock */
	mov	d15,#0
.L253:
	st.w	[a15]52,d15
.L254:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   500      Fee_RdWrOrder_st.Fee_LLWrBlock_en     = FEE_LL_WR_BLK_INIT_E;        /* Fee_LLWriteBlock */
	mov	d15,#0
.L255:
	st.w	[a15]60,d15
.L256:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   501      Fee_RdWrOrder_st.Fee_HLRdBlock        = FEE_HL_RDWR_BLK_INIT_E;      /* Fee_HLReadBlock */
	mov	d15,#0
.L257:
	st.w	[a15]64,d15
.L258:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   502      Fee_RdWrOrder_st.Fee_LLNextUsedWrBlock_en  = FEE_LL_WR_BLK_INIT_E;   /* Next state after USED-Marker in function
	mov	d15,#0
.L259:
	st.w	[a15]68,d15
.L260:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   503                                                                              Fee_LLWriteBlock */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   504      Fee_RdWrOrder_st.Fee_LLNextEraseWrBlock_en = FEE_LL_WR_BLK_INIT_E;   /* Next state after ERASED-Marker in function
	mov	d15,#0
.L261:
	st.w	[a15]72,d15
.L262:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   505                                                                              Fee_LLWriteBlock */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   506      Fee_RdWrOrder_st.Fee_LLCompBlk        = FEE_LL_CMP_BLK_INIT_E;       /* Fee_LLCompBlkInFlash */
	mov	d15,#0
.L263:
	st.w	[a15]76,d15
.L264:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   507      Fee_RdWrOrder_st.Fee_LLCopyBlk_en     = FEE_LL_CPY_BLK_INIT_E;       /* Fee_LLCopyData2Buffer */
	mov	d15,#0
.L265:
	st.w	[a15]80,d15
.L266:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   508      Fee_RdWrOrder_st.Fee_LLCalcCrcBlk_en  = FEE_LL_CRC_BLK_INIT_E;       /* Fee_LLCalcBlkCrcInFlash */
	mov	d15,#0
.L267:
	st.w	[a15]84,d15
.L268:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   509      Fee_RdWrOrder_st.Fee_LLWrMarker_en    = FEE_LL_MARKER_INIT_E;        /* Fee_LLWriteMarker */
	mov	d15,#0
.L269:
	st.w	[a15]88,d15
.L270:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   510      Fee_RdWrOrder_st.Fee_LLRdState_en     = FEE_LL_INIT_READ_E;          /* Fee_LLSearchSectors / Fee_LLSearchNextBlkHeader */
	mov	d15,#0
.L271:
	st.w	[a15]92,d15
.L272:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   511      Fee_RdWrOrder_st.Fee_LLBlankCheckState_en = FEE_LL_INIT_BLANK_CHECK_E;/* Fee_LLCheckErasePattern */
	mov	d15,#0
.L273:
	st.w	[a15]96,d15
.L274:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   512      #if ( defined(RBA_FLSRH850P1xC_FLASH) || defined(RBA_FLSV850R1x_FLASH) || defined(RBA_FLSRH850xx_FLASH) )
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   513      Fee_RdWrOrder_st.Fee_LLFindEmptyPageState_en = FEE_LL_FINDEMPTYPGE_INIT_E;   /* Fee_LLFindEmptyPage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   514      #else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   515      Fee_RdWrOrder_st.Fee_LLFindEmptyPageState_en = FEE_LL_FIND_CURRENT_SECTOR_E; /* Fee_LLFindEmptyPage */
	mov	d15,#0
.L275:
	st.w	[a15]100,d15
.L276:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   516      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   517      Fee_RdWrOrder_st.Fee_LLSearchBlkHdr_en = FEE_LL_SEARCHBLK_INIT_E;    /* Fee_LLSearchSpecifiedBlkHeader */
	mov	d15,#0
.L277:
	st.w	[a15]104,d15
.L278:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   518      #if((FEE_RB_ACT_UNKNOWN_BLOCK_REORG != FALSE) || (FEE_RB_ACT_SURVIVAL_EVAL != FALSE))
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   519      /* Search for an unknown block without cache. */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   520      #if(FEE_RB_ACT_UNKNOWN_BLOCK_CACHE_SIZE == 0)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   521      Fee_RdWrOrder_st.Fee_LLSearchUnknBlkHdr_en = FEE_LL_SEARCHUNKNBLK_INIT_E;    /* Fee_LLSearchUnknownBlkHeader */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   522      #else
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   523      /* Search of an unknown block using cache */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   524      Fee_RdWrOrder_st.Fee_LLBuildUpCacheUnknownBlk_en = FEE_LL_BLD_UP_CACHE_UNKOWN_BLK_INIT_E; /*Fee_BuildUpCacheUnknownBlk */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   525      Fee_RdWrOrder_st.Fee_UnknownBlkCacheAdd_u32 = FEE_MAXUINT32;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   526      Fee_RdWrOrder_st.Fee_UnknownBlkCacheIdx_u16 = 0;
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   527      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   528      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   529      #if(FEE_FAST_CACHE_INIT_ACTIVE != FALSE)
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   530      Fee_RdWrOrder_st.Fee_LLBuildUpCache_en = FEE_LL_BLD_UP_CACHE_INIT_E;                 /* Fee_BuildUpCache */
	mov	d15,#0
.L279:
	st.w	[a15]108,d15
.L280:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   531      Fee_RdWrOrder_st.Fee_LLBuildUpCacheAllSect_en = FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E; /* Fee_BuildUpCacheForAllSect */
	mov	d15,#0
.L281:
	st.w	[a15]112,d15
.L282:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   532      #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   533  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   534      /* Initialize variables for the erase function */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   535      Fee_LLEraseOrder_st.EraseState_en    = FEE_ERASESEC_IDLE_E;
	movh.a	a15,#@his(Fee_LLEraseOrder_st)
	lea	a15,[a15]@los(Fee_LLEraseOrder_st)
.L283:
	mov	d15,#0
.L284:
	st.w	[a15],d15
.L285:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   536      Fee_LLEraseOrder_st.xPhySectorIdx_u8 = FEE_NO_SECTOR_TO_ERASE;
	mov	d15,#255
.L286:
	st.b	[a15]4,d15
.L287:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   537  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   538      /* Initialize block header of last read order */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   539      Fee_GlobInfoLastRdHeader_st.AdrBlkHeader_u32 = FEE_NULL;            /* Block header address */
	movh.a	a15,#@his(Fee_GlobInfoLastRdHeader_st)
	lea	a15,[a15]@los(Fee_GlobInfoLastRdHeader_st)
.L288:
	mov	d15,#0
.L289:
	st.w	[a15],d15
.L290:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   540      Fee_GlobInfoLastRdHeader_st.BlkLength_u16    = 0;                   /* Block length */
	mov	d15,#0
.L291:
	st.h	[a15]10,d15
.L292:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   541      Fee_GlobInfoLastRdHeader_st.BlkStatus_u8     = 0;                   /* Block status */
	mov	d15,#0
.L293:
	st.b	[a15]14,d15
.L294:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   542      Fee_GlobInfoLastRdHeader_st.FeeIndex_u16     = 0;                   /* Fee index */
	mov	d15,#0
.L295:
	st.h	[a15]12,d15
.L296:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   543      Fee_GlobInfoLastRdHeader_st.HdrCrc16_u16     = 0,                   /* Crc16 checksum (block header) */
	mov	d15,#0
.L297:
	st.h	[a15]8,d15
.L298:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   544      Fee_GlobInfoLastRdHeader_st.BlkCrc32_u32     = 0;                   /* Crc32 checksum (block data) */
	mov	d15,#0
.L299:
	st.w	[a15]4,d15
.L300:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   545  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   546      /* Initialize write block information */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   547      Fee_GlobInfoWrBlock_st.cntCopies_u8       = FEE_CNT_FIRST_COPY;     /* Retry counter to count number of stored copies */
	movh.a	a15,#@his(Fee_GlobInfoWrBlock_st)
	lea	a15,[a15]@los(Fee_GlobInfoWrBlock_st)
.L301:
	mov	d15,#0
.L302:
	st.b	[a15]8,d15
.L303:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   548      Fee_GlobInfoWrBlock_st.cntWriteRetry_u8   = FEE_MAX_RD_WR_COMP_RETRIES;
	mov	d15,#3
.L304:
	st.b	[a15]7,d15
.L305:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   549                                                                          /* Retry counter in case of write errors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   550      Fee_GlobInfoWrBlock_st.Bytes2Read_u16     = 0;                      /* Used during sector change to save number
	mov	d15,#0
.L306:
	st.h	[a15]4,d15
.L307:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   551                                                                             of bytes to be read / written */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   552      Fee_GlobInfoWrBlock_st.CompareResult_u8       = 0;                  /* Result of data compare after writing */
	mov	d15,#0
.L308:
	st.b	[a15]6,d15
.L309:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   553      Fee_GlobInfoWrBlock_st.BytesAlrdyConsid_u16   = 0;                  /* Data offset in used data */
	mov	d15,#0
.L310:
	st.h	[a15],d15
.L311:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   554      Fee_GlobInfoWrBlock_st.BytesAlrdyCompared_u16 = 0;                  /* Number of bytes already compared */
	mov	d15,#0
.L312:
	st.h	[a15]2,d15
.L313:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   555  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   556      /* Initialization of reorganization information */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   557      Fee_LLSecReorgStruct_st.xCntCopies_u8            = 0;               /* Count number of copied copies of a block */
	movh.a	a15,#@his(Fee_LLSecReorgStruct_st)
	lea	a15,[a15]@los(Fee_LLSecReorgStruct_st)
.L314:
	mov	d15,#0
.L315:
	st.b	[a15]8,d15
.L316:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   558      Fee_LLSecReorgStruct_st.xNumBytesAlrdyCopied_u16 = 0;               /* Count number of copied bytes */
	mov	d15,#0
.L317:
	st.h	[a15]4,d15
.L318:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   559      Fee_LLSecReorgStruct_st.xRdAddress_u32           = FEE_NULL;        /* Read address */
	mov	d15,#0
.L319:
	st.w	[a15],d15
.L320:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   560      Fee_LLSecReorgStruct_st.xNumBytesLeftToRdWr_u16  = 0;               /* Number of bytes which are handled in next
	mov	d15,#0
.L321:
	st.h	[a15]6,d15
.L322:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   561                                                                             read or write */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   562  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   563      /* Reset queue index */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   564      Fee_idxActQueue_u8 = (uint8)FEE_QUEUE_SIZE;
	movh.a	a15,#@his(Fee_idxActQueue_u8)
	lea	a15,[a15]@los(Fee_idxActQueue_u8)
.L323:
	mov	d15,#3
.L324:
	st.b	[a15],d15
.L325:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   565  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   566      /* Reset retry counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   567      Fee_RdWrRetries_u8 = FEE_MAX_RD_WR_COMP_RETRIES;
	movh.a	a15,#@his(Fee_RdWrRetries_u8)
	lea	a15,[a15]@los(Fee_RdWrRetries_u8)
.L326:
	mov	d15,#3
.L327:
	st.b	[a15],d15
.L328:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   568  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   569      /* Init sector order array */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   570     for (i_u8=0; i_u8<FEE_NUM_FLASH_BANKS_AVAILABLE; i_u8++)
	mov	d0,#0
.L163:
	j	.L10
.L11:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   571     {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   572         /* Reset all elements inside the strucutre to a defined value */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   573         Fee_LLSectorOrder_st[i_u8].SecState_en       = FEE_SECTOR_STATE_UNDEF_E;
	mul	d15,d0,#12
.L329:
	movh.a	a15,#@his(Fee_LLSectorOrder_st)
	lea	a15,[a15]@los(Fee_LLSectorOrder_st)
.L330:
	addsc.a	a15,a15,d15,#0
.L331:
	mov	d15,#0
.L332:
	st.w	[a15]4,d15
.L333:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   574         Fee_LLSectorOrder_st[i_u8].SecChngCnt_u32    = FEE_SEC_CHANGE_CNT_UNDEF;
	mov	d15,#-1
.L334:
	st.w	[a15],d15
.L335:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   575         Fee_LLSectorOrder_st[i_u8].xPhySecIdx_u8     = 0xFF;
	mov	d15,#255
.L336:
	st.b	[a15]8,d15
.L337:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   576  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   577         /* Reset the physical sector index for all entries */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   578         Fee_idxLLSectorOrder_au8[i_u8] = 0;
	movh.a	a15,#@his(Fee_idxLLSectorOrder_au8)
	lea	a15,[a15]@los(Fee_idxLLSectorOrder_au8)
.L338:
	addsc.a	a15,a15,d0,#0
.L339:
	mov	d15,#0
.L340:
	st.b	[a15],d15
.L341:
	add	d0,#1
.L10:
	jlt.u	d0,#2,.L11
.L342:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   579     }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   580  }
	ret
.L121:
	
__Fee_InitVarAndState_function_end:
	.size	Fee_InitVarAndState,__Fee_InitVarAndState_function_end-Fee_InitVarAndState
.L46:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Init.Fee_InitCache',code,cluster('Fee_InitCache')
	.sect	'.text.rba_FeeFs1_Init.Fee_InitCache'
	.align	2
	
	.global	Fee_InitCache

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   581  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   582  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   583  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   584  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   585   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   586   * Fee_InitCache(): Initialize the cache
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   587   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   588   * This function initializes the module s cache and the cache status.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   589   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   590   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   591   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   592   * \retval   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   593   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   594   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   595   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   596   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   597  /* MR12 RULE 1505 VIOLATION: This function is used within the same file and has no external linkage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   598  FUNC(void, FEE_CODE) Fee_InitCache(void)
; Function Fee_InitCache
.L25:
Fee_InitCache:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   599  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   600      VAR(uint16, AUTOMATIC) i_u16;               /* loop counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   601  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   602      /* Loop over all configured blocks */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   603      for (i_u16=0; i_u16<FEE_NUM_BLOCKS; i_u16++)
	mov	d15,#0
.L164:
	j	.L12
.L13:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   604      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   605          /* Init all cache entries */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   606          Fee_Cache_au32[i_u16] = FEE_CACHE_INIT_VALUE;
	movh.a	a15,#@his(Fee_Cache_au32)
	lea	a15,[a15]@los(Fee_Cache_au32)
.L347:
	addsc.a	a15,a15,d15,#2
.L348:
	mov.u	d0,#45054
	addih	d0,d0,#51966
.L349:
	st.w	[a15],d0
.L350:
	add	d15,#1
.L12:
	jlt.u	d15,#12,.L13
.L351:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   607      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   608  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   609      /* Loop over all configured flash banks */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   610      for (i_u16=0; i_u16<FEE_NUM_FLASH_BANKS_AVAILABLE; i_u16++)
	mov	d15,#0
.L352:
	j	.L14
.L15:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   611      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   612          /* Clear marker for all sectors */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   613          Fee_CacheUpdCompForSect_au8[i_u16] = FEE_CACHE_UPD_NOT_COMP_FOR_SECT;
	movh.a	a15,#@his(Fee_CacheUpdCompForSect_au8)
	lea	a15,[a15]@los(Fee_CacheUpdCompForSect_au8)
.L353:
	addsc.a	a15,a15,d15,#0
.L354:
	mov	d0,#0
.L355:
	st.b	[a15],d0
.L356:
	add	d15,#1
.L14:
	jlt.u	d15,#2,.L15
.L357:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   614      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   615  }
	ret
.L123:
	
__Fee_InitCache_function_end:
	.size	Fee_InitCache,__Fee_InitCache_function_end-Fee_InitCache
.L51:
	; End of function
	
	.sdecl	'.text.rba_FeeFs1_Init.Fee_InitOrderFifoBuffer',code,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.text.rba_FeeFs1_Init.Fee_InitOrderFifoBuffer'
	.align	2
	
	.global	Fee_InitOrderFifoBuffer

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   616  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   617  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   618  /**
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   619   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   620   * Fee_InitOrderFifoBuffer(): Initialize the Fee interal order fifo
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   621   *                            buffer
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   622   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   623   * This function initializes the module s order fifo buffer.
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   624   *
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   625   * \param    none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   626   * \return
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   627   * \retval   none
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   628   * \seealso
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   629   * \usedresources
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   630   *********************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   631   */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   632  /* MR12 RULE 1505 VIOLATION: This function is used within the same file and has no external linkage */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   633  FUNC(void, FEE_CODE) Fee_InitOrderFifoBuffer(void)
; Function Fee_InitOrderFifoBuffer
.L27:
Fee_InitOrderFifoBuffer:	.type	func

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   634  {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   635      VAR(uint16, AUTOMATIC) i_u16;               /* loop counter */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   636  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   637      /* Clear order fifo buffer */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   638      for (i_u16=0; i_u16<(uint8)FEE_QUEUE_SIZE; i_u16++)
	mov	d0,#0
.L165:
	j	.L16
.L17:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   639      {
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   640          Fee_OrderFifo_st[i_u16].DataBufferPtr_pu8  = NULL_PTR;
	mul	d15,d0,#24
.L362:
	movh.a	a15,#@his(Fee_OrderFifo_st)
	lea	a15,[a15]@los(Fee_OrderFifo_st)
.L363:
	addsc.a	a15,a15,d15,#0
.L364:
	mov.a	a2,#0
.L365:
	st.a	[a15],a2
.L366:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   641          Fee_OrderFifo_st[i_u16].FeeIdx_u16         = 0x0000;
	mov	d15,#0
.L367:
	st.h	[a15]4,d15
.L368:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   642          Fee_OrderFifo_st[i_u16].Length_u16         = 0;
	mov	d15,#0
.L369:
	st.h	[a15]10,d15
.L370:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   643          Fee_OrderFifo_st[i_u16].Mode_en            = FEE_NO_ORDER;
	mov	d15,#0
.L371:
	st.w	[a15]12,d15
.L372:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   644          Fee_OrderFifo_st[i_u16].SecLevel_u8        = 0;
	mov	d15,#0
.L373:
	st.b	[a15]20,d15
.L374:
	add	d0,#1
.L16:
	jlt.u	d0,#3,.L17
.L375:

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   645      }
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   646  }
	ret
.L126:
	
__Fee_InitOrderFifoBuffer_function_end:
	.size	Fee_InitOrderFifoBuffer,__Fee_InitOrderFifoBuffer_function_end-Fee_InitOrderFifoBuffer
.L56:
	; End of function
	
	.sdecl	'.rodata.rba_FeeFs1_Init.Fee_MarkerBufBytePtr_cpu8',data,rom,cluster('Fee_MarkerBufBytePtr_cpu8')
	.sect	'.rodata.rba_FeeFs1_Init.Fee_MarkerBufBytePtr_cpu8'
	.global	Fee_MarkerBufBytePtr_cpu8
	.align	4
Fee_MarkerBufBytePtr_cpu8:	.type	object
	.size	Fee_MarkerBufBytePtr_cpu8,4
	.word	Fee_llMarkerPageBuf_au32
	.sdecl	'.rodata.rba_FeeFs1_Init.Fee_DataBytePtr_cpu8',data,rom,cluster('Fee_DataBytePtr_cpu8')
	.sect	'.rodata.rba_FeeFs1_Init.Fee_DataBytePtr_cpu8'
	.global	Fee_DataBytePtr_cpu8
	.align	4
Fee_DataBytePtr_cpu8:	.type	object
	.size	Fee_DataBytePtr_cpu8,4
	.word	Fee_llDataBuf_au32
	.sdecl	'.data.rba_FeeFs1_Init.Fee_Prv_stInit_u8',data,cluster('Fee_Prv_stInit_u8')
	.sect	'.data.rba_FeeFs1_Init.Fee_Prv_stInit_u8'
	.global	Fee_Prv_stInit_u8
Fee_Prv_stInit_u8:	.type	object
	.size	Fee_Prv_stInit_u8,1
	.space	1
	.sdecl	'.data.rba_FeeFs1_Init.Fee_Prv_stReorg_u8',data,cluster('Fee_Prv_stReorg_u8')
	.sect	'.data.rba_FeeFs1_Init.Fee_Prv_stReorg_u8'
	.global	Fee_Prv_stReorg_u8
Fee_Prv_stReorg_u8:	.type	object
	.size	Fee_Prv_stReorg_u8,1
	.space	1
	.sdecl	'.data.rba_FeeFs1_Init.Fee_NumFlashBanksUsed_u8',data,cluster('Fee_NumFlashBanksUsed_u8')
	.sect	'.data.rba_FeeFs1_Init.Fee_NumFlashBanksUsed_u8'
	.global	Fee_NumFlashBanksUsed_u8
Fee_NumFlashBanksUsed_u8:	.type	object
	.size	Fee_NumFlashBanksUsed_u8,1
	.byte	2
	.sdecl	'.data.rba_FeeFs1_Init.Fee_SecChngCnt_u32',data,cluster('Fee_SecChngCnt_u32')
	.sect	'.data.rba_FeeFs1_Init.Fee_SecChngCnt_u32'
	.global	Fee_SecChngCnt_u32
	.align	4
Fee_SecChngCnt_u32:	.type	object
	.size	Fee_SecChngCnt_u32,4
	.space	4
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_PageBytePtr_cpu8',data,cluster('Fee_PageBytePtr_cpu8')
	.sect	'.bss.rba_FeeFs1_Init.Fee_PageBytePtr_cpu8'
	.global	Fee_PageBytePtr_cpu8
	.align	4
Fee_PageBytePtr_cpu8:	.type	object
	.size	Fee_PageBytePtr_cpu8,4
	.space	4
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_RdWrOrder_st',data,cluster('Fee_RdWrOrder_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_RdWrOrder_st'
	.global	Fee_RdWrOrder_st
	.align	4
Fee_RdWrOrder_st:	.type	object
	.size	Fee_RdWrOrder_st,116
	.space	116
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_LLSectorOrder_st',data,cluster('Fee_LLSectorOrder_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_LLSectorOrder_st'
	.global	Fee_LLSectorOrder_st
	.align	4
Fee_LLSectorOrder_st:	.type	object
	.size	Fee_LLSectorOrder_st,24
	.space	24
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_GlobInfoLastRdHeader_st',data,cluster('Fee_GlobInfoLastRdHeader_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_GlobInfoLastRdHeader_st'
	.global	Fee_GlobInfoLastRdHeader_st
	.align	4
Fee_GlobInfoLastRdHeader_st:	.type	object
	.size	Fee_GlobInfoLastRdHeader_st,16
	.space	16
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_LLEraseOrder_st',data,cluster('Fee_LLEraseOrder_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_LLEraseOrder_st'
	.global	Fee_LLEraseOrder_st
	.align	4
Fee_LLEraseOrder_st:	.type	object
	.size	Fee_LLEraseOrder_st,8
	.space	8
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_OrderFifo_st',data,cluster('Fee_OrderFifo_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_OrderFifo_st'
	.global	Fee_OrderFifo_st
	.align	4
Fee_OrderFifo_st:	.type	object
	.size	Fee_OrderFifo_st,72
	.space	72
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_LLSecReorgStruct_st',data,cluster('Fee_LLSecReorgStruct_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_LLSecReorgStruct_st'
	.global	Fee_LLSecReorgStruct_st
	.align	4
Fee_LLSecReorgStruct_st:	.type	object
	.size	Fee_LLSecReorgStruct_st,12
	.space	12
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_GlobInfoWrBlock_st',data,cluster('Fee_GlobInfoWrBlock_st')
	.sect	'.bss.rba_FeeFs1_Init.Fee_GlobInfoWrBlock_st'
	.global	Fee_GlobInfoWrBlock_st
	.align	2
Fee_GlobInfoWrBlock_st:	.type	object
	.size	Fee_GlobInfoWrBlock_st,10
	.space	10
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_JobResult',data,cluster('Fee_JobResult')
	.sect	'.bss.rba_FeeFs1_Init.Fee_JobResult'
	.global	Fee_JobResult
	.align	4
Fee_JobResult:	.type	object
	.size	Fee_JobResult,12
	.space	12
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_idxLLSectorOrder_au8',data,cluster('Fee_idxLLSectorOrder_au8')
	.sect	'.bss.rba_FeeFs1_Init.Fee_idxLLSectorOrder_au8'
	.global	Fee_idxLLSectorOrder_au8
Fee_idxLLSectorOrder_au8:	.type	object
	.size	Fee_idxLLSectorOrder_au8,2
	.space	2
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_CacheUpdCompForSect_au8',data,cluster('Fee_CacheUpdCompForSect_au8')
	.sect	'.bss.rba_FeeFs1_Init.Fee_CacheUpdCompForSect_au8'
	.global	Fee_CacheUpdCompForSect_au8
Fee_CacheUpdCompForSect_au8:	.type	object
	.size	Fee_CacheUpdCompForSect_au8,2
	.space	2
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_idxActQueue_u8',data,cluster('Fee_idxActQueue_u8')
	.sect	'.bss.rba_FeeFs1_Init.Fee_idxActQueue_u8'
	.global	Fee_idxActQueue_u8
Fee_idxActQueue_u8:	.type	object
	.size	Fee_idxActQueue_u8,1
	.space	1
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_RdWrRetries_u8',data,cluster('Fee_RdWrRetries_u8')
	.sect	'.bss.rba_FeeFs1_Init.Fee_RdWrRetries_u8'
	.global	Fee_RdWrRetries_u8
Fee_RdWrRetries_u8:	.type	object
	.size	Fee_RdWrRetries_u8,1
	.space	1
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_llMarkerPageBuf_au32',data,cluster('Fee_llMarkerPageBuf_au32')
	.sect	'.bss.rba_FeeFs1_Init.Fee_llMarkerPageBuf_au32'
	.global	Fee_llMarkerPageBuf_au32
	.align	4
Fee_llMarkerPageBuf_au32:	.type	object
	.size	Fee_llMarkerPageBuf_au32,96
	.space	96
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_Cache_au32',data,cluster('Fee_Cache_au32')
	.sect	'.bss.rba_FeeFs1_Init.Fee_Cache_au32'
	.global	Fee_Cache_au32
	.align	4
Fee_Cache_au32:	.type	object
	.size	Fee_Cache_au32,48
	.space	48
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_llPageBuf_au32',data,cluster('Fee_llPageBuf_au32')
	.sect	'.bss.rba_FeeFs1_Init.Fee_llPageBuf_au32'
	.global	Fee_llPageBuf_au32
	.align	4
Fee_llPageBuf_au32:	.type	object
	.size	Fee_llPageBuf_au32,1032
	.space	1032
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_llDataBuf_au32',data,cluster('Fee_llDataBuf_au32')
	.sect	'.bss.rba_FeeFs1_Init.Fee_llDataBuf_au32'
	.global	Fee_llDataBuf_au32
	.align	4
Fee_llDataBuf_au32:	.type	object
	.size	Fee_llDataBuf_au32,256
	.space	256
	.sdecl	'.data.rba_FeeFs1_Init.Fee_GlobModuleState_st',data,cluster('Fee_GlobModuleState_st')
	.sect	'.data.rba_FeeFs1_Init.Fee_GlobModuleState_st'
	.global	Fee_GlobModuleState_st
	.align	4
Fee_GlobModuleState_st:	.type	object
	.size	Fee_GlobModuleState_st,4
	.space	4
	.sdecl	'.data.rba_FeeFs1_Init.Fee_stMain',data,cluster('Fee_stMain')
	.sect	'.data.rba_FeeFs1_Init.Fee_stMain'
	.global	Fee_stMain
	.align	4
Fee_stMain:	.type	object
	.size	Fee_stMain,4
	.space	4
	.sdecl	'.data.rba_FeeFs1_Init.Fee_Rb_WorkingState_en',data,cluster('Fee_Rb_WorkingState_en')
	.sect	'.data.rba_FeeFs1_Init.Fee_Rb_WorkingState_en'
	.global	Fee_Rb_WorkingState_en
	.align	4
Fee_Rb_WorkingState_en:	.type	object
	.size	Fee_Rb_WorkingState_en,4
	.space	4
	.sdecl	'.bss.rba_FeeFs1_Init.Fee_DataByteStartCrc_u32',data,cluster('Fee_DataByteStartCrc_u32')
	.sect	'.bss.rba_FeeFs1_Init.Fee_DataByteStartCrc_u32'
	.global	Fee_DataByteStartCrc_u32
	.align	4
Fee_DataByteStartCrc_u32:	.type	object
	.size	Fee_DataByteStartCrc_u32,4
	.space	4
	.sdecl	'.data.rba_FeeFs1_Init.Fee_hdr2Buffer_au8',data,cluster('Fee_hdr2Buffer_au8')
	.sect	'.data.rba_FeeFs1_Init.Fee_hdr2Buffer_au8'
	.global	Fee_hdr2Buffer_au8
Fee_hdr2Buffer_au8:	.type	object
	.size	Fee_hdr2Buffer_au8,8
	.space	8
	.calls	'Fee_Init','__INDIRECT__'
	.calls	'Fee_Init','Fee_InitVarAndState'
	.calls	'Fee_Init','Fee_InitCache'
	.calls	'Fee_Init','Fee_InitOrderFifoBuffer'
	.calls	'Fee_Init','Fee_LLDetectActiveSector'
	.calls	'Fee_Init','Fee_BuildUpCacheForAllSect'
	.calls	'Fee_Init','Fee_LLFindEmptyPage'
	.calls	'Fee_Init','Fee_LLUpdateCacheStForSect'
	.calls	'Fee_Init','Fee_LLGetSecEndAddress'
	.calls	'Fee_Init','Fee_LLGetSecStartAddress'
	.calls	'Fee_Init','',0
	.calls	'Fee_Rb_EndInit','',0
	.calls	'Fee_InitVarAndState','',0
	.calls	'Fee_InitCache','',0
	.extern	Fee_LinkedFunctions_cst
	.extern	Fee_LLDetectActiveSector
	.extern	Fee_LLFindEmptyPage
	.extern	Fee_LLGetSecStartAddress
	.extern	Fee_LLGetSecEndAddress
	.extern	Fee_LLUpdateCacheStForSect
	.extern	Fee_BuildUpCacheForAllSect
	.extern	__INDIRECT__
	.calls	'Fee_InitOrderFifoBuffer','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L29:
	.word	17231
	.half	3
	.word	.L30
	.byte	4
.L28:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L31
.L130:
	.byte	2
	.byte	'unsigned int',0,4,7,3
	.byte	'Fee_SrvRoundUp',0,3,1,140,11,21
	.word	148
	.byte	1,1,4
	.byte	'value_u32',0,1,140,11,43
	.word	148
	.byte	4
	.byte	'stepsize_u32',0,1,140,11,62
	.word	148
	.byte	5,0
.L116:
	.byte	2
	.byte	'unsigned char',0,1,8,6,2,187,1,9,1,7
	.byte	'dummy_u8',0
	.word	234
	.byte	1,2,35,0,0,8
	.word	251
.L114:
	.byte	9
	.word	276
.L124:
	.byte	2
	.byte	'unsigned short int',0,2,7,10
	.byte	'Fee_LLDetectActiveSector',0,1,167,8,31
	.word	234
	.byte	1,1,1,1,11,1,137,2,9,4,12
	.byte	'FEE_ORDER_PENDING_E',0,0,12
	.byte	'FEE_ORDER_FINISHED_E',0,1,12
	.byte	'FEE_BLOCK_INVALIDATED_E',0,2,12
	.byte	'FEE_ERROR_E',0,3,12
	.byte	'FEE_SECTORCHANGE_E',0,4,12
	.byte	'FEE_SECTORFULL_E',0,5,12
	.byte	'FEE_ABORTED_E',0,6,12
	.byte	'FEE_ERASE_SECTOR_E',0,7,12
	.byte	'FEE_SEARCH_ABORTED_E',0,8,12
	.byte	'FEE_NUM_RET_VAL_E',0,9,0,13
	.byte	'Fee_LLFindEmptyPage',0,1,168,8,41
	.word	346
	.byte	1,1,1,1,4
	.byte	'PhySectIdxUsedSect_u8',0,1,168,8,67
	.word	234
	.byte	0,13
	.byte	'Fee_LLGetSecStartAddress',0,1,206,8,31
	.word	148
	.byte	1,1,1,1,4
	.byte	'xPhySectorIdx_u8',0,1,206,8,78
	.word	234
	.byte	0,13
	.byte	'Fee_LLGetSecEndAddress',0,1,207,8,31
	.word	148
	.byte	1,1,1,1,4
	.byte	'xPhySectorIdx_u8',0,1,207,8,76
	.word	234
	.byte	0,14
	.byte	'Fee_LLUpdateCacheStForSect',0,1,165,9,30,1,1,1,1,4
	.byte	'PhySecIdx_u8',0,1,165,9,79
	.word	234
	.byte	0,10
	.byte	'Fee_BuildUpCacheForAllSect',0,1,182,9,41
	.word	346
	.byte	1,1,1,1,15
	.word	164
	.byte	16
	.word	191
	.byte	16
	.word	210
	.byte	5,0,17
	.byte	'__INDIRECT__',0,3,1,1,1,1,1,18,1,9
	.word	887
	.byte	19
	.byte	'__codeptr',0,3,1,1
	.word	889
	.byte	2
	.byte	'char',0,1,6,19
	.byte	'sint8',0,4,76,25
	.word	912
	.byte	19
	.byte	'uint8',0,4,81,25
	.word	234
	.byte	19
	.byte	'uint16',0,4,91,25
	.word	286
	.byte	19
	.byte	'uint32',0,4,106,24
	.word	148
	.byte	2
	.byte	'unsigned long long int',0,8,7,19
	.byte	'uint64',0,4,111,30
	.word	978
	.byte	19
	.byte	'boolean',0,4,127,25
	.word	234
	.byte	19
	.byte	'StatusType',0,5,191,1,27
	.word	234
	.byte	19
	.byte	'Std_ReturnType',0,5,199,1,15
	.word	234
	.byte	6,5,206,1,9,8,7
	.byte	'vendorID',0
	.word	286
	.byte	2,2,35,0,7
	.byte	'moduleID',0
	.word	286
	.byte	2,2,35,2,7
	.byte	'sw_major_version',0
	.word	234
	.byte	1,2,35,4,7
	.byte	'sw_minor_version',0
	.word	234
	.byte	1,2,35,5,7
	.byte	'sw_patch_version',0
	.word	234
	.byte	1,2,35,6,0,19
	.byte	'Std_VersionInfoType',0,5,213,1,3
	.word	1079
	.byte	6,6,93,9,8,7
	.byte	'Class',0
	.word	234
	.byte	1,2,35,0,7
	.byte	'TIN',0
	.word	234
	.byte	1,2,35,1,7
	.byte	'ReturnAddress',0
	.word	148
	.byte	4,2,35,4,0,19
	.byte	'OsTrapInfoType',0,6,97,3
	.word	1229
	.byte	20,68
	.word	148
	.byte	21,16,0,6,6,154,1,9,68,7
	.byte	'store',0
	.word	1309
	.byte	68,2,35,0,0,20,68
	.word	1318
	.byte	21,0,0,19
	.byte	'Os_JumpBufType',0,6,156,1,3
	.word	1340
	.byte	19
	.byte	'Os_StackTraceType',0,6,174,1,18
	.word	148
	.byte	6,6,175,1,9,8,7
	.byte	'sp',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'ctx',0
	.word	148
	.byte	4,2,35,4,0,19
	.byte	'Os_StackValueType',0,6,175,1,63
	.word	1400
	.byte	19
	.byte	'Os_StackSizeType',0,6,176,1,27
	.word	1400
	.byte	22,1,1,9
	.word	1485
	.byte	19
	.byte	'Os_VoidVoidFunctionType',0,6,179,1,16
	.word	1488
	.byte	19
	.byte	'ApplicationType',0,6,193,1,23
	.word	234
	.byte	23
	.byte	'Os_ApplicationConfigurationType_s',0,6,198,1,16,2,7
	.byte	'app_id',0
	.word	234
	.byte	1,2,35,0,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,1,0,19
	.byte	'Os_ApplicationConfigurationType',0,6,201,1,3
	.word	1551
	.byte	19
	.byte	'Os_CoreStateType',0,6,203,1,16
	.word	148
	.byte	19
	.byte	'AreaIdType',0,6,204,1,16
	.word	286
	.byte	19
	.byte	'Os_PeripheralAddressType',0,6,212,1,22
	.word	148
	.byte	19
	.byte	'TickType',0,6,221,1,22
	.word	148
	.byte	19
	.byte	'Os_StopwatchTickType',0,6,225,1,22
	.word	148
	.byte	9
	.word	148
	.byte	19
	.byte	'Os_Lockable',0,6,234,1,18
	.word	1793
	.byte	19
	.byte	'CoreIdType',0,6,236,1,16
	.word	286
	.byte	19
	.byte	'SpinlockIdType',0,6,237,1,16
	.word	286
	.byte	11,6,239,1,9,4,12
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,12
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,19
	.byte	'TryToGetSpinlockType',0,6,239,1,74
	.word	1863
	.byte	11,6,174,2,9,4,12
	.byte	'APPLICATION_ACCESSIBLE',0,0,12
	.byte	'APPLICATION_RESTARTING',0,1,12
	.byte	'APPLICATION_TERMINATED',0,2,0,19
	.byte	'ApplicationStateType',0,6,174,2,92
	.word	1956
	.byte	24
	.byte	'void',0,9
	.word	2068
	.byte	25,1,1,26
	.word	234
	.byte	26
	.word	2074
	.byte	0,9
	.word	2079
	.byte	19
	.byte	'Os_FunctionEntryType',0,6,183,2,16
	.word	2093
	.byte	23
	.byte	'Os_MeterInfoType_s',0,6,193,2,16,48,7
	.byte	'elapsed',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'previous',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'max',0
	.word	148
	.byte	4,2,35,8,7
	.byte	'cumulative',0
	.word	148
	.byte	4,2,35,12,7
	.byte	'stackbase',0
	.word	1400
	.byte	8,2,35,16,7
	.byte	'stackusage',0
	.word	1400
	.byte	8,2,35,24,7
	.byte	'stackmax',0
	.word	1400
	.byte	8,2,35,32,7
	.byte	'stackbudget',0
	.word	1400
	.byte	8,2,35,40,0,19
	.byte	'Os_MeterInfoType',0,6,202,2,3
	.word	2128
	.byte	9
	.word	2128
	.byte	19
	.byte	'Os_MeterInfoRefType',0,6,203,2,50
	.word	2326
	.byte	19
	.byte	'EventMaskType',0,6,206,2,15
	.word	234
	.byte	19
	.byte	'Os_imaskType',0,6,211,2,16
	.word	148
	.byte	23
	.byte	'Os_ISRDynType_s',0,6,213,2,16,48,7
	.byte	'meter',0
	.word	2128
	.byte	48,2,35,0,0,19
	.byte	'Os_ISRDynType',0,6,215,2,3
	.word	2405
	.byte	9
	.word	2405
	.byte	8
	.word	2466
	.byte	23
	.byte	'Os_ISRType_s',0,6,216,2,16,24,7
	.byte	'entry_function',0
	.word	1493
	.byte	4,2,35,0,7
	.byte	'dynamic',0
	.word	2471
	.byte	4,2,35,4,7
	.byte	'imask',0
	.word	148
	.byte	4,2,35,8,7
	.byte	'stackbudget',0
	.word	1400
	.byte	8,2,35,12,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,20,7
	.byte	'application',0
	.word	234
	.byte	1,2,35,21,0,19
	.byte	'Os_ISRType',0,6,223,2,3
	.word	2476
	.byte	9
	.word	1485
	.byte	8
	.word	2476
	.byte	9
	.word	2635
	.byte	19
	.byte	'ISRType',0,6,224,2,46
	.word	2640
	.byte	19
	.byte	'Os_bitmask',0,6,239,2,22
	.word	148
	.byte	19
	.byte	'Os_pset0Type',0,6,240,2,20
	.word	148
	.byte	19
	.byte	'Os_pset1Type',0,6,241,2,20
	.word	148
	.byte	19
	.byte	'Os_pset2Type',0,6,242,2,20
	.word	148
	.byte	27,6,243,2,9,4,7
	.byte	'p0',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'p1',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'p2',0
	.word	148
	.byte	4,2,35,0,0,19
	.byte	'Os_psetType',0,6,247,2,3
	.word	2748
	.byte	27,6,249,2,9,4,7
	.byte	't0',0
	.word	148
	.byte	4,2,35,0,7
	.byte	't1',0
	.word	148
	.byte	4,2,35,0,7
	.byte	't2',0
	.word	148
	.byte	4,2,35,0,0,19
	.byte	'Os_tpmaskType',0,6,253,2,3
	.word	2812
	.byte	19
	.byte	'Os_ActivationCountType',0,6,254,2,23
	.word	234
	.byte	23
	.byte	'Os_TaskDynType_s',0,6,128,3,16,120,7
	.byte	'terminate_jump_buf',0
	.word	1349
	.byte	68,2,35,0,7
	.byte	'meter',0
	.word	2128
	.byte	48,2,35,68,7
	.byte	'activation_count',0
	.word	234
	.byte	1,2,35,116,0,19
	.byte	'Os_TaskDynType',0,6,132,3,3
	.word	2910
	.byte	20,68
	.word	1318
	.byte	21,0,0,9
	.word	2910
	.byte	8
	.word	3036
	.byte	23
	.byte	'Os_TaskType_s',0,6,134,3,16,40,7
	.byte	'dynamic',0
	.word	3041
	.byte	4,2,35,0,7
	.byte	'entry_function',0
	.word	1493
	.byte	4,2,35,4,7
	.byte	'pset',0
	.word	2748
	.byte	4,2,35,8,7
	.byte	'base_tpmask',0
	.word	2812
	.byte	4,2,35,12,7
	.byte	'tpmask',0
	.word	2812
	.byte	4,2,35,16,7
	.byte	'core_id',0
	.word	286
	.byte	2,2,35,20,7
	.byte	'index',0
	.word	148
	.byte	4,2,35,24,7
	.byte	'stackbudget',0
	.word	1400
	.byte	8,2,35,28,7
	.byte	'activation_count',0
	.word	234
	.byte	1,2,35,36,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,37,7
	.byte	'application',0
	.word	234
	.byte	1,2,35,38,0,19
	.byte	'Os_TaskType',0,6,146,3,3
	.word	3046
	.byte	8
	.word	3046
	.byte	9
	.word	3296
	.byte	19
	.byte	'TaskType',0,6,147,3,47
	.word	3301
	.byte	28
	.byte	'Os_TaskStateType',0,6,155,3,6,4,12
	.byte	'SUSPENDED',0,0,12
	.byte	'READY',0,1,12
	.byte	'WAITING',0,2,12
	.byte	'RUNNING',0,3,0,19
	.byte	'TaskStateType',0,6,156,3,31
	.word	3324
	.byte	27,6,167,3,3,4,7
	.byte	'tpmask',0
	.word	2812
	.byte	4,2,35,0,0,23
	.byte	'Os_ResourceDynType_s',0,6,166,3,16,4,7
	.byte	'saved_priority',0
	.word	3411
	.byte	4,2,35,0,0,19
	.byte	'Os_ResourceDynType',0,6,170,3,3
	.word	3434
	.byte	9
	.word	3434
	.byte	8
	.word	3514
	.byte	23
	.byte	'Os_ResourceType_s',0,6,171,3,16,12,7
	.byte	'dynamic',0
	.word	3519
	.byte	4,2,35,0,7
	.byte	'tpmask',0
	.word	2812
	.byte	4,2,35,4,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,8,0,19
	.byte	'Os_ResourceType',0,6,175,3,3
	.word	3524
	.byte	6,6,181,3,9,12,7
	.byte	'maxallowedvalue',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'ticksperbase',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'mincycle',0
	.word	148
	.byte	4,2,35,8,0,19
	.byte	'AlarmBaseType',0,6,185,3,3
	.word	3623
	.byte	6,6,206,3,9,8,7
	.byte	'Running',0
	.word	234
	.byte	1,2,35,0,7
	.byte	'Pending',0
	.word	234
	.byte	1,2,35,1,7
	.byte	'Delay',0
	.word	148
	.byte	4,2,35,4,0,19
	.byte	'Os_CounterStatusType',0,6,210,3,3
	.word	3718
	.byte	29
	.word	234
	.byte	1,1,9
	.word	3804
	.byte	19
	.byte	'Os_CounterIncrAdvType',0,6,217,3,22
	.word	3811
	.byte	23
	.byte	's_swd',0,6,222,3,12,4,7
	.byte	'count',0
	.word	148
	.byte	4,2,35,0,0,27,6,221,3,3,4,7
	.byte	'sw',0
	.word	3847
	.byte	4,2,35,0,0,23
	.byte	'Os_CounterDynType_s',0,6,220,3,16,4,7
	.byte	'type_dependent',0
	.word	3875
	.byte	4,2,35,0,0,19
	.byte	'Os_CounterDynType',0,6,226,3,3
	.word	3894
	.byte	9
	.word	3894
	.byte	8
	.word	3972
	.byte	23
	.byte	'Os_CounterType_s',0,6,227,3,16,28,7
	.byte	'dynamic',0
	.word	3977
	.byte	4,2,35,0,7
	.byte	'advincr',0
	.word	3816
	.byte	4,2,35,4,7
	.byte	'base',0
	.word	3623
	.byte	12,2,35,8,7
	.byte	'core',0
	.word	2074
	.byte	4,2,35,20,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,24,7
	.byte	'application',0
	.word	234
	.byte	1,2,35,25,0,19
	.byte	'Os_CounterType',0,6,234,3,3
	.word	3982
	.byte	9
	.word	3804
	.byte	8
	.word	3982
	.byte	9
	.word	4134
	.byte	19
	.byte	'CounterType',0,6,235,3,52
	.word	4139
	.byte	28
	.byte	'Os_ScheduleTableStatusType',0,6,240,3,6,4,12
	.byte	'SCHEDULETABLE_STOPPED',0,0,12
	.byte	'SCHEDULETABLE_NEXT',0,1,12
	.byte	'SCHEDULETABLE_WAITING',0,2,12
	.byte	'SCHEDULETABLE_RUNNING',0,3,12
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,19
	.byte	'ScheduleTableStatusType',0,6,241,3,41
	.word	4165
	.byte	8
	.word	.L166-.L29
	.byte	9
	.word	4365
	.byte	19
	.byte	'ScheduleTableType',0,6,128,4,58
	.word	4370
	.byte	23
	.byte	'Os_ScheduleTableDynType_s',0,6,130,4,16,16,7
	.byte	'match',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'next',0
	.word	4375
	.byte	4,2,35,4,7
	.byte	'state',0
	.word	4165
	.byte	4,2,35,8,7
	.byte	'config',0
	.word	286
	.byte	2,2,35,12,0,9
	.word	4402
	.byte	8
	.word	4495
.L166:
	.byte	23
	.byte	'Os_ScheduleTableType_s',0,6,247,3,16,16,7
	.byte	'dynamic',0
	.word	4500
	.byte	4,2,35,0,7
	.byte	'counter',0
	.word	4144
	.byte	4,2,35,4,7
	.byte	'repeat',0
	.word	234
	.byte	1,2,35,8,7
	.byte	'config',0
	.word	286
	.byte	2,2,35,10,7
	.byte	'initial',0
	.word	234
	.byte	1,2,35,12,7
	.byte	'access',0
	.word	234
	.byte	1,2,35,13,7
	.byte	'application',0
	.word	234
	.byte	1,2,35,14,0,19
	.byte	'Os_ScheduleTableType',0,6,255,3,3
	.word	4505
	.byte	8
	.word	4505
	.byte	9
	.word	4685
	.byte	8
	.word	3982
	.byte	9
	.word	4695
	.byte	30
	.word	1798
	.byte	30
	.word	2748
	.byte	30
	.word	2645
	.byte	30
	.word	3306
	.byte	30
	.word	2812
	.byte	30
	.word	234
	.byte	30
	.word	3306
	.byte	23
	.byte	'Os_ControlledCoreType_s',0,6,251,6,16,112,7
	.byte	'TrapInfo',0
	.word	1229
	.byte	8,2,35,0,7
	.byte	'lock_taskaccess',0
	.word	4705
	.byte	4,2,35,8,7
	.byte	'ReadyTasks',0
	.word	4710
	.byte	4,2,35,12,7
	.byte	'RunningISR',0
	.word	4715
	.byte	4,2,35,16,7
	.byte	'RunningTask',0
	.word	4720
	.byte	4,2,35,20,7
	.byte	'RunningTPMask',0
	.word	4725
	.byte	4,2,35,24,7
	.byte	'CurrentMeteredObject',0
	.word	2331
	.byte	4,2,35,28,7
	.byte	'IdleMeter',0
	.word	2128
	.byte	48,2,35,32,7
	.byte	'AppAccess',0
	.word	234
	.byte	1,2,35,80,7
	.byte	'AppOverride',0
	.word	4730
	.byte	1,2,35,81,7
	.byte	'GetStackValueAdjust',0
	.word	1400
	.byte	8,2,35,84,7
	.byte	'InErrorHook',0
	.word	234
	.byte	1,2,35,92,7
	.byte	'ChainTaskRef',0
	.word	4735
	.byte	4,2,35,96,7
	.byte	'GetStackUsageAdjust',0
	.word	1400
	.byte	8,2,35,100,7
	.byte	'InProtectionHook',0
	.word	234
	.byte	1,2,35,108,7
	.byte	'CoreIsActive',0
	.word	234
	.byte	1,2,35,109,7
	.byte	'InShutdownHook',0
	.word	234
	.byte	1,2,35,110,0,19
	.byte	'Os_ControlledCoreType',0,6,141,7,3
	.word	4740
	.byte	9
	.word	148
	.byte	8
	.word	2476
	.byte	9
	.word	5196
	.byte	8
	.word	3046
	.byte	9
	.word	5206
	.byte	9
	.word	2128
	.byte	23
	.byte	'Os_AnyCoreType_s',0,6,151,7,16,96,7
	.byte	'DisableAllImask',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'SuspendAllImask',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'SuspendOSImask',0
	.word	148
	.byte	4,2,35,8,7
	.byte	'DisableAllCount',0
	.word	148
	.byte	4,2,35,12,7
	.byte	'SuspendAllCount',0
	.word	148
	.byte	4,2,35,16,7
	.byte	'SuspendOSCount',0
	.word	148
	.byte	4,2,35,20,7
	.byte	'RestartJumpBuf',0
	.word	1349
	.byte	68,2,35,24,7
	.byte	'Restartable',0
	.word	234
	.byte	1,2,35,92,0,19
	.byte	'Os_AnyCoreType',0,6,160,7,3
	.word	5221
	.byte	19
	.byte	'unsigned_int',0,7,116,22
	.word	148
.L143:
	.byte	11,8,23,9,4,12
	.byte	'MEMIF_UNINIT',0,0,12
	.byte	'MEMIF_IDLE',0,1,12
	.byte	'MEMIF_BUSY',0,2,12
	.byte	'MEMIF_BUSY_INTERNAL',0,3,0,19
	.byte	'MemIf_StatusType',0,8,29,2
	.word	5483
	.byte	11,8,31,9,4,12
	.byte	'MEMIF_JOB_OK',0,0,12
	.byte	'MEMIF_JOB_FAILED',0,1,12
	.byte	'MEMIF_JOB_PENDING',0,2,12
	.byte	'MEMIF_JOB_CANCELED',0,3,12
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,12
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,19
	.byte	'MemIf_JobResultType',0,8,39,2
	.word	5577
	.byte	11,8,41,9,4,12
	.byte	'MEMIF_MODE_SLOW',0,0,12
	.byte	'MEMIF_MODE_FAST',0,1,0,19
	.byte	'MemIf_ModeType',0,8,45,2
	.word	5735
	.byte	19
	.byte	'PduIdType',0,9,22,19
	.word	286
	.byte	19
	.byte	'PduLengthType',0,9,26,19
	.word	286
	.byte	11,10,113,9,4,12
	.byte	'TP_DATACONF',0,0,12
	.byte	'TP_DATARETRY',0,1,12
	.byte	'TP_CONFPENDING',0,2,0,19
	.byte	'TpDataStateType',0,10,118,3
	.word	5840
	.byte	19
	.byte	'Can_IdType',0,11,32,16
	.word	148
	.byte	19
	.byte	'Can_HwHandleType',0,11,43,16
	.word	286
	.byte	19
	.byte	'Can_TxObjPriorityClassType',0,12,219,3,16
	.word	148
	.byte	23
	.byte	'Can_TxHwObjectConfigType',0,12,231,3,16,8,7
	.byte	'MsgObjId',0
	.word	234
	.byte	1,2,35,0,7
	.byte	'HwControllerId',0
	.word	234
	.byte	1,2,35,1,7
	.byte	'TxObjPriorityClass',0
	.word	148
	.byte	4,2,35,4,0,19
	.byte	'Can_TxHwObjectConfigType',0,12,252,3,3
	.word	5996
	.byte	23
	.byte	'Can_RxHwObjectConfigType',0,12,129,4,16,12,7
	.byte	'MaskRef',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'MsgId',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'MsgObjId',0
	.word	234
	.byte	1,2,35,8,7
	.byte	'HwControllerId',0
	.word	234
	.byte	1,2,35,9,0,19
	.byte	'Can_RxHwObjectConfigType',0,12,147,4,3
	.word	6132
	.byte	20,4
	.word	234
	.byte	21,3,0,23
	.byte	'Can_ControllerMOMapConfigType',0,12,181,4,16,4,7
	.byte	'ControllerMOMap',0
	.word	6272
	.byte	4,2,35,0,0,19
	.byte	'Can_ControllerMOMapConfigType',0,12,184,4,3
	.word	6281
	.byte	23
	.byte	'Can_NPCRValueType',0,12,188,4,16,2,7
	.byte	'Can_NPCRValue',0
	.word	286
	.byte	2,2,35,0,0,19
	.byte	'Can_NPCRValueType',0,12,191,4,3
	.word	6382
	.byte	23
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,194,4,16,8,7
	.byte	'CanControllerBaudrate',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'CanControllerBaudrateCfg',0
	.word	286
	.byte	2,2,35,4,0,19
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,12,198,4,3
	.word	6457
	.byte	8
	.word	6457
	.byte	9
	.word	6622
	.byte	23
	.byte	'Can_BaudrateConfigPtrType',0,12,201,4,16,4,7
	.byte	'Can_kBaudrateConfigPtr',0
	.word	6627
	.byte	4,2,35,0,0,19
	.byte	'Can_BaudrateConfigPtrType',0,12,204,4,3
	.word	6632
	.byte	23
	.byte	'Can_EventHandlingType',0,12,226,4,16,4,7
	.byte	'CanEventType',0
	.word	6272
	.byte	4,2,35,0,0,19
	.byte	'Can_EventHandlingType',0,12,229,4,3
	.word	6732
	.byte	19
	.byte	'Rte_TransformerErrorCode',0,13,130,1,15
	.word	234
	.byte	19
	.byte	'Rte_TransformerClass',0,13,131,1,15
	.word	234
	.byte	6,13,168,1,9,12,7
	.byte	'in',0
	.word	2074
	.byte	4,2,35,0,7
	.byte	'out',0
	.word	2074
	.byte	4,2,35,4,7
	.byte	'used',0
	.word	286
	.byte	2,2,35,8,7
	.byte	'lost_data',0
	.word	234
	.byte	1,2,35,10,0,19
	.byte	'Rte_QDynType',0,13,173,1,3
	.word	6878
	.byte	11,13,175,1,9,4,12
	.byte	'RTE_DRA',0,0,12
	.byte	'RTE_WOWP',0,1,12
	.byte	'RTE_TASK',0,2,12
	.byte	'RTE_ARE',0,3,12
	.byte	'RTE_EV',0,4,12
	.byte	'RTE_MSI',0,5,0,19
	.byte	'Rte_NotificationType',0,13,182,1,3
	.word	6965
	.byte	20,128,8
	.word	234
	.byte	21,255,7,0,19
	.byte	'Impl_NVM_DstPtrType_1024',0,14,50,15
	.word	7063
	.byte	19
	.byte	'CanIf_u32_impl',0,14,69,16
	.word	148
	.byte	19
	.byte	'CanIf_u16_impl',0,14,71,16
	.word	286
	.byte	19
	.byte	'CanIf_u8_impl',0,14,73,15
	.word	234
	.byte	19
	.byte	'CanIf_ControllerModeType_Enum_impl',0,14,88,15
	.word	234
	.byte	19
	.byte	'CanIf_PduModeType_Enum_impl',0,14,90,15
	.word	234
	.byte	6,14,92,9,2,7
	.byte	'DeviceMode',0
	.word	234
	.byte	1,2,35,0,7
	.byte	'ChannelMode',0
	.word	234
	.byte	1,2,35,1,0,19
	.byte	'CanIf_ControllerStateType_struct_impl',0,14,95,3
	.word	7254
	.byte	19
	.byte	'CanIf_NotifStatusType_Enum_impl',0,14,100,15
	.word	234
	.byte	19
	.byte	'CanSM_boolean_Impl',0,14,120,15
	.word	234
	.byte	19
	.byte	'CanSM_u8_Impl',0,14,123,15
	.word	234
	.byte	19
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,14,128,1,15
	.word	234
	.byte	19
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,14,132,1,15
	.word	234
	.byte	19
	.byte	'CanSM_u16_Impl',0,14,136,1,16
	.word	286
	.byte	19
	.byte	'CanSM_TimerStateType_Enum_impl',0,14,138,1,15
	.word	234
	.byte	6,14,140,1,9,4,7
	.byte	'cntTick_u16',0
	.word	286
	.byte	2,2,35,0,7
	.byte	'stTimer',0
	.word	234
	.byte	1,2,35,2,0,19
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,14,143,1,3
	.word	7595
	.byte	19
	.byte	'Com_impl_u16',0,14,154,1,16
	.word	286
	.byte	19
	.byte	'Com_impl_u8',0,14,157,1,15
	.word	234
	.byte	19
	.byte	'ComM_uint32_Impl',0,14,173,1,16
	.word	148
	.byte	19
	.byte	'ComM_uint16_Impl',0,14,175,1,16
	.word	286
	.byte	19
	.byte	'ComM_uint8_Impl',0,14,177,1,15
	.word	234
	.byte	19
	.byte	'ComM_bool_Impl',0,14,179,1,15
	.word	234
	.byte	6,14,181,1,9,24,7
	.byte	'ChannelState_e',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'LightTimeoutCtr_u32',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	286
	.byte	2,2,35,8,7
	.byte	'ChannelMode_u8',0
	.word	234
	.byte	1,2,35,10,7
	.byte	'BusSmMode_u8',0
	.word	234
	.byte	1,2,35,11,7
	.byte	'UserRequestCtr_u8',0
	.word	234
	.byte	1,2,35,12,7
	.byte	'PassiveRequestState_u8',0
	.word	234
	.byte	1,2,35,13,7
	.byte	'PncRequestCtr_u8',0
	.word	234
	.byte	1,2,35,14,7
	.byte	'InhibitionReqStatus_u8',0
	.word	234
	.byte	1,2,35,15,7
	.byte	'NmNetworkRequestStatus_b',0
	.word	234
	.byte	1,2,35,16,7
	.byte	'DiagnosticRequestState_b',0
	.word	234
	.byte	1,2,35,17,7
	.byte	'CommunicationAllowed_b',0
	.word	234
	.byte	1,2,35,18,7
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	234
	.byte	1,2,35,19,7
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	234
	.byte	1,2,35,20,7
	.byte	'NmNetworkModeStatus_b',0
	.word	234
	.byte	1,2,35,21,0,19
	.byte	'ComM_ChannelStruct_Impl',0,14,197,1,3
	.word	7827
	.byte	6,14,206,1,9,10,7
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	286
	.byte	2,2,35,0,7
	.byte	'LimitToNoComCtr_u16',0
	.word	286
	.byte	2,2,35,2,7
	.byte	'RequestedUserMode_t',0
	.word	234
	.byte	1,2,35,4,7
	.byte	'IndicatedUserMode_t',0
	.word	234
	.byte	1,2,35,5,7
	.byte	'numChannelsInFullCom_u8',0
	.word	234
	.byte	1,2,35,6,7
	.byte	'numChannelsInSilentCom_u8',0
	.word	234
	.byte	1,2,35,7,7
	.byte	'numChannelsInNoCom_u8',0
	.word	234
	.byte	1,2,35,8,0,19
	.byte	'ComM_UserStruct_Impl',0,14,214,1,3
	.word	8331
	.byte	19
	.byte	'Dcm_IOOperationResponseType',0,14,252,1,15
	.word	234
	.byte	19
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	14,138,2,15
	.word	234
	.byte	19
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,14,146,2,15
	.word	234
	.byte	19
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,14,150,2,15
	.word	234
	.byte	19
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,14,154,2,15
	.word	234
	.byte	19
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,14,243,3,34
	.word	7074
	.byte	20,128,8
	.word	234
	.byte	21,255,7,0,19
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,14,246,3,34
	.word	7074
	.byte	19
	.byte	'Fls_LengthType',0,15,173,3,16
	.word	148
	.byte	23
	.byte	'Fls_JobStartType',0,15,175,3,16,1,31
	.byte	'Reserved1',0,1
	.word	234
	.byte	1,7,2,35,0,31
	.byte	'Write',0,1
	.word	234
	.byte	1,6,2,35,0,31
	.byte	'Erase',0,1
	.word	234
	.byte	1,5,2,35,0,31
	.byte	'Read',0,1
	.word	234
	.byte	1,4,2,35,0,31
	.byte	'Compare',0,1
	.word	234
	.byte	1,3,2,35,0,31
	.byte	'Reserved2',0,1
	.word	234
	.byte	3,0,2,35,0,0,19
	.byte	'Fls_JobStartType',0,15,183,3,3
	.word	9173
	.byte	19
	.byte	'Fls_17_Pmu_Job_Type',0,15,187,3,15
	.word	234
.L131:
	.byte	9
	.word	234
	.byte	8
	.word	234
	.byte	9
	.word	9368
.L144:
	.byte	20,2
	.word	234
	.byte	21,1,0,23
	.byte	'Fls_17_Pmu_StateType',0,15,198,3,16,48,7
	.byte	'FlsReadAddress',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'FlsWriteAddress',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'FlsEraseTimeoutCycleCount',0
	.word	148
	.byte	4,2,35,8,7
	.byte	'FlsWriteTimeoutCycleCount',0
	.word	148
	.byte	4,2,35,12,7
	.byte	'FlsReadLength',0
	.word	148
	.byte	4,2,35,16,7
	.byte	'FlsWriteLength',0
	.word	148
	.byte	4,2,35,20,7
	.byte	'FlsReadBufferPtr',0
	.word	9363
	.byte	4,2,35,24,7
	.byte	'FlsWriteBufferPtr',0
	.word	9373
	.byte	4,2,35,28,7
	.byte	'FlsJobResult',0
	.word	5577
	.byte	4,2,35,32,7
	.byte	'FlsMode',0
	.word	5735
	.byte	4,2,35,36,7
	.byte	'NotifCaller',0
	.word	234
	.byte	1,2,35,40,7
	.byte	'JobStarted',0
	.word	9173
	.byte	1,2,35,41,7
	.byte	'FlsJobType',0
	.word	9378
	.byte	2,2,35,42,7
	.byte	'FlsOper',0
	.word	234
	.byte	1,2,35,44,7
	.byte	'FlsTimeoutErr',0
	.word	234
	.byte	1,2,35,45,7
	.byte	'FlsTimeoutControl',0
	.word	234
	.byte	1,2,35,46,0,19
	.byte	'Fls_17_Pmu_StateType',0,15,130,4,3
	.word	9387
	.byte	19
	.byte	'Fls_NotifFunctionPtrType',0,15,137,4,16
	.word	1488
	.byte	8
	.word	148
	.byte	9
	.word	9865
	.byte	25,1,1,26
	.word	148
	.byte	26
	.word	148
	.byte	26
	.word	9870
	.byte	26
	.word	234
	.byte	0,9
	.word	9875
	.byte	19
	.byte	'Fls_WriteCmdPtrType',0,15,139,4,16
	.word	9899
	.byte	25,1,1,26
	.word	148
	.byte	0,9
	.word	9933
	.byte	19
	.byte	'Fls_EraseCmdPtrType',0,15,144,4,16
	.word	9942
.L129:
	.byte	11,2,115,9,4,12
	.byte	'FEE_POLLING_MODE_E',0,0,12
	.byte	'FEE_NORMAL_MODE_E',0,1,0,19
	.byte	'Fee_stMainType',0,2,119,2
	.word	9976
	.byte	11,2,122,9,4,12
	.byte	'FEE_NO_ORDER',0,0,12
	.byte	'FEE_READ_ORDER',0,1,12
	.byte	'FEE_WRITE_ORDER',0,2,12
	.byte	'FEE_INVALIDATE_ORDER',0,3,12
	.byte	'FEE_MAINTAIN_ORDER',0,4,12
	.byte	'FEE_FORCED_READ_ORDER',0,5,0,19
	.byte	'Fee_HlMode_ten',0,2,132,1,2
	.word	10046
.L128:
	.byte	11,2,170,1,9,4,12
	.byte	'FEE_RB_IDLE_E',0,0,12
	.byte	'FEE_RB_WRITE_MODE_E',0,1,12
	.byte	'FEE_RB_READ_MODE_E',0,2,12
	.byte	'FEE_RB_INVALIDATE_MODE_E',0,3,12
	.byte	'FEE_RB_MAINTAIN_MODE_E',0,4,12
	.byte	'FEE_RB_SOFT_SECTOR_REORG_MODE_E',0,5,12
	.byte	'FEE_RB_HARD_SECTOR_REORG_MODE_E',0,6,12
	.byte	'FEE_RB_SECTOR_ERASE_E',0,7,12
	.byte	'FEE_RB_STOPMODE_E',0,8,0,19
	.byte	'Fee_Rb_WorkingStateType_ten',0,2,183,1,2
	.word	10194
	.byte	19
	.byte	'Fee_ConfigType',0,2,190,1,3
	.word	251
	.byte	11,1,147,1,9,4,12
	.byte	'FEE_NORMAL_PRIO_E',0,0,12
	.byte	'FEE_HIGH_PRIO_E',0,1,0,19
	.byte	'Fee_HlPriority_ten',0,1,151,1,2
	.word	10485
	.byte	6,1,165,1,9,24,7
	.byte	'DataBufferPtr_pu8',0
	.word	9363
	.byte	4,2,35,0,7
	.byte	'FeeIdx_u16',0
	.word	286
	.byte	2,2,35,4,7
	.byte	'BlockPropIdx_u16',0
	.word	286
	.byte	2,2,35,6,7
	.byte	'Offset_u16',0
	.word	286
	.byte	2,2,35,8,7
	.byte	'Length_u16',0
	.word	286
	.byte	2,2,35,10,7
	.byte	'Mode_en',0
	.word	10046
	.byte	4,2,35,12,7
	.byte	'Prio_en',0
	.word	10485
	.byte	4,2,35,16,7
	.byte	'SecLevel_u8',0
	.word	234
	.byte	1,2,35,20,0,19
	.byte	'Fee_OrderFifo_tst',0,1,175,1,2
	.word	10558
	.byte	11,1,246,1,9,4,12
	.byte	'FEE_SECTOR_STATE_UNDEF_E',0,0,12
	.byte	'FEE_SECTOR_ERASED_E',0,1,12
	.byte	'FEE_SECTOR_USED_E',0,2,12
	.byte	'FEE_SECTOR_FULL_E',0,3,12
	.byte	'FEE_SECTOR_REQUEST2ERASE_E',0,4,12
	.byte	'FEE_SECTOR_CONSIDERED_E',0,13,0,19
	.byte	'Fee_SectorState_ten',0,1,254,1,2
	.word	10760
	.byte	6,1,129,2,9,12,7
	.byte	'SecChngCnt_u32',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'SecState_en',0
	.word	10760
	.byte	4,2,35,4,7
	.byte	'xPhySecIdx_u8',0
	.word	234
	.byte	1,2,35,8,0,19
	.byte	'Fee_LLSectorOrder_tst',0,1,134,2,2
	.word	10940
	.byte	19
	.byte	'Fee_stRetVal_ten',0,1,149,2,2
	.word	346
	.byte	11,1,210,2,9,4,12
	.byte	'FEE_LL_MARKER_INIT_E',0,0,12
	.byte	'FEE_LL_MARKER_BLK_CHK_E',0,1,12
	.byte	'FEE_LL_MARKER_BLK_CHK_WAIT_E',0,2,12
	.byte	'FEE_LL_MARKER_BLK_CHK_ERROR_E',0,3,12
	.byte	'FEE_LL_MARKER_BLK_CHK_FINISHED_E',0,4,12
	.byte	'FEE_LL_MARKER_WRITE_WAIT_E',0,5,12
	.byte	'FEE_LL_MARKER_WRITE_ERROR_E',0,6,12
	.byte	'FEE_LL_MARKER_VERIFY_E',0,7,12
	.byte	'FEE_LL_MARKER_VERIFY_WAIT_E',0,8,12
	.byte	'FEE_LL_MARKER_VERIFY_FINISHED_E',0,9,0,19
	.byte	'Fee_LLWrMarkerType_ten',0,1,222,2,2
	.word	11072
	.byte	11,1,225,2,9,4,12
	.byte	'FEE_HL_RDWR_BLK_INIT_E',0,0,12
	.byte	'FEE_HL_SEARCH_BLK_HDR_E',0,1,12
	.byte	'FEE_HL_READ_BLK_HDR_WAIT_E',0,2,12
	.byte	'FEE_HL_CHECK_BLK_HDR_E',0,3,12
	.byte	'FEE_HL_CALC_BLK_CS_E',0,4,12
	.byte	'FEE_HL_CHECK_BLK_CS_E',0,5,12
	.byte	'FEE_HL_RD_DATA_FROM_BLK_E',0,6,12
	.byte	'FEE_HL_COMP_BLK_E',0,7,12
	.byte	'FEE_HL_WR_BLK_E',0,8,0,19
	.byte	'Fee_HLRdWrBlockType_ten',0,1,243,2,2
	.word	11406
	.byte	11,1,246,2,9,4,12
	.byte	'FEE_LL_WR_BLK_INIT_E',0,0,12
	.byte	'FEE_LL_WR_WRITEHEADER_E',0,1,12
	.byte	'FEE_LL_WR_SIZECHECK_HSR_E',0,2,12
	.byte	'FEE_LL_WR_WRITEHEADER_WAIT_E',0,3,12
	.byte	'FEE_LL_WR_VERIFYHEADER_E',0,4,12
	.byte	'FEE_LL_WR_VERIFYHEADER_WAIT_E',0,5,12
	.byte	'FEE_LL_WR_VERIFYHEADER_ERROR_E',0,6,12
	.byte	'FEE_LL_WR_WRITEDATA_SEC_A_E',0,7,12
	.byte	'FEE_LL_WR_WAIT_WRITEDATA_SEC_A_E',0,8,12
	.byte	'FEE_LL_WR_WRITE_ERROR_E',0,9,12
	.byte	'FEE_LL_WR_WRITE_FULL_MARKER_E',0,10,12
	.byte	'FEE_LL_WR_ERASE_SECTOR_E',0,11,12
	.byte	'FEE_LL_WR_WRITE_USED_MARKER_E',0,12,12
	.byte	'FEE_LL_WR_WRITE_START_MARKER_E',0,13,12
	.byte	'FEE_LL_WR_VERIFY_BLK_E',0,14,12
	.byte	'FEE_LL_WR_WRITEHDRPG2_E',0,15,12
	.byte	'FEE_LL_WR_WAIT_WRITEHDRPG2_E',0,16,0,19
	.byte	'Fee_LLWrBlockType_ten',0,1,162,3,2
	.word	11664
	.byte	11,1,165,3,9,4,12
	.byte	'FEE_LL_CMP_BLK_INIT_E',0,0,12
	.byte	'FEE_LL_CMP_HEADER_E',0,1,12
	.byte	'FEE_LL_CMP_WAIT_HEADER_E',0,2,12
	.byte	'FEE_LL_CMP_CHECK_OVERLAP_E',0,3,12
	.byte	'FEE_LL_CMP_DATA_SEC_A_E',0,4,12
	.byte	'FEE_LL_CMP_WAIT_DATA_SEC_A_E',0,5,12
	.byte	'FEE_LL_CMP_FINISHED_E',0,6,0,19
	.byte	'Fee_LLCmpBlkType_ten',0,1,174,3,2
	.word	12199
	.byte	11,1,177,3,9,4,12
	.byte	'FEE_LL_CPY_BLK_INIT_E',0,0,12
	.byte	'FEE_LL_CPY_BLOCK_START_E',0,1,12
	.byte	'FEE_LL_CPY_BLOCK_WAIT_E',0,2,12
	.byte	'FEE_LL_CPY_BLOCK_ERROR_E',0,3,12
	.byte	'FEE_LL_CPY_BLOCK_FINISHED_E',0,4,0,19
	.byte	'Fee_LLCpyBlkType_ten',0,1,184,3,2
	.word	12419
	.byte	11,1,187,3,9,4,12
	.byte	'FEE_LL_CRC_BLK_INIT_E',0,0,12
	.byte	'FEE_LL_CRC_RD_HD_PAGE_E',0,1,12
	.byte	'FEE_LL_CRC_RD_PAGE_E',0,2,12
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_E',0,3,12
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_E',0,4,12
	.byte	'FEE_LL_CRC_CHECK_OVERLAP_ROB_E',0,5,12
	.byte	'FEE_LL_CRC_RD_ROB_PAGE_WAIT_E',0,6,12
	.byte	'FEE_LL_CRC_RD_PAGE_WAIT_E',0,7,12
	.byte	'FEE_LL_CRC_RD_ERROR_E',0,8,0,19
	.byte	'Fee_LLCalcCrcBlkType_ten',0,1,200,3,2
	.word	12590
	.byte	11,1,203,3,9,4,12
	.byte	'FEE_LL_INIT_READ_E',0,0,12
	.byte	'FEE_LL_BLANK_CHECK_E',0,1,12
	.byte	'FEE_LL_BLANK_CHECK_WAIT_E',0,2,12
	.byte	'FEE_LL_READ_PAGE_E',0,3,12
	.byte	'FEE_LL_WAIT_READ_PAGE_E',0,4,12
	.byte	'FEE_LL_READ_ERROR_E',0,5,12
	.byte	'FEE_LL_READ_FINISHED_E',0,6,0,19
	.byte	'Fee_LLRdStateType_ten',0,1,223,3,3
	.word	12877
	.byte	11,1,226,3,9,4,12
	.byte	'FEE_LL_INIT_BLANK_CHECK_E',0,0,12
	.byte	'FEE_LL_PERFORM_BLANK_CHECK_E',0,1,12
	.byte	'FEE_LL_WAIT_PERFORM_BLANK_CHECK_E',0,2,12
	.byte	'FEE_LL_BLANK_CHECK_ERROR_E',0,3,12
	.byte	'FEE_LL_BLANK_CHECK_FINISHED_E',0,4,0,19
	.byte	'Fee_LLBlankCheckType_ten',0,1,233,3,3
	.word	13081
	.byte	11,1,236,3,9,4,12
	.byte	'FEE_LL_FIND_CURRENT_SECTOR_E',0,0,12
	.byte	'FEE_LL_FIND_LAST_HEADER_E',0,1,12
	.byte	'FEE_LL_FINISHED_E',0,2,0,19
	.byte	'Fee_LLFndEmptyPgeType_ten',0,1,249,3,2
	.word	13278
	.byte	11,1,252,3,9,4,12
	.byte	'FEE_LL_SEARCHBLK_INIT_E',0,0,12
	.byte	'FEE_LL_SEARCHBLK_BLK_HEADER_E',0,1,0,19
	.byte	'Fee_LLSearchBlkHdrType_ten',0,1,128,4,2
	.word	13399
	.byte	11,1,132,4,9,4,12
	.byte	'FEE_LL_BLD_UP_CACHE_INIT_E',0,0,12
	.byte	'FEE_LL_BLD_UP_CACHE_READ_E',0,1,0,19
	.byte	'Fee_LLBuildUpCache_ten',0,1,136,4,2
	.word	13500
	.byte	11,1,139,4,9,4,12
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_INIT_E',0,0,12
	.byte	'FEE_LL_BLD_UP_CACHE_ALL_SECT_DO_E',0,1,0,19
	.byte	'Fee_LLBuildUpCacheAllSect_ten',0,1,143,4,2
	.word	13597
	.byte	11,1,168,4,9,4,12
	.byte	'FEE_LL_REORG_INIT_E',0,0,12
	.byte	'FEE_LL_REORG_PREP_SEARCH_BLK_E',0,1,12
	.byte	'FEE_LL_REORG_SEARCH_BLK_E',0,2,12
	.byte	'FEE_LL_REORG_CHECK_BLOCK_CS_E',0,3,12
	.byte	'FEE_LL_REORG_REDUNDANT_BLK_CHK_E',0,4,12
	.byte	'FEE_LL_REORG_WRITE_BLOCK_E',0,5,12
	.byte	'FEE_LL_REORG_FINISHED_E',0,6,0,19
	.byte	'Fee_LLSecReorgType_ten',0,1,193,4,2
	.word	13717
	.byte	11,1,196,4,9,4,12
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_INIT_E',0,0,12
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_SEARCH_HDR_E',0,1,12
	.byte	'FEE_LL_REDUNDANT_CPY_CHK_BLK_CS_E',0,2,0,19
	.byte	'Fee_LLRedundantCpyChk_ten',0,1,201,4,2
	.word	13961
	.byte	11,1,204,4,9,4,12
	.byte	'FEE_LL_CPY_FLS2FLS_INIT_E',0,0,12
	.byte	'FEE_LL_CPY_FLS2FLS_READ_E',0,1,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_READ_E',0,2,12
	.byte	'FEE_LL_CPY_FLS2FLS_READ_ERROR_E',0,3,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_E',0,4,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_WRITE_E',0,5,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_WRITE_ERROR_E',0,6,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_E',0,7,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG1_VERIFY_E',0,8,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG1_VERIFY_ERROR_E',0,9,12
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_E',0,10,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_WRITE_E',0,11,12
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_ERROR_E',0,12,12
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_E',0,13,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_VERIFY_E',0,14,12
	.byte	'FEE_LL_CPY_FLS2FLS_VERIFY_ERROR_E',0,15,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_E',0,16,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_WRITE_E',0,17,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_WRITE_ERROR_E',0,18,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_E',0,19,12
	.byte	'FEE_LL_CPY_FLS2FLS_WAIT_HDRPG2_VERIFY_E',0,20,12
	.byte	'FEE_LL_CPY_FLS2FLS_HDRPG2_VERIFY_ERROR_E',0,21,12
	.byte	'FEE_LL_CPY_FLS2FLS_CHECK_ADR_OVERFLOW_E',0,22,12
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_FULL_MARKER_E',0,23,12
	.byte	'FEE_LL_CPY_FLS2FLS_ERASE_SECTOR_E',0,24,12
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_USED_MARKER_E',0,25,12
	.byte	'FEE_LL_CPY_FLS2FLS_WRITE_START_MARKER_E',0,26,0,19
	.byte	'Fee_LLCpyBlkFls2Fls_ten',0,1,133,5,2
	.word	14113
.L132:
	.byte	6,1,163,5,9,116,7
	.byte	'xRdAddress',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'xWrAddress',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'xCmpAddress',0
	.word	148
	.byte	4,2,35,8,7
	.byte	'xCrcAddress',0
	.word	148
	.byte	4,2,35,12,7
	.byte	'xCpyAddress',0
	.word	148
	.byte	4,2,35,16,7
	.byte	'AdrHdSearchStart_u32',0
	.word	148
	.byte	4,2,35,20,7
	.byte	'xStartAddrNextSector_u32',0
	.word	148
	.byte	4,2,35,24,7
	.byte	'xHdPg2Address',0
	.word	148
	.byte	4,2,35,28,7
	.byte	'LastProgrammedAddress_u32',0
	.word	148
	.byte	4,2,35,32,7
	.byte	'LastValidHdrAddress_u32',0
	.word	148
	.byte	4,2,35,36,7
	.byte	'Fee_LLSecReorg_en',0
	.word	13717
	.byte	4,2,35,40,7
	.byte	'Fee_LLRedundantCpyChk_en',0
	.word	13961
	.byte	4,2,35,44,7
	.byte	'Fee_LLCpyBlkFls2Fls_en',0
	.word	14113
	.byte	4,2,35,48,7
	.byte	'Fee_HLWrBlock_en',0
	.word	11406
	.byte	4,2,35,52,7
	.byte	'Fee_HLMtBlock_en',0
	.word	11406
	.byte	4,2,35,56,7
	.byte	'Fee_LLWrBlock_en',0
	.word	11664
	.byte	4,2,35,60,7
	.byte	'Fee_HLRdBlock',0
	.word	11406
	.byte	4,2,35,64,7
	.byte	'Fee_LLNextUsedWrBlock_en',0
	.word	11664
	.byte	4,2,35,68,7
	.byte	'Fee_LLNextEraseWrBlock_en',0
	.word	11664
	.byte	4,2,35,72,7
	.byte	'Fee_LLCompBlk',0
	.word	12199
	.byte	4,2,35,76,7
	.byte	'Fee_LLCopyBlk_en',0
	.word	12419
	.byte	4,2,35,80,7
	.byte	'Fee_LLCalcCrcBlk_en',0
	.word	12590
	.byte	4,2,35,84,7
	.byte	'Fee_LLWrMarker_en',0
	.word	11072
	.byte	4,2,35,88,7
	.byte	'Fee_LLRdState_en',0
	.word	12877
	.byte	4,2,35,92,7
	.byte	'Fee_LLBlankCheckState_en',0
	.word	13081
	.byte	4,2,35,96,7
	.byte	'Fee_LLFindEmptyPageState_en',0
	.word	13278
	.byte	4,2,35,100,7
	.byte	'Fee_LLSearchBlkHdr_en',0
	.word	13399
	.byte	4,2,35,104,7
	.byte	'Fee_LLBuildUpCache_en',0
	.word	13500
	.byte	4,2,35,108,7
	.byte	'Fee_LLBuildUpCacheAllSect_en',0
	.word	13597
	.byte	4,2,35,112,0,19
	.byte	'Fee_RdWrOrder_tst',0,1,224,5,3
	.word	15159
.L136:
	.byte	6,1,227,5,9,16,7
	.byte	'AdrBlkHeader_u32',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'BlkCrc32_u32',0
	.word	148
	.byte	4,2,35,4,7
	.byte	'HdrCrc16_u16',0
	.word	286
	.byte	2,2,35,8,7
	.byte	'BlkLength_u16',0
	.word	286
	.byte	2,2,35,10,7
	.byte	'FeeIndex_u16',0
	.word	286
	.byte	2,2,35,12,7
	.byte	'BlkStatus_u8',0
	.word	234
	.byte	1,2,35,14,0,19
	.byte	'Fee_GlobInfoLastRdHeader_tst',0,1,235,5,2
	.word	16016
.L137:
	.byte	6,1,238,5,9,10,7
	.byte	'BytesAlrdyConsid_u16',0
	.word	286
	.byte	2,2,35,0,7
	.byte	'BytesAlrdyCompared_u16',0
	.word	286
	.byte	2,2,35,2,7
	.byte	'Bytes2Read_u16',0
	.word	286
	.byte	2,2,35,4,7
	.byte	'CompareResult_u8',0
	.word	234
	.byte	1,2,35,6,7
	.byte	'cntWriteRetry_u8',0
	.word	234
	.byte	1,2,35,7,7
	.byte	'cntCopies_u8',0
	.word	234
	.byte	1,2,35,8,0,19
	.byte	'Fee_GlobInfoWrBlock_tst',0,1,246,5,2
	.word	16198
.L138:
	.byte	6,1,249,5,9,12,7
	.byte	'xRdAddress_u32',0
	.word	148
	.byte	4,2,35,0,7
	.byte	'xNumBytesAlrdyCopied_u16',0
	.word	286
	.byte	2,2,35,4,7
	.byte	'xNumBytesLeftToRdWr_u16',0
	.word	286
	.byte	2,2,35,6,7
	.byte	'xCntCopies_u8',0
	.word	234
	.byte	1,2,35,8,7
	.byte	'xFirstDataPgPgm_u8',0
	.word	234
	.byte	1,2,35,9,0,19
	.byte	'Fee_LLSecReorgStruct_tst',0,1,130,6,2
	.word	16398
	.byte	11,1,133,6,9,4,12
	.byte	'FEE_ERASESEC_IDLE_E',0,0,12
	.byte	'FEE_ERASESEC_CHECK_CACHE_E',0,1,12
	.byte	'FEE_ERASESEC_START_E',0,2,12
	.byte	'FEE_ERASESEC_DO_E',0,3,12
	.byte	'FEE_ERASESEC_WRITE_MARKER_E',0,4,12
	.byte	'FEE_ERASESEC_ERROR_E',0,5,0,19
	.byte	'Fee_LLEraseStateType_ten',0,1,141,6,2
	.word	16581
.L134:
	.byte	6,1,144,6,9,8,7
	.byte	'EraseState_en',0
	.word	16581
	.byte	4,2,35,0,7
	.byte	'xPhySectorIdx_u8',0
	.word	234
	.byte	1,2,35,4,0,19
	.byte	'Fee_LLEraseOrderType_tst',0,1,148,6,2
	.word	16769
	.byte	20,3
	.word	234
	.byte	21,2,0,6,1,151,6,9,16,7
	.byte	'Preamble_au8',0
	.word	16859
	.byte	3,2,35,0,7
	.byte	'BlkStatus_u8',0
	.word	234
	.byte	1,2,35,3,7
	.byte	'FeeIndex_u16',0
	.word	286
	.byte	2,2,35,4,7
	.byte	'BlkLength_u16',0
	.word	286
	.byte	2,2,35,6,7
	.byte	'HdrCrc16_u16',0
	.word	286
	.byte	2,2,35,8,7
	.byte	'BlkCrc32_u32',0
	.word	148
	.byte	4,2,35,12,0,19
	.byte	'Fee_BlkHeader_tst',0,1,159,6,2
	.word	16868
	.byte	6,1,162,6,9,4,7
	.byte	'Fee_ResetUsedSectors_pfn',0
	.word	1488
	.byte	4,2,35,0,0,19
	.byte	'Fee_LinkedFunctions_tst',0,1,165,6,2
	.word	17035
	.byte	8
	.word	17035
	.byte	32
	.byte	'Fee_LinkedFunctions_cst',0,1,137,7,53
	.word	17109
	.byte	1,1
.L133:
	.byte	20,24
	.word	10940
	.byte	21,1,0
.L135:
	.byte	20,72
	.word	10558
	.byte	21,2,0
.L139:
	.byte	20,12
	.word	5577
	.byte	21,2,0
.L140:
	.byte	8
	.word	9363
.L141:
	.byte	8
	.word	9363
.L142:
	.byte	20,8
	.word	234
	.byte	21,7,0
.L145:
	.byte	20,96
	.word	148
	.byte	21,23,0
.L146:
	.byte	20,48
	.word	148
	.byte	21,11,0
.L147:
	.byte	20,136,8
	.word	148
	.byte	21,129,2,0
.L148:
	.byte	20,128,2
	.word	148
	.byte	21,63,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,19,1,58,15,59,15,57,15
	.byte	11,15,0,0,7,13,0,3,8,73,19,11,15,56,9,0,0,8,38,0,73,19,0,0,9,15,0,73,19,0,0,10,46,0,3,8,58,15,59,15,57
	.byte	15,73,19,54,15,39,12,63,12,60,12,0,0,11,4,1,58,15,59,15,57,15,11,15,0,0,12,40,0,3,8,28,13,0,0,13,46,1
	.byte	3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,14,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12
	.byte	60,12,0,0,15,46,1,49,19,0,0,16,5,0,49,19,0,0,17,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,18,21
	.byte	0,54,15,0,0,19,22,0,3,8,58,15,59,15,57,15,73,19,0,0,20,1,1,11,15,73,19,0,0,21,33,0,47,15,0,0,22,21,0,54
	.byte	15,39,12,0,0,23,19,1,3,8,58,15,59,15,57,15,11,15,0,0,24,59,0,3,8,0,0,25,21,1,54,15,39,12,0,0,26,5,0,73
	.byte	19,0,0,27,23,1,58,15,59,15,57,15,11,15,0,0,28,4,1,3,8,58,15,59,15,57,15,11,15,0,0,29,21,0,73,19,54,15
	.byte	39,12,0,0,30,53,0,73,19,0,0,31,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,32,52,0,3,8,58,15,59,15,57,15
	.byte	73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L31:
	.word	.L168-.L167
.L167:
	.half	3
	.word	.L170-.L169
.L169:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Prv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Fee\\api\\Fee.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Integration\\TargetIntegration\\TC275\\Include\\Mcal_TcLib.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\MemIf\\api\\MemIf_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Fls\\inc\\Fls_17_Pmu.h',0,0,0,0,0
.L170:
.L168:
	.sdecl	'.debug_info',debug,cluster('Fee_Init')
	.sect	'.debug_info'
.L32:
	.word	298
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L35,.L34
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Fee_Init',0,1,222,1,22,1,1,1
	.word	.L19,.L113,.L18
	.byte	4
	.byte	'ConfigPtr',0,1,222,1,54
	.word	.L114,.L115
	.byte	5
	.word	.L19,.L113
	.byte	6
	.byte	'xPhySecIdx_u8',0,1,227,1,28
	.word	.L116,.L117
	.byte	6
	.byte	'xLogSecIdx_u8',0,1,228,1,28
	.word	.L116,.L118
	.byte	6
	.byte	'local_loop_u8',0,1,229,1,28
	.word	.L116,.L119
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Init')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Init')
	.sect	'.debug_line'
.L34:
	.word	.L172-.L171
.L171:
	.half	3
	.word	.L174-.L173
.L173:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0,0
.L174:
	.byte	5,5,7,0,5,2
	.word	.L19
	.byte	3,134,2,1,5,8,7,9
	.half	.L2-.L19
	.byte	3,13,1,5,31,9
	.half	.L175-.L2
	.byte	1,5,5,9
	.half	.L176-.L175
	.byte	1,5,57,7,9
	.half	.L177-.L176
	.byte	3,3,1,5,5,9
	.half	.L3-.L177
	.byte	3,5,1,5,48,9
	.half	.L178-.L3
	.byte	1,5,71,9
	.half	.L179-.L178
	.byte	1,5,77,9
	.half	.L180-.L179
	.byte	1,5,26,9
	.half	.L181-.L180
	.byte	1,5,5,9
	.half	.L182-.L181
	.byte	3,3,1,5,25,9
	.half	.L183-.L182
	.byte	1,5,23,9
	.half	.L184-.L183
	.byte	1,5,5,9
	.half	.L185-.L184
	.byte	3,3,1,5,26,9
	.half	.L186-.L185
	.byte	1,5,24,9
	.half	.L187-.L186
	.byte	1,5,5,9
	.half	.L188-.L187
	.byte	3,3,1,5,18,9
	.half	.L189-.L188
	.byte	1,5,16,9
	.half	.L190-.L189
	.byte	1,5,23,9
	.half	.L191-.L190
	.byte	3,3,1,5,61,9
	.half	.L149-.L191
	.byte	1,5,9,9
	.half	.L5-.L149
	.byte	3,2,1,5,22,9
	.half	.L192-.L5
	.byte	1,5,40,9
	.half	.L193-.L192
	.byte	1,5,38,9
	.half	.L194-.L193
	.byte	1,5,75,9
	.half	.L195-.L194
	.byte	3,126,1,5,61,9
	.half	.L4-.L195
	.byte	1,5,5,7,9
	.half	.L196-.L4
	.byte	3,6,1,5,30,9
	.half	.L197-.L196
	.byte	1,5,28,9
	.half	.L150-.L197
	.byte	1,5,24,9
	.half	.L198-.L150
	.byte	3,11,1,5,18,9
	.half	.L199-.L198
	.byte	3,3,1,5,28,9
	.half	.L200-.L199
	.byte	3,3,1,5,45,9
	.half	.L201-.L200
	.byte	3,3,1,5,19,9
	.half	.L151-.L201
	.byte	1,5,21,9
	.half	.L152-.L151
	.byte	3,2,1,5,45,9
	.half	.L202-.L152
	.byte	1,5,37,9
	.half	.L153-.L202
	.byte	3,10,1,5,28,9
	.half	.L203-.L153
	.byte	3,10,1,5,8,9
	.half	.L154-.L203
	.byte	1,5,28,9
	.half	.L204-.L154
	.byte	1,5,43,9
	.half	.L205-.L204
	.byte	1,5,5,9
	.half	.L206-.L205
	.byte	1,5,35,7,9
	.half	.L207-.L206
	.byte	3,9,1,5,36,9
	.half	.L156-.L207
	.byte	3,7,1,5,49,9
	.half	.L158-.L156
	.byte	3,121,1,5,13,9
	.half	.L6-.L158
	.byte	3,17,1,5,9,9
	.half	.L208-.L6
	.byte	3,125,1,5,66,7,9
	.half	.L209-.L208
	.byte	3,3,1,5,41,9
	.half	.L160-.L209
	.byte	1,5,80,9
	.half	.L210-.L160
	.byte	1,5,68,9
	.half	.L8-.L210
	.byte	3,7,1,5,41,9
	.half	.L162-.L8
	.byte	1,5,55,9
	.half	.L9-.L162
	.byte	3,4,1,5,37,9
	.half	.L211-.L9
	.byte	1,5,5,9
	.half	.L7-.L211
	.byte	3,24,1,5,30,9
	.half	.L212-.L7
	.byte	1,5,28,9
	.half	.L213-.L212
	.byte	1,5,18,9
	.half	.L214-.L213
	.byte	3,5,1,5,16,9
	.half	.L215-.L214
	.byte	1,5,1,9
	.half	.L216-.L215
	.byte	3,12,1,7,9
	.half	.L36-.L216
	.byte	0,1,1
.L172:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Init')
	.sect	'.debug_ranges'
.L35:
	.word	-1,.L19,0,.L36-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_info'
.L37:
	.word	199
	.half	3
	.word	.L38
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L40,.L39
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Fee_Rb_EndInit',0,1,193,3,22,1,1,1
	.word	.L21,.L120,.L20
	.byte	4
	.word	.L21,.L120
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_abbrev'
.L38:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_line'
.L39:
	.word	.L218-.L217
.L217:
	.half	3
	.word	.L220-.L219
.L219:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0,0
.L220:
	.byte	5,5,7,0,5,2
	.word	.L21
	.byte	3,197,3,1,5,25,9
	.half	.L221-.L21
	.byte	1,5,23,9
	.half	.L222-.L221
	.byte	1,5,1,9
	.half	.L223-.L222
	.byte	3,1,1,7,9
	.half	.L41-.L223
	.byte	0,1,1
.L218:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_ranges'
.L40:
	.word	-1,.L21,0,.L41-.L21,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_info'
.L42:
	.word	223
	.half	3
	.word	.L43
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L45,.L44
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Fee_InitVarAndState',0,1,218,3,22,1,1,1
	.word	.L23,.L121,.L22
	.byte	4
	.word	.L23,.L121
	.byte	5
	.byte	'i_u8',0,1,220,3,27
	.word	.L116,.L122
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_line'
.L44:
	.word	.L225-.L224
.L224:
	.half	3
	.word	.L227-.L226
.L226:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0,0
.L227:
	.byte	5,5,7,0,5,2
	.word	.L23
	.byte	3,222,3,1,5,45,9
	.half	.L228-.L23
	.byte	1,5,43,9
	.half	.L229-.L228
	.byte	1,5,45,9
	.half	.L230-.L229
	.byte	3,1,1,5,43,9
	.half	.L231-.L230
	.byte	1,5,45,9
	.half	.L232-.L231
	.byte	3,1,1,5,43,9
	.half	.L233-.L232
	.byte	1,5,45,9
	.half	.L234-.L233
	.byte	3,1,1,5,43,9
	.half	.L235-.L234
	.byte	1,5,45,9
	.half	.L236-.L235
	.byte	3,1,1,5,43,9
	.half	.L237-.L236
	.byte	1,5,45,9
	.half	.L238-.L237
	.byte	3,1,1,5,43,9
	.half	.L239-.L238
	.byte	1,5,38,9
	.half	.L240-.L239
	.byte	3,3,1,5,36,9
	.half	.L241-.L240
	.byte	1,5,50,9
	.half	.L242-.L241
	.byte	3,4,1,5,48,9
	.half	.L243-.L242
	.byte	1,9
	.half	.L244-.L243
	.byte	3,1,1,5,46,9
	.half	.L245-.L244
	.byte	1,5,45,9
	.half	.L246-.L245
	.byte	3,4,1,5,43,9
	.half	.L247-.L246
	.byte	1,5,49,9
	.half	.L248-.L247
	.byte	3,1,1,5,47,9
	.half	.L249-.L248
	.byte	1,9
	.half	.L250-.L249
	.byte	3,1,1,5,45,9
	.half	.L251-.L250
	.byte	1,9
	.half	.L252-.L251
	.byte	3,1,1,5,43,9
	.half	.L253-.L252
	.byte	1,5,45,9
	.half	.L254-.L253
	.byte	3,1,1,5,43,9
	.half	.L255-.L254
	.byte	1,5,45,9
	.half	.L256-.L255
	.byte	3,1,1,5,43,9
	.half	.L257-.L256
	.byte	1,5,50,9
	.half	.L258-.L257
	.byte	3,1,1,5,48,9
	.half	.L259-.L258
	.byte	1,5,50,9
	.half	.L260-.L259
	.byte	3,2,1,5,48,9
	.half	.L261-.L260
	.byte	1,5,45,9
	.half	.L262-.L261
	.byte	3,2,1,5,43,9
	.half	.L263-.L262
	.byte	1,5,45,9
	.half	.L264-.L263
	.byte	3,1,1,5,43,9
	.half	.L265-.L264
	.byte	1,5,45,9
	.half	.L266-.L265
	.byte	3,1,1,5,43,9
	.half	.L267-.L266
	.byte	1,5,45,9
	.half	.L268-.L267
	.byte	3,1,1,5,43,9
	.half	.L269-.L268
	.byte	1,5,45,9
	.half	.L270-.L269
	.byte	3,1,1,5,43,9
	.half	.L271-.L270
	.byte	1,5,49,9
	.half	.L272-.L271
	.byte	3,1,1,5,47,9
	.half	.L273-.L272
	.byte	1,5,52,9
	.half	.L274-.L273
	.byte	3,4,1,5,50,9
	.half	.L275-.L274
	.byte	1,5,46,9
	.half	.L276-.L275
	.byte	3,2,1,5,44,9
	.half	.L277-.L276
	.byte	1,5,46,9
	.half	.L278-.L277
	.byte	3,13,1,5,44,9
	.half	.L279-.L278
	.byte	1,5,53,9
	.half	.L280-.L279
	.byte	3,1,1,5,51,9
	.half	.L281-.L280
	.byte	1,5,5,9
	.half	.L282-.L281
	.byte	3,4,1,5,44,9
	.half	.L283-.L282
	.byte	1,5,42,9
	.half	.L284-.L283
	.byte	1,5,44,9
	.half	.L285-.L284
	.byte	3,1,1,5,42,9
	.half	.L286-.L285
	.byte	1,5,5,9
	.half	.L287-.L286
	.byte	3,3,1,5,52,9
	.half	.L288-.L287
	.byte	1,5,50,9
	.half	.L289-.L288
	.byte	1,5,52,9
	.half	.L290-.L289
	.byte	3,1,1,5,50,9
	.half	.L291-.L290
	.byte	1,5,52,9
	.half	.L292-.L291
	.byte	3,1,1,5,50,9
	.half	.L293-.L292
	.byte	1,5,52,9
	.half	.L294-.L293
	.byte	3,1,1,5,50,9
	.half	.L295-.L294
	.byte	1,5,52,9
	.half	.L296-.L295
	.byte	3,1,1,5,50,9
	.half	.L297-.L296
	.byte	1,5,52,9
	.half	.L298-.L297
	.byte	3,1,1,5,50,9
	.half	.L299-.L298
	.byte	1,5,5,9
	.half	.L300-.L299
	.byte	3,3,1,5,49,9
	.half	.L301-.L300
	.byte	1,5,47,9
	.half	.L302-.L301
	.byte	1,5,49,9
	.half	.L303-.L302
	.byte	3,1,1,5,47,9
	.half	.L304-.L303
	.byte	1,5,49,9
	.half	.L305-.L304
	.byte	3,2,1,5,47,9
	.half	.L306-.L305
	.byte	1,5,53,9
	.half	.L307-.L306
	.byte	3,2,1,5,51,9
	.half	.L308-.L307
	.byte	1,5,53,9
	.half	.L309-.L308
	.byte	3,1,1,5,51,9
	.half	.L310-.L309
	.byte	1,5,53,9
	.half	.L311-.L310
	.byte	3,1,1,5,51,9
	.half	.L312-.L311
	.byte	1,5,5,9
	.half	.L313-.L312
	.byte	3,3,1,5,56,9
	.half	.L314-.L313
	.byte	1,5,54,9
	.half	.L315-.L314
	.byte	1,5,56,9
	.half	.L316-.L315
	.byte	3,1,1,5,54,9
	.half	.L317-.L316
	.byte	1,5,56,9
	.half	.L318-.L317
	.byte	3,1,1,5,54,9
	.half	.L319-.L318
	.byte	1,5,56,9
	.half	.L320-.L319
	.byte	3,1,1,5,54,9
	.half	.L321-.L320
	.byte	1,5,5,9
	.half	.L322-.L321
	.byte	3,4,1,5,26,9
	.half	.L323-.L322
	.byte	1,5,24,9
	.half	.L324-.L323
	.byte	1,5,5,9
	.half	.L325-.L324
	.byte	3,3,1,5,26,9
	.half	.L326-.L325
	.byte	1,5,24,9
	.half	.L327-.L326
	.byte	1,5,13,9
	.half	.L328-.L327
	.byte	3,3,1,5,51,9
	.half	.L163-.L328
	.byte	1,5,28,9
	.half	.L11-.L163
	.byte	3,3,1,5,8,9
	.half	.L329-.L11
	.byte	1,5,28,9
	.half	.L330-.L329
	.byte	1,5,55,9
	.half	.L331-.L330
	.byte	1,5,53,9
	.half	.L332-.L331
	.byte	1,5,55,9
	.half	.L333-.L332
	.byte	3,1,1,5,53,9
	.half	.L334-.L333
	.byte	1,5,55,9
	.half	.L335-.L334
	.byte	3,1,1,5,53,9
	.half	.L336-.L335
	.byte	1,5,8,9
	.half	.L337-.L336
	.byte	3,3,1,5,32,9
	.half	.L338-.L337
	.byte	1,5,41,9
	.half	.L339-.L338
	.byte	1,5,39,9
	.half	.L340-.L339
	.byte	1,5,57,9
	.half	.L341-.L340
	.byte	3,120,1,5,51,9
	.half	.L10-.L341
	.byte	1,5,1,7,9
	.half	.L342-.L10
	.byte	3,10,1,7,9
	.half	.L46-.L342
	.byte	0,1,1
.L225:
	.sdecl	'.debug_ranges',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_ranges'
.L45:
	.word	-1,.L23,0,.L46-.L23,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_InitCache')
	.sect	'.debug_info'
.L47:
	.word	218
	.half	3
	.word	.L48
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L50,.L49
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Fee_InitCache',0,1,214,4,22,1,1,1
	.word	.L25,.L123,.L24
	.byte	4
	.word	.L25,.L123
	.byte	5
	.byte	'i_u16',0,1,216,4,28
	.word	.L124,.L125
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_InitCache')
	.sect	'.debug_abbrev'
.L48:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_InitCache')
	.sect	'.debug_line'
.L49:
	.word	.L344-.L343
.L343:
	.half	3
	.word	.L346-.L345
.L345:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0,0
.L346:
	.byte	5,15,7,0,5,2
	.word	.L25
	.byte	3,218,4,1,5,39,9
	.half	.L164-.L25
	.byte	1,5,9,9
	.half	.L13-.L164
	.byte	3,3,1,5,23,9
	.half	.L347-.L13
	.byte	1,5,33,9
	.half	.L348-.L347
	.byte	1,5,31,9
	.half	.L349-.L348
	.byte	1,5,46,9
	.half	.L350-.L349
	.byte	3,125,1,5,39,9
	.half	.L12-.L350
	.byte	1,5,15,7,9
	.half	.L351-.L12
	.byte	3,7,1,5,54,9
	.half	.L352-.L351
	.byte	1,5,9,9
	.half	.L15-.L352
	.byte	3,3,1,5,36,9
	.half	.L353-.L15
	.byte	1,5,46,9
	.half	.L354-.L353
	.byte	1,5,44,9
	.half	.L355-.L354
	.byte	1,5,61,9
	.half	.L356-.L355
	.byte	3,125,1,5,54,9
	.half	.L14-.L356
	.byte	1,5,1,7,9
	.half	.L357-.L14
	.byte	3,5,1,7,9
	.half	.L51-.L357
	.byte	0,1,1
.L344:
	.sdecl	'.debug_ranges',debug,cluster('Fee_InitCache')
	.sect	'.debug_ranges'
.L50:
	.word	-1,.L25,0,.L51-.L25,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_info'
.L52:
	.word	228
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L28
	.byte	3
	.byte	'Fee_InitOrderFifoBuffer',0,1,249,4,22,1,1,1
	.word	.L27,.L126,.L26
	.byte	4
	.word	.L27,.L126
	.byte	5
	.byte	'i_u16',0,1,251,4,28
	.word	.L124,.L127
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_line'
.L54:
	.word	.L359-.L358
.L358:
	.half	3
	.word	.L361-.L360
.L360:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0,0,0,0,0
.L361:
	.byte	5,15,7,0,5,2
	.word	.L27
	.byte	3,253,4,1,5,46,9
	.half	.L165-.L27
	.byte	1,5,25,9
	.half	.L17-.L165
	.byte	3,2,1,5,9,9
	.half	.L362-.L17
	.byte	1,5,25,9
	.half	.L363-.L362
	.byte	1,5,54,9
	.half	.L364-.L363
	.byte	1,5,52,9
	.half	.L365-.L364
	.byte	1,5,54,9
	.half	.L366-.L365
	.byte	3,1,1,5,52,9
	.half	.L367-.L366
	.byte	1,5,54,9
	.half	.L368-.L367
	.byte	3,1,1,5,52,9
	.half	.L369-.L368
	.byte	1,5,54,9
	.half	.L370-.L369
	.byte	3,1,1,5,52,9
	.half	.L371-.L370
	.byte	1,5,54,9
	.half	.L372-.L371
	.byte	3,1,1,5,52,9
	.half	.L373-.L372
	.byte	1,5,53,9
	.half	.L374-.L373
	.byte	3,122,1,5,46,9
	.half	.L16-.L374
	.byte	1,5,1,7,9
	.half	.L375-.L16
	.byte	3,8,1,7,9
	.half	.L56-.L375
	.byte	0,1,1
.L359:
	.sdecl	'.debug_ranges',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L27,0,.L56-.L27,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Rb_WorkingState_en')
	.sect	'.debug_info'
.L57:
	.word	185
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_Rb_WorkingState_en',0,3,143,1,43
	.word	.L128
	.byte	1,5,3
	.word	Fee_Rb_WorkingState_en
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Rb_WorkingState_en')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_stMain')
	.sect	'.debug_info'
.L59:
	.word	173
	.half	3
	.word	.L60
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_stMain',0,3,142,1,43
	.word	.L129
	.byte	1,5,3
	.word	Fee_stMain
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_stMain')
	.sect	'.debug_abbrev'
.L60:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SecChngCnt_u32')
	.sect	'.debug_info'
.L61:
	.word	180
	.half	3
	.word	.L62
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_SecChngCnt_u32',0,3,60,41
	.word	.L130
	.byte	1,5,3
	.word	Fee_SecChngCnt_u32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SecChngCnt_u32')
	.sect	'.debug_abbrev'
.L62:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_PageBytePtr_cpu8')
	.sect	'.debug_info'
.L63:
	.word	182
	.half	3
	.word	.L64
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_PageBytePtr_cpu8',0,3,68,40
	.word	.L131
	.byte	1,5,3
	.word	Fee_PageBytePtr_cpu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_PageBytePtr_cpu8')
	.sect	'.debug_abbrev'
.L64:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_RdWrOrder_st')
	.sect	'.debug_info'
.L65:
	.word	178
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_RdWrOrder_st',0,3,71,35
	.word	.L132
	.byte	1,5,3
	.word	Fee_RdWrOrder_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_RdWrOrder_st')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_LLSectorOrder_st')
	.sect	'.debug_info'
.L67:
	.word	182
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_LLSectorOrder_st',0,3,74,39
	.word	.L133
	.byte	1,5,3
	.word	Fee_LLSectorOrder_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_LLSectorOrder_st')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_LLEraseOrder_st')
	.sect	'.debug_info'
.L69:
	.word	181
	.half	3
	.word	.L70
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_LLEraseOrder_st',0,3,78,43
	.word	.L134
	.byte	1,5,3
	.word	Fee_LLEraseOrder_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_LLEraseOrder_st')
	.sect	'.debug_abbrev'
.L70:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_OrderFifo_st')
	.sect	'.debug_info'
.L71:
	.word	178
	.half	3
	.word	.L72
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_OrderFifo_st',0,3,79,41
	.word	.L135
	.byte	1,5,3
	.word	Fee_OrderFifo_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_OrderFifo_st')
	.sect	'.debug_abbrev'
.L72:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GlobInfoLastRdHeader_st')
	.sect	'.debug_info'
.L73:
	.word	189
	.half	3
	.word	.L74
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_GlobInfoLastRdHeader_st',0,3,77,46
	.word	.L136
	.byte	1,5,3
	.word	Fee_GlobInfoLastRdHeader_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GlobInfoLastRdHeader_st')
	.sect	'.debug_abbrev'
.L74:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GlobInfoWrBlock_st')
	.sect	'.debug_info'
.L75:
	.word	184
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_GlobInfoWrBlock_st',0,3,81,41
	.word	.L137
	.byte	1,5,3
	.word	Fee_GlobInfoWrBlock_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GlobInfoWrBlock_st')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_LLSecReorgStruct_st')
	.sect	'.debug_info'
.L77:
	.word	185
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_LLSecReorgStruct_st',0,3,80,41
	.word	.L138
	.byte	1,5,3
	.word	Fee_LLSecReorgStruct_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_LLSecReorgStruct_st')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_JobResult')
	.sect	'.debug_info'
.L79:
	.word	175
	.half	3
	.word	.L80
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_JobResult',0,3,82,41
	.word	.L139
	.byte	1,5,3
	.word	Fee_JobResult
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_JobResult')
	.sect	'.debug_abbrev'
.L80:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_MarkerBufBytePtr_cpu8')
	.sect	'.debug_info'
.L81:
	.word	187
	.half	3
	.word	.L82
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_MarkerBufBytePtr_cpu8',0,3,39,45
	.word	.L140
	.byte	1,5,3
	.word	Fee_MarkerBufBytePtr_cpu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_MarkerBufBytePtr_cpu8')
	.sect	'.debug_abbrev'
.L82:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_DataBytePtr_cpu8')
	.sect	'.debug_info'
.L83:
	.word	182
	.half	3
	.word	.L84
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_DataBytePtr_cpu8',0,3,42,45
	.word	.L141
	.byte	1,5,3
	.word	Fee_DataBytePtr_cpu8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_DataBytePtr_cpu8')
	.sect	'.debug_abbrev'
.L84:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Prv_stInit_u8')
	.sect	'.debug_info'
.L85:
	.word	179
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_Prv_stInit_u8',0,3,49,41
	.word	.L116
	.byte	1,5,3
	.word	Fee_Prv_stInit_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Prv_stInit_u8')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Prv_stReorg_u8')
	.sect	'.debug_info'
.L87:
	.word	180
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_Prv_stReorg_u8',0,3,50,41
	.word	.L116
	.byte	1,5,3
	.word	Fee_Prv_stReorg_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Prv_stReorg_u8')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_NumFlashBanksUsed_u8')
	.sect	'.debug_info'
.L89:
	.word	186
	.half	3
	.word	.L90
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_NumFlashBanksUsed_u8',0,3,51,41
	.word	.L116
	.byte	1,5,3
	.word	Fee_NumFlashBanksUsed_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_NumFlashBanksUsed_u8')
	.sect	'.debug_abbrev'
.L90:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_hdr2Buffer_au8')
	.sect	'.debug_info'
.L91:
	.word	181
	.half	3
	.word	.L92
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_hdr2Buffer_au8',0,3,199,1,23
	.word	.L142
	.byte	1,5,3
	.word	Fee_hdr2Buffer_au8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_hdr2Buffer_au8')
	.sect	'.debug_abbrev'
.L92:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GlobModuleState_st')
	.sect	'.debug_info'
.L93:
	.word	185
	.half	3
	.word	.L94
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_GlobModuleState_st',0,3,141,1,43
	.word	.L143
	.byte	1,5,3
	.word	Fee_GlobModuleState_st
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GlobModuleState_st')
	.sect	'.debug_abbrev'
.L94:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_idxLLSectorOrder_au8')
	.sect	'.debug_info'
.L95:
	.word	186
	.half	3
	.word	.L96
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_idxLLSectorOrder_au8',0,3,89,23
	.word	.L144
	.byte	1,5,3
	.word	Fee_idxLLSectorOrder_au8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_idxLLSectorOrder_au8')
	.sect	'.debug_abbrev'
.L96:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_idxActQueue_u8')
	.sect	'.debug_info'
.L97:
	.word	180
	.half	3
	.word	.L98
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_idxActQueue_u8',0,3,93,41
	.word	.L116
	.byte	1,5,3
	.word	Fee_idxActQueue_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_idxActQueue_u8')
	.sect	'.debug_abbrev'
.L98:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_CacheUpdCompForSect_au8')
	.sect	'.debug_info'
.L99:
	.word	189
	.half	3
	.word	.L100
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_CacheUpdCompForSect_au8',0,3,92,24
	.word	.L144
	.byte	1,5,3
	.word	Fee_CacheUpdCompForSect_au8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_CacheUpdCompForSect_au8')
	.sect	'.debug_abbrev'
.L100:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_RdWrRetries_u8')
	.sect	'.debug_info'
.L101:
	.word	180
	.half	3
	.word	.L102
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_RdWrRetries_u8',0,3,94,41
	.word	.L116
	.byte	1,5,3
	.word	Fee_RdWrRetries_u8
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_RdWrRetries_u8')
	.sect	'.debug_abbrev'
.L102:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_llMarkerPageBuf_au32')
	.sect	'.debug_info'
.L103:
	.word	186
	.half	3
	.word	.L104
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_llMarkerPageBuf_au32',0,3,108,24
	.word	.L145
	.byte	1,5,3
	.word	Fee_llMarkerPageBuf_au32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_llMarkerPageBuf_au32')
	.sect	'.debug_abbrev'
.L104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Cache_au32')
	.sect	'.debug_info'
.L105:
	.word	176
	.half	3
	.word	.L106
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_Cache_au32',0,3,111,24
	.word	.L146
	.byte	1,5,3
	.word	Fee_Cache_au32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Cache_au32')
	.sect	'.debug_abbrev'
.L106:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_DataByteStartCrc_u32')
	.sect	'.debug_info'
.L107:
	.word	187
	.half	3
	.word	.L108
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_DataByteStartCrc_u32',0,3,150,1,42
	.word	.L130
	.byte	1,5,3
	.word	Fee_DataByteStartCrc_u32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_DataByteStartCrc_u32')
	.sect	'.debug_abbrev'
.L108:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_llPageBuf_au32')
	.sect	'.debug_info'
.L109:
	.word	180
	.half	3
	.word	.L110
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_llPageBuf_au32',0,3,117,24
	.word	.L147
	.byte	1,5,3
	.word	Fee_llPageBuf_au32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_llPageBuf_au32')
	.sect	'.debug_abbrev'
.L110:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_llDataBuf_au32')
	.sect	'.debug_info'
.L111:
	.word	180
	.half	3
	.word	.L112
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Rba_FeeFs1\\src\\rba_FeeFs1_Init.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1,2
	.word	.L28
	.byte	3
	.byte	'Fee_llDataBuf_au32',0,3,120,24
	.word	.L148
	.byte	1,5,3
	.word	Fee_llDataBuf_au32
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_llDataBuf_au32')
	.sect	'.debug_abbrev'
.L112:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Init')
	.sect	'.debug_loc'
.L115:
	.word	-1,.L19,0,.L3-.L19
	.half	1
	.byte	100
	.word	0,0
.L18:
	.word	-1,.L19,0,.L113-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L119:
	.word	-1,.L19,.L149-.L19,.L150-.L19
	.half	1
	.byte	95
	.word	0,0
.L118:
	.word	-1,.L19,.L153-.L19,.L154-.L19
	.half	1
	.byte	95
	.word	0,0
.L117:
	.word	-1,.L19,.L151-.L19,.L152-.L19
	.half	1
	.byte	82
	.word	.L152-.L19,.L113-.L19
	.half	1
	.byte	88
	.word	.L155-.L19,.L156-.L19
	.half	1
	.byte	84
	.word	.L157-.L19,.L158-.L19
	.half	1
	.byte	84
	.word	.L159-.L19,.L160-.L19
	.half	1
	.byte	84
	.word	.L161-.L19,.L162-.L19
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_InitCache')
	.sect	'.debug_loc'
.L24:
	.word	-1,.L25,0,.L123-.L25
	.half	2
	.byte	138,0
	.word	0,0
.L125:
	.word	-1,.L25,.L164-.L25,.L123-.L25
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_loc'
.L26:
	.word	-1,.L27,0,.L126-.L27
	.half	2
	.byte	138,0
	.word	0,0
.L127:
	.word	-1,.L27,.L165-.L27,.L126-.L27
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_loc'
.L22:
	.word	-1,.L23,0,.L121-.L23
	.half	2
	.byte	138,0
	.word	0,0
.L122:
	.word	-1,.L23,.L163-.L23,.L121-.L23
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_loc'
.L20:
	.word	-1,.L21,0,.L120-.L21
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L376:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L376,.L19,.L113-.L19
	.sdecl	'.debug_frame',debug,cluster('Fee_Rb_EndInit')
	.sect	'.debug_frame'
	.word	24
	.word	.L376,.L21,.L120-.L21
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_InitVarAndState')
	.sect	'.debug_frame'
	.word	24
	.word	.L376,.L23,.L121-.L23
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_InitCache')
	.sect	'.debug_frame'
	.word	24
	.word	.L376,.L25,.L123-.L25
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_InitOrderFifoBuffer')
	.sect	'.debug_frame'
	.word	24
	.word	.L376,.L27,.L126-.L27
	.byte	8,19,8,20,8,21,8,22,8,23,0,0

; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   647  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   648  #define FEE_STOP_SEC_CODE
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   649  #include "Fee_MemMap.h"
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   650  
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   651  /* FEE_PRESENT == 1 */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   652  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   653  /* 1 == FEE_PRV_CFG_SELECTED_FS */
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   654  #endif
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   655  /*<BASDKey>
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   656  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   657  * $History__:$
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   658  **********************************************************************************************************************
; BSW\src\BSW\Gen\Rba_FeeFs1\src\rba_FeeFs1_Init.c	   659  </BASDKey>*/

	; Module end
