	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 19053136 SN 09001910"
	.compiler_invocation	"ctc -f cc17268a -c99 --integer-enumeration -D__CPU__=tc27x -D__CPU_TC27X__ --core=tc1.6.x --eabi-compliant --fp-model=-float -D_TASKING_C_TRICORE_=1 -I.\\output\\inc -g2 -t4 --language=-comments,-gcc,+volatile,-strings --default-near-size=0 -O2ROPYGKLF-predict --default-a1-size=0 --default-a0-size=0 --source --switch=auto -o output\\objs\\BSW\\src\\BSW\\Gen\\Xcp\\Xcp_CmdWriteDaq.src BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c"
	.compiler_name		"ctc"
	;source	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c'

	
$TC16X
	
	.sdecl	'.text.Xcp_CmdWriteDaq.Xcp_CmdWriteDaq',code,cluster('Xcp_CmdWriteDaq')
	.sect	'.text.Xcp_CmdWriteDaq.Xcp_CmdWriteDaq'
	.align	2
	
	.global	Xcp_CmdWriteDaq

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     1  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     2  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     3  /***************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     4  * Includes
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     5  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     6  #include "Xcp.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     7  #include "Xcp_Priv.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     8  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	     9  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    10  /***************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    11  * Variables
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    12  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    13  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    14  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    15  /***************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    16  * Local function declarations
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    17  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    18  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    19  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    20  /***************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    21  * Functions
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    22  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    23  #if (XCP_CMD_WRITE_DAQ_AVAILABLE == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    24  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    25  #define XCP_START_SEC_CODE
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    26  #include "Xcp_MemMap.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    27  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    28  /**
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    29  ****************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    30  This service handles to write one ODT entry to a DAQ list defined by DAQ list pointer.
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    31  \param[in]  XcpPacket     Pointer to the received command packet
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    32  \param[in]  protLayerId   Protocol Layer Id
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    33  \return     -
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    34  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    35  void Xcp_CmdWriteDaq(const PduInfoType* XcpPacket, uint8 protLayerId)
; Function Xcp_CmdWriteDaq
.L20:
Xcp_CmdWriteDaq:	.type	func
	mov	d8,d4
.L60:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    36  {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    37    /*Start of run time measurement*/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    38    XCP_RTM_TIMETRACK_START()
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    39  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    40    /* Command variables */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    41    /* MR12 RULE 11.5, 1.1 VIOLATION: This function is called with data (a PDU) from the CanIf/FrIf/EthIf which ensure 4-Byte-Alignment.
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    42                                      The cast allows easier (= safer) access to the data in the PDU.
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    43                                      Casting over void* is necessary as otherwise some compilers complain */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    44    const Xcp_CmdWriteDaq_t* const CmdPtr = (const Xcp_CmdWriteDaq_t*) (void*) XcpPacket->SduDataPtr;
	ld.a	a15,[a4]
.L61:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    45  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    46    /* Local variables */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    47    Xcp_ErrorCode Error;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    48  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    49    /* Check if the DAQ list is running at this time. In this case negative response ERR_DAQ_ACTIVE must be sent. */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    50    if (Xcp_NoInit[protLayerId].DaqConfig.DaqState_en == XCP_DAQ_STATE_RUNNING)
	mul	d15,d8,#80
.L116:
	movh.a	a2,#@his(Xcp_NoInit)
	lea	a2,[a2]@los(Xcp_NoInit)
.L117:
	addsc.a	a2,a2,d15,#0
.L118:
	ld.w	d0,[a2]76
.L119:
	mov	d15,#10
.L120:
	jne	d15,d0,.L2
.L121:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    51    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    52      Error = XCP_ERR_DAQ_ACTIVE;
	mov	d2,#17
.L62:
	j	.L3
.L2:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    53    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    54    /* Check if DAQ list pointer is out of range */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    55    else if (Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryPos_u16 >= Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryMax_u16)
	ld.hu	d15,[a2]54
.L122:
	ld.hu	d1,[a2]56
.L123:
	jlt.u	d15,d1,.L4
.L124:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    56    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    57      Error = XCP_ERR_WRITE_PROTECTED;
	mov	d2,#35
.L63:
	j	.L5
.L4:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    58    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    59    /* Is the command sequence correct? This check is placed at latest possible point, because ERR_SEQUENCE is not specified in ASAM. */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    60    /* Other errors should be sent with higher priority */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    61    else if (Xcp_NoInit[protLayerId].DaqConfig.DaqState_en != XCP_DAQ_STATE_WRITE_DAQ)
	jeq	d0,#5,.L6
.L125:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    62    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    63      /* Set Error code - ERR_SEQUENCE */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    64      Error = XCP_ERR_SEQUENCE;
	mov	d2,#41
.L64:
	j	.L7
.L6:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    65    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    66    else
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    67    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    68      /* Call same function as for WRITE_DAQ_MULTIPLE */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    69      Error = Xcp_DaqWriteDaq(CmdPtr->Address_u32, CmdPtr->AddrExtension_u8, CmdPtr->Size_u8, protLayerId);
	ld.w	d4,[a15]4
.L59:
	ld.bu	d5,[a15]3
.L126:
	ld.bu	d6,[a15]2
.L127:
	mov	d7,d8
.L65:
	call	Xcp_DaqWriteDaq
.L7:
.L5:
.L3:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    70    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    71  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    72    if (Error == XCP_NO_ERROR)
	mov	d15,#255
.L128:
	jne	d15,d2,.L8
.L129:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    73    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    74      /* Send positive response */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    75      Xcp_SendPosRes(protLayerId);
	mov	d4,d8
.L67:
	call	Xcp_SendPosRes
.L66:
	j	.L9
.L8:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    76    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    77    else
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    78    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    79      /* Send negative response */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    80      Xcp_SendErrRes(Error, protLayerId);
	mov	e4,d8,d2
	call	Xcp_SendErrRes
.L9:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    81    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    82  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    83    /*End of run time measurement*/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    84    XCP_RTM_TIMETRACK_FINISH()
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    85  }
	ret
.L52:
	
__Xcp_CmdWriteDaq_function_end:
	.size	Xcp_CmdWriteDaq,__Xcp_CmdWriteDaq_function_end-Xcp_CmdWriteDaq
.L36:
	; End of function
	
	.sdecl	'.text.Xcp_CmdWriteDaq.Xcp_DaqWriteDaq',code,cluster('Xcp_DaqWriteDaq')
	.sect	'.text.Xcp_CmdWriteDaq.Xcp_DaqWriteDaq'
	.align	2
	
	.global	Xcp_DaqWriteDaq

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    86  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    87  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    88  #define XCP_STOP_SEC_CODE
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    89  #include "Xcp_MemMap.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    90  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    91  #else
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    92    /* The command is not enabled */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    93  #endif
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    94  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    95  #if (XCP_SYNCHRONOUS_DATA_ACQUISITION_DAQ == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    96  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    97  #define XCP_START_SEC_CODE
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    98  #include "Xcp_MemMap.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	    99  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   100  /**
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   101  ****************************************************************************************************
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   102  This function performs the write of an ODT entry into a DAQ list.
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   103  \param[in]  Address       ODT entry address
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   104  \param[in]  Extension     ODT entry address extension
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   105  \param[in]  Size          ODT entry size
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   106  \param[in]  protLayerId   Protocol Layer Id
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   107  \return     returns the error code in case the conditions are not fulfilled
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   108  \retval     XCP_NO_ERROR  write DAQ was possible
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   109  ***************************************************************************************************/
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   110  Xcp_ErrorCode Xcp_DaqWriteDaq(uint32 Address, uint8 Extension, uint8 Size, uint8 protLayerId)
; Function Xcp_DaqWriteDaq
.L22:
Xcp_DaqWriteDaq:	.type	func
	mov	d15,d5
.L70:
	mov	d12,d6
.L72:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   111  {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   112    /* Local variables */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   113    Xcp_ErrorCode Error;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   114    uint16 CurrentDaqListNum;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   115    Xcp_AddrType_t LocalAddress;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   116  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   117    /* Initialize variables */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   118    Error = XCP_NO_ERROR;
	mov	d9,#255
.L73:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   119    LocalAddress.AddrValue = (Xcp_AddrValue)Address;
	mov	d10,d4
.L74:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   120    LocalAddress.Extension = Extension;
	insert	d11,d11,d15,#0,#8
.L88:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   121  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   122    /* assign current DAQ list number to local variable */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   123    CurrentDaqListNum = Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.DaqListNum_u16;
	mul	d0,d7,#80
.L89:
	movh.a	a15,#@his(Xcp_NoInit)
	lea	a15,[a15]@los(Xcp_NoInit)
.L90:
	addsc.a	a15,a15,d0,#0
.L91:
	ld.hu	d8,[a15]58
.L75:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   124  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   125    /* Check if DAQ list pointer is out of range */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   126    if (Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryPos_u16 >= Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryMax_u16)
	lea	a12,[a15]54
.L92:
	ld.hu	d0,[a15]54
.L93:
	ld.hu	d1,[a15]56
.L94:
	jlt.u	d0,d1,.L10
.L95:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   127    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   128      Error = XCP_ERR_WRITE_PROTECTED;
	mov	d9,#35
.L96:
	j	.L11
.L10:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   129    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   130  #if (XCP_ADDRESS_EXTENSION == STD_OFF)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   131    /* Address-Extension is disabled so the extension has to be 0 */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   132    else if (LocalAddress.Extension != 0)
	jeq	d15,#0,.L12
.L97:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   133    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   134      Error = XCP_ERR_OUT_OF_RANGE;
	mov	d9,#34
.L98:
	j	.L13
.L12:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   135    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   136  #endif
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   137    else
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   138    {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   139  #if (XCP_STATIC_ADDRESS_TRANSFORMATION == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   140  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   141      /* Check if this is the first WriteDaq for this DAQ-list and DaqListMode has already been received
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   142       * -> If yes, we can do the Address-Transformation right now
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   143       */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   144      if ((XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) & XCP_DAQFLAG_FOLLOWING_WRITE_DAQ) == 0u)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   145      {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   146        XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) = XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) | XCP_DAQFLAG_FOLLOWING_WRITE_DAQ;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   147  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   148        if ((XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) & XCP_DAQFLAG_RECEIVED_DAQ_LIST_MODE) != 0u)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   149        { /* Mark in this DAQ that the Address Transformation was already done during WriteDaq and must not be done lateron */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   150          XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) = XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) | XCP_DAQFLAG_ADDR_TRANSFORMATION_DONE;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   151        }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   152      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   153  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   154      if (((XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) & XCP_DAQFLAG_ADDR_TRANSFORMATION_DONE) != 0u))
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   155      { /* Address-Transformation for the complete DAQ has to be done here */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   156        Error = Xcp_DaqTransformAndCheckOdtEntry(&LocalAddress, Size, CurrentDaqListNum, protLayerId);
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   157      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   158  #else /* (XCP_STATIC_ADDRESS_TRANSFORMATION == STD_ON) */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   159      /* If Read Protect is detected for the received address then set the Flag */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   160      if(Xcp_MemReadProtectionCheck(LocalAddress, Size, protLayerId) != XCP_NO_ERROR)
	mov	e4,d11,d10
.L68:
	mov	d6,d12
	call	Xcp_MemReadProtectionCheck
.L69:
	mov	d15,#255
.L71:
	jeq	d15,d2,.L14
.L99:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   161      {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   162        XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) = XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) | XCP_DAQFLAG_READ_PROTECTED;
	mul	d15,d8,#24
	lea	a2,[a15]24
	ld.a	a4,[a2]
	addsc.a	a4,a4,d15,#0
	lea	a4,[a4]21
	ld.bu	d0,[a4]
.L100:
	or	d0,d0,#16
.L101:
	st.b	[a4],d0
.L102:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   163        /* Set Error as Access Denied if SetDaqListMode command already received before Write DAQ Command && DAQ direction is DAQ  */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   164        if ( ((XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) & XCP_DAQFLAG_RECEIVED_DAQ_LIST_MODE) != 0u)
	ld.a	a2,[a2]
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]21
.L103:
	jz.t	d15:0,.L15
.L104:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   165          && ((XCP_DAQ_MODE(CurrentDaqListNum, protLayerId)  & XCP_DAQLISTMODE_DIRECTION_STIM) == 0u)
	ld.bu	d15,[a2]22
.L105:
	and	d15,#2
.L106:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   166           )
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   167        {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   168          Error = XCP_ERR_ACCESS_DENIED;
	sel	d9,d15,d9,#36
.L16:
.L15:
.L14:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   169        }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   170      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   171  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   172  # if (XCP_SYNCHRONOUS_DATA_STIMULATION_STIM == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   173      /* If Write Protect is detected for the received address then set the Flag */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   174      if (Xcp_MemWriteProtectionCheck(LocalAddress, Size)!= XCP_NO_ERROR)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   175      {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   176        XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) = XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) | XCP_DAQFLAG_WRITE_PROTECTED;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   177        /* Set Error as Access Denied if SetDaqListMode command already received before Write DAQ Command && DAQ direction is STIM */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   178        if ( ((XCP_DAQ_FLAGS(CurrentDaqListNum, protLayerId) & XCP_DAQFLAG_RECEIVED_DAQ_LIST_MODE) != 0u)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   179          && ((XCP_DAQ_MODE(CurrentDaqListNum, protLayerId)  & XCP_DAQLISTMODE_DIRECTION_STIM) != 0u)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   180           )
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   181        {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   182          Error = XCP_ERR_ACCESS_DENIED;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   183        }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   184      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   185  # endif /* (XCP_SYNCHRONOUS_DATA_STIMULATION_STIM == STD_ON) */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   186  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   187  # if (XCP_OM_ODT_OPTIMIZATION_ENABLED == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   188      if (Error == XCP_NO_ERROR)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   189      {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   190        /* Check if the copy routine for this OdtEntry matches the one for the Odt (Set copy routine for the Odt if first OdtEntry or error) */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   191        Error = Xcp_DaqSetOdtCopyRoutine(LocalAddress, Size, Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.AbsOdtNum_u16, protLayerId);
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   192      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   193  # endif /* XCP_OM_ODT_OPTIMIZATION_ENABLED == STD_ON */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   194  #endif /* XCP_STATIC_ADDRESS_TRANSFORMATION == STD_ON */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   195  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   196      /* If no error write new address & size to the location pointed by Daq list pointer */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   197      if (Error == XCP_NO_ERROR)
	mov	d15,#255
.L107:
	jne	d15,d9,.L17
.L50:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   198      {
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   199        uint16 OdtEntryPos = Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryPos_u16;
	ld.hu	d15,[a15]54
.L76:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   200        XCP_ODTENTRY_ADDRESS(OdtEntryPos, protLayerId)    = LocalAddress.AddrValue;
	ld.a	a2,[a15]32
	addsc.a	a2,a2,d15,#2
.L108:
	st.w	[a2],d10
.L109:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   201  #if (XCP_ADDRESS_EXTENSION == STD_ON)
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   202        XCP_ODTENTRY_EXTENSION(OdtEntryPos, protLayerId)  = LocalAddress.Extension;
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   203  #endif
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   204        XCP_ODTENTRY_SIZE(OdtEntryPos, protLayerId)       = Size;
	ld.a	a2,[a15]36
	addsc.a	a2,a2,d15,#0
.L110:
	st.b	[a2],d12
.L111:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   205  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   206        /* Increment Daq list pointer */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   207        Xcp_NoInit[protLayerId].DaqConfig.SelectedOdtEntry.OdtEntryPos_u16++;
	ld.hu	d15,[a15]54
.L77:
	add	d15,#1
	st.h	[a12],d15
.L17:
.L13:
.L11:

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   208      }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   209    }
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   210  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   211    return Error;
	mov	d2,d9
.L78:
	j	.L18

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   212  }
.L18:
	ret
.L38:
	
__Xcp_DaqWriteDaq_function_end:
	.size	Xcp_DaqWriteDaq,__Xcp_DaqWriteDaq_function_end-Xcp_DaqWriteDaq
.L31:
	; End of function
	
	.calls	'Xcp_CmdWriteDaq','Xcp_DaqWriteDaq'
	.calls	'Xcp_CmdWriteDaq','Xcp_SendPosRes'
	.calls	'Xcp_CmdWriteDaq','Xcp_SendErrRes'
	.calls	'Xcp_DaqWriteDaq','Xcp_MemReadProtectionCheck'
	.calls	'Xcp_CmdWriteDaq','',0
	.extern	Xcp_NoInit
	.extern	Xcp_SendPosRes
	.extern	Xcp_SendErrRes
	.extern	Xcp_MemReadProtectionCheck
	.calls	'Xcp_DaqWriteDaq','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L24:
	.word	13990
	.half	3
	.word	.L25
	.byte	4
.L23:
	.byte	1
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L26
.L41:
	.byte	2
	.byte	'unsigned char',0,1,8,3
	.byte	'Xcp_SendPosRes',0,1,179,4,13,1,1,1,1,4
	.byte	'protLayerId',0,1,179,4,34
	.word	141
	.byte	0
.L37:
	.byte	5,2,177,3,9,4,6
	.byte	'XCP_ERR_CMD_SYNCH',0,0,6
	.byte	'XCP_ERR_CMD_BUSY',0,16,6
	.byte	'XCP_ERR_DAQ_ACTIVE',0,17,6
	.byte	'XCP_ERR_PGM_ACTIVE',0,18,6
	.byte	'XCP_ERR_CMD_UNKNOWN',0,32,6
	.byte	'XCP_ERR_CMD_SYNTAX',0,33,6
	.byte	'XCP_ERR_OUT_OF_RANGE',0,34,6
	.byte	'XCP_ERR_WRITE_PROTECTED',0,35,6
	.byte	'XCP_ERR_ACCESS_DENIED',0,36,6
	.byte	'XCP_ERR_ACCESS_LOCKED',0,37,6
	.byte	'XCP_ERR_PAGE_NOT_VALID',0,38,6
	.byte	'XCP_ERR_MODE_NOT_VALID',0,39,6
	.byte	'XCP_ERR_SEGMENT_NOT_VALID',0,40,6
	.byte	'XCP_ERR_SEQUENCE',0,41,6
	.byte	'XCP_ERR_DAQ_CONFIG',0,42,6
	.byte	'XCP_ERR_MEMORY_OVERFLOW',0,48,6
	.byte	'XCP_ERR_GENERIC',0,49,6
	.byte	'XCP_ERR_VERIFY',0,50,6
	.byte	'XCP_ERR_RES_TEMP_NOT_ACCESS',0,51,6
	.byte	'XCP_ERR_SUBCMD_UNKNOWN',0,52,6
	.byte	'XCP_REPEAT_COMMAND',0,252,1,6
	.byte	'XCP_NO_ACCESS_HIDE',0,253,1,6
	.byte	'XCP_NO_RESPONSE',0,254,1,6
	.byte	'XCP_NO_ERROR',0,255,1,0,3
	.byte	'Xcp_SendErrRes',0,1,180,4,13,1,1,1,1,4
	.byte	'ErrorCode',0,1,180,4,42
	.word	204
	.byte	4
	.byte	'protLayerId',0,1,180,4,59
	.word	141
	.byte	0
.L39:
	.byte	2
	.byte	'unsigned int',0,4,7
.L46:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L48:
	.byte	7,2,168,3,9,8,8
	.byte	'AddrValue',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'Extension',0
	.word	141
	.byte	1,2,35,4,0,9
	.word	848
	.byte	10
	.byte	'Xcp_MemReadProtectionCheck',0,1,151,5,22
	.word	204
	.byte	1,1,1,1,4
	.byte	'XcpAddr',0,1,151,5,70
	.word	893
	.byte	4
	.byte	'Length',0,1,151,5,85
	.word	141
	.byte	4
	.byte	'protLayerId',0,1,151,5,99
	.word	141
	.byte	0,11
	.word	141
	.byte	7,3,71,9,8,8
	.byte	'SduDataPtr',0
	.word	993
	.byte	4,2,35,0,8
	.byte	'SduLength',0
	.word	826
	.byte	2,2,35,4,0,9
	.word	998
.L53:
	.byte	11
	.word	1043
	.byte	7,4,184,7,9,8,8
	.byte	'CommandCode_u8',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'BitOffset_u8',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'Size_u8',0
	.word	141
	.byte	1,2,35,2,8
	.byte	'AddrExtension_u8',0
	.word	141
	.byte	1,2,35,3,8
	.byte	'Address_u32',0
	.word	810
	.byte	4,2,35,4,0,9
	.word	1053
	.byte	11
	.word	1170
.L56:
	.byte	9
	.word	1175
	.byte	12,1,11
	.word	1185
	.byte	13
	.byte	'__codeptr',0,5,1,1
	.word	1187
	.byte	2
	.byte	'char',0,1,6,13
	.byte	'sint8',0,6,76,25
	.word	1210
	.byte	13
	.byte	'uint8',0,6,81,25
	.word	141
	.byte	13
	.byte	'uint16',0,6,91,25
	.word	826
	.byte	13
	.byte	'uint32',0,6,106,24
	.word	810
	.byte	2
	.byte	'unsigned long long int',0,8,7,13
	.byte	'uint64',0,6,111,30
	.word	1276
	.byte	13
	.byte	'boolean',0,6,127,25
	.word	141
	.byte	13
	.byte	'StatusType',0,7,191,1,27
	.word	141
	.byte	13
	.byte	'Std_ReturnType',0,7,199,1,15
	.word	141
	.byte	7,7,206,1,9,8,8
	.byte	'vendorID',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'moduleID',0
	.word	826
	.byte	2,2,35,2,8
	.byte	'sw_major_version',0
	.word	141
	.byte	1,2,35,4,8
	.byte	'sw_minor_version',0
	.word	141
	.byte	1,2,35,5,8
	.byte	'sw_patch_version',0
	.word	141
	.byte	1,2,35,6,0,13
	.byte	'Std_VersionInfoType',0,7,213,1,3
	.word	1377
	.byte	13
	.byte	'PduIdType',0,8,22,19
	.word	826
	.byte	13
	.byte	'PduLengthType',0,8,26,19
	.word	826
	.byte	13
	.byte	'PduInfoType',0,3,75,3
	.word	998
	.byte	5,3,113,9,4,6
	.byte	'TP_DATACONF',0,0,6
	.byte	'TP_DATARETRY',0,1,6
	.byte	'TP_CONFPENDING',0,2,0,13
	.byte	'TpDataStateType',0,3,118,3
	.word	1587
	.byte	5,2,225,1,9,4,6
	.byte	'XCP_STATE_DISCONNECTED',0,0,6
	.byte	'XCP_STATE_DISCONNECTING',0,1,6
	.byte	'XCP_STATE_CONNECTED',0,2,6
	.byte	'XCP_STATE_RESUME',0,3,6
	.byte	'XCP_STATE_DISABLED',0,240,1,0,13
	.byte	'Xcp_State_t',0,2,231,1,2
	.word	1663
	.byte	13
	.byte	'Xcp_AddrValue',0,2,165,3,23
	.word	810
	.byte	13
	.byte	'Xcp_AddrType_t',0,2,172,3,3
	.word	848
	.byte	13
	.byte	'Xcp_PduIdType',0,2,174,3,15
	.word	141
	.byte	13
	.byte	'Xcp_ErrorCode',0,2,204,3,2
	.word	204
	.byte	5,2,207,3,9,4,6
	.byte	'XCP_DAQ_STATE_NO_DAQ',0,0,6
	.byte	'XCP_DAQ_STATE_FREE_DAQ',0,1,6
	.byte	'XCP_DAQ_STATE_ALLOC_DAQ',0,2,6
	.byte	'XCP_DAQ_STATE_ALLOC_ODT',0,3,6
	.byte	'XCP_DAQ_STATE_ALLOC_ODT_ENTRY',0,4,6
	.byte	'XCP_DAQ_STATE_WRITE_DAQ',0,5,6
	.byte	'XCP_DAQ_STATE_PREPARE_START',0,6,6
	.byte	'XCP_DAQ_STATE_SHIFTING',0,7,6
	.byte	'XCP_DAQ_STATE_STOP_REQUESTED',0,8,6
	.byte	'XCP_DAQ_STATE_READY_TO_RUN',0,9,6
	.byte	'XCP_DAQ_STATE_RUNNING',0,10,0,13
	.byte	'Xcp_DaqState_t',0,2,220,3,2
	.word	1898
	.byte	5,2,223,3,9,4,6
	.byte	'XCP_DAQ_NO_OVERLOAD_INDICATION',0,0,6
	.byte	'XCP_DAQ_OVERLOAD_INDICATION_PID',0,1,6
	.byte	'XCP_DAQ_OVERLOAD_INDICATION_EVENT',0,2,0,13
	.byte	'Xcp_Overload_t',0,2,228,3,2
	.word	2226
	.byte	5,2,233,3,9,4,6
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_ABSOLUTE',0,1,6
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_BYTE',0,2,6
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD',0,3,6
	.byte	'XCP_IDENTIFICATION_FIELD_TYPE_RELATIVE_WORD_ALIGNED',0,4,0,13
	.byte	'Xcp_IdField_t',0,2,239,3,2
	.word	2360
	.byte	5,2,242,3,9,4,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_DEFAULT',0,0,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_16',0,1,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_32',0,2,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_64',0,3,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_ODT_TYPE_ALIGNMENT',0,4,6
	.byte	'XCP_ODT_OPTIMIZATION_OM_MAX_ENTRY_SIZE',0,5,0,13
	.byte	'Xcp_OdtOptimizationType_t',0,2,250,3,2
	.word	2577
	.byte	5,2,253,3,9,4,6
	.byte	'XCP_CONSISTENCY_ODT',0,0,6
	.byte	'XCP_CONSISTENCY_DAQ',0,1,6
	.byte	'XCP_CONSISTENCY_EVENT',0,2,6
	.byte	'XCP_CONSISTENCY_NONE',0,3,0,13
	.byte	'Xcp_Consistency_t',0,2,131,4,2
	.word	2853
	.byte	5,2,134,4,9,4,6
	.byte	'XCP_TIMESTAMP_TYPE_NO_TIME_STAMP',0,0,6
	.byte	'XCP_TIMESTAMP_TYPE_ONE_BYTE',0,1,6
	.byte	'XCP_TIMESTAMP_TYPE_TWO_BYTE',0,2,6
	.byte	'XCP_TIMESTAMP_TYPE_FOUR_BYTE',0,4,0,13
	.byte	'Xcp_Timestamp_t',0,2,140,4,2
	.word	2978
	.byte	14,8
	.word	141
	.byte	15,7,0,7,2,174,4,9,12,8
	.byte	'Buffer_au8',0
	.word	3136
	.byte	8,2,35,0,8
	.byte	'Length_u32',0
	.word	810
	.byte	4,2,35,8,0,13
	.byte	'Xcp_Cto8_t',0,2,178,4,2
	.word	3145
	.byte	9
	.word	998
	.byte	11
	.word	3212
	.byte	16
	.word	141
	.byte	1,1,17
	.word	3217
	.byte	17
	.word	141
	.byte	17
	.word	141
	.byte	0,11
	.word	3222
	.byte	18,1,1,17
	.word	141
	.byte	17
	.word	141
	.byte	0,11
	.word	3250
	.byte	18,1,1,17
	.word	141
	.byte	0,11
	.word	3269
	.byte	16
	.word	141
	.byte	1,1,17
	.word	141
	.byte	0,11
	.word	3283
	.byte	11
	.word	998
	.byte	18,1,1,17
	.word	3217
	.byte	17
	.word	3301
	.byte	17
	.word	141
	.byte	0,11
	.word	3306
	.byte	16
	.word	141
	.byte	1,1,17
	.word	141
	.byte	17
	.word	826
	.byte	17
	.word	141
	.byte	0,11
	.word	3330
	.byte	7,9,164,1,9,56,8
	.byte	'TLTransmit_pfct',0
	.word	3245
	.byte	4,2,35,0,8
	.byte	'TLInit_pfct',0
	.word	3264
	.byte	4,2,35,4,8
	.byte	'TLConnect_pfct',0
	.word	3278
	.byte	4,2,35,8,8
	.byte	'TLDisconnect_pfct',0
	.word	3296
	.byte	4,2,35,12,8
	.byte	'TLTransportLayerCmd_pfct',0
	.word	3325
	.byte	4,2,35,16,8
	.byte	'TLGetTxPduId_pfct',0
	.word	3353
	.byte	4,2,35,20,8
	.byte	'MaxCto_u8',0
	.word	141
	.byte	1,2,35,24,8
	.byte	'MaxDto_u16',0
	.word	826
	.byte	2,2,35,26,8
	.byte	'TimestampType_en',0
	.word	2978
	.byte	4,2,35,28,8
	.byte	'IdFieldType_en',0
	.word	2360
	.byte	4,2,35,32,8
	.byte	'OverloadType_en',0
	.word	2226
	.byte	4,2,35,36,8
	.byte	'OdtOptimizationType_en',0
	.word	2577
	.byte	4,2,35,40,8
	.byte	'Consistency_en',0
	.word	2853
	.byte	4,2,35,44,8
	.byte	'PdRam_u32',0
	.word	810
	.byte	4,2,35,48,8
	.byte	'EdRam_u32',0
	.word	810
	.byte	4,2,35,52,0,13
	.byte	'Xcp_PL_TL_Cfg_t',0,9,184,1,2
	.word	3358
	.byte	5,9,188,1,9,4,6
	.byte	'XCP_RAMSECTION_INVALID',0,0,6
	.byte	'XCP_RAMSECTION_PD',0,1,6
	.byte	'XCP_RAMSECTION_ED',0,2,0,13
	.byte	'Xcp_RamSectionType_t',0,9,193,1,2
	.word	3756
	.byte	7,9,195,1,9,12,8
	.byte	'DaqRamPtr_pu8',0
	.word	993
	.byte	4,2,35,0,8
	.byte	'DaqRamTotalSize_u32',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'RamSectionType_en',0
	.word	3756
	.byte	4,2,35,8,0,13
	.byte	'Xcp_DaqRamSection_Cfg_t',0,9,200,1,2
	.word	3858
	.byte	14,1
	.word	141
	.byte	15,0,0,7,9,203,1,9,8,8
	.byte	'DaqRamFreeSize_u32',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'PLConnected_ab',0
	.word	3977
	.byte	1,2,35,4,0,13
	.byte	'Xcp_DaqRamSections_t',0,9,207,1,2
	.word	3986
	.byte	7,9,230,1,9,4,8
	.byte	'EventChannelDirection_u8',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'EventChannelTimeCycle_u8',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'EventChannelTimeUnit_u8',0
	.word	141
	.byte	1,2,35,2,8
	.byte	'EventChannelPriority_u8',0
	.word	141
	.byte	1,2,35,3,0,13
	.byte	'Xcp_EventChannel_Cfg_t',0,9,236,1,2
	.word	4075
	.byte	13
	.byte	'rba_BswSrv_uint64',0,10,66,28
	.word	1276
	.byte	13
	.byte	'Can_IdType',0,11,32,16
	.word	810
	.byte	13
	.byte	'Can_HwHandleType',0,11,43,16
	.word	826
	.byte	7,12,93,9,8,8
	.byte	'Class',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'TIN',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'ReturnAddress',0
	.word	810
	.byte	4,2,35,4,0,13
	.byte	'OsTrapInfoType',0,12,97,3
	.word	4318
	.byte	14,68
	.word	810
	.byte	15,16,0,7,12,154,1,9,68,8
	.byte	'store',0
	.word	4398
	.byte	68,2,35,0,0,14,68
	.word	4407
	.byte	15,0,0,13
	.byte	'Os_JumpBufType',0,12,156,1,3
	.word	4429
	.byte	13
	.byte	'Os_StackTraceType',0,12,174,1,18
	.word	810
	.byte	7,12,175,1,9,8,8
	.byte	'sp',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'ctx',0
	.word	810
	.byte	4,2,35,4,0,13
	.byte	'Os_StackValueType',0,12,175,1,63
	.word	4489
	.byte	13
	.byte	'Os_StackSizeType',0,12,176,1,27
	.word	4489
	.byte	19,1,1,11
	.word	4574
	.byte	13
	.byte	'Os_VoidVoidFunctionType',0,12,179,1,16
	.word	4577
	.byte	13
	.byte	'ApplicationType',0,12,193,1,23
	.word	141
	.byte	20
	.byte	'Os_ApplicationConfigurationType_s',0,12,198,1,16,2,8
	.byte	'app_id',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,1,0,13
	.byte	'Os_ApplicationConfigurationType',0,12,201,1,3
	.word	4640
	.byte	13
	.byte	'Os_CoreStateType',0,12,203,1,16
	.word	810
	.byte	13
	.byte	'AreaIdType',0,12,204,1,16
	.word	826
	.byte	13
	.byte	'Os_PeripheralAddressType',0,12,212,1,22
	.word	810
	.byte	13
	.byte	'TickType',0,12,221,1,22
	.word	810
	.byte	13
	.byte	'Os_StopwatchTickType',0,12,225,1,22
	.word	810
	.byte	11
	.word	810
	.byte	13
	.byte	'Os_Lockable',0,12,234,1,18
	.word	4882
	.byte	13
	.byte	'CoreIdType',0,12,236,1,16
	.word	826
	.byte	13
	.byte	'SpinlockIdType',0,12,237,1,16
	.word	826
	.byte	5,12,239,1,9,4,6
	.byte	'TRYTOGETSPINLOCK_SUCCESS',0,0,6
	.byte	'TRYTOGETSPINLOCK_NOSUCCESS',0,1,0,13
	.byte	'TryToGetSpinlockType',0,12,239,1,74
	.word	4952
	.byte	5,12,174,2,9,4,6
	.byte	'APPLICATION_ACCESSIBLE',0,0,6
	.byte	'APPLICATION_RESTARTING',0,1,6
	.byte	'APPLICATION_TERMINATED',0,2,0,13
	.byte	'ApplicationStateType',0,12,174,2,92
	.word	5045
	.byte	21
	.byte	'void',0,11
	.word	5157
	.byte	18,1,1,17
	.word	141
	.byte	17
	.word	5163
	.byte	0,11
	.word	5168
	.byte	13
	.byte	'Os_FunctionEntryType',0,12,183,2,16
	.word	5182
	.byte	20
	.byte	'Os_MeterInfoType_s',0,12,193,2,16,48,8
	.byte	'elapsed',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'previous',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'max',0
	.word	810
	.byte	4,2,35,8,8
	.byte	'cumulative',0
	.word	810
	.byte	4,2,35,12,8
	.byte	'stackbase',0
	.word	4489
	.byte	8,2,35,16,8
	.byte	'stackusage',0
	.word	4489
	.byte	8,2,35,24,8
	.byte	'stackmax',0
	.word	4489
	.byte	8,2,35,32,8
	.byte	'stackbudget',0
	.word	4489
	.byte	8,2,35,40,0,13
	.byte	'Os_MeterInfoType',0,12,202,2,3
	.word	5217
	.byte	11
	.word	5217
	.byte	13
	.byte	'Os_MeterInfoRefType',0,12,203,2,50
	.word	5415
	.byte	13
	.byte	'EventMaskType',0,12,206,2,15
	.word	141
	.byte	13
	.byte	'Os_imaskType',0,12,211,2,16
	.word	810
	.byte	20
	.byte	'Os_ISRDynType_s',0,12,213,2,16,48,8
	.byte	'meter',0
	.word	5217
	.byte	48,2,35,0,0,13
	.byte	'Os_ISRDynType',0,12,215,2,3
	.word	5494
	.byte	11
	.word	5494
	.byte	9
	.word	5555
	.byte	20
	.byte	'Os_ISRType_s',0,12,216,2,16,24,8
	.byte	'entry_function',0
	.word	4582
	.byte	4,2,35,0,8
	.byte	'dynamic',0
	.word	5560
	.byte	4,2,35,4,8
	.byte	'imask',0
	.word	810
	.byte	4,2,35,8,8
	.byte	'stackbudget',0
	.word	4489
	.byte	8,2,35,12,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,20,8
	.byte	'application',0
	.word	141
	.byte	1,2,35,21,0,13
	.byte	'Os_ISRType',0,12,223,2,3
	.word	5565
	.byte	11
	.word	4574
	.byte	9
	.word	5565
	.byte	11
	.word	5724
	.byte	13
	.byte	'ISRType',0,12,224,2,46
	.word	5729
	.byte	13
	.byte	'Os_bitmask',0,12,239,2,22
	.word	810
	.byte	13
	.byte	'Os_pset0Type',0,12,240,2,20
	.word	810
	.byte	13
	.byte	'Os_pset1Type',0,12,241,2,20
	.word	810
	.byte	13
	.byte	'Os_pset2Type',0,12,242,2,20
	.word	810
	.byte	22,12,243,2,9,4,8
	.byte	'p0',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'p1',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'p2',0
	.word	810
	.byte	4,2,35,0,0,13
	.byte	'Os_psetType',0,12,247,2,3
	.word	5837
	.byte	22,12,249,2,9,4,8
	.byte	't0',0
	.word	810
	.byte	4,2,35,0,8
	.byte	't1',0
	.word	810
	.byte	4,2,35,0,8
	.byte	't2',0
	.word	810
	.byte	4,2,35,0,0,13
	.byte	'Os_tpmaskType',0,12,253,2,3
	.word	5901
	.byte	13
	.byte	'Os_ActivationCountType',0,12,254,2,23
	.word	141
	.byte	20
	.byte	'Os_TaskDynType_s',0,12,128,3,16,120,8
	.byte	'terminate_jump_buf',0
	.word	4438
	.byte	68,2,35,0,8
	.byte	'meter',0
	.word	5217
	.byte	48,2,35,68,8
	.byte	'activation_count',0
	.word	141
	.byte	1,2,35,116,0,13
	.byte	'Os_TaskDynType',0,12,132,3,3
	.word	5999
	.byte	14,68
	.word	4407
	.byte	15,0,0,11
	.word	5999
	.byte	9
	.word	6125
	.byte	20
	.byte	'Os_TaskType_s',0,12,134,3,16,40,8
	.byte	'dynamic',0
	.word	6130
	.byte	4,2,35,0,8
	.byte	'entry_function',0
	.word	4582
	.byte	4,2,35,4,8
	.byte	'pset',0
	.word	5837
	.byte	4,2,35,8,8
	.byte	'base_tpmask',0
	.word	5901
	.byte	4,2,35,12,8
	.byte	'tpmask',0
	.word	5901
	.byte	4,2,35,16,8
	.byte	'core_id',0
	.word	826
	.byte	2,2,35,20,8
	.byte	'index',0
	.word	810
	.byte	4,2,35,24,8
	.byte	'stackbudget',0
	.word	4489
	.byte	8,2,35,28,8
	.byte	'activation_count',0
	.word	141
	.byte	1,2,35,36,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,37,8
	.byte	'application',0
	.word	141
	.byte	1,2,35,38,0,13
	.byte	'Os_TaskType',0,12,146,3,3
	.word	6135
	.byte	9
	.word	6135
	.byte	11
	.word	6385
	.byte	13
	.byte	'TaskType',0,12,147,3,47
	.word	6390
	.byte	23
	.byte	'Os_TaskStateType',0,12,155,3,6,4,6
	.byte	'SUSPENDED',0,0,6
	.byte	'READY',0,1,6
	.byte	'WAITING',0,2,6
	.byte	'RUNNING',0,3,0,13
	.byte	'TaskStateType',0,12,156,3,31
	.word	6413
	.byte	22,12,167,3,3,4,8
	.byte	'tpmask',0
	.word	5901
	.byte	4,2,35,0,0,20
	.byte	'Os_ResourceDynType_s',0,12,166,3,16,4,8
	.byte	'saved_priority',0
	.word	6500
	.byte	4,2,35,0,0,13
	.byte	'Os_ResourceDynType',0,12,170,3,3
	.word	6523
	.byte	11
	.word	6523
	.byte	9
	.word	6603
	.byte	20
	.byte	'Os_ResourceType_s',0,12,171,3,16,12,8
	.byte	'dynamic',0
	.word	6608
	.byte	4,2,35,0,8
	.byte	'tpmask',0
	.word	5901
	.byte	4,2,35,4,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,8,0,13
	.byte	'Os_ResourceType',0,12,175,3,3
	.word	6613
	.byte	7,12,181,3,9,12,8
	.byte	'maxallowedvalue',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'ticksperbase',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'mincycle',0
	.word	810
	.byte	4,2,35,8,0,13
	.byte	'AlarmBaseType',0,12,185,3,3
	.word	6712
	.byte	7,12,206,3,9,8,8
	.byte	'Running',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'Pending',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'Delay',0
	.word	810
	.byte	4,2,35,4,0,13
	.byte	'Os_CounterStatusType',0,12,210,3,3
	.word	6807
	.byte	24
	.word	141
	.byte	1,1,11
	.word	6893
	.byte	13
	.byte	'Os_CounterIncrAdvType',0,12,217,3,22
	.word	6900
	.byte	20
	.byte	's_swd',0,12,222,3,12,4,8
	.byte	'count',0
	.word	810
	.byte	4,2,35,0,0,22,12,221,3,3,4,8
	.byte	'sw',0
	.word	6936
	.byte	4,2,35,0,0,20
	.byte	'Os_CounterDynType_s',0,12,220,3,16,4,8
	.byte	'type_dependent',0
	.word	6964
	.byte	4,2,35,0,0,13
	.byte	'Os_CounterDynType',0,12,226,3,3
	.word	6983
	.byte	11
	.word	6983
	.byte	9
	.word	7061
	.byte	20
	.byte	'Os_CounterType_s',0,12,227,3,16,28,8
	.byte	'dynamic',0
	.word	7066
	.byte	4,2,35,0,8
	.byte	'advincr',0
	.word	6905
	.byte	4,2,35,4,8
	.byte	'base',0
	.word	6712
	.byte	12,2,35,8,8
	.byte	'core',0
	.word	5163
	.byte	4,2,35,20,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,24,8
	.byte	'application',0
	.word	141
	.byte	1,2,35,25,0,13
	.byte	'Os_CounterType',0,12,234,3,3
	.word	7071
	.byte	11
	.word	6893
	.byte	9
	.word	7071
	.byte	11
	.word	7223
	.byte	13
	.byte	'CounterType',0,12,235,3,52
	.word	7228
	.byte	23
	.byte	'Os_ScheduleTableStatusType',0,12,240,3,6,4,6
	.byte	'SCHEDULETABLE_STOPPED',0,0,6
	.byte	'SCHEDULETABLE_NEXT',0,1,6
	.byte	'SCHEDULETABLE_WAITING',0,2,6
	.byte	'SCHEDULETABLE_RUNNING',0,3,6
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,13
	.byte	'ScheduleTableStatusType',0,12,241,3,41
	.word	7254
	.byte	9
	.word	.L79-.L24
	.byte	11
	.word	7454
	.byte	13
	.byte	'ScheduleTableType',0,12,128,4,58
	.word	7459
	.byte	20
	.byte	'Os_ScheduleTableDynType_s',0,12,130,4,16,16,8
	.byte	'match',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'next',0
	.word	7464
	.byte	4,2,35,4,8
	.byte	'state',0
	.word	7254
	.byte	4,2,35,8,8
	.byte	'config',0
	.word	826
	.byte	2,2,35,12,0,11
	.word	7491
	.byte	9
	.word	7584
.L79:
	.byte	20
	.byte	'Os_ScheduleTableType_s',0,12,247,3,16,16,8
	.byte	'dynamic',0
	.word	7589
	.byte	4,2,35,0,8
	.byte	'counter',0
	.word	7233
	.byte	4,2,35,4,8
	.byte	'repeat',0
	.word	141
	.byte	1,2,35,8,8
	.byte	'config',0
	.word	826
	.byte	2,2,35,10,8
	.byte	'initial',0
	.word	141
	.byte	1,2,35,12,8
	.byte	'access',0
	.word	141
	.byte	1,2,35,13,8
	.byte	'application',0
	.word	141
	.byte	1,2,35,14,0,13
	.byte	'Os_ScheduleTableType',0,12,255,3,3
	.word	7594
	.byte	9
	.word	7594
	.byte	11
	.word	7774
	.byte	9
	.word	7071
	.byte	11
	.word	7784
	.byte	25
	.word	4887
	.byte	25
	.word	5837
	.byte	25
	.word	5734
	.byte	25
	.word	6395
	.byte	25
	.word	5901
	.byte	25
	.word	141
	.byte	25
	.word	6395
	.byte	20
	.byte	'Os_ControlledCoreType_s',0,12,251,6,16,112,8
	.byte	'TrapInfo',0
	.word	4318
	.byte	8,2,35,0,8
	.byte	'lock_taskaccess',0
	.word	7794
	.byte	4,2,35,8,8
	.byte	'ReadyTasks',0
	.word	7799
	.byte	4,2,35,12,8
	.byte	'RunningISR',0
	.word	7804
	.byte	4,2,35,16,8
	.byte	'RunningTask',0
	.word	7809
	.byte	4,2,35,20,8
	.byte	'RunningTPMask',0
	.word	7814
	.byte	4,2,35,24,8
	.byte	'CurrentMeteredObject',0
	.word	5420
	.byte	4,2,35,28,8
	.byte	'IdleMeter',0
	.word	5217
	.byte	48,2,35,32,8
	.byte	'AppAccess',0
	.word	141
	.byte	1,2,35,80,8
	.byte	'AppOverride',0
	.word	7819
	.byte	1,2,35,81,8
	.byte	'GetStackValueAdjust',0
	.word	4489
	.byte	8,2,35,84,8
	.byte	'InErrorHook',0
	.word	141
	.byte	1,2,35,92,8
	.byte	'ChainTaskRef',0
	.word	7824
	.byte	4,2,35,96,8
	.byte	'GetStackUsageAdjust',0
	.word	4489
	.byte	8,2,35,100,8
	.byte	'InProtectionHook',0
	.word	141
	.byte	1,2,35,108,8
	.byte	'CoreIsActive',0
	.word	141
	.byte	1,2,35,109,8
	.byte	'InShutdownHook',0
	.word	141
	.byte	1,2,35,110,0,13
	.byte	'Os_ControlledCoreType',0,12,141,7,3
	.word	7829
	.byte	11
	.word	810
	.byte	9
	.word	5565
	.byte	11
	.word	8285
	.byte	9
	.word	6135
	.byte	11
	.word	8295
	.byte	11
	.word	5217
	.byte	20
	.byte	'Os_AnyCoreType_s',0,12,151,7,16,96,8
	.byte	'DisableAllImask',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'SuspendAllImask',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'SuspendOSImask',0
	.word	810
	.byte	4,2,35,8,8
	.byte	'DisableAllCount',0
	.word	810
	.byte	4,2,35,12,8
	.byte	'SuspendAllCount',0
	.word	810
	.byte	4,2,35,16,8
	.byte	'SuspendOSCount',0
	.word	810
	.byte	4,2,35,20,8
	.byte	'RestartJumpBuf',0
	.word	4438
	.byte	68,2,35,24,8
	.byte	'Restartable',0
	.word	141
	.byte	1,2,35,92,0,13
	.byte	'Os_AnyCoreType',0,12,160,7,3
	.word	8310
	.byte	13
	.byte	'Can_TxObjPriorityClassType',0,13,219,3,16
	.word	810
	.byte	20
	.byte	'Can_TxHwObjectConfigType',0,13,231,3,16,8,8
	.byte	'MsgObjId',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'HwControllerId',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'TxObjPriorityClass',0
	.word	810
	.byte	4,2,35,4,0,13
	.byte	'Can_TxHwObjectConfigType',0,13,252,3,3
	.word	8587
	.byte	20
	.byte	'Can_RxHwObjectConfigType',0,13,129,4,16,12,8
	.byte	'MaskRef',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'MsgId',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'MsgObjId',0
	.word	141
	.byte	1,2,35,8,8
	.byte	'HwControllerId',0
	.word	141
	.byte	1,2,35,9,0,13
	.byte	'Can_RxHwObjectConfigType',0,13,147,4,3
	.word	8723
	.byte	14,4
	.word	141
	.byte	15,3,0,20
	.byte	'Can_ControllerMOMapConfigType',0,13,181,4,16,4,8
	.byte	'ControllerMOMap',0
	.word	8863
	.byte	4,2,35,0,0,13
	.byte	'Can_ControllerMOMapConfigType',0,13,184,4,3
	.word	8872
	.byte	20
	.byte	'Can_NPCRValueType',0,13,188,4,16,2,8
	.byte	'Can_NPCRValue',0
	.word	826
	.byte	2,2,35,0,0,13
	.byte	'Can_NPCRValueType',0,13,191,4,3
	.word	8973
	.byte	20
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,194,4,16,8,8
	.byte	'CanControllerBaudrate',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'CanControllerBaudrateCfg',0
	.word	826
	.byte	2,2,35,4,0,13
	.byte	'Can_17_MCanP_ControllerBaudrateConfigType',0,13,198,4,3
	.word	9048
	.byte	9
	.word	9048
	.byte	11
	.word	9213
	.byte	20
	.byte	'Can_BaudrateConfigPtrType',0,13,201,4,16,4,8
	.byte	'Can_kBaudrateConfigPtr',0
	.word	9218
	.byte	4,2,35,0,0,13
	.byte	'Can_BaudrateConfigPtrType',0,13,204,4,3
	.word	9223
	.byte	20
	.byte	'Can_EventHandlingType',0,13,226,4,16,4,8
	.byte	'CanEventType',0
	.word	8863
	.byte	4,2,35,0,0,13
	.byte	'Can_EventHandlingType',0,13,229,4,3
	.word	9323
	.byte	13
	.byte	'Rte_TransformerErrorCode',0,14,130,1,15
	.word	141
	.byte	13
	.byte	'Rte_TransformerClass',0,14,131,1,15
	.word	141
	.byte	7,14,168,1,9,12,8
	.byte	'in',0
	.word	5163
	.byte	4,2,35,0,8
	.byte	'out',0
	.word	5163
	.byte	4,2,35,4,8
	.byte	'used',0
	.word	826
	.byte	2,2,35,8,8
	.byte	'lost_data',0
	.word	141
	.byte	1,2,35,10,0,13
	.byte	'Rte_QDynType',0,14,173,1,3
	.word	9469
	.byte	5,14,175,1,9,4,6
	.byte	'RTE_DRA',0,0,6
	.byte	'RTE_WOWP',0,1,6
	.byte	'RTE_TASK',0,2,6
	.byte	'RTE_ARE',0,3,6
	.byte	'RTE_EV',0,4,6
	.byte	'RTE_MSI',0,5,0,13
	.byte	'Rte_NotificationType',0,14,182,1,3
	.word	9556
	.byte	14,128,8
	.word	141
	.byte	15,255,7,0,13
	.byte	'Impl_NVM_DstPtrType_1024',0,15,50,15
	.word	9654
	.byte	13
	.byte	'CanIf_u32_impl',0,15,69,16
	.word	810
	.byte	13
	.byte	'CanIf_u16_impl',0,15,71,16
	.word	826
	.byte	13
	.byte	'CanIf_u8_impl',0,15,73,15
	.word	141
	.byte	13
	.byte	'CanIf_ControllerModeType_Enum_impl',0,15,88,15
	.word	141
	.byte	13
	.byte	'CanIf_PduModeType_Enum_impl',0,15,90,15
	.word	141
	.byte	7,15,92,9,2,8
	.byte	'DeviceMode',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'ChannelMode',0
	.word	141
	.byte	1,2,35,1,0,13
	.byte	'CanIf_ControllerStateType_struct_impl',0,15,95,3
	.word	9845
	.byte	13
	.byte	'CanIf_NotifStatusType_Enum_impl',0,15,100,15
	.word	141
	.byte	13
	.byte	'CanSM_boolean_Impl',0,15,120,15
	.word	141
	.byte	13
	.byte	'CanSM_u8_Impl',0,15,123,15
	.word	141
	.byte	13
	.byte	'CanSM_BusOffRecoveryStateType_Enum_impl',0,15,128,1,15
	.word	141
	.byte	13
	.byte	'CanSM_NetworkModeStateType_Enum_impl',0,15,132,1,15
	.word	141
	.byte	13
	.byte	'CanSM_u16_Impl',0,15,136,1,16
	.word	826
	.byte	13
	.byte	'CanSM_TimerStateType_Enum_impl',0,15,138,1,15
	.word	141
	.byte	7,15,140,1,9,4,8
	.byte	'cntTick_u16',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'stTimer',0
	.word	141
	.byte	1,2,35,2,0,13
	.byte	'CanSM_TimerConfig_tst_struct_impl',0,15,143,1,3
	.word	10186
	.byte	13
	.byte	'Com_impl_u16',0,15,154,1,16
	.word	826
	.byte	13
	.byte	'Com_impl_u8',0,15,157,1,15
	.word	141
	.byte	13
	.byte	'ComM_uint32_Impl',0,15,173,1,16
	.word	810
	.byte	13
	.byte	'ComM_uint16_Impl',0,15,175,1,16
	.word	826
	.byte	13
	.byte	'ComM_uint8_Impl',0,15,177,1,15
	.word	141
	.byte	13
	.byte	'ComM_bool_Impl',0,15,179,1,15
	.word	141
	.byte	7,15,181,1,9,24,8
	.byte	'ChannelState_e',0
	.word	810
	.byte	4,2,35,0,8
	.byte	'LightTimeoutCtr_u32',0
	.word	810
	.byte	4,2,35,4,8
	.byte	'MinFullComTimeoutCtr_u16',0
	.word	826
	.byte	2,2,35,8,8
	.byte	'ChannelMode_u8',0
	.word	141
	.byte	1,2,35,10,8
	.byte	'BusSmMode_u8',0
	.word	141
	.byte	1,2,35,11,8
	.byte	'UserRequestCtr_u8',0
	.word	141
	.byte	1,2,35,12,8
	.byte	'PassiveRequestState_u8',0
	.word	141
	.byte	1,2,35,13,8
	.byte	'PncRequestCtr_u8',0
	.word	141
	.byte	1,2,35,14,8
	.byte	'InhibitionReqStatus_u8',0
	.word	141
	.byte	1,2,35,15,8
	.byte	'NmNetworkRequestStatus_b',0
	.word	141
	.byte	1,2,35,16,8
	.byte	'DiagnosticRequestState_b',0
	.word	141
	.byte	1,2,35,17,8
	.byte	'CommunicationAllowed_b',0
	.word	141
	.byte	1,2,35,18,8
	.byte	'NmBusSleepIndicationStatus_b',0
	.word	141
	.byte	1,2,35,19,8
	.byte	'NmPrepareBusSleepIndicationStatus_b',0
	.word	141
	.byte	1,2,35,20,8
	.byte	'NmNetworkModeStatus_b',0
	.word	141
	.byte	1,2,35,21,0,13
	.byte	'ComM_ChannelStruct_Impl',0,15,197,1,3
	.word	10418
	.byte	7,15,206,1,9,10,8
	.byte	'WakeUpInhibitionCtr_u16',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'LimitToNoComCtr_u16',0
	.word	826
	.byte	2,2,35,2,8
	.byte	'RequestedUserMode_t',0
	.word	141
	.byte	1,2,35,4,8
	.byte	'IndicatedUserMode_t',0
	.word	141
	.byte	1,2,35,5,8
	.byte	'numChannelsInFullCom_u8',0
	.word	141
	.byte	1,2,35,6,8
	.byte	'numChannelsInSilentCom_u8',0
	.word	141
	.byte	1,2,35,7,8
	.byte	'numChannelsInNoCom_u8',0
	.word	141
	.byte	1,2,35,8,0,13
	.byte	'ComM_UserStruct_Impl',0,15,214,1,3
	.word	10922
	.byte	13
	.byte	'Dcm_IOOperationResponseType',0,15,252,1,15
	.word	141
	.byte	13
	.byte	'Dcm_RequestDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspRequestRoutineResultsOutSignal_0PrimitivType',0
	.byte	15,138,2,15
	.word	141
	.byte	13
	.byte	'Dcm_StartDataIn_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineInSignalPrimitivType',0,15,146,2,15
	.word	141
	.byte	13
	.byte	'Dcm_StartDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStartRoutineOutSignalPrimitivType',0,15,150,2,15
	.word	141
	.byte	13
	.byte	'Dcm_StopDataOut_DcmDspRoutine_DriveVacuumPump_DcmDspStopRoutineOutSignalPrimitivType',0,15,154,2,15
	.word	141
	.byte	13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockNative_1024_Type',0,15,243,3,34
	.word	9665
	.byte	14,128,8
	.word	141
	.byte	15,255,7,0,13
	.byte	'Rte_PimType_ASW_NVM_ASW_NVM_BlockRedundant_1024_Type',0,15,246,3,34
	.word	9665
	.byte	5,1,216,1,9,4,6
	.byte	'XCP_BG_IDLE',0,0,6
	.byte	'XCP_BG_CHKSUM',0,1,6
	.byte	'XCP_BG_MEM_WRITE',0,2,6
	.byte	'XCP_BG_REPEAT_CMD',0,3,6
	.byte	'XCP_BG_DO_DISCONNECT',0,4,6
	.byte	'XCP_BG_CANCEL_REQ',0,5,0,13
	.byte	'Xcp_BgActivity_t',0,1,224,1,3
	.word	11740
	.byte	18,1,1,17
	.word	3217
	.byte	17
	.word	141
	.byte	0,11
	.word	11885
	.byte	13
	.byte	'Xcp_CmdFunctionPtr',0,1,230,1,16
	.word	11899
	.byte	7,1,241,1,9,8,8
	.byte	'WritePos_u16',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'ReadPos_u16',0
	.word	826
	.byte	2,2,35,2,8
	.byte	'ReadPos_OdtNum_u16',0
	.word	826
	.byte	2,2,35,4,8
	.byte	'QueSize_u16',0
	.word	826
	.byte	2,2,35,6,0,13
	.byte	'Xcp_Que_t',0,1,247,1,3
	.word	11932
	.byte	7,1,250,1,9,24,8
	.byte	'XcpState_en',0
	.word	1663
	.byte	4,2,35,0,8
	.byte	'ConnectedTlId_u8',0
	.word	141
	.byte	1,2,35,4,8
	.byte	'ResourceProtStatus_u8',0
	.word	141
	.byte	1,2,35,5,8
	.byte	'Mta',0
	.word	848
	.byte	8,2,35,8,8
	.byte	'MaxDto_u16',0
	.word	826
	.byte	2,2,35,16,8
	.byte	'MaxDtoAligned_u16',0
	.word	826
	.byte	2,2,35,18,8
	.byte	'MaxCto_u8',0
	.word	141
	.byte	1,2,35,20,0,13
	.byte	'Xcp_Session_t',0,1,138,2,2
	.word	12050
	.byte	7,1,149,2,9,12,8
	.byte	'Buffer_au8',0
	.word	3136
	.byte	8,2,35,0,8
	.byte	'Length_u32',0
	.word	810
	.byte	4,2,35,8,0,13
	.byte	'Xcp_CtoMax_t',0,1,153,2,2
	.word	12237
	.byte	14,255,1
	.word	141
	.byte	15,254,1,0,7,1,157,2,9,132,2,8
	.byte	'UploadRunning_b',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'RemainingSize_u8',0
	.word	141
	.byte	1,2,35,1,8
	.byte	'DownloadSize_u8',0
	.word	141
	.byte	1,2,35,2,8
	.byte	'ReceivedSize_u8',0
	.word	141
	.byte	1,2,35,3,8
	.byte	'DownloadBuffer_au8',0
	.word	12306
	.byte	255,1,2,35,4,0,13
	.byte	'Xcp_Mem_t',0,1,178,2,2
	.word	12317
	.byte	7,1,183,2,9,2,8
	.byte	'SeedWaitingKey_b',0
	.word	141
	.byte	1,2,35,0,8
	.byte	'SeedRemaingSize_u8',0
	.word	141
	.byte	1,2,35,1,0,13
	.byte	'Xcp_SeedAndKey_t',0,1,187,2,2
	.word	12474
	.byte	7,1,192,2,9,4,8
	.byte	'BlockSize_u32',0
	.word	810
	.byte	4,2,35,0,0,13
	.byte	'Xcp_Checksum_t',0,1,198,2,2
	.word	12561
	.byte	7,1,203,2,9,18,8
	.byte	'Xcp_Debug_TransmitOkCtr',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'Xcp_Debug_TransmitNotOkCtr',0
	.word	826
	.byte	2,2,35,2,8
	.byte	'Xcp_Debug_SendResTxConfCtr',0
	.word	826
	.byte	2,2,35,4,8
	.byte	'Xcp_Debug_SendResCtr',0
	.word	826
	.byte	2,2,35,6,8
	.byte	'Xcp_Debug_SendEvTxConfCtr',0
	.word	826
	.byte	2,2,35,8,8
	.byte	'Xcp_Debug_SendEvCtr',0
	.word	826
	.byte	2,2,35,10,8
	.byte	'Xcp_Debug_SendDaqTxConfCtr',0
	.word	826
	.byte	2,2,35,12,8
	.byte	'Xcp_Debug_SendDaqCtr',0
	.word	826
	.byte	2,2,35,14,8
	.byte	'Xcp_Debug_TxConfCtr',0
	.word	826
	.byte	2,2,35,16,0,13
	.byte	'Xcp_Debug_t',0,1,216,2,2
	.word	12615
	.byte	7,1,225,2,9,8,8
	.byte	'OdtEntryPos_u16',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'OdtEntryMax_u16',0
	.word	826
	.byte	2,2,35,2,8
	.byte	'DaqListNum_u16',0
	.word	826
	.byte	2,2,35,4,8
	.byte	'AbsOdtNum_u16',0
	.word	826
	.byte	2,2,35,6,0,13
	.byte	'Xcp_SelectedOdtEntry_t',0,1,231,2,2
	.word	12937
	.byte	7,1,234,2,9,6,8
	.byte	'OdtEntryFirst_u16',0
	.word	826
	.byte	2,2,35,0,8
	.byte	'OdtEntryCnt_u8',0
	.word	141
	.byte	1,2,35,2,8
	.byte	'CopyRoutine_u8',0
	.word	141
	.byte	1,2,35,3,8
	.byte	'Length_u16',0
	.word	826
	.byte	2,2,35,4,0,13
	.byte	'Xcp_Odt_t',0,1,240,2,2
	.word	13073
	.byte	25
	.word	141
	.byte	25
	.word	141
	.byte	7,1,254,2,9,24,8
	.byte	'DaqListQue_p',0
	.word	993
	.byte	4,2,35,0,8
	.byte	'DaqListQuePos',0
	.word	11932
	.byte	8,2,35,4,8
	.byte	'OdtFirst_u16',0
	.word	826
	.byte	2,2,35,12,8
	.byte	'EventChannelNum_u16',0
	.word	826
	.byte	2,2,35,14,8
	.byte	'OdtCnt_u8',0
	.word	141
	.byte	1,2,35,16,8
	.byte	'XcpTxPduId',0
	.word	141
	.byte	1,2,35,17,8
	.byte	'Prescaler_u8',0
	.word	141
	.byte	1,2,35,18,8
	.byte	'CycleCnt_u8',0
	.word	141
	.byte	1,2,35,19,8
	.byte	'Priority_u8',0
	.word	141
	.byte	1,2,35,20,8
	.byte	'Flags_u8',0
	.word	141
	.byte	1,2,35,21,8
	.byte	'Mode_u8',0
	.word	13194
	.byte	1,2,35,22,8
	.byte	'CurrentlyRunning_b',0
	.word	13199
	.byte	1,2,35,23,0,13
	.byte	'Xcp_DaqList_t',0,1,143,3,2
	.word	13204
	.byte	11
	.word	13204
	.byte	11
	.word	13073
	.byte	11
	.word	810
	.byte	11
	.word	826
	.byte	7,1,146,3,9,56,8
	.byte	'DaqList_p',0
	.word	13496
	.byte	4,2,35,0,8
	.byte	'Odt_p',0
	.word	13501
	.byte	4,2,35,4,8
	.byte	'OdtEntryAddress_p',0
	.word	13506
	.byte	4,2,35,8,8
	.byte	'OdtEntrySize_p',0
	.word	993
	.byte	4,2,35,12,8
	.byte	'PriorityList_p',0
	.word	13511
	.byte	4,2,35,16,8
	.byte	'DaqQue_p',0
	.word	993
	.byte	4,2,35,20,8
	.byte	'DaqListCnt_u16',0
	.word	826
	.byte	2,2,35,24,8
	.byte	'OdtCnt_u16',0
	.word	826
	.byte	2,2,35,26,8
	.byte	'OdtEntryCnt_u16',0
	.word	826
	.byte	2,2,35,28,8
	.byte	'SelectedOdtEntry',0
	.word	12937
	.byte	8,2,35,30,8
	.byte	'DaqRamPtr_pu8',0
	.word	993
	.byte	4,2,35,40,8
	.byte	'DaqRamSize_u32',0
	.word	810
	.byte	4,2,35,44,8
	.byte	'DaqListSendingCnt_u16',0
	.word	826
	.byte	2,2,35,48,8
	.byte	'DaqListSending_u16',0
	.word	826
	.byte	2,2,35,50,8
	.byte	'DaqState_en',0
	.word	1898
	.byte	4,2,35,52,0,13
	.byte	'Xcp_DaqConfig_t',0,1,180,3,2
	.word	13516
	.byte	7,1,225,3,9,80,8
	.byte	'Session',0
	.word	12050
	.byte	24,2,35,0,8
	.byte	'DaqConfig',0
	.word	13516
	.byte	56,2,35,24,0,13
	.byte	'Xcp_NoInit_t',0,1,234,3,2
	.word	13897
	.byte	14,80
	.word	13897
	.byte	15,0,0,26
	.byte	'Xcp_NoInit',0,1,158,4,29
	.word	13962
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L25:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,58,15,59,15,57,15
	.byte	54,15,39,12,63,12,60,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,4,1,58,15,59,15,57,15,11,15,0,0,6
	.byte	40,0,3,8,28,13,0,0,7,19,1,58,15,59,15,57,15,11,15,0,0,8,13,0,3,8,73,19,11,15,56,9,0,0,9,38,0,73,19,0,0
	.byte	10,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,11,15,0,73,19,0,0,12,21,0,54,15,0,0,13
	.byte	22,0,3,8,58,15,59,15,57,15,73,19,0,0,14,1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,21,1,73,19,54,15,39,12
	.byte	0,0,17,5,0,73,19,0,0,18,21,1,54,15,39,12,0,0,19,21,0,54,15,39,12,0,0,20,19,1,3,8,58,15,59,15,57,15,11
	.byte	15,0,0,21,59,0,3,8,0,0,22,23,1,58,15,59,15,57,15,11,15,0,0,23,4,1,3,8,58,15,59,15,57,15,11,15,0,0,24,21
	.byte	0,73,19,54,15,39,12,0,0,25,53,0,73,19,0,0,26,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L26:
	.word	.L81-.L80
.L80:
	.half	3
	.word	.L83-.L82
.L82:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\api\\Xcp_Priv.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\api\\Xcp_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\api\\Xcp_Commands.h',0,0,0,0
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Platform\\Platform_Types.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Std_Types.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\ComStack\\ComStack_Cfg.h',0,0,0,0
	.byte	'.\\BSW\\src\\BSW\\Gen\\Xcp\\Xcp_Cfg.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\rba_BswSrv.h',0,0,0,0
	.byte	'.\\Integration\\BSW\\Include\\Can_GeneralTypes.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\RTOS_T\\Gen\\inc\\Os.h',0,0,0,0
	.byte	'.\\Targets\\TC275\\MCAL\\MCAL_Modules\\Can_17_MCanP\\inc\\Can_17_MCanP.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte.h',0,0,0,0
	.byte	'.\\RTE\\gen\\Rte_Type.h',0,0,0,0,0
.L83:
.L81:
	.sdecl	'.debug_info',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_info'
.L27:
	.word	388
	.half	3
	.word	.L28
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L30,.L29
	.byte	2
	.word	.L23
	.byte	3
	.byte	'Xcp_DaqWriteDaq',0,1,110,15
	.word	.L37
	.byte	1,1,1
	.word	.L22,.L38,.L21
	.byte	4
	.byte	'Address',0,1,110,38
	.word	.L39,.L40
	.byte	4
	.byte	'Extension',0,1,110,53
	.word	.L41,.L42
	.byte	4
	.byte	'Size',0,1,110,70
	.word	.L41,.L43
	.byte	4
	.byte	'protLayerId',0,1,110,82
	.word	.L41,.L44
	.byte	5
	.word	.L22,.L38
	.byte	6
	.byte	'Error',0,1,113,17
	.word	.L37,.L45
	.byte	6
	.byte	'CurrentDaqListNum',0,1,114,10
	.word	.L46,.L47
	.byte	6
	.byte	'LocalAddress',0,1,115,18
	.word	.L48,.L49
	.byte	5
	.word	.L50,.L11
	.byte	6
	.byte	'OdtEntryPos',0,1,199,1,14
	.word	.L46,.L51
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_abbrev'
.L28:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_line'
.L29:
	.word	.L85-.L84
.L84:
	.half	3
	.word	.L87-.L86
.L86:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0,0,0,0,0
.L87:
	.byte	5,15,7,0,5,2
	.word	.L22
	.byte	3,237,0,1,5,9,9
	.half	.L72-.L22
	.byte	3,8,1,5,26,9
	.half	.L73-.L72
	.byte	3,1,1,9
	.half	.L74-.L73
	.byte	3,1,1,5,33,9
	.half	.L88-.L74
	.byte	3,3,1,5,23,9
	.half	.L89-.L88
	.byte	1,5,33,9
	.half	.L90-.L89
	.byte	1,5,73,9
	.half	.L91-.L90
	.byte	1,5,30,9
	.half	.L75-.L91
	.byte	3,3,1,5,57,9
	.half	.L92-.L75
	.byte	1,5,127,9
	.half	.L93-.L92
	.byte	1,5,3,9
	.half	.L94-.L93
	.byte	1,5,11,7,9
	.half	.L95-.L94
	.byte	3,2,1,5,36,9
	.half	.L96-.L95
	.byte	1,5,8,9
	.half	.L10-.L96
	.byte	3,4,1,5,11,7,9
	.half	.L97-.L10
	.byte	3,2,1,5,33,9
	.half	.L98-.L97
	.byte	1,5,55,9
	.half	.L12-.L98
	.byte	3,26,1,5,71,9
	.half	.L69-.L12
	.byte	1,5,5,9
	.half	.L71-.L69
	.byte	1,5,55,7,9
	.half	.L99-.L71
	.byte	3,2,1,5,101,9
	.half	.L100-.L99
	.byte	1,5,53,9
	.half	.L101-.L100
	.byte	1,5,14,9
	.half	.L102-.L101
	.byte	3,2,1,5,12,9
	.half	.L103-.L102
	.byte	1,5,14,7,9
	.half	.L104-.L103
	.byte	3,1,1,5,94,9
	.half	.L105-.L104
	.byte	1,5,15,9
	.half	.L106-.L105
	.byte	3,3,1,5,18,9
	.half	.L14-.L106
	.byte	3,29,1,5,5,9
	.half	.L107-.L14
	.byte	1,5,78,7,9
	.half	.L50-.L107
	.byte	3,2,1,5,7,9
	.half	.L76-.L50
	.byte	3,1,1,5,57,9
	.half	.L108-.L76
	.byte	1,5,7,9
	.half	.L109-.L108
	.byte	3,4,1,5,57,9
	.half	.L110-.L109
	.byte	1,9
	.half	.L111-.L110
	.byte	3,3,1,5,73,9
	.half	.L77-.L111
	.byte	1,5,3,9
	.half	.L11-.L77
	.byte	3,4,1,5,1,9
	.half	.L18-.L11
	.byte	3,1,1,7,9
	.half	.L31-.L18
	.byte	0,1,1
.L85:
	.sdecl	'.debug_ranges',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_ranges'
.L30:
	.word	-1,.L22,0,.L31-.L22,0,0
	.sdecl	'.debug_info',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_info'
.L32:
	.word	276
	.half	3
	.word	.L33
	.byte	4,1
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'C:\\Users\\HUR4HC\\Desktop\\Main_extract\\',0,12,1
	.word	.L35,.L34
	.byte	2
	.word	.L23
	.byte	3
	.byte	'Xcp_CmdWriteDaq',0,1,35,6,1,1,1
	.word	.L20,.L52,.L19
	.byte	4
	.byte	'XcpPacket',0,1,35,41
	.word	.L53,.L54
	.byte	4
	.byte	'protLayerId',0,1,35,58
	.word	.L41,.L55
	.byte	5
	.word	.L20,.L52
	.byte	6
	.byte	'CmdPtr',0,1,44,34
	.word	.L56,.L57
	.byte	6
	.byte	'Error',0,1,47,17
	.word	.L37,.L58
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_abbrev'
.L33:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_line'
.L34:
	.word	.L113-.L112
.L112:
	.half	3
	.word	.L115-.L114
.L114:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'BSW\\src\\BSW\\Gen\\Xcp\\src\\Xcp_CmdWriteDaq.c',0,0,0,0,0
.L115:
	.byte	5,6,7,0,5,2
	.word	.L20
	.byte	3,34,1,5,87,9
	.half	.L60-.L20
	.byte	3,9,1,5,17,9
	.half	.L61-.L60
	.byte	3,6,1,5,7,9
	.half	.L116-.L61
	.byte	1,5,17,9
	.half	.L117-.L116
	.byte	1,5,40,9
	.half	.L118-.L117
	.byte	1,5,56,9
	.half	.L119-.L118
	.byte	1,5,3,9
	.half	.L120-.L119
	.byte	1,5,11,7,9
	.half	.L121-.L120
	.byte	3,2,1,5,31,9
	.half	.L62-.L121
	.byte	1,5,62,9
	.half	.L2-.L62
	.byte	3,3,1,5,132,1,9
	.half	.L122-.L2
	.byte	1,5,8,9
	.half	.L123-.L122
	.byte	1,5,11,7,9
	.half	.L124-.L123
	.byte	3,2,1,5,36,9
	.half	.L63-.L124
	.byte	1,5,8,9
	.half	.L4-.L63
	.byte	3,4,1,5,11,7,9
	.half	.L125-.L4
	.byte	3,3,1,5,29,9
	.half	.L64-.L125
	.byte	1,5,35,9
	.half	.L6-.L64
	.byte	3,5,1,5,56,9
	.half	.L59-.L6
	.byte	1,5,82,9
	.half	.L126-.L59
	.byte	1,5,93,9
	.half	.L127-.L126
	.byte	1,5,16,9
	.half	.L3-.L127
	.byte	3,3,1,5,3,9
	.half	.L128-.L3
	.byte	1,5,20,7,9
	.half	.L129-.L128
	.byte	3,3,1,5,32,9
	.half	.L66-.L129
	.byte	1,5,27,9
	.half	.L8-.L66
	.byte	3,5,1,5,1,9
	.half	.L9-.L8
	.byte	3,5,1,7,9
	.half	.L36-.L9
	.byte	0,1,1
.L113:
	.sdecl	'.debug_ranges',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_ranges'
.L35:
	.word	-1,.L20,0,.L36-.L20,0,0
	.sdecl	'.debug_loc',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_loc'
.L57:
	.word	-1,.L20,.L61-.L20,.L52-.L20
	.half	1
	.byte	111
	.word	0,0
.L58:
	.word	-1,.L20,.L62-.L20,.L2-.L20
	.half	1
	.byte	82
	.word	.L63-.L20,.L4-.L20
	.half	1
	.byte	82
	.word	.L64-.L20,.L6-.L20
	.half	1
	.byte	82
	.word	.L3-.L20,.L66-.L20
	.half	1
	.byte	82
	.word	.L8-.L20,.L9-.L20
	.half	1
	.byte	82
	.word	0,0
.L54:
	.word	-1,.L20,0,.L3-.L20
	.half	1
	.byte	100
	.word	0,0
.L19:
	.word	-1,.L20,0,.L52-.L20
	.half	2
	.byte	138,0
	.word	0,0
.L55:
	.word	-1,.L20,0,.L59-.L20
	.half	1
	.byte	84
	.word	.L60-.L20,.L52-.L20
	.half	1
	.byte	88
	.word	.L65-.L20,.L3-.L20
	.half	1
	.byte	87
	.word	.L67-.L20,.L66-.L20
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_loc'
.L40:
	.word	-1,.L22,0,.L68-.L22
	.half	1
	.byte	84
	.word	0,0
.L47:
	.word	-1,.L22,.L75-.L22,.L38-.L22
	.half	1
	.byte	88
	.word	0,0
.L45:
	.word	-1,.L22,.L73-.L22,.L38-.L22
	.half	1
	.byte	89
	.word	.L78-.L22,.L38-.L22
	.half	1
	.byte	82
	.word	0,0
.L42:
	.word	-1,.L22,0,.L68-.L22
	.half	1
	.byte	85
	.word	.L70-.L22,.L71-.L22
	.half	1
	.byte	95
	.word	0,0
.L49:
	.word	-1,.L22,.L74-.L22,.L38-.L22
	.half	2
	.byte	144,37
	.word	0,0
.L51:
	.word	-1,.L22,.L76-.L22,.L77-.L22
	.half	1
	.byte	95
	.word	0,0
.L43:
	.word	-1,.L22,0,.L69-.L22
	.half	1
	.byte	86
	.word	.L72-.L22,.L38-.L22
	.half	1
	.byte	92
	.word	0,0
.L21:
	.word	-1,.L22,0,.L38-.L22
	.half	2
	.byte	138,0
	.word	0,0
.L44:
	.word	-1,.L22,0,.L69-.L22
	.half	1
	.byte	87
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L130:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Xcp_CmdWriteDaq')
	.sect	'.debug_frame'
	.word	12
	.word	.L130,.L20,.L52-.L20
	.sdecl	'.debug_frame',debug,cluster('Xcp_DaqWriteDaq')
	.sect	'.debug_frame'
	.word	12
	.word	.L130,.L22,.L38-.L22

; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   213  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   214  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   215  #define XCP_STOP_SEC_CODE
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   216  #include "Xcp_MemMap.h"
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   217  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   218  #else
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   219  /* HIS METRIC COMF VIOLATION IN Xcp_CmdWriteDaq.c: XCP_SYNCHRONOUS_DATA_ACQUISITION_DAQ is not enabled - no data is needed in this file */
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   220  #endif
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   221  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   222  
; BSW\src\BSW\Gen\Xcp\src\Xcp_CmdWriteDaq.c	   223  

	; Module end
